{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011858000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE379.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE379.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x05'", "DS1TRBAL": "b'\\xb3\\xf6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xb6\\x00\\t\\x02\\xb7\\x00\\x01\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n  THIS FILE CONTAINS A JCL PROCLIB CROSS REFERENCE SYSTEM\n  THAT WAS ORIGINALLY CONTRIBUTED TO THE SPLA TAPE IN JAN 80\n  BY:\n\n                 MR DEAN DAVIS\n                 CROWN ZELLERBACH\n                 NORH WEST DATA CENTER\n                 15500 SW FIRST AVENUE\n                 PORTLAND, OREGON 97201\n\n  HOWEVER DEAN IS NO LONGER WITH CROWN ZELLERBACH.\n\n  CONTENTS :\n   JCL PROCLIB CROSS REFERENCE SYSTEM\n       MEMBER  SAMPLJCL      CONTAINS SAMPLE JCL FOR EXECUTION\n       MEMBERS NSP011-NSP016 SOURCE THAT SHOULD BE ASSEMBLED IN ORDER\n       MEMBER  CBTJCL        CONTAINS CBT'S JCL FOR EXECUTION\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBTJCL": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//* $$$\n//* $$$ AUTHOR:    A. CASINGHINO\n//* $$$ DATE:      JULY 23, 1980\n//* $$$ MODIFIED:\n//* $$$ THIS PROC IS USED TO CREATE A JCL CROSS LISTING OF PROCLIBS\n//* $$$\n//CBT497   PROC SO=1,LIB='INVALID',V1=\n//IEFBR1#1 EXEC PGM=IEFBR14\n//DD1      DD   DSN=&&X,DISP=(NEW,PASS),SPACE=(TRK,(2,1,1)),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=1680),UNIT=SYSDA\n//CBT497   EXEC PGM=CBT491,PARM='PROCLIB1PROCLIB2',REGION=1024K\n//PROCLIB1 DD  DSN=&LIB,DISP=SHR,UNIT=SYSALLDA,VOL=SER=&V1\n//PROCLIB2 DD  DSN=&&X,DISP=(OLD,DELETE)\n//SYSOUT   DD  SYSOUT=&SO\n//SYSPRINT DD  SYSOUT=&SO\n//SYSPRNT1 DD  SYSOUT=&SO\n//SYSPRNT2 DD  SYSOUT=&SO\n//SYSPRNT3 DD  SYSOUT=&SO\n//SORTPRNT DD  SYSOUT=&SO\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,25),\n//             DCB=(RECFM=FB,LRECL=135,BLKSIZE=1350)\n//SORTIN   DD  UNIT=SYSDA,SPACE=(CYL,25),\n//             DCB=(RECFM=FB,LRECL=135,BLKSIZE=1350)\n//SORTOUT  DD  UNIT=SYSDA,SPACE=(CYL,25),\n//             DCB=(RECFM=FB,LRECL=135,BLKSIZE=1350)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,25)\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,25)\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,25)\n//SORTWK04 DD  UNIT=SYSDA,SPACE=(CYL,25)\n//SORTWK05 DD  UNIT=SYSDA,SPACE=(CYL,25)\n//SORTWK06 DD  UNIT=SYSDA,SPACE=(CYL,25)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXODUS": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO                                                          00001\n&NAME    EXODUS &REGS=,&RC=0,&LV=,&SP=0                                 00002\n.*                                                                      00003\n         GBLA  &ESAVEC(2),&ESAVEL,&ESAVEB(2)                            00004\n         GBLB  &ESAVES(3)                                               00005\n         GBLC  &ESAVEX,&ESAVEA                                          00006\n         LCLB  &D,&F                                                    00007\n         LCLC  &IDL                                                     00008\n.*                                                                      00009\n.*       EXODUS (EXTENDED RETURN) FUNCTION                              00010\n.*             REWRITTEN 09-01-74, MACRO LEVEL 3                        00011\n.*                                                                      00012\n.*       THIS MACRO SUPPORTS THE FOLLOWING MODES: REENTRANT AND         00013\n.*       NONREENTRANT TYPE IV SAVE AREAS.                      08-01-74 00014\n.*                                                                      00015\n.*       NOTE: THIS MACRO USES THE GENESIS RECURSIVE CALL FACILITY TO   00016\n.*             GENERATE THE LM OR L INSTRUCTION.  THIS SAVES THE        00017\n.*             DUPLICITY OF MACRO CODE.  THE IBM RETURN MACRO IS NOT    00018\n.*             USED SO THAT EFFICIENT CODE MAY BE GENERATED.            00019\n.*                                                                      00020\n         AIF   ('&REGS' EQ '').I3  IF THERE ARE NO OVERRIDE REGS        00021\n         AIF   (N'&REGS LE 2).I1   IF RIGHT NO. PARMS                   00022\n         IHBERMAC 1012,REGS        ELSE FLAG                            00023\n&F       SETB  1                   SET FAIL FLAG                        00024\n         AGO   .I3                 CONTINUE                             00025\n.I1      ANOP                                                           00026\n         AIF   (T'&REGS(1) EQ 'N').I2  TEST FOR DIGITS                  00027\n         IHBERMAC 1001,REGS,&REGS(1)                                    00028\n&F       SETB  1                   SET FIAL FLAG                        00029\n.I2      ANOP                                                           00030\n         AIF   (N'&REGS EQ 1).I3                                        00031\n         AIF   (T'&REGS(2) EQ 'N').I3                                   00032\n         IHBERMAC 1001,REGS,&REGS(2)                                    00033\n&F       SETB  1                                                        00034\n.*                                                                      00035\n.I3      ANOP                                                           00036\n         AIF   ('&RC' NE '').I4                                         00037\n         IHBERMAC 1014,RC                                               00038\n&F       SETB  1                                                        00039\n         AGO   .I6                                                      00040\n.I4      ANOP                                                           00041\n         AIF   ('&RC'(1,1) EQ '(').I6                                   00042\n         AIF   (T'&RC NE 'N').I5                                        00043\n         AIF   (&RC LE 4095).I6                                         00044\n.I5      ANOP                                                           00045\n         IHBERMAC 1001,RC,&RC                                           00046\n&F       SETB  1                                                        00047\n.*                                                                      00048\n.I6      ANOP                                                           00049\n         AIF   (NOT &F).G0                                              00050\n         MEXIT                                                          00051\n.*                                                                      00052\n.*                                                                      00053\n.G0      ANOP                                                           00054\n         AIF   ('&NAME' EQ '').G1                                       00055\n&NAME    DS    0H                                                       00056\n.*                                                                      00057\n.G1      ANOP                                                           00058\n         AIF   (NOT &ESAVES(1) AND ('&LV' EQ '' OR '&LV' EQ '0')).G2    00059\n         LA    1,0(,13)                                                 00060\n.*                                                                      00061\n.G2      ANOP                                                           00062\n         L     13,4(,13)                                                00063\n.*                                                                      00064\n         AIF   ('&RC'(1,1) NE '(').G3                                   00065\n         ST    &RC(1),16(,13)                                           00066\n.*                                                                      00067\n.G3      ANOP                                                           00068\n         AIF   (NOT &ESAVES(1) AND ('&LV' EQ '' OR '&LV' EQ '0')).G8    00069\n         AIF   ('&LV' NE '').G5                                         00070\n         AIF   (&ESAVES(2)).G4                                          00071\n         LA    0,&ESAVEL                                                00072\n         AGO   .G7                                                      00073\n.G4      ANOP                                                           00074\n         ICM   0,15,&ESAVEL.(&ESAVEX)                                   00075\n         AGO   .G7                                                      00076\n.G5      ANOP                                                           00077\n         AIF   (T'&LV NE 'N' OR T'&SP NE 'N').G6                        00078\n         AIF   (&LV GT 4095 OR &SP NE 0).G6                             00079\n         LA    0,&LV                                                    00080\n         AGO   .G7                                                      00081\n.G6      ANOP                                                           00082\n         ICM   0,15,IHB&SYSNDX                                          00083\n&D       SETB  1                                                        00084\n.G7      ANOP                                                           00085\n         SVC   10                                                       00086\n.*                                                                      00087\n.G8      ANOP                                                           00088\n         AIF   (T'&REGS EQ 'O').G9                                      00089\n         GENESIS REGS=&REGS,TYPE=(RECURSIVE,L)                          00090\n         AGO   .G11                                                     00091\n.*                                                                      00092\n.G9      ANOP                                                           00093\n         AIF   (&ESAVES(3)).G10                                         00094\n         LM    14,12,12(13)                                             00095\n         AGO   .G11                                                     00096\n.*                                                                      00097\n.G10     ANOP                                                           00098\n         AIF ('&ESAVEA' NE 'GEN').G10B                                  00099\n&ESAVEC(1) SETA &ESAVEB(1)                                              00100\n&ESAVEC(2) SETA &ESAVEB(2)                                              00101\n.G10B     ANOP                                                          00102\n         AIF   (&ESAVEC(1) GT 99).G11                                   00103\n         AIF   (&ESAVEC(2) GT 15).G10A                                  00104\n         GENESIS REGS=(&ESAVEC(1),&ESAVEC(2)),TYPE=(RECURSIVE,L)        00105\n         AGO   .G11                                                     00106\n.G10A    ANOP                                                           00107\n         GENESIS REGS=&ESAVEC(1),TYPE=(RECURSIVE,L)                     00108\n.*                                                                      00109\n.G11     ANOP                                                           00110\n         AIF   ('&RC'(1,1) EQ '(').G13                                  00111\n         AIF   (&RC EQ 0).G12                                           00112\n         LA    15,&RC                                                   00113\n         AGO   .G13                                                     00114\n.G12     ANOP                                                           00115\n         SLR   15,15                                                    00116\n.*                                                                      00117\n.G13     ANOP                                                           00118\n         BR    14                                                       00119\n         AIF   (NOT &D).G14                                             00120\n&IDL     SETC  'IHB&SYSNDX'                                             00121\n&IDL     DC    AL1(&SP),AL3(&LV)                                        00122\n.G14     ANOP                                                           00123\n*                                                                       00124\n         MEND                                                           00125\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENESIS": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO                                                          00001\n&NAME    GENESIS &REGS=(14,12),&ID=*,&BASE=13,&SAVE=,&LV=,&SP=0,       *00002\n               &CSECT=,&EQU=(N,N),&TYPE=                                00003\n.*                                                                      00004\n         GBLA  &ESAVEC(2),&ESAVEL,&ESAVEB(2)                            00005\n         GBLB  &ESAVES(3)                                               00006\n         GBLC  &ESAVEX                                                  00007\n         LCLA  &A,&B,&C,&IDL,&R,&D                                      00008\n         LCLB  &F,&R13,&DC                                              00009\n         LCLC  &IDC                                                     00010\n.*                                                                      00011\n.*       GENESIS (EXTENDED SAVE) FUNCTION                               00012\n.*             REWRITTEN 09-01-74, MACRO LEVEL 4                        00013\n.*                                                                      00014\n.*       THIS MACRO SUPPORTS THE FOLLOWING MODES: IN-LINE SAVE AREA,    00015\n.*       REMOTE SAVE AREA, DYNAMICALLY-OBTAINED SAVE AREA.     08-01-74 00016\n.*                                                                      00017\n.*       NOTE: THIS MACRO CALLS ITSELF RECURSIVELY TO EXPAND THE STM    00018\n.*             INSTRUCTION; THIS SAVES CODE FROM BEING DUPLICATED AND   00019\n.*             THE NECESSITY OF USING THE IBM SAVE MACRO WHICH IS       00020\n.*             NOT COMPATIBLE WITH ALL OF THE MODES SUPPORTED BY THIS   00021\n.*             MACRO.  THE TYPE PARAMETER DETERMINES IF THIS IS A       00022\n.*             RECURSIVE CALL TO THIS MACRO.                            00023\n.*                                                                      00024\n.*                                                                      00025\n         AIF   ('&TYPE(1)' NE 'RECURSIVE').GO  IS THIS A RECURSIVE CALL 00026\n.*                                                                      00027\n         AIF   ('&NAME' EQ '').I1  IF SO, SHOULD WE GENERATE THE 'DS'?  00028\n&NAME    DS    0H                                                       00029\n.I1      ANOP                                                           00030\n         AIF   ('&REGS' NE '').I2  REGS MAY VALIDLY BE NULL             00031\n         MEXIT                     IF SO, WE DON'T GENERATE ANYTHING    00032\n.*                                                                      00033\n.I2      ANOP                                                           00034\n&A       SETA  20+4*&REGS(1)       OFFSET IF &REGS(1) ISN'T 14 OR 15    00035\n         AIF   (&REGS(1) NE 14 AND &REGS(1) NE 15).I3                   00036\n&A       SETA  12+(&REGS(1)-14)*4  OFFSET FOR 14 OR 15 TO FIRST WORD    00037\n.I3      ANOP                                                           00038\n         AIF   (N'&REGS EQ 2).I5   IF STM IS DESIRED, GO PROCESS IT     00039\n.I4      ANOP                                                           00040\n         AIF   ('&TYPE(2)' EQ 'L').I4A  IF CALLED FROM ERETURN          00041\n         ST    &REGS(1),&A.(,13)                                        00042\n         MEXIT                                                          00043\n.I4A     ANOP                                                           00044\n         L     &REGS(1),&A.(,13)                                        00045\n         MEXIT                                                          00046\n.*                                                                      00047\n.I5      ANOP                                                           00048\n         AIF   (&REGS(1) EQ &REGS(2)).I4  DON'T GEN A 'STM RX,RX,...'   00049\n         AIF   (&REGS(1) LT &REGS(2)).I6  WE WILL PERFORM THIS LOGICAL  00050\n         AIF   (&REGS(1) EQ 14 OR &REGS(1) EQ 15).I6  FOR THE USER      00051\n         IHBERMAC 1001,REGS,&REGS  ELSE FLAG INVALID STM SEQUENCE       00052\n         MEXIT                                                          00053\n.*                                                                      00054\n.I6      ANOP                                                           00055\n         AIF   ('&TYPE(2)' EQ 'L').I7  IF CALLED FROM ERETURN           00056\n         STM   &REGS(1),&REGS(2),&A.(13)                                00057\n         MEXIT                                                          00058\n.I7      ANOP                                                           00059\n         LM    &REGS(1),&REGS(2),&A.(13)                                00060\n         MEXIT                                                          00061\n.*                                                                      00062\n.*       END OF RECURSIVE CALL PROCESSING                               00063\n.*                                                                      00064\n.*                                                                      00065\n.*       NORMAL GENESIS PROCESSING                                      00066\n.*                                                                      00067\n.GO      ANOP                                                           00068\n         AIF   ('&CSECT' EQ '').GX WE WILL PROCESS THE CSECT NAME FIRST 00069\n.*                                 SO THAT THE REST OF THE ASSEMBLY MAY 00070\n.*                                 PROCEED EVEN THO THERE MAY BE        00071\n.*                                 ERRORS IN THE GENESIS CALL.          00072\n&CSECT   CSECT                                                          00073\n         AGO   .G1                                                      00074\n.*                                                                      00075\n.GX      ANOP                                                           00076\n         CNOP 0,8                                                       00077\n.G1      ANOP                                                           00078\n.*             NOW WE PROCEED WITH ERROR CHECKING ON THE INPUT PARMS.   00079\n.*                                                                      00080\n         AIF   ('&BASE' NE '').G2  WE MUST HAVE BASE REGISTERS          00081\n         IHBERMAC 1014,BASE        ELSE FLAG THE CALL                   00082\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00083\n.*                                                                      00084\n.G2      ANOP                                                           00085\n         AIF   (N'&REGS LE 2).G3   CAN HAVE AT MOST 2 REGS HERE         00086\n         IHBERMAC 1012,REGS        ELSE FLAG THE CALL                   00087\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00088\n.*                                                                      00089\n.G3      ANOP                                                           00090\n         AIF   ('&REGS' NE '').G3A BYPASS CHECKS IF REGS IS NULL        00091\n&ESAVEC(1) SETA 100                INDICATE NULL TO ERETURN             00092\n         AGO   .G5                 GO CHECK NEXT PARM                   00093\n.G3A     ANOP                                                           00094\n         AIF   (T'&REGS(1) EQ 'N').G4 FORCE THIS FOR SETA'S             00095\n         IHBERMAC 1001,REGS,&REGS(1)  ELSE FLAG THE CALL                00096\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00097\n         AGO   .G4A                                                     00098\n.*                                                                      00099\n.G4      ANOP                                                           00100\n&ESAVEC(1) SETA &REGS(1)                                                00101\n&ESAVEB(1) SETA &REGS(1)                                                00102\n.G4A     ANOP                                                           00103\n&ESAVEC(2) SETA 100                                                     00104\n&ESAVEB(2) SETA 99                                                      00105\n         AIF   (N'&REGS EQ 1).G5   CAN'T CHECK 2 IF THERE'S ONLY 1      00106\n         AIF   (T'&REGS(2) EQ 'N').G4B FORCE THIS FOR SETA'S            00107\n         IHBERMAC 1001,REGS,&REGS(2) ELSE FLAG THE CALL                 00108\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00109\n         AGO   .G5                                                      00110\n.G4B     ANOP                                                           00111\n&ESAVEC(2) SETA &REGS(2)                                                00112\n&ESAVEB(2) SETA &REGS(2)                                                00113\n.*                                                                      00114\n.G5      ANOP                                                           00115\n         AIF   ('&SAVE' EQ '' OR '&LV' EQ '').G6  CAN'T HAVE BOTH       00116\n         IHBERMAC 1020,SAVE,LV     FLAG THE CALL                        00117\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00118\n.*                                                                      00119\n.G6      ANOP                      SCAN ROUTINE FOR BASE=R13            00120\n&R       SETA  1                   INITIALIZE LOCATOR                   00121\n.G7      ANOP                                                           00122\n         AIF   ('&BASE(&R)' NE '13' AND '&BASE(&R)' NE 'R13').G8        00123\n&R13     SETB  1                   INDICATE R13 WAS FOUND               00124\n         AGO   .G9                 GO CONTINUE CHECKING                 00125\n.G8      ANOP                                                           00126\n&R       SETA  &R+1                BUMP LOCATOR                         00127\n         AIF   (&R LE N'&BASE).G7  LOOP THRU BASE PARAMETER             00128\n.*                                                                      00129\n.G9      ANOP                                                           00130\n         AIF   ('&SAVE' EQ '' OR NOT &R13).G10  CAN'T HAVE BOTH         00131\n         IHBERMAC 1020,SAVE,''BASE=&BASE(&R)''  FLAG THE CALL           00132\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00133\n.*                                                                      00134\n.G10     ANOP                                                           00135\n         AIF   ('&LV' EQ '' OR NOT &R13).G11  CAN'T HAVE BOTH           00136\n         IHBERMAC 1020,LV,''BASE=&BASE(&R)''  FLAG THE CALL             00137\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00138\n.*                                                                      00139\n.G11     ANOP                                                           00140\n         AIF   ('&SAVE' EQ '').G15 BYPASS SAVE CHECKING IF NULL         00141\n         AIF   (N'&SAVE EQ 1 OR N'&SAVE EQ 3 OR N'&SAVE EQ 4).G12       00142\n         IHBERMAC 1012,SAVE        ONLY GOOD VALUES AREA 1, 3, AND 4    00143\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00144\n.*                                                                      00145\n.G12     ANOP                                                           00146\n         AIF   ('&SAVE(1)' NE '').G13  MUST HAVE SAVE AREA NAME         00147\n         IHBERMAC 1010,SAVE,FIRST  FLAG THE CALL                        00148\n&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00149\n.*                                                                      00150\n.G13     ANOP                                                           00151\n         AIF   (N'&SAVE EQ 1).G15  IF SAVE AREA ONLY, SKIP CHECKS       00152\n         AIF   ('&SAVE(3)' NE '').G14  MUST HAVE A REGISTER             00153\n         IHBERMAC 1010,SAVE,THIRD  FLAG THE CALL                        00154\n&F       SETB  1                   SET FAIL FLAG AND CONTINUE           00155\n.*                                                                      00156\n.G14     ANOP                                                           00157\n         AIF   ('&SAVE(2)' NE '' OR '&SAVE(4)' NE '').G15               00158\n         IHBERMAC 1001,SAVE,&SAVE  MUST HAVE ONE OR THE OTHER           00159\n&F       SETB  1                   SET FAIL FLAG AND CONTINUE           00160\n.*                                                                      00161\n.G15     ANOP                                                           00162\n.*                                                                      00163\n.*       IF ANY OF THE PRECEEDING CHECKS FAILED, THE FAIL FLAG IS SET   00164\n.*       AND WE EXIT THE MACRO HERE.  FROM THIS POINT ON THE INPUT      00165\n.*       PARAMETERS ARE ASSUMED TO BE VALID.                            00166\n.*                                                                      00167\n.G16     ANOP                                                           00168\n         AIF   (NOT &F).GEN        IF FLAG IS OFF, GO GEN CODE          00169\n         MEXIT                                                          00170\n.*                                                                      00171\n.*                                                                      00172\n.GEN     ANOP                                                           00173\n&ESAVES(3) SETB 1                  INDICATE GENESIS IS GO               00174\n*                                                                       00175\n         AIF   ('&ID(1)' EQ '' AND '&LV' NE '').GEN0  SKIP USING        00176\n         USING *,15                                                     00177\n         AIF   (NOT &R13 OR '&ID(2)' NE 'P').GEN0                       00178\n*                                                                       00179\n&NAME    B     IHB&SYSNDX                                               00180\n*                                                                       00181\n         DROP  15                                                       00182\n.*                                                                      00183\n.GEN0    ANOP                                                           00184\n&IDL     SETA  0                   INITIALIZE ID LENGTH                 00185\n         AIF   ('&ID(1)' EQ '').GEN10 IF NO ID, BYPASS THIS CODE        00186\n         AIF   ('&ID(1)' EQ '*').GEN7 IF CSECT NAME OR LABEL, GO PROCES 00187\n&IDL     SETA  K'&ID(1)            ELSE SET ID LENGTH                   00188\n&IDC     SETC  '&ID(1)'            SET ID FOR LATER                     00189\n         AGO   .GEN10              GO PROCESS BRANCH                    00190\n.GEN7    ANOP                                                           00191\n         AIF   ('&CSECT' NE '').GEN7A  USE GENERATED CSECT IF PRESENT   00192\n         AIF   ('&SYSECT' EQ ' ').GEN8  IF WE'RE IN PC GO USE &NAME     00193\n&IDL     SETA  K'&SYSECT           ELSE SET LENGTH                      00194\n&IDC     SETC  '&SYSECT'           SET ID                               00195\n         AGO   .GEN10              THEN GO PROCESS BRANCH               00196\n.GEN7A   ANOP                                                           00197\n&IDL     SETA  K'&CSECT            SET LENGTH OF ID                     00198\n&IDC     SETC  '&CSECT'            SET ID                               00199\n         AGO   .GEN10              GO GENERATE BRANCH                   00200\n.GEN8    ANOP                                                           00201\n         AIF   ('&NAME' NE '').GEN9 IF THERE IS A NAME, USE IT          00202\n         IHBERMAC 78               ELSE FLAG FUNNY CONDITION            00203\n         AGO   .GEN10              AND KEEP GENERATING                  00204\n.GEN9    ANOP                                                           00205\n&IDL     SETA  K'&NAME             SET ID LENGTH                        00206\n&IDC     SETC  '&NAME'             SET ID                               00207\n.*                                                                      00208\n.*                                                                      00209\n.GEN10   ANOP                                                           00210\n         AIF   (&R13).R13          IF R13 IS A BASE, IT MUST BE FIRST   00211\n         USING *,&BASE(1)                                               00212\n&A       SETA  2                   START SCAN AT SECOND                 00213\n         AGO   .GEN1               GO GENERATE USINGS                   00214\n.*                                                                      00215\n.R13     ANOP                                                           00216\n&A       SETA  1                                                        00217\n&D       SETA  0                                                        00218\n         AIF   ('&ID(2)' NE 'P' OR &IDL EQ 0).GEN1A                     00219\n&D       SETA  (&IDL+8)/4*4-4                                           00220\n         USING *+&D,&BASE(&R)                                           00221\n         AGO   .GEN1                                                    00222\n.GEN1A   ANOP                                                           00223\n         USING *,&BASE(&R)                                              00224\n&A       SETA  1                   START SCAN AT BEGINNING              00225\n.*                                                                      00226\n.GEN1    ANOP                                                           00227\n         AIF   (N'&BASE EQ 1).GEN4  IF ONLY 1 BASE, SKIP LOOP           00228\n&B       SETA  4096+&D             AND SET OFFSET TO SECOND 4K          00229\n.GEN2    ANOP                                                           00230\n         AIF   (&A EQ &R).GEN3     DON'T GENERATE R13 TWICE             00231\n         USING *+&B,&BASE(&A)                                           00232\n&B       SETA  &B+4096             BUMP TO NEXT 4K                      00233\n.GEN3    ANOP                                                           00234\n&A       SETA  &A+1                BUMP TO NEXT BASE REG                00235\n         AIF   (&A LE N'&BASE).GEN2 IF MORE TO GEN, LOOP THRU THEM      00236\n.*                                                                      00237\n.GEN4    ANOP                                                           00238\n         AIF   (N'&SAVE LE 1).GEN6 IF NO COMMON AREA USING, BYPASS IT   00239\n         AIF   ('&SAVE(4)' EQ '').GEN5 TEST FOR DSECT NAME FIRST        00240\n         USING &SAVE(4),&SAVE(3)                                        00241\n         AGO   .GEN6               THEN GO PROCESS ID                   00242\n.GEN5    ANOP                                                           00243\n         USING &SAVE(2),&SAVE(3)                                        00244\n.GEN6    ANOP                                                           00245\n*                                                                       00246\n         AIF   (&IDL EQ 0 AND '&LV' NE '').GEN34  IF NO BR, GO GEN RENT 00247\n         AIF   (&R13 AND '&ID(2)' EQ 'P').GEN6A                         00248\n&NAME    B     IHB&SYSNDX                                               00249\n*                                                                       00250\n         DROP  15                                                       00251\n.GEN6A   ANOP                                                           00252\n&B       SETA  (&IDL+8)/4*4        OFFSET OF FIRST FULLWORD AFTER ID    00253\n         AIF   ('&SAVE' NE '' OR '&LV' NE '' OR                        *00254\n               ('&ID(2)' EQ 'P' AND &IDL GT 0)).GEN11                   00255\n         DC    17F'0'                                                   00256\n&B       SETA  0                   RESET OFFSET TO SAVE AREA TO 0       00257\n.*                                                                      00258\n.GEN11   ANOP                                                           00259\n         AIF   (&IDL EQ 0).GEN12   IF THERE IS NO ID, SKIP IT           00260\n         DC    AL1(&IDL),C'&IDC'                                        00261\n.*                                                                      00262\n.GEN12   ANOP                                                           00263\n         AIF   ('&LV' NE '').GEN25 IF WE NEED RENT CODE, GO DO IT       00264\n         AIF   (&B EQ 0 OR '&SAVE' NE '').GEN13  IF ALREADY GEN'ED A SA 00265\n         DC    18F'0'                                                   00266\n.*                                                                      00267\n.GEN13   ANOP                                                           00268\n         AIF   ('&SAVE(2)' EQ '').GEN14  IF NO CSECT NAME, BYPASS IT    00269\n         DC    AL4(&SAVE(2))                                            00270\n.*                                                                      00271\n.GEN14   ANOP                                                           00272\n*                                                                       00273\nIHB&SYSNDX GENESIS REGS=&REGS,TYPE=RECURSIVE  GENERATE THE STM          00274\n.*                                                                      00275\n         AIF   (&IDL GT 0 OR '&SAVE' NE '' OR &B GT 0).GEN21            00276\n.GEN14A  ANOP                                                           00277\n         ST    13,4(,15)                                                00278\n         ST    15,8(,13)                                                00279\n.*                                                                      00280\n.GEN15   ANOP                                                           00281\n         AIF   (N'&BASE EQ 1).GEN16 DON'T NEED LA FOR 1 BASE            00282\n         LA    14,4095                                                  00283\n.*                                                                      00284\n.GEN16   ANOP                                                           00285\n         AIF   (&R13).GEN17        IF WE NEED ONLY 13, GO DO IT         00286\n         AIF   ('&SAVE' NE '' OR &B GT 0).GEN16A                        00287\n         LR    13,15                                                    00288\n.GEN16A  ANOP                                                           00289\n         LR    &BASE(1),15                                              00290\n&A       SETA  2                   SET BASE INDEX TO 2                  00291\n&C       SETA  1                   SET LAST BASE TO 1                   00292\n         AGO   .GEN18              GO GENERATE LA'S                     00293\n.GEN17   ANOP                                                           00294\n         AIF   (&B GT 0).GEN17A                                         00295\n         LR    &BASE(&R),15                                             00296\n.GEN17A  ANOP                                                           00297\n&A       SETA  1                   SET BASE INDEX TO 1                  00298\n&C       SETA  &R                  SET LAST BASE TO R13 LOCATOR         00299\n.GEN18   ANOP                                                           00300\n         AIF   (&A GT N'&BASE).GEN20  IF ALL BASES SET, EXIT LOOP       00301\n         AIF   (&A EQ &R).GEN19    DON'T CLOBBER R13                    00302\n         LA    &BASE(&A),1(14,&BASE(&C))                                00303\n&C       SETA  &A                  COPY LAST GEN'ED BASE INDEX          00304\n.GEN19   ANOP                                                           00305\n&A       SETA  &A+1                BUMP TO NEXT BASE                    00306\n         AGO   .GEN18              LOOP THRU BASES                      00307\n.*                                                                      00308\n.GEN20   ANOP                                                           00309\n         AIF (N'&SAVE EQ 1).GEN24                                       00310\n*                                                                       00311\n         AGO   .EQU                GO TERMINATE MACRO                   00312\n.*                                                                      00313\n.GEN21   ANOP                                                           00314\n         AIF   ('&SAVE' NE '').GEN23 GO PROCESS REMOTE SAVE AREA        00315\n         AIF   (&B EQ 0).GEN14A    IF 17 WORD SA, GO SET UP REGS        00316\n         LR    14,13                                                    00317\n         LA    13,&B.(,15)                                              00318\n.*                                                                      00319\n.GEN22   ANOP                                                           00320\n         ST    14,4(,13)                                                00321\n         ST    13,8(,14)                                                00322\n         AIF (N'&SAVE EQ 1).EQU                                         00323\n         AGO   .GEN15              GO GENERATE LA'S                     00324\n.*                                                                      00325\n.*       PROCESS REMOTE SAVE AREA                                       00326\n.*                                                                      00327\n.GEN23   ANOP                                                           00328\n         AIF (N'&SAVE EQ 1).GEN15                                       00329\n         AIF   ('&SAVE(2)' EQ '').GEN24  NEED TO SET REG?               00330\n         AIF   (&IDL EQ 0).GEN23A                                       00331\n&C       SETA  &IDL+5                                                   00332\n         AGO   .GEN23B                                                  00333\n.GEN23A  ANOP                                                           00334\n&C       SETA  4                                                        00335\n.GEN23B  ANOP                                                           00336\n         ICM   &SAVE(3),15,&C.(15)                                      00337\n.GEN24   ANOP                                                           00338\n         LR    14,13                                                    00339\n         LA    13,&SAVE(1)                                              00340\n         AGO   .GEN22              GO GENERATE LA'S                     00341\n.*                                                                      00342\n.*       PROCESS REENTRANT CODE                                         00343\n.*                                                                      00344\n.GEN25   ANOP                                                           00345\n         AIF   ('&ID' EQ '' OR &IDL GT 0).GEN26 NEED DROP?              00346\n         DROP  15                                                       00347\n.*                                                                      00348\n.GEN26   ANOP                                                           00349\n         AIF   (T'&LV EQ 'N' AND T'&SP EQ 'N').GEN28 MAY NOT NEED DC    00350\n.GEN27   ANOP                                                           00351\n         DC    AL1(&SP),AL3(&LV)                                        00352\n&DC      SETB  1                   INDICATE DC GENERATED                00353\n         AGO   .GEN29              GO GENERATE STM                      00354\n.*                                                                      00355\n.GEN28   ANOP                                                           00356\n         AIF   (&LV GT 4096 OR &SP NE 0).GEN27 NEED DC FOR THESE        00357\n.GEN29   ANOP                                                           00358\n*                                                                       00359\nIHB&SYSNDX GENESIS REGS=&REGS,TYPE=RECURSIVE GENERATE STM               00360\n.GEN30   ANOP                                                           00361\n&ESAVES(1) SETB 1                  INDICATE RENT CODE                   00362\n         LR    &BASE(1),15                                              00363\n         LR    14,1                                                     00364\n         AIF   (&DC).GEN31         DID WE GENERATE A DC?                00365\n&ESAVEL  SETA  &LV                 SAVE LENGTH                          00366\n         LA    0,&LV                                                    00367\n         AGO   .GEN32              THEN GO CONTINUE CODE                00368\n.GEN31   ANOP                                                           00369\n         AIF   (&IDL EQ 0).GEN31A                                       00370\n&C       SETA  &IDL+5                                                   00371\n         AGO   .GEN31B                                                  00372\n.GEN31A  ANOP                                                           00373\n&C       SETA  4                                                        00374\n.GEN31B  ANOP                                                           00375\n&ESAVES(2) SETB 1                  INDICATE DC GEN'ED                   00376\n&ESAVEL  SETA  &C                  SAVE OFFSET                          00377\n&ESAVEX  SETC  '&BASE(1)'          COPY BASE REG                        00378\n         ICM   0,15,&C.(15)                                             00379\n.GEN32   ANOP                                                           00380\n         LNR   1,15                                                     00381\n         SVC   10                                                       00382\n         ST    13,4(,1)                                                 00383\n         ST    1,8(,13)                                                 00384\n         ST    15,8(,1)                                                 00385\n         LR    13,1                                                     00386\n         LR    1,14                                                     00387\n         AIF   (N'&BASE EQ 1).GEN20 GO GENERATE THE *                   00388\n         LA    14,4095                                                  00389\n&A       SETA  2                   SET INDEX                            00390\n.GEN33   ANOP                                                           00391\n         AIF   (&A GT N'&BASE).GEN20  EXIT HERE WHEN DONE               00392\n         LA    &BASE(&A),1(14,&BASE(&A-1))                              00393\n&A       SETA  &A+1                BUMP TO NEXT GUY                     00394\n         AGO   .GEN33              LOOP THRU BASES                      00395\n.*                                                                      00396\n.GEN34   ANOP                                                           00397\n         AIF   (T'&LV NE 'N' OR T'&SP NE 'N').GEN11  NEED BRANCH?       00398\n         AIF   (&LV GT 4095 OR &SP NE 0).GEN11  IF SO, GO GEN IT        00399\n*                                                                       00400\n&NAME    GENESIS REGS=&REGS,TYPE=RECURSIVE GEN STM                      00401\n         AGO   .GEN30              GO GEN RENT CODE                     00402\n.*                                                                      00403\n.*                                                                      00404\n.*       PROCESS EQUATE REQUEST                                         00405\n.*                                                                      00406\n.EQU     ANOP                                                           00407\n         AIF   ('&EQU(1)' NE 'Y').EQU2  IF NOT GEN REGS                 00408\n*                                                                       00409\nR0       EQU   0                                                        00410\nR1       EQU   1                                                        00411\nR2       EQU   2                                                        00412\nR3       EQU   3                                                        00413\nR4       EQU   4                                                        00414\nR5       EQU   5                                                        00415\nR6       EQU   6                                                        00416\nR7       EQU   7                                                        00417\nR8       EQU   8                                                        00418\nR9       EQU   9                                                        00419\nR10      EQU   10                                                       00420\nR11      EQU   11                                                       00421\nR12      EQU   12                                                       00422\nR13      EQU   13                                                       00423\nR14      EQU   14                                                       00424\nR15      EQU   15                                                       00425\n*                                                                       00426\n.*                                                                      00427\n.EQU2    ANOP                                                           00428\n         AIF   ('&EQU(2)' NE 'Y').END                                   00429\n*                                                                       00430\nF0       EQU   0                                                        00431\nF2       EQU   2                                                        00432\nF4       EQU   4                                                        00433\nF6       EQU   6                                                        00434\n*                                                                       00435\n.*                                                                      00436\n.END     ANOP                                                           00437\n*                                                                       00438\n         MEND                                                           00439\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSP011": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE '*----NSP011----*  JCL XREF -- ROOT PHASE JCL INPUT ANAL*00001\n               ISIS'                                                    00002\n*********************************************************************** 00007\n*                                                                     * 00008\n*     DSNAME CROSS REFERENCE PROGRAM - 'NSP011'                       * 00009\n*                                                                     * 00010\n*                                                                     * 00011\n*     THIS PROGRAM WILL PRODUCE A DSNAME CROSS REFERENCE LISTING      * 00012\n*     FROM 1 OR 2 PROCLIB'S.                                          * 00013\n*                                                                     * 00014\n*     THE PROCLIB DDNAME'S MUST BE ENTERED BY A 16 BYTE PARM.         * 00015\n*     IF ONLY 1 PROCLIB IS TO BE PROCESSED, THE 2ND DDNAME MUST       * 00016\n*     BE 'DUMMY'                                                      * 00017\n*     IF NO PARM IS ENTERED, THE DEFAULT IS 'PROCLIB1PROCLIB2'.       * 00018\n*                                                                     * 00019\n*     PROC, EXEC AND DD STATEMENTS ARE USED.                          * 00020\n*     JOB, COMMENT AND PEND STATEMENTS ARE DISCARDED.                 * 00021\n*                                                                     * 00022\n*     PROGRAM 'NSP012' IS USED TO READ THE PROCLIB'S.                 * 00023\n*                                                                     * 00024\n*     GENERAL FLOW:                                                   * 00025\n*                        IN  - PROCLIBS                               * 00026\n*                        OUT - SORTIN    - DSNAME RECORDS             * 00027\n*                        OUT - SYSPRINT  - EXCEPTION LIST             * 00028\n*                                                                     * 00029\n*          1. BUILD 1 JCL STATEMENT FROM 1 OR MORE INPUT RECORDS.     * 00030\n*                                                                     * 00031\n*          2. IF PROC STATEMENT, STORE SYMBOLICS IN TABLE.            * 00032\n*                                                                     * 00033\n*          3. IF EXEC OF DD STATEMENT,                                * 00034\n*                     RESOLVE SYMBOLICS,                              * 00035\n*                     SEARCH FOR KEYWORDS,                            * 00036\n*                     STORE IN OUTPUT RECORD.                         * 00037\n*                                                                     * 00038\n*          4. SORT BY  (DSN, O/I, PROC, STEP)                         * 00039\n*                                IN  - SORTIN                         * 00040\n*                                OUT - SORTOUT                        * 00041\n*                                                                     * 00042\n*          5. 'NSP013'  -  PRINT BY DSNAME                            * 00043\n*                                IN  - SORTOUT                        * 00044\n*                                OUT - A60NXDSN  (REPORT)             * 00045\n*                                                                     * 00046\n*          6. 'NSP014'  -  PRINT TAPES WITH NO EXPDT                  * 00047\n*                                IN  - SORTOUT                        * 00048\n*                                WRK - SYSUT1                         * 00049\n*                                OUT - A60NDSNC  (REPORT)             * 00050\n*                                                                     * 00051\n*          8. 'NSP015'  -  SORT BY PROGRAM AND PRINT PGM CROSS REF    * 00052\n*                                IN  - SORTIN   (OUTPUT FROM A60PDSNA)* 00053\n*                                OUT - SORTOUT                        * 00054\n*                                IN  - SORTOUT                        * 00055\n*                                OUT - A60NDSNE                       * 00056\n*                                                                     * 00057\n*                                                                     * 00058\n*********************************************************************** 00059\n         EJECT                                                          00060\n         PRINT NOGEN                                                    00061\n         GENESIS  CSECT=NSP011,                                        *00062\n               ID=NSP011,                                              *00063\n               EQU=Y,                                                  *00064\n               BASE=(R13,R12)                                           00065\n*                                                                     * 00066\nHEX00    EQU   X'00'                    EQUATES                         00067\nHEX20    EQU   X'20'                                                    00068\nHEX40    EQU   X'40'                                                    00069\nHEX80    EQU   X'80'                                                    00070\nHEXF0    EQU   X'F0'                                                    00071\nHEXFF    EQU   X'FF'                                                    00072\n*                                                                     * 00073\nCHR0     EQU   C'0'                                                     00074\nCHR1     EQU   C'1'                                                     00075\nCHRI     EQU   C'I'                                                     00076\nCHRO     EQU   C'O'                                                     00077\n*                                                                     * 00078\nAMPER    EQU   C'&&'                                                    00079\nASTR     EQU   C'*'                                                     00080\nBLANK    EQU   C' '                                                     00081\nCOMMA    EQU   C','                                                     00082\nEQUAL    EQU   C'='                                                     00083\nLEFTP    EQU   C'('                                                     00084\nMINUS    EQU   C'-'                                                     00085\nNULL     EQU   X'00'                                                    00086\nPLUS     EQU   C'+'                                                     00087\nPOINT    EQU   C'.'                                                     00088\nQUOTE    EQU   C''''                                                    00089\nRIGHTP   EQU   C')'                                                     00090\n*                                                                     * 00091\n         EJECT                                                          00092\n         L     R2,0(,R1)                GET PARM ADDR                   00093\n         LH    R3,0(,R2)                GET PARM LENGTH                 00094\n         LTR   R3,R3                    IS IT ZERO                      00095\n         BZ    A06                      YES                             00096\n         MVC   PDSNAME1(16),2(R2)       SAVE PDS DDNAMES                00097\n         CH    R3,=H'17'                IS THERE A MAY DIV QUALIFIER    00098\n         BL    A06                                                      00099\n         MVC   PDSPARM,18(R2)           SAVE THE QUALIFIED FOR NSP012   00100\n*                                                                     * 00101\nA06      EQU   *                                                        00102\n         OPEN  (PRTFILE,(OUTPUT),OUTFILE,(OUTPUT))                      00103\n         BAL   R10,HEADER10                                             00104\n         LOAD  EP=NSP012                LOAD PDS ROUTINE                00105\n         ST    R0,PDSENTRY              SAVE ENTRY ADDR                 00106\n         L     R15,PDSENTRY                                             00107\n         CALL  (15),(PDSOPEN,PDSNAME1),VL     OPEN 1ST PDS              00108\n*                                                                     * 00109\nA10      EQU   *                                                        00110\n         BAL   R10,CLEAR10              CLEAR WORK AREA                 00111\n         BAL   R10,GET10                GET INPUT RECORD                00112\n         C     R15,=F'4'                IS IT END OF FILES              00113\n         BE    INEOF                    YES                             00114\n*                                                                     * 00115\nA20      EQU   *                        LOOK FOR JOB-PROC-EXEC-DD       00116\n         LA    R5,INREC                 AND BUILD 1 RECORD              00117\n         CLC   0(3,R5),=C'//*'          IS IT COMMENT                   00118\n         BE    A10                                                      00119\n         CLC   0(2,R5),=C'//'           IS IT '//'                      00120\n         BNE   A10                                                      00121\n         L     R0,=F'70'                SET LOOP CTR TO 70              00122\n         A     R5,=F'2'                                                 00123\n         CLI   0(R5),BLANK              IS CHAR BLANK                   00124\n         BE    A42                                                      00125\nA30      EQU   *                                                        00126\n         BAL   R10,SCAN30               FIND NAME                       00127\n         C     R1,=F'8'                 IS NAME > 8                     00128\n         BNH   A40                      NO                              00129\n         B     ERROR10                  YES - ERROR                     00130\nA40      EQU   *                                                        00131\n         MVC   W1NAME,FOUND             MOVE FOUND NAME                 00132\nA42      EQU   *                                                        00133\n         BAL   R10,SCAN20               SCAN FOR NON-BLANK              00134\n         C     R0,=F'54'                DID SCAN GO PAST COL 16         00135\n         BH    A50                      NO                              00136\n         B     ERROR20                  YES - ERROR                     00137\nA50      EQU   *                                                        00138\n         BAL   R10,SCAN30               SCAN FOR STAT IDNT              00139\n         C     R1,=F'4'                 IS IDNT > 4                     00140\n         BNH   A60                      NO                              00141\n         B     ERROR30                  YES - ERROR                     00142\nA60      EQU   *                                                        00143\n         MVC   W1IDNT,FOUND             MOVE FOUND STAT IDNT            00144\n         BAL   R10,SCAN20               SCAN FOR NON-BLANK              00145\n         C     R0,=F'20'                DID SCAN GO PAST COL 50         00146\n         BH    A70                      NO                              00147\n         B     A200                     YES - END OF STAT               00148\nA70      EQU   *                                                        00149\n         BAL   R10,SCAN40               SCAN FOR '-----' OR BLANK       00150\n         LTR   R15,R15                  DID SCAN GO PAST COL 71         00151\n         BNZ   ERROR60                  YES                             00152\n         LA    R6,W1STAT                                                00153\n         BCTR  R1,0                     SUBTRACT 1 FROM LENGTH          00154\n         EX    R1,MVC10                 EX MOVE                         00155\n* MVC10  MVC   0(0,R6),FOUND                                          * 00156\n         A     R1,=F'1'                                                 00157\n         AR    R6,R1                    BUMP TO END FOR NXT STAT        00158\n         BCTR  R5,0                     BACKUP 1 CHAR                   00159\n         CLI   0(R5),COMMA              WAS LAST CHAR ','               00160\n         BE    A80                      YES - CONTINUE ON NXT RECORD    00161\n         B     A200                     NO - END OF STAT                00162\nA80      EQU   *                                                        00163\n         BAL   R10,GET10                GET NXT RECORD                  00164\n         C     R15,=F'4'                IS IT END OF FILES              00165\n         BE    INEOF                    YES                             00166\n         LA    R5,INREC                 POINT R5 TO RECORD              00167\n         CLC   0(3,R5),=C'//*'          IS IT COMMENT                   00168\n         BE    A80                      YES                             00169\n         CLC   0(3,R5),=C'// '          IS IT //BLANK                   00170\n         BE    A90                      YES                             00171\n         B     ERROR40                  NO - ERROR                      00172\nA90      EQU   *                                                        00173\n         A     R5,=F'2'                 POINT R5 TO COL 3               00174\n         L     R0,=F'70'                SET BCT CTR TO 70               00175\n         BAL   R10,SCAN20               SCAN FOR NON-BLANK              00176\n         C     R0,=F'54'                ARE WE PAST COL 16              00177\n         BH    A100                     NO                              00178\n         B     ERROR50                  YES - ERROR                     00179\nA100     EQU   *                                                        00180\n         BAL   R10,SCAN40               SCAN FOR '-----' OR BLANK       00181\n         LTR   R15,R15                  DID SCAN GO PAST COL 71         00182\n         BNZ   ERROR60                  YES                             00183\n         BCTR  R1,0                                                     00184\n         EX    R1,MVC20                 MOVE FOUND TO STAT              00185\n* MVC20  MVC   0(0,R6),FOUND                                          * 00186\n         A     R1,=F'1'                                                 00187\n         AR    R6,R1                    BUMP TO END OF STAT             00188\n         BCTR  R5,0                                                     00189\n         CLI   0(R5),COMMA              IS IT END OF STATEMENT          00190\n         BE    A80                      NO                              00191\n         B     A200                     YES                             00192\n*                                                                     * 00193\nA200     EQU   *                                                        00194\n         L     R0,=F'2048'              SET MAX LENGTH OF STAT          00195\n         CLC   W1IDNT,=CL4'JOB'         IS IT JOB STATEMENT             00196\n         BE    A300                                                     00197\n         CLC   W1IDNT,=CL4'PROC'        IS IT PROC STATEMENT            00198\n         BE    PROC10                                                   00199\n         CLC   W1IDNT,=CL4'PEND'        IS IT PROC END STATEMENT        00200\n         BE    A300                                                     00201\n         CLC   W1IDNT,=CL4'EXEC'        IS IT EXEC STATEMENT            00202\n         BE    EXEC10                                                   00203\n         CLC   W1IDNT,=CL4'DD'          IS IT DD STATEMENT              00204\n         BE    DD10                                                     00205\n*                                       ERROR                         * 00206\n         B     A300                                                     00207\n*                                                                     * 00208\nA300     EQU   *                                                        00209\n         CLC   XDSN,BLANKS              WAS DSNAME FOUND                00210\n         BE    A304                     NO                              00211\n         PUT   OUTFILE,XREC             PUT OUTPUT RECORD TO SORT       00212\nA304     EQU   *                                                        00213\n         BAL   R10,CLEAR30              CLEAR KEYWORD RETURN CODES      00214\n         MVC   XDSN(L'XDSN+1),XDSN-1    CLEAR RECORD                    00215\n         MVI   XRELGEN,BLANK                                            00216\n         MVC   XRELGEN+1(65),XRELGEN                                    00217\n         B     A10                                                      00218\n*                                                                     * 00219\nA310     EQU   *                                                        00220\n         CLC   XDSN,BLANKS              WAS DSNAME FOUND                00221\n         BE    A314                     NO                              00222\n         PUT   OUTFILE,XREC             PUT OUTPUT RECORD TO SORT       00223\nA314     EQU   *                                                        00224\n         BAL   R10,CLEAR30              CLEAR KEYWORD RETURN CODES      00225\n         B     A10                                                      00226\n*                                                                     * 00227\nINEOF    EQU   *                                                        00228\n         CLOSE (PRTFILE,,OUTFILE)                                       00229\n*                                                                     * 00230\n         LA    R1,SORTLST1                                              00231\n         LINK  EP=SORT                  SORT BY DSNAME                  00232\n*                                                                     * 00233\n         LINK  EP=NSP013                PRINT BY DSNAME                 00234\n*                                                                     * 00235\n         LINK  EP=NSP014                PRINT TAPES WITH NO EXPDT       00236\n*                                                                     * 00237\n         LINK  EP=NSP015                SORT AND PRINT BY PROGRAM       00238\n*                                                                     * 00239\n         EXODUS RC=0                                                    00240\n         EJECT                                                          00241\n*********************************************************************** 00242\n*                                                                     * 00243\n*              //PS50    EXEC PGM=A50PWTRA,PARM='GO'                  * 00244\n*                                                                     * 00245\n*********************************************************************** 00246\nEXEC10   EQU   *                        EXEC ROUTINE                    00247\n         BAL   R10,SYM10                RESOLVE SYMBOLICS               00248\n         BAL   R10,KEYWD10              LOOK FOR 'PGM='                 00249\n         B     A310                                                     00250\n         SPACE 3                                                        00251\n*********************************************************************** 00252\n*                                                                     * 00253\n*                                                                     * 00254\n*              //A60NXREF  DD DSN=SWL.APA60.ARAPXOUT,.... ETC.        * 00255\n*********************************************************************** 00256\nDD10     EQU   *                        DD ROUTINE                      00257\n         BAL   R10,SYM10                RESOLVE SYMBOLICS               00258\n         BAL   R10,KEYWD10              LOOK FOR KEYWORDS               00259\n         B     A300                                                     00260\n*                                                                     * 00261\nKEYWD10  EQU   *                        SEARCH FOR KEYWORKS             00262\n         ST    R10,KEYWDSVE             SAVE RETURN                     00263\n         L     R9,=A(KEYWORDS)          POINT R9 TO KEYWORK TABLE       00264\n         USING KEYWORDS,R9                                              00265\nKEYWD20  EQU   *                                                        00266\n         L     R0,=F'500'               SET MAX LENGTH OF STATEMENT     00267\n         SR    R1,R1                                                    00268\n         IC    R1,KWLEN                 PICK UP KEYWORD LENGTH          00269\n         CLI   KWLEN,HEXFF              IS IT END OF TABLE              00270\n         BE    KEYWD90                                                  00271\n         L     R5,=A(W1STAT)            POINT R5 TO STATEMENT           00272\n         BCTR  R1,0                                                     00273\nKEYWD30  EQU   *                                                        00274\n         EX    R1,KEYWDCLC              COMPARE KEYWORD TO STATEMENT    00275\n         BE    KEYWD40                                                  00276\n         A     R5,=F'1'                 BUMP TO NEXT CHAR               00277\n         CLI   0(R5),BLANK              IS IT END OF STATEMENT          00278\n         BE    KEYWD50                                                  00279\n         B     KEYWD30                                                  00280\nKEYWDCLC CLC   KWNAME(0),0(R5)                                          00281\nKEYWD40  EQU   *                                                        00282\n         L     R1,=F'4'                                                 00283\n         STC   R1,KWRC                  SET RC TO 4 (FOUND)             00284\n         L     R2,KWADDR                LOAD ADDR OF KEYWORD ROUTINE    00285\n         BALR  R10,R2                   BAL TO ROUTINE                  00286\nKEYWD50  EQU   *                                                        00287\n         LA    R9,KEYWORDL(,R9)         BUMP TO NEXT KEYWORD            00288\n         B     KEYWD20                                                  00289\nKEYWD90  EQU   *                                                        00290\n         L     R10,KEYWDSVE             LOAD RETURN                     00291\n         BR    R10                                                      00292\nKEYWDSVE DC    F'0'                                                     00293\n*                                                                     * 00294\n         DROP  R9                                                       00295\n         EJECT                                                          00296\n*********************************************************************** 00297\n*                                                                     * 00298\n*              B U I L D    S Y M B O L I C    T A B L E              * 00299\n*                                                                     * 00300\n*********************************************************************** 00301\nPROC10   EQU   *                                                        00302\n         L     R9,=A(SYMTAB)                                            00303\n         USING SYMTAB,R9                                                00304\n         BAL   R10,CLEAR20              CLEAR SYM TABLE                 00305\n         MVI   SYML1,HEXFF              MARK END OF TABLE               00306\n         L     R0,=F'2048'              SET MAX LENGTH OF STAT          00307\n         LA    R5,W1STAT                                                00308\nPROC20   EQU   *                                                        00309\n         CLI   0(R5),BLANK              IS IT END OF PROC STAT          00310\n         BE    PROC90                                                   00311\n         BAL   R10,SCAN115              SCAN FOR '=' OR BLANK           00312\n         CLI   0(R5),EQUAL              IS IT '='                       00313\n         BE    PROC30                                                   00314\n*                                       NO - ERROR                    * 00315\nPROC30   EQU   *                                                        00316\n         MVC   SYMNAME,FOUND            MOVE NAME TO TABLE              00317\n         STC   R1,SYML2                 MOVE NAME LENGTH TO TABLE       00318\n         A     R5,=F'1'                 BUMP PAST '='                   00319\n         CLI   0(R5),BLANK              IS IT END OF PROC STAT          00320\n         BE    PROC60                                                   00321\n         CLI   0(R5),COMMA              IS IT END OF SYMBOLIC           00322\n         BE    PROC60                                                   00323\n         CLI   0(R5),QUOTE              IS IT QUOTE                     00324\n         BE    PROC50                                                   00325\n         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK           00326\nPROC40   EQU   *                                                        00327\n         STC   R1,SYML3                 MOVE LENGTH OF EQUATE TO TABLE  00328\n         BCTR  R1,0                                                     00329\n         EX    R1,PROCMVC               MOVE EQUATE TO TABLE            00330\n         A     R1,=F'1'                                                 00331\nPROC42   EQU   *                                                        00332\n         A     R1,=F'11'                COMPUTE TOTAL ENTRY LENGTH      00333\n         STC   R1,SYML1                 MOVE TO TABLE                   00334\n         AR    R9,R1                    BUMP TO END OF TABLE            00335\n         MVI   SYML1,HEXFF              MARK END OF TABLE               00336\n         CLI   0(R5),BLANK              IS IT END OF PROC STAT          00337\n         BE    PROC90                                                   00338\n         A     R5,=F'1'                 BUMP PAST ','                   00339\n         B     PROC20                                                   00340\nPROCMVC  MVC   SYMEQU(0),FOUND                                          00341\nPROC50   EQU   *                                                        00342\n         A     R5,=F'1'                 BUMP PAST QUOTE                 00343\n         BAL   R10,SCAN140              SCAN FOR QUOTE                  00344\n         STC   R1,SYML3                 MOVE LENGTH OF EQUATE TO TABLE  00345\n         BCTR  R1,0                                                     00346\n         EX    R1,PROCMVC               MOVE EQUATE TO TABLE            00347\n         A     R1,=F'12'                COMPUTE TOTAL ENTRY LENGTH      00348\n         STC   R1,SYML1                 MOVE TO TABLE                   00349\n         AR    R9,R1                    BUMP TO END OF TABLE            00350\n         MVI   SYML1,HEXFF              MARK END OF TABLE               00351\n         A     R5,=F'1'                 BUMP PAST QUOTE                 00352\n         CLI   0(R5),BLANK              IS IT END OF PROC STAT          00353\n         BE    PROC90                                                   00354\n         A     R5,=F'1'                 BUMP PAST COMMA                 00355\n         B     PROC20                                                   00356\nPROC60   EQU   *                                                        00357\n         SR    R1,R1                    NO SYMBOLIC EQUATE              00358\n         STC   R1,SYML3                 ( LIB=, ) OR ( LIB= )           00359\n         B     PROC42                                                   00360\nPROC90   EQU   *                                                        00361\n         B     A300                                                     00362\n         DROP  R9                                                       00363\n         EJECT                                                          00364\n*********************************************************************** 00365\n*                                                                     * 00366\n*              R E S O L V E    S Y M B O L I C S                     * 00367\n*                                                                     * 00368\n*              &PGM10                                                 * 00369\n*              DUMMY.,DSN=SWL.APA60.                                  * 00370\n*              SWL.&LIB..USRLIB                                       * 00371\n*              UNIT=&DISK,                                            * 00372\n*              SPACE=(&SPC10)                                         * 00373\n*              PARM='&PARM10'                                         * 00374\n*              DSN=&OUTPUT(&OUTGEN),                                  * 00375\n*                                                                     * 00376\n*********************************************************************** 00377\nSYM10    EQU   *                                                        00378\n         L     R9,=A(SYMTAB)            POINT R9 TO SYMBOLIC TABLE      00379\n         USING SYMTAB,R9                                                00380\n         MVC   W2STAT,W2STAT-1          BLANK RECEIVING AREA            00381\n         MVC   W2STAT2,W2STAT                                           00382\n         LA    R4,W2STAT                POINT R4 TO RECEIVING AREA      00383\n         LA    R5,W1STAT                POINT R5 TO SENDING AREA        00384\n         L     R0,=F'500'               SET MAX LOOP CTR                00385\nSYM20    EQU   *                                                        00386\n         CLI   0(R5),AMPER              IS IT '&'                       00387\n         BE    SYM40                                                    00388\n         CLI   0(R5),BLANK              IS IT END OF STATEMENT          00389\n         BE    SYM110                                                   00390\nSYM30    EQU   *                                                        00391\n         MVC   0(1,R4),0(R5)            MOVE CHAR                       00392\n         A     R4,=F'1'                 BUMP TO NXT CHAR                00393\n         A     R5,=F'1'                                                 00394\n         BCT   R0,SYM20                 LOOP                            00395\n         B     ERROR70                  ERROR - STAT TOO LONG           00396\nSYM40    EQU   *                                                        00397\n         CLI   1(R5),AMPER              IS NXT CHAR '&'                 00398\n         BNE   SYM50                    NO                              00399\n         MVC   0(1,R4),0(R5)            YES - ASSUME TEMP DSN           00400\n         A     R4,=F'1'                 BUMP TO NXT CHAR                00401\n         A     R5,=F'1'                                                 00402\n         BCT   R0,SYM30                 LOOP                            00403\n         B     ERROR70                  ERROR - STAT TOO LONG           00404\nSYM50    EQU   *                                                        00405\n         L     R9,=A(SYMTAB)            START AT BEGINNING OF TABLE     00406\nSYM60    EQU   *                                                        00407\n         CLI   SYML1,HEXFF              IS IT END OF TABLE              00408\n         BE    SYM30                    YES                             00409\n         SR    R3,R3                                                    00410\n         IC    R3,SYML2                 PICKUP LENGTH OF SYM            00411\n         BCTR  R3,0                                                     00412\n         EX    R3,SYMCLC                COMPARE TABLE ENTRY TO STAT     00413\n         BE    SYM70                                                    00414\n         IC    R3,SYML1                 PICKUP LENGTH OF ENTRY          00415\n         AR    R9,R3                    BUMP TO NXT ENTRY               00416\n         B     SYM60                                                    00417\nSYMCLC   CLC   SYMNAME(0),1(R5)                                         00418\nSYM70    EQU   *                                                        00419\n         IC    R3,SYML3                 PICKUP LENGTH OF EQUATE         00420\n         LTR   R3,R3                    IS LENGTH ZERO                  00421\n         BZ    SYM80                    YES                             00422\n         BCTR  R3,0                                                     00423\n         EX    R3,SYMMVC                MOVE EQUATE TO STATEMENT        00424\n         A     R3,=F'1'                                                 00425\n         AR    R4,R3                    BUMP TO END OF EQUATE           00426\nSYM80    EQU   *                                                        00427\n         A     R5,=F'1'                 SCAN FOR END OF SYMBLOIC        00428\n         CLI   0(R5),BLANK              IS IT BLANK                     00429\n         BE    SYM90                                                    00430\n         CLI   0(R5),COMMA              IS IT ','                       00431\n         BE    SYM90                                                    00432\n         CLI   0(R5),LEFTP              IS IT '('                       00433\n         BE    SYM90                                                    00434\n         CLI   0(R5),RIGHTP             IS IT ')'                       00435\n         BE    SYM90                                                    00436\n         CLI   0(R5),AMPER              IS IT '&'                       00437\n         BE    SYM90                                                    00438\n         CLI   0(R5),QUOTE              IS IT QUOTE                     00439\n         BE    SYM90                                                    00440\n         CLI   0(R5),POINT              IS IT '.'                       00441\n         BE    SYM100                                                   00442\n         BCT   R0,SYM80                 LOOP                            00443\n         B     ERROR70                  ERROR - STAT TOO LONG           00444\nSYMMVC   MVC   0(0,R4),SYMEQU                                           00445\nSYM90    EQU   *                                                        00446\n         B     SYM20                    END OF SYMBOLIC                 00447\nSYM100   EQU   *                                                        00448\n         A     R5,=F'1'                 BUMP PAST '.'                   00449\n         B     SYM20                    END OF SYMBOLIC                 00450\nSYM110   EQU   *                                                        00451\n         MVC   W1STAT,W2STAT            END OF STATEMENT                00452\n         MVC   W1STAT2,W2STAT2                                          00453\n         BR    R10                                                      00454\n         DROP  R9                                                       00455\n*                                                                     * 00456\n         EJECT                                                          00457\n*********************************************************************** 00458\n*                                                                     * 00459\n*              D S N A M E   R O U T I  N E                           * 00460\n*                                                                     * 00461\n*              DSN=SWL.APA60.ADAP2000                                 * 00462\n*              DSN=SWL.APA60.ADAP2000(PRIME)  INDEX OR OVFLOW         * 00463\n*              DSN=SWL.AXX.SYSIN(A60I2000)                            * 00464\n*              DSN=SWL.APA60.ADAP2000(+1)                             * 00465\n*                                                                     * 00466\n*********************************************************************** 00467\nDSN10    EQU   *                                                        00468\n         A     R5,=F'4'                 BUMP PAST 'DSN='                00469\n         B     DSN30                                                    00470\nDSN20    EQU   *                                                        00471\n         A     R5,=F'7'                 BUMP PAST 'DSNAME='             00472\nDSN30    EQU   *                                                        00473\n         ST    R5,DSNSVE5                                               00474\n         ST    R10,DSNSVE10             SAVE RETURN                     00475\n         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK           00476\n         MVC   XDSN,FOUND                                               00477\n         LA    R5,XDSN                  POINT R5 TO DSNAME              00478\n         BAL   R10,SCAN180              SCAN FOR '(' OR BLANK           00479\n         CLI   0(R5),BLANK              IS IT BLANK                     00480\n         BE    DSN90                    YES - DONE, GET OUT             00481\n         CLC   1(5,R5),=C'PRIME'        IS IT 'PRIME'                   00482\n         BE    DSN50                                                    00483\n         CLC   1(5,R5),=C'INDEX'        IS IT 'INDEX'                   00484\n         BE    DSN50                                                    00485\n         CLC   1(6,R5),=C'OVFLOW'       IS IT 'OVFLOW'                  00486\n         BE    DSN50                                                    00487\n         CLI   1(R5),PLUS               IS IT '+'                       00488\n         BE    DSN40                                                    00489\n         CLI   1(R5),MINUS              IS IT '-'                       00490\n         BE    DSN40                                                    00491\n         TM    1(R5),HEXF0              IS IT NUMERIC                   00492\n         BO    DSN40                                                    00493\n         B     DSN90                                                    00494\nDSN40    EQU   *                                                        00495\n         MVC   DWRD,0(R5)               SAVE RELATIVE GEN               00496\n         MVC   XDSN,FOUND               MOVE UP TO '(' TO XDSN          00497\n         LA    R5,DWRD                  POINT R5 TO RELATIVE GEN        00498\n         A     R5,=F'1'                 BUMP PAST '('                   00499\n         BAL   R10,SCAN194              SCAN FOR ')' OR BLANK           00500\n         MVC   XRELGEN,FOUND            SAVE RELATIVE GEN NO.           00501\n         A     R5,=F'1'                 BUMP PAST ')'                   00502\n         B     DSN90                                                    00503\nDSN50    EQU   *                                                        00504\n         B     DSN90                                                    00505\nDSN90    EQU   *                                                        00506\n         L     R5,DSNSVE5                                               00507\n         L     R10,DSNSVE10             LOAD RETURN                     00508\n         BR    R10                      RETURN                          00509\nDSNSVE5  DC    F'0'                                                     00510\nDSNSVE10 DC    F'0'                                                     00511\n*                                                                     * 00512\n         EJECT                                                          00513\n*********************************************************************** 00514\n*                                                                     * 00515\n*              P R O G R A M    N A M E    R O U T I N E              * 00516\n*                                                                     * 00517\n*********************************************************************** 00518\nPGM10    EQU   *                                                        00519\n         ST    R10,PGMSVE                                               00520\n         A     R5,=F'4'                 BUMP PAST 'PGM='                00521\n         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK           00522\n         MVC   XPGM,FOUND               MOVE TO XREC                    00523\n         MVC   XSTEP,W1NAME             MOVE STEP NAME TO XREC          00524\n         L     R10,PGMSVE                                               00525\n         BR    R10                                                      00526\n*                                                                     * 00527\nPGMSVE   DC    F'0'                                                     00528\n*                                                                     * 00529\n         EJECT                                                          00530\n*********************************************************************** 00531\n*                                                                     * 00532\n*              D I S P    R O U T I N E                               * 00533\n*                                                                     * 00534\n*              DISP=OLD                                               * 00535\n*              DISP=(OLD,KEEP)                                        * 00536\n*              DISP=(OLD,DELETE,KEEP)                                 * 00537\n*              DISP=(,CATLG,DELETE)                                   * 00538\n*                                                                     * 00539\n*********************************************************************** 00540\nDISP10   EQU   *                                                        00541\n         ST    R10,DISPSVE                                              00542\n         A     R5,=F'5'                 BUMP PAST 'DISP='               00543\n         CLI   0(R5),LEFTP              IS IT LEFT PAREN                00544\n         BE    DISP20                                                   00545\n         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK           00546\n         MVC   XDISP1,FOUND             MOVE TO DISP #1                 00547\n         B     DISP60                                                   00548\nDISP20   EQU   *                                                        00549\n         A     R5,=F'1'                 BUMP PAST LEFT PAREN            00550\n         CLI   0(R5),COMMA              IS FIRST DISP OMITTED           00551\n         BE    DISP50                                                   00552\n         BAL   R10,SCAN190              SCAN FOR ','  RIGHT PAREN,BLK   00553\n         MVC   XDISP1,FOUND             MOVE TO DISP #1                 00554\n         CLI   0(R5),RIGHTP             IS IT RIGHT PAREN               00555\n         BE    DISP60                                                   00556\nDISP30   EQU   *                                                        00557\n         A     R5,=F'1'                 BUMP PAST ','                   00558\n         CLI   0(R5),COMMA              IS IT ','                       00559\n         BE    DISP60                                                   00560\n         BAL   R10,SCAN190              SCAN FOR ','  RIGHTP OR BLANK   00561\n         MVC   XDISP2,FOUND             MOVE TO DISP #2                 00562\n         CLI   0(R5),RIGHTP             IS IT RIGHT PAREN               00563\n         BE    DISP80                                                   00564\nDISP40   EQU   *                                                        00565\n         A     R5,=F'1'                 BUMP PAST ','                   00566\n         CLI   0(R5),COMMA              IS THIRD DISP OMITTED           00567\n         BE    DISP80                                                   00568\n         BAL   R10,SCAN194              SCAN FOR RIGHT PAREN OR BLK     00569\n         MVC   XDISP3,FOUND             MOVE TO DISP #3                 00570\n         A     R5,=F'1'                 BUMP PAST RIGHT PAREN           00571\n         B     DISP90                                                   00572\nDISP50   EQU   *                                                        00573\n         MVC   XDISP1,=CL5'NEW'         FIRST DISP DEFAULT = NEW        00574\n         B     DISP30                                                   00575\nDISP60   EQU   *                                                        00576\n         CLC   XDISP1,=CL5'NEW'         IS FIRST DISP = NEW             00577\n         BE    DISP70                                                   00578\n         MVC   XDISP2,=CL5'KEEP'        SECOND DISP DEFAULT = KEEP      00579\n         B     DISP80                                                   00580\nDISP70   EQU   *                                                        00581\n         MVC   XDISP2,=CL5'DELETE'      SECOND DISP DEFAULT = DELETE    00582\n         B     DISP80                                                   00583\nDISP80   EQU   *                                                        00584\n         MVC   XDISP3,XDISP2            THIRD DISP DEFAULT = SECOND     00585\n         B     DISP90                                                   00586\nDISP90   EQU   *                                                        00587\n         CLC   XDISP1,=CL5'NEW'         IS IT INPUT DATASET             00588\n         BE    DISP92                   YES                             00589\n         MVI   XIO,CHRI                 NO - MARK AS OUTPUT             00590\n         B     DISP94                                                   00591\nDISP92   EQU   *                                                        00592\n         MVI   XIO,CHRO                 MARK AS INPUT                   00593\nDISP94   EQU   *                                                        00594\n         SR    R15,R15                                                  00595\n         STC   R15,KWRC                 STORE RC                        00596\n         L     R10,DISPSVE                                              00597\n         BR    R10                                                      00598\n*                                                                     * 00599\nDISPSVE  DC    F'0'                                                     00600\n*                                                                     * 00601\n         EJECT                                                          00602\n*********************************************************************** 00603\n*                                                                     * 00604\n*              U N I T    R O U T I N E                               * 00605\n*                                                                     * 00606\n*              UNIT=SYSDA                                             * 00607\n*              UNIT=(SYSDA)                                           * 00608\n*              UNIT=(AFF,DISK)                                        * 00609\n*                                                                     * 00610\n*********************************************************************** 00611\nUNIT10   EQU   *                                                        00612\n         ST    R10,UNITSVE                                              00613\n         A     R5,=F'5'                 BUMP PAST 'UNIT='               00614\n         CLI   0(R5),LEFTP              IS IT LEFT PAREN                00615\n         BNE   UNIT20                                                   00616\n         A     R5,=F'1'                 BUMP PAST RIGHT PAREN           00617\nUNIT20   EQU   *                                                        00618\n         CLC   0(3,R5),=C'AFF'          IS IT UNIT=AFF                  00619\n         BE    UNIT90                                                   00620\n         CLI   0(R5),COMMA              IS UNIT OMITTED                 00621\n         BE    UNIT90                                                   00622\n         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK      00623\n         MVC   XUNIT,FOUND              MOVE TO XREC                    00624\n         B     UNIT90                                                   00625\nUNIT90   EQU   *                                                        00626\n         L     R10,UNITSVE                                              00627\n         BR    R10                                                      00628\n*                                                                     * 00629\nUNITSVE  DC    F'0'                                                     00630\n*                                                                     * 00631\n         EJECT                                                          00632\n*********************************************************************** 00633\n*                                                                     * 00634\n*              E X P D T / R E T P D    R O U T I N E                 * 00635\n*                                                                     * 00636\n*              LABEL=EXPDT=99000                                      * 00637\n*              LABEL=(EXPDT=99000)                                    * 00638\n*              LABEL=(,SL,,,EXPDT=99000)                              * 00639\n*                                                                     * 00640\n*********************************************************************** 00641\nEXPDT10  EQU   *                                                        00642\n         A     R5,=F'6'                 BUMP PAST 'EXPDT=' OR 'RETPD='  00643\n         CLI   0(R5),LEFTP              DOES IT BEGIN WITH LEFT PAREN   00644\n         BNE   EXPDT20                  NO                              00645\n         A     R5,=F'1'                 YES - BUMP PAST RIGHT PAREN     00646\nEXPDT20  EQU   *                                                        00647\n         ST    R10,EXPDTSVE                                             00648\n         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK      00649\n         MVC   XEXPDT,FOUND             MOVE TO XREC                    00650\n         L     R10,EXPDTSVE                                             00651\n         BR    R10                                                      00652\n*                                                                     * 00653\nEXPDTSVE DC    F'0'                                                     00654\n*                                                                     * 00655\n         EJECT                                                          00656\n*********************************************************************** 00657\n*                                                                     * 00658\n*              S P A C E    R O U T I N  E                            * 00659\n*                                                                     * 00660\n*              SPACE=CYL=10             SPACE=CYL=10                  * 00661\n*              SPACE=(CYL,10)           SPACE=(CYL,10)                * 00662\n*              SPACE=(CYL,(10,5),RLSE,CONTIG)                         * 00663\n*                                                                     * 00664\n*********************************************************************** 00665\nSPACE10  EQU *                                                          00666\n         ST    R10,SPCSVE10                                             00667\n         A     R5,=F'6'                 BUMP PAST 'SPACE='              00668\n         CLI   0(R5),LEFTP              IS IT '('                       00669\n         BE    SPACE20                                                  00670\n         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK           00671\n         MVC   XSPACE,FOUND             MOVE TO XREC                    00672\n         B     SPACE100                 GET OUT                         00673\nSPACE20  EQU   *                                                        00674\n         A     R5,=F'1'                 BUMP PAST '('                   00675\n         ST    R5,SPCSVE5                                               00676\n         BAL   R10,SCAN196              SCAN FOR '('  ')' OR BLANK      00677\n         CLI   0(R5),RIGHTP             IS IT ')'                       00678\n         BE    SPACE30                  YES (ONLY 1 SET OF PARENS)      00679\n         CLI   0(R5),LEFTP              IS IT '('                       00680\n         BE    SPACE40                  YES (2 SETS OF PARENS)          00681\n         B     SPACE60                  ERROR - BLANK FOUND             00682\nSPACE30  EQU   *                                                        00683\n         MVC   XSPACE,FOUND             MOVE TO XREC                    00684\n         B     SPACE100                 GET OUT                         00685\nSPACE40  EQU   *                                                        00686\n         A     R5,=F'1'                 BUMP PAST 2ND '('               00687\n         BAL   R10,SCAN194              SCAN FOR ')' OR BLANK           00688\n         CLI   0(R5),RIGHTP             IS IT 1ST ')'                   00689\n         BE    SPACE50                  YES                             00690\n         B     SPACE60                  NO - ERROR - MOVE WHAT WE HAVE  00691\nSPACE50  EQU   *                                                        00692\n         A     R5,=F'1'                 BUMP PAST ')'                   00693\n         BAL   R10,SCAN194              SCAN FOR ')' OR BLANK           00694\n         B     SPACE60                  GO MOVE WHAT WE HAVE            00695\nSPACE60  EQU   *                                                        00696\n         LR    R1,R5                    LOAD ADDR OF ENDING POS         00697\n         L     R2,SPCSVE5               LOAD ADDR OF BEGINNNING POS     00698\n         SR    R1,R2                    COMPUTE LENGTH                  00699\n         BCTR  R1,0                                                     00700\n         EX    R1,SPCMVC                MOVE TO XREC                    00701\n         B     SPACE70                  GO TO BLANK ENDING ')'          00702\nSPCMVC   MVC   XSPACE(0),0(R2)                                          00703\nSPACE70  EQU   *                                                        00704\n         LA    R1,XSPACE+L'XSPACE       LOAD ADDR OF END OF XSPACE      00705\n         LA    R2,XSPACE                LOAD ADDR OF START OF XSPACE    00706\n         LR    R0,R1                    COMPUTE BCT REG                 00707\n         SR    R0,R2                                                    00708\nSPACE80  EQU   *                                                        00709\n         CLI   0(R1),RIGHTP             IS IT ')'                       00710\n         BE    SPACE90                  YES - GO BLANK IT               00711\n         CLI   0(R1),BLANK              IS IT BLANK                     00712\n         BNE   SPACE100                 NO - GET OUT                    00713\n         S     R1,=F'1'                 BACK UP 1 CHAR                  00714\n         BCT   R0,SPACE80               LOOP                            00715\n         B     SPACE100                 GET OUT                         00716\nSPACE90  EQU   *                                                        00717\n         MVI   0(R1),BLANK              BLANK OUT ENDING ')'            00718\n         B     SPACE100                                                 00719\nSPACE100 EQU   *                                                        00720\n         L     R10,SPCSVE10                                             00721\n         BR    R10                                                      00722\n*                                                                     * 00723\nSPCSVE5  DC    F'0'                                                     00724\nSPCSVE10 DC    F'0'                                                     00725\n*                                                                     * 00726\n         EJECT                                                          00727\nDCB10    EQU   *                                                        00728\n         BR    R10                                                      00729\n         EJECT                                                          00730\n*********************************************************************** 00731\n*                                                                     * 00732\n*                                                                     * 00733\n*              D S O R G    R O U T I N  E                            * 00734\n*                                                                     * 00735\n*              DSORG=PS                                               * 00736\n*                                                                     * 00737\n*********************************************************************** 00738\nDSORG10  EQU   *                                                        00739\n         ST    R10,DSORGSVE                                             00740\n         A     R5,=F'6'                 BUMP PAST 'DSORG='              00741\n         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK      00742\n         MVC   XDSORG,FOUND             MOVE TO XREC                    00743\n         L     R10,DSORGSVE                                             00744\n         BR    R10                                                      00745\n*                                                                     * 00746\nDSORGSVE DC    F'0'                                                     00747\n         EJECT                                                          00748\n*********************************************************************** 00749\n*                                                                     * 00750\n*                                                                     * 00751\n*              R E C F M    R O U T I N E                             * 00752\n*                                                                     * 00753\n*              RECFM=FB                                               * 00754\n*                                                                     * 00755\n*********************************************************************** 00756\nRECFM10  EQU   *                                                        00757\n         ST    R10,RECFMSVE                                             00758\n         A     R5,=F'6'                 BUMP PAST 'RECFM='              00759\n         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK      00760\n         MVC   XRECFM,FOUND             MOVE TO XREC                    00761\n         L     R10,RECFMSVE                                             00762\n         BR    R10                                                      00763\n*                                                                     * 00764\nRECFMSVE DC    F'0'                                                     00765\n         EJECT                                                          00766\n*********************************************************************** 00767\n*                                                                     * 00768\n*              L R E C L    R O U T I N E                             * 00769\n*                                                                     * 00770\n*              LRECL=133                                              * 00771\n*                                                                     * 00772\n*********************************************************************** 00773\nLRECL10  EQU   *                                                        00774\n         ST    R10,LRECLSVE                                             00775\n         A     R5,=F'6'                 BUMP PAST 'LRECL='              00776\n         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK      00777\n         MVC   XLRECL,FOUND             MOVE TO XREC                    00778\n         L     R10,LRECLSVE                                             00779\n         BR    R10                                                      00780\n*                                                                     * 00781\nLRECLSVE DC    F'0'                                                     00782\n         EJECT                                                          00783\n*********************************************************************** 00784\n*                                                                     * 00785\n*              B L K S I Z E    R O U T I N E                         * 00786\n*                                                                     * 00787\n*              BLKSIZE=1330                                           * 00788\n*                                                                     * 00789\n*********************************************************************** 00790\nBLKSIZ10 EQU   *                                                        00791\n         ST    R10,BLKSVE                                               00792\n         A     R5,=F'8'                 BUMP PAST 'BLKSIZE='            00793\n         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK      00794\n         MVC   XBLKSIZE,FOUND           MOVE TO XREC                    00795\n         L     R10,BLKSVE                                               00796\n         BR    R10                                                      00797\n*                                                                     * 00798\nBLKSVE   DC    F'0'                                                     00799\n*                                                                     * 00800\n         EJECT                                                          00801\nCLEAR10  EQU   *                        CLEAR WKAREA1                   00802\n         STM   R2,R5,CLEARSVE                                           00803\n         L     R2,=A(WKAREA1)                                           00804\n         L     R3,WKAR1LEN                                              00805\n         LA    R4,BLANKS                                                00806\n         L     R5,MVCLLEN                                               00807\n         MVCL  R2,R4                                                    00808\n         B     CLEAR90                                                  00809\n*                                                                     * 00810\nCLEAR20  EQU   *                        CLEAR SYMTAB                    00811\n         STM   R2,R5,CLEARSVE                                           00812\n         L     R2,=A(SYMTAB)                                            00813\n         L     R3,SYMTLEN                                               00814\n         LA    R4,BLANKS                                                00815\n         L     R5,MVCLLEN                                               00816\n         MVCL  R2,R4                                                    00817\n         B     CLEAR90                                                  00818\n*                                                                     * 00819\nCLEAR30  EQU   *                        CLEAR KEYWORD RETURN CODES      00820\n         STM   R2,R5,CLEARSVE                                           00821\n         L     R9,=A(KEYWORDS)                                          00822\n         USING KEYWORDS,R9                                              00823\nCLEAR32  EQU   *                                                        00824\n         MVI   KWRC,HEX00                                               00825\n         LA    R9,KEYWORDL(,R9)                                         00826\n         CLI   KWLEN,HEXFF                                              00827\n         BE    CLEAR38                                                  00828\n         B     CLEAR32                                                  00829\nCLEAR38  EQU   *                                                        00830\n         B     CLEAR90                                                  00831\n         DROP  R9                                                       00832\n*                                                                     * 00833\nCLEAR90  EQU   *                                                        00834\n         LM    R2,R5,CLEARSVE                                           00835\n         BR    R10                                                      00836\n*                                                                     * 00837\nCLEARSVE DC    4F'0'                                                    00838\n*                                                                     * 00839\n         EJECT                                                          00840\nERROR10  EQU   *                        STAT NAME > 8 CHARS             00841\n         MVC   PRTMESS,MESS10                                           00842\n         B     ERROR200                                                 00843\nERROR20  EQU   *                        STAT OP NOT FOUND               00844\n         MVC   PRTMESS,MESS20                                           00845\n         B     ERROR200                                                 00846\nERROR30  EQU   *                        STAT OP > 4 CHARS               00847\n         MVC   PRTMESS,MESS30                                           00848\n         B     ERROR200                                                 00849\nERROR40  EQU   *                        CONT STAT NOT FOUND             00850\n         MVC   PRTMESS,MESS40                                           00851\n         B     ERROR200                                                 00852\nERROR50  EQU   *                        CONT DOES NOT START BEFORE 17   00853\n         MVC   PRTMESS,MESS50                                           00854\n         B     ERROR200                                                 00855\nERROR60  EQU   *                                                        00856\n         MVC   PRTMESS,MESS60           SCAN WENT PAST COL 71           00857\n         B     ERROR200                                                 00858\nERROR70  EQU   *                                                        00859\n         MVC   PRTMESS,MESS70           STATEMENT TOO LONG              00860\n         B     ERROR200                                                 00861\nERROR200 EQU   *                        PRINT ERROR                     00862\n         MVC   PRTMBR,PDSMBR                                            00863\n         MVC   PRTSTAT,INREC                                            00864\n         MVI   PRTCC,CHR0               DOUBLE SPACE                    00865\n         PUT   PRTFILE,PRTREC                                           00866\n         MVC   PRTREC,PRTREC-1                                          00867\n         L     R1,LINECTR                                               00868\n         A     R1,=F'1'                 BUMP LINE CTR                   00869\n         ST    R1,LINECTR                                               00870\n         C     R1,=F'54'                IS LINECTR < 54                 00871\n         BL    ERROR290                                                 00872\n         BAL   R10,HEADER10             PRINT HEADER                    00873\nERROR290 EQU   *                                                        00874\n         B     A300                                                     00875\n*                                                                     * 00876\nHEADER10 EQU   *                        HEADER ROUTINE                  00877\n         PUT   PRTFILE,HDR1                                             00878\n         PUT   PRTFILE,HDR2                                             00879\n         SR    R1,R1                                                    00880\n         ST    R1,LINECTR               ZERO LINECTR                    00881\n         BR    R10                                                      00882\n*                                                                     * 00883\n         EJECT                                                          00884\nSCAN10   EQU   *                        SCAN FOR BLANK                  00885\n         SR    R1,R1                                                    00886\nSCAN12   CLI   0(R5),BLANK              IS IT BLANK                     00887\n         BE    SCAN18                                                   00888\n         A     R1,=F'1'                                                 00889\n         A     R5,=F'1'                                                 00890\n         BCT   R0,SCAN12                LOOP                            00891\n*                                       ERROR                         * 00892\nSCAN18   BR    R10                                                      00893\n*                                                                     * 00894\nSCAN20   EQU   *                        SCAN FOR NON-BLANK              00895\n         SR    R1,R1                                                    00896\nSCAN22   CLI   0(R5),BLANK                                              00897\n         BNE   SCAN28                                                   00898\n         A     R1,=F'1'                                                 00899\n         A     R5,=F'1'                                                 00900\n         BCT   R0,SCAN22                LOOP                            00901\n*                                       ERROR                         * 00902\nSCAN28   BR    R10                                                      00903\n*                                                                     * 00904\nSCAN30   EQU   *                        SCAN FOR BLANK AND SAVE         00905\n         SR    R1,R1                                                    00906\n         LA    R2,FOUND                                                 00907\n         MVC   FOUND,FOUND-1                                            00908\nSCAN32   CLI   0(R5),BLANK                                              00909\n         BE    SCAN38                                                   00910\n         MVC   0(1,R2),0(R5)                                            00911\n         A     R1,=F'1'                                                 00912\n         A     R2,=F'1'                                                 00913\n         A     R5,=F'1'                                                 00914\n         BCT   R0,SCAN32                LOOP                            00915\n*                                       ERROR                         * 00916\nSCAN38   BR    R10                                                      00917\n*                                                                     * 00918\nSCAN40   EQU   *                        SCAN FOR '-----' OR BLANK       00919\n         SR    R1,R1                                                    00920\n         LA    R2,FOUND                                                 00921\n         MVC   FOUND,FOUND-1                                            00922\nSCAN42   CLI   0(R5),QUOTE                                              00923\n         BE    SCAN46                                                   00924\n         CLI   0(R5),BLANK                                              00925\n         BE    SCAN49                                                   00926\nSCAN44   EQU   *                                                        00927\n         MVC   0(1,R2),0(R5)                                            00928\n         A     R1,=F'1'                                                 00929\n         A     R2,=F'1'                                                 00930\n         A     R5,=F'1'                                                 00931\n         BCT   R0,SCAN42                                                00932\n         B     SCAN48                                                   00933\nSCAN46   EQU   *                                                        00934\n         MVC   0(1,R2),0(R5)                                            00935\n         A     R1,=F'1'                                                 00936\n         A     R2,=F'1'                                                 00937\n         A     R5,=F'1'                                                 00938\n         CLI   0(R5),QUOTE                                              00939\n         BE    SCAN44                                                   00940\n         BCT   R0,SCAN46                                                00941\n*                                                                     * 00942\nSCAN48   L     R15,=F'4'                SET RC TO 4                     00943\n         BR    R10                                                      00944\nSCAN49   SR    R15,R15                  SET RC TO 0                     00945\n         BR    R10                                                      00946\n*                                                                     * 00947\nSCAN100  EQU   *                        SCAN   CHARS AND SAVE           00948\n         MVI   SCANCHR1,BLANK           BLANK-NULL                      00949\n         MVI   SCANCHR2,NULL                                            00950\n         MVI   SCANCHR3,NULL                                            00951\n         B     SCAN200                                                  00952\nSCAN110  EQU   *                                                        00953\n         MVI   SCANCHR1,EQUAL           EQUAL-NULL                      00954\n         MVI   SCANCHR2,NULL                                            00955\n         MVI   SCANCHR3,NULL                                            00956\n         B     SCAN200                                                  00957\nSCAN115  EQU   *                                                        00958\n         MVI   SCANCHR1,EQUAL           EQUAL-BLANK                     00959\n         MVI   SCANCHR2,BLANK                                           00960\n         MVI   SCANCHR3,NULL                                            00961\n         B     SCAN200                                                  00962\nSCAN120  EQU   *                                                        00963\n         MVI   SCANCHR1,COMMA           COMMA-NULL                      00964\n         MVI   SCANCHR2,NULL                                            00965\n         MVI   SCANCHR3,NULL                                            00966\n         B     SCAN200                                                  00967\nSCAN125  EQU   *                                                        00968\n         MVI   SCANCHR1,COMMA           COMMA-BLANK                     00969\n         MVI   SCANCHR2,BLANK                                           00970\n         MVI   SCANCHR3,NULL                                            00971\n         B     SCAN200                                                  00972\nSCAN130  EQU   *                                                        00973\n         MVI   SCANCHR1,POINT           POINT-NULL                      00974\n         MVI   SCANCHR2,NULL                                            00975\n         MVI   SCANCHR3,NULL                                            00976\n         B     SCAN200                                                  00977\nSCAN140  EQU   *                                                        00978\n         MVI   SCANCHR1,QUOTE           QUOTE-NULL                      00979\n         MVI   SCANCHR2,NULL                                            00980\n         MVI   SCANCHR3,NULL                                            00981\n         B     SCAN200                                                  00982\nSCAN150  EQU   *                                                        00983\n         MVI   SCANCHR1,BLANK           BLANK-NULL                      00984\n         MVI   SCANCHR2,NULL                                            00985\n         MVI   SCANCHR3,NULL                                            00986\n         B     SCAN200                                                  00987\nSCAN160  EQU   *                                                        00988\n         MVI   SCANCHR1,AMPER           AMPER-NULL                      00989\n         MVI   SCANCHR2,NULL                                            00990\n         MVI   SCANCHR3,NULL                                            00991\n         B     SCAN200                                                  00992\nSCAN170  EQU   *                                                        00993\n         MVI   SCANCHR1,POINT           POINT-COMMA                     00994\n         MVI   SCANCHR2,COMMA                                           00995\n         MVI   SCANCHR3,NULL                                            00996\n         B     SCAN200                                                  00997\nSCAN180  EQU   *                                                        00998\n         MVI   SCANCHR1,LEFTP           LEFT PAREN-BLANK                00999\n         MVI   SCANCHR2,BLANK                                           01000\n         MVI   SCANCHR3,NULL                                            01001\n         B     SCAN200                                                  01002\nSCAN190  EQU   *                                                        01003\n         MVI   SCANCHR1,RIGHTP          RIGHT PAREN-COMMA-BLANK         01004\n         MVI   SCANCHR2,COMMA                                           01005\n         MVI   SCANCHR3,BLANK                                           01006\n         B     SCAN200                                                  01007\nSCAN194  EQU   *                                                        01008\n         MVI   SCANCHR1,RIGHTP          RIGHT PAREN-BLANK               01009\n         MVI   SCANCHR2,BLANK                                           01010\n         MVI   SCANCHR3,NULL                                            01011\n         B     SCAN200                                                  01012\nSCAN196  EQU   *                                                        01013\n         MVI   SCANCHR1,RIGHTP          RIGHTP PAREN-LEFT PAREN-BLK     01014\n         MVI   SCANCHR2,LEFTP                                           01015\n         MVI   SCANCHR3,BLANK                                           01016\n         B     SCAN200                                                  01017\nSCAN200  EQU   *                                                        01018\n         SR    R1,R1                                                    01019\n         LA    R2,FOUND                 POINT R2 TO FOUND               01020\n         MVC   FOUND,FOUND-1            BLANK FOUND                     01021\nSCAN210  EQU   *                                                        01022\n         CLC   SCANCHR1,0(R5)           IS IT CHAR 1                    01023\n         BE    SCAN230                                                  01024\n         CLC   SCANCHR2,0(R5)           IS IT CHAR 2                    01025\n         BE    SCAN230                                                  01026\n         CLC   SCANCHR3,0(R5)           IS IT CHAR 3                    01027\n         BE    SCAN230                                                  01028\n         MVC   0(1,R2),0(R5)            MOVE CHAR TO FOUND              01029\n         A     R1,=F'1'                                                 01030\n         A     R2,=F'1'                 BUMP CTRS                       01031\n         A     R5,=F'1'                                                 01032\n         BCT   R0,SCAN210               LOOP                            01033\n*                                       ERROR                         * 01034\nSCAN230  BR    R10                                                      01035\n*                                                                     * 01036\n         EJECT                                                          01037\nGET10    EQU   *                                                        01038\n         TM    PDSSW,HEX40              DO WE HAVE MEMBER NAME          01039\n         BO    GET20                    YES                             01040\n         L     R15,PDSENTRY                                             01041\n         CALL  (15),(PDSGETD,PDSMBR),VL     GET MEMBER NAME             01042\n         C     R15,=F'4'                IS IT END OF DIRECTORY          01043\n         BE    GET60                    YES                             01044\n         OI    PDSSW,HEX40              WE HAVE MEMBER NAME             01045\nGET20    EQU   *                                                        01046\n         TM    PDSSW,HEX20              HAVE WE FOUND MEMBER            01047\n         BO    GET30                    YES                             01048\n         L     R15,PDSENTRY                                             01049\n         CALL  (15),(PDSFIND,PDSMBR),VL     FIND MEMBER                 01050\n         C     R15,=F'4'                WAS MEMBER FOUND                01051\n         BE    GET40                    NO                              01052\n         OI    PDSSW,HEX20              YES - WE HAVE FOUND MEMBER      01053\n         MVC   XPGM,BLANKS                                              01054\n         MVC   XSTEP,BLANKS                                             01055\nGET30    EQU   *                                                        01056\n         L     R15,PDSENTRY                                             01057\n         CALL  (15),(PDSGETM,INREC),VL      GET MBR RECORD              01058\n         C     R15,=F'4'                IS IT END OF MEMBER             01059\n         BE    GET40                                                    01060\n         MVC   XPROC,PDSMBR             MOVE MBR NAME TO XREC           01061\n         B     GET90                                                    01062\nGET40    EQU   *                                                        01063\n         NI    PDSSW,HEX80              RESET SWITCHES                  01064\n         B     GET10                    GO TO GET NEXT MEMBER           01065\nGET60    EQU   *                                                        01066\n         TM    PDSSW,HEX80              ARE WE AT END OF 2ND PDS        01067\n         BO    GET80                    YES                             01068\n         CLC   PDSNAME2,=CL8'DUMMY'     IS 2ND PDS DUMMY                01069\n         BE    GET80                    YES                             01070\n         L     R15,PDSENTRY                                             01071\n         CALL  (15),(PDSCLOSE),VL       CLOSE 1ST FILE                  01072\n         L     R15,PDSENTRY                                             01073\n         CALL  (15),(PDSOPEN,PDSNAME2),VL     OPEN 2ND FILE             01074\n         OI    PDSSW,HEX80              TURN SW ON                      01075\n         B     GET10                                                    01076\nGET80    EQU   *                                                        01077\n         L     R15,PDSENTRY                                             01078\n         CALL  (15),(PDSCLOSE),VL       CLOSE FILE                      01079\n         L     R15,=F'4'                SET RC TO 4                     01080\n         BR    R10                                                      01081\nGET90    EQU   *                                                        01082\n         SR    R15,R15                  SET RC TO 0                     01083\n         BR    R10                                                      01084\n*                                                                     * 01085\n         EJECT                                                          01086\n         LTORG                                                          01087\n         EJECT                                                          01088\n*                                                                     * 01089\nSYSPDCB  DS    0F                                                       01090\nPRTFILE  DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      X01091\n               RECFM=FBA,LRECL=133,BLKSIZE=3990                         01092\n*                                                                     * 01093\nSORTIDCB DS    0F                                                       01094\nOUTFILE  DCB   DDNAME=SORTIN,DSORG=PS,MACRF=PM,                        X01095\n               RECFM=FB,LRECL=135,BLKSIZE=2700                          01096\n*                                                                     * 01097\n         EJECT                                                          01098\nPDSENTRY DC    F'0'                     NSP012 ENTRY POINT              01099\nPDSOPEN  DC    F'0'                     PDS OP CODES                    01100\nPDSGETD  DC    F'4'                                                     01101\nPDSFIND  DC    F'8'                                                     01102\nPDSGETM  DC    F'12'                                                    01103\nPDSCLOSE DC    F'16'                                                    01104\nPDSNAME1 DC    CL8'PROCLIB1'                                            01105\nPDSNAME2 DC    CL8'PROCLIB2'                                            01106\nPDSMBR   DC    CL8' '                                                   01107\nPDSSW    DC    X'00'                                                    01108\nPDSPARM  DC    C' '           INFO PASSED FROM PARM OF EXEC CARD        01109\n*                                                                     * 01110\nMVC10    MVC   0(0,R6),FOUND                                            01111\nMVC20    MVC   0(0,R6),FOUND                                            01112\n*                                                                     * 01113\nSCANCHR1 DC    C' '                     SCAN CHARS                      01114\nSCANCHR2 DC    C' '                                                     01115\nSCANCHR3 DC    C' '                                                     01116\n*                                                                     * 01117\nDWRD     DS    D                                                        01118\nLINECTR  DC    F'0'                                                     01119\nWKAR1LEN DC    A(WKAREA1E-WKAREA1)      LENGTH OF WKAREA1               01120\nSYMTLEN  DC    A(SYMTABE-SYMTAB)        LENGTH OF SYMTAB                01121\nMVCLLEN  DC    X'40000001'                                              01122\n*                                                                     * 01123\n         EJECT                                                          01124\nINREC    DS    0CL80                    INPUT RECORD                    01125\n         DC    CL80' '                                                  01126\n*                                                                     * 01127\n         DC    C' '                                                     01128\nPRTREC   DS    0CL133                   PRINT RECORD                    01129\nPRTCC    DC    CL1' '                   CARR CONTROL                    01130\nPRTMBR   DC    CL8' '                                                   01131\n         DC    CL5' '                                                   01132\nPRTSTAT  DC    CL80' '                                                  01133\n         DC    CL5' '                                                   01134\nPRTMESS  DC    CL30' '                                                  01135\n         DC    CL4' '                                                   01136\n*                                                                     * 01137\nHDR1     DS    0CL133                   HEADER 1                        01138\n         DC    CL133'1     DSNAME CROSS REFERENCE EXCEPTION LIST'       01139\n*                                                                     * 01140\nHDR2     DS    0CL133                   HEADER 2                        01141\n         DC    CL133' '                                                 01142\n*                                                                     * 01143\nMESS10   DC    CL30'STAT NAME GREATER THAN 8 CHAR'                      01144\nMESS20   DC    CL30'STAT OP NOT FOUND'                                  01145\nMESS30   DC    CL30'STAT OP GREATER THAN 4 CHARS'                       01146\nMESS40   DC    CL30'CONTINUATION NOT FOUND'                             01147\nMESS50   DC    CL30'CONTINUATION PAST COL 16'                           01148\nMESS60   DC    CL30'SCAN PAST COL 71'                                   01149\nMESS70   DC    CL30'STATEMENT TOO LONG'                                 01150\n*                                                                     * 01151\nBLANKS   DC    CL80' '                                                  01152\n         DC    C' '                                                     01153\nFOUND    DC    CL80' '                                                  01154\n*                                                                     * 01155\n         DC    C' '                                                     01156\nW2STAT   DC    CL256' '                                                 01157\nW2STAT2  DC    CL256' '                                                 01158\n*                                                                     * 01159\n         EJECT                                                          01160\n         DS    0F                                                       01161\nSORTLST1 DC    X'80',AL3(SORTPRM1)                                      01162\n         DC    H'0'                                                     01163\nSORTPRM1 DC    AL2(PARMEND1-PARMBEG1)                                   01164\nPARMBEG1 EQU   *                                                        01165\n         DC    A(SORT1,SORTEND1,REC1,RECEND1,0,0)                       01166\nSORTSIZ1 DC    F'100000'                                                01167\nSORTMSG1 DC    X'FF00'                                                  01168\n         DC    C'AP'                                                    01169\nPARMEND1 EQU   *                                                        01170\n*                                                                     * 01171\nSORT1    DS    0H                                                       01172\n*                              DSNAME    I/O       PROC      STEP     * 01173\n         DC    C' SORT FIELDS=(1,44,CH,A,45,1,CH,D,46,8,CH,A,62,8,CH,A' 01174\n         DC    C'),SIZE=E40000 '                                        01175\nSORTEND1 EQU   *-1                                                      01176\n*                                                                     * 01177\nREC1     DS    0H                                                       01178\n         DC    C' RECORD LENGTH=135,TYPE=F '                            01179\nRECEND1  EQU   *-1                                                      01180\n*                                                                     * 01181\n         EJECT                                                          01182\n         DC    C' '                                                     01183\nXREC     DS    0CL135                   XREF RECORD                     01184\nXDSN     DC    CL44' '                  DSNAME                          01185\nXIO      DC    CL1' '                   INPUT/OUTPUT                    01186\nXPROC    DC    CL8' '                   PROC                            01187\nXPGM     DC    CL8' '                   PROGRAM                         01188\nXSTEP    DC    CL8' '                   STEP                            01189\nXRELGEN  DC    CL4' '                   RELATIVE GEN                    01190\nXDISP    DS    0CL9                     DISP                            01191\nXDISP1   DC    CL3' '                                                   01192\nXDISP2   DC    CL3' '                                                   01193\nXDISP3   DC    CL3' '                                                   01194\nXUNIT    DC    CL8' '                   UNIT                            01195\nXEXPDT   DC    CL5' '                   EXPDT/RETPD                     01196\nXSPACE   DC    CL25' '                  SPACE                           01197\nXDCB     DS    0CL15                    DCB                             01198\nXDSORG   DC    CL2' '                        DSORG                      01199\nXRECFM   DC    CL3' '                        RECFM                      01200\nXLRECL   DC    CL5' '                        LRECL                      01201\nXBLKSIZE DC    CL5' '                        BLKSIZE                    01202\n         DC    CL15' '                  FILLER                          01203\n*                                                                     * 01204\nKEYWORDS DS    0F                       KEYWORDS TO SCAN FOR            01205\nKWLEN    DC    X'04'                    KEYWORD LENGTH                  01206\nKWNAME   DC    CL9'DSN='                KEYWORD                         01207\nKWRC     DC    X'00'                    RETURN CODE                     01208\n         DC    X'00'                                                    01209\nKWADDR   DC    A(DSN10)                                                 01210\nKEYWORDL EQU   *-KEYWORDS               ENTRY LENGTH                    01211\n         DC    X'07',CL9'DSNAME=',X'0000',A(DSN20)                      01212\n         DC    X'04',CL9'PGM=',X'0000',A(PGM10)                         01213\n         DC    X'05',CL9'DISP=',X'0000',A(DISP10)                       01214\n         DC    X'05',CL9'UNIT=',X'0000',A(UNIT10)                       01215\n         DC    X'06',CL9'EXPDT=',X'0000',A(EXPDT10)                     01216\n         DC    X'06',CL9'RETPD=',X'0000',A(EXPDT10)                     01217\n         DC    X'06',CL9'SPACE=',X'0000',A(SPACE10)                     01218\n         DC    X'04',CL9'DCB=',X'0000',A(DCB10)                         01219\n         DC    X'06',CL9'DSORG=',X'0000',A(DSORG10)                     01220\n         DC    X'06',CL9'RECFM=',X'0000',A(RECFM10)                     01221\n         DC    X'06',CL9'LRECL=',X'0000',A(LRECL10)                     01222\n         DC    X'08',CL9'BLKSIZE=',X'0000',A(BLKSIZ10)                  01223\n         DC    X'FF'                    END OF TABLE                    01224\n*                                                                     * 01225\nWKAREA1  DS    0CL2048                  INPUT STATMENT                  01226\nW1NAME   DC    CL8' '                   JOBNAME-PROCNAME-STEP-DDNAME    01227\nW1IDNT   DC    CL4' '                   JOB-PROC-EXEC-DD                01228\nW1STAT   DC    CL256' '                STATMENT                         01229\nW1STAT2  DC    CL256' '                                                 01230\n         DC    6CL256' '                                                01231\nWKAREA1E EQU   *                                                        01232\n*                                                                     * 01233\nSYMTAB   DS    0CL2048                  SYMBOLIC TABLE                  01234\nSYML1    DC    CL1' '                   ENTRY LENGTH                    01235\nSYML2    DC    CL1' '                   NAME LENGTH                     01236\nSYMNAME  DC    CL8' '                   ENTRY NAME                      01237\nSYML3    DC    CL1' '                   EQUATE LENGTH                   01238\nSYMEQU   DC    CL10' '                  EQUATE                          01239\n         DC    8CL256' '                                                01240\nSYMTABE  EQU   *                                                        01241\n*                                                                     * 01242\n         END                                                            01243\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSP012": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "          TITLE '*----NSP012----*  JCL XREF -- PDS ACCESS SUBROUTINE'   00002\n*********************************************************************** 00007\n*                                                                     * 00008\n*              OPERATIONS               PARM LIST                     * 00009\n*                                                                     * 00010\n*              1. OPEN PDS              0    DDNAME                   * 00011\n*                 ABEND 110 = DD MISSING                              * 00012\n*                                                                     * 00013\n*              2. READ DIRECTORY        4    MEMBER NAME              * 00014\n*                 RC 4 = END OF DIRECTORY                             * 00015\n*                                                                     * 00016\n*              3. FIND MEMBER           8    MEMBER NAME              * 00017\n*                 RC 4 = MEMBER NOT FOUND                             * 00018\n*                                                                     * 00019\n*              4. READ RECORD           12   INPUT AREA               * 00020\n*                 RC 4 = END OF MEMBER                                * 00021\n*                                                                     * 00022\n*              5. CLOSE PDS             16                            * 00023\n*                                                                     * 00024\n*                                       (OP CODE MUST BE A FULLWORD)  * 00025\n*                                                                     * 00026\n*********************************************************************** 00027\n         EJECT                                                          00028\n         GENESIS CSECT=NSP012,ID=NSP012,EQU=Y,BASE=R13                  00029\n*                                                                     * 00030\n         PRINT NOGEN                                                    00031\nHEX00    EQU   X'00'                    EQUATES                         00032\nHEX10    EQU   X'10'                                                    00033\nHEX1F    EQU   X'1F'                                                    00034\nHEXFF    EQU   X'FF'                                                    00035\n*                                                                     * 00036\n         USING PDSDSCT,R6                                               00037\n*                                                                       00038\n         LM    R5,R6,0(R1)              PICKUP OP CODE AND AREA         00039\n         L     R5,0(,R5)                                                00040\n         LM    R7,R10,SAVEREGS          LOAD REGS                       00041\n         C     R5,=F'0'                 IS IT OPEN                      00042\n         BE    OPEN10                                                   00043\n         C     R5,=F'4'                 IS IT READ DIRECTORY            00044\n         BE    RDD10                                                    00045\n         C     R5,=F'8'                 IS IT FIND MEMBER               00046\n         BE    FIND10                                                   00047\n         C     R5,=F'12'                IS IT READ MEMBER               00048\n         BE    RDM10                                                    00049\n         C     R5,=F'16'                IS IT CLOSE                     00050\n         BE    CLOSE10                                                  00051\n         L     R15,=F'8'                SET RETURN CODE TO 8            00052\n         B     RETURN                                                   00053\n*                                                                     * 00054\nRETURN   EQU   *                        RETURN TO CALLER                00055\n         STM   R7,R10,SAVEREGS          SAVE REGS                       00056\n         L     R13,4(,R13)                                              00057\n         RETURN (14,12),RC=(15)                                         00058\n*                                                                     * 00059\nOPEN10   EQU   *                                                        00060\n         MVC   SYSLIB+40(8),0(R6)       MOVE DDNAME TO DCBS             00061\n         MVC   DIRCTRY+40(8),0(R6)                                      00062\n*                                                                       00063\n         CLI   PARMSW,0                                                 00064\n         BNE   OPEN15                                                   00065\n*                                                                       00066\n         CLI   PDSPARM,C'A'             IS THERE A PARM?                00067\n         BL    OPEN12                   NO -- BRANCH                    00068\n*                                                                       00069\n         CLI   PDSPARM,C'Z'             IS IT VALID?                    00070\n         BH    OPEN12                   NO -- BRANCH                    00071\n*                                                                       00072\n         MVC   HIMEMBER,PDSPARM        SAVE THE PARM INFO               00073\nOPEN12   MVI   PARMSW,X'FF'             SET THE SWITCH                  00074\n*                                                                     * 00075\nOPEN15   OPEN  (DIRCTRY,,SYSLIB)        OPEN PDS                        00076\n         TM    SYSLIB+48,HEX10          DID SYSLIB OPEN OK              00077\n         BZ    OPEN30                   NO - ASSUME DDCARD MISSING      00078\n         MVI   OPENSW,HEXFF             MARK SWITCH AS OPEN             00079\n         MVI   DIRSW,HEX00              SET DIR SW OFF                  00080\n         SR    R15,R15                                                  00081\n         B     RETURN                                                   00082\nOPEN30   EQU   *                                                        00083\n         MVC   OPENWTO+4(8),0(R6)       MOVE DDNAME TO WTO              00084\n         LA    R1,OPENWTO                                               00085\n         WTO   MF=(E,(R1))                                              00086\n         ABEND 110,DUMP,STEP                                            00087\n*                                                                     * 00088\nOPENWTO  WTO   '          DD MISSING',ROUTCDE=11,MF=L                   00089\n*                                                                     * 00090\n         EJECT                                                          00091\nRDD10    EQU   *                        READ DIRECTORY                  00092\n         CLI   DIRSW,HEX00              IS DIR SW ON                    00093\n         BE    RDD30                    NO - GO TO GET DIR BLOCK        00094\n         NI    11(R9),HEX1F             ZERO NON-HALFWORD BITS          00095\n         SR    R2,R2                    ZERO WORK REG                   00096\n         IC    R2,11(,R9)               PICKUP NO. OF USER HALFWORDS    00097\n         SLL   R2,1                     MULTIPLY BY 2                   00098\n         LA    R9,12(R2,R9)             BASIC LENGTH + USER LENGTH      00099\n         LA    R2,12(,R2)               ADD BASIC LENGTH TO USER LNTH   00100\n         SR    R8,R2                    IS BLOCK COMPLETE               00101\n         BNP   RDD30                    YES - GO TO GET ANOTHER BLOCK   00102\n         CLI   0(R9),HEXFF              IS THIS A SHORT BLOCK           00103\n         BE    RDD90                    YES - END OF DIRECTORY          00104\n         B     RDD80                    NO - RETURN THIS MEMBER TO USR  00105\nRDD30    EQU   *                                                        00106\n         GET   DIRCTRY,DIRAREA          GET DIRECTORY BLOCK             00107\n         CLI   DIRAREA+2,HEXFF          ANY MEMBERS IN THE RECORD       00108\n         BE    RDD90                    NO - END OF DIRECTORY           00109\n         LH    R8,DIRAREA               YES - PICKUP NO. OF BYTES USED  00110\n         LA    R9,DIRAREA+2             START OF DIRECTORY ENTRIES      00111\n         S     R8,=F'2'                 SUBTRACT LENGTH OF ENTRY        00112\n         MVI   DIRSW,HEXFF              SET DIR SW ON                   00113\n         B     RDD80                                                    00114\n*                                                                     * 00115\nRDD80    EQU   *                                                        00116\n         MVC   0(8,R6),0(R9)            MOVE MEMBER NAME TO USER        00117\n         CLI   HIMEMBER,C' '            ARE WE LOOKING FOR SPECIFIC     00118\n         BE    RDD85                    NO -- BRANCH                    00119\n         CLC   HIMEMBER,0(R6)           DOES THIS ONE MATCH?            00120\n         BNE   RDD10                    NO -- BRANCY                    00121\nRDD85    SR    R15,R15                                                  00122\n         B     RETURN                                                   00123\nRDD90    EQU   *                                                        00124\n         LA    R15,4                                                    00125\n         B     RETURN                                                   00126\n*                                                                     * 00127\n         EJECT                                                          00128\nFIND10   EQU   *                                                        00129\n         MVC   MEMBER,0(R6)                                             00130\n         FIND  SYSLIB,MEMBER,D          LOCATE MEMBER                   00131\n         B     *+4(R15)                 TEST RETURN CODE                00132\n         B     FIND20                   FIND OK                         00133\n         B     FIND30                   MEMBER NOT FOUND                00134\n         B     FIND40                   IO ERROR                        00135\nFIND20   EQU   *                                                        00136\n         SR    R15,R15                  SET RC TO 0                     00137\n         B     FIND90                                                   00138\nFIND30   EQU   *                                                        00139\n         L     R15,=F'4'                SET RC TO 4                     00140\n         B     FIND90                                                   00141\nFIND40   EQU   *                                                        00142\n         L     R15,=F'8'                SET RC TO 8                     00143\n         B     FIND90                                                   00144\nFIND90   EQU   *                                                        00145\n         B     RETURN                                                   00146\n*                                                                     * 00147\n         EJECT                                                          00148\nRDM10    EQU   *                                                        00149\n         CLI   MBRSW,HEXFF                                              00150\n         BE    RDM50                                                    00151\n         LA    R7,BLOCK                 ADDR OF INPUT AREA              00152\n         READ  BPDECB,SF,SYSLIB,(R7),'S'     READ NEXT BLOCK            00153\n         CHECK BPDECB                                                   00154\n         LH    R10,SYSLIB+62            BLKSIZE OF RECORD               00155\n         L     R1,SYSLIB+68             ADDR OF IOB PREFIX              00156\n         CLC   21(3,R1),DCBADR+1        IS THIS THE PREFIX              00157\n         BE    *+8                      NO - WE'RE AT THE IOB START     00158\n         LA    R1,8(,R1)                YES - INCREMENT TO IOB START    00159\n         SH    R10,14(,R1)              SUBTRACT RESIDUAL BYTE COUNT    00160\n         MVI   MBRSW,HEXFF                                              00161\n*                                                                     * 00162\nRDM20    EQU   *                                                        00163\n         LH    R1,SYSLIB+82             PICKUP LRECL                    00164\n         BCTR  R1,0                                                     00165\n         EX    R1,RDMMVC                MOVE RECORD TO USER AREA        00166\n         B     RDM90                                                    00167\nRDMMVC   MVC   0(0,R6),0(R7)                                            00168\n*                                                                     * 00169\nRDM50    EQU   *                                                        00170\n         AH    R7,SYSLIB+82             ADD LOGICAL REC LEN TO REC ADR  00171\n         SH    R10,SYSLIB+82            DECREMENT REMAINING BYTE CNT    00172\n         BNP   RDM60                    ENTIRE BLOCK HAS BEEN READ      00173\n         B     RDM20                    DATA LEFT                       00174\nRDM60    EQU   *                                                        00175\n         MVI   MBRSW,HEX00                                              00176\n         B     RDM10                                                    00177\nRDM90    EQU   *                                                        00178\n         SR    R15,R15                                                  00179\n         B     RETURN                                                   00180\nMBREOF   EQU   *                                                        00181\n         LA    R15,4                                                    00182\n         B     RETURN                                                   00183\n*                                                                     * 00184\nCLOSE10  EQU   *                                                        00185\n         CLOSE (DIRCTRY,,SYSLIB)                                        00186\n         MVI   OPENSW,HEX00             RESET SWITCHES                  00187\n         MVI   DIRSW,HEX00                                              00188\n         MVI   MBRSW,HEX00                                              00189\n         SR    R15,R15                                                  00190\n         B     RETURN                                                   00191\n*                                                                     * 00192\n         EJECT                                                          00193\nSYSDCB   DS    0F                                                       00194\nSYSLIB   DCB   DDNAME=SYSLIB,DSORG=PO,MACRF=R,EODAD=MBREOF              00195\n*                                                                     * 00196\nDIRDCB   DS    0F                                                       00197\nDIRCTRY  DCB   DDNAME=SYSLIB,DSORG=PS,MACRF=GM,                        X00198\n               RECFM=F,LRECL=256,BLKSIZE=256                            00199\n*                                                                     * 00200\n         LTORG                                                          00201\n*                                                                     * 00202\nHIMEMBER DC    C' '                                                     00203\nPARMSW   DC    X'00'                    PARM PROCESSED SWITCH           00204\nOPENSW   DC    X'00'                    SWITCHES                        00205\nDIRSW    DC    X'00'                                                    00206\nMBRSW    DC    X'00'                                                    00207\n*                                                                     * 00208\nDCBADR   DC    A(SYSLIB)                SYSLIB DCB ADDR                 00209\nSAVEREGS DC    4F'0'                                                    00210\n*                                                                     * 00211\nMEMBER   DC    CL8' '                   MEMBER NAME                     00212\n*                                                                     * 00213\nDIRAREA  DC    CL256' '                 DIRECTORY BLOCK                 00214\n         DC    CL10' '                                                  00215\n*                                                                     * 00216\nBLOCK    DS    4CL4096                  DATA BLOCK                      00217\n*                                                                     * 00218\n         EJECT                                                          00219\nPDSDSCT  DSECT                                                          00220\nPDSNAME1 DS    CL8                                                      00221\nPDSNAME2 DS    CL8                                                      00222\nPDSMBR   DS    CL8                                                      00223\nPDSSW    DS    X                                                        00224\nPDSPARM  DS    C                INFO FROM THE EXEC PARM FIELD           00225\n         END                                                            00226\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSP013": {"ttr": 1289, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE '*----NSP013----*  JCL XREF  --  DATA SET NAME CROSSREFE*00001\n               RENCE'                                                   00002\n*********************************************************************** 00007\n*                                                                     * 00008\n*                                                                     * 00009\n*     DSNAME XREF PRINT PROGRAM - 'NSP013'                            * 00010\n*                                                                     * 00011\n*                                                                     * 00012\n*     THIS PROGRAM PRINTS OUTPUT FROM PROGRAM 'NSP011'                * 00013\n*                                                                     * 00014\n*                                                                     * 00015\n*********************************************************************** 00016\n         EJECT                                                          00017\n         GENESIS CSECT=NSP013,ID=NSP013,EQU=Y,BASE=R12                  00018\n*                                                                     * 00019\n         PRINT NOGEN                                                    00020\nBLANK    EQU   C' '                     EQUATE                          00021\nCHR0     EQU   C'0'                                                     00022\nCHRI     EQU   C'I'                                                     00023\nCHRO     EQU   C'O'                                                     00024\n*                                                                     * 00025\nHEX00    EQU   X'00'                                                    00026\nHEXFF    EQU   X'FF'                                                    00027\n*                                                                     * 00028\nA10      EQU   *                                                        00029\n         LOAD  EP=NSP016                LOAD DATE ROUTINE               00030\n         LR    R15,R0                                                   00031\n         CALL  (15),(DATEWK),VL                                         00032\n         MVC   H1DATE,DATE3             MOVE CURRENT DATE TO HEADER     00033\n*                                                                     * 00034\n         OPEN  (INFILE,(INPUT),PRTFILE,(OUTPUT))                        00035\n         MVC   PRTREC,PRTREC-1                                          00036\n         BAL   R10,HEADER10             PRINT HEADERS                   00037\nA20      EQU   *                                                        00038\n         GET   INFILE,XREC              GET INPUT RECORD                00039\n         CLC   DSNAME,XDSN              DID DSNAME CHANGE               00040\n         BE    A100                     NO                              00041\n         MVC   DSNAME,XDSN              SAVE NEW DSNAME                 00042\n         CLI   FIRSTSW,HEX00            IS THIS FIRST TIME THRU         00043\n         BE    A30                      YES                             00044\n         MVI   H3CC,BLANK               SET TO SINGLE SPACE             00045\n         PUT   PRTFILE,HDR3             PUT SEPARATOR LINE              00046\n         L     R1,LINECTR                                               00047\n         A     R1,=F'1'                 BUMP LINE COUNTER               00048\n         ST    R1,LINECTR                                               00049\n         C     R1,LINEMAX1              IS IT PAGE OVERFLOW             00050\n         BNH   A30                      NO                              00051\n         BAL   R10,HEADER10             PRINT HEADERS                   00052\nA30      EQU   *                                                        00053\n         MVI   FIRSTSW,HEXFF                                            00054\n         MVI   PCC,BLANK                SET TO SINGLE SPACE             00055\n         MVC   PDSN(L'PDSN+L'PUNIT),XDSN     MOVE DSNAME TO PRINT       00056\nA100     EQU   *                                                        00057\n         L     R1,LINECTR                                               00058\n         C     R1,LINEMAX2              IS IT PAGE OVERFLOW             00059\n         BNH   A101                     NO                              00060\n         BAL   R10,HEADER10             PRINT HEADERS                   00061\n         MVC   PDSN,XDSN                                                00062\n         MVC   PDSN+20(7),=C' * CONT'   CONTINUE ON NEXT PAGE           00063\nA101     EQU   *                                                        00064\n         CLI   XIO,CHRI                 IS IT INPUT                     00065\n         BE    A110                     YES                             00066\n         CLC   XUNIT,BLANKS             IS UNIT BLANK                   00067\n         BE    A102                     YES - DO NOT MOVE UNIT          00068\n         MVC   PUNIT,XUNIT              NO                              00069\nA102     EQU   *                                                        00070\n         MVC   PBLKSIZE,XBLKSIZE                                        00071\n         MVC   PLRECL,XLRECL                                            00072\n         MVC   PRECFM,XRECFM                                            00073\n         MVC   PEXPDT,XEXPDT                                            00074\n         MVC   PSPACE,XSPACE                                            00075\n         MVC   POUTPUT,XPROC                                            00076\n         B     A120                                                     00077\nA110     EQU   *                                                        00078\n         MVC   PINPUT,XPROC                                             00079\nA120     EQU   *                                                        00080\n         MVC   PSTEP,XSTEP                                              00081\n         MVC   PPGM,XPGM                                                00082\n         MVC   PDISP2,XDISP2                                            00083\n         MVC   PDISP3,XDISP3                                            00084\n         MVC   PRELGEN,XRELGEN                                          00085\n*                                                                     * 00086\n         PUT   PRTFILE,PRTREC           PRINT RECORD                    00087\n         MVC   PRTREC,PRTREC-1          CLEAR                           00088\n         L     R1,LINECTR                                               00089\n         A     R1,=F'1'                 BUMP LINE COUNTER               00090\n         ST    R1,LINECTR                                               00091\n         B     A20                                                      00092\n*                                                                     * 00093\n         EJECT                                                          00094\nHEADER10 EQU   *                        HEADER ROUTINE                  00095\n         L     R1,PAGECTR                                               00096\n         A     R1,=F'1'                 BUMP PAGE COUNTER               00097\n         ST    R1,PAGECTR                                               00098\n         CVD   R1,DWRD                  MOVE PAGE NO.                   00099\n         MVC   H1PAGE,MASK                                              00100\n         ED    H1PAGE,DWRD+6                                            00101\n         PUT   PRTFILE,HDR1             PRINT HEADER 1                  00102\n         PUT   PRTFILE,HDR2             PRINT HEADER 2                  00103\n         SR    R1,R1                                                    00104\n         ST    R1,LINECTR                                               00105\n         PUT   PRTFILE,PRTREC                                           00106\n         MVC   PRTREC,PRTREC-1                                          00107\n         BR    R10                                                      00108\n*                                                                     * 00109\nINEOF    EQU   *                        END OF FILE ROUTINE             00110\n         MVI   H3CC,BLANK                                               00111\n         PUT   PRTFILE,HDR3                                             00112\n         CLOSE (INFILE,,PRTFILE)                                        00113\n         EXODUS RC=0                                                    00114\n*                                                                     * 00115\n         EJECT                                                          00116\nINDCB    DS    0F                                                       00117\nINFILE   DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=GM,EODAD=INEOF             00118\n*                                                                     * 00119\nPRTDCB   DS    0F                                                       00120\nPRTFILE  DCB   DDNAME=SYSPRNT1,DSORG=PS,MACRF=PM,                      X00121\n               RECFM=FBA,LRECL=133,BLKSIZE=1330                         00122\n*                                                                     * 00123\n         EJECT                                                          00124\nLINECTR  DC    F'0'                     LINE COUNTER                    00125\nLINEMAX1 DC    F'49'                    MAX LINES PER PAGE              00126\nLINEMAX2 DC    F'54'                                                    00127\nPAGECTR  DC    F'0'                     PAGE COUNTER                    00128\nDWRD     DS    D                                                        00129\nFIRSTSW  DC    X'00'                    FIRST TIME SWITCH               00130\nMASK     DC    X'40202021'                                              00131\nBLANKS   DC    CL10' '                                                  00132\n*                                                                     * 00133\nDATEWK   DS    0CL55                    DATE AREA                       00134\n         DC    CL19' '                                                  00135\nDATE3    DC    CL8' '                                                   00136\n         DC    CL28' '                                                  00137\n*                                                                     * 00138\nDSNAME   DC    CL44' '                                                  00139\n*                                                                     * 00140\nXREC     DS    0CL135                   INPUT RECORD                    00141\nXDSN     DS    CL44                     DSNAME                          00142\nXIO      DS    CL1                      INPUT/OUTPUT                    00143\nXPROC    DS    CL8                      PROC                            00144\nXPGM     DS    CL8                      PROGRAM                         00145\nXSTEP    DS    CL8                      STEP                            00146\nXRELGEN  DS    CL4                      RELATIVE GEN NO.                00147\nXDISP    DS    0CL9                     DISP                            00148\nXDISP1   DS    CL3                                                      00149\nXDISP2   DS    CL3                                                      00150\nXDISP3   DS    CL3                                                      00151\nXUNIT    DS    CL8                      UNIT                            00152\nXEXPDT   DS    CL5                                                      00153\nXSPACE   DS    CL25                     SPACE                           00154\nXDCB     DS    0CL15                                                    00155\nXDSORG   DS    CL2                      DSORG                           00156\nXRECFM   DS    CL3                      RECFM                           00157\nXLRECL   DS    CL5                      LRECL                           00158\nXBLKSIZE DS    CL5                      BLKSIZE                         00159\n*                                                                     * 00160\n         DC    C' '                                                     00161\nPRTREC   DS    0CL133                   PRINT RECORD                    00162\nPCC      DS    CL1                                                      00163\nPDSN     DS    CL28                     DSNAME                          00164\nPUNIT    DS    CL6                      UNIT                            00165\n         DS    CL2                                                      00166\nPBLKSIZE DS    CL5                      BLKSIZE                         00167\n         DS    CL2                                                      00168\nPLRECL   DS    CL5                      LRECL                           00169\n         DS    CL2                                                      00170\nPRECFM   DS    CL3                      RECFM                           00171\n         DS    CL2                                                      00172\nPEXPDT   DS    CL5                      EXPDT                           00173\n         DS    CL2                                                      00174\nPSPACE   DS    CL18                     SPACE                           00175\n         DS    CL1                                                      00176\nPOUTPUT  DS    CL8                      OUTPUT FROM PROC                00177\n         DS    CL2                                                      00178\nPINPUT   DS    CL8                      INPUT TO PROC                   00179\n         DS    CL2                                                      00180\nPSTEP    DS    CL8                      STEP                            00181\n         DS    CL1                                                      00182\nPPGM     DS    CL8                      PROGRAM                         00183\n         DS    CL2                                                      00184\nPDISP2   DS    CL3                      DISP 2                          00185\n         DS    CL1                                                      00186\nPDISP3   DS    CL3                      DISP 3                          00187\n         DS    CL2                                                      00188\nPRELGEN  DS    CL3                      RELATIVE GEN NO.                00189\n*                                                                     * 00190\nHDR1     DS    0CL133                   HEADER 1                        00191\n         DC    CL21'1  NSP013            '                              00192\n         DC    CL17' '                                                  00193\n         DC    CL55'D S N   CROSS REFERENCE LISTING'                    00194\n         DC    CL9'RUN DATE'                                            00195\nH1DATE   DC    CL8' '                                                   00196\n         DC    CL9'    PAGE'                                            00197\nH1PAGE   DC    CL4' '                                                   00198\n         DC    CL10' '                                                  00199\n*                                                                     * 00200\nHDR2     DS    0CL133                   HEADER 2                        00201\n         DC    CL29'0DATA SET NAME'                                     00202\n         DC    CL8'UNIT'                                                00203\n         DC    CL7'BLKSI'                                               00204\n         DC    CL7'LRECL'                                               00205\n         DC    CL5'FMT'                                                 00206\n         DC    CL7'EXPDT'                                               00207\n         DC    CL19'SPACE'                                              00208\n         DC    CL10'OUTPUT'                                             00209\n         DC    CL10'INPUT'                                              00210\n         DC    CL9'STEP'                                                00211\n         DC    CL10'PROGRAM'                                            00212\n         DC    CL9'DISP'                                                00213\n         DC    CL3'GEN'                                                 00214\n*                                                                     * 00215\nHDR3     DS    0CL133                   SEPARATOR LINE                  00216\nH3CC     DC    C' '                                                     00217\n         DC    132C'-'                                                  00218\n*                                                                     * 00219\n         LTORG                                                          00220\n         END                                                            00221\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSP014": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE '*----NSP014----*  JCL XREF --  DATA SETS WITH NO EXPDT *00001\n               OR RETPD SPECIFIED'                                      00002\n*********************************************************************** 00007\n*                                                                     * 00008\n*     TAPE DATASETS WITH NO EXPDT/RETPD  -  'NSP014'                  * 00009\n*                                                                     * 00010\n*                                                                     * 00011\n*     THIS PROGRAM SELECT TAPE DATASETS WITH NO EXPDT/RETPD AND       * 00012\n*     PUTS THESE RECORD ON A WORK FILE.                               * 00013\n*     THEN MATCHES THESE RECORD AGAINST COMPLETE FILE TO PRINT ALL    * 00014\n*     RECORDS WITH THIS DSNAME.                                       * 00015\n*                                                                     * 00016\n*********************************************************************** 00017\n         EJECT                                                          00018\n         PRINT NOGEN                                                    00019\n         GENESIS CSECT=NSP014,ID=NSP014,EQU=Y,BASE=R13                  00020\n*                                                                     * 00021\nBLANK    EQU   C' '                     EQUATE                          00022\nCHR0     EQU   C'0'                                                     00023\nCHRI     EQU   C'I'                                                     00024\nCHRO     EQU   C'O'                                                     00025\n*                                                                     * 00026\nHEX00    EQU   X'00'                                                    00027\nHEXFF    EQU   X'FF'                                                    00028\n*                                                                     * 00029\nA10      EQU   *                                                        00030\n         LOAD  EP=NSP016                LOAD DATE ROUTINE               00031\n         LR    R15,R0                                                   00032\n         CALL  (15),(DATEWK),VL                                         00033\n         MVC   H1DATE,DATE3             MOVE CURRENT DATE TO HEADER     00034\n*                                                                     * 00035\n         OPEN  (INFILE,(INPUT),WRKFILE,(OUTPUT))                        00036\n         LA    R1,A14                                                   00037\n         ST    R1,EOFADDR               SET EOF ADDR                    00038\nA12      EQU   *                                                        00039\n         GET   INFILE,XREC              GET RECORD                      00040\n         CLC   XDSN,WDSN                HAS THIS DSNAME BEEN WRITTEN    00041\n         BE    A12                      YES - DONT WRITE AGAIN          00042\n         CLC   XUNIT(4),=CL4'TAPE'      IS UNIT = TAPE                  00043\n         BNE   A12                      NO                              00044\n         CLC   XEXPDT,BLANKS            IS EXPDT BLANK                  00045\n         BNE   A12                      NO                              00046\n         CLI   XIO,CHRO                 IS IT OUTPUT                    00047\n         BNE   A12                      NO                              00048\n         MVC   WRKREC,XREC                                              00049\n         PUT   WRKFILE,WRKREC           PUT RECORD                      00050\n         B     A12                                                      00051\n*                                                                     * 00052\nA14      EQU   *                                                        00053\n         CLOSE (INFILE,,WRKFILE)                                        00054\n         LA    R1,ENDJOB                                                00055\n         ST    R1,EOFADDR               SET EOF ADDR                    00056\n*                                                                     * 00057\n         OPEN  (INFILE,(INPUT),WRKFILE,(INPUT),PRTFILE,(OUTPUT))        00058\n         MVC   PRTREC,PRTREC-1                                          00059\n         BAL   R10,HEADER10             PRINT HEADERS                   00060\nA20      EQU   *                                                        00061\n         GET   WRKFILE,WRKREC           GET SELECTED RECORD             00062\nA22      EQU   *                                                        00063\n         GET   INFILE,XREC              GET INPUT RECORD                00064\nA24      EQU   *                                                        00065\n         CLC   XDSN,WDSN                DOES DSNAME MATCH               00066\n         BL    A22                      LOW -LOOP TO GET NXT REC        00067\n         BE    A26                      EQUAL - GO TO PRINT             00068\n         GET   WRKFILE,WRKREC           HIGH - GET CONTROL REC          00069\n         B     A24                             GO TO COMPARE            00070\nA26      EQU   *                                                        00071\n         CLC   DSNAME,XDSN              DID DSNAME CHANGE               00072\n         BE    A100                     NO                              00073\n         MVC   DSNAME,XDSN              SAVE NEW DSNAME                 00074\n         CLI   FIRSTSW,HEX00            IS THIS FIRST TIME THRU         00075\n         BE    A30                      YES                             00076\n         MVI   H3CC,BLANK               SET TO SINGLE SPACE             00077\n         PUT   PRTFILE,HDR3             PUT SEPARATOR LINE              00078\n         L     R1,LINECTR                                               00079\n         A     R1,=F'1'                 BUMP LINE COUNTER               00080\n         ST    R1,LINECTR                                               00081\n         C     R1,LINEMAX1              IS IT PAGE OVERFLOW             00082\n         BNH   A30                      NO                              00083\n         BAL   R10,HEADER10             PRINT HEADERS                   00084\nA30      EQU   *                                                        00085\n         MVI   FIRSTSW,HEXFF                                            00086\n         MVI   PCC,BLANK                SET TO SINGLE SPACE             00087\n         MVC   PDSN(L'PDSN+L'PUNIT),XDSN     MOVE DSNAME TO PRINT       00088\nA100     EQU   *                                                        00089\n         L     R1,LINECTR                                               00090\n         C     R1,LINEMAX2              IS IT PAGE OVERFLOW             00091\n         BNH   A101                     NO                              00092\n         BAL   R10,HEADER10             PRINT HEADERS                   00093\n         MVC   PDSN,XDSN                                                00094\n         MVC   PDSN+20(7),=C' * CONT'   CONTINUE ON NEXT PAGE           00095\nA101     EQU   *                                                        00096\n         CLI   XIO,CHRI                 IS IT INPUT                     00097\n         BE    A110                     YES                             00098\n         CLC   XUNIT,BLANKS             IS UNIT BLANK                   00099\n         BE    A102                     YES - DO NOT MOVE UNIT          00100\n         MVC   PUNIT,XUNIT              NO                              00101\nA102     EQU   *                                                        00102\n         MVC   PBLKSIZE,XBLKSIZE                                        00103\n         MVC   PLRECL,XLRECL                                            00104\n         MVC   PRECFM,XRECFM                                            00105\n         MVC   PEXPDT,XEXPDT                                            00106\n         MVC   PSPACE,XSPACE                                            00107\n         MVC   POUTPUT,XPROC                                            00108\n         B     A120                                                     00109\nA110     EQU   *                                                        00110\n         MVC   PINPUT,XPROC                                             00111\nA120     EQU   *                                                        00112\n         MVC   PSTEP,XSTEP                                              00113\n         MVC   PPGM,XPGM                                                00114\n         MVC   PDISP2,XDISP2                                            00115\n         MVC   PDISP3,XDISP3                                            00116\n         MVC   PRELGEN,XRELGEN                                          00117\n*                                                                     * 00118\n         PUT   PRTFILE,PRTREC           PRINT RECORD                    00119\n         MVC   PRTREC,PRTREC-1          CLEAR                           00120\n         L     R1,LINECTR                                               00121\n         A     R1,=F'1'                 BUMP LINE COUNTER               00122\n         ST    R1,LINECTR                                               00123\n         B     A22                                                      00124\n*                                                                     * 00125\n         EJECT                                                          00126\nHEADER10 EQU   *                        HEADER ROUTINE                  00127\n         L     R1,PAGECTR                                               00128\n         A     R1,=F'1'                 BUMP PAGE COUNTER               00129\n         ST    R1,PAGECTR                                               00130\n         CVD   R1,DWRD                  MOVE PAGE NO.                   00131\n         MVC   H1PAGE,MASK                                              00132\n         ED    H1PAGE,DWRD+6                                            00133\n         PUT   PRTFILE,HDR1             PRINT HEADER 1                  00134\n         PUT   PRTFILE,HDR2             PRINT HEADER 2                  00135\n         SR    R1,R1                                                    00136\n         ST    R1,LINECTR                                               00137\n         PUT   PRTFILE,PRTREC                                           00138\n         MVC   PRTREC,PRTREC-1                                          00139\n         BR    R10                                                      00140\n*                                                                     * 00141\nEOF      EQU   *                        END OF FILE ROUTINE             00142\n         L     R10,EOFADDR                                              00143\n         BR    R10                                                      00144\n*                                                                     * 00145\nENDJOB   EQU   *                        END OF FILE ROUTINE             00146\n         MVI   H3CC,BLANK                                               00147\n         PUT   PRTFILE,HDR3                                             00148\n         CLOSE (INFILE,,WRKFILE,,PRTFILE)                               00149\n         EXODUS RC=0                                                    00150\n*                                                                     * 00151\n         EJECT                                                          00152\nINDCB    DS    0F                                                       00153\nINFILE   DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=GM,EODAD=EOF               00154\n*                                                                     * 00155\nWRKDCB   DS    0F                                                       00156\nWRKFILE  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(PM,GM),EODAD=EOF,         X00157\n               RECFM=FB,LRECL=135,BLKSIZE=2700                          00158\n*                                                                     * 00159\nPRTDCB   DS    0F                                                       00160\nPRTFILE  DCB   DDNAME=SYSPRNT2,DSORG=PS,MACRF=PM,                      X00161\n               RECFM=FBA,LRECL=133,BLKSIZE=1330                         00162\n*                                                                     * 00163\n         EJECT                                                          00164\nLINECTR  DC    F'0'                     LINE COUNTER                    00165\nLINEMAX1 DC    F'49'                    MAX LINES PER PAGE              00166\nLINEMAX2 DC    F'54'                                                    00167\nPAGECTR  DC    F'0'                     PAGE COUNTER                    00168\nDWRD     DS    D                                                        00169\nFIRSTSW  DC    X'00'                    FIRST TIME SWITCH               00170\nMASK     DC    X'40202021'                                              00171\nBLANKS   DC    CL10' '                                                  00172\nEOFADDR  DC    F'0'                     EOF ADDR                        00173\n*                                                                     * 00174\nDATEWK   DS    0CL55                    DATE AREA                       00175\n         DC    CL19' '                                                  00176\nDATE3    DC    CL8' '                                                   00177\n         DC    CL28' '                                                  00178\n*                                                                     * 00179\nDSNAME   DC    CL44' '                                                  00180\n*                                                                     * 00181\nWRKREC   DS    0CL135                   WRK RECORD                      00182\nWDSN     DS    CL44                     DSNAME                          00183\n         DS    CL91                                                     00184\n         DS    CL15                     FILLER                          00185\n*                                                                     * 00186\nXREC     DS    0CL135                   INPUT RECORD                    00187\nXDSN     DS    CL44                     DSNAME                          00188\nXIO      DS    CL1                      INPUT/OUTPUT                    00189\nXPROC    DS    CL8                      PROC                            00190\nXPGM     DS    CL8                      PROGRAM                         00191\nXSTEP    DS    CL8                      STEP                            00192\nXRELGEN  DS    CL4                      RELATIVE GEN NO.                00193\nXDISP    DS    0CL9                     DISP                            00194\nXDISP1   DS    CL3                                                      00195\nXDISP2   DS    CL3                                                      00196\nXDISP3   DS    CL3                                                      00197\nXUNIT    DS    CL8                      UNIT                            00198\nXEXPDT   DS    CL5                                                      00199\nXSPACE   DS    CL25                     SPACE                           00200\nXDCB     DS    0CL15                                                    00201\nXDSORG   DS    CL2                      DSORG                           00202\nXRECFM   DS    CL3                      RECFM                           00203\nXLRECL   DS    CL5                      LRECL                           00204\nXBLKSIZE DS    CL5                      BLKSIZE                         00205\n         DS    CL15                     FILLER                          00206\n*                                                                     * 00207\n         DC    C' '                                                     00208\nPRTREC   DS    0CL133                   PRINT RECORD                    00209\nPCC      DS    CL1                                                      00210\nPDSN     DS    CL28                     DSNAME                          00211\nPUNIT    DS    CL6                      UNIT                            00212\n         DS    CL2                                                      00213\nPBLKSIZE DS    CL5                      BLKSIZE                         00214\n         DS    CL2                                                      00215\nPLRECL   DS    CL5                      LRECL                           00216\n         DS    CL2                                                      00217\nPRECFM   DS    CL3                      RECFM                           00218\n         DS    CL2                                                      00219\nPEXPDT   DS    CL5                      EXPDT                           00220\n         DS    CL2                                                      00221\nPSPACE   DS    CL18                     SPACE                           00222\n         DS    CL1                                                      00223\nPOUTPUT  DS    CL8                      OUTPUT FROM PROC                00224\n         DS    CL2                                                      00225\nPINPUT   DS    CL8                      INPUT TO PROC                   00226\n         DS    CL2                                                      00227\nPSTEP    DS    CL8                      STEP                            00228\n         DS    CL1                                                      00229\nPPGM     DS    CL8                      PROGRAM                         00230\n         DS    CL2                                                      00231\nPDISP2   DS    CL3                      DISP 2                          00232\n         DS    CL1                                                      00233\nPDISP3   DS    CL3                      DISP 3                          00234\n         DS    CL2                                                      00235\nPRELGEN  DS    CL3                      RELATIVE GEN NO.                00236\n*                                                                     * 00237\nHDR1     DS    0CL133                   HEADER 1                        00238\n         DC    CL21'1  NSP014            '                              00239\n         DC    CL17' '                                                  00240\n         DC    CL55'TAPE DATASETS WITH NO EXPDT/RETPD'                  00241\n         DC    CL9'RUN DATE'                                            00242\nH1DATE   DC    CL8' '                                                   00243\n         DC    CL9'    PAGE'                                            00244\nH1PAGE   DC    CL4' '                                                   00245\n         DC    CL10' '                                                  00246\n*                                                                     * 00247\nHDR2     DS    0CL133                   HEADER 2                        00248\n         DC    CL29'0DATA SET NAME'                                     00249\n         DC    CL8'UNIT'                                                00250\n         DC    CL7'BLKSI'                                               00251\n         DC    CL7'LRECL'                                               00252\n         DC    CL5'FMT'                                                 00253\n         DC    CL7'EXPDT'                                               00254\n         DC    CL19'SPACE'                                              00255\n         DC    CL10'OUTPUT'                                             00256\n         DC    CL10'INPUT'                                              00257\n         DC    CL9'STEP'                                                00258\n         DC    CL10'PROGRAM'                                            00259\n         DC    CL9'DISP'                                                00260\n         DC    CL3'GEN'                                                 00261\n*                                                                     * 00262\nHDR3     DS    0CL133                   SEPARATOR LINE                  00263\nH3CC     DC    C' '                                                     00264\n         DC    132C'-'                                                  00265\n*                                                                     * 00266\n         LTORG                                                          00267\n         END                                                            00268\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSP015": {"ttr": 1542, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "          TITLE '*----NSP015----*  JCL XREF -- PROGRAM NAME CROSSREFERE*00001\n               NCE'                                                     00002\n*********************************************************************** 00007\n*                                                                     * 00008\n*     'PGM'  CROSS REFERENCE PROGRAM  -  'NSP015'                     * 00009\n*                                                                     * 00010\n*                                                                     * 00011\n*     THIS PROGRAM SORTS AND PRINTS OUTPUT FROM 'NSP011'.             * 00012\n*                                                                     * 00013\n*********************************************************************** 00014\n         EJECT                                                          00015\n         PRINT NOGEN                                                    00016\n         GENESIS CSECT=NSP015,ID=NSP015,EQU=Y,BASE=R13                  00017\n*                                                                     * 00018\nBLANK    EQU   C' '                     EQUATE                          00019\nCHR0     EQU   C'0'                                                     00020\nCHRI     EQU   C'I'                                                     00021\nCHRO     EQU   C'O'                                                     00022\n*                                                                     * 00023\nHEX00    EQU   X'00'                                                    00024\nHEXFF    EQU   X'FF'                                                    00025\n*                                                                     * 00026\nA10      EQU   *                                                        00027\n         LA    R1,SORTLST2              SORT BY PROGRAM NAME            00028\n         LINK  EP=SORT                                                  00029\n*                                                                     * 00030\n         LOAD  EP=NSP016                LOAD DATE ROUTINE               00031\n         LR    R15,R0                   AND CALL                        00032\n         CALL  (15),(DATEWK),VL                                         00033\n         MVC   H1DATE,DATE3             MOVE CURRENT DATE TO HEADER     00034\n*                                                                     * 00035\n         OPEN  (INFILE,(INPUT),PRTFILE,(OUTPUT))                        00036\n         MVC   PRTREC,PRTREC-1                                          00037\n         BAL   R10,HEADER10             PRINT HEADERS                   00038\nA20      EQU   *                                                        00039\n         GET   INFILE,XREC              GET INPUT RECORD                00040\n         CLC   PROGRAM,XPGM             DID PROGRAM CHANGE              00041\n         BE    A100                     NO                              00042\n         MVC   PROGRAM,XPGM             SAVE NEW PROGRAM                00043\n         CLI   FIRSTSW,HEX00            IS THIS 1ST TIME THRU           00044\n         BE    A30                                                      00045\n         PUT   PRTFILE,HDR3             PUT SEPARATOR LINE              00046\n         L     R1,LINECTR                                               00047\n         A     R1,=F'1'                 BUMP LINE COUNTER               00048\n         ST    R1,LINECTR                                               00049\n         C     R1,LINEMAX1              IS IT PAGE OVERFLOW             00050\n         BNH   A30                      NO                              00051\n         BAL   R10,HEADER10             PRINT HEADERS                   00052\nA30      EQU   *                                                        00053\n         MVI   FIRSTSW,HEXFF                                            00054\n         MVI   PCC,BLANK                SET TO SINGLE SPACE             00055\n         MVC   PPGM,XPGM                MOVE PROGRAM TO PRINT           00056\n         B     A102                                                     00057\nA100     EQU   *                                                        00058\n         CLC   PROC,XPROC                DONT PRINT IF PROC AND STEP    00059\n         BNE   A102                         ARE THE SAME                00060\n         CLC   STEP,XSTEP                                               00061\n         BNE   A102                                                     00062\n         B     A20                                                      00063\nA102     EQU   *                                                        00064\n         MVC   PROC,XPROC                                               00065\n         MVC   STEP,XSTEP                                               00066\n         L     R1,LINECTR                                               00067\n         C     R1,LINEMAX2              IS IT PAGE OVERFLOW             00068\n         BNH   A110                     NO                              00069\n         BAL   R10,HEADER10             YES - PRINT HEADERS             00070\n         MVC   PPGM,XPGM                                                00071\n         MVC   PCONT,=C' * CONT'        CONTINUE ON NEXT PAGE           00072\nA110     EQU   *                                                        00073\n         MVC   PPROC,XPROC              MOVE PROC TO PRINT              00074\n         MVC   PSTEP,XSTEP              MOVE STEP TO PRINT              00075\n*                                                                     * 00076\n         PUT   PRTFILE,PRTREC           PRINT RECORD                    00077\n         MVC   PRTREC,PRTREC-1          CLEAR                           00078\n         L     R1,LINECTR                                               00079\n         A     R1,=F'1'                 BUMP LINE COUNTER               00080\n         ST    R1,LINECTR                                               00081\n         B     A20                                                      00082\n*                                                                     * 00083\n         EJECT                                                          00084\nHEADER10 EQU   *                        HEADER ROUTINE                  00085\n         L     R1,PAGECTR                                               00086\n         A     R1,=F'1'                 BUMP PAGE COUNTER               00087\n         ST    R1,PAGECTR                                               00088\n         CVD   R1,DWRD                  MOVE PAGE NO.                   00089\n         MVC   H1PAGE,MASK                                              00090\n         ED    H1PAGE,DWRD+6                                            00091\n         PUT   PRTFILE,HDR1             PRINT HEADER 1                  00092\n         PUT   PRTFILE,HDR2             PRINT HEADER 2                  00093\n         PUT   PRTFILE,PRTREC           PRINT BLANK LINE                00094\n         SR    R1,R1                                                    00095\n         ST    R1,LINECTR                                               00096\n         BR    R10                                                      00097\n*                                                                     * 00098\nINEOF    EQU   *                        END OF FILE ROUTINE             00099\n         MVI   H3CC,BLANK                                               00100\n         PUT   PRTFILE,HDR3                                             00101\n         CLOSE (INFILE,,PRTFILE)                                        00102\n         EXODUS RC=0                                                    00103\n*                                                                     * 00104\n         EJECT                                                          00105\nINDCB    DS    0F                                                       00106\nINFILE   DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=GM,EODAD=INEOF             00107\n*                                                                     * 00108\nPRTDCB   DS    0F                                                       00109\nPRTFILE  DCB   DDNAME=SYSPRNT3,DSORG=PS,MACRF=PM,                      X00110\n               RECFM=FBA,LRECL=133,BLKSIZE=3990                         00111\n*                                                                     * 00112\n         EJECT                                                          00113\nLINECTR  DC    F'0'                     LINE COUNTER                    00114\nLINEMAX1 DC    F'49'                    MAX LINES PER PAGE              00115\nLINEMAX2 DC    F'54'                    MAX LINES PER PAGE              00116\nPAGECTR  DC    F'0'                     PAGE COUNTER                    00117\nDWRD     DS    D                                                        00118\nMASK     DC    X'40202021'                                              00119\nFIRSTSW  DC    X'00'                                                    00120\n*                                                                     * 00121\nPROGRAM  DC    XL8'0000000000000000'                                    00122\nPROC     DC    CL8' '                                                   00123\nSTEP     DC    CL8' '                                                   00124\n*                                                                     * 00125\nDATEWK   DS    0CL55                    DATE AREA                       00126\n         DS    CL19                                                     00127\nDATE3    DS    CL8                      MO/DA/YR                        00128\n         DS    CL28                                                     00129\n*                                                                     * 00130\n         EJECT                                                          00131\n         DS    0F                       SORT PARMS                      00132\nSORTLST2 DC    X'80',AL3(SORTPRM2)                                      00133\n         DC    H'0'                                                     00134\nSORTPRM2 DC    AL2(PARMEND2-PARMBEG2)                                   00135\nPARMBEG2 EQU   *                                                        00136\n         DC    A(SORT2,SORTEND2,REC2,RECEND2,0,0)                       00137\nSORTSIZ2 DC    F'100000'                                                00138\nSORTMSG2 DC    X'FF00'                                                  00139\n         DC    C'AP'                                                    00140\nPARMEND2 EQU   *                                                        00141\n*                                                                     * 00142\nSORT2    DS    0H                                                       00143\n*                              PGM       PROC      STEP               * 00144\n         DC    C' SORT FIELDS=(54,8,CH,A,46,8,CH,A,62,8,CH,A),'         00145\n         DC    C'SIZE=E40000 '                                          00146\nSORTEND2 EQU   *-1                                                      00147\n*                                                                     * 00148\nREC2     DS    0H                                                       00149\n         DC    C' RECORD LENGTH=135,TYPE=F '                            00150\nRECEND2  EQU   *-1                                                      00151\n*                                                                     * 00152\n         EJECT                                                          00153\nXREC     DS    0CL135                   INPUT RECORD                    00154\nXDSN     DS    CL44                     DSNAME                          00155\nXIO      DS    CL1                      INPUT/OUTPUT                    00156\nXPROC    DS    CL8                      PROC                            00157\nXPGM     DS    CL8                      PROGRAM                         00158\nXSTEP    DS    CL8                      STEP                            00159\nXRELGEN  DS    CL4                      RELATIVE GEN NO.                00160\nXDISP    DS    0CL9                     DISP                            00161\nXDISP1   DS    CL3                                                      00162\nXDISP2   DS    CL3                                                      00163\nXDISP3   DS    CL3                                                      00164\nXUNIT    DS    CL8                      UNIT                            00165\nXEXPDT   DS    CL5                                                      00166\nXSPACE   DS    CL25                     SPACE                           00167\nXDCB     DS    0CL15                                                    00168\nXDSORG   DS    CL2                      DSORG                           00169\nXRECFM   DS    CL3                      RECFM                           00170\nXLRECL   DS    CL5                      LRECL                           00171\nXBLKSIZE DS    CL5                      BLKSIZE                         00172\n         DS    CL15                     FILLER                          00173\n*                                                                     * 00174\n         DC    C' '                                                     00175\nPRTREC   DS    0CL133                   PRINT RECORD                    00176\nPCC      DS    CL1                                                      00177\n         DS    CL5                                                      00178\nPPGM     DS    CL8                      PROGRAM                         00179\nPCONT    DS    CL7                                                      00180\n         DS    CL8                                                      00181\nPPROC    DS    CL8                      PROC                            00182\n         DS    CL7                                                      00183\nPSTEP    DS    CL8                      STEP                            00184\n         DS    CL81                                                     00185\n*                                                                     * 00186\nHDR1     DS    0CL133                   HEADER 1                        00187\n         DC    CL21'1  NSP015            '                              00188\n         DC    CL17' '                                                  00189\n         DC    CL41'P G M   CROSS REFERENCE LISTING'                    00190\n         DC    CL9'RUN DATE'                                            00191\nH1DATE   DC    CL8' '                                                   00192\n         DC    CL11'    PAGE'                                           00193\nH1PAGE   DC    CL4' '                                                   00194\n         DC    CL22' '                                                  00195\n*                                                                     * 00196\nHDR2     DS    0CL133                   HEADER 2                        00197\n         DC    CL29'0    PROGRAM  NAME'                                 00198\n         DC    CL15'PROC'                                               00199\n         DC    CL5'STEP'                                                00200\n         DC    CL84' '                                                  00201\n*                                                                     * 00202\nHDR3     DS    0CL133                   SEPARATOR LINE                  00203\nH3CC     DC    C' '                                                     00204\n         DC    CL15' '                                                  00205\n         DC    40C'-'                                                   00206\n         DC    CL77' '                                                  00207\n*                                                                     * 00208\n         LTORG                                                          00209\n         END                                                            00210\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSP016": {"ttr": 1546, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "          TITLE '*----NSP016----*  JCL XREF -- CURRENT DATE SUBROUTINE' 00001\n*********************************************************************** 00002\n*                                                                     * 00003\n*              MUST BE LINKED AS REUSABLE........                     * 00004\n*              THIS ROUTINE WILL SUPPLY THE USER WITH CURRENT TIME    * 00005\n*              AND SEVERAL FORMS OF CURRENT DATE                      * 00006\n*                                                                     * 00007\n*              THE USER MUST PROVIDE A 55 CHAR AREA                   * 00008\n*                                                                     * 00009\n*        DS    0CL55                                                  * 00010\n*        DS    CL8       HH.MM.SS                                     * 00011\n*        DS    CL1                                                    * 00012\n*        DS    0CL9                                                   * 00013\n*        DS    CL3       MON                                          * 00014\n*        DS    CL1                                                    * 00015\n*        DS    CL2       DA                                           * 00016\n*        DS    CL1                                                    * 00017\n*        DS    CL2       YR                                           * 00018\n*        DS    CL1                                                    * 00019\n*        DS    CL8       MO/DA/YR                                     * 00020\n*        DS    CL1                                                    * 00021\n*        DS    CL2       YEAR                                         * 00022\n*        DS    CL3       DDD                                          * 00023\n*        DS    CL1                                                    * 00024\n*        DS    CL19      MONTH DA, YEAR                               * 00025\n*                                                                     * 00026\n*              HH.MM.SS JAN 01 76 01/01/76 76001 JANUARY  1, 1976     * 00027\n*                                                                     * 00028\n*********************************************************************** 00029\n         EJECT                                                          00030\nNSP016   CSECT                                                          00031\n         STM   14,12,12(13)             ENTRY                           00032\n         BALR  12,0                                                     00033\n         USING *,12                                                     00034\n         ST    13,MYSAVE+4                                              00035\n         LA    10,MYSAVE                                                00036\n         ST    10,8(13)                                                 00037\n         LR    13,10                                                    00038\n*                                                                     * 00039\n         USING PARM,5                                                   00040\n         L     5,0(1)                   LOAD ADDR OF CALLER'S AREA      00041\n*                                                                     * 00042\n         MVI   DATE1,X'40'              BLANK AREA                      00043\n         MVC   DATE1+1(54),DATE1                                        00044\n         ST    5,DOUBLE                 IS THIS LAST PARM               00045\n         TM    DOUBLE,X'80'                                             00046\n         BO    A50                      YES                             00047\n         L     6,4(1)                   NO                              00048\n         MVC   DATE6,0(6)               USE SECOND PARM INSTEAD OF      00049\n         OI    DATE6+4,X'F0'                 CURRENT DATE               00050\n         B     A80                                                      00051\n*                                                                     * 00052\nA50      EQU   *                                                        00053\n         TIME  DEC                      GET TIME AND DATE               00054\n         ST    0,FWRD                                                   00055\n         OI    FWRD+3,X'0F'                                             00056\n         UNPK  DATE1,FWRD               MOVE HHMMSS TO DATE1            00057\n         MVC   DATE1(2),DATE1+1                                         00058\n         MVI   DATE1+2,C'.'                                             00059\n         MVC   DATE1+7(1),DATE1+6                                       00060\n         MVC   DATE1+6(1),DATE1+5                                       00061\n         MVI   DATE1+5,C'.'                                             00062\n         ST    1,FWRD                                                   00063\n         OI    FWRD+3,X'0F'                                             00064\n         UNPK  DATE6,FWRD               MOVE YYDDD TO DATE6             00065\nA80      EQU   *                                                        00066\n*                                                                     * 00067\n         PACK  DOUBLE,DATE6(2)          PACK YY                         00068\n         CVB   6,DOUBLE                                                 00069\n         PACK  DOUBLE,DATE6+2(3)        PACK DDD                        00070\n         CVB   7,DOUBLE                                                 00071\n         LR    9,6                      LOAD R9 WITH YY                 00072\n         A     9,FCENT                  ADD 1900                        00073\n         SR    8,8                                                      00074\n         LA    10,4                                                     00075\n         DR    8,10                     DIVIDE 19YY BY 4                00076\n         LTR   8,8                      IS REMAINDER ZERO               00077\n         BZ    B10                                                      00078\n         LA    9,28                     NO                              00079\n         B     B20                                                      00080\nB10      LA    9,29                     YES                             00081\nB20      STH   9,DAYFEB                 MOVE 28 OR 29 TO FEB            00082\n*                                                                     * 00083\n*                                                                     * 00084\n         LR    8,7                      LOAD 8 WITH DDD                 00085\n         LA    2,13                     SET LOOP CTR                    00086\n         LA    9,DAYTAB                                                 00087\n         LA    6,MOTAB                                                  00088\n         LA    10,MONTAB                                                00089\n         LA    11,MONTHTAB                                              00090\nC20      SH    8,0(9)                   SUBTRACT DAYS                   00091\n         LTR   8,8                      IS DDD ZERO OR <ZERO            00092\n         BC    12,C40                   YES - GET OUT                   00093\n         LA    9,2(9)                   NO                              00094\n         LA    6,2(6)                                                   00095\n         LA    10,3(10)                                                 00096\n         LA    11,9(11)                                                 00097\n         BCT   2,C20                                                    00098\n*                                                                     * 00099\n*                                       ERROR                         * 00100\n         MVC   DATE1(10),=C'DATE ERROR'                                 00101\n         L     13,MYSAVE+4              RETURN                          00102\n         RETURN (14,12),RC=4                                            00103\n*                                                                     * 00104\n*                                                                     * 00105\nC40      AH    8,0(9)                   ADD DAYS                        00106\n         MVC   DATE2,0(10)              MOVE MONTH                      00107\n         CVD   8,DOUBLE                                                 00108\n         OI    DOUBLE+7,X'0F'                                           00109\n         UNPK  DATE3,DOUBLE             MOVE DAY                        00110\n         MVC   DATE4,DATE6              MOVE YY                         00111\n*                                                                     * 00112\n         MVC   DATE5(2),0(6)                                            00113\n         MVI   DATE5+2,C'/'                                             00114\n         MVC   DATE5+3(2),DATE3                                         00115\n         MVI   DATE5+5,C'/'                                             00116\n         MVC   DATE5+6(2),DATE6                                         00117\n*                                                                     * 00118\n*                                                                     * 00119\n         MVC   DATE7,0(11)              MOVE MONTH                      00120\n         MVC   DATE8,DATE3              MOVE DA                         00121\n         MVI   DATE9,C','                                               00122\n         MVC   DATE10(2),CENT                                           00123\n         MVC   DATE10+2(2),DATE6                                        00124\n         CLI   DATE8,C'0'               IS DA 0X                        00125\n         BNE   *+8                                                      00126\n         MVI   DATE8,C' '                                               00127\n*                                                                     * 00128\nD20      CLI   DATE7,C' '               SHIFT LEFT                      00129\n         BNE   D40                                                      00130\n         MVC   DATE7(18),DATE7+1                                        00131\n         B     D20                                                      00132\nD40      EQU   *                                                        00133\n*                                                                     * 00134\nGOBACK   L     13,MYSAVE+4              RETURN                          00135\n         RETURN (14,12),RC=0                                            00136\n*                                                                     * 00137\n         EJECT                                                          00138\n*                                                                     * 00139\nMYSAVE   DC    18F'0'                   SAVE AREA                       00140\n*                                                                     * 00141\nFWRD     DC    F'0'                     WORK AREAS                      00142\nDOUBLE   DS    D                                                        00143\n*                                                                     * 00144\nFCENT    DC    F'1900'                                                  00145\nCENT     DC    CL2'19'                                                  00146\n*                                                                     * 00147\n*                                                                     * 00148\nDAYTAB   DS    0H                                                       00149\n         DC    H'00'                                                    00150\n         DC    H'31'                                                    00151\nDAYFEB   DC    H'28'                                                    00152\n         DC    H'31'                                                    00153\n         DC    H'30'                                                    00154\n         DC    H'31'                                                    00155\n         DC    H'30'                                                    00156\n         DC    H'31'                                                    00157\n         DC    H'31'                                                    00158\n         DC    H'30'                                                    00159\n         DC    H'31'                                                    00160\n         DC    H'30'                                                    00161\n         DC    H'31'                                                    00162\n*                                                                     * 00163\nMONTAB   DS    0H                                                       00164\n         DC    C'   '                                                   00165\n         DC    C'JAN'                                                   00166\n         DC    C'FEB'                                                   00167\n         DC    C'MAR'                                                   00168\n         DC    C'APR'                                                   00169\n         DC    C'MAY'                                                   00170\n         DC    C'JUN'                                                   00171\n         DC    C'JUL'                                                   00172\n         DC    C'AUG'                                                   00173\n         DC    C'SEP'                                                   00174\n         DC    C'OCT'                                                   00175\n         DC    C'NOV'                                                   00176\n         DC    C'DEC'                                                   00177\n*                                                                     * 00178\nMOTAB    DS    0H                                                       00179\n         DC    C'  '                                                    00180\n         DC    C'01'                                                    00181\n         DC    C'02'                                                    00182\n         DC    C'03'                                                    00183\n         DC    C'04'                                                    00184\n         DC    C'05'                                                    00185\n         DC    C'06'                                                    00186\n         DC    C'07'                                                    00187\n         DC    C'08'                                                    00188\n         DC    C'09'                                                    00189\n         DC    C'10'                                                    00190\n         DC    C'11'                                                    00191\n         DC    C'12'                                                    00192\n*                                                                     * 00193\nMONTHTAB DS    0H                                                       00194\n         DC    C'         '                                             00195\n         DC    C'  JANUARY'                                             00196\n         DC    C' FEBRUARY'                                             00197\n         DC    C'    MARCH'                                             00198\n         DC    C'    APRIL'                                             00199\n         DC    C'      MAY'                                             00200\n         DC    C'     JUNE'                                             00201\n         DC    C'     JULY'                                             00202\n         DC    C'   AUGUST'                                             00203\n         DC    C'SEPTEMBER'                                             00204\n         DC    C'  OCTOBER'                                             00205\n         DC    C' NOVEMBER'                                             00206\n         DC    C' DECEMBER'                                             00207\n*                                                                     * 00208\nPARM     DSECT                                                          00209\nDATE1    DS    CL8                      HH.MM.SS                        00210\n         DS    CL1                                                      00211\nDATE2    DS    CL3                      MON                             00212\n         DS    CL1                                                      00213\nDATE3    DS    CL2                      DA                              00214\n         DS    CL1                                                      00215\nDATE4    DS    CL2                      YY                              00216\n         DS    CL1                                                      00217\nDATE5    DS    CL8                                                      00218\n         DS    CL1                                                      00219\nDATE6    DS    CL5                      YYDDD                           00220\n         DS    CL1                                                      00221\nDATE7    DS    CL9                      MONTH                           00222\n         DS    CL1                                                      00223\nDATE8    DS    CL2                      DA                              00224\nDATE9    DS    CL1                      ,                               00225\n         DS    CL1                                                      00226\nDATE10   DS    CL4                      YEAR                            00227\n         DS    CL1                                                      00228\n*                                                                     * 00229\n         LTORG                                                          00230\n         END   NSP016                                                   00231\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPJCL": {"ttr": 1796, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//NTDWD    JOB (ACCT),NAME,\n//             CLASS=A\n//NSP011   EXEC PGM=NSP011,PARM='PROCLIB1PROCLIB2'\n//STEPLIB  DD  DSN=SYS2.SYNCSORT.LINKLIB,DISP=SHR\n//PROCLIB1 DD  DSN=SYS1.PROCLIB,DISP=SHR\n//PROCLIB2 DD  DSN=IPO1.PROCLIB,DISP=SHR\n//SYSPRINT DD  SYSOUT=A\n//SYSPRNT1 DD  SYSOUT=A\n//SYSPRNT2 DD  SYSOUT=A\n//SYSPRNT3 DD  SYSOUT=A\n//SORTPRNT DD  SYSOUT=A\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,5),\n//             DCB=(RECFM=FB,LRECL=135,BLKSIZE=1350)\n//SORTIN   DD  UNIT=SYSDA,SPACE=(CYL,5),\n//             DCB=(RECFM=FB,LRECL=135,BLKSIZE=1350)\n//SORTOUT  DD  UNIT=SYSDA,SPACE=(CYL,5),\n//             DCB=(RECFM=FB,LRECL=135,BLKSIZE=1350)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,5)\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,5)\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,5)\n//SORTWK04 DD  UNIT=SYSDA,SPACE=(CYL,5)\n//SORTWK05 DD  UNIT=SYSDA,SPACE=(CYL,5)\n//SORTWK06 DD  UNIT=SYSDA,SPACE=(CYL,5)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT379/FILE379.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT379", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}