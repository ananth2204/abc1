 PROC 0         PI(PI) PM(NPM) PJ(PJ) PE(NPE) JCLRDR(NOSRDR)   +
      LET(LET) SYMS()  ACCOUNT() PGM($JOLCP35) +
       LIB(JOL60.LOAD) JOLSRCE(JOL60.INCLUDE) +
       JOLCMD(JOL60.CMDLIB) +
       INCL('&SYSPREF..JOL.JOL') MACRO('&SYSPREF..JOL.JOL')   +
       LOAD('JOL60.LOAD')            DSN() MEMB() FREE   +
       SUB SUBMIT LIST MSGOFF
 CONTROL          MSG NOFLUSH PROMPT
 IF &LIST = LIST THEN CONTROL LIST CONLIST
 ATTN           DO
       CONTROL NOMSG NOFLUSH
       FREE F($$A $$B +
              $$JPRINT $$JCL $$JWORK1 $$JWORK2 +
              $$JLOAD $$JINCL $$JMACRO $$JIN)
       CONTROL MSG NOFLUSH
       EXIT
       END
 SET &NULL =
 IF &FREE = FREE +
  OR           '&INCL' ¬= '&SYSPREF..JOL.JOL' +
  OR           '&MACRO'¬= '&SYSPREF..JOL.JOL' +
  OR           '&LOAD' ¬= 'JOL60.LOAD'  +
  THEN DO
       CONTROL NOMSG
       FREE FI($$JPRINT $$JCL $$JWORK1 $$JWORK2)
       FREE FI($$JLOAD $$JIN $$JINCL $$JMACRO)
       CONTROL MSG
       END
 CALL '&LIB.($TESTJCL)'
 IF &LASTCC=0 THEN GOTO RERUN
 ALQUICK: +
 IF &MSGOFF ¬= MSGOFF THEN +
  WRITE +
 >> JOL           BEGINNING TSO ALLOCATION AT &SYSTIME  ON  &SYSDATE
 ALLOC F($$A) DA('&SYSUID..$$JPRINT.DATA') +
 MOD SP(1 1) TRACK BLKSIZE(1330)
 ALLOC F($$B) DA('&SYSUID..$$JCL.DATA') MOD SP(1 1) TRACK BLKSIZE(3120)
 ALLOC FI($$JPRINT) DA('&SYSUID..$$JPRINT.DATA') OLD BLKSIZE(1330)
 ALLOC FI($$JCL) DA('&SYSUID..$$JCL.DATA') OLD BLKSIZE(3120)
 ALLOC FI($$JWORK1) BLKSIZE(800) SP(10 10) ROUND
 ALLOC FI($$JWORK2) BLKSIZE(800) SP(10 10) ROUND
 CONTROL NOMSG
 FREE FI(SYSTERM $$A $$B)
 CONTROL MSG
 ALLOC FI(SYSTERM) DA(*)
 ALLOC FI($$JLOAD) DA('&LOAD.' '&LIB.') SHR
 ALLOC FI($$JINCL)         DA('&INCL.'         '&JOLSRCE.')  SHR
 ALLOC FI($$JMACRO) +
 DA('&MACRO.'         '&JOLCMD.' ) SHR
 IF &MSGOFF ¬= MSGOFF +
  THEN DO
 WRITE >> '&SYSUID..$$JPRINT.DATA' AND '&SYSUID..$$JCL.DATA' ALLOCATED
 WRITE >> '&SYSPREF..JOL.JOL' ALLOCATED AS INCLUDE AND MACRO LIBRARY
  END
 RERUN: ATTN EXIT
      CONTROL NOMSG
      FREE F($$JIN)
      CONTROL MSG
      IF &DSN           ¬= &NULL +
         THEN DO
              ALLOC F($$JIN) DA('&DSN') SHR
              GOTO JOLEX
              END
      IF &STR(&MEMB) = &STR(*) THEN GOTO JOLENT
      IF &MEMB ¬= &NULL +
         THEN DO
              ALLOC F($$JIN) DA(JOL.JOL(&MEMB)) SHR
              GOTO JOLEX
              END
 AGN: ATTN EXIT
    WRITE >> ENTER A MEMBER NAME OF YOUR JOL DATASET OR AN *
    READ &ANS
    WRITE >> JOL EXECUTING
    CONTROL NOMSG
    FREE F($$JIN)
    CONTROL MSG
    IF &STR(&ANS)           = &STR(*) THEN GOTO JOLENT
    ALLOC F($$JIN) DA(JOL.JOL(&ANS)) SHR
    GOTO JOLEX
 JOLENT: +
    ALLOC FILE($$JIN) DA(*)
    WRITE >> ENTER JOL STATEMENTS ENDING WITH /*
 JOLEX: +
 CALL '&LIB.(&PGM.)' +
    'TEST &JCLRDR. &PI. &PM. &PE. &PJ. &LET. /+
    SYSACCT=&ACCOUNT,+
    SYSUID=&SYSUID.,SYSPREF=&SYSPREF.,TSOCLASS=X,&SYMS.'
 SET RETCODE = &LASTCC
 IF &SUB = SUB OR &SUBMIT = SUBMIT +
  THEN DO
       IF &RETCODE <= 4 THEN SUBMIT '&SYSUID..$$JCL.DATA'
      ELSE WRITE >> JOL ERRORS - JOB NOT SUBMITTED - LASTCC = &RETCODE
       END
 ELSE DO
    WRITENR +
    >> ENTER OPTION SUB JOL JCL MORE OR END (HIT ENTER TO TERMINATE)
    READ &ANS
       DO WHILE &ANS ¬= END AND &ANS ¬=
       IF &ANS = MORE THEN GOTO AGN
       IF &ANS = SUB THEN SUBMIT '&SYSUID..$$JCL.DATA'
       IF &ANS = JCL THEN LIST '&SYSUID..$$JCL.DATA' NONUM
       IF &ANS = JOL THEN LIST '&SYSUID..$$JPRINT.DATA' NONUM
       WRITENR +
     >> ENTER OPTION SUB JOL JCL MORE OR END (HIT ENTER TO TERMINATE)
       READ &ANS
       END
    END
EXIT: EXIT CODE(&RETCODE)
