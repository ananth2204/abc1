  DCLVSAM:MACRO(%DSN=,%DSNAME=,%NAME=,
                CYL,CYLS,TRK,TRACK,TRKS,TRACKS,RECS,REC,
                %VOL=,%VOLS=,%VOLUMES=,%VOLUME=,
                %ATTEMPTS=,%ATT=,
                %AUTH=,
                BUFFER,BUFFERS,
                %BUFSP=,
                %CODE=,
                %CI=,%CONTROL=,%CISZ=,%CNVSZ=,
                %FREESP=,%FSPC=,
                %KEYRANGE=,%KRNG=,
                %KEYS=,
                %MASTERPW=,%MRPW=,
                %MODEL=,
                %OWNER=,
                %READPW=,%RDPW=,
                %RECSIZE=,%RECSZ=,
                %SHARE=,
                %TO=,%FOR=,
                %UPDATEPW=,%UPDPW=,
                %DATA=,
                %INDEX=,
                %NOPANEL,
                );
 /*
                %ERASE,%NOERASE,%ERAS,%NERAS,
                %IMBED,%NOIMBED,%IMBD,%NIMBD,
                %INDEXED,%NONINDEXED,%NUMBERED,%IXD,%NIXD,%NUMD,
                %ORDERED,%UNORDERED,%ORD,%UNORD,
                %REPLICATE,
                %REUSE,%NOREUSE,%RUS,%NRUS,
                %SPANNED,%NOSPANNED,%SPND,%NSPND,
                %SPEED,%RECOVERY,%RCVY,
                %UNIQUE,%SUBALLOC,%UNQ,%SUBAL,
                %WAIT,%NOWAIT,
                %WRITECHK,%WCK,%NWCK,                    */

 DCL %WORK      INIT('');    /* WORK FIELD               */
 DCL %L         INIT('');    /* WORK FIELD               */
 DCL %X         INIT('');    /* WORK FIELD               */
 DCL %TEMPIND   INIT('');    /* FILLED IN BY INDEX MACRO */
 DCL %TEMPDATA  INIT('');
 DCL %TEMPCLUS  INIT('');
 DCL %SYSVSNME  INIT('');     /* SAVE VSAM DATA SET NAME             */
 DCL %SYSVSAM1  INIT('') EXT; /* KEEPS LIST OF VSAM DATA SETS IN JOB */
 DCL %SYSVSAM2  INIT('') EXT; /* AS ABOVE...                         */
 DCL %SYSVSWK1  INIT('') EXT; /* WORK AREA FOR CLUSTER               */
 DCL %SYSVSWK2  INIT('') EXT; /* WORK AREA FOR DATA                  */
 DCL %SYSVSWK3  INIT('') EXT; /* WORK AREA FOR INDEX                 */
 DCL %SYSVSWK4  INIT('') EXT; /* WORK AREA FOR ?????                 */
 DCL %SYSVSDSI  INIT('') EXT; /* DSID SAVED HERE                     */

    %SYSVSWK1='';             /* CLEAR WORK AREAS                    */
    %SYSVSWK2='';             /* CLEAR WORK AREAS                    */
    %SYSVSWK3='';             /* CLEAR WORK AREAS                    */
    %SYSVSWK4='';             /* CLEAR WORK AREAS                    */
    %WORK='%LIST(1)';         /* GET DSID                            */
    %SYSVSDSI='%WORK';        /* SAVE IT HERE TOO                    */

    %L=LENGTH(SYSVSAM1);      /* STORE IN VSAM TABLE                 */
    If %WORK¬=''              /* DO WE HAVE A %LIST(1)?              */
    Then Do;                  /* YES                                 */
           If %L<240 Then %SYSVSAM1='%SYSVSAM1,%WORK';
           Else %SYSVSAM2='%SYSVSAM2,%WORK';
    End;
    Else Do;
         WRITE 'NO DSID IN DCLVSAM MACRO: STATEMENT IGNORED';
         EXIT;
    End;
    %L=TYPE(WORK);
    If %L¬='CHAR'
    Then Do;
         WRITE 'DSID Not CHAR DCLVSAM MACRO: STATEMENT IGNORED';
     /*  EXIT; */
    End;

    If %DSN¬='' | %DSNAME¬='' | %NAME¬=''
    Then Do;
       %SYSVSWK1='NAME(%DSN%DSNAME%NAME)';
       %SYSVSNME=' %DSN%DSNAME%NAME';
    End;

    %L=2;
    If %LIST(2)='DS' Then %L=3;

    If %LIST(%L)¬=''
    Then Do;
        %WORK='%LIST(%L)';
        %X=INDEX(WORK,'.');
        If %X¬=0
        Then Do;
            %SYSVSWK1='NAME(%LIST(%L))';
            %SYSVSNME=' %LIST(%L)';
        End;
    End;
    %L=%L+1;                       /* POINT TO NEXT %LIST ITEM */

    If %CYL¬=0 | %CYLS¬=0
    Then Do;
       %CYL=%CYL+%CYLS;
       If %CYL>3
       Then Do;
           %L=TYPE(%LIST(%CYL-2));
           If %L='NUM'              /* 10, 20 CYL */
           Then %SYSVSWK1='%SYSVSWK1 CYL(%LIST(%CYL-2) %LIST(%CYL-1))';
           If %L¬='NUM' Then %SYSVSWK1='%SYSVSWK1 CYL(%LIST(%CYL-1))';
       End;
       Else %SYSVSWK1='%SYSVSWK1 CYL(%LIST(%CYL-1))';
    End;

    If %TRK¬=0 | %TRKS¬=0 | %TRACKS¬=0 | %TRACKS¬=0
    Then Do;
       %TRK=%TRK+%TRKS+%TRACKS+%TRACK;
       If %TRK>3
       Then Do;
           %L=TYPE(%LIST(%TRK-2));
           If %L='NUM'              /* 10, 20 CYL */
           Then %SYSVSWK1='%SYSVSWK1 TRK(%LIST(%TRK-2) %LIST(%TRK-1))';
           If %L¬='NUM' Then %SYSVSWK1='%SYSVSWK1 TRK(%LIST(%TRK-1))';
       End;
       Else %SYSVSWK1='%SYSVSWK1 TRK(%LIST(%TRK-1))';
    End;

    If %REC¬=0 | %RECS¬=0
    Then Do;
       %REC=%REC+%RECS;
       If %REC>3
       Then Do;
           %L=TYPE(%LIST(%REC-2));
           If %L='NUM'              /* 10, 20 CYL */
           Then %SYSVSWK1='%SYSVSWK1 REC(%LIST(%REC-2) %LIST(%REC-1))';
           If %L¬='NUM' Then %SYSVSWK1='%SYSVSWK1 REC(%LIST(%REC-1))';
       End;
       Else %SYSVSWK1='%SYSVSWK1 REC(%LIST(%REC-1))';
    End;


    If %BUFFER¬=0 | %BUFFERS¬=0
    Then Do;
       %BUFFER=%BUFFER+%BUFFERS;
       %SYSVSWK1='%SYSVSWK1 BUFFERS(%LIST(%BUFFER-1))';
    End;

    If %VOL¬='' | %VOLUME¬='' | %VOLS¬='' |%VOLUMES¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 VOL(%VOL%VOLUME%VOLS%VOLUMES)';
    End;

    If %ATTEMPTS¬='' | %ATT¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 ATT(%ATTEMPTS%ATT)';
    End;

    If %AUTH¬='' Then %SYSVSWK1='%SYSVSWK1 AUTH(%AUTH)';
    If %BUFSP¬='' Then %SYSVSWK1='%SYSVSWK1 BUFSP(%BUFSP)';
    If %CODE¬='' Then %SYSVSWK1='%SYSVSWK1 CODE(%AUTH)';

    If %CI¬='' | %CONTROL¬='' | %CISZ¬='' | %CNVSZ¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 CI(%CI%CONTROL%CISZ%CNVSZ)';
    End;

    If %FREESP¬='' | %FSPC¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 FSP(%FREESP%FSPC)';
    End;

    If %KEYS¬='' Then %SYSVSWK1='%SYSVSWK1 KEYS(%KEYS)';

    If %KEYRANGE¬='' | %KRNG¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 FSP(%KEYRANGE%KRNG)';
    End;

    If %MODEL¬='' Then %SYSVSWK1='%SYSVSWK1 MODEL(%MODEL)';

    If %MASTERPW¬='' | %MRPW¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 MRPW(%MASTERPW%MRPW)';
    End;

    If %OWNER¬='' Then %SYSVSWK1='%SYSVSWK1 OWNER(%MODEL)';

    If %READPW¬='' | %RDPW¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 RDPW(%READPW%RDPW)';
    End;

    If %RECSIZE¬='' | %RECSZ¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 RECSZ(%RECSIZE%RECSZ)';
    End;

    If %SHARE¬='' Then %SYSVSWK1='%SYSVSWK1 SHARE(%SHARE)';
    If %TO¬='' Then %SYSVSWK1='%SYSVSWK1 TO(%TO)';
    If %FOR¬='' Then %SYSVSWK1='%SYSVSWK1 FOR(%FOR)';

    If %UPDATEPW¬='' | %UPDPW¬=''
    Then Do;
       %SYSVSWK1='%SYSVSWK1 MRPW(%UPDATEPW%UPDPW)';
    End;

 /* NOW ONLY %LIST ITEMS, SUCH AS UNIQUE ETC ARE LEFT TO BE HANDLED */

   WORK2=
      'WAIT NOWAIT ERASE NOERASE ERAS NERAS IMBED NOIMBED IMBD NIMBD'
      ||' INDEXED NONINDEX NUMBERED IXD NIXD NUMD';
   WORK2='%WORK2 '||
      'ORDERED UNORDERED ORD UNORD REPLICATE REUSE NOREUSE RUS NRUS';
   WORK3=
      'SPANNED NOSPANNED SPND NSPND SPEED RECOVERY RCVY'
      ||'UNIQUE SUBALLOC UNQ SUBAL WRITECHK WCK NWCK';
LABEL LISTCHK1;

    If %LIST(%L)¬=''
    Then Do;
        %WORK='%LIST(%L)';
        %SYSWORK=INDEX(WORK2,'%WORK');
        If %SYSWORK=0
        Then %SYSWORK=INDEX(WORK3,'%WORK');
        If %SYSWORK¬=0
        Then Do;
             %SYSVSWK1='%SYSVSWK1 %WORK';
        End;
        Else WRITE 'INVALID KEYWORD %WORK IGNORED';
        %L=%L+1;
        REDO LISTCHK1;
 End;


    If %DATA   ¬='' Then DCLVDS   %DATA   ;
    If %INDEX  ¬='' Then DCLVIND  %INDEX  ;

 DCL %SYSVSDSI DS DSN=%SYSVSNME VSAM EXT;

 End;
 /* CREATE A UNIQUE SYMBOLIC CONTAINING THE DETAILS FOR THE VSAM
    DATA SET.  THIS WILL BE USED TO CREATE THE FILE If NECESSARY */

     %SYSWORK=INDEX(SYSVSAM1,'%SYSVSDSI');
     If %SYSWORK=0
     Then Do;
         %SYSWORK=INDEX(SYSVSAM1,'%SYSVSDSI');
         If %SYSWORK=0 Then Do;
            WRITE 'INTERNAL ERROR IN DCLVSAM MACRO';
         End;
         %SYSWRK2='VS2'||%SYSWORK;
     End;
     If %SYSWORK¬=0
     Then Do;
         %SYSWRK2='VS1'||%SYSWORK;
     End;
     %SETX='%SYSWRK2'||'M';
     %SETA='SET  %SETX=''%SYSVSWK1''';
     %SETA;
     %SETX='%SYSWRK2'||'C';
     %SETA='SET  %SETX=''%SYSVSWK2''';
     %SETA;
     %SETX='%SYSWRK2'||'D';
     %SETA='SET  %SETX=''%SYSVSWK3''';
     %SETA;
     %SETX='%SYSWRK2'||'I';
     %SETA='SET  %SETX=''%SYSVSWK4''';
     %SETA;
     printsym;
end;
