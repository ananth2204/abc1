alloc:macro (%f=, %file=, %da=, %ds=,%dsn=,
             %vol=,%volume=,
             %mod, %new, %old, %read, %shr, %update);

/* This macro replaces the internal Jol Alloc Instruction for the
   "C" version of Jol ONLY!!!!

   It provides compatability with MVS and UNIX/MSDOS, and may
   be changed to suit installation requirements.

   1. If the data set name is NOT coded in quotes, but has a
      member name or period, it is converted to MSDOS/UNIX
      filenames, and the VOL keyword is used as the DRIVE,
      and the SYSUID varaiable added to the front of the name.

      Otherwise, it is assumed to be a Unix type file name.


   2. If the data set name IS coded in quotes, but has a
      member name or period, it is converted to MSDOS/UNIX
      filenames.

      Otherwise, it is assumed to be a Unix type file name.
*/

   dcl %dsname, %member         init '';
   dcl %error                   init 0;

   if %file ¬='' & %f ¬=''
   then error =1;

   %file   ='%file%f';

   if %dsname ¬='' & %da ¬='' & %dsn ¬=''
   then error =1;

   %dsname ='%dsname%da%dsn';
   if %volume ¬='' & %vol ¬=''
   then error =1;

   %volume ='%volume%vol';

   If %mod ¬= '' & %new ¬='' & %old ¬='' & %read ¬='' & %shr ¬=''
   &  %update ¬= ''
   then error =1;

   %disp='%mod%new%old%read%shr';

   if %error ¬=0
   then do;
      panel
      /  (ctr hi 'Jol Allocate File Instruction')
      // (ctr    'Errors were detected in Allocate instruction')
      ////
      /('      Symbolic File Name    ===> ',file,8,'%file')
      /('      File or Data Set Name ===> ',dsname,44,'%dsname')
      /('      Volume or Drive       ===> ',volume,6,'%volume')
      /('      Disposition           ===> ',disp,1,'%disp')
       ('      Code ''M'' for Mods, ''N'' for New, ''R'' for Reads,')
       ('           ''S'' for Shr, ''U'' for Update.')
      ;

      if %disp = 'M' then %disp = 'MOD';
      if %disp = 'N' then %disp = 'NEW';
      if %disp = 'R' then %disp = 'SHR';
      if %disp = 'S' then %disp = 'SHR';
      if %disp = 'O' then %disp = 'OLD';
      if %disp = 'U' then %disp = 'OLD';
   end;

/* Call the macro to convert the dsname to a Unix Style one,
   if necessary */

/* if index(dsname,'.') ¬= 0 */
   if index(dsname,'(') ¬= 0
   then unixdsn indsn (%dsname) invol(%volume);
   alloc$ f(%file) da(%dsname) %disp;
end;

