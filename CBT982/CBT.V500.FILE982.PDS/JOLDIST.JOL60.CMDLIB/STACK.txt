RENAME: MACRO (
/*********************************************************************/
/*                       RENAME                                      */
/*       JOL MACRO TO BE USED TO RENAME A DATASET OR A MEMBER        */
/*       OF A PARTITIONED DATASET.                                   */
/*                                                                   */
/*                                                                   */
/*********************************************************************/
         %TO,                     /* DUMMY KEYWORD                   */
         ) ;
/*********************************************************************/
/*       INITIALISE SOME SYMBOLS FOR THIS MACRO                      */
/*********************************************************************/
DCL %OLDDSN  INIT '' ;
DCL %OLDMEM  INIT '' ;
DCL %NEWDSN  INIT '' ;
DCL %NEWMEM  INIT '' ;
DCL %RUNJOB  INIT '' ;
/*********************************************************************/
/*       PROCESS OLD AND NEW NAMES FOR RENAME PROCESSING             */
/*********************************************************************/
DCL %###X    INIT '' ;
DCL %###L    INIT '' ;
IF %LIST(1) ¬= '' & %LIST(2) ¬= '' THEN
   DO;
      %OLDDSN = '%LIST(1)';
      %###X   = INDEX(OLDDSN,'(');
      IF %###X ¬= 0 THEN
      DO;
         %OLDMEM  = SUBSTR(OLDDSN,%###X);
         %OLDMEM  = SUBSTR(OLDMEM,2);
         %###L    = LENGTH(OLDMEM);
         %###L    = %###L - 1;
         %OLDMEM  = SUBSTR(OLDMEM,1,%###L);
         %###X    = %###X - 1;
         %OLDDSN  = SUBSTR(OLDDSN,1,%###X);
         IF %OLDDSN = '' THEN STOP 'NO OLD DSN SUPPLIED FOR RENAME';
      END;
      %NEWDSN = '%LIST(2)';
      %###X   = INDEX(NEWDSN,'(');
      IF %###X ¬= 0 THEN
      DO;
         %NEWMEM  = SUBSTR(NEWDSN,%###X);
         %NEWMEM  = SUBSTR(NEWMEM,2);
         %###L    = LENGTH(NEWMEM);
         %###L    = %###L - 1;
         %NEWMEM  = SUBSTR(NEWMEM,1,%###L);
         %###X    = %###X - 1;
         %NEWDSN  = SUBSTR(NEWDSN,1,%###X);
      END;
   END;
ELSE STOP 'BOTH OLD AND NEW NAMES MUST BE GIVEN FOR RENAME' ;
IF %OLDDSN  = '' THEN STOP 'OLD NAME MUST BE GIVEN FOR RENAME' ;
IF %OLDMEM ¬= '' & %NEWMEM = '' THEN
   STOP 'BOTH OLD AND NEW NAMES MUST CONTAIN A MEMBER NAME' ;
IF %NEWMEM ¬= '' & %OLDMEM = '' THEN
   STOP 'BOTH OLD AND NEW NAMES MUST CONTAIN A MEMBER NAME' ;
/*********************************************************************/
/*********************************************************************/
/*             SET UP A RUN FOR A DATASET RENAME                     */
/*********************************************************************/
IF %OLDMEM = '' & %NEWMEM = '' THEN
DO;                                    /*       RENAME DATASET       */
   DCL   CONTROL   *  REPLACE ;
   ALTER %OLDDSN NEWNAME(%NEWDSN)
EOF;
END;
/*********************************************************************/
/*             SET UP A RUN FOR A MEMBER RENAME                      */
/*********************************************************************/
IF %OLDMEM ¬= '' & %NEWMEM ¬= '' THEN
DO;
      IF %NEWDSN ¬= %OLDDSN THEN
         STOP 'TRYING TO RENAME A MEMBER TO A DIFFERENT DATASET' ;
   DCL   CONTROL   *  REPLACE ;
   ALTER %OLDDSN(%OLDMEM) NEWNAME(%NEWDSN(%NEWMEM))
EOF;
END;
/*********************************************************************/
/*             DECLARE PROGRAM  FOR RENAME                  */
/*********************************************************************/
DCL      MESSAGES  SYSOUT;
DCL      IDCAMS  PROGRAM
                   SYSPRINT WRITES  MESSAGES
                   SYSIN    READS   CONTROL ;
/*********************************************************************/
/*                 EXECUTE SELECTED UTILITY                          */
/*********************************************************************/
RUN IDCAMS;
END;
