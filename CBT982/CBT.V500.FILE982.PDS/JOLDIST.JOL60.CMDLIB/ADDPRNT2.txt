ADDPRINT:MACRO; /* Add a printer to Data Set Data Base */

/*

       Jol Universal Command Language.
       Copyright 1969-1989 CCS-JOL Pty. Ltd.,
                 2/31 Queen St, Melbourne, Australia, 3000.


       A D D P R I N T    C O M M A N D

       This macro adds a printer to the data base of data sets.

       It:
          1. Gets details for the printer.

             These details are built using the Jol ADDDSN2
             command.

          2. Writes the details to a data set.

             This data set is added at the end (for the PC version)
             of the base data set.

             It can be sorted with the special procedure if access
             becomes too slow.  It is then Binary Searched.

             The mainframe version uses VSAM.

History:

       Written C. Clarke 26/11/90:  Add printer to Data Base.

********************************************************************/



    DCL %ISVSAM,%vsclust,%vsindex,%vsdata           INIT '';
    dcl %volref                                     init '';
    dcl %work                                       init '';
    dcl %adddsopn init('0') ext;
    dcl %update   init(0);
    dcl %title    init('Add Data Set to Data Set Data Base - V0.0';
    dcl %vsamdef  init '';


        IF %LIST(1)¬='' THEN %dsname=LIST(1);
Label chkds1;
        IF %dsname=''
        then do;
Label getds1;
  PANEL %boxcolor box (ctr %hedcolor '%TITLE')
   //
     (ctr 'Please specify the Printer Name to add to the Data Base.')
     /////
      ('  Enter Printer Name  ====>',printer,12,' ')
     ////
     ( hi '  Notes:')
      (   '         1.     The name PRINTER defaults to SYSOUT *.')
     /(   '         2.     The names must start with PRINTER.')
     /(   '         3.     We suggest you use names like PRINTER_1,')
      (   '                PRINTER_FORM1 etc.')
    helpline('F3 Exits with No Action. F4 Shows a List of Printers')
   ;
            IF %SYSPFK = 3 | %SYSPFK=15 THEN EXIT;
            IF %SYSPFK = 4
            then do;
              dbfshow  Printers;
              %dsname  ='%showsel';
              redo chkds1;
            end;
            if %printer='' then do;
  /*          redo getds1; */
              panel reread from printer
                    'You must enter a Printer Name';
                    redo getds1;
            end;

        end;

      if %syspfk=3 then exit;

/* See if we can read the previous data set by this name.

   Calling the next macro also sets up the symbolic variables
   as EXTERNAL.

*/
        %savedsn='%printer';         /* Save the name */

        %dsname='PRINTER=%printer';
        dbffind  '''%dsname''';
        if %lastcc =0 then %update=1;  /* Set Update Flag */


 /*     printsym; */

        addprt2;    /* Get details from Panels */


 /*     %work='Dcl     DSDB  Printer ''%dsname'' ';; */
        %work=' DSDB    Printer ''%dsname'' ';


            if %zsyscls ¬='' then work='%work Class %zsyscls';
            if %zsysform¬='' then work='%work Form %zsysform';
            if %zcopies ¬='' then work='%work Copies=%zcopies';
            if %zoutlim ¬='' then work='%work Outlim=%zoutlim';
            if %zsysrout¬='' then work='%work Route %zsysrout';
            if %zsyspgm ¬='' then work='%work Pgm %zsyspgm';
            if %zsysucs ¬='' then work='%work UCS %zsysucs';
            if %zsysfcb ¬='' then work='%work FCB %zsysfcb';
            if %zsysburs¬='' then work='%work BURST';
            if %zsyschar¬='' then work='%work CHARS %zsyschar';
            if %zsysmod ¬='' then work='%work MODIFY %zsysmod';
            if %zsysflas¬='' then work='%work FLASH %zsysflas';

            if %zrecfm='' & (%zlrecl¬='' | %zblksize¬='')
            then do;
                if %zlrecl ¬='' then %work=%work||' Lrecl %zlrecl';
                if %zblksize¬='' then %work=%work||' Block %zblksize';
            end;
            else if %zRECFM¬=''
            then %work='%work %zrecfm %zlrecl,%zblksize';
            if %zprim¬='' | %zsec¬=''
            then do;
                if %zsec  =''  then %zsec=0;
                %work='%work Space %zprim,%zsec';
                if %space ='B' then %work='%work Blks ';
                if %space ='C' then %work='%work Cyls ';
                if %space ='T' then %work='%work Trks ';
                if %space =' ' then %work='%work Trks ';
            end;
   /*       if %znrlse  ¬='' then work='%work Norlse'; */
            if %zcontig ¬='' then work='%work Contig';
            if %zmaxig  ¬='' then work='%work MXIG';
            if %zalx    ¬='' then work='%work ALX';
            if %zdsorg  ¬='' then work='%work Dsorg %zdsorg';
            if %zlabtyp ¬='' then work='%work %zlabtyp';

            if '%Zmodel'¬=''
            then do;
                %isvsam=' %isvsam MODEL %zmodel ';
            end;


            dbfdel   '%dsname';
            dbfadd %work %isvsam;
            exit;

/* Following Code only for multiple load module version of Jol. */

            alloc f(temp) da('tkn.$$$') new;
            open f(temp) output;
            write f(temp) from(work);
            if '%isvsam' ¬= '' then write file(temp) from(isvsam);
            close f(temp) ;
            dbfadd  ;
            dbfclose;   /* Force DBFFIND to reopen the file because
                           it may have been extended */


end  /* ADD DSN Macro */ ;
