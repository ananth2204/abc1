  CAIPROG : MACRO;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN005;
PANEL blue box/ (ctr hi 'The PROGRAM Definition')
////////
('       The program definition is used to tell JOL details about')
('       a particular load module or program.');
IF %SYSPFK=7 | %SYSPFK=19 then redo pan005;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN010;
PANEL blue box/ (ctr hi 'Running Programs')
lm 8
/ ('Before executing a program, you must tell the system what inputs')
  ('and outputs it uses, how much storage it needs, the expected')
  ('execution time, which library contains the program and so on.')
//('The specified program must be a member of a temporary library,')
  ('the system library or a private library.')
//('The program declaration allows you to specify these details')
  ('and when you use the RUN instruction later, the program is')
  ('loaded and all the options specified will be activated,')
  ('and any specified data sets will be made available to the')
  ('program.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan005;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN015;
PANEL blue box/ (ctr hi 'Format of the PROGRAM DEFINITION')
lm 8
////
    ('| label: ?')
    (hi'           --          --')
    (hi'           -   DECLARE  -')
    (hi'           -            -')
    (hi'      or  {    DEFINE    }  program name PROG options ; ')
    (hi'           -            -')
    (hi'      or   -    DCL     -')
    (hi'           --           -')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan010;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN020;
PANEL blue box/
(ctr hi 'Specifing Filenames and their uses for a program.')
lm 8
////('Format:')
//
(hi'               --            --')
(hi'               -              -      --                      --')
(hi' -         -   -   READS      -      -         --         --  -')
(hi' - filename-   -   WRITES     -      - dsid    - member    -  -')
(hi'{    or     } {    UPDATES     }     { dsname  - generation-   }')
(hi' -  ddname -   - MODS|EXTENDS -      -         --         --  -')
(hi' -         -   - USES|REWIRTES-      --                      --')
(hi'               -              -')
(hi'               --            --           --           --')
(hi'                                          -  ||other... -')
(hi'                                          --           --')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan015;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN025;
PANEL blue box/ (ctr hi 'Reading and Writing Data Sets')
lm 8
/('Under OS, you READ or WRITE to filenames or DDNAMES in your')
 ('program. These DDNAMES are then connected or bound to data sets,')
 ('printers, card readers and so forth at the job control')
 ('or command (JOL or TSO) level.')
/('This allows for a great amount of flexibility because your program')
 ('can read or write a disk, tape or card data set with no changes.')
 ('Thus if your program has a file name of INPUT, you may code:-')
/(hi '       INPUT READS dsid')
/('Suppose your program needs to read a data set called MASTER.FILE')
 ('then you could code:-')
/(hi '       DCL MASTER DS DSNAME MASTER.FILE; /* Declare Data Set */')
 (hi '       DCL UPDATE PROG                   /* Declare Program  */')
 (hi '                  INFILE READS MASTER ; ')
 (hi '       RUN UPDATE;')
 ('The explanation is on the NEXT screen... ')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan020;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN030;
PANEL blue box/ (ctr hi 'Explanation of the Example')
lm 8
//('You specified that filename or ddname INFILE was to be read as')
  ('the DSID called MASTER. MASTER is defined as a data set called')
  ('MASTER.FILE, and so when you run your UPDATE program, JOL will')
  ('insure that your file INFILE will be connected with the')
  ('MASTER.FILE data set.')
//('If your program creates a data set, you tell JOL that it WRITES.')
 /('The data set will be created and your program can then WRITE')
  ('information into it.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan025;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN035;
PANEL blue box/ (ctr hi 'Example')
lm 8
 /(  'The following shows both INPUT and OUTPUT:-')
 /(hi'        DCL INMAST  DS DSNAME OLD.MASTER ;')
  (hi'        DCL NEWMAST DS DSNAME NEW.MASTER  /* Dsn NEW.MASTER */')
  (hi'                    UNIT DISK             /* Unit is a DISK */')
  (hi'                    VB 100,2500           /* Variable Blocked */')
  (hi'                    1000-2000 RECORDS ;   /* Space for data */')
/ (hi'        DCL UPDATE  PROG                  /* Define Program */')
  (hi'            INPUT   READS INMAST')
  (hi'            OUTPUT  WRITES NEWMAST ;')
/ (hi'        RUN UPDATE;')
  //('When the program UPDATE is executed, filename or ddname INPUT')
    ('will read the data set described by DSID INMAST.')
    ('INMAST describes a data set called OLD.MASTER.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan030;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN040;
PANEL blue box/ (ctr hi 'Example')
lm 8
//('The filename OUTPUT shows that it is an output file because of')
  ('WRITES keyword. Filename OUTPUT will write information into the')
  ('data area described by the DSID NEWMAST. NEWMAST shows a data')
  ('set of the name NEW.MASTER. If the DSID is written to then ')
  ('NEW.MASTER will be placed on a DISK device, and space will be')
  ('allocated that is large enough to contain 1000-2000 variable')
  ('blocked records of up to 100 bytes each in blocks of 2500 bytes.')
//('If NEWMAST had been read instead of written, the data set')
  ('NEW.MASTER is expected to already exist, and the System Catalog')
  ('would have been searched to find the location of the data set.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan030;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN042;
PANEL blue box/ (ctr hi 'Running Programs')
lm 8
 /('The RUN instruction LOADs and RUNs the program described in the')
  ('program declaration statement. All the data sets required by the')
  ('program are made available before the program is executed.')
//('RUN loads and executes a program from a load module library.')
  ('Any program that is a user written program or a system program')
  ('such as a compiler or sort, may be executed.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan040;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN045;
PANEL blue box/ (ctr hi 'Return Codes')
lm 8
 /('When a program has finished executing, it returns a value. This')
  ('"RETURN CODE" may be tested with an IF statement, and subject to')
  ('the result of the "IF" other programs may or may not be run.')
//('For full details, see the Logic Instructions Chapter in this')
  ('course.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan040;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN050;
PANEL blue box/ (ctr hi 'Examples of Program Definitions')
lm 8
//(' 1. 'hi'DECLARE MYPROG PROG SIZE 8 K; ')
 /('    The program MYPROG is declared. Only one option is')
  ('    specified - it is to have a maximum storage of 8000 bytes.')
//(' Note: many of the optional parameters of Program Declaration')
  ('       are NOT UNLIKE the parameters on JOB DECLARATION.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan045;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN055;
PANEL blue box/ (ctr hi 'Examples of Program Definitions')
lm 8
/('  2. 'hi'DECLARE VALIDATE PROG LIB SALES.LIB')
 ('     'hi'                 SIZE 250 K   TIME 10,6 MINS')
 ('     'hi'        TRANSIN READS CARDS')
 ('     'hi'        TRANSOUT WRITES EDITEDT')
 ('     'hi'        LIST WRITES PRINTER;')
 ('     'hi'        ... other instructions')
 ('     'hi'        RUN VALIDATE;')
/('  *  The LIB parameter specifies where the program is to be found')
 ('     - in above example it is in SALES.LIB library.')
 ('  *  SIZE parameter indicates that a maximum of 250K are to be used.')
 ('  *  The TIME parameter says that the elapsed time is 10 minutes')
 ('     with CPU time of 6 minutes')
 ('  *  File TRANSIN will be bound to DSID CARDS, that is whenever')
 ('     the program reads TRANSIN it in fact reads CARDS.')
 ('     Similarly, TRANSOUT and LIST are bound to EDITEDT and PRINTER.')
 ('  *  The RUN VALIDATE instruction will cause the program to start')
 ('     executing. At this time all the required data sets will be')
 ('     allocated to it.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan050;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN060;
PANEL blue box/ (ctr hi 'Examples of Program Definitions')
lm 8
//(' 3. 'hi'DECLARE LIB DS DSNAME SYS1.MACLIB;')
  ('    'hi'DECLARE PRINT PROG')
  ('    'hi'        INPUT READS LIB(CALL)')
  ('    'hi'        SYSPRINT WRITES PRINTER;')
  ('    'hi'...  ')
 /('    'hi'RUN PRINT;')
//('    When PRINT is RUN, the INPUT file will be bound to the LIB')
  ('    DSID; this specifies that member CALL of the')
  ('    partitioned data set SYS1.MACLIB is to be read.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan055;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN065;
PANEL blue box/ (ctr hi 'Examples of Program Definitions')
lm 8
 /(' 4. 'hi'DECLARE GENER DS DSNAME SALES.MASTER; ')
  ('    'hi'DECLARE UPDATE PROG ')
  ('    'hi'        INPUT READS GENER(0) /* LATEST GENERATION */')
  ('    'hi'        OUTPUT WRITES GENER(+1); ')
  ('    'hi'RUN UPDATE; ')
 /('    When UPDATE is run, file INPUT will be bound to (0) generation')
  ('    of SALES.MASTER DATA SET, and OUTPUT will be bound to (+1)')
  ('    generation of same data set (i.e. NEXT generation).')
 /('    If the declare of GENER had been:')
 /('    'hi'DECLARE GENER DS DSNAME SALES.MASTER(5);')
  ('    'hi'          /* ABSOLUTE 5TH GENERATION OF DATA SET */')
 /('    then INPUT would have used absolute generation (5), and OUTPUT')
  ('    would have created NEXT generation (+1), that is absolute')
  ('    generation (6). This facility is extremely useful for RESTART')
  ('    situations.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan060;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
      cls;
LABEL PAN070;
  caaqus   'Declare a program called PROGONE which only'
           'needs 10 K Bytes to run. '
           ucans='DECLARE PROGONE PROG SIZE 10 K;'
           remark='Excellent !';
IF %SYSPFK=7 | %SYSPFK=19 then redo pan065;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN075;
  caaqus   'Declare a program called PROG02 that Reads'
           'DSID INFILE with internal file INFIL and Writes'
           'DSID OUTFILE with internal filename OUTFIL'
           ucans='DECLARE PROG02 PROG'
           ans2='                     INFIL READS INFILE'
           ans3='                     OUTFIL WRITES OUTFILE;'
           remark='Excellent!';
IF %SYSPFK=7 | %SYSPFK=19 then redo pan070;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN080;
  caaqus  'Now, show how to RUN that program.'
          ucans='RUN PROG02;'
          remark 'Good Work';
IF %SYSPFK=7 | %SYSPFK=19 then redo pan075;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;

           %COM#NUM = %COM#NUM + 1;
           IF %COM#NUM > %MAX#COM THEN DO;
PANEL blue box ///////(ctr ' This is the end of this section.')
         /(ctr 'Press ENTER to get back to main index/menu.',X,1);
              %COM#NUM = 1;
              %SYSPFK = 3;
           END;
  END; /* OF CAIPROG MACRO */
