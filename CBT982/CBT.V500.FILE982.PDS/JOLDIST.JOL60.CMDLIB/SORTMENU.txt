    /* This is the Jol Program Register Command. */

    /* Using the Register Command, you can tell Jol about programs,
       such as the Language it is coded in, Compiler Options normally
       used, Inputs and Outputs and so on.

       Then the Jol COMPILE, and EXEC Commands can be used to
       COMPILE, LINK and RUN these Registered Programs.

       You can REGISTER Programs interactively, or use a standard
       editor to create the files (it must conform to Jol's
       standard way of doing things!).

       Whenever the Program needs to be compiled, you can code:

           COMPILE MASTUPDT;

       and the program will be compiled.


       To EXECUTE the Program, you can code the following:

           EXEC MASTUPDT 'INPUT.MASTER' 'TRANS.INPUT' 'MASTER.OUT'
                PRINTER;

        OR

          DCL INPUT   DS INPUT.MASTER;
          DCL OUTPUT  DS OUTPUT.MASTER VB 70,7000 SYSDA 10 CYLS;
          DCL TRANSIN DS TRANS.INPUT;
          DCL PRT     PRINTER B FORM 100 FBA 121,1210;
          EXEC MASTUPDT INPUT,TRANSIN,OUTPUT,PRT;


       IT WILL EVEN BE POSSIBLE TO HAVE STANDARD DEFAULT DATA SETS
       THAT THE PROGRAM WILL USE, UNLESS OVER-RIDDEN, THUS IT IS
       POSSIBLE TO SIMPLY CODE:-

           EXEC MASTUPDT;

      TO HAVE THE PROGRAM EXECUTED. (NOT THIS VERSION!!!!).

      SEE THE JOL DOCUMENTATION FOR FURTHER DETAILS.

   */
   REGISTER:MACRO(%LANG=,      /*DEFAULT LANGUAGE IS PL1             */
          %ASM,%FORT,%COB,%COBOL,%PLI,%PL1,
          %FUNC='',            /*FUNCTION MUST BE CODED BY USER      */
          %COMPOPT=,           /*DEFAULT COMPILER OPTIONS ARE NONE   */
          %LINKOPT=,           /*DEFAULT LINK EDITOR OPTIONS ARE NONE*/
          %COPYLIB=,           /*NO DEFAULT INCLUDE OR COPYLIB       */
          %SOURCE=,            /*NO DEFAULT SOURCE LIBRARY           */
          %LOAD=,              /*NO DEFAULT LOAD MODULE LIBRARY      */
          %AUTOCALL=,          /*NO DEFAULT LINK AUTO CALL LIB       */
          %FILES=,             /*NO DEFAULT INPUTS                   */
          %REPLACE,            /*REPLACE OPTION MAY BE CODED         */
          %NAME=,              /*NAME TO BE GIVEN TO LOAD MODULE (IF */
                               /*        DIFFERENT TO PROGRAM NAME). */
          %PARM=,              /*NO DEFAULT PROGRAM PARAMETER        */
          %SSI=);

    DCL %CNT    INIT 0;
    DCL %SUB    INIT 0;
    DCL %SUBMOD INIT '';
    DCL %JOLDS1 INIT '%SYSPREF.JOL';
    DCL %PGMNAME                              INIT '';

    if %list(1) ='' then %PGMNAME=%LIST(1);
    IF %PGMNAME =''   /* No Program Name ? */
    then do;
       panel %boxcolor box
       //(ctr %hedcolor 'Jol Program Registration Panel')
       //////
       (ctr 'Please Enter Program Name to Register ===>',PGMNAME,8,'')
       ;
getprog:
       if pgmname=''
       then do;
               panel reread from pgmname
               'We need the Program Name to Register';
               goto getprog;
       end;
       %X=TYPE(PGMNAME);
       IF %X ='CHAR' THEN DO;
               panel reread from pgmname
               'Program Names must start with an Alpha Character';
               goto getprog;
       END;
    end;

       alloc f(reg) da('%PGMNAME.pgm') new;
       open f(reg) output;
       write f(reg) from(
 ' /* THIS PROGRAM WAS REGISTERED ON %DAY %DAYNO %MONTH %YEAR */');

       IF %func='' THEN DO;
          panel %boxcolor box
          //(ctr %hedcolor 'Jol Program Registration Panel')
          //
          (ctr 'Please Enter a comment describing what 'hi'%PGMNAME')
          (ctr 'does.  This is simply a desription that is written')
          (ctr 'in the Registration Details and is for your')
          (ctr 'use ONLY.')
          //
          //('    Enter Program Function (Optional)')
          //('          ======> ',func,50,
              'For Example: Updates Payroll Master Files');
       End;

       write f(reg) from(
       ' /* FUNCTION %FUNC  */ ');

       IF %LANG='' THEN DO;
            IF %COBOL ='' THEN %COBOL='COB';
            %LANG='%ASM%COB%COBOL%PLI%PL1%FORT';
       END;
       IF %LANG='' THEN DO;
          panel %boxcolor box
          //(ctr %hedcolor 'Jol Program Registration Panel')
          //
          (ctr 'Please Enter the Language ' hi '%PGMNAME')
          (ctr 'is written in.  If you are unsure (for example')
          (ctr 'the program is a Utility), enter ASM.')
          //
          (ctr 'You can code ASM, COB, FORT, PLI or ALGOL.')
          (ctr '(Support for other languages will be available soon)')
          //(ctr 'Enter Language    ======> ',lang,8,'PLI');
       End;

checklan:
       IF %LANG='PLI' | %LANG='PL1'
       | %LANG='COBOL' | %LANG='COB'
       | %LANG='ALGOL'
       | %LANG='FORTRAN' | %LANG='FORT'
       | %LANG='ASSEMBLER' | %LANG='ASM'
       THEN DO;
          SET LANG=SUBSTR(LANG,1,3);
          IF %LANG='ASS' THEN %LANG='ASM';
          IF %LANG='FOR' THEN %LANG='FORT'; /* 6TH. AUGUST 1982 */
          IF %LANG='ALG' THEN %LANG='ALGOL'; /* 6TH. AUGUST 1982 */
       END;
       ELSE DO;
          %ERROR=1;
           Panel reread from lang 'Invalid Language, Please Reenter';
           goto checklan;
       END;
       IF %SOURCE='' THEN %SOURCE='%SYSUID.%LANG';
       IF %COPYLIB='' THEN %COPYLIB='%SYSUID.%LANG';
       IF %LOAD='' THEN %LOAD='%SYSUID.LOAD';
       IF %AUTOCALL='' THEN DO;
           IF %LANG ='ASM' THEN
           %AUTOCALL='SYS1.%LANG'||'LIB';
       END;
       IF %LINKOPT='' THEN %LINKOPT='LIST';
       IF %COMPOPT='' THEN %COMPOPT='LIST';
LABEL RPANL;
   PANEL %boxcolor box
  /(ctr %hedcolor 'Other details for program %PGMNAME')
  /(hi 'Options necessary for the Jol COMPILE Command')
  /('    Where is the %lang Source Code for %pgmname ?')
   ('               ===>',SOURCE,44,'%SOURCE')
   ('    And the COPY Library Name ?')
   ('               ===>',COPYLIB,44,'%COPYLIB')
   ('    Default COMPILER Options')
   ('               ===>',COMPOPT,50,'%COMPOPT')
  /(hi 'Options necessary for the Jol LINK Command')
  /('    The LOAD Module Library Name ?')
   ('               ===>',LOAD,44,'%LOAD')
   ('    Default AUTO CALL Library')
   ('               ===>',AUTOCALL,44,'%AUTOCALL'
   ('    What SUB MODULES are used?')
   ('               ===>',SUBMOD,44,'%SUBMOD')
   ('    Default LINK EDIT Options')
   ('               ===>',LINKOPT,50,'%LINKOPT')
   ;

detcheck:
    /*
    IF %SOURCE  = ''
    then do;
        panel reread from source
             'Please Enter the Program Source Code Library';
        goto detcheck;
    end;
    IF %copylib = ''
    then do;
        panel reread from copylib
             'Please Enter the Macro/Source Code COPY Library';
        goto detcheck;
    end;
    IF %compopt = ''
    then do;
        panel reread from compopt
             'Please Enter the Default Compiler Options';
        goto detcheck;
    end;
    IF %load    = ''
    then do;
        panel reread from load
             'Please Enter the Load Module Library';
        goto detcheck;
    end;
    IF %linkopt = ''
    then do;
        panel reread from linkopt
             'Please Enter the Default Link Options';
        goto detcheck;
    end;
  */
       write f(reg) from(
 ' %%PGMNAME=''%PGMNAME'';  %%LANG=''%LANG'';');
       write f(reg) from(
 ' IF %%COMPOPT='''' THEN');
       write f(reg) from(
 ' /* Note: The ''IF'' Statements allow for Overrides on the EXEC */');
       write f(reg) from(
 ' %%COMPOPT=''%COMPOPT'';');
       write f(reg) from(
 ' IF %%LINKOPT='''' THEN');
       write f(reg) from(
 ' %%LINKOPT=''%LINKOPT'';');
       write f(reg) from(
 ' IF %%SOURCE='''' THEN');
       write f(reg) from(
 ' %%SOURCE=''%SOURCE'';');
       write f(reg) from(
 ' IF %%LOAD='''' THEN');
       write f(reg) from(
 ' %%LOAD=''%LOAD'';');
       write f(reg) from(
 ' IF %%LIB='''' THEN');
       write f(reg) from(
 ' %%LIB=''%COPYLIB'';');
       write f(reg) from(
 ' IF %%AUTOCALL='''' THEN');
       write f(reg) from(
 ' %%AUTOCALL=''%AUTOCALL'';');

       %file1='SYSPRINT';
       %CNT=1;

 getmore:

 PANEL %boxcolor box
 / (ctr %hedcolor 'Program %pgmname File Specification Panel.')
 / (ctr 'On this Panel, please enter all the Filenames or DDnames that')
   (ctr 'use Files.  You specify the Filename, and READS, WRITES, etc.')
 / (ctr 'NOTE:  In the ACTION Column, code READS, WRITES, MODS,')
   (ctr 'or UPDATES, or MAY READ, MAY WRITE etc.')
  /('               DDname           Action')
  /('            ',FILE1,8,'%file1') (' ',Mayf1,10,' ',12,30)
   ('            ',FILE2,8,'      ') (' ',Mayf2,10,' ',13,30)
   ('            ',FILE3,8,'      ') (' ',Mayf3,10,' ',14,30)
   ('            ',FILE4,8,'      ') (' ',Mayf4,10,' ',15,30)
   ('            ',FILE5,8,'      ') (' ',Mayf5,10,' ',16,30)
   ('            ',FILE6,8,'      ') (' ',Mayf6,10,' ',17,30)
 //(ctr
'Note: If the last DDname is used, a second screen will appear.')
 ;

chkpan:
   /* Make each DDname 8 characters in length for a better image. */
       file1=substr(file1||'        ',1,8);
       file2=substr(file2||'        ',1,8);
       file3=substr(file3||'        ',1,8);
       file4=substr(file4||'        ',1,8);
       file5=substr(file5||'        ',1,8);
       file6=substr(file6||'        ',1,8);

       if %file1 =''
       then do;
           if %mayf1=''
           then do;
               panel reread from mayf1 'Please Enter READS, WRITES etc';
               redo chkpan;
           end;
       end;

       if %file2 =''
       then do;
           if %mayf2=''
           then do;
               panel reread from mayf2 'Please Enter READS, WRITES etc';
               redo chkpan;
           end;
       end;

       if %file3 =''
       then do;
           if %mayf3=''
           then do;
               panel reread from mayf3 'Please Enter READS, WRITES etc';
               redo chkpan;
           end;
       end;

       if %file4 =''
       then do;
           if %mayf4=''
           then do;
               panel reread from mayf4 'Please Enter READS, WRITES etc';
               redo chkpan;
           end;
       end;

       if %file5 =''
       then do;
           if %mayf5=''
           then do;
               panel reread from mayf5 'Please Enter READS, WRITES etc';
               redo chkpan;
           end;
       end;

       if %file6 =''
       then do;
           if %mayf6=''
           then do;
               panel reread from mayf6 'Please Enter READS, WRITES etc';
               redo chkpan;
           end;
       end;

       %typ1=''; %typ2=''; %typ3='';
       %typ4=''; %typ5=''; %typ6='';

       if index(caps(mayf1),'WRITE')
       |  index(caps(mayf1),'MOD')
       & %file1 =''
       then do;
panel %boxcolor box
  (ctr 'If your File requires specific File Types')
  (ctr 'or LRECL, please insert them here or leave them empty.')
/ (ctr 'For example, enter 'hi'FB 200 or VB 6400')
///
        ('                     %file1  ',typ1,10);
      end;

       if index(caps(mayf2),'WRITE')
       |  index(caps(mayf2),'MOD')
       & %file2 =''
       then do;
panel %boxcolor box
  (ctr 'If your File requires specific File Types')
  (ctr 'or LRECL, please insert them here or leave them empty.')
/ (ctr 'For example, enter 'hi'FB 200 or VB 6400')
///
        ('                     %file2  ',typ2,10);
      end;

       if index(caps(mayf3),'WRITE')
       |  index(caps(mayf3),'MOD')
       & %file3 =''
       then do;
panel %boxcolor box
  (ctr 'If your File requires specific File Types')
  (ctr 'or LRECL, please insert them here or leave them empty.')
/ (ctr 'For example, enter 'hi'FB 200 or VB 6400')
///
        ('                     %file3  ',typ3,10);
      end;

       if index(caps(mayf4),'WRITE')
       |  index(caps(mayf4),'MOD')
       & %file4 =''
       then do;
panel %boxcolor box
  (ctr 'If your File requires specific File Types')
  (ctr 'or LRECL, please insert them here or leave them empty.')
/ (ctr 'For example, enter 'hi'FB 200 or VB 6400')
///
        ('                     %file4  ',typ4,10);
      end;

       if index(caps(mayf5),'WRITE')
       |  index(caps(mayf5),'MOD')
       & %file5 =''
       then do;
panel %boxcolor box
  (ctr 'If your File requires specific File Types')
  (ctr 'or LRECL, please insert them here or leave them empty.')
/ (ctr 'For example, enter 'hi'FB 200 or VB 6400')
///
        ('                     %file5  ',typ5,10);
      end;

       if index(caps(mayf6),'WRITE')
       |  index(caps(mayf6),'MOD')
       & %file6 =''
       then do;
panel %boxcolor box
  (ctr 'If your File requires specific File Types')
  (ctr 'or LRECL, please insert them here or leave them empty.')
/ (ctr 'For example, enter 'hi'FB 200 or VB 6400')
///
        ('                     %file6  ',typ6,10);
      end;

       if %file1 =''
       then do;
            write f(reg) from(' f%cnt=''%file1 %mayf1'';');
            if typ1 ='' then write f(reg) from(' t%cnt=''%typ1'';');
            %cnt=%cnt+1;
       end;

       if %file2 =''
       then do;
            write f(reg) from(' f%cnt=''%file2 %mayf2'';');
            if typ2 ='' then write f(reg) from(' t%cnt=''%typ2'';');
            %cnt=%cnt+1;
       end;

       if %file3 =''
       then do;
            write f(reg) from(' f%cnt=''%file3 %mayf3'';');
            if typ3 ='' then write f(reg) from(' t%cnt=''%typ3'';');
            %cnt=%cnt+1;
       end;

       if %file4 =''
       then do;
            write f(reg) from(' f%cnt=''%file4 %mayf4'';');
            if typ4 ='' then write f(reg) from(' t%cnt=''%typ4'';');
            %cnt=%cnt+1;
       end;

       if %file5 =''
       then do;
            write f(reg) from(' f%cnt=''%file5 %mayf5'';');
            if typ5 ='' then write f(reg) from(' t%cnt=''%typ5'';');
            %cnt=%cnt+1;
       end;

       if %file6 =''
       then do;
            write f(reg) from(' f%cnt=''%file6 %mayf6'';');
            if typ6 ='' then write f(reg) from(' t%cnt=''%typ6'';');
            %cnt=%cnt+1;
       end;
       %file1='';
       IF %file6  = '' THEN REDO getmore;

       close f(reg);

  END;
