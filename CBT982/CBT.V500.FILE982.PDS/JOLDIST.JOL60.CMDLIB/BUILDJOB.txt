BUILDJOB:MACRO;
/* Modified (substantially) by C. V. Clarke, 1991, to use
   the Jol Data Base of Data Sets instead of using DSID's.
*/
       dcl %BUILDJOB init '' EXT;
       dcl %RUNPROGS init ('') EXT;
       DCL %JOBMEM  INIT ''  EXT;
       DCL %TYP INIT '';
       DCL %JOLDS INIT '%SYSPREF.JOL' ext;

        %TITLE='Jol BUILDJOB - '||
          '%DAY %MONTH %DAYNO, %YEAR - Version 5.0 ';

        if %system = 'SHELL' then do;
           panel %boxcolor box
                /(ctr %hedcolor '%TITLE')
           ///// (ctr 'Buildjob is not necessary for Unix or MS/DOS')
                 (ctr 'as all Jol Scripts can run in Background')
                 (ctr '(if the Operating System supports Background'
                      ' Mode)')
               / (ctr 'Please start the JOLOS Program')
               / (ctr 'with one of the Mainframe Options')
                 (ctr 'such as MVS, MSP, VSE or FSP');
                 (ctr 'if you wish to use BUILDJOB.');
      exit;
      jolopt mvs;   /* Leave this here for now, we may add it later */
   end;

   %COUNT=1;
 /* BLDINIT INIT; /* INITIALIZE ALL PROGRAM IDS AND DSIDS */
       DCL %JOLDS INIT '%SYSPREF.JOL';

       PANEL %boxcolor box
       /(ctr %hedcolor '%TITLE')
       /(ctr 'Buildjob Starts Recording Instructions so that the' )
        (ctr 'Job can be Submitted at some later time.')
       lm 10
     //('Please Enter a Data Set Name you wish the job to be saved in')
       /('            Job Name/File Name  ===>',JOBMEM,8,'%JOBMEM')
       /('            Jol Data Set Name   ===>',Jolds,44,'%$joljobs')
        lm 1
      //(ctr'This file will be placed in the specified file as an')
        (ctr'.INCLUDE file.')
       /(ctr'If it already exists, it will be replaced.')
       helpline ('F3 Exits without Starting Buildjob.');
 IF %SYSPFK = 3 | %SYSPFK=15 THEN EXIT;

 IF %SYSPFK = 1 | %SYSPFK=13 THEN DO;
    REDO JOBMEM1;
 END;

LABEL JOBMEM1;
 IF %JOBMEM = ''
 then do;
      panel reread from jobmem 'You Must Enter a Member Name';
      REDO JOBMEM1;
 end;
 IF %JOlds = ''
 then do;
      panel reread from jolds 'You Must Enter a Data Set Name';
      REDO JOBMEM1;
 end;

 /* if index(jobmem,'.') = 0 then jobmem='%jobmem.job'; */

    ALLOC FILE($CODE) DA('%jolds(%jobmem)') shr;
    OPEN FILE($CODE) OUTPUT;

    BUILDJOB='YES';


 write f($code) from(
          '/*  This Job was Built Using Jol BUILDJOB Command on');
 write f($code) from(
          '    %DAY, %MONTH %DAYNO,%YEAR  */ ');

    $job;      /* BUILD A JOBCARD */

 write f($code) from(' ');
 write f($code) from('   /*    Code for Program Execution  */ ');
 write f($code) from(' ');

exit;
    BLD01AL;   /* OPEN THREE FILES TO STACK */

    BLDGETPM;  /* Find out what programs have to run.
                  A string called RUNPROGS is set up with
                  the programs that have to run.  Each entry
                  is 9 characters long (a blank is at the end).*/

   %MAINCNT=1;

LABEL CHECKPG;
   %INC='YES';
    THISPROG=substr(runprogs,%maincnt,9);
    IF %THISPROG¬=''
    THEN DO;
          BLDCHPGM %THISPROG;
                        /* CHECK THE EXISTANCE OF THE PROGRAM */
                        /* and REGISTER it if necessary.      */

          %MAINCNT=%MAINCNT+9;
          REDO CHECKPG;
    END;

   %MAINCNT=-8;
LABEL MAIN;
   %MAINCNT=%MAINCNT+9;
   %INC='YES';
   THISPROG=substr(runprogs,%maincnt,9);
   IF %THISPROG ¬=''
   THEN DO;
/*
       f1='';
       f2='';
       f3='';
       f4='';
       f5='';
       f6='';
       f7='';
       f8='';
       f9='';
       f10='';
       f11='';
       f12='';
       f13='';
       f14='';
       f15='';
*/

       PANEL
        / (ctr %hedcolor
              'Please enter Details for Program 'hi' %THISPROG:')
        // ('       Run %THISPROG If    ===>',COND,40,'MAXCC=0')
                 ;
       if %cond ¬=''
       then do;
           BLD04P '   If %cond';
           BLD04P '   Then Do;';
       end;

       IF %THISPROG='SORT'     THEN DO; SORT;     %INC='NO'; END;
       IF %THISPROG='MERGE'    THEN DO; MERGE;    %INC='NO'; END;
       IF %THISPROG='COPY'     THEN DO; COPY;     %INC='NO'; END;
       IF %THISPROG='PRINT'    THEN DO; PRINT;    %INC='NO'; END;
       IF %THISPROG='COMPRESS' THEN DO; COMPRESS; %INC='NO'; END;

       IF %INC¬='NO'
       then do;
          %PGMNAME=%THISPROG;
          %syspfk=0;
          exec %THISPROG;/* PROGRAM MUST BE REGISTERED */
       end;

       if %cond ¬=''
       then do;
           BLD04P '   End;';
       end;
       %syspfk=0;

       REDO MAIN;
       IF %PGMNAME=''
       THEN DO;
        /* COULDN'T GET PROGRAM DETAILS */
        /* BECAUSE IT WASN'T REGISTERED */
        PANEL %boxcolor box
              ('            Program %THISPROG is not REGISTERed.')
            / ('            Your job has been terminated ABNORMALLY.')
            / ('            END OF JOB Processing will now take place.')
              ('            You will have the option of saving your')
              ('            %JOBMEM Jol Program.')
          ////('            Please press Enter to continue',ANS,1);
               BLDENDJ ENDJOB JOLDS=%JOLDS SAVEIN=%JOBMEM ;
               exit;
       END;
  /*** HERE THE PROGRAM WAS REGISTERED AND WE HAVE ITS DETAILS ***/

   END;

LABEL INC1;


chkp1:

no2nd:
IF %SYSPFK = 3 | %SYSPFK=15 THEN EXIT;
/********************************************
 *                                          *
 *   HERE IS WHERE WE USE THE BUILD ADD     *
 *   MACRO TO ADD THE DSIDS ETC TO TABLES   *
 *                                          *
 ********************************************/


 /* RESET THE VARIABLES USED TO NULLS FOR THE NEXT PROGRAM */
/* fix
 %EXEC1=''; %EXEC2=''; %EXEC3=''; %EXEC4='';

 %I1='' ; %I2='' ; %I3='' ; %I4='' ; %I5='' ; %I6='' ; %I7='';
 %I8='' ; %I9='' ; %I10=''; %I11=''; %I12=''; %I13=''; %I14='';
 %I15='';
*/
 /* END OF RESET VARIABLES */

     IF %THISPROG¬='' THEN   /* NO MORE  PROGRAMS ? */
     REDO MAIN;
/*  END; / * IF PROGRAM¬='' */
       bldendj endjob jolds=%jolds savein=%jobmem ;
       %BUILDJOB = '';                /* Get EXEC etc to operate as
                                         normal again */
end /* of buildjob macro */ ;
