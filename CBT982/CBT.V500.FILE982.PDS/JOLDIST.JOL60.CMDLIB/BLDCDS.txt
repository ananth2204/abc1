BLDCDS: MACRO (         /* BUILD DATA SET ID DECISION MAKER */

          %PRINTER,     /* ADD TO PRINTER TABLE        */
          %DATASET,
          %PROGRAM,
          %ENDJOB,
          %DDNAME=,
          %DISP=,
          ) ;
                        /* ADD TO PRINTER OR DS TABLE ????  */
 dcl %check                  init('');
 dcl %temp                   init('');
 DCL %DECISION, %CONT INIT '';

 /* Determine if INPUT or OUTPUT */

 /* %DDNAME=caps(ddname); */

    if %disp=''
    then do;
        %CHECK=INDEX(ddname,' READ');
        IF %CHECK=0 THEN %CHECK=INDEX(ddname,' UPDATE');
        IF %CHECK>0 THEN %DISP='OLD';
                    ELSE %DISP='NEW';
    end;

%DSIDRET='';
  /* HERE WE MUST DECIDE IF %LIST(1) IS PRINTER OR SYSOUT BECAUSE
     THEY MUST BE HANDLED IN A DIFFERENT WAY */
%CNT=1;
     IF %LIST(1) THEN DO;
LABEL DECIDE;
     %DECISION=INDEX(LIST0001,'PRINTER');
     IF %DECISION = 0 THEN %DECISION=INDEX(LIST0001,'SYSOUT');
        IF %DECISION > 0 THEN DO;
           %DATASET='';
       /*  WRITE 'PRINTER OR SYSOUT FOUND'; */
           %PRINTER='PRINTER';
        END;
        ELSE DO;
        %PRINTER=''; %DATASET='DATASET';
        END;
           IF %DISP='OLD' & %PRINTER='PRINTER' THEN DO;
           panel %boxcolor box
           ///
 ('              %LIST(1) Cannot be READ or UPDATED because it is')
 ('                   a Printer or Sysout File.')
 //
 ('                   'Please Respecify the data.')
//('              Data Set Name ==>',LIST0001,44);
                 %PRINTER=''; %DATASET='DATASET';
                 REDO DECIDE; /* THIS MAKES SURE THEY DON'T RE-ENTER
                                 A PRINTER */
           END;
  END;
 /******************************************************************/
 /********* C H E C K   T H E   P R I N T E R S ********************/
 /******************************************************************/
 IF %PRINTER = 'PRINTER' & %LIST(1) ¬= '' THEN DO;
    %CONT='YES';
    LABEL PRINTCK;
      SET CHECK = 'PRNT%CNT';
      %SETA = 'SET CHECK = %%QUOTE%%%CHECK%%QUOTE';
      %SETA;                          /* CHECK = VALUE OF %PRNT%CNT */
      IF %CHECK ='%LIST0001' THEN DO;  /* PRNTS THE SAME ? */
         %CONT  = 'NO';                /* RETURN THE PRNT DSID  */
         %DSIDRET='PRNT%CNT';
     /*  WRITE 'PRINTER NAMES ARE THE SAME ''%LIST0001'' %CHECK'; */
      END;
      IF %CHECK = '' THEN DO;          /* HERE THEY ARE NOT THE SAME */
         SET PRNT%CNT='%LIST(1)';      /* SO THE PRNT DCL IS MADE.   */
         BLDPRNTR '%LIST(1)' PRINTER DSID=PRNT%CNT;
         %DSIDRET='PRNT%CNT';
      END;

           ELSE DO;
                IF %CONT  ¬= 'NO' THEN DO;
                   %CNT = %CNT + 1;  IF %CNT < 11 THEN REDO PRINTCK;
                           ELSE DO;
                           UJY03P '/* %LIST(1)  ERROR */' ;
                           UJY03P '/* %LIST(1)  ERROR */' ;
                               WRITE '%LIST(1) CANNOT BE STORED';
                               WRITE 'IN PRINTER TABLE CHECK CODE';
                               WRITE 'FOR /* ERROR */ ';
                               %DSIDRET='ERROR';
                           END;
                END;
           END;
  END;
%CNT = 1; /* RESET CNT TO 1 */
 /******************************************************************/
 /********* C H E C K   T H E   D A T A   S E T S ******************/
 /******************************************************************/
 IF %DATASET = 'DATASET' & %LIST(1) ¬= '' THEN DO;
    %CONT='YES';
LABEL DSETCK;
      SET CHECK = 'DSET%CNT';
 /*    %SETA = 'SET CHECK = ''%%%CHECK'''; */
      %SETA = 'SET CHECK = %%QUOTE%%%CHECK%%QUOTE';
      %SETA;                           /* CHECK = VALUE OF %DSET%CNT */
      IF %CHECK ='%LIST0001' THEN DO;    /* DSETS THE SAME ? */
         %CONT  = 'NO';                  /* RETURN THE DSET  */
         %temp=index(check,'.');
         if %temp¬=0
         then
         %DSIDRET='DSET%CNT';            /* IDENTIFIER       */
         else %DSIDRET='%check';         /* Users DSID name  */
      /* WRITE 'DSET NAMES ARE THE SAME ''%LIST0001'' %CHECK'; */
      END;
      IF %CHECK = '' THEN DO;          /* HERE THEY ARE NOT THE SAME */
         SET DSET%CNT='%LIST(1)';      /* SO THE DCL THE DSET        */
         %DSIDRET='DSET%CNT';
         %work=index(list0001,'.');
         if %work¬=0 then
         BLDDS '%LIST(1)' DATASET DSID=DSET%CNT DISP=%DISP;
         else do;
              BLDDS '%LIST(1)' DATASET DSID=%list0001 DISP=%DISP;
              %dsidret='%list(1)';
         end;
      END;

           ELSE DO;
                IF %CONT  ¬= 'NO' THEN DO;
                   %CNT = %CNT + 1;  IF %CNT < 50 THEN REDO DSETCK;
                           ELSE DO;
                           UJY02P '/* %LIST(1) ERROR */' ;
                           UJY03P '/* %LIST(1) ERROR */' ;
                               WRITE '%LIST(1) CANNOT BE STORED';
                               WRITE 'IN DATA SET TABLE CHECK CODE';
                               WRITE 'FOR /* ERROR */ ';
                               %DSIDRET='ERROR';
                           END;
                END;
           END;
  END;
  END; /* Extra ?? */
END; /* END OF BLDCDS MACRO */
