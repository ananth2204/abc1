COBOL:MACRO (
/*********************************************************************/
/**************          ABS JOL COBOL MACRO            **************/
/**************              11 MARCH 1981              **************/
/*********************************************************************/
/*                                                                   */
/*        SPECIAL PARAMETERS FOR THIS COBOL MACRO                    */
/*                                                                   */
  %NOPANEL                   /* PANEL IS THE DEFAULT FOR TSO         */
  %STEPLIB=,                 /* FOR DEFINING TEST COBOL LIBRARY      */
  %LINK                      /* FOR CHAINING TO JOL LINK MACRO       */
/*                                                                   */
/*        DEFINE POSSIBLE STANDARD COBOL PARAMETERS                  */
/*                                                                   */
  %OBJ='&&OBJ',%NOOBJ        /* TEMPORARY OBJECT IS DEFAULT          */
  %PPREG= 600,               /* THIS IS THE REGION                   */
  %PRINT=,%SYSOUT=,%NOPRINT  /* SYSOUT DEFAULTS TO MSGCLASS          */
  %LIB=,%NOLIB               /* DEFINE AN INPUT LIBRARY IF REQ'D     */
  %APOST %QUOTE              /* APOST IS THE DEFAULT                 */
  %BATCH %NOBATCH            /* NOBATCH IS THE DEFAULT               */
  %BUF='60K',                /* BUFFER                               */
  %CDECK %NOCDECK            /* NOCDECK IS THE DEFAULT               */
  %CHECK %NOCHECK            /* NOCHECK IS THE DEFAULT               */
  %CLIST %NOCLIST            /* NOCLIST IS THE DEFAULT               */
  %COPY %NOCOPY              /* NOCOPY IS THE DEFAULT                */
  %COUNT %NOCOUNT            /* NOCOUNT IS THE DEFAULT               */
  %CYNTAX %NOCYNTAX          /* NOCYNTAX IS THE DEFAULT              */
  %DECNT=,                   /* NO IS THE DEFAULT (MAY BE A NUMBER)  */
  %DMAP %NODMAP              /* NODMAP IS THE DEFAULT                */
  %DYNAM %NODYNAM            /* NODYNAM IS THE DEFAULT               */
  %FLAGW %FLAGE              /* FLAGW IS THE DEFAULT                 */
  %FLOW=,%NOFLOW             /* NOFLOW IS THE DEFAULT                */
  %IDENT %NOIDENT            /* DEFAULT IS NOFLOW                    */
  INTERRUP,INTER,            /* INTERRUPT STD IS THE DEFAULT         */
  %LCOL1 %LCOL2              /* LCOL1 IS THE DEFAULT                 */
  %LIL %NOLIL                /* NOLIL IS THE DEFAULT                 */
  %LINECNT=,                 /* 55 IS THE DEFAULT                    */
  %LSTONLY %LSTCOMP %NOLST   /* NOLST IS THE DEFAULT                 */
  %NAME %NONAME              /* NONAME IS THE DEFAULT                */
  %NUM %NONUM                /* NUM IS THE DEFAULT                   */
  %OPTIMIZE %OPT %NOOPT      /* NOOPT IS THE DEFAULT                 */
  %PMAP %NOPMAP              /* NOPMAP IS THE DEFAULT                */
  %RENT %NORENT              /* NORENT IS THE DEFAULT                */
  %RPT=,                     /* =NEW   IS THE DEFAULT                */
  %SDS %NOSDS                /* NOSDS  IS THE DEFAULT                */
  %SEQ %NOSEQ                /* NOSEQ  IS THE DEFAULT                */
  %SIZE=,                    /* SIZE STD IS THE DEFAULT              */
  %SOURCE %NOSOURCE          /* SOURCE IS THE DEFAULT                */
  %SPACE1 %SPACE2 %SPACE3    /* SPACE1 IS THE DEFAULT                */
  %STATE %NOSTATE            /* NOSTATE IS THE DEFAULT               */
  %SUPMAP %NOSUPMAP          /* SUPMAP IS THE DEFAULT                */
  %SXREF %NOSXREF            /* SXREF IS THE DEFAULT                 */
  %SSIN=,                    /*                                      */
  %SSOUT=,                   /*                                      */
  %TERM %NOTERM              /* NOTERM IS THE DEFAULT                */
  %SYMDMP=,%NOSYMDMP         /* NOSYMDMP IS THE DEFAULT              */
  %TEST=,%NOTEST             /* NOTEST IS THE DEAFULT                */
  %TRAP %TRAPC               /* TRAP IS THE DEFAULT                  */
  %TRUNC %NOTRUNC            /* NOTRUNC IS THE DEFAULT               */
  %VBREF %NOVBREF            /* NOVBREF IS THE DEFAULT               */
  %VERB %NOVERB              /* NOVERB IS THE DEFAULT                */
  %XREF %NOXREF              /* XREF  IS THE DEFAULT                 */
  %ZWB %NOZWB,               /* ZWB IS THE DEFAULT                   */
  %NOLINKQ                   /* NO LINK QUESTION. IF "COMPILE AND    */
                             /* LINK" IS CALLED, THE COMPILE MACRO   */
                             /* CALLS THE LINK MACRO, THEREFORE DON'T*/
                             /* ASK USER IF HE WANTS TO LINK         */
  );
/*********************************************************************/
/*          INITIALISE SOME INTERNAL SYMBOLS FOR THIS MACRO          */
/*          SET NOPANEL AS THE DEFAULT WHEN NOT IN TSO MODE          */
/*                                                                   */
DCL %ANS     INIT '' ;
DCL %PTYPE   INIT '' ;
DCL %OBJCAT  INIT 'DISPLAY ''                      ''' ;
DCL %PRTCAT  INIT 'DISPLAY ''                      ''' ;
/*                                                                   */
IF %TSOCLASS = '' THEN %NOPANEL = 'NOPANEL' ;
/*********************************************************************/
/*                                                                   */
/*           PROCESS COBOL MACRO PARAMETERS                          */
/*                                                                   */
DCL %PARM INIT '';
   IF %BUF     ¬= '' THEN %PARM = 'BUF=%BUF';
   IF %NOOBJ   ¬= '' THEN %OBJ  = 'NULLFILE';
   IF %APOST   ¬= '' THEN %PARM = '%PARM,%APOST';
   IF %QUOTE   ¬= '' THEN %PARM = '%PARM,%QUOTE';
   IF %BATCH   ¬= '' THEN %PARM = '%PARM,BATCH';
   IF %NOBATCH ¬= '' THEN %PARM = '%PARM,NOBATCH';
   IF %CDECK   ¬= '' THEN %PARM = '%PARM,CDECK';
   IF %NOCDECK ¬= '' THEN %PARM = '%PARM,NOCDECK';
   IF %CHECK   ¬= '' THEN %PARM = '%PARM,CHECK';
   IF %NOCHECK ¬= '' THEN %PARM = '%PARM,NOCHECK';
   IF %CLIST   ¬= '' THEN %PARM = '%PARM,CLIST';
   IF %NOCLIST ¬= '' THEN %PARM = '%PARM,NOCLIST';
   IF %CLIST = '' & %NOCLIST = '' THEN %PARM = '%PARM,CLIST';
   IF %COPY    ¬= '' THEN %PARM = '%PARM,COPY' ;
   IF %NOCOPY  ¬= '' THEN %PARM = '%PARM,NOCOPY';
   IF %COPY = '' & %NOCOPY = '' THEN %PARM = '%PARM,COPY';
   IF %COUNT   ¬= '' THEN %PARM = '%PARM,COUNT';
   IF %NOCOUNT ¬= '' THEN %PARM = '%PARM,NOCOUNT';
   IF %CYNTAX ¬= '' THEN %PARM = '%PARM,CSYNTAX';
   IF %NOCYNTAX ¬= '' THEN %PARM = '%PARM,NOCSYNTAX';
   IF %DECNT   ¬= '' THEN %PARM = '%PARM,DECNT=%DECNT';
   IF %DMAP    ¬= '' THEN %PARM = '%PARM,DMAP';
   IF %NODMAP  ¬= '' THEN %PARM = '%PARM,NODMAP';
   IF %DYNAM   ¬= '' THEN %PARM = '%PARM,DYNAM';
   IF %NODYNAM ¬= '' THEN %PARM = '%PARM,NODYNAM';
   IF %DYNAM = '' & %NODYNAM = '' THEN %PARM = '%PARM,DYNAM';
   IF %FLAGW   ¬= '' THEN %PARM = '%PARM,FLAGW';
   IF %FLAGE   ¬= '' THEN %PARM = '%PARM,FLAGE';
   IF %FLOW    ¬= '' THEN %PARM = '%PARM,FLOW';
   IF %NOFLOW  ¬= '' THEN %PARM = '%PARM,NOFLOW';
   IF %IDENT   ¬= '' THEN %PARM = '%PARM,IDENT';
   IF %NOIDENT ¬= '' THEN %PARM = '%PARM,NOIDENT';
   IF %LCOL1   ¬= '' THEN %PARM = '%PARM,LCOL1';
   IF %LCOL2   ¬= '' THEN %PARM = '%PARM,LCOL2';
   IF %LIL     ¬= '' THEN %PARM = '%PARM,LIL';
   IF %NOLIL   ¬= '' THEN %PARM = '%PARM,NOLIL';
   IF %LINECNT ¬= '' THEN %PARM = '%PARM,LINECNT=%LINECNT';
   IF %LSTONLY ¬= '' THEN %PARM = '%PARM,LSTONLY';
   IF %LSTCOMP ¬= '' THEN %PARM = '%PARM,LSTCOMP';
   IF %NOLST   ¬= '' THEN %PARM = '%PARM,NOLST';
   IF %NAME    ¬= '' THEN %PARM = '%PARM,NAME';
   IF %NONAME  ¬= '' THEN %PARM = '%PARM,NONAME';
   IF %NUM     ¬= '' THEN %PARM = '%PARM,NUM';
   IF %NONUM   ¬= '' THEN %PARM = '%PARM,NONUM';
   IF %OPTIMIZE¬= '' THEN %PARM = '%PARM,OPTIMIZE';
   IF %OPT     ¬= '' THEN %PARM = '%PARM,OPTIMIZE';
   IF %NOOPT   ¬= '' THEN %PARM = '%PARM,NOOPT';
   IF %PMAP    ¬= '' THEN %PARM = '%PARM,PMAP';
   IF %NOPMAP  ¬= '' THEN %PARM = '%PARM,NOPMAP';
   IF %RENT    ¬= '' THEN %PARM = '%PARM,RENT';
   IF %NORENT  ¬= '' THEN %PARM = '%PARM,NORENT';
   IF %RPT     ¬= '' THEN %PARM = '%PARM,RPT=%RPT';
   IF %SDS     ¬= '' THEN %PARM = '%PARM,SDS';
   IF %NOSDS   ¬= '' THEN %PARM = '%PARM,NOSDS';
   IF %SEQ     ¬= '' THEN %PARM = '%PARM,SEQ';
   IF %NOSEQ   ¬= '' THEN %PARM = '%PARM,NOSEQ';
   IF %SIZE    ¬= '' THEN %PARM = '%PARM,SIZE=%SIZE';
   IF %SOURCE  ¬= '' THEN %PARM = '%PARM,SOURCE';
   IF %NOSOURCE¬= '' THEN %PARM = '%PARM,NOSOURCE';
   IF %SOURCE = '' & %NOSOURCE = '' THEN %PARM = '%PARM,SOURCE';
   IF %SPACE1  ¬= '' THEN %PARM = '%PARM,SPACE1';
   IF %SPACE2  ¬= '' THEN %PARM = '%PARM,SPACE2';
   IF %SPACE3  ¬= '' THEN %PARM = '%PARM,SPACE3';
   IF %STATE   ¬= '' THEN %PARM = '%PARM,STATE';
   IF %NOSTATE ¬= '' THEN %PARM = '%PARM,NOSTATE';
   IF %SUPMAP  ¬= '' THEN %PARM = '%PARM,SUPMAP';
   IF %NOSUPMAP¬= '' THEN %PARM = '%PARM,NOSUPMAP';
   IF %SXREF   ¬= '' THEN %PARM = '%PARM,SXREF';
   IF %NOSXREF ¬= '' THEN %PARM = '%PARM,NOSXREF';
   IF %SXREF = '' & %NOSXREF = '' THEN %PARM = '%PARM,SXREF';
   IF %SYMDMP  ¬= '' THEN %PARM = '%PARM,SYMDMP';
   IF %NOSYMDMP¬= '' THEN %PARM = '%PARM,NOSYMDMP';
   IF %TERM    ¬= '' THEN %PARM = '%PARM,TERM';
   IF %NOTERM  ¬= '' THEN %PARM = '%PARM,NOTERM';
   /*                                            */
   /* TEST AND SYMDMP ARE EXCLUSIVE - DEFAULT TO */
   /* SYMDMP IF BOTH ARE CODED FOR THIS MACRO    */
   /*                                            */
   IF %TEST ¬= '' & %SYMDMP ¬= '' THEN %TEST = '' ;
   IF %TEST    ¬= '' THEN %PARM = '%PARM,TEST';
   IF %NOTEST  ¬= '' THEN %PARM = '%PARM,NOTEST';
   IF %TRAP    ¬= '' THEN %PARM = '%PARM,TRAP';
   IF %TRAPC   ¬= '' THEN %PARM = '%PARM,TRAPC';
   IF %TRUNC   ¬= '' THEN %PARM = '%PARM,TRUNC';
   IF %NOTRUNC ¬= '' THEN %PARM = '%PARM,NOTRUNC';
   IF %VBREF   ¬= '' THEN %PARM = '%PARM,VBREF';
   IF %NOVBREF ¬= '' THEN %PARM = '%PARM,NOVBREF';
   IF %VERB    ¬= '' THEN %PARM = '%PARM,VERB';
   IF %NOVERB  ¬= '' THEN %PARM = '%PARM,NOVERB';
   IF %XREF    ¬= '' THEN %PARM = '%PARM,XREF';
   IF %NOXREF  ¬= '' THEN %PARM = '%PARM,NOXREF';
   IF %ZWB     ¬= '' THEN %PARM = '%PARM,ZWB';
   IF %NOZWB   ¬= '' THEN %PARM = '%PARM,NOZWB';
   IF %LINK    ¬= '' THEN %LINK = 'Y';
DCL %LNKLINE INIT '';
IF %NOLINKQ = 'NOLINKQ' THEN DO ;  /* HAS THIS MACRO BEEN CALLED BY */
   %LNKLINE = '//'; %LINK = 'N' ;  /* THE COMPILE AND LINK MACRO    */
END;
ELSE DO;                        /* IF NOT CALLED BY COMPILE AND LINK */
    %LNKLINE =                  /* THEN LEAVE IT AS IT WAS.  PJC...  */
  '(''        LINK ***** Y/N ****'',LINK,1,''%LINK'')   //';
END;
/*                                                                   */
/*                                                                   */
/*********************************************************************/
/*          SET OPTION FOR PRINT SYSOUT OR NOPRINT                   */
/*          DEFAULT IS TO MSGCLASS                                   */
/*                                                                   */
IF %PRINT ¬= '' & %SYSOUT¬='' THEN STOP 'PRINT AND SYSOUT CODED';
IF %TSOCLASS ¬= '' THEN DCL %PFILE INIT 'SYSOUT %TSOCLASS';
                   ELSE DCL %PFILE INIT 'SYSOUT A';
IF %PRINT    ¬= '' THEN %PFILE = '%PRINT';
IF %SYSOUT   ¬= '' THEN %PFILE = 'SYSOUT %SYSOUT';
IF %NOPRINT  ¬= '' THEN %PFILE = 'NO PRINT REQUIRED';
/********************************************************************/
/*          SET UP COBOL COPY LIBRARY DEFAULT                       */
/*                                                                  */
IF %LIB = '' THEN %LIB = 'NOT REQUIRED' ;
/********************************************************************/
/*          SET OPTION FOR SYMDMP NOSYMDMP OR TEST NOTEST           */
/*          DEFAULT IS NOSYMDMP NOTEST                              */
/*                                                                  */
DCL %SYMFILE INIT '';
DCL %SYMLINE INIT '';
IF %SYMDMP ¬='' THEN
   DO;
      %SYMFILE = '%SYMDMP' ;
      %SYMDMP  = 'SYSUT5  UPDATES COBSYMS' ;
      %SYMLINE = '(''YOUR SYM FILE WILL BE =======>'',SYMFILE,44,
      ''%SYMFILE'')';
   END;
/********************************************************************/
IF %TEST ¬='' THEN
   DO;
      %SYMFILE = '%TEST' ;
      %TEST = 'SYSUT5  UPDATES COBSYMS' ;
      %SYMLINE = '(''YOUR SYM FILE WILL BE =======>'',SYMFILE,44,
      ''%SYMFILE'')';
   END;
/********************************************************************/
/*          SET DSN OR DSID FOR COMPILER INPUT                      */
/*          DEFAULT IS SYSPREF.COBOL                                */
/*                                                                  */
DCL %DSIN INIT '%SYSPREF.COBOL';
DCL %MEM INIT  '';
IF %LIST(1) ¬= '' THEN
   DO;
      %DSIN = '%LIST(1)';
      DCL %###X INIT '';
      DCL %###L INIT '';
      %###X = INDEX(DSIN,'(');
      IF %###X ¬= 0 THEN
         DO;
            %MEM = SUBSTR(DSIN,%###X);
            %MEM = SUBSTR(MEM,2);
            %###L = LENGTH(MEM);
            %###L = %###L - 1;
            %MEM = SUBSTR(MEM,1,%###L);
            %###X = %###X - 1;
            %DSIN = SUBSTR(DSIN,1,%###X);
            %###X = '';
         END;
   END;
/********************************************************************/
/*              JOL COBOL COMMAND PANEL                             */
/*                                                                  */
IF %NOPANEL = '' THEN
   PANEL
   ('             *****  JOL COBOL COMMAND *****              ')
   ('          ANY HIGHLIGHTED FIELD CAN BE CHANGED           ')
   ('COMPILER OPTIONS CAN BE CHANGED OR ADDED TO - COMMAS REQD')
   ('        ALL DATA SET NAMES MUST BE FULLY QUALIFIED       ') //
   %LNKLINE
   ('SOURCE DATA SET =============>',DSIN,44,'%DSIN')
   ('SOURCE DATA SET MEMBER ======>',MEM,44,'%MEM')
   ('OBJECT DATA SET =============>',OBJ,44,'%OBJ')
   ('COPY LIBRARY(S) =============>',LIB,80,'%LIB')
   ('PRINTER OPTION ==============>',PFILE,44,'%PFILE')
   %SYMLINE
   ('COMPILER OPTIONS ============>',PARM,100,'%PARM')
   ('*************************************************************');
/*                                                                  */
/********************************************************************/
/*            SET INPUT TO THE COMPILER                             */
/*                                                                  */
DCL %LINKMEM INIT '' ;
IF %MEM ¬= '' THEN
   DO;
      %DSIN = '%DSIN(%MEM)';
      %LOADMEM = 'NAME %MEM' ;
   END;
DCL INP DS DSN %DSIN NODEF;
/*********************************************************************/
/*            SET UP OBJECT CODE DATASET                             */
/*            DEFAULT IS AN EXISTING DATASET                         */
/*                                                                   */
DCL %OBJFILE INIT '' ;
DCL %SYSLIN  INIT '' ;
IF %OBJ = '&&OBJ' THEN                 /* DEFAULT TO TEMP OBJECT     */
DO;                                    /* WITH DSID OF OBJ           */
   %OBJ     = 'OBJ' ;
   %OBJFILE = 'OBJ' ;
   DCL OBJ DS DSN &&OBJ BLKSIZE 800 5 CYLS NORLSE SYSDA EXT;
   %SYSLIN  = 'MODS';
END;
ELSE                                   /* OBJECT DATASET DSID OR DSN */
DO;
   %PTYPE = INDEX(OBJ,'.');
   IF %PTYPE = 0 THEN                  /* DSID FOR OBJECT DATASET    */
   DO;                                 /* ASSUME NEW AND CATALOG IT  */
      %OBJFILE = 'OBJ2' ;
      DCL OBJ2 DS LIKE %OBJ ;
      %SYSLIN  = 'WRITES' ;
      %OBJCAT  = 'CATALOGUE OBJ2' ;
   END;
   IF %PTYPE ¬= 0 & %NOPANEL ¬= '' THEN /* DSN FOUND AND PANEL OFF   */
   DO;                                  /* SO ASSUME OLD DSN USED    */
      %OBJFILE = 'OBJ2' ;
      DCL OBJ2 DS DSN %OBJ NODEF ;
      %SYSLIN = 'UPDATES' ;
   END;
   IF %PTYPE ¬= 0 & %NOPANEL = '' THEN /* DSN FOUND AND PANEL ON     */
   DO;                                 /* SO WE CAN GET MORE INFO    */
      PANEL
      ('         ***** JOL COBOL COMMAND *****               ') ///
      ('YOU HAVE SPECIFIED AN OBJECT DATASET FOR THIS COMPILE') ///
      ('IS THIS DATA SET CATALOGUED ********* Y/N',ANS,1)       ///
      ('**********************************************************');
      %OBJFILE = 'OBJ2';
      IF %ANS = 'Y' THEN               /* OBJECT DSN IS CATALOGUED   */
      DO;                              /* SO DECLARE IT AS OLD       */
         DCL OBJ2 DS DSN %OBJ NODEF;
         %SYSLIN = 'UPDATES';
      END;
      ELSE                             /* NEW DSN FOUND SO TELL      */
      DO;                              /* USER AND CATALOGUE IT      */
         PANEL
         ('      *****  JOL COBOL COMMAND *****             ') ///
         ('   ANY HIGHLIGHTED FIELD CAN BE CHANGED          ') ///
         ('YOUR OBJECT DATA SET DEFINITION IS AS FOLLOWS    ') ///
         ('',DCLDEF,99,
          'DCL OBJ2 DS DSN %OBJ SYSDA 5,3 TRKS FB 80,3040 EXT') ///
         ('********************************************************');
         %SYSLIN = 'WRITES' ;
         %OBJCAT = 'CATALOGUE OBJ2' ;
         %DCLDEF;
      END;
      %ANS = '';
   END;
   %PTYPE = '' ;
END;
/********************************************************************/
/*               SET UP PRINTED OUTPUT OR PRINT DATASET             */
/*                                                                  */
DCL %OUTDISP INIT '' ;
%PTYPE = SUBSTR(PFILE,1,6);
IF %PTYPE = 'SYSOUT' THEN              /* SYSOUT CLASS DEFINED      */
   DO;
      DCL PRT %PFILE;
      %SYSOUT = '%PFILE';
      %PTYPE = 1;
      %OUTDISP = 'WRITES';
   END;
IF %PTYPE = 'NO PRI' THEN               /* NOPRINT OPTION CODED      */
   DO;
      DCL PRT DS DUMMY NODEF;
      %PTYPE = 1;
      %OUTDISP = 'WRITES';
   END;
IF %PTYPE ¬= 1 THEN                     /* PRINT DSN OR DSID CODED   */
DO;
   %PTYPE = INDEX(PFILE,'.');
   IF %PTYPE = 0 THEN                   /* DSID FOR PRINT DATASET    */
   DO;                                  /* ASSUME NEW AND CATALOG IT */
      DCL PRT LIKE %PFILE ;
      %OUTDISP = 'WRITES' ;
      %PRTCAT  = 'CATALOGUE PRT' ;
   END;
   IF %PTYPE ¬= 0 & %NOPANEL ¬= '' THEN /* DSN FOUND AND PANEL OFF   */
   DO;                                  /* SO ASSUME OLD DSN USED    */
      DCL PRT DS DSN %PFILE NODEF ;
      %OUTDISP = 'UPDATES';
   END;
   IF %PTYPE ¬= 0 & %NOPANEL = ''  THEN /* DSN FOUND AND PANEL ON    */
   DO;                                  /* SO WE CAN GET MORE INFO   */
      PANEL
      ('       ***** JOL COBOL COMMAND  *****')                ///
      ('YOU HAVE SPECIFIED A PRINT DATASET FOR THIS COMPILE ') ///
      ('IS THIS DATASET ALREADY CATALOGUED *** Y/N',ANS,1)     ///
      ('*********************************************************');
      IF %ANS = 'Y' THEN               /* PRINT DSN IS CATALOGUED    */
      DO;                              /* SO DECLARE IT AS OLD       */
         DCL PRT DS DSN %PFILE NODEF;
         %OUTDISP = 'UPDATES';
      END;
      ELSE                              /* NEW DSN FOUND SO TELL     */
      DO;                               /* USER AND CATALOGUE IT     */
         PANEL
         ('        ***** JOL COBOL COMMAND  *****           ')
         ('      ANY HIGHLIGHTED FIELD CAN BE CHANGED       ') ///
         ('YOUR OUTLIST DATA SET DEFINITION IS AS FOLLOWS   ')
         ('',DCLDEF,80,
          'DCL PRT DS DSN %PFILE SYSDA 5,3 TRKS VBA 136,6144 EXT') ///
         ('********************************************************');
         %OUTDISP = 'WRITES';
         %DCLDEF;
         %PRTCAT = 'CATALOGUE PRT';
      END;
      %ANS = '';
   END;
   %PTYPE = '' ;
   %QTYPE = '' ;
END;
/********************************************************************/
/*                SET UP COBOL COPY LIBRARY                         */
/*                                                                  */
IF %LIB ¬= 'NOT REQUIRED' THEN
   DO;
      DCL LIB DS %LIB  NODEF;
      %LIB = 'SYSLIB READS LIB';
   END;
ELSE %LIB = '';
/********************************************************************/
/*               SYMDMP OR TEST SYMFILE                             */
/*                                                                  */
%QTYPE = INDEX(SYMFILE,'(') ;
IF %TEST ¬= '' | %SYMDMP ¬= '' THEN
   DO;
      IF %QTYPE = 0 THEN DCL COBSYMS DS %SYMFILE(%MEM) NODEF;
      ELSE DCL COBSYMS DS %SYMFILE NODEF;
   END ;
%QTYPE = '' ;
IF %SYMFILE ¬= '' & %NOPANEL = '' THEN
   PANEL
   ('        ***** JOL COBOL COMMAND *****                 ') ///
   ('YOU HAVE SPECIFIED A SYM FILE FOR THIS COMPILE.    ')
   ('THE DATASET MUST BE AN EXISTING CATALOGUED DATASET.')
   ('IT SHOULD BE A PARTITIONED DATASET RECFM F 512 512 ')
   ('SPACE = 3,3,1 TRKS IS USUALLY ENOUGH.              ')
   ('JOL WILL CREATE A NEW MEMBER.                      ')///
   ('***************************************************',SYM,1);
/********************************************************************/
/*               SET UP COMPILER WORK FILES                         */
/*                                                                  */
DCL DS002  DS  5 CYLS  SYSDA NORLSE NODCB;
DCL DS003  DS  5 CYLS  SYSDA NORLSE NODCB;
DCL DS004  DS  5 CYLS  SYSDA NORLSE NODCB;
DCL DS005  DS  5 CYLS  SYSDA NORLSE NODCB;
/********************************************************************/
/*               DECLARE COBOL COMPILER                             */
/*                                                                  */
IF %STEPLIB ¬= '' THEN %STEPLIB = 'STEPLIB READS %STEPLIB';
PROG01:  DCL IKFCBL00 PROG  768 K
         %STEPLIB
         SYSIN    READS    INP
         SYSLIN   %SYSLIN  %OBJFILE
         SYSPRINT %OUTDISP PRT
         %LIB
         SYSUT1   WRITES   DS002
         SYSUT2   WRITES   DS003
         SYSUT3   WRITES   DS004
         SYSUT4   WRITES   DS005
         %SYMDMP
         %TEST
         ;
/********************************************************************/
/*                   RUN COBOL COMPILER                             */
/*                                                                  */
COB:     RUN PROG01 '%PARM';
/********************************************************************/
/*        CATALOG PRINT AND OBJECT DATASETS IF NECESSARY            */
/*                                                                  */
IF COB < 8 THEN
   DO;
      %PRTCAT  ;
      %OBJCAT  ;
      DISPLAY 'COBOL RETURNED LESS THAN 8';
   END;
/********************************************************************/
/*                  CALL LINK MACRO IF REQUIRED                     */
/*                                                                  */
IF COB < 12 & %LINK = 'Y' THEN
   LINK %NOPANEL '%OBJ' %LOADMEM COBLIB %SYSOUT COMP ;
/********************************************************************/
/*                  END OF COBOL MACRO                              */
/*                                                                  */
END;
