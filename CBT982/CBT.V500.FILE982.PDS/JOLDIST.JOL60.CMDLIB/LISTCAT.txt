 HELPSYMB : MACRO;
 END;
 IF %SYSPFK = 7 THEN %SYMB = 7;
 LABEL SYMSC01;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 1')
lm 8
 /  ('A symbolic variable is a special variable; it is recognizable')
    ('by a %% in front of the name.')
 /  ('Whenever a symbolic variable is found in an instruction, other')
    ('than an assignment instruction, the current contents of the')
    ('symbolic variable replaces the symbolic name. eg:-')
/(hi '         %%LOCATION = ''LONDON'';  /*ASSIGN THE VALUE LONDON TO ')
 (hi '                                 %%LOCATION*/ ')
 (hi '         PRINT %%LOCATION.PAY.FILE;')
/   ('The symbolic %%LOCATION is set to LONDON and when it is found')
    ('in the second statement it will be replaced with its contents')
    ('thus the second statement becomes :-')
/(hi '         PRINT LONDON.PAY.FILE; ')
 helpline ('Press PF3 to Exit from Help or Enter to display');

 IF %SYSPFK ¬= 3 THEN DO;
 LABEL SYMSC02;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 2')
lm 8
 /  ('Symbolic substitution causes the symbolic variable to be')
    ('replaced by real values (numeric or alpha).')
 /  ('Symbolic variables add flexibility to command procedures by')
    ('symbolizing real values; these real values can change')
    ('dynamically during the command execution. this allows command')
    ('procedures using symbolic variables to execute multiple ')
    ('functions, or the same function with multiple values.')
    ('symbolic variables may be tested with the IF instruction or')
    ('altered with an assignment instruction:-')
 /(hi'         IF %%X ¬= 1 THEN %%X = 1;')
  (hi'         IF %%DAY = TUESDAY THEN SUBMIT TUESRUN;')
  (hi'         PRINT %%DAY.PAY.FILE; ')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC01;
     END;
 LABEL SYMSC03;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 3')
   /('  ASSIGNING VALUES TO SYMBOLICS.')
 lm 8
    ('There are two ways to assign values to symbolic variables.')
    ('the symbolic declaration statement is normally only used in')
    ('macros (see separate help function) to allow symbolics to be')
    ('passed back to the main program, but it can be used in the main')
    ('program to assign a default value. eg:- ')
 /(hi'         DCL %%LOCATION INIT LONDON;')
 /  ('Characters or numbers do not need to be in quotes, however')
    ('you can assign a character string containing spaces, or special')
    ('characters by placing the entire string in quotes.')
 /  ('Within macros if you want to return a value to the main program')
    ('the keyword ext or external must be added.')
 /(hi'          DCL %%LOCATION INIT LONDON EXT;')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC02;
     END;
 LABEL SYMSC04;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 4')
 /  ('  ASSIGNING VALUES TO SYMBOLICS.')
 lm 8
 /  ('The symbolic variable assignment statement allows you to')
    ('place values (numbers, characters or strings) into a symbolic')
    ('variable. Also arithmetic or character manipulation functions')
    ('can be performed.')
 /  ('You may assign contents or the values of other symbolics. eg:-')
 /(hi'         %%A = 10;        /* SET A TO 10 */')
  (hi'         %%B = ''STRING'';  /* SET B TO A STRING */')
  (hi'         %%C = %%A;       /* SET C TO THE CONTENTS OF A */')
  (hi'         %%D = %%C||345;  /* SET D TO 345 APPENDED TO THE  */')
  (hi'                          /* CONTENTS OF C */')
  (hi'         %%E = %%A + 5;   /* SET E TO THE CONTENTS OF A + 5 */')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC03;
     END;
 LABEL SYMSC05;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 5')
 /  ('  ASSIGNING VALUES TO SYMBOLICS.')
 lm 8
 /  ('ARITHMETIC FUNCTIONS.')
 /  ('You may add, subract, multiply or divide symbolic variables')
    ('or constants with another symbolic variable or constant.')
    ('the result if not a whole number will be rounded down.')
 (hi '         + means add the two quantities together')
 (hi '         - means subtract the second quantity from the first')
 (hi '         / means divide the first quantity by the second')
 (hi('         * means multiply the first quantity by the second')
    ('           concatenation.')
 /  ('The concatenate function allows you to append a constant to a')
    ('symbolic. eg:- ')
 (hi '         %%A = %%C||ABC; ')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC04;
     END;
 LABEL SYMSC06;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 6')
 / ('  ASSIGNING VALUES TO SYMBOLICS.')
 / ('  Functions.')
 /(hi'  SUBSTR.')
 lm 8
   ('Substr may be used to extract sub-strings from strings of data.')
 / ('The name of the symbolic containing the data must be specified,')
   ('as well as the start position from which the sub-string is to be')
   ('extracted. If the length is not specified, the remaining data is')
   ('transferred. If length is specified, only the amount specified')
   ('will be transferred. If the input string is greater than the ')
   ('specified, no blanks will be added. For example:-')
 /(hi'        %%A = ABCDEF;        /* SET A TO ABCDEF */')
  (hi'        %%B = SUBSTR(A,1,3); /* SET B TO ABC */')
  (hi'        %%C = SUBSTR(A,4);   /* SET C TO DEF */')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC05;
     END;
 LABEL SYMSC07;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
          /(ctr 'Symbolic Variables - Screen Number 7')
 /  ('  ASSIGNING VALUES TO SYMBOLICS.')
 /  ('  Functions.')
 /(hi'  INDEX.')
 lm 8
    ('Index may be used to search a string contained in a symbolic ')
    ('for the occurrence of a character or string. The result is 0')
    ('if the character(s) are not found or the start position of the')
    ('first occurrence if the character(s) are found. This number may')
    ('then be used in the substr statement to extract the string.')
    ('Symbolic variables can be used to replace any number in these')
    ('functions, but a %% must not be used on the sending symbolic .')
/(hi '               %%A = ABCDEF;           /* SET A TO ABCDEF */  ')
 (hi '               %%B = INDEX(A,(''D'')); /* SET B TO 4 */ ')
 (hi '               %%C = SUBSTR(A,%%B);    /* SET C TO DEF */')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC06;
     END;
 LABEL SYMSC08;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
 /  ('  ASSIGNING VALUES TO SYMBOLICS.')
 /  ('  Functions.')
 /(hi'  TYPE.')
 lm 8
    ('Type may be used to determine the type of contents in a')
    ('symbolic. If the contents are numeric, TYPE returns NUM.')
    ('If the contents are in quotes, type returns LIT, otherwise type')
    ('returns CHAR. For example:-')
 /(hi'         %%A = ABCDEF;   /* SET A TO ABCDEF */')
  (hi'         %%B = TYPE(A);  /* SET B TO CHAR */')
 /  ('LENGTH.')
    ('Length may be used to find the number of characters in a ')
    ('symbolic. For example :- ')
 /(hi'         %%C = LENGTH(A); /* SET C TO 6 */')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
 IF %SYSPFK ¬= 3 THEN DO;
     IF %SYSPFK = 7 THEN DO;
        %SYSPKF = 0;
 REDO SYMSC07;
     END;
 LABEL SYMSC09;
 PANEL box (ctr 'J O L    H E L P  F A C I L I T Y')
 /  ('  ASSIGNING VALUES TO SYMBOLICS.')
 /  ('  Notes.')
 /  ('  If a dcl statement is used to assign a value to a symbolic')
    ('  variable then all subsequent DCL statements for that symbolic')
    ('  are ignored and assignment statements must be used.')
 /  ('  The following symbolics are reserved and cannot be changed :-')
 /  ('  %%SYSDATE        :     THE CURRENT DATE EG:- 75205')
    ('  %%DAY            :     MONDAY, TUESDAY AND SO ON')
    ('  %%MONTH          :     JANURARY, FEBURARY ETC.')
    ('  %%MONTHNO        :     01, 02 THROUGH TO 12')
    ('  %%DAYNO          :     01 - 31 ')
    ('  %%YEAR           :     1965, 1976')
    ('  %%HOURS          :     0 - 23 ')
    ('  %%MINS           :     0 - 59 ')
    ('  %%SECS           :     0 - 59 ')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next')
 ;
 END;
