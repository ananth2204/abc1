 CAILOGIC: MACRO;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN005;
PANEL  blue box
  //////// (ctr 'Would you like to take a revision test')
     (ctr 'of this chapter ? yes/no ',#1,3,'NO');
    IF %#1 = 'YES' | %#1 = 'Y'
    |  %#1 = 'yes' | %#1 = 'y' THEN DO; CAALOGIC; %SYSPFK = 0; END;
PANEL  blue box / (ctr hi 'Logic Instructions')
lm 8
//(hi 'The IF instruction.')
 /(hi' The IF statement may be used to:')
   /('    *  compare the values of return codes from executed programs')
    ('       with either constants or other program return codes ')
   /('    *  compare the current value of symbolic variables with')
    ('       constants or other symbolic variables ')
   /('    *  test if a program has executed or if a symbolic variable')
    ('       is declared ')
   /('    *  test if an ERROR has occured ')
   /('    *  test the LAST and/or MAXIMUM completion code (CC) ')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan005;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN010;
  PANEL blue box /
  lm 8
    ('The IF statement provides conditional execution of statements.')
    ('It takes the form:')
   /(hi '           IF expression THEN statement-1;')
    (hi '           | ELSE statement-2; ?')
   /('The word THEN and the statement following it are called')
    ('"THEN part" while the ELSE and the statement following it are')
    ('the optional "ELSE part".')
   /('If more than one (1) statement is to be placed in "THEN part" or')
    ('"ELSE part" then use DO; END; blocks so the IF statement format')
    ('becomes:-')
    (hi'            IF expression THEN DO;')
    (hi'                statement-1')
    (hi'                statement-2')
    (hi'            END;')
    (hi'            | ELSE DO;')
    (hi'                statement-3')
    (hi'                statement-4')
    (hi'              END;  ?')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan005;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN015;
%n='-|2m';
PANEL  blue box / (ctr hi 'If Operators')
lm 8
 /('The comparison operators used in the IF statements may be')
    ('one of the following:')
lm 12
/(hi'         OPERATOR      -     MEANING')
 (hi'-------------------------------------------------------')
 (hi'-            =         -     equal to                 -')
 (hi'-           -=         -     not equal to             -')
 (hi'-            <         -     less than                -')
 (hi'-           <=         -     less than or equal to    -')
 (hi'-           -<         -     not less than            -')
 (hi'-            >         -     greater than             -')
 (hi'-           >=         -     greater than or equal to -')
 (hi'-           ->         -     not greater than         -')
 (hi'-------------------------------------------------------')
 (hi'-            &         -     AND \                    -')
 (hi'-                      -          - logical           -')
 (hi'-            -         -     OR  /                    -')
 (hi'-------------------------------------------------------')
        %helpline;

IF %SYSPFK=7 | %SYSPFK=19 then redo pan010;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN020;
  PANEL blue box/ (ctr hi 'An Example of the IF Statement')
  lm 10
   /(hi'IF %%RUNTYPE = ''PRODUCTION'' | %%RUNTYPE = ''PROD'' ')
    (hi'| %%RUNTYPE = ''TEST'' ')
    (hi'THEN %%RUNTYPE = SUBSTR(RUNTYPE,1,1);')
    (hi'ELSE STOP ''RUNTYPE INVALID - %%RUNTYPE'' ;')
   /('The symbolic variable %%RUNTYPE is checked to see if it contains')
    ('the characters PRODUCTION, PROD or TEST. If it does then "THEN')
    ('part" is executed, that is the symbolic variable %%RUNTYPE will')
    ('be assigned the first character of the string via the SUBSTR')
    ('function, thus %%RUNTYPE will have a "P" or a "T" as its value.')
   /('Note that the "ELSE part" of the instruction is optional. If is')
    ('not present, the next instruction following the IF statement is')
    ('executed. The power of the IF statement is enhanced by using DO;')
    ('END; blocks in the "THEN part" as well as in the "ELSE part".')
   /('Blocks are allowed wherever a simple statement is allowed, each')
    ('of the statements in an IF statement may be a DO; END; block.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan015;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN025;
  PANEL blue box/ (ctr hi 'Another Example of the IF Statement')
  lm 10
    ('Example 2:')
   /(hi'     IF VALIDATE = 0')
    (hi'     THEN DO;')
    (hi'         RUN UPDATE;')
    (hi'         CATALOG TRANSFIL, MASTER;')
    (hi'     END;')
    (hi'     ELSE DO;')
    (hi'         TYPE ''ERROR IN VALIDATION'' ;')
    (hi'         STOP ''CALL SUPERVISOR, CORRECT AND RERUN'' ;')
    (hi'     END;')
   /('IF VALIDATE program was run and returned a condition code equal')
    ('to zero (0) then "THEN part" is executed, namely the first DO;')
    ('END; block else "ELSE part" is executed, namely the second DO;')
    ('END; block. Within a DO; END; pair you may have more DO; END;')
    ('blocks, IF statements and declarations, assignmments and so on.')
    (hi'A maximum of 8 levels of nesting is allowed.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan020;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN030;
PANEL blue box/ (ctr hi 'Example of DO/END Pairs in the IF Statement')
  lm 11
/('         'hi'IF %%X = ''A''')
 ('-------- 'hi'THEN DO;')
 ('-     -- 'hi'    IF %%Y=''B''')
 ('-     -  'hi'    THEN DO;')
 ('-     -  'hi'        COPY INPUT TO TAPE; ')
 ('-     -  'hi'        RUN UPDATE;')
 ('-     -- 'hi'    END;')
 ('-     -- 'hi'    ELSE DO;')
 ('-     -  'hi'        WRITE ''ERROR: %%X or %%Y INVALID:'';')
 ('-     -  'hi'        STOP  ''PLEASE CHECK AND RERUN'';')
 ('-     -  'hi'        %%Z = %%Z + 1;')
 ('-     -- 'hi'    END;')
 ('-------- 'hi'END;')
 ('-------- 'hi'ELSE DO;')
 ('-        'hi'    SET W = 15;')
 ('-        'hi'    RUN MYPROG;')
 ('-------- 'hi'END;')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan025;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN035;
  PANEL blue box /
  lm 8
('Note: Be cautious with IF statements nested within IF statements;')
('eg- ' hi 'IF condition-1 THEN')
('    ' hi 'IF condition-2 THEN statement-1;')
('    ' hi 'ELSE statement-2;')
('is ambiguous in Jol, that is Jol can not determine to which IF')
('statement the ELSE belongs to.')
/
('There is a restriction with the IF: when an IF statement is nested')
('in an outer IF statement, the outer IF statement may not have an')
('"ELSE part". Therefore, it is strongly suggested that you use')
('a DO; END; blocks for example:-')
('    ' hi 'IF condition-1 THEN')
('    ' hi '   DO;')
('    ' hi '      IF condition-2 THEN statement-1;')
('    ' hi '   END;')
('    ' hi 'ELSE statement-2;')
('is much more readable and not ambiguous.')
/('NOTE: DO; END; blocks may have any number of statements in it.')
 ('That is 1,2,3 etc. in the above case DO; END; block has only 1')
 ('statement in it (see IF statements in the REFERENCE MANUAL).')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan030;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN040;
  PANEL blue box / (hi ctr 'Use of Parenthesis')
  lm 8
// ('PARENTHESIS may be used to order the evaluation of tests.')
   ('Where parenthesis are used, the conditions are evaluated from')
   ('the innermost set of parentheses outward, in the case of nested')
   ('conditions, and from left to right in non-nested conditions.')
   ('For example:')/
  (hi 'IF (%%VAR1 = ''RUNNO'' & (%%VAR2 = ''RERUN | %%VAR2=''''))'
  (hi '& STEP3 = 0 THEN RUN STEP4;')
   /('This example says - if and only if, the symbolic variable %%VAR2')
    ('has either a ''NULL'' value or the value ''RERUN'' then, at')
    ('execution time, test the return code issued by STEP3 and if it is'
    ('a zero (0) then - RUN STEP4.')
   /('If the Value of %%VAR1 was say, DATE, then the ANDed test would')
    ('have failed and RUN STEP4 command would not be executed.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan035;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN045;
  PANEL blue box / (hi ctr 'Further Examples of the IF')
  lm 8
   /('1. 'hi'IF %%RESTART THEN ....')
   /('   Tests if the symbolic variable %%RESTART has been declared.')
   /('2. 'hi'RUN VALIDATE;')
    ('   'hi'IF VALIDATE = 0   /* VALIDATE RUN OK ? */')
    ('   'hi'   THEN RUN UPDATE;')
    ('   'hi'ELSE STOP ''UPDATE NOT RUN''; ')
   /('Every program that executes as part of a Jol procedure returns')
    ('a value to the operating system or it abends (ERROR). If the')
    ('program ends normally, it returns a number between zero (0) and')
    ('4095. The test above stops the job if VALIDATE does not return')
    ('zero.')
        %helpline;

  PANEL blue box / (hi ctr 'Further Examples of the IF')
  lm 8
  //('3. 'hi'IF VALIDATE THEN ....')
   /('   Means that if program VALIDATE ran THEN execute instructions.')
  //('4. 'hi'IF PROGA > PROGB THEN ....')
   /('   Means that if program A (PROGA) and program B (PROGB) ran')
    ('   and program  A"s return code was greater than program B.')
  //('For more advanced treatment of the IF statement see the Jol')
    ('Reference Manuals.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan040;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN050;
PANEL blue box /(hi ctr 'Use of the REDO instruction in IF statements')
lm 8
  //('The REDO instruction allows you to loop or re-execute commands.')
    ('The format is:')
   /('          ' hi 'LABEL label;')
    ('          ' hi '      Jol Code e.g. statement-1;')
    ('          ' hi '                    statement-2;')
    ('          ' hi 'REDO label |FOREVER?;')
   /('Where ''label'' is a 1 to 7 character label name.')
   /('The keyword LABEL must appear in the Jol code to identify that')
    ('the user may wish to REDO that section of code.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan045;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN055;
  PANEL blue box
  // lm 8
    ('You may REDO from any nested level of a DO; group to a lower')
    ('level. eg.')
    (hi'        LABEL HERE;')
    (hi'        IF statement THEN DO; /* 1st level nesting */')
    (hi'           Jol statements  ')
    (hi'           ..... ;')
    (hi'           IF statement THEN DO;')
    (hi'              Jol statements')
    (hi'              ..... ;')
    (hi'              IF statement THEN DO;')
    (hi'                 Jol statements')
    (hi'                 ... ; /* 3rd level nesting */')
    (hi'                 REDO HERE;')
    (hi'              END;')
    (hi'           END;')
    (hi'        END;')
    ('With this example the REDO instruction is coded at the third')
    ('level and refers back to the first level Jol statement.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan050;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN060;
  PANEL blue box  / lm 8
('The REDO instruction is extremely useful when used with the')
('PANEL instruction. (see Jol processing facilities) or consult')
('the Jol Reference Manuals for further treatment (compile and')
('execution oriented code in particular.)')
/(hi'NOTE:')
    ('If you use the REDO instruction in conjunction with the PANEL')
    ('instruction be careful that the code is not submitted in the')
    ('background, or that you cater for this in your Jol code.')
   /('For example:- "A case where you might be testing for a value')
    ('               and that value is not input so you repeat the code'
    ('               until a value has been input using the REDO')
    ('               instruction."')
   /('Note that to stop infinite loops, the REDO automatically stops')
    ('after 50 iterations.  Code the FOREVER keyword to continue')
    ('looping.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan055;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN065;
 PANEL blue box   //////
(ctr 'Press F1 to learn more about COMPILE and EXECUTION ')
(ctr 'or type MORE ',#1,4,'NO');
IF %#1 = 'MORE' | %SYSPFK=1 THEN CAIEXPL1;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan055;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
PANEL  blue box
  //////// (ctr 'Would you like to take a revision test')
     (ctr 'of this chapter ? yes/no ',#1,3,'YES');
IF %#1 = 'YES' | %#1 = 'Y'
|  %#1 = 'yes' | %#1 = 'y'
THEN DO;
   CAALOGIC;
   %SYSPFK = 0;
END;
%CHNUM = %CHNUM + 1;
IF %CHNUM > %MAXCHAP THEN DO;
   PANEL blue box ///////(ctr ' This is the end of this section.')
         /(ctr 'Press ENTER to get back to main index/menu.',X,1);
   %CHNUM = 1;
   %SYSPFK = 3;
END;
  END;  /* OF CAILOGIC MACRO */
