FORANZ:MACRO ( /* JOL FORT  COMMAND  */
  /* ALLOW USER TO SPECIFY A TEST VERSION OF THE COMPILER LIBRARY    */
  %LINK
  %LOAD=,
  %STEPLIB='',
  /* DEFINE POSSIBLE STANDARD FORT-HE PARAMETERS PER AS IN JOL MANUAL*/
  %PRINT=,%SYSOUT=,%NOPRINT,
  %OBJ='&&OBJ',%NOOBJ        /* TEMPORARY OBJECT IS DEFAULT          */
  %FLAG=,                    /* FLAG(I) IS THE DEFAULT               */
  %LIL %NOLIL                /* NOLIL IS THE DEFAULT                 */
  %LINECNT=,                 /* 60 IS THE DEFAULT                    */
  %LIST %NOLIST              /* NOLIST IS THE DEFAULT                */
  %OPTIMIZE=, %NOOPT         /* NOOPT OR OPTIMIMZE(0) IS DEFAULT     */
  %MAP  %NOMAP               /* NOMAP  IS THE DEFAULT                */
  %RENT %NORENT              /* NORENT IS THE DEFAULT                */
  %SEQ %NOSEQ                /* NOSEQ  IS THE DEFAULT                */
  %SIZE=,                    /* SIZE(MAX) IS THE DEFAULT             */
  %SOURCE %NOSOURCE          /* SOURCE IS THE DEFAULT                */
  %TERM %NOTERM              /* NOTERM IS THE DEFAULT                */
  %XREF %NOXREF              /* NOXREF  IS THE DEFAULT               */
  %STATIS %NOSTATIS          /* NOSTATIS IS THE DEFAULT              */
  %INLOG2 %NOINLOG2          /* NOINLOG2 IS THE DEFAULT              */
  %EBCDIC %BCD               /* EBCDIC IS THE DEFAULT                */
  %GOSTMT %NOGOSTMT          /* NOGOSTMT IS THE DEFAULT              */
  %ALC  %NOALC               /* ALC IS THE DEFAULT                   */
  %NAME=, %NONAME            /* NAME(MAIN) IS DEFAULT                */
  %DEBUG %NODEBUG            /*        NA                            */
  %DOUBLE %NODOUBLE          /*        NA                            */
  %DOVAL=,                   /*        NA                            */
  %LMSG %SMSG                /*        NA                            */
  %NOLINKQ                   /* NO LINK QUESTION. IF "COMPILE AND    */
                             /* LINK" IS CALLED, THE COMPILE MACRO   */
                             /* CALLS THE LINK MACRO, THEREFORE DON'T*/
                             /* ASK USER IF HE WANTS TO LINK         */
  );

   DCL %PARM INIT '';
   IF %DEBUG   ¬= '' THEN ;
   IF %NODEBUG ¬= '' THEN ;
   IF %DOUBLE  ¬= '' THEN ;
   IF %NODOUBLE¬= '' THEN;
   IF %DOVAL   ¬= '' THEN ;
   IF %LMSG    ¬= '' THEN ;
   IF %SMSG    ¬= '' THEN ;
   IF %STATIS  ¬= '' THEN %PARM = '%PARM,STATIS';
   IF %NOSTATIS¬= '' THEN %PARM = '%PARM,NOSTATIS';
   IF %INLOG2  ¬= '' THEN %PARM = '%PARM,INLOG2';
   IF %NOINLOG2¬= '' THEN %PARM = '%PARM,NOINLOG2';
   IF %EBCDIC  ¬= '' THEN %PARM = '%PARM,EBCDIC';
   IF %BCD     ¬= '' THEN %PARM = '%PARM,BCD';
   IF %GOSTMT  ¬= '' THEN %PARM = '%PARM,GOSTMT';
   IF %NOGOSTMT¬= '' THEN %PARM = '%PARM,NOGOSTMT';
   IF %NOGOSTMT = '' & %GOSTMT  = ''
                     THEN %PARM = '%PARM,GOSTMT'; /* JOL DEFAULT */
   IF %ALC     ¬= '' THEN %PARM = '%PARM,ALC';
   IF %NOALC   ¬= '' THEN %PARM = '%PARM,NOALC';
   IF %NOALC    = '' & %ALC     = ''
                     THEN %PARM = '%PARM,ALC';     /* JOL DEFAULT */
   IF %NAME    ¬= '' THEN %PARM = '%PARM,NAME(%NAME)';
   IF %NONAME  ¬= '' THEN %PARM = '%PARM,NAME(MAIN)';
   IF %FLAG    ¬= '' THEN %PARM = '%PARM,FLAG(%FLAG)';
   IF %LIL     ¬= '' THEN %PARM = '%PARM,LIL';
   IF %NOLIL   ¬= '' THEN %PARM = '%PARM,NOLIL';
   IF %LINECNT ¬= '' THEN %PARM = '%PARM,LINECOUNT(%LINECNT)';
   IF %LIST    ¬= '' THEN %PARM = '%PARM,LIST';
   IF %NOLIST  ¬= '' THEN %PARM = '%PARM,NOLIST';
   IF %OPTIMIZE¬= '' THEN %PARM = '%PARM,OPT(%OPTIMIZE)';
   IF %NOOPT   ¬= '' THEN %PARM = '%PARM,NOOPT';
   IF %NOOPT    = '' & %OPTIMIZE= ''
                     THEN %PARM = '%PARM,OPT(0)';  /* JOL DEFAULT */
   IF %MAP     ¬= '' THEN %PARM = '%PARM,MAP';
   IF %NOMAP   ¬= '' THEN %PARM = '%PARM,NOMAP';
   IF %RENT    ¬= '' THEN %PARM = '%PARM,RENT';
   IF %NORENT  ¬= '' THEN %PARM = '%PARM,NORENT';
   IF %SEQ     ¬= '' THEN %PARM = '%PARM,SEQ';
   IF %NOSEQ   ¬= '' THEN %PARM = '%PARM,NOSEQ';
   IF %SIZE    ¬= '' THEN %PARM = '%PARM,SIZE(%SIZE)';
   IF %SOURCE  ¬= '' THEN %PARM = '%PARM,SOURCE';
   IF %NOSOURCE¬= '' THEN %PARM = '%PARM,NOSOURCE';
   IF %TERM    ¬= '' THEN %PARM = '%PARM,TERM';
   IF %NOTERM  ¬= '' THEN %PARM = '%PARM,NOTERM';
   IF %XREF    ¬= '' THEN %PARM = '%PARM,XREF';
   IF %NOXREF  ¬= '' THEN %PARM = '%PARM,NOXREF';
   /**********************************************************/
   DCL %CATLG INIT ''; /* SET TO DSIDS THAT NEED CATALOGUING */
   /* NOW FIX UP PARMS SUCH AS PRINT, SYSOUT, TEST ETC  */
   DCL %DSIN INIT 'NOT FOUND';
   IF %LINK¬='' THEN %LINK='Y';
      %LOAD = '%SYSUID.LOAD';
   IF %LIST(1) ¬= '' THEN %DSIN = '%LIST(1)';



DCL %LNKLINE INIT '';
IF %NOLINKQ = 'NOLINKQ' THEN DO ;  /* HAS THIS MACRO BEEN CALLED BY */
   %LNKLINE = '/'; %LINK = 'N' ;  /* THE COMPILE AND LINK MACRO    */
END;
ELSE DO;                        /* IF NOT CALLED BY COMPILE AND LINK */
    %LNKLINE =                  /* THEN LEAVE IT AS IT WAS.  PJC...  */
  '(''        LINK ***** Y/N ****'',LINK,1,''%LINK'') /';
END;

IF %NOPANEL = '' THEN
PANEL ('                  JOL ***** FORT COMMAND PANEL *****')
('           ANY HIGHLIGHTED FIELD CAN BE CHANGED')
('THE COMPILER OPTIONS FIELD CAN BE CHANGED OR ADDED TO "," ARE REQD')
('          ALL DATA SET NAMES MUST BE FULLY QUALIFIED')
   %LNKLINE
('YOUR SOURCE DATA SET IS =====>',DSIN,44,'%DSIN')
('YOUR OBJECT DATA SET IS =====>',OBJ,44,'%OBJ')
('YOUR PRINTER OPTION IS ======>',SYSOUT,1,'%SYSOUT')
('YOU HAVE CHOSEN THE FOLLOWING COMPILER OPTIONS *****')
('===>',PARM,100,'%PARM')
/('      OUTPUT LOADMOD LIBNAME ========>',LOAD,44,'%LOAD');
DCL INP DS DSN %DSIN NODEF;
 IF %DSIN ¬= '' THEN DO;
        DCL %###X INIT '';
        DCL %###L INIT '';
        DCL %MEM INIT '';
        %###X = INDEX(DSIN,'(');
          IF %###X ¬= 0 THEN DO;
             %MEM = SUBSTR(DSIN,%###X);
             %MEM = SUBSTR(MEM,2);
             %###L = LENGTH(MEM);
             %###L = %###L - 1;
             %MEM = SUBSTR(MEM,1,%###L);
          END;
 END;
   IF %PRINT¬='' & %SYSOUT¬='' THEN STOP 'PRINT AND SYSOUT CODED';
   IF %PRINT¬='' THEN
   DO;
      %$T=TYPE(PRINT);
      IF %$T='LIT' THEN DCL PRT DS %PRINT NODEF;
      ELSE DO;
              %$T=INDEX(PRINT,'.');
              IF %$T¬=0 THEN DCL PRT DS %PRINT NODEF;
                        ELSE DCL PRT DS LIKE %PRINT;
      END;
      %CATLG='%CATLG PRT';
   END;
   IF %SYSOUT¬='' THEN DCL PRT SYSOUT %SYSOUT NODEF;
   IF %NOPRINT¬='' THEN DCL PRT DS DUMMY NODEF;
   ELSE IF %SYSOUT='' & %PRINT=''
           THEN      /* DEFAULT TO SYSOUT A OR TSO CLASS */
           DCL PRT SYSOUT A;
   /************************************************************/
   IF %NOOBJ = ''
     THEN  DO;
             IF %OBJ¬= '&&OBJ' THEN
                DCL OBJ DS DSN %OBJ NODEF EXT;
             ELSE DCL OBJ  DS DSN &&OBJ  BLKSIZE 3200
                5 CYLS NORLSE EXTERNAL UNIT SYSDA ;
           END;
    ELSE   DO; %PARM = '%PARM,NOOBJECT';
               DCL OBJ DS DUMMY NODEF;
           END;
   /*************************************************************/
     DCL DS001  DS  5 CYLS  SYSDA NORLSE NODCB BLKSIZE 3465;
     DCL DS002  DS  5 CYLS  SYSDA NORLSE NODCB;
     DCL DS009  DS  %LOAD NODEF;
     DCL SLIB DS SYS2.FORTRAN.FORTLIB NODEF;
     DCL LIB1 DS SYS2.FORTRAN.LPALIB NODEF;
     DCL LIB2 DS %STEPLIB NODEF;
     PROG01: DCL JZKAFORT  PROG  512 K
         SYSPRINT WRITES   PRT
         STEPLIB  READS    LIB1 || LIB2
         SYSLIB   READS    SLIB
         SYSUT1   WRITES   DS001
         SYSUT2   WRITES   DS002
         SYSIN    READS    INP
         SYSLIN   MODS     OBJ;
     FRUN: RUN PROG01 '%PARM';
     IF FRUN >= 4 THEN DO;
        STOP 'FORTRAN COMPILE FAILED WITH COND.CODE >= 4';
     END;
     IF %LINK = 'Y' THEN
     IF FRUN < 4  THEN DO;
        LINK '%OBJ' LOAD %LOAD NAME %GEMMOD SYSOUT %SYSOUT;
     END;
  /*     CATALOG PRINT OBJ AND TEST DATA SETS IF USER DEFINED        */
     IF %CATLG ¬= '' THEN CATALOG %CATLG ;
     END;
