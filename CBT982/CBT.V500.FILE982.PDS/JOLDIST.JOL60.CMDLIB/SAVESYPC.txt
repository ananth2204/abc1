PLI:MACRO ( /* JOL PLI COMMAND  */
  /* DEFINE POSSIBLE STANDARD PLI PARAMETERS    */
  %STEPLIB=,
  %LINK
  %OBJ='&&OBJ',%NOOBJ        /* TEMPORARY OBJECT IS DEFAULT          */
  %NOPANEL                   /* PANEL IS THE DEFAULT                 */
  %PRINT=,%SYSOUT=,          /* SYSOUT CLASS A IS THE DEFAULT        */
  %LIB=,                     /* DEFINE AN INPUT LIBRARY IF REQ'D     */
  %ASTER,%NOASTER            /* NOASTER IS THE DEFAULT               */
  %ATTRIB=,%A= 'SHORT',
  %NOATTRIB %NOA
  %CHAR = '60',%CHARSET=,
  %CS=,
  %COMPILE=,%C=,%NCOMPILE=,%NC=,
  %COUNT %NOCOUNT %CT %NCT   /* NOCOUNT IS THE DEFAULT               */
  %DUMP %NODUMP %DU %NDU
  %ESD %NOESD
  %EBCDIC %BCD
  %FLAG='I',%F=,             /* FLAG I IS THE DEFAULT                */
  %FLOW=,%NOFLOW             /* NOFLOW IS THE DEFAULT                */
  %GONUMBER %NOGONUM %GN %NGN
  %GOSTMT %NOGOSTMT %GS %NGS
  %INCLUDE %NOINCLUD %INC %NINC
  %INSOURCE %NOINSOUR %IS %NIS
  %NOINTER
  %INTERRUP,%INT,%NINT       /* INTERRUPT STD IS THE DEFAULT         */
  %LINECNT=,%LC=,            /* 55 IS THE DEFAULT                    */
  %LIST,%NOLIST              /* NOLIST IS THE DEFAULT                */
  %LISTSTMT =,
  %LMESSAGE %SMESSAGE %LMSG %SMSG
  %MACRO %NOMACRO %M %MN
  %MARGINI=,%MI=,%NMARGINI %NMI
  %MARGINS =, %MAR=,
  %NAME=,%N=,
  %NEST, %NONEST
  %NUMBER %NONUMBER %NUM %NONUM
  %OFFSET %NOOFFSET %OF %NOF
  %OPTIMIZE=, %OPT=,%NOOPT   /* NOOPT IS THE DEFAULT                 */
  %OPTIONS %NOOPTION %OP %NOP
  %RENT %NORENT              /* NORENT IS THE DEFAULT                */
  %SEQ =,
  %SIZE=,                    /* SIZE STD IS THE DEFAULT              */
  %SOURCE %NOSOURCE %S %NS   /* SOURCE IS THE DEFAULT                */
  %SPACE %NOSPACE %SP %NSP
  %STMT %NOSTMT              /*  STMT IS THE DEFAULT                 */
  %STORAGE %NSTORAGE %STG %NSTG /* STORAGE IS DEFAULT               */
  %SYNTAX=, %NOSYNTAX=,
  %TERM %NOTERM              /* NOTERM IS THE DEFAULT                */
  %TEST=,%NOTEST             /* NOTEST IS THE DEAFULT                */
  %XREF= 'SHORT',
  %NOLINKQ                   /* NO LINK QUESTION. IF "COMPILE AND    */
                             /* LINK" IS CALLED, THE COMPILE MACRO   */
                             /* CALLS THE LINK MACRO, THEREFORE DON'T*/
                             /* ASK USER IF HE WANTS TO LINK         */

  );
  DCL %DSIN INIT '%SYSPREF.PLI';
  DCL %PFILE INIT 'SYSOUT A';
  IF %LIB = '' THEN
     %LIB = 'NOT REQUIRED';
  DCL %SYMFILE INIT '';
   DCL %PARM INIT '';
   IF %NOOBJ   ¬= '' THEN %OBJ  = 'NULLFILE';
   IF %ASTER   ¬= '' THEN %PARM = 'ASTER';
   ELSE %PARM = 'NOASTER';
   IF %NOATTRIB ¬= '' THEN DO; %ATTRIB = ''; %A = '';
   %PARM = '%PARM,NOATTRIBUTES';
   END;
   IF %NOA ¬= '' THEN DO; %ATTRIB = ''; %A = '';
   %PARM = '%PARM,NOATTRIBUTES';
   END;
   IF %A ¬= '' THEN %ATTRIB = '%A';
   IF %ATTRIB ¬= '' THEN %PARM = '%PARM,A(%ATTRIB)';
   IF %CHARSET ¬= '' THEN %CHAR = '%CHARSET';
   IF %CS ¬= '' THEN %CHAR = '%CS';
   IF %CHAR ¬= '' THEN %PARM = '%PARM,CHARSET(%CHAR)';
   IF %NC ¬= '' THEN DO;
      %COMPILE = '';
      %C = '';
      %NOCOMPILE = '%NC';
      END;
   IF %NCOMPILE ¬= '' THEN DO;
      %PARM = '%PARM,NOCOMPILE(%NOCOMPILE)';
      %C = '';
      %COMPILE = '';
      END;
   IF %C ¬= '' THEN %COMPILE = '%C';
   IF %COMPILE ¬= '' THEN %PARM = '%PARM,COMPILE(%COMPILE)';
   IF %NCT ¬= '' THEN %NOCOUNT = 'NOCOUNT';
   IF %NOCOUNT ¬= '' THEN DO;
      %PARM = '%PARM,NOCOUNT';
      %COUNT = '';
      %CT = '';
   END;
   IF %CT ¬= '' THEN %COUNT = 'COUNT';
   IF %COUNT ¬= '' THEN %PARM = '%PARM,COUNT';
   IF %NDU ¬= '' THEN %NODUMP = 'NODUMP';
   IF %NODUMP ¬= '' THEN DO;
      %PARM = '%PARM,NODUMP';
      %DUMP = '';
      %DU = '';
   END;
   IF %DU ¬= '' THEN %DUMP = 'DUMP';
   IF %DUMP ¬= '' THEN %PARM = '%PARM,DUMP';
   IF %NOESD ¬= '' THEN DO;
      %PARM = '%PARM,NOESD';
      %ESD = '';
   END;
   IF %ESD ¬= '' THEN %PARM = '%PARM,ESD';
   IF %EBCDIC ¬= '' THEN DO;
      %PARM = '%PARM,EBCDIC';
      %BCD = '';
   END;
   IF %F ¬= '' THEN %FLAG = '%F';
   IF %FLAG ¬= '' THEN %PARM = '%PARM,FLAG(%FLAG)';
   IF %NOFLOW  ¬= '' THEN DO;
      %PARM = '%PARM,NOFLOW';
      %FLOW = '';
   END;
   IF %FLOW    ¬= '' THEN %PARM = '%PARM,FLOW(%FLOW)';
   IF %NGN ¬= '' THEN %NOGONUM = 'NOGONUM';
   IF %NOGONUM ¬= '' THEN DO;
      %PARM = '%PARM,NOGONUM';
      %GONUMBER = '';
      %GN = '';
   END;
   IF %GN ¬= '' THEN %GONUMBER = 'GONUMBER';
   IF %GONUMBER ¬= '' THEN %PARM = '%PARM,GONUMBER';
   IF %NGS ¬= '' THEN %NOGOSTMT = 'NOGOSTMT';
   IF %NOGOSTMT ¬= '' THEN DO;
      %PARM = '%PARM,NOGOSTMT';
      %GOSTMT = '';
      %GS = '';
   END;
   IF %GS ¬= '' THEN %GOSTMT = 'GOSTMT';
   IF %GOSTMT ¬= '' THEN %PARM = '%PARM,GOSTMT';
   IF %NINC ¬= '' THEN %NOINCLUD = 'NOINC';
   IF %NOINCLUD ¬= '' THEN DO;
      %PARM = '%PARM,NOINCLUDE';
      %INC = '';
      %INCLUDE = '';
   END;
   IF %INC ¬= '' THEN %INCLUDE = 'INCLUDE';
   IF %INCLUDE ¬= '' THEN %PARM = '%PARM,INCLUDE';
   IF %NIS ¬= '' THEN %NOINSOUR = 'NIS';
   IF %NOINSOUR ¬= '' THEN DO;
      %PARM = '%PARM,NOINSOURCE';
      %IS = '';
      %INSOURCE = '';
   END;
   IF %IS ¬= '' THEN %INSOURCE = 'IS';
   IF %INSOURCE ¬= '' THEN %PARM = '%PARM,INSOURCE';
   IF %NINT ¬= '' THEN %NOINTER = 'NINT';
   IF %NOINTER ¬= '' THEN DO;
      %PARM = '%PARM,NOINTER';
      %INT ='';
      %INTERUPT= '';
   END;
   IF %INT ¬= '' THEN %INTERUPT = 'INT';
   IF %INTERUPT ¬= '' THEN %PARM = '%PARM,INTERRUPT';
   IF %LC ¬= '' THEN %LINECNT = '%LC';
   IF %LINECNT ¬= '' THEN %PARM = '%PARM,LINECNT(%LINECNT)';
   IF %NOLIST ¬= '' THEN DO;
      %PARM = '%PARM,NOLIST';
      %LIST = '';
      %LISTSTMT = '';
   END;
   IF %LIST ¬= '' THEN %PARM = '%PARM,LIST';
   IF %LISTSTMT ¬= '' THEN %PARM = '%PARM,LISTSTMT(%LISTSTMT)';
   IF %SMSG ¬= '' THEN %SMESSAGE = 'SMSG';
   IF %SMESSAGE ¬= '' THEN DO;
      %PARM = '%PARM,SMESSAGE';
      %LMSG = '';
      %LMESSAGE = '';
   END;
   IF %LMSG ¬= '' THEN %LMESSAGE = 'LMSG';
   IF %LMESSAGE ¬= '' THEN %PARM = '%PARM,LMESSAGE';
   IF %MN ¬= '' THEN %NOMACRO = 'NMAC';
   IF %NOMACRO ¬= '' THEN DO;
      %PARM = '%PARM,NOMACRO';
      %MACRO = '';
      %M = '';
   END;
   IF %M ¬= '' THEN %MACRO = 'MAC';
   IF %MACRO ¬= '' THEN %PARM = '%PARM,MACRO';
   IF %NOMAP ¬= '' THEN DO;
      %PARM = '%PARM,NOMAP';
      %MAP = '';
   END;
   IF %MAP ¬= '' THEN %PARM = '%PARM,MAP';
   IF %NMI ¬= '' THEN %NMARGINI = 'NMG';
   IF %NMARGINI ¬= '' THEN DO;
      %PARM = '%PARM,NOMARGINI';
      %MI = '';
      %MARGINI = '';
   END;
   IF %MI ¬= '' THEN %MARGINI = '%MI';
   IF %MARGINI ¬= '' THEN %PARM = '%PARM,MARGINI(%MARGINI)';
   IF %MAR ¬= '' THEN %MARGINS = '%MAR';
   IF %MARGINS ¬= '' THEN %PARM = '%PARM,MARGINS(%MARGINS)';
   IF %N ¬= '' THEN %NAME = '%N';
   IF %NAME    ¬= '' THEN %PARM = '%PARM,NAME %NAME';
   IF %NONEST ¬= '' THEN DO;
      %PARM = '%PARM,NONEST';
      %NEST = '';
   END;
   IF %NEST ¬= '' THEN %PARM = '%PARM,NEST';
   IF %NONUM ¬= '' THEN %NONUMBER = 'NONUM';
   IF %NONUMBER ¬= '' THEN DO;
      %PARM = '%PARM,NONUMBER';
      %NUMBER = '';
      %NUM = '';
   END;
   IF %NUM ¬= '' THEN %NUMBER = 'NUM';
   IF %NUMBER ¬= '' THEN %PARM = '%PARM,NUMBER';
   IF %NOF ¬= '' THEN %NOOFFSET = 'NOFF';
   IF %NOOFFSET ¬= '' THEN DO;
      %PARM = '%PARM,NOOFFSET';
      %OF = '';
      %OFFSET = '';
   END;
   IF %OF ¬= '' THEN %OFFSET = 'OFFSET';
   IF %OFFSET ¬= '' THEN %PARM = '%PARM,OFFSET';
   IF %NOOPT ¬= '' THEN DO;
      %PARM = '%PARM,NOOPT';
      %OPT = '';
      %OPTIMIZE = '';
   END;
   IF %OPT     ¬= '' THEN %OPTIMIZE = 'OPT';
   IF %OPTIMIZE¬= '' THEN %PARM = '%PARM,OPTIMIZE %OPTIMIZE';
   IF %NOP ¬= '' THEN %NOOPTION = 'NOOPT';
   IF %NOOPTION ¬= '' THEN DO;
      %PARM = '%PARM,NOOPTIONS';
      %OP = '';
      %OPTIONS = '';
   END;
   IF %OP ¬= '' THEN %OPTIONS = 'OPT';
   IF %OPTIONS ¬= '' THEN %PARM = '%PARM,OPTIONS';
   IF %NORENT ¬= '' THEN DO;
      %PARM = '%PARM,NORENT';
      %RENT = '';
   END;
   IF %RENT ¬= '' THEN %PARM = '%PARM,REENTRANT';
   IF %SEQ     ¬= '' THEN %PARM = '%PARM,SEQ(%SEQ)';
   IF %SIZE    ¬= '' THEN %PARM = '%PARM,SIZE(%SIZE)';
   IF %NS ¬= '' THEN %NOSOURCE = 'NS';
   IF %NOSOURCE ¬= '' THEN DO;
      %PARM = '%PARM,NOSOURCE';
      %SOURCE = '';
      %S = '';
   END;
   IF %S ¬= '' THEN %SOURCE = 'S';
   IF %SOURCE ¬= '' THEN %PARM = '%PARM,SOURCE';
   IF %SOURCE = '' & %S = '' & %NS = '' & %NOSOURCE = '' THEN
      %PARM = '%PARM,SOURCE';
   IF %NSP ¬= '' THEN %NOSPACE = 'NSP';
   IF %NOSPACE ¬= '' THEN DO;
      %PARM = '%PARM,NOSPACE';
      %SP = '';
      %SPACE = '';
   END;
   IF %SP ¬= '' THEN %SPACE = 'SP';
   IF %SPACE ¬= '' THEN %PARM = '%PARM,SPACE';
   IF %NOSTMT ¬= '' THEN DO;
      %PARM = '%PARM,NOSTMT';
      %STMT = '';
   END;
   IF %STMT ¬= '' THEN %PARM = '%PARM,STMT';
   IF %NSTG ¬= '' THEN %NSTORAGE = 'NS';
   IF %NSTORAGE ¬= '' THEN DO;
      %PARM = '%PARM,NOSTORAGE';
      %STORAGE = ''
      %STG = '';
   END;
   IF %STG ¬= '' THEN %STORAGE = 'STG';
   IF %STORAGE ¬= '' THEN %PARM = '%PARM,STORAGE';
   IF %NOSYNTAX ¬= '' THEN DO;
      %PARM = '%PARM,NOSYNTAX(%NOSYNTAX)';
      %SYNTAX = '';
   END;
   IF %SYNTAX ¬= '' THEN %PARM = '%PARM,SYNTAX(%SYNTAX)';
   IF %NOTERM  ¬= '' THEN DO;
      %PARM = '%PARM,NOTERM';
      %TERM = '';
   END;
   IF %TERM    ¬= '' THEN %PARM = '%PARM,TERM';
   IF %NOTEST  ¬= '' THEN DO;
      %PARM = '%PARM,NOTEST';
      %TEST = '';
   END;
   IF %TEST    ¬= '' THEN %PARM = '%PARM,TEST';
   IF %XREF    ¬= '' THEN %PARM = '%PARM,XREF(%XREF)';
   IF %XREF  = '' THEN %PARM = '%PARM,XREF(SHORT)';
   IF %LINK ¬= '' THEN %LINK = 'Y';

DCL %LNKLINE INIT '';
IF %NOLINKQ = 'NOLINKQ' THEN DO ;  /* HAS THIS MACRO BEEN CALLED BY */
   %LNKLINE = '//'; %LINK = 'N' ;  /* THE COMPILE AND LINK MACRO    */
END;
ELSE DO;                        /* IF NOT CALLED BY COMPILE AND LINK */
    %LNKLINE =                  /* THEN LEAVE IT AS IT WAS.  PJC...  */
  '(''        LINK ***** Y/N ****'',LINK,1,''%LINK'')   //';
END;
   DCL %OUTDISP  INIT 'WRITES';
   /* NOW FIX UP PARMS SUCH AS PRINT, SYSOUT, TEST ETC  */
   IF %PRINT¬='' & %SYSOUT¬='' THEN STOP 'PRINT AND SYSOUT CODED';
   IF %PRINT¬='' THEN DO;
      %PFILE = '%PRINT';
   END;
   IF %SYSOUT¬='' THEN
      %PFILE = 'SYSOUT %SYSOUT';
   IF %NOPRINT¬='' THEN %PFILE = 'NO PRINT REQUIRED';
   IF %SYSOUT='' & %PRINT=''   /* DEFAULT TO SYSOUT A */
   THEN  %PFILE = 'SYSOUT A';
   DCL %SYMLINE INIT '';
   IF %TEST¬='' THEN DO;
      %TEST = 'SYSUT5  UPDATES TEST';
      %SYMLINE = '(''YOUR SYM FILE WILL BE =======>'',SYMFILE,44,
      ''%SYMFILE'')';
   END;
IF %LIST(1) ¬= '' THEN %DSIN = '%LIST(1)';
DCL %###X INIT '';
DCL %###L INIT '';
DCL %MEM INIT '';
%###X = INDEX(DSIN,'(');
IF %###X ¬= 0 THEN DO;
   %MEM = SUBSTR(DSIN,%###X);
   %MEM = SUBSTR(MEM,2);
   %###L = LENGTH(MEM);
   %###L = %###L - 1;
   %MEM = SUBSTR(MEM,1,%###L);
   %###X = %###X - 1;
   %DSIN = SUBSTR(DSIN,1,%###X);
   %###X = '';
END;
IF %NOPANEL = '' THEN
PANEL ('                  JOL ***** PLI COMMAND PANEL *****')
      ('             ANY HIGHLIGHTED FIELD CAN BE CHANGED')
('THE COMPILER OPTIONS FIELD CAN BE CHANGED OR ADDED TO "," ARE REQD')
('          ALL DATA SET NAMES MUST BE FULLY QUALIFIED')
%LNKLINE
//('SOURCE DATA SET =============>',DSIN,44,'%DSIN')
('SOURCE DATA SET MEMBER ======>',MEM,44,'%MEM')
('OBJECT DATA SET =============>',OBJ,44,'%OBJ')
('COPY LIBRARY(S) =============>',LIB,80,'%LIB')
('PRINTER OPTION ==============>',PFILE,44,'%PFILE')
%SYMLINE
('COMPILER OPTIONS ============>',PARM,100,'%PARM')
('*************************************************************');
IF %MEM ¬= '' THEN DO;
   %DSIN = '%DSIN(%MEM)';
   %MEM = 'NAME %MEM';
END;
DCL %PTYPE,%ANS INIT '' ;
DCL %OBJCAT INIT 'DISPLAY ''                     ''';
DCL %PRTCAT INIT 'DISPLAY ''                      ''';
DCL %OBJFILE INIT 'OBJ';
DCL INP DS DSN %DSIN NODEF;
%PTYPE = INDEX(OBJ,'.');
IF %PTYPE ¬= 0 & %NOPANEL = '' THEN
PANEL ('                  JOL ***** PLI COMMAND PANEL *****')
///(' YOU HAVE SPECIFIED A DATA SET AS THE OBJECT FOR THIS COMPILE')
///('  IS THIS DATA SET CATALOGUED *** Y/N',ANS,1)
///('***********************************************************');
IF %OBJ ¬= '&&OBJ' & %NOPANEL = '' & %PTYPE > 1 THEN
   %OBJFILE = 'OBJ2';
IF %ANS = 'N' THEN
PANEL ('                  JOL ***** PLI COMMAND PANEL *****')
      ('             ANY HIGHLIGHTED FIELD CAN BE CHANGED')
///('YOUR OBJECT DATA SET DEFINITION IS AS FOLLOWS')
//('',DCLDEF,99,
            'DCL OBJ2 DS DSN %OBJ SYSDA 5,3,1 TRKS FB 80,6080 EXT')
///('***********************************************************');
ELSE DCL OBJ2 DS DSN %OBJ NODEF;
IF %ANS = 'N' THEN DO; %SYSLIN = 'WRITES';
     %DCLDEF;
     %OBJCAT = ' CATALOGUE OBJ2';
END;
ELSE %SYSLIN = 'UPDATES';
IF %OBJ = '&&OBJ' THEN
   %OBJ = 'OBJ';
     DCL OBJ DS DSN &&OBJ BLKSIZE 800 5 CYLS NORLSE SYSDA EXT;
%ANS = '';
IF %OBJ = 'OBJ' THEN %SYSLIN = 'MODS';
%PTYPE = SUBSTR(PFILE,1,6);
IF %PTYPE = 'SYSOUT' THEN DO;
   DCL PRT %PFILE;
   %SYSOUT = '%PFILE';
   %PTYPE = 1;
   %OUTDISP = 'WRITES';
END;
%PTYPE = SUBSTR(PFILE,1,3);
IF %PTYPE ¬= 1 THEN
IF %PTYPE = 'NO ' THEN DO;
   DCL PRT DS DUMMY NODEF;
   %PTYPE = 1;
   %OUTDISP = 'WRITES';
END;
IF %PTYPE ¬= 1 THEN DO;
%PTYPE = INDEX(PFILE,'.');
IF %PTYPE > 1 & %NOPANEL = ''  THEN
PANEL ('                  JOL ***** PLI COMMAND PANEL *****')
///(' YOU HAVE SPECIFIED A DATA SET FOR THE PRINTOUT OF THIS COMPILE')
///('  IS THIS DATA SET CATALOGUED *** Y/N',ANS,1)
///('***********************************************************');
IF %ANS = 'N' THEN
PANEL ('                  JOL ***** PLI COMMAND PANEL *****')
      ('             ANY HIGHLIGHTED FIELD CAN BE CHANGED')
///('YOUR OUTLIST DATA SET DEFINITION IS AS FOLLOWS')
('',DCLDEF,80,
    'DCL PRT DS DSN %PFILE SYSDA 5,3,1 TRKS VBA 138,3990 EXT')
///('***********************************************************');
IF %ANS = 'Y' THEN DCL PRT DS DSN %PFILE NODEF;
IF %ANS = 'N' THEN DO; %OUTDISP = 'WRITES';
     %DCLDEF;
     %PRTCAT = 'CATALOGUE PRT';
END;
IF %ANS = 'Y' THEN %OUTDISP = 'UPDATES';
END;
%ANS = '';
IF %LIB ¬= 'NOT REQUIRED' THEN DO;
  DCL LIB DS %LIB  NODEF;
  %LIB = 'SYSLIB READS LIB';
END;
ELSE %LIB = '';
IF %SYMFILE ¬= '' THEN DO;
  DCL TEST DS %SYMFILE NODEF;
  %TEST = 'SYSUT5 UPDATES TEST';
END;
IF %SYMFILE ¬= '' & %NOPANEL = ''THEN
PANEL ('                  JOL ***** PLI COMMAND PANEL *****')
///(' YOU HAVE SPECIFIED A SYM FILE FOR THIS COMPILE')
('  THIS DATA SET MUST EITHER BE PREVIOUSLY CATALOGUED ')
(' OR IT MUST HAVE BEEN PREVIOUSLY DEFINED IN THIS JOL PROGRAM')
(' THE RECORD/BLOCK SIZE OF A SYM DATA SET IS F 512,512')
(' THIS SHOULD BE A PARTITIONED DATA SET. IF THE DATA SET EXISTS')
('JOL WILL CREATE A NEW MEMBER. OTHERWISE SPACE SHOULD BE SPECIFIED')
(' SPACE = 3,3,1 TRKS IS USUALLY ENOUGH')
///('***********************************************************');
     DCL DS002  DS  5 CYLS  SYSDA NORLSE NODCB;
 IF %STEPLIB ¬= '' THEN %STEPLIB = 'STEPLIB READS %STEPLIB';
     PLIPROG: DCL JMG000 PROG  512 K
         SYSPRINT %OUTDISP PRT
         %LIB   %TEST %STEPLIB
         SYSUT1   WRITES   DS002
         SYSIN    READS    INP
         SYSLIN   %SYSLIN  %OBJFILE;
   PLISTEP: RUN PLIPROG '%PARM';
    IF PLISTEP < 8 THEN DO;
    %PRTCAT  ;
    %OBJCAT  ;
    DISPLAY 'PLI RETURNED LESS THAN 8';
     END;
IF %LINK = 'Y' THEN
IF PLISTEP < 12 THEN
   LINK %NOPANEL '%OBJ' %MEM PLIBASE %SYSOUT COMP;
 END;
