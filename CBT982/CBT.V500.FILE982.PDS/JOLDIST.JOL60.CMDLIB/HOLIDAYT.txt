 helpdcl3 : macro;
 %x = '';
 end;
 if %syspfk = 5 then %dcl3 = 5;
 label dcl3sc1;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
          /(ctr 'Program Declaration Screen Number 1')
 lm 8
   /('When we declare a program, we are telling the system that')
    ('a program exists on a particular load library, and we also')
    ('need to tel the system which files the particular program')
    ('will require. Programs refer to their files by dd names,')
    ('so we will have to tie the dd name to a catalog name, or')
    ('to a DSID.')
   /('The format of a program declaration is :-')
 (hi '      DCL program-name PROG options;')
   /('where PROG is the key word to tell Jol that this is a')
    ('program declaration.')
 helpline ('Press PF3 to Exit from Help or Enter to display');
 if %syspfk ¬= 3 then do;
 label dcl3sc2;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
           /ctr ('Program Declaration Screen Number 2')
 lm 8
 /(hi'NOTE: Wherever DCL is used DECLARE or DEFINE can be used.')
   /('Options.')
   /('LIB:    Programs are held on load libraries; these can be')
    ('        system libraries like SYS1.LINKLIB, or private')
    ('        libraries that we create. If a program is not in')
    ('        SYS1.LINKLIB, then we must tell Jol where to find it.')
    ('        We do this with a LIB statement. Let us say we have')
    ('        a program called PAY1 and it is on a library called')
    ('        PAYROLL.LIB, we would code it like this :-')
/(hi '             DCL PAY1 PROG LIB = PAYROLL.LIB OPTIONS;')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
 if %syspfk ¬= 3 then do;
    if %syspfk = 7 then do;
    %syspfk = 0;
 redo dcl3sc1;
    end;
 label dcl3sc3;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
 /ctr ('Program Declaration Screen Number 3')
 lm 8
   /('Options (continued)')
   /('DD Definitions : in Jol we tell the system what each')
    ('     ddname coded in the users program does, and to which file.')
    ('     Let us look at an example of this. In our program (PAY1)')
    ('     we have assigned 3 files. The dd names of these files are')
    ('     hard coded into the program as MASTDD, for the master input')
    ('     file, PRINTDD for our report file, and OUTDD for our output')
    ('     disk file which will be a new file.')
   /('     Each of these will use a system file')
   /('     MASTDD will read the file ''PAROLL.MASTER''')
    ('     PRINTDD will write a sysout file')
    ('and')
    ('     OUTDD will write a new file called PAYROLL.MASTER.NEW.')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
 if %syspfk ¬= 3 then do;
    if %syspfk = 7 then do;
    %syspfk = 0;
 redo dcl3sc2;
    end;
 label dcl3sc4;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
           /(ctr 'Program Declaration Screen Number 4')
   /('Because PRINTDD and OUTDD write new files, they would have')
    ('been previously defined in the Jol program like this:-')
/(hi '         dcl prt sysout; /* this is for printdd a sysout file */')
 (hi '         dcl output ds payroll.master.new sysda 3,2 cyl')
 (hi '                 fb 80,6080; /*this is for outdd */')
  / ('As we have seen previously our program is held on a library')
    ('called payroll.lib. our program declare will now look like')
    ('this:-')
/(hi '         dcl pay1 prog lib = payroll.lib')
 (hi '             mastdd  reads  payroll.master')
 (hi '             printdd writes prt')
 (hi '             outdd   writes output;')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
 if %syspfk ¬= 3 then do;
    if %syspfk = 7 then do;
    %syspfk = 0;
 redo dcl3sc3;
    end;
 label dcl3sc5;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
          /(ctr 'Program Declaration Screen Number 5')
/(hi '         dcl prt sysout; /* this is for printdd a sysout file */')
 (hi '         dcl output ds payroll.master.new sysda 3,2 cyl')
 (hi '                 fb 80,6080;/*this is for outdd */')
 (hi '         dcl pay1 prog lib = payroll.lib')
 (hi '             mastdd  reads  payroll.master')
 (hi '             printdd writes prt')
 (hi '             outdd   writes output;')
lm 8
  / ('As you can see payroll.master needs no declaration we simply')
    ('tie it to the dd name it was given in the program (pay1), by')
    ('saying mastdd reads payroll.master. printdd and outdd however')
    ('are new files, so we declare them then tie the dd names')
    ('to the dsids we have assigned in our declaration.')
    ('printdd writes prt and outdd writes output,')
    ('where prt and output are the dsids we have assigned.')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
 if %syspfk ¬= 3 then do;
    if %syspfk = 7 then do;
    %syspfk = 0;
 redo dcl3sc4;
    end;
 label dcl3sc6;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
          /(ctr 'Program Declaration Screen Number 6')
   /('  All we have to do now in order to run pay1 is to say just that')
    ('  in our Jol program :-')
/(hi '         RUN PAY1;')
/   ('  If we wish to run the same program several times in the one Jol'
    ('  program we can assign a label to the declaration and then')
    ('  we say RUN LABEL. This stops Jol from not knowing which ')
    ('  particular run we want. For example :-')
/(hi '         run1 : dcl pay1 prog lib = payroll.lib')
 (hi '                    mastdd  reads  payroll.master')
 (hi '                    printdd writes prt')
 (hi '                    outdd   writes output;')
/(hi '         run run1;')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
 if %syspfk ¬= 3 then do;
    if %syspfk = 7 then do;
    %syspfk = 0;
 redo dcl3sc5;
    end;
 label dcl3sc7;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
          /(ctr 'Program Declaration Screen Number 7')
 lm 8
   /('As well as reading or writing a file we may also wish to')
    ('update which is already on the catalog.')
   /('To do this we simply say:')
 /(hi'    ddname updates file name')
 /(hi'         run2 : dcl pay1 prog lib = payroll.lib')
  (hi'                mastdd  reads  payroll.master')
  (hi'                printdd writes prt')
  (hi'                outdd   updates payroll.master.new;')
  (hi'         run run2;')
   /('The ddname outdd could then be open for i/o in our program.')
    ('likewise we can add data on to the end of a file by saying')
    ('ddname mods file name.')
   /('Now lets look at some of the other options.')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
 if %syspfk ¬= 3 then do;
    if %syspfk = 7 then do;
    %syspfk = 0;
 redo dcl3sc6;
    end;
 label dcl3sc8;
 panel box (ctr 'J O L    H E L P    F A C I L I T Y')
          /(ctr 'Program Declaration Screen Number 8')
 lm 8
   /('When we are testing a program we may not wish to use an')
    ('output file as we only wish to test the logic of the program')
    ('or maybe we just wish to regenerate a report without creating')
    ('an output file. to do this we code the file as nullfile :-')
 /(hi'         run3 : dcl pay1 prog lib = payroll.lib')
  (hi'                mastdd   reads  payroll.master')
  (hi'                printdd  writes prt')
  (hi'                outdd    updates ''nullfile'';')
 /(hi'         run run3;')
 /  ('The ddname outdd could then be opened in our program.')
    ('but no data would be held. Likewise we can use nullfile')
    ('for input in which case an end of file condition is reached')
    ('with the first read.')
 helpline ('F3 Exits, F7 to repeat previous screen, Enter for Next');
 end;
    if %syspfk = 7 then do;
       %syspfk = 0;
       redo dcl3sc6;
    end;
    if %dcl3 = 5 then do;
       %syspfk = 0;
       help1;
    end;
