 CAIRUN : MACRO;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN005;
PANEL blue box/
  //////// (ctr 'Would you like to take a revision test')
     (ctr 'of this chapter ? yes/no ',#1,3,'NO');
    IF %#1 = 'YES' | %#1 = 'Y'
    |  %#1 = 'yes' | %#1 = 'y'
    THEN DO;
        CAARUN;
        %SYSPFK = 0;
     END;
PANEL blue box/
  (ctr hi 'Compiling, Linking and Running Your Programs')
  lm 10
 /(' NOTE: at this stage it may be advisable to review the')
 /('      'hi' DECLARE PROG Instruction.')
 /(' With JOL there are at least two (2) ways the')
  (' programs may be compiled, linked and run. Other methods')
  (' MAY be implemented by your installation. In this chapter we')
  (' will concentrate on one of these methods.')
 /(' N.B. Either method will achieve the correct result.')
 /(' Our method will involve the use of ASM(ASSEMBLER),')
  (' COBOL, FORT(FORTRAN), PLI, LINK, RUN and LOADGO commands.')
  (' The compilers and linkage editors are invoked by using')
  (' ASM, COBOL, PLI or FORT commands to COMPILE a data set.')
  (' Then, the LINK command may be used to link edit the program')
  (' into a LOAD MODULE LIBRARY, and the RUN instruction may be')
  (' used to execute the LINKed program (or load module).')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan005;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN010;
PANEL blue box/
  (ctr hi 'Compiling, Linking and Running Your Programs (continued)')
  lm 10
//('Instead of LINKing the program (thereby SAVING executable')
  ('copy of this program) and then RUNning it, the LOADGO')
  ('command may be used to execute the program WITHOUT saving')
  ('a copy of executable code - that is a program can be')
  ('executed from OBJECT FILE ONLY. That object file is LOST')
  ('after the program has finished executing.')
  ('Let us look at the DIAGRAM of the above described process:')
//('NEXT SCREEN PLEASE ... ')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan005;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN015;
PANEL blue box/
  (ctr hi 'Compiling, Linking and Running Your Programs (continued)')
  lm 8
   /('    - SOURCE CODE  -     -                   - ')
    ('    - e.g. COBOL   -     - COBOL COMPILER    - ')
    ('    - program as   -  => -                   - => OBJECT CODE')
    ('    - written by a -     - use COBOL COMMAND -         -')
    ('    - COBOL progr. -     -                   -         -')
    ('                                                       -')
    ('       -------------------------<-----------------------')
    ('       -')
    ('       -')
    ('  - LINKed into a load module -     - RUN this program, use  -')
    ('  - library from which it can -  => - RUN instruction. DO NOT- ')
    ('  - be executed time and time -     - forget to DECLARE that - ')
    ('  - again. Use LINK COMMAND.  -     - program !              -')
   /(' Let us now examine these commands in more detail.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan010;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN020;
PANEL blue box/
  (ctr hi 'The COBOL Command')
  lm 8
   /('NOTE: ASM, FORT, PLI commands are very similar.')
  //('Format:')
   /(hi'          COBOL  { dsid | data set name }  options;')
   /('Function: The COBOL command is used to invoke the COBOL compiler'
    ('          to convert the COBOL source code to object code ')
    ('          (executable code). The object code may be input to the'
    ('          LINK and LOADGO commands and then executed.')
   /('Example of the COBOL Command')
   /(hi'          COBOL SOURCE.FILE(UPDATE); ')
   /('This will compile the member UPDATE of data set SOURCE.FILE.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan015;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN025;
PANEL blue box/
  (ctr hi 'The LINK Command')
  lm 8
 /('LINK invokes the system Linkage Editor to convert the object')
  ('code (object text) from COBOL, FORT, PLI or ASM commands to')
  ('LOAD MODULE FORMAT. The load module can then be executed with')
  ('the RUN INSTRUCTION. ')
 /('Format:')
 /(hi'          LINK  { dsid-list | data-set-name-list}  options;')
 /('where options are :  ')
 /(hi'          LOAD  { dsid | dsname }')
 /(hi'          LIB   { dsid | dsname }')
 /(hi'          PLILIB or COBLIB or FORLIB')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan020;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN030;
PANEL blue box/
  (ctr hi 'The LINK Command (continued)')
  lm 8
 /('Example of the LINK Command')
 /(hi'        COBOL SOURCE.FILE(UPDATE);')
  (hi'        LINK OBJ LOAD TEST.LOAD(UPDATE) COBLIB;')
 /('The COBOL Command compiles member UPDATE of SOURCE.FILE')
  ('and stores object text on a DEFAULT temporary dsid caaled OBJ.')
  ('Then the LINK command converts the object code into Load Module')
  ('format, and places the converted Load Module into the TEST.LOAD'
  ('data set (Load Module Library), replacing any old version of')
  ('the UPDATE program. It can now be RUN, if we wish, using the')
  ('following code sequence:')
 /(hi'        DECLARE UPDATE PROG')
  (hi'                INPUT READS INFILE /* FOR EXAMPLE */')
  (hi'                OUTPUT WRITES OUTFILE;')
 /(hi'        RUN UPDATE; /* DO NOT FORGET TO DECLARE INFILE ')
  (hi'                       AND OUTFILE  */')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan025;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN035;
PANEL blue box/
  (ctr hi 'The LOADGO Command')
  lm 8
 /('LOADGO is used if we DO NOT wish to have a PERMANENT COPY of')
  ('executable code. The LOADGO command also RUNS the program.')
 /('Format:')
 /(hi'      LOADGO  { dsid-list | data-set-name-list}  options;')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan030;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
LABEL PAN040;
PANEL blue box/
  (ctr hi 'The LOADGO Command (continued)')
  lm 8
 /('Example:')
 /(hi'      PLI SOURCE.FILE(TEST) OBJ PLI.OBJ1;')
  (hi'      DECLARE TEST PROG')
  (hi'              IN  READS INFIL')
  (hi'              OUT WRITES OUTFIL;')
  (hi'      LOADGO PLI.OBJ1 NAME (TEST) PLILIB;')
 /('The object data set PLI.OBJ1 is read by the')
  ('Loader and any External References are satisfied by the')
  ('PLILIB automatic call library. Program TEST is then executed')
  ('(NOTE: DECLARE the program BEFORE issuing LOADGO command).')
 /('N.B. The way that the PLI command above is coded, it writes')
  ('     object text onto PLI.OBJ1 data set rather than onto')
  ('     the default OBJ DSID - this is another way of')
  ('     performing the same task.')
        %helpline;
IF %SYSPFK=7 | %SYSPFK=19 then redo pan030;
IF %SYSPFK=3 | %SYSPFK=15 THEN exit;
PANEL  blue box
  //////// (ctr 'Would you like to take a revision test')
     (ctr 'of this chapter ? yes/no ',#1,3,'YES');
IF %#1 = 'YES' | %#1 = 'Y'
|  %#1 = 'yes' | %#1 = 'y'
THEN DO;
   CAARUN;
   %SYSPFK = 0;
END;
         %CHNUM = %CHNUM + 1;
         IF %CHNUM > %MAXCHAP THEN DO;
PANEL blue box ///////(ctr ' This is the end of this section.')
         /(ctr 'Press ENTER to get back to main index/menu.',X,1);
            %CHNUM = 1;
            %SYSPFK = 3;
         END;
 END; /* OF MACRO CAIRUN */
