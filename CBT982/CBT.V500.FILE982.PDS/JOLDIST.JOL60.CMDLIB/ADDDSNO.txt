  ADDDSN:MACRO; /* ADD DATA SET NAME TO DATA SET DATA BASE */

/**********************************************************************

       JOL Universal Command Language.

       COPYRIGHT 1969-1989 CCS-JOL PTY. LTD.,
                 2/31 QUEEN ST, MELBOURNE, AUSTRALIA, 3000.


       A D D S N        C O M M A N D

       This macro adds a data set to the Jol Data Set Data Base.

       It:
          1. Gets details for the data set.
             These details are built using the Jol ADDDSN2
             command.

          2. Sets up a declare statement that is passed through
             to the compiler, followed by a ZADDSN command.

             The compiler module adds the data set to the
             data base in Jol internal Format to gain
             extra speed because the DSID's do not have to
             be retranslated each time they are used.

HISTORY:

       Written C. CLARKE 26/8/89:  ADD DATA SET DATA BASE.

**********************************************************************/


    Dcl %ISVSAM,%VSCLUST,%VSINDEX,%VSDATA           INIT '';
    Dcl %volref                                     INIT '';
    Dcl %work                                       INIT '';
    Dcl %ADDDSOPN INIT('0') EXT;
    dcl %update   init(0);
    dcl %title    init('Add Data Set to Data Set Data Base - V 0.0');
    dcl %boxcolor,%hedcolor init '';
    dcl %txtcolor           init '';

        If %LIST(1)¬='' Then %DSNAME='%LIST(1)';
        If %DSNAME=''
        Then do;
label GETDS1:
  PANEL %BOXCOLOR BOX (CTR %HEDCOLOR '%TITLE')
   //
     (CTR 'You MUST specify the Data Set Name to add to the Data Base.')
     ///////
      ('  Enter Data Set Name  ====>',DSNAME,44,' ')
   ;
            If %SysPfk = 3 | %SysPfk=15 Then EXIT;
            If %DSNAME='' Then do;
              redo getds1;
              PANEL REREAD FROM DSNAME
                    'YOU MUST ENTER A DSNAME';
                    REDO GETDS1;
            END;

        END;

/* SEE If WE CAN READ THE PREVIOUS DATA SET BY THIS NAME.

   CALLING THE NEXT MACRO ALSO SETS UP THE SYMBOLIC VARIABLES
   AS EXTERNAL.

*/
        %SAVEDSN='%DSNAME';           /* SAVE THE NAME */

        dbffind ds '%DSNAME';
        if %lastcc =0 then %update=1; /* Set update flag  */
        if %lastcc¬=0                 /* File not found ? */
        then
        dbffinf ds 'MODEL=DEFAULT';   /* Get a default model then .. */

        PRINTSYM;

        if %zlrecl=0 then %zlrecl='';
        if %zblksize=0 then %zblksize='';
        if %zfileno=0 then %zfileno='';
        if %zprim =0 then %zprim ='';
        if %zsec  =0 then %zsec  ='';
        if %zdir  =0 then %zdir  ='';
        %volref=substr(zvolumes,1,1);
        if %volref¬='*' then %volref='';
        else do;
             %volref=substr(zvolumes,2);
             %zvolumes='';
        end;

        ADDDSN2;    /* GET DETAILS FROM PANELS */
/* exit;  /********************************/
 /*     If %ISVSAM¬=''
        Then %WORK='DclVSAM %DSID DS %DSNAME '; */

        %WORK='Dcl     DSDB  Ds %DSNAME ';

            If %zrecfm='' & (%zlrecl¬='' | %zblksize¬='')
            Then do;
                If %zlrecl ¬='' Then %WORK=%WORK||' LRECL %zlrecl';
                If %zblksize¬='' Then %WORK=%WORK||' BLOCK %zblksize';
            END;
            ELSE If %zrecfm¬=''
            Then %WORK='%WORK %zrecfm %zlrecl,%zblksize';
            If %zvolumes ¬='' Then WORK='%WORK VOL=%zvolumes %UNIT';
            If %zfileno¬='' Then WORK='%WORK FILENO %zfileno';
            If %zprim¬='' | %zsec¬='' | %zdir¬=''
            Then do;
                %WORK='%WORK SPACE %zprim,%zsec';
                If %zdir¬='' Then %WORK='%WORK,%zdir';
                If %zspacetp='B' Then %WORK='%WORK BLKS ';
                If %zspacetp='C' Then %WORK='%WORK CYLS ';
                If %zspacetp='T' Then %WORK='%WORK TRKS ';
                If %zspacetp=' ' Then %WORK='%WORK TRKS ';
            END;
            If %PROTECT¬='' Then WORK='%WORK PROTECT';
 listsyms;
            If %zdsorg ¬='' Then WORK='%WORK DSORG %zdsorg';
            If %zretpd¬='' Then
            %WORK='%WORK RETAIN FOR %zretpd';
            %work;                         /* Do the declare */
            If %ISVSAM¬=''
            Then do;
 /*             WRITE F($DS) FROM('%VSCLUST');
                If %VSDATA¬='' Then
                WRITE F($DS) FROM('DATA ''%VSDATA''');
                If %VSINDEX¬='' Then
                WRITE F($DS) FROM('DATA ''%VSINDEX'''); */
                %isvsam=' VSAMTXT '' %vsamdef ''';
            END;
            If %zmodel¬=''
            Then do;
                %isvsam=' %isvsam USES %zmodel ';
            END;
            if %update¬=0 then dbfdel  dsdb ; /* Delete now */
            dbfadd  dsdb %isvsam;
          END;
END;
