{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013652000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 31509296, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE982.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 31509296, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 31509296, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE982.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x01\\xde\\t'", "DS1TRBAL": "b'L\\xe6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\nL\\x00\\x0c\\nl\\x00\\n\\x01\\xdf'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04a\\x00\\x14\\x01\\x182_\\x01\\x182_!\"\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf7@@@'", "ispf": {"version": "04.97", "flags": 0, "createdate": "2018-11-21T00:00:00", "modifydate": "2018-11-21T21:22:14", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-497"}, "text": "REGULAR CBT TAPE - VERSION 497    FILE:  982\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT497.FILE982\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    12000   PO\n\n   PDS117I 21 MEMBERS COUNTED; CUMULATIVE SIZE IS 299,709 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/21/18    21:22:14    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$CPYRGT": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x182/\\x01\\x182/\\x15X\\x00\\n\\x00\\n\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T15:58:41", "lines": 10, "newlines": 10, "modlines": 0, "user": "SBGOLOB"}, "text": "This software ic copyright Clement Victor Clarke,\nclementclarke@ozemail.com.au, or clemclarke@gmail.com.\n\nIt may NOT be used for Commerical Purposes without\ncontacting me, or my legal heirs.\n\nThis is the Jol Source Code - IBM370 Mainframe Assembler\nversion.\n\nClem Clarke, Feb, 2011\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CONDITS": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00C\\x01\\x182?\\x01\\x182?\\x13\\x16\\x00\\x12\\x00\\x12\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-19T00:00:00", "modifydate": "2018-11-19T13:16:43", "lines": 18, "newlines": 18, "modlines": 0, "user": "SBGOLOB"}, "text": "\n Costs and Contract\n\nMainframe Users:\n\nFor Hercules Users and those assisting making Z/OS easier to use,\nor some way spreading knowledge of the platform, Jol is free.\n\nFor normal Commercial Use, the cost varies from $1.00 per user\nfor non-profits to $5.00 a day per user for normal commercial\nenterprises.\n\nCommercial Unlimited Site Licences start at $99,000.\n\nSource Code is available for security and enhancements. It is\navailable on the clear understanding that it may not be used to\ndevelop competing products.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$RECEIVE": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x1b\\x00X\\x01\\x026_\\x01\\x182?\\x13\\x08\\x00'\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.27", "flags": 0, "createdate": "2002-12-31T00:00:00", "modifydate": "2018-11-19T13:08:58", "lines": 39, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//yourhlqL JOB (ACCT#),RECEIVE,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* --------------------------------------------------- *//\n//*      RECEIVE JOB TO CREATE INSTALL LIBRARIES        *//\n//* --------------------------------------------------- *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(CMDLIB)')\n   DSN ('yourhlq.JOLCBT.CMDLIB') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(INCLUDE)')\n   DSN ('yourhlq.JOLCBT.INCLUDE') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(INSTALL)')\n   DSN ('yourhlq.JOLCBT.INSTALL') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(LOAD)')\n   DSN ('yourhlq.JOLCBT.LOAD') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(MACLIB)')\n   DSN ('yourhlq.JOLCBT.MACLIB') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(PTFS)')\n   DSN ('yourhlq.JOLCBT.PTFS') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(SCHEDULE)')\n   DSN ('yourhlq.JOLCBT.SCHEDULE') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(SOURCE)')\n   DSN ('yourhlq.JOLCBT.SOURCE') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(USERCMDL)')\n   DSN ('yourhlq.JOLCBT.USER.CMDLIB') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(ASM)')\n   DSN ('yourhlq.JOLCBT.ASM') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(CNTL)')\n   DSN ('yourhlq.JOLCBT.CNTL') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(CVCLKED)')\n   DSN ('yourhlq.JOLCBT.CVCLKED') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(OBJ)')\n   DSN ('yourhlq.JOLCBT.OBJ') VOL(WORKE4)\n   RECEIVE INDS('CBT.CBT497.FILE982.PDS(LINKLIST)')\n   DSN ('yourhlq.JOLCBT.LINKLIST') VOL(WORKE4)\n/*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE982": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04a\\x00\\x07\\x01\\x182_\\x01\\x182_!\"\\x00_\\x00_\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf7@@@'", "ispf": {"version": "04.97", "flags": 0, "createdate": "2018-11-21T00:00:00", "modifydate": "2018-11-21T21:22:07", "lines": 95, "newlines": 95, "modlines": 0, "user": "CBT-497"}, "text": "//***FILE 982 is from Clem Clarke and is the JOL package, which     *   FILE 982\n//*           allows for submission of jobs without using JCL.      *   FILE 982\n//*           JOL is also a command language.  The following is     *   FILE 982\n//*           an introduction to JOL, taken from the Preface of     *   FILE 982\n//*           its Concepts and Facilities manual.                   *   FILE 982\n//*                                                                 *   FILE 982\n//*      Jol effectively replaces the JCL interpreter and quite     *   FILE 982\n//*      a lot of the initiator when using Dynamic Allocation       *   FILE 982\n//*      instead of JCL.  It is part compiler with PL/I style       *   FILE 982\n//*      syntax, and ASM macro capabilities, and part run time      *   FILE 982\n//*      monitor.                                                   *   FILE 982\n//*                                                                 *   FILE 982\n//*         Nothing I say here, does justice to the enormity        *   FILE 982\n//*         of this great work.  Please see Clem's web site         *   FILE 982\n//*         for much more detail.  But I think I've captured        *   FILE 982\n//*         the guts, here, in the contents of this file pds.       *   FILE 982\n//*                                                                 *   FILE 982\n//*         I hope I have done some justice to this enormous        *   FILE 982\n//*         and extremely significant software package by           *   FILE 982\n//*         putting it on the CBT Tape.  Thank you Clem, for        *   FILE 982\n//*         letting us post it.                                     *   FILE 982\n//*                                                                 *   FILE 982\n//*           web site:  www.oscar-jol.com                          *   FILE 982\n//*                                                                 *   FILE 982\n//*           email   :  clementclarke@OZEMAIL.COM.AU               *   FILE 982\n//*                                                                 *   FILE 982\n//*                         Introduction                            *   FILE 982\n//*                                                                 *   FILE 982\n//*      Jol is a high-level, English-like and Universal COMMAND    *   FILE 982\n//*      LANGUAGE. A Command Language is the highest level of       *   FILE 982\n//*      communication between the User and the computer. Command   *   FILE 982\n//*      languages tell the computer what to do, when to do it,     *   FILE 982\n//*      and what to do with the result. Programming Languages,     *   FILE 982\n//*      such as PL/I and COBOL, give the computer detailed         *   FILE 982\n//*      instructions on how to do it.  Use of Command Languages    *   FILE 982\n//*      spreads across all areas of Data Processing.  Without      *   FILE 982\n//*      them, we have no means of communicating with the           *   FILE 982\n//*      Operating System.  Inefficient use of a Command Language   *   FILE 982\n//*      can have disastrous effects on corporations' computing     *   FILE 982\n//*      resources.                                                 *   FILE 982\n//*                                                                 *   FILE 982\n//*      Today, not all computer Users are Computer Technicians.    *   FILE 982\n//*      Therefore, it is extremely important that the Command      *   FILE 982\n//*      Language used is simple and easy to use.  Additionally,    *   FILE 982\n//*      with the increasing expansion of computer resources and    *   FILE 982\n//*      the growing number of software packages being acquired     *   FILE 982\n//*      by each installation, the Computer Users are               *   FILE 982\n//*      increasingly needing more power and flexibility in their   *   FILE 982\n//*      Command languages. Jol is unique in meeting these new      *   FILE 982\n//*      standards for Command Languages.                           *   FILE 982\n//*                                                                 *   FILE 982\n//*      Jol uses a simple, flexible, concise and English-like      *   FILE 982\n//*      command structure to communicate with your operating       *   FILE 982\n//*      system and to effectively control data, programs, and      *   FILE 982\n//*      events. It is easy to learn, easy to use, and easy to      *   FILE 982\n//*      change. With these features, Jol allows Users to better    *   FILE 982\n//*      utilize their skills, experience, and creative abilities   *   FILE 982\n//*      enabling them to be more proficient than was ever          *   FILE 982\n//*      previously possible.                                       *   FILE 982\n//*                                                                 *   FILE 982\n//*      Jol is written in a procedural format that is already      *   FILE 982\n//*      familiar to Programmers using programming languages such   *   FILE 982\n//*      as COBOL, PASCAL or PL/I. The procedural format provides   *   FILE 982\n//*      you with the flexibility to solve the most complex type    *   FILE 982\n//*      of requirements in a logical straightforward manner. By    *   FILE 982\n//*      combining the flexibilities of these modern procedural     *   FILE 982\n//*      languages with many new features, Jol provides a simple,   *   FILE 982\n//*      powerful, and flexible INTERFACE to the operating system.  *   FILE 982\n//*      In addition, Jol coexists with JCL, and interfaces with    *   FILE 982\n//*      contemporary development techniques, such as top down      *   FILE 982\n//*      design, step level refinement, structured coding, and      *   FILE 982\n//*      prototyping. Jol's many features focus on the End User,    *   FILE 982\n//*      programming maintenance and development, production        *   FILE 982\n//*      (e.g., operations and scheduling), management control,     *   FILE 982\n//*      machine utilization, job scheduling and job networking.    *   FILE 982\n//*                                                                 *   FILE 982\n//*      Jol has some 40 commands. These commands can be combined   *   FILE 982\n//*      with themselves and with any other program to form new     *   FILE 982\n//*      commands tailored specifically to your installation.  With *   FILE 982\n//*      Jol you can also execute commands from within commands,    *   FILE 982\n//*      adding greatly to the flexibility and simplicity of        *   FILE 982\n//*      procedures. This openendedness is one of the highlights of *   FILE 982\n//*      Jol.                                                       *   FILE 982\n//*                                                                 *   FILE 982\n//*      Jol has many other highlights. Management can use Jol to   *   FILE 982\n//*      monitor jobs and trap inefficiencies before jobs begin     *   FILE 982\n//*      to execute. Systems Programmers can alter the              *   FILE 982\n//*      inefficient code and make it more efficient through        *   FILE 982\n//*      Exits. Data set protection facilities are also offered.    *   FILE 982\n//*                                                                 *   FILE 982\n//*      The data set attribute data base allows the data manager   *   FILE 982\n//*      great flexibility - data set attributes can be changed     *   FILE 982\n//*      without altering any of the Jol command language           *   FILE 982\n//*      scripts.                                                   *   FILE 982\n//*                                                                 *   FILE 982\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASM": {"ttr": 527, "alias": false, "halfwords": 40, "notes": 0, "parms": "b'\\x01\\x00 V\\x01\\x182/\\x01\\x182/\\x16\\x16\\xff\\xff\\xff\\xff\\x00\\x00\\xd1\\xd6\\xd3\\xe2\\xd9\\xc3\\xc5@\\x00\\x02\\t\\xde\\x00\\x02\\t\\xde\\x00\\x00\\x00\\x00'", "ispf": {"version": "01.00", "flags": 32, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T16:16:56", "lines": 65535, "newlines": 65535, "modlines": 0, "user": "JOLSRCE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "CMDLIB": {"ttr": 54791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x11\\x81\\xbc\\x81\\xbc\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 33212, "newlines": 33212, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "CNTL": {"ttr": 68357, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x182/\\x01\\x182/\\x16\\x17:3:3\\x00\\x00\\xd1\\xd6\\xd3\\xe2\\xd9\\xc3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T16:17:03", "lines": 14899, "newlines": 14899, "modlines": 0, "user": "JOLSRCE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "CVCLKED": {"ttr": 74497, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x182/\\x01\\x182/\\x16\\x17\\x02r\\x02r\\x00\\x00\\xd1\\xd6\\xd3\\xe2\\xd9\\xc3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T16:17:13", "lines": 626, "newlines": 626, "modlines": 0, "user": "JOLSRCE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "INCLUDE": {"ttr": 74753, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x182/\\x01\\x182/\\x14Q\\x00\\xd8\\x00\\xd8\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T14:51:38", "lines": 216, "newlines": 216, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "INSTALL": {"ttr": 74758, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x11\\x04C\\x04C\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 1091, "newlines": 1091, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "JOLDOC": {"ttr": 75268, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x182/\\x01\\x182/\\x15\\x16\\x80\\xd1\\x80\\xd1\\x00\\x00\\xe9\\xc9\\xd7\\xc6\\xc9\\xd3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T15:16:38", "lines": 32977, "newlines": 32977, "modlines": 0, "user": "ZIPFILE"}, "mimetype": "application/zip", "datatype": "binary", "extension": ".zip"}, "LINKLIST": {"ttr": 88584, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x182/\\x01\\x182/\\x16\\x17\\x05\\xb3\\x05\\xb3\\x00\\x00\\xd1\\xd6\\xd3\\xe2\\xd9\\xc3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T16:17:23", "lines": 1459, "newlines": 1459, "modlines": 0, "user": "JOLSRCE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOAD": {"ttr": 89345, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x11o\\xeco\\xec\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 28652, "newlines": 28652, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "MACLIB": {"ttr": 100871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x11H\\xa2H\\xa2\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 18594, "newlines": 18594, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "OBJ": {"ttr": 108547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x182/\\x01\\x182/\\x16\\x17LKLK\\x00\\x00\\xd1\\xd6\\xd3\\xe2\\xd9\\xc3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T16:17:36", "lines": 19531, "newlines": 19531, "modlines": 0, "user": "JOLSRCE"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PTFS": {"ttr": 116484, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x11\\x06&\\x06&\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 1574, "newlines": 1574, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "QUIKHELP": {"ttr": 117001, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x182/\\x01\\x182/\\x163\\x00\\xfb\\x00\\xfb\\x00\\x00\\xc8\\xc5\\xd3\\xd7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T16:33:19", "lines": 251, "newlines": 251, "modlines": 0, "user": "HELP"}, "text": "Jol Quick Help:\n\n\nJol Internal Instructions are:\n    ********\n\n   ?          Display text on Screen\n   ALLOC$     Allocate a file for Reading or Writing\n   BLACK      Color (Text or Background)\n   BLUE       Color (Text or Background)\n   CALL       A Program (Execute Immediately)\n   CD$        Change Directory (Jol Internal)\n   CHDIR$     Change Directory (Jol Internal)\n   CLOSE      A File Opened for Input or Output\n   CLRSCR     Clear Screen\n   CLS        Clear Screen\n   CYAN       Color (Text or Background)\n   DO         Do a Group of Instructions (See IF)\n   END        End a Group of Instructions (See DO)\n   EOF        Signal End of File for Card Files\n   EXIT       A Jol Macro - Exit Quit Stops Jol\n   GETDIR     Get Current Directory - Result to %SYSDIR\n   GETFIRST   Get First DOS File Name\n   GETNEXT    Get Next DOS File Name\n   GETTIME    Sets %HOURS, %MINS, %SECS to Current Time\n   GOTO       Transfer Control to a Label\n   GREEN      Color (Text or Background)\n   IF         Test Conditions\n   INCLUDE    Include a Jol Script\n   JOLOPT     Set Jol Options\n   LABEL      Define Label Name\n   LISTSYMS   Lists Current Symbolic Variables and Values\n   MAGENTA    Color (Text or Background)\n   MD$        Make Directory (Jol Internal)\n   MKDIR$     Make Directory (Jol Internal)\n   OPEN       Open an ALLOCATED File for Input or Output\n   OPENFILE   Open an ALLOCATED File for Input or Output\n   PANEL      Set up Full Screen Data Entry Panel\n   POPUP      Popup Menu Selection\n   PRINTSYM   Lists Current Symbolic Variables and Values\n   PUTFILE    Write Variable to File\n   READ       Read Variable from File\n   READFILE   Read Variable from File\n   RED        Color (Text or Background)\n   RUN        Run a Program\n   SET        Set Symbolic Variables\n   SHOWDIR    Show Directory on Screen, Allow User Selection\n   SHOWDSN    Show Files on Screen, Allow User Selection\n   SIGNAL     Signal an Error Message\n   STOP       Signal Terminal Error with Message Text\n   SYSTEM     Calls the Operating SystemCommand Shell to Execute a Command or Fi\n   WHITE      Color (Text or Background)\n   WRITE      Variables/Literal to File\n   YELLOW     Color (Text or Background)\n\n\n\nJol Internal Functions are:\n    ********\n\n\n   CAPS       Convert Variable to CAPS\n   CARD       Get CARD(1) etc\n   CENTER     Centers Variables\n   CENTRE     Centres Variables\n   CHAR\n   CURSOR\n   DEF        Test if Variable Defined\n   DEFINED    Test if Variable Defined\n   DOSCD      Change Dos/Unix Directory\n   DOSCHDIR   Change Dos/Unix Directory\n   DOSDRIVE   Gets Current Drive\n   DOSENV     Gets Symbolic Variable\n   DOSVOLUME  Gets Volume Name\n   EOF        Test if File Opened for Input at End-Of-File\n   EXIST      Test if File Exists\n   GETENV     Gets Environment Variable\n   INDEX      Returns Position of Text within Variable\n   INKEY      Tests if Key Pressed, Returns Character\n   LEFT       Gets Left Characters from Variable\n   LENGTH     Returns Length of Variable\n   LIST       Returns Macro Parameter\n   LOWER      Converts Variable to LOWER\n   POS        Find Text within Text\n   PUTENV     Put/Change Environment Variable\n   RIGHT      Gets Rightmost Text\n   SCRSIZE    Returns Curent Screen Size\n   STMT       Returns Current Statement Number\n   STRIP      Removes Blanks from String\n   SUBSTR     Extracts Part of String\n   SYMBOL     Returns Symbol Type\n   TYPE       Returns Symbol Type\n   UPPER      Convert String to UPPER\n   USERID     Returns Current Userid\n   WHEREX     Returns Cursor Column\n   WHEREY     Returns Cursor Row\n\n\nNote: Many additional Jol or User written macro commands are available\n      using the commands and the functions above.\n\n\n      Jol Shell Macros\n\nThe following commands have Help Menus; if you type any of the\nfollowing commands on the Command Line without Parameters, assistance\nwill be provided.\n\n\nCommands Available in Jol Shell/Unix Mode\n        **********\n\n\n   BACKUP     Backup Files\n   BREAK      Set DOS Break On or Off\n   CD         Change Directories\n   CHDIR      Change Directories\n   COMPARE    Compare Files\n   COMPILE    Compile Programs\n   COPY       Copy Files\n   DATE       Set Date\n   DEL        Delete Files\n   DELETE     Delete Files\n   DIR        List the Directory\n   DRLINK     Execute Digital Research Link Editor\n   DRPLI      Execute Digital Research PLI Compiler\n   EDIT       Edit a File\n   EXECDS     Execute a program based on the File TYPE\n   FIND       Find a file or group of Files\n   FORMAT     Format a Disk or Diskette\n   GREP       Find text in files\n   JOLDEMO    Demonstrate Jol Data Entry\n   LINK       Link a Program\n   MASM       Assemble Program with Microsoft's Assembler\n   MD         Make a Directory\n   MERGE      Merge Files\n   PATH       Set a Different Path\n   PRINT      Print a File\n   RD         Remove a Directory\n   REN        Rename a File\n   RENAME     Rename a File\n   RESTORE    Restore Files created by BACKUP\n   SEARCH\n   SORT       Sort a File\n   TP         Execute Borland's Turbo Pascal\n   TYPE       Type a File\n   WS         Use WordStar\n\n\nYou can easily write your own commands using any of the Jol Commands,\nFunctions or ANY OTHER Jol Macro.\n\nSome Menus are configured for you when you enter them the first time,\nfor example the ACCOUNTS Menu.\n\n        Jol /ZOS/MVS/MSP/FSP/VSE Macros\n\nThe following commands have Help Menus; if you type any of the\nfollowing commands on the Command Line without Parameters, assistance\nwill be provided.\n\n\nCommands Available in Jol Mainframe Mode\n         *********\n\n\n\n   BACKUP     Backup Files\n   BUILDGDG   Make Generation Index\n   CATLG      Keep and Catalog a Data Set\n   COMPARE    Compares Files\n   COMPILE    Compile Programs\n   COMPRESS   Compress a Partitioned Data Set\n   COPY       Copy Files\n   DEL        Delete Files\n   DELETE     Delete Files\n   DIR        List the Directory\n   DUMPVOL    Backup an entire Disk Volume\n   EDIT       Edit a File\n   EXEC       Execute a registered program\n   EXECPGM    Execute a non-registered program\n   FIND       Find a file or group of Files\n   FORMAT     Format a Disk or Diskette\n   FREE       Free a Data Set\n   FS         Turn Panels Off or On\n   JCLTOJOL   Convert JCL to Jol\n   JOBCAT     Specify a Job Catalog\n   JOBLIB     Specify a Path for Program Libraries\n   LINK       Link a Program\n   LIST       List a Data Set\n   LISTC      List a Catalog\n   LISTCAT    List a Catalog\n   LISTVTOC   List a Volume Table of Contents\n   LOGON      Provide User Identification\n   MD         Make a Directory\n   MERGE      Merge Files\n   PRINT      Print a File\n   PRINTPDS   Print the contents of a Partitioned Data Set\n   REGISTER   Register a Program\n   RD         Remove a Directory\n   REN        Rename a File\n   RENAME     Rename a File\n   RESTORE    Restore Files created by BACKUP\n   SORT       Sort a File\n   SUBMIT     Submit a Job\n   TYPE       Type or List a file\n\n\n\nYou can easily write your own commands using any of the Jol Commands,\nFunctions or ANY OTHER Jol Macro.\n\n\n\n      Commands Not Supplied with Demonstration Diskettes\n\n\nDue to insufficent space on the Demonstration Diskette(s), the\nfollowing commands cannot be used.\n\nHowever, like the previous commands, the following commands have Help\nMenus; if you type any of the following commands on the Command Line\nwithout Parameters, assistance will be provided.\n\n\n   ASM        Assemble a BAL program\n   COB        Compile a COBOL program\n   COMPILE    Compile a Registered program; uses details from the\n              Registration to determine the type of program,\n              for example, ASM, COBOL or PLI.\n   FORMAT     Format or Initialise Tapes or Disks\n   FORT       Compile a FORTRAN program\n   FORTTEST   Compile and Execute a FORTRAN program\n   GEMCOBOL   Compile a COBOL program from a GEM library\n   GEMPLI     Compile a PLI program from a GEM library\n   JOBPARM    Set up a JOBPARM control card for JES3\n   LINK       Link a program\n   LOAD       Load a program after linking\n   LOADVOL    Restore a volume from DUMPVOL\n   MAIN       Set up control cards for JES3\n   NET        Set up a Job Net\n   ON         Set up Error Conditions\n   PANCOB     Compile a COBOL program from a PANVALET library\n   PANPLI     Compile a PLI program from a PANVALET library\n   PLI        Compile a PLI program\n   ROUTE      Specify output routing information\n   SETSTART   Set restart information\n   TEXTIST    Test if a data set exists\n   UNLOAD     Unload an ISAM file\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SCHEDULE": {"ttr": 117252, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x11\\x00\\x85\\x00\\x85\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 133, "newlines": 133, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SOURCE": {"ttr": 117255, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x182/\\x01\\x182/\\x13\\x111\\xa41\\xa4\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T13:11:55", "lines": 12708, "newlines": 12708, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "USERCMDL": {"ttr": 122376, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x182/\\x01\\x182/\\x14R\\x00\\x0e\\x00\\x0e\\x00\\x00\\xd1\\xd6\\xd3\\xf2\\xf0\\xf1\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-11-18T00:00:00", "modifydate": "2018-11-18T14:52:07", "lines": 14, "newlines": 14, "modlines": 0, "user": "JOL2011"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT982/FILE982.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT982", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}