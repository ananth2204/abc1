* XMDSTPUT - TPUT PROCESSOR FOR CROSS-MEMORY BROWSER
* AUTHOR   - MARTIN KLINE
*
XMDSTPUT @SAVE BASE=R12                SAVE REGS AND SET BASE
         USING MEMWORK,R10             WORK AREA PASSED VIA REG 9
         L     R9,MAPPTR               POINT TO MAP AREA
         L     R11,0(,R9)
         LA    R9,4(,R9)
         GETMAIN RU,LV=16384           GET OUTPUT AREA
         LR    R8,R1                   COPY AREA ADDRESS
         LR    R7,R11                  COPY ADDRESS AGAIN
         LR    R6,R8                   COPY ADDRESS AGAIN
         MVC   0(8,R6),=X'27F5401140401DF0' INSERT START COMMANDS
         CLC   PRMSIZE,ALTSIZE         ALTERNATE SCREEN ?
         BE    *+8                     NO - GO ON
         MVI   1(R6),X'7E'             YES - INDICATE ALTERNATE
         LA    R6,8(,R6)               POINT PAST START COMMANDS
         LA    R7,1(,R7)               BUMP REG 7
*
LOOP     ICM   R1,15,2(R9)             ANY FIELD ?
         BNZ   CHKDATA                 YES - GO ON
*
         LH    R15,SCRSIZE             GET SCREEN SIZE
         LA    R1,0(R15,R11)           POINT PAST SCREEN AREA
*
CHKDATA  SR    R1,R7                   BEYOND END OF SCREEN ?
         BNH   ADDATTR                 NO - GO ON
*
         LR    R4,R7                   COPY SOURCE POINTER
         LR    R2,R6                   COPY TARGET POINTER
         LR    R3,R1                   COPY TARGET LENGTH
         LR    R5,R1                   COPY SOURCE LENGTH
         MVCL  R2,R4                   MOVE A LITTLE BIT
         AR    R6,R1                   BUMP POINTER
         AR    R7,R1                   BUMP POINTER
*
ADDATTR  CLC   0(4,R9),=F'0'           END OF ATTRIBUTES ?
         BE    ENDATTR                 YES - GO ON
*
         MVI   0(R6),X'1D'             INSERT START FIELD CHARACTER
         MVC   1(1,R6),0(R9)           SET FIELD
         LA    R6,2(,R6)               BUMP POINTER
         LA    R7,1(,R7)               BUMP POINTER
         LA    R9,6(,R9)               BUMP POINTER
         B     LOOP                    LOOP
*
ENDATTR  MVI   0(R6),X'11'             INSERT SBA
         MVC   1(2,R6),CURSOR          INSERT CURSOR POSITION
         MVI   3(R6),X'13'             INSERT INSERT CURSOR
         LA    R6,4(,R6)               BUMP POINTER
         SR    R6,R8                   CALCULATE LENGTH
*
         TPUT  (8),(6),FULLSCR         WRITE IT
*
         FREEMAIN RU,LV=16384,A=(8)    FREE WORKING AREA
*
         XR    R15,R15                 SET RETURN CODE
         @RETURN ,                     GO BACK
*
         LTORG
         MEMWORK
         REG
         END
