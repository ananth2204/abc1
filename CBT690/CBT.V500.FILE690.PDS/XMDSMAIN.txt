* XMDSMAIN - MAIN ENTRY FOR CROSS-MEMORY BROWSER
* AUTHOR   - MARTIN KLINE
*
XMDSMAIN @SAVE BASE=R12                SAVE REGISTERS, ETC.
         TM    0(R1),X'80'             INVOKED AS COMMAND PROCESSOR?
         BZ    CP                      YES, BRANCH
*
CALL     L     R1,0(,R1)               LOAD PARM ADDRESS
         LH    R15,0(,R1)              LOAD PARM LENGTH
         LA    R1,2(,R1)               POINT PAST LENGTH
         B     GO                      BRANCH
*
CP       L     R1,0(,R1)               LOAD PARM ADDRESS
         LH    R15,0(,R1)              LOAD PARM LENGTH
         SH    R15,2(,R1)              SUBTRACT PARM OFFSET
         SH    R15,=H'4'
         AH    R1,2(,R1)               ADD OFFSET
         LA    R1,4(,R1)               ADD 4 MORE
*
GO       LTR   R15,R15                 ANY PARM DATA?
         BZ    CONT                    NO, BRANCH
*
         CLI   0(R1),X'97'             LOWERCASE 'P'
         BE    EWP                     YES, IGNORE IT
*
         CLI   0(R1),X'D7'             UPPERCASE 'P'
         BNE   CONT
*
EWP      MVI   PARM,C'P'               USE PRIMARY SCREEN SIZE
CONT     DS    0H
         USING PSA,R0                  PROVIDE PSA ADDRESSABILITY
         GETMAIN RU,LV=WORKSIZE        GET STORAGE FOR WORKAREA
         LR    R10,R1                  SAVE STORAGE ADDRESS
         USING MEMWORK,R10             PROVIDE ADDRESSABILITY
         L     R1,PSATOLD              LOAD TCB ADDRESS
         L     R1,12(,R1)              LOAD TIOT ADDRESS
         CLC   $SSG,16(R1)             $SSG LOGON PROC?
         BNE   EXIT                    NO, EXIT
*
         LA    R2,PRMSIZE              POINT TO HALFWORD SAVE AREA
         LA    R3,ALTSIZE              POINT TO HALFWORD SAVE AREA
         LA    R4,TERMATTR             POINT TO ATTRIBUTE FIELD
         GTTERM PRMSZE=(2),ALTSZE=(3),ATTRIB=(4)
*
         CLI   PARM,C'P'               USE PRIMARY SCREEN ONLY?
         BNE   *+10                    NO, BRANCH
*
         MVC   ALTSIZE,PRMSIZE         ALTSIZE = PRMSIZE
**
         XR    1,1
         IC    1,ALTSIZE               GET NUMBER OF ROWS
         STH   1,ROWS                  SAVE IT
         XR    15,15
         IC    15,ALTSIZE+1            GET NUMBER OF COLUMNS
         STH   15,COLS                 SAVE IT
         XR    0,0
         MR    0,15                    CALCULATE TOTAL SCREEN SIZE
         STH   1,SCRSIZE               SAVE IT
         MVC   HOME,=X'C15E'           ASSUME 80-COL HOME ADDRESS
         CLC   COLS,=H'80'             IS IT 80 COLUMNS ?
         BE    COLS80                  YES - GO ON
         MVC   HOME,=X'C2D2'           NO - SET 132 COL HOME ADDRESS
COLS80   MVC   CURSOR,HOME             SET CURSOR LOCATION
         MVI   FINDSTRL,X'FF'          SET LENGTH OF FIND STRING
         CALL  XMDSMAP                 MAP THE DISPLAY SCREEN
*
         ST    R1,MAPPTR               SAVE MAP POINTER
         L     R1,548                  LOAD ASCB ADDRESS
         ST    R1,ASCBPTR              SAVE ASCB ADDRESS
         XC    ADDRESS,ADDRESS         SET INITIAL ADDRESS TO ZERO
         MVI   MODE,C'D'               SET INITIAL MODE TO 'DISPLAY'
         STAX  STAXEXIT,USADDR=(10)    SET ATTENTION EXIT
*
REFORM   CALL  XMDSFORM                FORMAT OUTPUT BUFFER
         CALL  XMDSTPUT                DISPLAY BUFFER
         CLI   MODE,C'M'               MONITOR MODE?
         BNE   READ                    NO, BRANCH
*
         STIMER WAIT,BINTVL=MWAIT      YES, WAIT
         B     REFORM                  BRANCH
*
READ     CALL  XMDSTGET                READ INPUT BUFFER
         CLI   AID,X'F3'               PF3 HIT?
         BE    EXIT                    YES, EXIT
*
         CALL  XMDSCMD                 PARSE POSSIBLE COMMAND
         B     REFORM                  BRANCH
*
EXIT     TPUT  ERASE,L'ERASE,FULLSCR   CLEAR SCREEN
         FREEMAIN RU,LV=WORKSIZE,A=(10) FREEMAIN THE WORK AREA
         @RETURN ,                     EXIT
*
STAXEXIT L     R15,8(,R1)              POINT TO WORK BUFFER
         MVI   MODE-MEMWORK(15),C'D'   SET MODE TO 'DISPLAY'
         XR    R15,R15                 RC=0
         BR    R14                     RETURN
*
         EJECT
MWAIT    DC    A(100)                  1-SECOND WAIT
ERASE    DC    X'27F540114040'
TERMMSG  DC    C'INVALID TERMINAL SIZE '
$SSG     DC    CL8'@TSOSYSP'
PARM     DC    CL1'A'
         LTORG
         MEMWORK
         MEMDSECT
         PRINT NOGEN
         IHAPSA
         REG
         END
