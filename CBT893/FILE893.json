{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013322000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE893.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE893.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\n'", "DS1TRBAL": "b'\\x81\\x18'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x08\\x80\\x00\\n\\x08\\x80\\x00\\x0e\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04W\\x00R\\x01\\x13\\x19_\\x01\\x13\\x19_\\x00Y\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf7@@@'", "ispf": {"version": "04.87", "flags": 0, "createdate": "2013-07-14T00:00:00", "modifydate": "2013-07-14T00:59:52", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-487"}, "text": "REGULAR CBT TAPE - VERSION 487    FILE:  893\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT487.FILE893\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,343 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/14/13    00:59:51    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE893": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04W\\x00F\\x01\\x13\\x19_\\x01\\x13\\x19_\\x00Y\\x00\\x14\\x00\\x14\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf7@@@'", "ispf": {"version": "04.87", "flags": 0, "createdate": "2013-07-14T00:00:00", "modifydate": "2013-07-14T00:59:46", "lines": 20, "newlines": 20, "modlines": 0, "user": "CBT-487"}, "text": "//***FILE 893 is a TSO command to display a recent history of       *   FILE 893\n//*           TSO user and job activity on the current z/OS or      *   FILE 893\n//*           MVS system, displaying SMF record types 4, 20, and    *   FILE 893\n//*           35.  Not all information is displayed.  The command   *   FILE 893\n//*           is intended to give a rough indication of recent      *   FILE 893\n//*           system activity with regard to LOGONs, LOGOFFs,       *   FILE 893\n//*           and jobs initiated.  You want to know:  who logged    *   FILE 893\n//*           on, who logged off, and what jobs were initiated,     *   FILE 893\n//*           and when.                                             *   FILE 893\n//*                                                                 *   FILE 893\n//*           Included in this package is the program DSMF from     *   FILE 893\n//*           CBT File 300, which is a TSO command to display       *   FILE 893\n//*           your SMF datasets, similar to the operator command:   *   FILE 893\n//*           D SMF.  You typically will display the SMF datasets   *   FILE 893\n//*           using DSMF, and then you can execute the CLIST        *   FILE 893\n//*           called SMFX, against the correct dataset number.      *   FILE 893\n//*                                                                 *   FILE 893\n//*           email:    sbgolob@cbttape.org                         *   FILE 893\n//*                     sbgolob@attglobal.net                       *   FILE 893\n//*                                                                 *   FILE 893\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSMF": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x16\\x00\\x91\\t\\x8f\\x01\\x13\\x00/\\x10 \\x022\\x00\\xd0\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1991-04-08T00:00:00", "modifydate": "2013-01-02T10:20:16", "lines": 562, "newlines": 208, "modlines": 0, "user": "SBGOLOB"}, "text": "         TITLE 'DISPLAY SMF DATA SETS THROUGH TSO'\n*---------------------------------------------------------------------*\n*       LARGE FORMAT - PUTLINE                                        *\n*---------------------------------------------------------------------*\n*                                                                     *\n*       THIS TSOCP EMULATES THE OPERATOR 'D SMF' COMMAND. FOUND THE   *\n*       CODE ON A MODS TAPE WITH NO NAME. ALSO IT WAS NOT RE-ENTRANT  *\n*       HAD ALOT OF INTERNAL MACROS, AND HAD HARDCODED OFFSETS. SO    *\n*       ADDED ALL THE DSECTS, ETC.  THIS IS ALSO A GOOD SOURCE TO SEE *\n*       HOW THE SMF INFORMATION IS STORED IN THE 'SMCA' AND COMPANION *\n*       RDS (RECORDING DATA SET BLOCKS). THIS IS ALSO GOOD WHEN YOU   *\n*       ARE A CONTRACTOR AND THEY DON'T GIVE YOU OPERATOR AUTHORITY.  *\n*       BUT YOU HAVE THE RESPONSIBILITY.                              *\n*                                                                     *\n*       JIM MARSHALL, CAPT, USAF-RET                                  *\n*                                                                     *\n* INSTALLED:  8 APRIL 1991                                            *\n*                                                                     *\n* CHANGE LOG: 11JUN91 - RUNS 31 BIT MODE                         JDM1 *\n*                                                                     *\n*             01JAN13 - IEEMBRDS was of the old format.          SBG  *\n*                       Changed it for the new format,                *\n*                       taken from SHOWzOS 7.21 macro library         *\n*                       Converted command from TPUT to PUTLINE.       *\n*                       Added a nice title instead of leading blanks. *\n*---------------------------------------------------------------------*\n* ------------------------------------------------------------------- *\n         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n* ------------------------------------------------------------------- *\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nSP000    EQU   0                                                 JDM1\n         SPACE\nDSMF     CSECT\nDSMF     AMODE 31\nDSMF     RMODE ANY                                               JDM1\n         SAVE  (14,12),,DSMF_&SYSDATE\n         LR    R12,R15\n         USING DSMF,R12\n         GETMAIN RU,LV=WORKSIZE,SP=SP000,LOC=BELOW               JDM1\n         USING WORKAREA,R1\n         ST    R13,SAVE+4\n         ST    R1,8(R13)\n         LR    R13,R1\n         DROP  R1\n         USING WORKAREA,R13\n         SPACE\n*-------------------------------------------------------------------*\n*        GO GET THE INFORMATION FROM THE SMCA AND RDS\n*-------------------------------------------------------------------*\n         SPACE\n         L     R15,CVTPTR          GET POINTER TO CVT\n         USING CVTMAP,R15          ESTABLISH ADDRESSABILITY\n         L     R3,CVTSMCA          FIND SMCA\n         DROP  R15\n         USING SMCABASE,R3         ESTABLISH ADDRESSABILITY\n         TM    1(R3),X'80'         IS SMF RECORDING ??\n         BO    SMFOK\n         APUT  NOSMF,80            INFORM YOU\n         B     EXIT\n         SPACE\nSMFOK    EQU   *\n         MVC   SMFANS(80),BLANKL   MOVE IN BLANKS                JDM1\n         APUT  TITLE,L'TITLE       PRINT NAME OF REPORT          SBG\n         APUT  TITLEU,L'TITLEU                                   SBG\n         MVC   SMFANS(80),SMFHD    MOVE IN TITLE                 JDM1\n         APUT  SMFANS,80           PUT OUT A TITLE               JDM1\n         MVC   SMFANS(80),BLANKL   MOVE IN BLANKS                JDM1\n         APUT  SMFANS,80           SEND OUT A BLANK LINE         JDM1\n         L     R4,244(R3)          LOAD A(START OF RDS)\n         USING IEEMBRDS,R4         ESTABLISH ADDRESSABILITY\n         L     R5,248(R3)          LOAD A(END OF RDS)\nLOOP     EQU   *\n         MVC   SMFANS(80),BLANKL   CLEAR FOR GOOD PRACTICE\n         MVC   SMFANS(80),SMFLINE  MOVE IN THE SKELETON\n         MVC   SMFANS(27),RDSNAME  MOVE IN SMF DSN ID (27 CHARS OF 44)\n         MVC   SMFANS+28(6),RDSVOLID  MOVE SMF VOLSER\n         MVC   SMFANS+35(9),=CL9'ALTERNATE'\n         TM    RDSFLG1,RDSREADY    IS DS ACTIVE ?\n         BO    LOOP1\n         MVC   SMFANS+35(9),=CL9'ACTIVE'\nLOOP1    EQU   *\n         TM    RDSFLG1,RDSDUMP     IS DUMP REQUIRED ?\n         BNO   LOOP2\n         MVC   SMFANS+35(9),=CL9'DUMP REQD'\nLOOP2    EQU   *\n         TM    RDSFLG2,RDSPHYER    PHYSCIAL I/O ERROR\n         BO    LOOP3\n         TM    RDSFLG2,RDSLOGER    LOGICAL I/O ERROR\n         BO    LOOP4\n         B     LOOP5\nLOOP3    EQU   *\n         MVC   SMFANS+35(9),=CL9'P I/O ERR'\n         B     LOOP5\nLOOP4    EQU   *\n         MVC   SMFANS+35(9),=CL9'L I/O ERR'\nLOOP5    EQU   *\n         SLR   R14,R14             ZERO WORK REG 14\n         L     R15,RDSNXTBL        ADDRESS OF NEXT BLOCK\n         BCTR  R15,0\n         CVD   R15,DBLEWD2\n         M     R14,=F'100'\n         L     R1,RDSCAPTY         SMF DS CAPACITY\n         CVD   R1,DBLEWD1\n         DR    R14,R1              GET PERCENT FULL\n         CVD   R15,DBLEWD3\n         MVC   SMFALOC(10),MASK1   MOVE IN THE MASK\n         ED    SMFALOC(10),DBLEWD1+4\n         MVC   SMFUSED(10),MASK1   MOVE IN THE MASK\n         ED    SMFUSED(10),DBLEWD2+4\n         MVC   SMFPERC(4),MASK2    MOVE IN THE MASK\n         ED    SMFPERC(4),DBLEWD3+6\n         APUT  SMFANS,80\n         L     R4,RDSNEXT          GET NEXT RDS ON CHAIN\n         CR    R5,R4               AT END OF CHAIN ???\n         BNE   LOOP\n         SPACE\n*--------------------------------------------------------------------*\n*        NOW WE CLEANUP AFTER OURSELVES AND GO HOME.\n*--------------------------------------------------------------------*\n         SPACE\nEXIT     EQU   *\n         LR    R1,R13\n         L     R13,SAVE+4\n         FREEMAIN RU,LV=WORKSIZE,A=(R1),SP=SP000                 JDM1\n         RETURN (14,12),RC=0\n         SPACE\n*--------------------------------------------------------------------*\n*        DATA AREA FOLLOWS\n*--------------------------------------------------------------------*\n         SPACE\nTITLE    DC    C'                       DISPLAY SMF DATASETS '\nTITLEU   DC    C'                       ------- --- -------- '\nBLANKL   DC    CL80' '\nMASK1    DC    XL10'40206B2020206B202120'\nMASK2    DC    XL4'40202120'\nNOSMF    DC    CL80'SMF IS NOT PRESENTLY RECORDING '\nSMFHD    DC    CL80'--- SMF DATASET NAME ------ VOLSER --STATE-- BLKS Ax\n               LLOC  BLKS USED %FULL'\n*                   01234567890123456789012345678901234567890\nSMFLINE  DS    0CL80\n         DC    CL36' SYS1.MAN?                  VOLSER  '\n         DC    CL09'ACTIVE'\n         DC    CL11' X,XXX,XXX '   BLKS ALLOCATED\n         DC    CL11' X,XXX,XXX '   BLKS USED\n         DC    CL05' XXX '\n         DC    CL8' '\n         LTORG\n         SPACE\nWORKSIZE EQU   WORKEND-WORKAREA                                  JDM1\n         SPACE\nWORKAREA DSECT\n         DS    0D\nSAVE     DS    18F\nDBLEWD1  DS    D\nDBLEWD2  DS    D\nDBLEWD3  DS    D\n         SPACE\nSMFANS   DS    0CL80\n         DS    CL36' SYS1.MAN?  VOLSER  '\n         DS    CL09'ACTIVE'\nSMFALOC  DS    CL11' X,XXX,XXX '   BLKS ALLOCATED\nSMFUSED  DS    CL11' X,XXX,XXX '   BLKS USED\nSMFPERC  DS    CL05' XXX '\n         DS    CL8' '\nWORKEND  EQU   *\n         SPACE\n         CVT   DSECT=YES,LIST=NO\n         SPACE\n         IEESMCA\n         SPACE\n*--------------------------------------------------------------------*\n*        RECORDING DATA SET BLOCKS                                   *\n*        --------- ---- --- ------                                   *\n*    Replaced with new DSECT from SHOWzOS 7.21 macro library.        *\n*    The old version was from when SMF datasets had to be SYS1.MANx  *\n*--------------------------------------------------------------------*\nIEEMBRDS DSECT                         SMF RDS\nRDSID    DS    C'RDS '                 CONTROL BLOCK ID\nRDSNEXT  DS    A(IEEMBRDS)             FORWARD CHAIN POINTER\nRDSPREV  DS    A(IEEMBRDS)             BACKWARD CHAIN POINTER\n*\nRDSFLG1  DS    X\nRDSFREE  EQU   X'10'                   NEED TO FREE DATASET\nRDSDUMP  EQU   X'08'                   OPER HAS BEEN TOLD TO DUMP DS\nRDSREADY EQU   X'04'                   DS IS OPEN AND READY\nRDSCLOSE EQU   X'02'                   DS NEEDS TO BE CLOSED\nRDSNDOP  EQU   X'01'                   DS NEEDS TO BE OPENED\n*\nRDSFLG2  DS    X\nRDSLOST  EQU   X'80'                   DUMMY RDS FOR LOST DATA\nRDSPHYER EQU   X'40'                   PHYSICAL I/O ERROR\nRDSLOGER EQU   X'20'                   LOGICAL I/O ERROR\nRDSFLG3  DS    X                       RESERVED\nRDSDSLEN DS    AL1(L'RDSNAME)          LENGTH OF DATA SET NAME  HBB5510\nRDSNAME  DS    CL44'SYS1.MANX '        DATA SET NAME            HBB5510\nRDSVOLID DS    C'SYSRES'               VOLUME SERIAL\n         DS    2X                      alignment                HBB5510\nRDSDDN   DS    C'SYS00001'             DDNAME RETURNED BY DYNALLOC\nRDSCAPTY DS    F                       CAPACITY IN # OF BLOCKS\nRDSNXTBL DS    F                       NUMBER OF NEXT AVAIL BLOCK\nRDSBQE   DS    A                       ADDR OF BQE BEING WRITTEN\nRDSAVSPC DS    F                       AVAIL SPACE FROM SHOWCB\nRDSENRBA DS    F                       ENDRBA FROM SHOWCB\nRDSCINV  DS    F                       CONTROL INTERVAL SIZE\nRDSDOMID DS    F                       MSG # OF DUMP MSG\n         DS    F                                                HBB5510\nRDSRPL   DS    19F                     VSAM RPL\nRDSACB   DS    19F                     VSAM ACB\n         END\nEPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUEMNTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSMF$": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x18\\x01\\x126?\\x01\\x13\\x19?\\x14C\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2012-12-28T00:00:00", "modifydate": "2013-07-12T14:43:18", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT487.FILE893(DSMF)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n ORDER   DSMF\n SETSSI  CB487300\n SETCODE AC(0)\n ENTRY   DSMF\n NAME    DSMF(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFLOG": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x017\\x00F\\x01\\x13\\x12\\x9f\\x01\\x13\\x19_\\x00X\\x02\\x83\\x00e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.55", "flags": 0, "createdate": "2013-05-09T00:00:00", "modifydate": "2013-07-14T00:58:46", "lines": 643, "newlines": 101, "modlines": 0, "user": "SBGOLOB"}, "text": "SMFLOG   TITLE 'DISPLAY SOME INFO FROM TYPE 4, 20, 35 SMF RECORDS'\n* ------------------------------------------------------------------- *\n*  WRITTEN:     MAY 9 2013                                            *\n*                                                                     *\n*  FUNCTION:    READS VSAM SMF FILE FROM DDNAME 'SMFIN' AND           *\n*               DISPLAYS MINIMAL INFO FROM SMF TYPE 4, 20, AND 35.    *\n*                                                                     *\n*               YOU SHOULD POINT THIS PROGRAM TO THE ACTIVE SMF       *\n*               DATA SET, BY ALLOCATING DD NAME SMFIN TO IT, ADDING   *\n*               PARAMETERS SH AND REUSE, EXAMPLE AS FOLLOWS:          *\n*                                                                     *\n*               ALLOC F(SMFIN) DA('SYS1.MAN1') SH REUSE               *\n* ------------------------------------------------------------------- *\n         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n* ------------------------------------------------------------------- *\nSMFLOG   CSECT\n         USING *,10\nENTRY0   B     BEGIN-*(,R15)\n         DC    AL1(7),CL7'SMFLOG'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DC    CL12'Version 1.1 '\nWORKSIZ  DC    0F'0',AL1(0),AL3(WORKLEN)\nBEGIN    STM   14,12,12(13)\n         LR    R10,R15\n         LR    R2,R1\n         L     R0,WORKSIZ\n         GETMAIN R,LV=(0)\n         LR    R9,R1\n         USING WORKD,R9\n         XC    0(WORKINI,R1),0(R1)\n         ST    R13,4(,R9)          OLD ADDRESS IN NEW SAVE AREA\n         ST    R9,8(,R13)          NEW ADDRESS IN OLD SAVE AREA\n         LR    R13,R9\n         LA    R15,12\n         ST    R15,RETCODE\n         SPACE\nINITCON  DS    0H\n         MVI   BLANKS-1,X'40'\n         MVC   BLANKS,BLANKS-1\n         MVC   OBUF,BLANKS\nWTITLE   DS    0H\n         APUT  TITLE0,L'TITLE0\n         APUT  TITL0U,L'TITL0U\n         APUT  TITLE1,L'TITLE1\n         APUT  TITLE2,L'TITLE2\n         APUT  TITLEU,L'TITLEU\n*\n         LA    R3,WACB\n         LA    R4,WRPL\n         LA    R5,IEXL\n         LA    R6,IBUF\n         MVC   WACB(IACS),IACB\n         MVC   WRPL(IRPS),IRPL\n*        MODCB RPL=(R4),ACB=(R3),AREA=(R6)\n         ST    R3,RPLDACB-IFGRPL(,R4)\n         ST    R6,RPLAREA-IFGRPL(,R4)\n*        MODCB ACB=(R3),EXLST=(R5)\n         ST    R5,ACBEXLST-IFGACB(,R3)\n         MVI   OPEN,X'80'\n         MVI   CLOSE,X'80'\n         OPEN  ((R3)),MF=(E,OPEN)\n         TM    ACBOFLGS-IFGACB(R3),ACBOPEN\n         BO    OKOPEN\n         ST    R15,WORD\n         MVC   OBUF(5),=C'OPEN '\n         LA    R15,OBUF+5\n         LA    R1,WORD\n         LA    R0,1\n         BAL   R14,TOHEX4\n         LA    R1,ACBERFLG-IFGACB(,R3)\n         LA    R0,1\n         BAL   R14,TOHEX4\n         BAL   R14,APUTL\n         B     EXIT0\nOKOPEN   SR    R7,R7\nRLOOP    EQU   *\n         GET   RPL=(R4)\n         LTR   R15,R15\n         BZ    OKGET\n         ST    R15,WORD\n         MVC   OBUF(4),=C'GET '\n         LA    R1,WORD\n         LA    R0,1\n         LA    R15,OBUF+4\n         BAL   R14,TOHEX4\n         MVC   1(9,R15),=C'RPLRTNCD '\n         LA    R15,10(,R15)\n         LA    R1,RPLRTNCD-IFGRPL(,R4)\n         LA    R0,1\n         BAL   R14,TOHEX4\n         BAL   R14,APUTL\n         B     EXITC\nOKGET    A     R7,=F'1'\n         CLI   5(R6),4             STEP TERMINATION\n         BE    TYPE4\n         CLI   5(R6),20            JOB INITIATION\n         BE    TYPE20\n         CLI   5(R6),35            LOGOFF\n         BE    TYPE35\n         B     RLOOP\nTYPE4    DS    0H\n         MVI   OBUF-1,X'40'\n         MVC   OBUF,OBUF-1\n         CVD   R7,DOUBLE\n         MVC   WBUF(8),=X'4020202020202120'\n         ED    WBUF(8),DOUBLE+4\n         MVC   OBUF(6),WBUF+2\n         MVI   OBUF+6,C' '\n         MVC   OBUF+7(3),=C' 4 '\n         MVC   OBUF+10(8),18(R6)    JOBNAME\n         MVI   OBUF+18,C' '\n         LA    R15,OBUF+19\n         LA    R1,10(,R6)          DATE\n         BAL   R14,UDATE\n         MVC   WORD(4),6(R6)       TIME\n         BAL   R14,UTIME\n         MVC   WORD(4),26(R6)      TIME RDR\n         BAL   R14,UTIME\n         MVC   WORD(4),43(R6)      TIME INIT\n         BAL   R14,UTIME\n         MVC   WORD(4),94(R6)      TIME PGM\n         BAL   R14,UTIME\n         MVC   0(8,R15),58(R6)     PGM\n         LA    R15,9(,R15)\n         BAL   R14,APUTL\n         B     RLOOP\nTYPE20   DS    0H\n         MVI   OBUF-1,X'40'\n         MVC   OBUF,OBUF-1\n         CVD   R7,DOUBLE\n         MVC   WBUF(8),=X'4020202020202120'\n         ED    WBUF(8),DOUBLE+4\n         MVC   OBUF(6),WBUF+2\n         MVI   OBUF+6,C' '\n         MVC   OBUF+7(3),=C'20 '\n         MVC   OBUF+10(8),18(R6)    JOBNAME\n         MVI   OBUF+18,C' '\n         LA    R15,OBUF+19\n         LA    R1,10(,R6)          DATE\n         BAL   R14,UDATE\n         MVC   WORD(4),6(R6)       TIME\n         BAL   R14,UTIME\n*        MVC   0(10,R15),=C'(JOB INIT)'\n         MVC   27(10,R15),=C'(JOB INIT)'\n         LA    R15,10(,R15)\n         BAL   R14,APUTL\n         MVC   OBUF+59(10),BLANKS\n         B     RLOOP\nTYPE35   DS    0H\n         MVI   OBUF-1,X'40'\n         MVC   OBUF,OBUF-1\n         CVD   R7,DOUBLE\n         MVC   WBUF(8),=X'4020202020202120'\n         ED    WBUF(8),DOUBLE+4\n         MVC   OBUF(6),WBUF+2\n         MVI   OBUF+6,C' '\n         MVC   OBUF+7(3),=C'35 '\n         MVC   OBUF+10(8),18(R6)    JOBNAME\n         MVI   OBUF+18,C' '\n         LA    R15,OBUF+19\n         LA    R1,10(,R6)          DATE\n         BAL   R14,UDATE\n         MVC   WORD(4),6(R6)       TIME OFF\n         BAL   R14,UTIME\n         MVC   0(6,R15),=C'SINCE '\n         LA    R15,6(,R15)\n         MVC   WORD(4),26(R6)      TIME ON\n         BAL   R14,UTIME\n         BAL   R14,APUTL\n         B     RLOOP\nUDATE    UNPK  WBUF(7),0(4,R1)\n         MVC   0(2,R15),WBUF+2\n         MVI   2(R15),C'.'\n         MVC   3(3,R15),WBUF+4\n         MVI   6(R15),C' '\n         LA    R15,7(,R15)\n         BR    R14\nUTIME    L     R1,WORD\n         SR    R0,R0\n         D     R0,=F'100'          COMPUTE SECONDS, REM 100THS\n         SR    R0,R0\n         D     R0,=F'60'           COMPUTE MINUTES, REM SECONDS\n         SR    R0,R0\n         D     R0,=F'60'           COMPUTE HOURS, REM MINUTES\n         CVD   R1,DOUBLE           HOURS\n         OI    DOUBLE+7,X'0F'\n         UNPK  WBUF(3),DOUBLE+6(2)\n         MVC   0(2,R15),WBUF+1\n         MVI   2(R15),C':'\n         CVD   R0,DOUBLE           MINUTES\n         OI    DOUBLE+7,X'0F'\n         UNPK  WBUF(3),DOUBLE+6(2)\n         MVC   3(2,R15),WBUF+1\n         MVI   5(R15),C' '\n         LA    R15,6(,R15)\n         BR    R14\nEOF      EQU   *\nEXITC    MVI   CLOSE,X'80'\n         CLOSE ((R3)),MF=(E,CLOSE)\nDONE     B     EXIT0\n         SPACE\nTOHEX1   MVC   1(1,R15),0(R1)\n         UNPK  0(3,R15),1(2,R15)\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)\n         LA    R1,1(,R1)\n         BCT   R0,TOHEX1\n         MVI   0(R15),C' '\n         BR    R14\n         SPACE\nTOHEX4   MVC   1(4,R15),0(R1)\n         UNPK  0(9,R15),1(5,R15)\n         TR    0(8,R15),HEXTAB-240\n         MVI   8(R15),C' '\n         LA    R15,9(,R15)\n         LA    R1,4(,R1)\n         BCT   R0,TOHEX4\n         BR    R14\n         SPACE\nAPUTL    ST    R14,RET14\n         APUT  OBUF,L'OBUF\n         L     R14,RET14\n         BR    R14\nTPUTL    ST    R14,RET14\n         LA    R1,OBUF\n         LR    R0,R15\n         SR    R0,R1\n         SVC   93 TPUT\n         L     R14,RET14\n         BR    R14\n         SPACE\nEXIT0    MVI   RETCODE+3,0\nEXIT     L     R2,RETCODE\n         LR    R1,R13             POINT TO ADDRESS TO FREEMAIN\n         L     R0,WORKSIZ         LENGTH TO FREEMAIN\n         L     R13,4(,R13)        RESTORE ORIGINAL R13\n         FREEMAIN R,A=(1),LV=(0)\n         DROP  R9\n         LR    R15,R2\n         LM    0,12,20(R13)\n         L     R14,12(,R13)\n         BR    R14\n         SPACE\n         LTORG\n         DC    0D'0'\nDACB     EQU   0\nDBUF     EQU   0\nIOPEN    OPEN  (DACB),MF=L\nICLOSE   CLOSE (DACB),MF=L\nIACB     ACB   DDNAME=SMFIN,MACRF=(ADR,SEQ,IN)\nIACS     EQU   *-IACB\nIRPL     RPL   ACB=DACB,OPTCD=(ADR,SEQ),AREA=DBUF,AREALEN=32767\nIRPS     EQU   *-IRPL\nIEXL     EXLST EODAD=EOF\nIEXS     EQU   *-IEXL\nHEXTAB   DC    C'0123456789ABCDEF'\n         DC    CL8' '\nTITLE0   DC    C'                  SMFLOG - Version 1.1 '\nTITL0U   DC    C'                  ------ - ------- --- '\nTITLE1   DC    C' Line  Ty Jobname   Date  Time  Time  Time  Time  Pgm X\n               Name'\nTITLE2   DC    C'Number pe                        Rdr  Init   Pgm '\nTITLEU   DC    C'------ -- -------- ------ ----- ----- ----- ----- ----X\n               ----'\n         DC    0D'0'\nWORKD    DSECT\n         DS    18F\nDOUBLE   DS    D\nRETCODE  DS    F\nWORD     DS    F\nOPEN     DS    F\nCLOSE    DS    F\nRET14    DS    F\nWORKINI  EQU   *-WORKD\nWACB     DS    0F,(IACS)X\nWRPL     DS    0F,(IRPS)X\n         DC    C' '\nOBUF     DS    CL80\n         DC    C' '\nBLANKS   DC    CL80' '\nWBUF     DS    CL16\nIBUF     DS    4096D\n         DS    0D\nWORKLEN  EQU   *-WORKD\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n         PRINT NOGEN\n         IFGACB\n         IFGRPL\n         END   ENTRY0\nEPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUMENTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFORE R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFLOG$": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\'\\x01\\x07\"_\\x01\\x13\\x19?\\x18X\\x00\\x1b\\x00\\x0e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2007-08-13T00:00:00", "modifydate": "2013-07-12T18:58:27", "lines": 27, "newlines": 14, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT487.FILE893(SMFLOG)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n ORDER   SMFLOG\n SETSSI  CB487893\n ENTRY   SMFLOG\n NAME    SMFLOG(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFX": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x04\\x01\\x13\\x19?\\x01\\x13\\x19?\\x122\\x00\\x14\\x00\\x05\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2013-07-12T00:00:00", "modifydate": "2013-07-12T12:32:04", "lines": 20, "newlines": 5, "modlines": 0, "user": "SBGOLOB"}, "text": "PROC 1 &D &SMFDS(SYS1.MAN)\n/* ------------------------------------------------------------- */\n/*  Usually SMF datasets in a shop are called xxxx.MANn, where   */\n/*  n=1,2,3 and so forth.  The prefix for all of these datasets  */\n/*  should be the same, within an LPAR, and therefore we set     */\n/*  the variable &SMFDS to this prefix, which is most of the     */\n/*  SMF dataset name.  Variable &D is the SMF dataset number.    */\n/* ------------------------------------------------------------- */\n/*  TSOV is an EXEC from Mark Zelden, but you don't really need  */\n/*  it.  Its purpose is to capture the output of the command,    */\n/*  and display it in Full Screen mode, instead of line mode.    */\n/* ------------------------------------------------------------- */\n/*  Syntax:   SMFX n      where n=1,2,3....                      */\n/* ------------------------------------------------------------- */\nSET &SMFD = &STR('&SMFDS&D')\n                               /*  Display the SMF dataset name  */\nWRITE &SMFD\nALLOC F(SMFIN) DA(&SMFD) SH REUSE\nTSOV SMFLOG                    /*  Invoke the command....        */\nFREE F(SMFIN)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSOV": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x07\\x11\\x7f\\x01\\x08'\\x7f\\x13\\x10\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc3\\xc2\\xe3\\xf4\\xf7\\xf7@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-04-27T00:00:00", "modifydate": "2008-10-03T13:10:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "CBT477"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/****************************************************/\n/* There is really no advantage to using TSOV over  */\n/* TSOE since a temporary data set is used, but     */\n/* to complete the TSO* set of EXECs - here it is.  */\n/****************************************************/\n/* TRACE ?I */\nparse arg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(90,90) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"VIEW   DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT893/FILE893.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT893", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}