/* REXX ----------------------------------------------------------*
 *                                                                *
 * NAME: EFQVAR                                                   *
 * TYPE: REXX function                                            *
 *                                                                *
 * WRITTEN BY:  Henrik Salminen,                                  *
 *              Spadab, Box 593, S-101 26  STOCKHOLM  SWEDEN      *
 *              Date: 1992-11-09                                  *
 *                                                                *
 * DESCRIPTION: This REXX expects at least 4 parameters;          *
 *              1. Applid                                         *
 *              2. Code (GET, PUT, ERASE)                         *
 *              3. Condition (COND/UNCOND)                        *
 *              4. Variable name                                  *
 *              5. Variable value if Code (2) is PUT.             *
 *                                                                *
 *              The function will start an external REXX in the   *
 *              specified applid, where the specified variable    *
 *              is 'treated' according to 'Code'.                 *
 *              When Code is PUT, the variable value is also      *
 *              supplied in the external function call.           *
 *                                                                *
 *              Finally, the function will return the obtained    *
 *              return CODE from the external call's              *
 *              'Code'-function, and the result is returned to    *
 *              the caller.  When a successful GET has been       *
 *              executed, the value will also be returned in the  *
 *              RETURN clause.  The calling REXX will then have   *
 *              to parse the result.                              *
 *                                                                *
 * PARAMETERS:  See above                                         *
 *                                                                *
 * Some examples:                                                 *
 *                 applid code  condition name   value            *
 *                 ------ ----- --------- -----  ------
    XX   = EFQVAR("ISR    GET   UNCOND    BJC1")
    XX   = EFQVAR("FAXXE  PUT     COND    BJC1"  BJC1")"
    XX   = EFQVAR("SMPE   ERASE UNCOND    BJC1")
 *
 *   and finally check the result; RETCODE will contain the       *
 *   return code, and if Code was GET and the VGET was able       *
 *   to obtain the specified variable, VARVALUE will return       *
 *   the value of the variable.  RETCODE will contain return      *
 *   code according to what the functions (VGET, VPUT, VERASE)    *
 *   leave.  Se appropriate manual for documentation of the       *
 *   return codes that these ISPF services leave.                 *
 *
    PARSE VAR XX RETCODE VARVALUE
 *
 *----------------------------------------------------------------*/
trace n
  Address ISPEXEC
  "CONTROL ERRORS RETURN"

  PARSE ARG APPLID CODE CONDITION VARNAME VARVALUE
/*----------------------------------------------------------------*/

  UPPER CODE

  "VGET (ZAPPLID) ASIS"

  SELECT
   When CODE  = "GET"    then Call CODE_GET
   When CODE  = "PUT"    then Call CODE_PUT
   When CODE  = "ERASE"  then Call CODE_ERASE
   Otherwise NOP
   End

  EXIT

/*----------------------------------------------------------------*/
CODE_GET:
  If ZAPPLID = "ISR" & ,
      APPLID = "ISR" then do
   VARVALUE = ""
   "VGET ("VARNAME") PROFILE"
   RK = RC
   If RK = 0 then do
    VARVALUE = VALUE(VARNAME)
    end
   End

  Else do
   v_tab = "VARTAB69"
   RK = ""
   VARVALUE = ""
   "TBEND   "  v_tab
   "TBCREATE"  v_tab "KEYS(VARNAME) NAMES(VARVALUE,RK) NOWRITE SHARE"
   "TBADD   "  v_tab
   "SELECT CMD(%EFQVAR1" APPLID CODE CONDITION VARNAME")" ,
               "NEWAPPL("APPLID") PASSLIB"
   XRC = RC
   "TBTOP  "  v_tab
   "TBSKIP "  v_tab
   "TBEND  "  v_tab
   If RK = "" then RK = XRC
   End

  EXIT  RK VARVALUE
  RETURN
/*----------------------------------------------------------------*/
CODE_PUT:
  If ZAPPLID = "ISR" & ,
      APPLID = "ISR" then do
   If CONDITION = "UNCOND" then do
    VNX     = VARNAME
    INTERPRET VNX "= VARVALUE"
    "VPUT ("VARNAME") PROFILE"
    RK = RC
    end
   Else do
    YXA = VARVALUE
    "VGET ("VARNAME") PROFILE"
    RK = RC
    If RK = 0 then do
     VNX     = VARNAME
     INTERPRET VNX "= YXA"
     "VPUT ("VARNAME") PROFILE"
     RK = RC
     end
    Else NOP
    end
   End

  Else do
   "SELECT CMD(%EFQVAR1" APPLID CODE CONDITION VARNAME VARVALUE")" ,
               "NEWAPPL("APPLID") PASSLIB"
   RK  = RC
   End
  EXIT  RK
  RETURN
/*----------------------------------------------------------------*/
CODE_ERASE:
  If ZAPPLID = "ISR" & ,
      APPLID = "ISR" then do
   If CONDITION = "UNCOND" then do
    "VERASE ("VARNAME") PROFILE"
    RK = RC
    End

   Else do
    "VGET ("VARNAME") PROFILE"
    RK = RC
    If RK = 0 then do
     "VERASE ("VARNAME") PROFILE"
     RK = RC
     end
    Else NOP
    End
   End

  Else do
   "SELECT CMD(%EFQVAR1" APPLID CODE CONDITION VARNAME")" ,
              "NEWAPPL("APPLID") PASSLIB"
   RK  = RC
   End

  EXIT  RK
  RETURN
/*----------------------------------------------------------------*/
