/* REXX ----------------------------------------------------------*
 *                                                                *
 * NAME: EFQPT                                                    *
 * TYPE: REXX function                                            *
 *                                                                *
 * WRITTEN BY:  Henrik Salminen,                                  *
 *              Spadab, Box 593, S-101 26  STOCKHOLM  SWEDEN      *
 *              Date: 1992-10-23                                  *
 *                                                                *
 * DESCRIPTION: This rexx expects one parameter; table name.      *
 *              It displays the table, generated by scanning      *
 *              the profile dataset for variables or variable     *
 *              names that contain a specified character string.  *
 *              There are a number of primary and line commands   *
 *              available in this dialog for manipulating the     *
 *              found variables.                                  *
 *                                                                *
 * PARAMETERS:  Table name.                                       *
 *----------------------------------------------------------------*/

trace n
  Address ISPEXEC
  "CONTROL ERRORS RETURN"

  PARSE ARG PARMS

  Call INITIAL_ROUTINE
  Call MAIN_ROUTINE
  EXIT

/* ***************************************************************** */
MAIN_ROUTINE :
/* Start of main section        ************************************ */
/* Display the table until hell freezes over, the dialog user        */
/* hits END/RETURN-key, or uses the CANCEL-command.                  */

  If DISPLAY = "YES" then do forever
   "TBDISPL "v_tab" PANEL("v_pan") CSRROW("CRP") AUTOSEL("AUTOSEL")"
   RK = RC
   If ZTDSELS = 0 & RK > 0 & v_tabf  = "" then leave
   If ZTDSELS = 0 & RK > 0 & v_tabf ¬= "" then do
    v_tabf = ""
    v_tab  = yv_tab
    "TBTOP"   v_tab
    "TBQUERY "v_tab "ROWNUM(AROW)"
    end

   PARSE VAR ZCMD CMD PARM v_dummy
   PARSE UPPER VAR CMD CMD .
   ZCMD =""

   If CMD  ="C" | CMD = "CANCEL" then leave
   IF CMD ¬= "" then Call SELECT_PRIMARY_CMD

   Do while ZTDSELS > 0
    IF SEL ¬= "" then Call SELECT_LINE_CMD
    IF ZTDSELS = 1 THEN ZTDSELS = 0
    IF ZTDSELS > 0 THEN "TBDISPL" v_tab
    End

   IF CMD  = "" & SEL = "" THEN CRP = 0
   ELSE    "TBQUERY "v_tab "ROWNUM(AROW) POSITION(CRP)"
   arow   = FORMAT(arow)
   "TBTOP " v_tab
   "TBSKIP" v_tab "NUMBER("CRP")"
   END

  If DISPLAY ¬= "YES" then NOP

  "TBEND   " v_tab
  "TBEND   " v_tabx
  "TBEND   " v_tabf

  RETURN

/* End of main section        ************************************** */
/* ***************************************************************** */
/*  Start of subroutines for primary commands:                       */
SELECT_PRIMARY_CMD :
  SELECT
   When CMD = "F"     then Call CMD_FIND_STRING
   When CMD = "GC"    then Call CMD_GLOBAL_CHANGE_IN_TEMPTAB
   When CMD = "GUP"   then Call CMD_GLOBAL_UPDATE
   When CMD = "HCP"   then Call CMD_HARDCOPY_PRINT
   When CMD = "Q"     then Call CMD_Q
   When CMD = "RES" | ,
        CMD = "RESET" then Call CMD_RESET_PLC
   When CMD = "S0" |  CMD = "S1"  |  CMD = "S2"  | ,
        CMD = "S3" |  CMD = "S1D" |  CMD = "S2D" | ,
        CMD = "S3D"   then Call CMD_SORT_TABLE
   Otherwise NOP
   END
  RETURN
/* ***************************************************************** */
CMD_FIND_STRING :
  If PARM ¬= '' then THSAPP1 = PARM
  Call CREATE_TEMPORARY_FIND_TABLE
  "TBTOP " v_tab
  Do ixf = 1 to arow
   "TBSKIP" v_tab
   If THSAPP1 ¬= "" then do
    If THSAPP1A = "" & POS(THSAPP1,VAR) > "0" then ,
         "TBADD" v_tabf
/*       Call PUT_AST_PLC     */
    If THSAPP1A ¬= ""  then do
       /* two variable fields to be searched  */
     If SUBSTR(THSAPP1A,1,1) = "A" then do
      If POS(THSAPP1,VAR) > "0" &  POS(THSAPP10,VAR) > "0" then ,
         "TBADD" v_tabf
/*       Call PUT_AST_PLC     */
      end
     If SUBSTR(THSAPP1A,1,1) = "O" then do
      If POS(THSAPP1,VAR) > "0" |  POS(THSAPP10,VAR) > "0" then ,
         "TBADD" v_tabf
/*       Call PUT_AST_PLC     */
      end
     end
    End
   If THSAPP2 ¬= ""  &  POS(THSAPP2,VN)  > "0" then ,
         "TBADD" v_tabf
/*       Call PUT_AST_PLC     */
   End
  "TBTOP "  v_tab
  "TBTOP "  v_tabf
  "TBQUERY" v_tabf "ROWNUM(AROWF) POSITION(CRP)"
  If AROWF > 0 then do
   v_tab = v_tabf
   arow   = FORMAT(arowf)
   end
  Else do
   If THSAPP1A ¬= '' then do
    If SUBSTR(THSAPP1A,1,1) = 'O' then ,
     ZEDLMSG = ,
      "No variable contains any of the specified strings"
    If SUBSTR(THSAPP1A,1,1) = 'A' then ,
     ZEDLMSG = ,
      "No variable contains both of the specified strings"
    end
   Else do
    ZEDLMSG = ,
     "No variable contains the specified string(s)"
    end
   "SETMSG MSG(ISRZ001)"
   v_tabf = ""
   end
  RETURN
/* ***************************************************************** */
/* Put an asterisk in the PLC field to indicate some event           */
PUT_AST_PLC :
  PLC = "*"
  "TBPUT" v_tab
  RETURN
/* ***************************************************************** */
CMD_Q :
  v_display = "YES"
  v_library = "THSTABS"
  X = EFQTAB(v_display v_tab v_library)
  RETURN
/* ***************************************************************** */
CMD_RESET_PLC :
  "TBTOP " v_tab
  If v_tab ¬= v_tabold then do
     v_tab  = v_tabold
   End
  Else do
   Do xi = 1 to arow
    "TBSKIP " v_tab
    PLC = ""
    "TBPUT " v_tab
    end
   End
  "TBTOP " v_tab
  "TBEND   " v_tabx
  "TBCREATE" v_tabx "NAMES(VN,VAR,APPLID,PLC) NOWRITE"
  RETURN
/* ***************************************************************** */
/* PRINT THE TABLE USING EDIT-MACRO EMHCP                            */
CMD_HARDCOPY_PRINT :
  If PARM ="" then PARM = 1
  Address TSO ,
      "ALLOC F(ISPFILE) SPACE(2,15) TRACKS RELEASE UNIT(SYSVIO)" ,
      "DSORG(PS) BLKSIZE(23476) LRECL(99) RECFM(V B)  REUSE"
  "LMINIT DATAID(DATAID) DDNAME(ISPFILE)"
  SHOW   = "NO"
  BYRACF = "YES"   /* TO FORCE EMHCP TO PRINT "ROTATED" */
  ANTEX  = PARM    /* NBR OF COPIES FOR EMHCP TO PRINT  */
  TAB = v_tab
  "VPUT (DATAID,SHOW,BYRACF,ANTEX) SHARED"
  "FTCLOSE"
  "FTOPEN"
  "FTINCL" v_skel
  "FTCLOSE"
/*
  "EDIT   DATAID("DATAID") MACRO(EMHCP)"
*/
  "SELECT CMD(%EMHCP DDNAME(ISPFILE) DATAID("DATAID") VIO(YES)" ,
          "LRECL(99) RECFM(VB))"
  "LMFREE DATAID("DATAID")"
  Address TSO "FREE  F(ISPFILE)"
  RETURN

/* ***************************************************************** */
/* Update variables in the temporary table but NOT in the profile    */
/* Updating the profile should still be done through the GUP command */
CMD_GLOBAL_CHANGE_IN_TEMPTAB :

  "DISPLAY PANEL(THSQTABC)"
  If RC ¬= 0 then RETURN
  If THENBR = 1 then CSIN = THSAPP1
  Else               CSIN = THSAPP10

  "DISPLAY PANEL(THSQTABD)"
  If RC ¬= 0 then RETURN

  "TBTOP  " v_tab
  "TBQUERY "v_tab "ROWNUM(AROW)"
  L = LENGTH(CSIN)
  LP = ''
  RP = ''

  Do i = 1 to AROW
   "TBSKIP "  v_tab
   If POS(CSIN,VAR) > 0 then do
    If POS(CSIN,VAR) = 1 then LP = ''
    If POS(CSIN,VAR) > 1 then LP = SUBSTR(VAR,1,POS(CSIN,VAR)-1)
    If POS(CSIN,VAR) = (LENGTH(VAR)-L+1) then RP = ''
    If POS(CSIN,VAR) > 1 & POS(CSIN,VAR) < (LENGTH(VAR)-L+1) then ,
       RP = SUBSTR(VAR,POS(CSIN,VAR)+L)
    VAR = LP""CSOUT""RP
    End
   "TBADD " v_tabx
   End

  v_tab = v_tabx
  "TBTOP  " v_tab

  RETURN
/* ***************************************************************** */
/* Update variables in the PROFILE member in the profile dataset|    */
CMD_GLOBAL_UPDATE :

  "TBTOP  " v_tab
  "TBQUERY" v_tab "ROWNUM(AROW)"
  v_appl = ""

  Do i = 1 to AROW
   "TBSKIP "  v_tab
   Call SEL_U
   End

  "TBTOP  " v_tab

  Do i = 1 to AROW
   "TBSKIP "  v_tab
   If APPLID = "ISR" then do
    If POS("'",VAR) > 0 then  Interpret  VN '= "'VAR'"'
    Else                      Interpret  VN "= '"VAR"'"
    "VPUT ("VN") PROFILE"
    "VPUT ("VN") SHARED"
    end
   Else do
    If v_appl = APPLID then do     /* same applid   */
     "TBGET  "  qtab "SAVENAME(EXTVARS)"
     If POS("'",VAR) > 0 then  Interpret  VN '= "'VAR'"'
     Else                      Interpret  VN "= '"VAR"'"
     end
    Else do                       /* not same applid   */
     If v_appl ¬= "" then do      /* not first applid  */
      "TBPUT  "  qtab "SAVE"EXTVARS
      "TBSAVE "  qtab "LIBRARY("LIBRARY") REPLCOPY"
      "TBEND  "  qtab
      qtab   = APPLID"PROF"
      v_appl = APPLID
      "TBOPEN "  qtab "WRITE LIBRARY("LIBRARY") SHARE"
      "TBTOP  "  qtab
      "TBSKIP "  qtab
      "TBGET  "  qtab "SAVENAME(EXTVARS)"
      If POS("'",VAR) > 0 then  Interpret  VN '= "'VAR'"'
      Else                      Interpret  VN "= '"VAR"'"
      end
     Else do                 /* this is the first applid  */
      qtab   = APPLID"PROF"
      v_appl = APPLID
      "TBOPEN "  qtab "WRITE LIBRARY("LIBRARY") SHARE"
      "TBTOP  "  qtab
      "TBSKIP "  qtab
      "TBGET  "  qtab "SAVENAME(EXTVARS)"
      If POS("'",VAR) > 0 then  Interpret  VN '= "'VAR'"'
      Else                      Interpret  VN "= '"VAR"'"
      end
     end
    "TBPUT  "  qtab "SAVE"EXTVARS
    "TBSAVE "  qtab "LIBRARY("LIBRARY") REPLCOPY"
    "TBEND  "  qtab
    end
   End

  RETURN
/* ***************************************************************** */
/* ***************************************************************** */
CMD_SORT_TABLE :
  "TBTOP " v_tab
  SELECT
   When CMD = "S0"  then ,
                   "TBSORT  " v_tab "FIELDS(APPLID,C,A VN,C,A)"
   When CMD = "S1"  then ,
                   "TBSORT  " v_tab "FIELDS(APPLID,C,A VN,C,A)"
   When CMD = "S1D" then ,
                   "TBSORT  " v_tab "FIELDS(APPLID,C,D VN,C,A)"
   When CMD = "S2"  then ,
                   "TBSORT  " v_tab "FIELDS(VN,C,A APPLID,C,A)"
   When CMD = "S2D" then ,
                   "TBSORT  " v_tab "FIELDS(VN,C,D APPLID,C,A)"
   When CMD = "S3"  then ,
                   "TBSORT  " v_tab ,
                            "FIELDS(VAR,C,A VN,C,A APPLID,C,A)"
   When CMD = "S3D" then ,
                   "TBSORT  " v_tab ,
                            "FIELDS(VAR,C,D VN,C,A APPLID,C,A)"
   Otherwise NOP
   End
  RETURN

/* ***************************************************************** */
CREATE_TEMPORARY_FIND_TABLE :
  tabfnbr = tabfnbr + 1
  v_tabf = "XZQ"tabfnbr
  "TBEND   " v_tabf
  "TBCREATE" v_tabf "NAMES(VN,VAR,APPLID,PLC) NOWRITE"
  RETURN
/* ***************************************************************** */
/* ***************************************************************** */
/*  Start of subroutines for line commands                           */
/* ***************************************************************** */
/* ***************************************************************** */
SELECT_LINE_CMD :
  "CONTROL DISPLAY SAVE"
  SELECT
   When SEL = "D"     then  Call SEL_D
   When SEL = "DP" |,
        SEL = "DS"    then  Call SEL_DP_VERASE
   When SEL = "S"     then  Call SEL_S
   When SEL = "U"     then  Call SEL_U
   When SEL = "UU"    then  Call SEL_UU
   When SEL = "V"     then  Call SEL_V
   Otherwise NOP
   END
  "CONTROL DISPLAY RESTORE"
  RETURN
/* ***************************************************************** */
/* ***************************************************************** */
/* Delete a variable entry from the table                            */
SEL_D :
  "TBDELETE " v_tab
  RETURN
/* ***************************************************************** */
/* Select a variable for updating it in the table from a panel       */
SEL_S :
  If LENGTH(VAR) < 1001 then do
   "DISPLAY PANEL(THSGVARS)"
   If RC = 0 then do
    PLC =SEL
    "TBPUT " v_tab
    end
   End
  Else do
   Call VARIABLE_LGTH_GT_THOUSAND_BYTES_CREATE_TEMPTAB_INSTEAD
   ZEDLMSG = ,
    "The length of variable "VN" in Applid" APPLID "is too long to",
    "be displayed because it consists of "LENGTH(VAR)" characters."
   "SETMSG MSG(ISRZ001)"
   End
  RETURN
/* ***************************************************************** */
/* Update a variable in the PROFILE member in the profile dataset|   */
/* What on earth is this?|?  Looks like a future project, judging    */
/* by the label name....                                             */
VARIABLE_LGTH_GT_THOUSAND_BYTES_CREATE_TEMPTAB_INSTEAD :

 trace n
  zx_tab = 'GT1000TB'
  "TBEND"    zx_tab
  yxvar = VAR
  "DISPLAY PANEL(THSVARSM)"
  If RC > 0 then RETURN
  If VAR ¬= yxvar then say 'zappa dagga'
 trace n

  RETURN
/* ***************************************************************** */
/* Update a variable in the PROFILE member in the profile dataset|   */
SEL_U :

  If APPLID = "ISR" then do
   If POS("'",VAR) > 0 then Interpret  VN '= "'VAR'"'
   Else                     Interpret  VN "= '"VAR"'"
   "VPUT ("VN") PROFILE"
   "VPUT ("VN") SHARED"
   PLC =SEL
   "TBPUT " v_tab
   end

  Else do
   qtab = APPLID"PROF"
   If POS("'",VAR) > 0 then Interpret  VN '= "'VAR'"'
   Else                     Interpret  VN "= '"VAR"'"
   V_PUT  = EFQVAR(APPLID "PUT UNCOND" VN VAR)
   PLC =SEL
   "TBPUT " v_tab
   end

  RETURN
/* ***************************************************************** */
/* Update a variable in the PROFILE member in the profile dataset|   */
SEL_UU :
  If APPLID = "ISR" then do
   If POS("'",VAR) > 0 then Interpret  VN '= "'VAR'"'
   Else                     Interpret  VN "= '"VAR"'"
   "VPUT ("VN") PROFILE"
   "VPUT ("VN") SHARED"
   PLC =SEL
   "TBPUT " v_tab
   end

  Else do
   qtab = APPLID"PROF"
   "TBOPEN "  qtab "WRITE LIBRARY("LIBRARY") SHARE"
   "TBTOP  "  qtab
   "TBSKIP "  qtab
   "TBGET  "  qtab "SAVENAME(EXTVARS)"
   If POS("'",VAR) > 0 then  Interpret  VN '= "'VAR'"'
   Else                      Interpret  VN "= '"VAR"'"
   "TBPUT  "  qtab "SAVE"EXTVARS
   "TBSAVE "  qtab "LIBRARY("LIBRARY") REPLCOPY"
   "TBEND  "  qtab
   PLC =SEL
   "TBPUT " v_tab
   end

  RETURN
/* ***************************************************************** */
/* Invoke IBM function 3.7 in current APPLID                         */
SEL_V :
  ZTRAIL = "3"
  "VPUT (ZTRAIL) SHARED"
  "SELECT PGM(ISPYXDR) PARM("APPLID") NOCHECK"
  RETURN
/* ***************************************************************** */
/* Delete a variable entry from the specified source                 */
SEL_DP_VERASE :
  If APPLID = "ISR" then do
   If SEL = "DP" then "VERASE ("VN") PROFILE"
   If SEL = "DS" then "VERASE ("VN") SHARED"
   "TBDELETE " v_tab
   End
  Else do
   CODE = "ERASE"
   COND = "UNCOND"
   NAME =  VN
   y    = EFQVAR(APPLID CODE COND NAME YXXA)
   End
  RETURN
/* ***************************************************************** */
INITIAL_ROUTINE :

  LIBRARY = "ISPPROF"
  DISPLAY = "YES"
  QTAB    = ""
  DUMMY   = ""
  SENDMSG = "NO"
  v_pan   = "THSQTAB1"
  v_skel  = "THSQTAB1"
  AUTOSEL = "NO"

  PARSE VAR PARMS v_tab DUMMY
  v_tabold = v_tab
  v_tabx = v_tab""Q
  "TBEND   " v_tabx
  "TBCREATE" v_tabx "NAMES(VN,VAR,APPLID,PLC) NOWRITE"

  "TBQUERY "v_tab "ROWNUM(AROW) POSITION(CRP)"
  IF RC ¬= 0 then do
   "TBEND"   v_tab
   "TBOPEN"  v_tab "LIBRARY("LIBRARY") SHARE"
   "TBQUERY "v_tab "ROWNUM(AROW) POSITION(CRP)"
   end
  arow   = FORMAT(arow)
  yv_tab = v_tab
  v_tabf = ""
  "VGET (ZSCREEN) SHARED"
  tabfnbr = ZSCREEN||RANDOM(1,999)
  v_tabf = "XZQ"tabfnbr

  RETURN

/* ***************************************************************** */
