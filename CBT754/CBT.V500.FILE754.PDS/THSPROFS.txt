/* REXX ----------------------------------------------------------*
 *                                                                *
 * NAME: THSPROFS (THS PROFile Search)                            *
 * TYPE: Dialog main driver                                       *
 *                                                                *
 * WRITTEN BY:  Henrik Salminen (THS)                             *
 *              Spadab, Box 593, S-101 26  Stockholm,  Sweden     *
 *              Date: 1993-12-29                                  *
 *                                                                *
 * DESCRIPTION:                                                   *
 *   This REXX reads the user profile dataset, searching only for *
 *   members with names ending with 'PROF'.  This is initiated    *
 *   from a data entry panel where search arguments are specified.*
 *   The members are opened as tables and scanned using standard  *
 *   ISPF table functions.  Hits are written into a temporary     *
 *   table which is finally displayed in a separate dialog        *
 *   (EFQPT).  There are several functions available from that    *
 *   table, both as primary and line commands, to conveniently    *
 *   change variables in the profiles of all APPLIDs.             *
 *                                                                *
 *   There is no practical problem to change even quite long      *
 *   variables through this dialog; up to 1000 characters(|) can  *
 *   be displayed and changed for EACH variable through functions *
 *   from the temporary table.                                    *
 *                                                                *
 *   Why has this REXX program (& dialog) been written?  Is there *
 *   really a need for it?  YES, certainly| One very common       *
 *   problem is to find and update all variables containing room  *
 *   number when a user moves which unfortunately is quite common *
 *   at our site at least|  And we are not alone...               *
 *                                                                *
 *   Many collegues from other companies use to complain about    *
 *   this problem every time we meet at, for instance, the TSO    *
 *   G.U.I.D.E. Conferences.  There is really a GREAT NEED for a  *
 *   tool to SEARCH & CHANGE VARIABLES|  The 7.3 option?  Forget  *
 *   it, it cannot SEARCH| We hope that IBM will eventually see   *
 *   the need and supply us with a tool for that purpose but      *
 *   until then we are not totally helpless at our installation   *
 *   at least cause we got THSPROFS|                              *
 *                                                                *
 *   As far as the creator of the dialog knows, this is the only  *
 *   existing tool to handle variables in all profile members for *
 *   all APPLIDs stored in the profile data set in a REASONABLY   *
 *   'user friendly' way|  The IBM alternative; 7.3, is frankly   *
 *   one of the least impressive IBM standard functions available *
 *   in ISPF|  It can only be used directly in the default APPLID *
 *   using the 7.3 option.  Other APPLIDs can be accessed if      *
 *   OPTION on the action bar on the primary option menu is used  *
 *   to change APPLID, a working solution but not a very          *
 *   convenient one since it requires the user to manually        *
 *   specify the APPLIDs and how many users are normally aware of *
 *   that information?|?  VERY FEW INDEED|  Further, the option   *
 *   7.3 can be really disastrous if used without the utmost      *
 *   care|  Why?  Well, let's look at one example:  if a          *
 *   truncated variable is changed via the 7.3 profile display,   *
 *   ONLY THE VISIBLE PART OF THE VARIABLE WILL BE WRITTEN BACK   *
 *   INTO THE PROFILE|| (See tutorial panel ISP7V010 in the IBM   *
 *   panellib.)  And the locate function is still rather basic    *
 *   even if it has been slightly improved in ISPF 4.1            *
 *                                                                *
 *                                                                *
 * PARAMETERS:  There are no parameters required.                 *
 *                                                                *
 *----------------------------------------------------------------*/

  Address ISPEXEC
  "CONTROL ERRORS RETURN"
  "VGET (ZAPPLID) ASIS"

  Call OBTAIN_THE_DSNAME_OF_THE_PROFILE_DATASET
  Call OBTAIN_THE_MEMBER_NAMES_IN_THE_PROFILE_DATASET
  Call MAIN_ROUTINE

  EXIT

/*----------------------------------------------------------------*/
MAIN_ROUTINE :

  Do FOREVER
   "DISPLAY PANEL(THSAPPLG)"
   If RC > 0 | ZCMD = "END" then LEAVE
   Call PRIMARY_COMMAND_GLOBAL_SEARCH
   End
  "TBEND" v_tab
  "TBEND" v_tabt

  RETURN
/*----------------------------------------------------------------*/
OBTAIN_THE_DSNAME_OF_THE_PROFILE_DATASET :

  PROFDSN = ''
  Address ISPEXEC "QBASELIB ISPPROF ID(PROFDSN)"
  If PROFDSN ¬= '' then NOP
  DDNAME = "ISPPROF "     /* set ddname to check  */
  X      = EFQDDN(DDNAME)
  If X  ¬= 8 then PARSE VAR X RETCODE NUMBER PROFDSN DUMMY
  Else do
   Say "No files allocated to DD-name" DDNAME
   EXIT 12
   End

  RETURN
/*----------------------------------------------------------------*/
OBTAIN_THE_MEMBER_NAMES_IN_THE_PROFILE_DATASET :

  v_tab  = "YXAZWQZ"  /* choose any nonsence name|  */
  "TBEND   " v_tab
  "TBCREATE" v_tab  "NAMES(MEMBER) WRITE"
  MEMVAR  = ""
  "LMINIT  DATAID(LMFILE)  DATASET("PROFDSN") ENQ(SHR)"
  "LMOPEN  DATAID("LMFILE") OPTION(INPUT)" ,
                 "LRECL(LRECL) RECFM(RECFM) ORG(ORGVAR)"
  LMRC = RC
  DO while LMRC = 0
   "LMMLIST DATAID("LMFILE") MEMBER(MEMVAR) STATS(NO)"
   LMRC = RC
   IF LMRC  = 0 & POS('PROF',MEMVAR) > 0 then do
    MEMBER = MEMVAR
    "TBADD" v_tab
    End
   End
  "LMMLIST DATAID("LMFILE")  OPTION(FREE)"
  "LMCLOSE DATAID("LMFILE")"
  "TBTOP" v_tab

  RETURN
/*----------------------------------------------------------------*/
PRIMARY_COMMAND_GLOBAL_SEARCH :

  Call CREATE_TEMPORARY_TABLE_NBR1
  "TBTOP"   v_tab
  "TBQUERY" v_tab "ROWNUM(AROWG)"

  If AROWG > 0 then do i2 = 1 to AROWG
   "TBSKIP"  v_tab
   Call SCAN_THE_PROFILE
   end

  "TBTOP"   v_tabt
  "TBQUERY "v_tabt "ROWNUM(AROX)"
  If arox > 0 then  arox = FORMAT(arox)

  If arox > 0 then do
   "CONTROL DISPLAY SAVE"
   Call EFQPT  v_tabt  /* separate dialog for variable maint. */
   "TBEND"     v_tabt
   "CONTROL DISPLAY RESTORE"
   end
  Else do
   ZEDLMSG = ,
     "No variables found with specified value:  '"THSAPP1"'"
   "SETMSG MSG(ISRZ001)"
   end

  "TBTOP" v_tab

  RETURN
/*----------------------------------------------------------------*/
CREATE_TEMPORARY_TABLE_NBR1 :

  v_tabt = "AXZWZQ"
  "TBEND"    v_tabt
  "TBCREATE" v_tabt "NAMES(VN,VAR,APPLID,PLC) WRITE"
  "TBSORT"   v_tabt "FIELDS(APPLID,C,A VN,C,A)"

  RETURN
/*----------------------------------------------------------------*/
/* Scan the profile for specified character string                */
SCAN_THE_PROFILE :

  MEMBER = STRIP(MEMBER)
  If MEMBER = "ZQWXPROF" then RETURN
  APPLID = SUBSTR(MEMBER,1,POS('PROF',MEMBER)-1)
  If APPLID = "ZQWX" then RETURN   /* not really needed */
  qtab = MEMBER
  PLC  = ""

  If  MEMBER = "ISRPROF"  | ,
      MEMBER = "ISPPROF"  | ,
      MEMBER = "ISPSPROF" then do
  /* Why this?  Well, these members are 'occupied' during the   */
  /* session so the only way of accessing them is to do it in   */
  /* a copy instead.                                            */
   If MEMBER = "ISPPROF"  then ,
    "TBOPEN "  MEMBER  "WRITE LIBRARY("DDNAME") SHARE"
   qtab = "ZQWXPROF"
   "TBSAVE" MEMBER "NAME("qtab") REPLCOPY LIBRARY("DDNAME") PAD(20)"
   If MEMBER = "ISPPROF" then  "TBEND  "  MEMBER
   End

  "TBOPEN " qtab "NOWRITE LIBRARY("DDNAME") SHARE"
  "TBTOP  " qtab
  "TBSKIP " qtab
  "TBGET  " qtab "SAVENAME(EXTVARS)"
  EXTVARS = STRIP(STRIP(EXTVARS,'T',')'),'L','(')
  "VGET (THSAPP1,THSAPP2) PROFILE"
  Do ixix = 1 to words(EXTVARS)
   VN  = STRIP(SUBWORD(EXTVARS,ixix,1),'T',X2C('00')) /* strip x'00'*/
   /*                                                            */
   /* NOTE: The previous instruction became necessary after IBM  */
   /*       introduced variables ZGPCOLR and ZGHCOLR (ISPF 4.1)  */
   /*       that have a DEFECTIVE(?) VARIABLE NAME LENGTH FIELD  */
   /*       in the supplied version since it contains x'08' in   */
   /*       spite of the names actually being 7 pos long|        */
   /*                                                            */
   /*       The REXX VALUE built in function can presently NOT   */
   /*       be used for such strange variables, that is the      */
   /*       reason for this extra STRIP.                         */
   /* ********************************************************** */
   /*                                                            */
   /*       IBM might be of the opinion that the new variables   */
   /*       mentioned above are for ISPF internal use and that   */
   /*       they should be of no concern for the users and that  */
   /*       might even be the case|  But I feel that an effort   */
   /*       should be made by IBM to change the VALUE function   */
   /*       so that it can handle ALL variables because I think  */
   /*       that we users should be able to USE supplied         */
   /*       functions, at least as long as there are no such     */
   /*       restrictions described in the documentation of       */
   /*       the functions (in this case the REXX VALUE function).*/
   /*                                                            */
   VAR = VALUE(VN)
   If APPLID = "ISR" then "VGET ("VN") PROFILE"
   If THSAPP1 ¬= "" then do
    If THSAPP1 ¬= "" & THSAPP1A = "" & ,
       VN  ¬= "THSAPP1" & POS(THSAPP1,VAR) > "0" then ,
         "TBADD " v_tabt "ORDER"
    If THSAPP1 ¬= "" & THSAPP1A ¬= ""  then do
       /* two variable fields to be searched  */
     If SUBSTR(THSAPP1A,1,1) = "A" then do
      If (POS(THSAPP1,VAR)   > "0" & VN ¬= 'THSAPP1') & ,
         (POS(THSAPP10,VAR)  > "0" & VN ¬= 'THSAPP10') then ,
         "TBADD " v_tabt "ORDER"
      end
     If SUBSTR(THSAPP1A,1,1) = "O" then do
      If (POS(THSAPP1,VAR)   > "0" & VN  ¬= 'THSAPP1') | ,
         (POS(THSAPP10,VAR)  > "0" & VN  ¬= 'THSAPP10') then ,
         "TBADD " v_tabt "ORDER"
      end
     end
    end
   If THSAPP2 ¬= ""  &  POS(THSAPP2,VN)  > "0" then ,
         "TBADD " v_tabt "ORDER"
   End

  "TBEND  "  qtab

  RETURN
/*----------------------------------------------------------------*/
