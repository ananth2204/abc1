/*  rexx exec called by Amdahl Cache Utility to create select group  */
/*  (C) COPYRIGHT AMDAHL CORPORATION  1995. All Rights Reserved      */
/*  written:  February 1995                                          */
/*  author :  Chuck Baumann                                          */
/*  Panels :  CSHMAN8, CSHMAN9                                       */
/*  Help   :  CSHHMAN8                                               */
/*  Changes:  V1.0 -- Initial functions                              */
/*  95/02/02  V2.3 -- Create a selection group                       */
/*-------------------------------------------------------------------*/
arg odsn        /* name of table data set */

address 'ISPEXEC' 'TBQUERY MEMBTAB ROWNUM(ROWS) POSITION(CROW)'
if rc = 12                    /* table not open              */
then call Modify_Old_Member   /* so display a list of members*/
else
  do
    address 'ISPEXEC' 'TBTOP MEMBTAB'
    address 'ISPEXEC' 'TBDISPL MEMBTAB PANEL(CSHMAN8) CURSOR(MEMNAME)'
    cc = rc

    if memapp = 'Y'
    then call Update_Existing_Member
    else call Create_New_Member
  end
return

/*------------------------------------------------------------------*/
/*  Append to a  member in the table library for selection process. */
/*  The existing member is copied to the new member and the selected*/
/*  controllers are added to the old member.                        */
/*------------------------------------------------------------------*/
Update_Existing_Member:

do while cc < 8
  newname = 'G' || memname   /* to identify groups in table lib */

  sel = 'Y'
  do while sel = 'Y'       /* ZTDSELS is the system variable which */
    if ZTDSELS ¬= 0        /* contains a count of the number of    */
    then                   /* lines that were modified in the table*/
      do
        user_comment = tcm             /* get new value from panel */
        user_ssid    = tbssid
        user_tbmdl   = tbmdl
        user_address = tbu
        address 'ISPEXEC' 'TBGET MEMBTAB'
        tbssid = user_ssid
        tbmdl  = user_tbmdl
        tcm = user_comment
        tbu = right(user_address,4,0)
        taddr = x2d(tbu)
        address 'ISPEXEC' 'TBPUT MEMBTAB'   /* update table */

        if ZTDSELS = 1     /* processed last line with action */
        then address 'ISPEXEC' 'SETMSG MSG(CSHM030) COND'

        address 'ISPEXEC' 'TBDISPL MEMBTAB CURSOR(TCM)'
        cc = rc
      end
    else sel = 'N'
  end
  if substr(ZCMD,1,3) = 'CAN' | cc = 8  /* CANCEL or PF3 */
  then cc = 8                     /* just get out */
  else do
         address 'ISPEXEC' 'TBOPEN' newname 'WRITE'
         if rc = 12
         then say 'Enqueue failed for table' newname
         else do
                do rows
                  address 'ISPEXEC' 'TBSKIP MEMBTAB'
                  address 'ISPEXEC' 'TBGET MEMBTAB'
                  address 'ISPEXEC' 'TBADD' newname
                end
                address 'ISPEXEC' 'TBCLOSE' newname
                if rc = 0
                then do
                       address 'ISPEXEC' 'SETMSG MSG(CSHM031) COND'
                       cc = 8       /* set so we can exit panel */
                     end
                else do
                       address 'ISPEXEC' 'SETMSG MSG(CSHM037) COND'
                       cc = 8       /* set so we can exit panel */
                     end
              end
       end
end
return
/*------------------------------------------------------------------*/
/*  Create a new member in the table library for selection process. */
/*  The user can add comments to each selected controller to help   */
/*  identify why it is part of this selection member.               */
/*------------------------------------------------------------------*/
Create_New_Member:
address 'ISPEXEC' 'TBTOP MEMBTAB'
cc = 0

do while cc < 8
/*
  address 'ISPEXEC' 'TBDISPL MEMBTAB PANEL(CSHMAN8) CURSOR(MEMNAME)'
  cc = rc
*/
  if memrep = 'Y'          /* replace duplicates */
  then replace = 'REPLACE'
  else replace = ''
  newname = 'G' || memname   /* to identify groups in table lib */

  sel = 'Y'
  do while sel = 'Y'       /* ZTDSELS is the system variable which */
    if ZTDSELS ¬= 0        /* contains a count of the number of    */
    then                   /* lines that were modified in the table*/
      do
        user_comment = tcm             /* get new value from panel */
        user_ssid    = tbssid
        user_tbmdl   = tbmdl
        user_address = tbu
        address 'ISPEXEC' 'TBGET MEMBTAB'
        tbssid = user_ssid
        tbmdl  = user_tbmdl
        tcm = user_comment
        tbu = right(user_address,4,0)
        taddr = x2d(tbu)
        address 'ISPEXEC' 'TBPUT MEMBTAB'   /* update table */

        if ZTDSELS = 1     /* processed last line with action */
        then address 'ISPEXEC' 'SETMSG MSG(CSHM030) COND'

        address 'ISPEXEC' 'TBDISPL MEMBTAB CURSOR(TCM)'
        cc = rc
      end
    else sel = 'N'
  end
  if substr(ZCMD,1,3) = 'CAN' | cc = 8  /* CANCEL or PF3 */
  then cc = 8                     /* just get out */
  else do
         address 'ISPEXEC' 'TBCREATE' newname ,
                  'NAMES(TBMDL,TBSSID,TBU,TADDR,TCM) WRITE' replace
         if rc = 8               /* table already exists-no replace */
         then address 'ISPEXEC' 'SETMSG MSG(CSHM029) COND'
         else
         if rc = 12
         then say 'Enqueue failed for table' newname
         else do
                do rows
                  address 'ISPEXEC' 'TBSKIP MEMBTAB'
                  address 'ISPEXEC' 'TBGET MEMBTAB'
                  address 'ISPEXEC' 'TBADD' newname
                end
                address 'ISPEXEC' 'TBCLOSE' newname
                if rc = 0
                then do
                       address 'ISPEXEC' 'SETMSG MSG(CSHM028) COND'
                       cc = 8       /* set so we can exit panel */
                     end
              end
       end
end
return
/*------------------------------------------------------------------*/
/*  User did not select any controllers for inclusion in a selection*/
/*  member.  So show them a panel with a list of previously defined */
/*  groups.                                                         */
/*------------------------------------------------------------------*/
Modify_Old_Member:
cmd = 'ENTER'
address 'ISPEXEC' 'DISPLAY PANEL(CSHMAN8) CURSOR(MEMNAME) COMMAND(CMD)'
address 'ISPEXEC' 'TBCREATE GRPTAB NAMES(ACT,MEMBR) NOWRITE REPLACE'
/*------------------------------------------------------------------*/
/*  Use outtrap to get output from LISTD xxx MEM command             */
/*  This will add existing ctlrs to the new table                    */
/*------------------------------------------------------------------*/
  dummy = outtrap('gline.','*')

  address 'TSO' 'LISTD' odsn 'MEM'
  act = ''

  do i = 7 to gline.0             /* first 6 lines are data set info */
    mname = strip(gline.i,'B',' ')
    if substr(mname,1,1) = 'G'
    then do
           membr = substr(mname,2,length(mname)-1)
           address 'ISPEXEC' 'TBADD GRPTAB'
         end
  end
  address 'ISPEXEC' 'ADDPOP ROW(6)'
  zwinttl = 'Existing Selection Group Members'
  address 'ISPEXEC' 'TBTOP GRPTAB'
  selmem = ''

  do while rc < 8
    address 'ISPEXEC' 'TBDISPL GRPTAB PANEL(CSHGRPL) CURSOR(ACT)'
    sel = 'Y'
    do while sel = 'Y'
      if ZTDSELS ¬= 0
      then do
             selmem = membr
             address 'ISPEXEC' 'TBDISPL GRPTAB'
           end
      else sel = 'N'
    end
    if ZCMD = 'L'
    then do
           membr = LOCATE||'*'
           address 'ISPEXEC' 'TBSCAN GRPTAB ARGLIST(MEMBR)' ,
                   'CONDLIST(GE) ROWID(LOCROW)'
           if rc = 0
           then do
                  address 'ISPEXEC' 'TBTOP GRPTAB'
                  address 'ISPEXEC' 'TBSKIP GRPTAB ROW('locrow')'
                end
           else
           if rc = 8
           then do
                  address 'ISPEXEC' 'TBBOTTOM GRPTAB'
                  rc = 0
                end
         end
  end

  address 'ISPEXEC' 'REMPOP'
  address 'ISPEXEC' 'TBCLOSE GRPTAB'

  if selmem ¬= ''
  then do
         realmem = 'G' || selmem
         memname = selmem
         address 'ISPEXEC' 'TBOPEN' realmem
         if rc = 12
         then do
                address 'ISPEXEC' 'TBCLOSE' realmem
                address 'ISPEXEC' 'TBOPEN' realmem
              end
         address 'ISPEXEC' 'TBSORT' realmem 'FIELDS(TADDR,N,A)'
         address 'ISPEXEC' 'TBTOP' realmem
         call Process_Members
         address 'ISPEXEC' 'TBCLOSE' realmem
       end
return

Process_Members:
  do while rc < 8
    address 'ISPEXEC' 'TBDISPL' realmem 'PANEL(CSHMAN9) CURSOR(TCM)'
    sel = 'Y'
    do while sel = 'Y'
      if ZTDSELS ¬= 0
      then do
             if ACT = ' '
             then do
                    user_ssid    = tbssid
                    user_tbmdl   = tbmdl
                    user_address = tbu
                    user_comment = tcm
                    address 'ISPEXEC' 'TBGET' realmem
                    tbssid = user_ssid
                    tbmdl  = user_tbmdl
                    tcm = user_comment
                    tbu = right(user_address,4,0)
                    taddr = x2d(tbu)
                    address 'ISPEXEC' 'TBPUT' realmem
                    if rc = 0
                    then address 'ISPEXEC' 'SETMSG MSG(CSHM031) COND'
                    else address 'ISPEXEC' 'SETMSG MSG(CSHM032) COND'
                  end
             else
             if ACT = 'I' | ACT = 'A'
             then do
                    tcm = ''
                    tbu = right(tbu,4,0)
                    tbmdl = '3990'
                    tbssid = ''
                    taddr = 0
                    address 'ISPEXEC' 'TBADD' realmem
                    if rc = 0
                    then address 'ISPEXEC' 'SETMSG MSG(CSHM031) COND'
                    else address 'ISPEXEC' 'SETMSG MSG(CSHM032) COND'
                  end
             if ACT = 'D'
             then do
                    address 'ISPEXEC' 'TBDELETE' realmem
                    if rc = 0
                    then address 'ISPEXEC' 'SETMSG MSG(CSHM031) COND'
                    else address 'ISPEXEC' 'SETMSG MSG(CSHM032) COND'
                  end
             address 'ISPEXEC' 'TBDISPL' realmem 'CURSOR(ACT)'
           end
      else sel = 'N'
    end
  end
return
