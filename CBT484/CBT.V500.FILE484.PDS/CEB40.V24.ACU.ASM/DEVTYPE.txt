DEVTYPE CSECT                         *
DEVTYPE AMODE 31
DEVTYPE RMODE ANY
*---------------------------------------------------------------------
* (C) COPYRIGHT AMDAHL CORPORATION  1995. All Rights Reserved
* Written by:  Chuck Baumann ------------------July 1992    ----------
* Version:     2.2
*
*      An external rexx function model.  Scans ucb chain until volser
*      matches passed argument.   Returns the device type 3380 or 3390
*      and number of cylinders of device and an internal return code.
*
* Register usage: (on entry)
*   R0     -  address of environment block
*   R1     -  address of the external function parameter list
*   R2-12  -  unpredictable
*   R13    -  register save area
*   R14    -  return address
*   R15    -  entry point address
* Register usage:
*   R2     -  address of argument
*   R3     -  length  of argument
*   R7     -  addressability for DCE mapping of UCB
*   R8     -  addressability for UCB
*   R9     -  addressability for evalblock
*   R10    -  addressability for the parsed argument list
*   R11    -  addressability for efpl mapping macro (irxefpl)
*   R12    -  base
*---------------------------------------------------------------------
         YREGS
         SAVE  (14,12)                 Standard Linkage
         LR    R12,R15
         USING DEVTYPE,R12
         ST    R13,SAVE+4
         LA    R14,SAVE
         ST    R14,8(R13)
         LR    R13,R14
*----------------------------------------------------------------------
*     The format of the parsed argument list this function receives   *
*     is address/length pairs until terminated by a doubleword of     *
*     high values.                                                    *
*     DS   A      address of arg n                                    *
*     DS   F      length  of arg n                                    *
*     DC   X'FFFFFFFFFFFFFFFF'                                        *
*----------------------------------------------------------------------
         TITLE '  REXX EXTENSION -- RETURN DEVICE TYPE OF DASD VOLSER'
         USING EFPL,R1
         L     R10,EFPLARG             address of parsed argument list
         L     R9,EFPLEVAL             address of fullword ptr
         L     R9,0(,R9)               address of the evalblock
         L     R2,0(,R10)              address of arg 1
         ST    R2,SAVEARG1             save so i can reuse r2
         L     R3,4(,R10)              length  of arg 1
         ST    R3,SAVER3
*  If length of input data is greater than 125 you can call the IRXRLT
*  routine to obtain a larger evaluation block.
         CH    R3,=H'125'              is arg 1 length > 125?
         BH    ERREXIT                 yes  too big for this function
         XC    WORKX(100),WORKX        init to zeros prior to scan
*
UCBSCAN  EQU   *
*
* -- This section of code invokes the extended UCB scan services via
* -- the UCBSCAN macro.  This handles dynamic UCBs and 4 digit addr.
*
         L     R3,SAVEARG1             restore addr of passed arg 1
         LA    R8,48                   length of DCE area
         UCBSCAN COPY,WORKAREA=WORKX,UCBAREA=UCB48,VOLSER=(R3),        X
               DCEAREA=DCE,DCELEN=DCELENG,DEVCLASS=DASD,               X
               DYNAMIC=YES,RANGE=ALL
         LTR   R15,R15                 test if dasd ucb was returned
         BNZ   RESULT                  no ucb returned; go to result
*
         LA    R8,UCB48                get address of ucb
         USING UCBOB,R8                addressability for ucb
         MVC   OUTAREA(2),UCBCHAN      move unit address to output
         DROP  R8
GETMODEL EQU   *
         LA    R7,DCE                  addressability for dasd cl ext
         USING DCEMAP,R7
         MVC   OUTMODEL,DCEMDRDT       move MDR device type code
         MVC   OUTCUMOD,DCECUID        move control unit id
         MVC   OACTFEA,DCEACTFE        move active features byte
         MVC   ODEVCYL,DCEUDCYL        data + alt cylinders
*
*  Fill in required info in the EVALBLOCK before returning.
*
RESULT   EQU   *
         MVC   16(L'OUTAREA,R9),OUTAREA move result to EVDATA
         LA    R1,L'OUTAREA            get length of returned output
         ST    R1,8(,R9)               move length to  EVLEN
         SR    R15,R15                 set return code to 0
EXIT     EQU   *
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)
ERRTYPE  EQU   *
         MVI   OUTAREA+8,X'02'         move internal rc to output
         B     RESULT
ERREXIT  EQU   *
         MVI   OUTAREA+8,X'08'         argument too long
         B     RESULT
         EJECT
SAVE     DC    18F'0'
SAVER3   DS    F
SAVEARG1 DS    F
*
OUTAREA  DS    0CL16
ODEVADR  DC    XL2'0'
OUTMODEL DC    XL1'0'
OUTCUMOD DC    XL1'0'
OACTFEA  DC    XL1'0'
ODEVCYL  DC    XL2'FFFF'
         DC    XL9'0'
         SPACE 3
WORKX    DC    100X'00'
DCE      DS    CL48
DCELENG  DC    H'48'
UCB48    DS    CL48
         DS    0F
UCBA     DS    A
DEV      DS    XL1
         DS    0F
P1       DS    A
P2       DS    A
P3       DS    A
         LTORG
*
********************************************************************
         IRXEFPL
         DSECT
         IEFUCBOB DEVCLAS=DA
DCEMAP   IECDDCE
         CVT   DSECT=YES,PREFIX=YES
         END   DEVTYPE
