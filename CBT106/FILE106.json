{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011239000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE106.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE106.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x03'", "DS1TRBAL": "b'\\xd8\\xe2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xb3\\x00\\x00\\x00\\xb3\\x00\\x04\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06?\\x06\\x06\\x00B\\x00,\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-04T06:06:00", "lines": 66, "newlines": 44, "modlines": 0, "user": "SBGCSC"}, "text": "\nDisclaimer:\n       This code has worked at Sungard.  There is no guarantee that the\n       code will work anywhere else.  Neither Sungard nor the author may\n       be held reponsible for any damage caused by this code.\n\nPLEASE, do not distribute modified versions of this code.  If you have\nany improvements, send them to me.  That way all changes can be\nincorporated into a single program source.\n\nTemporary modifications from Sam Golob, until Art fixes this himself.\nThese were done with an OK from Art.\n       1.  Fixed PRIME macro to branch to the first instruction.\n             (Wrong version had been included here.)\n       2.  In PRIME changed REGS macro to YREGS, which is distributed\n             by IBM with DFP 3.2 and afterwards.\n       3.  Added LTORG in all 3 programs to assemble the literal\n             =CL8'DATASET' properly.\n       4.  Added my own assembly and run JCL members.\n       5.  Added CLISTR, CLISTRB, RACCLIST members.  CLISTR is a\n             TSO CLIST to run these programs, but the environment\n             must be authorized and the program names must be\n             entered in IKJTSO00 under AUTHPGM names, or zapped\n             into IKJEFTE8 (csect of IKJTABLS) in an authorized\n             STEPLIB.  CLISTRB was meant to run under\n             TSO-in-batch, so that you could create a special\n             IKJTABLS in an authorized STEPLIB that wouldn't\n             interfere with your TSO session.  RACCLIST is a\n             TSO-in-batch sample job.\n\n   These programs were written by Arthur Tansky at:\n        Sungard\n        600 Laurel Oak Road\n        Voorhees, NJ  08043\n        (609) 566-3611   new phone\n\n--------------------------------------------------------------------------------\n\nThe programs herein return the level of access that a third-party\nuser has to a RACF profile.  There are three versions:\n\nRACCESS5 is for pre-RACF 1.8 users.\nRACCESS7 is for user at at least RACF 1.8.\nRACCESS6 is for any user, but has been performance tuned for checking\n  several profiles for a single userid.  Userids specified after the\n  first will be ignored.\n\nRACCESSR is sample execution JCL.\nRACCESSS is sample execution JCL from Sam Golob, to add SYSIN DD * etc.\nASM is a sample job to assemble the programs.\nASMCSC is a sample job to assemble the programs from Sam Golob.\n\nAll other members (not counting this one) are macros used in the\nassembly.\n\nSuggestion:  Replace the \"FILEXXX\" in member PRIME with the CBT file\nnumber this program is from.  Then you can tell from the object code\nwhere the source came from.\n\nSample output:\n\n  USERID    CLASS                   RESOURCE NAME                  ACCESS LEVEL\n USER01    DASDVOL   VOLSER                                        NO ACCESS\n USER02    DATASET   SYS1.PROCLIB                                  READ\n USER02    DATASET   SYS1.PARM*                                    NO ACCESS\n USER02    FACILITY  $DASDI.WRK001                                 ALTER\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x89\\t\\x9f\\x12\\x00\\x00(\\x00(\\x00\\x00\\xc1\\xe3\\xc1\\xd5\\xe2\\xd2\\xe8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1989-04-09T12:00:00", "lines": 40, "newlines": 40, "modlines": 0, "user": "ATANSKY"}, "text": "//JOBASM   JOB\n//*\n//ASM      PROC APARM=\n//ASM      EXEC PGM=IEV90,\n//             PARM='BATCH,NOTERM,DECK,NOLOAD,LINECNT=55,&APARM'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,\n//             DCB=BLKSIZE=32720\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=THIS.DATA.SET,DISP=SHR              <============\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT2   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT3   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSPRINT DD  SYSOUT=*\n//SYSPUNCH DD  DSN=&SYSGO,SPACE=(TRK,(10,10),RLSE),\n//             DCB=(LRECL=80,BLKSIZE=2560,RECFM=FB),\n//             UNIT=SYSDA,DISP=(,PASS)\n//**********************************************************************\n//   PEND\n//LKED     PROC LPARM=\n//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET,MAP,&LPARM'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SYSLMOD  DD  DSN=AUTHORIZED.LIBRARY(&MEM),DISP=OLD   <============\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&SYSGO,DISP=SHR\n//         DD  DDNAME=SYSIN\n//*\n//          PEND\n//*\n//STEP1A   EXEC ASM\n//ASM.SYSIN DD  DSN=THIS.DATA.SET(RACCESS5),DISP=SHR   <============\n//STEP1L  EXEC LKED,MEM=RACCESS5,LPARM='AC=1'\n//*\n//STEP2A   EXEC ASM\n//ASM.SYSIN DD  DSN=THIS.DATA.SET(RACCESS6),DISP=SHR   <============\n//STEP2L  EXEC LKED,MEM=RACCESS6,LPARM='AC=1'\n//*\n//STEP3A   EXEC ASM\n//ASM.SYSIN DD  DSN=THIS.DATA.SET(RACCESS7),DISP=SHR   <============\n//STEP3L  EXEC LKED,MEM=RACCESS7,LPARM='AC=1'\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMCSC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x16\\x18\\x00)\\x00(\\x00\\x08\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T16:18:00", "lines": 41, "newlines": 40, "modlines": 8, "user": "SBGCSC"}, "text": "//SBGCSCJ JOB (A006,SYTM,99,99),S-GOLOB,\n//        CLASS=Q,MSGCLASS=V,NOTIFY=&SYSUID\n/*DIST ROOM-25\n//ASM      PROC APARM=\n//ASM      EXEC PGM=IEV90,\n//             PARM='BATCH,NOTERM,DECK,NOLOAD,LINECNT=55,&APARM'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,\n//             DCB=BLKSIZE=32720\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SBGCSC.C366#01.FILE106,DISP=SHR     <============\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT2   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT3   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSPRINT DD  SYSOUT=*\n//SYSPUNCH DD  DSN=&SYSGO,SPACE=(TRK,(10,10),RLSE),\n//             DCB=(LRECL=80,BLKSIZE=2560,RECFM=FB),\n//             UNIT=SYSDA,DISP=(,PASS)\n//**********************************************************************\n//   PEND\n//LKED     PROC LPARM=\n//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET,MAP,&LPARM'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SYSLMOD  DD  DSN=SYS2.MVSP.SDTS.USERLIB(&MEM),DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&SYSGO,DISP=SHR\n//         DD  DDNAME=SYSIN\n//*\n//          PEND\n//*\n//STEP1A   EXEC ASM\n//ASM.SYSIN DD  DSN=SBGCSC.C366#01.FILE106(RACCESS5),DISP=SHR\n//STEP1L  EXEC LKED,MEM=RACCESS5,LPARM='AC=1'\n//*\n//STEP2A   EXEC ASM\n//ASM.SYSIN DD  DSN=SBGCSC.C366#01.FILE106(RACCESS6),DISP=SHR\n//STEP2L  EXEC LKED,MEM=RACCESS6,LPARM='AC=1'\n//*\n//STEP3A   EXEC ASM\n//ASM.SYSIN DD  DSN=SBGCSC.C366#01.FILE106(RACCESS7),DISP=SHR\n//STEP3L  EXEC LKED,MEM=RACCESS7,LPARM='AC=1'\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLISTR": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94\\x06/\\x00\\x94\\x06/\\x18\\x11\\x00\\r\\x00\\x08\\x00\\t\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-03-03T00:00:00", "modifydate": "1994-03-03T18:11:00", "lines": 13, "newlines": 8, "modlines": 9, "user": "SBGCSC"}, "text": "PROC 1 MEMB DST('SBGCSC.A.DATA') LIB('SYS2.MVSP.SDTS.USERLIB')\n/*  IN ORDER TO EXECUTE THIS CLIST UNDER TSO, RACCESS5, 6, 7 HAVE\n/*  TO BE AUTHORIZED TO BE CALLED AS AN AUTHORIZED PROGRAM IN IKJTSOXX\n/*  CONTROL LIST PROMPT SYMLIST CONLIST\nCONTROL NOLIST NOPROMPT\nSET &DMMB = &STR('&DST(&MEMB)')\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSIN) SH REUSE DA(&DMMB)\n/*    $$ RACCESS6\n      CALL '&LIB(RACCESS6)'\nWRITE\nWRITE CONDITION CODE WAS &LASTCC\nFREE F(SYSIN SYSPRINT)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLISTRB": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x94\\x06/\\x00\\x94\\x06/\\x18!\\x00\\x0c\\x00\\x08\\x00\\n\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1994-03-03T00:00:00", "modifydate": "1994-03-03T18:21:00", "lines": 12, "newlines": 8, "modlines": 10, "user": "SBGCSC"}, "text": "PROC 1 MEMB DST('SBGCSC.A.DATA') LIB('SYS2.MVSP.SDTS.USERLIB')\n/*  IN ORDER TO EXECUTE THIS CLIST UNDER TSO, RACCESS5, 6, 7 HAVE\n/*  TO BE AUTHORIZED TO BE CALLED AS AN AUTHORIZED PROGRAM IN IKJTSOXX\n/*  CONTROL LIST PROMPT SYMLIST CONLIST\nCONTROL NOLIST NOPROMPT\nSET &DMMB = &STR('&DST(&MEMB)')\nALLOC F(SYSIN) SH REUSE DA(&DMMB)\n/*    $$ RACCESS6\n      CALL '&LIB(RACCESS6)'\nWRITE\nWRITE CONDITION CODE WAS &LASTCC\nFREE F(SYSIN)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LDROP": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x89\\t\\x9f\\x12\\x00\\x00<\\x00<\\x00\\x00\\xc1\\xe3\\xc1\\xd5\\xe2\\xd2\\xe8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1989-04-09T12:00:00", "lines": 60, "newlines": 60, "modlines": 0, "user": "ATANSKY"}, "text": "         MACRO\n&NAME    LDROP &W1,&W2,&W3,&W4,&W5,&W6,&W7,&W8\n         GBLB  &LUSED\n         GBLC  &USENM(50),&USEW(25)\n         LCLA  &A,&B,&C,&D,&E\n         LCLC  &X1,&COMMA\n         AIF   (&LUSED).GO\n         AGO   .LDRM000\n.GO      ANOP\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    DS    0H .           DEFINE NAME\n.NONAME  ANOP\n         AIF   (N'&SYSLIST GT 8).LDRM001\n         AIF   (N'&SYSLIST LT 1).LDRM002\n&A       SETA  1\n&C       SETA  N'&SYSLIST\n.OKX     AIF   ('&SYSLIST(&A)' EQ '').LDRM003\n&A       SETA  &A+1\n         AIF   (&A LE &C).OKX\n.GEN     ANOP\n&B       SETA  1\n.NEXT    ANOP\n&A       SETA  1\n.FDROP   AIF   ('&USEW(&A)' EQ '&SYSLIST(&B)').HDROP\n&A       SETA  &A+1\n         AIF   (&A LE 25).FDROP\n         AGO   .LDRM004\n.HDROP   ANOP\n&D       SETA  (&A*2)-1\n&E       SETA  &D+1\n&X1      SETC  '&X1'.'&COMMA'.'&SYSLIST(&B)'\n&COMMA   SETC  ','\n.CLOSEUP ANOP\n&USEW(&A) SETC '&USEW(&A+1)'\n&USENM(&D) SETC '&USENM(&D+2)'\n&USENM(&E) SETC '&USENM(&E+2)'\n&A       SETA  &A+1\n&D       SETA  (&A*2)-1\n&E       SETA  &D+1\n         AIF   ('&USEW(&A)' EQ '').NEXTB\n         AIF   (&A LE 25).CLOSEUP\n.NEXTB   ANOP\n&B       SETA  &B+1\n         AIF   (&B LE &C).NEXT\n.GENUSE  DROP  &X1            GEN DROP STMT\n         MEXIT\n.LDRM000 MNOTE 12,'LDROP ERROR - LUSE NEVER USED TO ESTABLISH BASE REG'\n         MEXIT\n.LDRM001 MNOTE 12,'OPERAND ERROR - TOO MANY OPERANDS'\n         AGO   .OPFIELD\n.LDRM002 MNOTE 12,'OPERAND ERROR - AT LEAST 1 REGISTER NUMBER REQUIRED'\n         AGO   .OPFIELD\n.LDRM003 MNOTE 12,'OPERAND ERROR - NULL OPERAND'\n         AGO   .OPFIELD\n.LDRM004 MNOTE 12,'LDROP ERROR - REGISTER &SYSLIST(&B) NEVER LUSED'\n         AGO   .OPFIELD\n.OPFIELD MNOTE *,'OPERAND LIST FOLLOWS - &SYSLIST(1),&SYSLIST(2),&SYSLI*\n               ST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&S*\n               YSLIST(8)'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LUSE": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x89\\t\\x9f\\x12\\x00\\x00A\\x00A\\x00\\x00\\xc1\\xe3\\xc1\\xd5\\xe2\\xd2\\xe8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1989-04-09T12:00:00", "lines": 65, "newlines": 65, "modlines": 0, "user": "ATANSKY"}, "text": "         MACRO\n&NAME    LUSE  &WHERE,&W1,&W2\n         GBLB  &LUSED\n         GBLC  &USENM(50),&USEW(25)\n         LCLA  &A,&B,&C,&D,&E\n         LCLC  &X1,&X2\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    DS    0H .           DEFINE NAME\n.NONAME  ANOP\n         AIF   (N'&SYSLIST GT 8).LUSM001\n         AIF   (N'&SYSLIST LT 2).LUSM002\n&A       SETA  1\n&C       SETA  N'&SYSLIST\n.OKX     AIF   ('&SYSLIST(&A)' EQ '').LUSM003\n&A       SETA  &A+1\n         AIF   (&A LE &C).OKX\n&E       SETA  K'&WHERE\n         AIF   (&E GT 8).LUSM004\n&X1      SETC  '&WHERE'\n.GEN     ANOP\n&B       SETA  2\n&E       SETA  0\n.NEXT    ANOP\n&A       SETA  1\n&D       SETA  1\n.FNULL   AIF   ('&USEW(&A)' EQ '').HNULL\n         AIF   ('&USEW(&A)' EQ '&SYSLIST(&B)').MATCH\n&A       SETA  &A+1\n&D       SETA  (&A*2)-1\n         AIF   (&A LE 25).FNULL\n         AGO   .LUSM005\n.MATCH   MNOTE 0,'** WARNING **  REGISTER &USEW(&A) LUSED AS BASE FOR &*\n               USENM(&D)&USENM(&D+1) -'\n         MNOTE 0,'               NEW USING CREATED'\n.HNULL   ANOP\n&USENM(&D)   SETC '&X1'\n&USENM(&D+1) SETC '&X2'\n&USEW(&A)    SETC '&SYSLIST(&B)'\n         AIF   (&LUSED).GENUSE\n         SPACE 1\n*------> LUSE ENVIRONMENT ESTABLISHED <------\n         SPACE 1\n&LUSED   SETB  1\n.GENUSE  ANOP\n         USING &X1&X2,&SYSLIST(&B) .   GEN USING STMT\n&B       SETA  &B+1\n&E       SETA  &E+4096\n&X2      SETC  '+'.'&E'\n         AIF   (&B LE &C).NEXT\n         MEXIT\n.LUSM001 MNOTE 12,'OPERAND ERROR - TOO MANY OPERANDS'\n         AGO   .OPFIELD\n.LUSM002 MNOTE 12,'OPERAND ERROR - AT LEAST 2 OPERANDS REQUIRED'\n         AGO   .OPFIELD\n.LUSM003 MNOTE 12,'OPERAND ERROR - OPERAND &A IS NULL'\n         AGO   .OPFIELD\n.LUSM004 MNOTE 12,'OPERAND ERROR - OPERAND 1 IS LONGER THAN 8 CHARS'\n         AGO   .OPFIELD\n.LUSM005 MNOTE 12,'LUSE USER ERROR - TOO MANY LUSE WITHOUT LDROP'\n         INUSE\n         MEXIT\n.OPFIELD MNOTE *,'OPERAND LIST FOLLOWS - &SYSLIST(1),&SYSLIST(2),&SYSLI*\n               ST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&S*\n               YSLIST(8),&SYSLIST(9)'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRIME": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x17\\x08\\x00=\\x00=\\x00=\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T17:08:00", "lines": 61, "newlines": 61, "modlines": 61, "user": "SBGCSC"}, "text": "         MACRO\n&NAME    PRIME &REG1,&REG2,&REG3,&LV=72,&AREA=,&GETMAIN=NO,            X\n               &AMODE=24,&RMODE=24,&REGS=YES,&CSECT=YES\n         GBLA  &SAVESIZE\n         GBLB  &FREESAVE\n         GBLC  &R\n         LCLC  &REGX\n         AIF   ('&CSECT' EQ 'YES').CSECTOK\n         MNOTE 'CSECT=NO IS NO LONGER SUPPORTED'\n.CSECTOK ANOP\n         AIF   ('&REGS' EQ 'NO').NOREGS\n         YREGS\n.NOREGS  ANOP\n&NAME    CSECT\n&NAME    AMODE &AMODE\n&NAME    RMODE &RMODE\n&REGX    SETC  '&REG1'\n         AIF   (T'&REG1 EQ 'O').NOREG\n         AIF   (T'&REG2 EQ 'O').ONEREG\n         LUSE  &NAME,&REG1,&REG2          ESTABLISH ADDRESSABILITY\n         AGO   .GOTUSE\n.NOREG   ANOP\n&REGX    SETC  '&R.12'\n.ONEREG  LUSE  &NAME,&REGX                ESTABLISH ADDRESSABILITY\n.GOTUSE  ANOP\n         B     56(&R.15)\n         DC    AL1(16)\n         DC    CL8'&NAME'\n         DC    CL8'&SYSDATE'\n         DC    C' FROM SUNGARD FROM CBT TAPE FILE106'\n         DS    0H\n         STM   &R.14,&R.12,12(&R.13)      SAVE REGISTERS\n         LR    &REGX,&R.15\n         AIF   (T'&REG2 EQ 'O').GOTBASE\n         LA    &REG2,4095(&REGX)           INITIALIZE THE SECOND\n         LA    &REG2,1(&REG2)               BASE REGISTER\n.GOTBASE ANOP\n         AIF   (T'&REG3 EQ 'O').NOPARM\n         LR    &REG3,R1                   GET PARAMETER LIST ADDR\n.NOPARM  ANOP\n         AIF   ('&AREA' EQ '').NOAREA\n         LA    1,&AREA\n         AGO   .SETSAVE\n.NOAREA  ANOP\n&SAVESIZE SETA &LV\n         AIF   ('&GETMAIN' EQ 'YES').GETSAVE\n&FREESAVE SETB 0\n         BAL   1,IX&SYSNDX\n         DS    CL(&SAVESIZE)\nIX&SYSNDX DS   0H\n         AGO   .SETSAVE\n.GETSAVE ANOP\n         GETMAIN R,LV=&SAVESIZE\n&FREESAVE SETB 1\n.SETSAVE ANOP\n         XC    0(72,&R.1),0(&R.1)        CLEAR SAVE AREA\n         ST    &R.1,8(&R.13)             PUT ADDR IN PREVIOUS SAVE\n         ST    13,4(&R.1)                CHAIN TO HIGHER SAVE AREA\n         LM    0,1,20(&R.13)             RESTORE 0 AND 1\n         L     &R.13,8(&R.13)            SET SAVE AREA POINTER\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACCESSR": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x89\\t\\x9f\\x12\\x00\\x00\\x16\\x00\\x16\\x00\\x00\\xc1\\xe3\\xc1\\xd5\\xe2\\xd2\\xe8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1989-04-09T12:00:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "ATANSKY"}, "text": "//JOB1     JOB\n//STEP1     EXEC PGM=RACCESS5\n//STEPLIB   DD  DSN=AUTHORIZED.LIBRARY,DISP=SHR   <===============\n//*\n//*  THE ABOVE STEPLIB SHOULD BE ONE RESTRICTED TO SECURITY AND\n//*  SYSTEMS PERSONNEL.\n//*\n//SYSPRINT  DD  SYSOUT=*\n//*\n//*  FORMAT OF THE INPUT IS FIXED FORMAT\n//*  USER IS 8 BYTES\n//*  CLASS IS 8 BYTES\n//*  PROFILE IS 44 BYTES\n//* THERE ARE NO SPACES BETWEEN THE FIELDS\n//* IF CLASS IS BLANK, IT DEFAULTS TO DATASET\n//*\n//*USER CLASS   PROFILE-NAME\nUSERID1 DASDVOL VOLSER\nUSERID2 DATASET SYS1.PROCLIB\nUSERID3         SYS1.PARM*\nUSERID1 FACILITY$DASDI.WRK001\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACCESSS": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x16#\\x00\\x1a\\x00\\x16\\x00\\x1a\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T16:23:00", "lines": 26, "newlines": 22, "modlines": 26, "user": "SBGCSC"}, "text": "//SBGCSCF JOB (A006,SYTM,99,99),S-GOLOB,\n//        CLASS=Q,MSGCLASS=V,NOTIFY=&SYSUID\n/*DIST ROOM-25\n//STEP1     EXEC PGM=RACCESS6\n//STEPLIB   DD  DSN=SYS2.MVSP.SDTS.USERLIB,DISP=SHR\n//*\n//*  THE ABOVE STEPLIB SHOULD BE ONE RESTRICTED TO SECURITY AND\n//*  SYSTEMS PERSONNEL.\n//*\n//SYSPRINT  DD  SYSOUT=*\n//*\n//*  FORMAT OF THE INPUT IS FIXED FORMAT\n//*  USER IS 8 BYTES\n//*  CLASS IS 8 BYTES\n//*  PROFILE IS 44 BYTES\n//* THERE ARE NO SPACES BETWEEN THE FIELDS\n//* IF CLASS IS BLANK, IT DEFAULTS TO DATASET\n//*\n//*USER CLASS   PROFILE-NAME\n//SYSIN  DD *\nACSCHNK DASDVOL ACS001\nACSCHNK DATASET SYS1.PROCLIB\nACSCHNK         SYS1.**\nACSCHNK         SYS2.**\nACSCHNK FACILITY$DASDI.WRK001\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACCESST": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x16#\\x00\\x1a\\x00\\x16\\x00\\x1a\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T16:23:00", "lines": 26, "newlines": 22, "modlines": 26, "user": "SBGCSC"}, "text": "//SBGCSCF JOB (A006,SYTM,99,99),S-GOLOB,\n//        CLASS=Q,MSGCLASS=V,NOTIFY=&SYSUID\n/*DIST ROOM-25\n//STEP1     EXEC PGM=RACCESS6\n//STEPLIB   DD  DSN=SYS2.MVSP.SDTS.USERLIB,DISP=SHR\n//*\n//*  THE ABOVE STEPLIB SHOULD BE ONE RESTRICTED TO SECURITY AND\n//*  SYSTEMS PERSONNEL.\n//*\n//SYSPRINT  DD  SYSOUT=*\n//*\n//*  FORMAT OF THE INPUT IS FIXED FORMAT\n//*  USER IS 8 BYTES\n//*  CLASS IS 8 BYTES\n//*  PROFILE IS 44 BYTES\n//* THERE ARE NO SPACES BETWEEN THE FIELDS\n//* IF CLASS IS BLANK, IT DEFAULTS TO DATASET\n//*\n//*USER CLASS   PROFILE-NAME\n//SYSIN  DD *\nACSCHNK DASDVOL ACS001\nACSCHNK DATASET SYS1.PROCLIB\nACSCHNK         SYS1.**\nACSCHNK         SYS2.**\nACSCHNK FACILITY$DASDI.WRK001\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACCESS5": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x12#\\x00\\xcc\\x00\\xcb\\x00\\xcc\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T12:23:00", "lines": 204, "newlines": 203, "modlines": 204, "user": "SBGCSC"}, "text": "         TITLE 'CHECK RACF AUTHORITY'\n*  Disclaimer:\n*         This code has worked at Sungard.  There is no guarantee\n*         that the code will work anywhere else.  Neither Sungard\n*         nor the author may be held reponsible for any damage caused\n*         by this code.\n*\n*  PLEASE, do not distribute modified versions of this code.  If you\n*  have any improvements, send them to me.  That way all changes can\n*  be incorporated.\n*\n*  These programs were written by Arthur Tansky at:\n*       Sungard\n*       Suite 600\n*       401 N. Broad St.\n*       Philadelphia, PA   19108\n*\n*        PROGRAM WILL CHECK READ THE INPUT WHICH CONSISTS OF USERID,\n*        CLASS, AND ENTITY NAME.  FIRST GENERATIONS OF THE PROGRAM WILL\n*        NOT USE CLASS, AND MUST HAVE ALL DATA IN SPECIFIC COLUMNS.\n*        THE PROGRAM WILL THEN VERIFY THAT THE USERID IS DEFINED TO\n*        RACF.  IF IT IS, IT WILL CHECK THE USERID'S AUTHORITY TO THE\n*        DATASET STARTING WITH ALTER AND WORKING DOWN TO READ.  IF AN\n*        ACCESS IS GOOD, IT RETURNS WITH A MESSAGE TO THAT EFFECT AT\n*        THAT LEVEL.  ELSE IT RETURNS W/ A MESSAGE SPECIFYING NO\n*        ACCESS.\n*\n*        UPDATE HISTORY (MOST RECENT FIRST):\n*              03/23/87 - ADDED CAMLST AND LOCATE FOR VOLSER\n*              02/12/87 - ADDED CLASS\n*\nRACCESS  PRIME R12,CSECT=YES,GETMAIN=NO\n         PRINT NOGEN\n         OPEN  (IN,(INPUT))\n         OPEN  (OUT,(OUTPUT))\n         PUT   OUT,HEADING\n         USING INREC,R3\nLOOP     DS    0H\n         MVC   OUTWRK,OUTCLR       CLEAR OUTPUT LINE\n         GET   IN\n         LR    R3,R1               SAVE INPUT RECORD ADDRESS\n         MVC   OUTUID,INUID\n         MVC   OUTCLASS,INCLASS\n         MVC   OUTDSN,INENTITY\n         PRINT GEN\n*  FIND USERID & LENGTH\n         MVC   RACUSER,INUID\n         LA    R4,L'INUID-1        MAX OFFSET FOR LAST BYTE\nUSERLOOP DS    0H\n         LA    R5,INUID(R4)\n         CLI   0(R5),C' '\n         BNE   FNDLEN              FOUND LAST NON-BLANK\n         BCT   R4,USERLOOP\n         MVC   OUTMSG,NOUSER\n         B     WRITEMS2\n         SPACE 1\nFNDLEN   DS    0D\n         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH\n         STC   R4,RACUSERL         SAVE THE LENGTH FOR THE RACINIT\n         RACINIT USERID=RACUSERL,ENVIR=CREATE,ACEE=RACACEE,PASSCHK=NO\n         LTR   R15,R15\n         BZ    GOODUSER\n         MVC   OUTMSG,BADUSER\n         B     WRITEMS2\nGOODUSER DS    0D\n*  FIND CLASS  & LENGTH\n         MVC   RACCLASS,INCLASS\n         LA    R4,L'INCLASS-1      MAX OFFSET FOR LAST BYTE\nCLASLOOP DS    0H\n         LA    R5,INCLASS(R4)\n         CLI   0(R5),C' '\n         BNE   FNDCLEN             FOUND LAST NON-BLANK\n         BCT   R4,CLASLOOP\n         MVC   INCLASS,=CL8'DATASET'\n         MVC   OUTCLASS,=CL8'DATASET'\n         MVC   RACCLASS,=CL8'DATASET'\n         LOCATE CAMLIST\n         LTR   R15,R15\n         BNZ   NOVOLSER\n         MVC   VOLSER,WORKA+6\nNOVOLSER DS    0H\n         LA    R4,6                ONE LESS THAN THE LENGTH\n         SPACE 1\nFNDCLEN  DS    0H\n         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH\n         STC   R4,RACCLASL         SAVE THE LENGTH FOR THE RACINIT\n         RACINIT USERID=RACUSERL,ENVIR=CREATE,ACEE=RACACEE,PASSCHK=NO\n         LTR   R15,R15\n         BZ    GOODCLAS\n         MVC   OUTMSG,BADUSER\n         B     WRITEMS2\nGOODCLAS DS    0D\n         LA    R7,RACCLASL\n         L     R6,RACACEE          RACACEE = @ OF ACEE\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACA1\n         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,ACEE=(R6),        X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACA2\nRACA1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,ACEE=(R6),        X\n               CLASS=(R7)\nRACA2    DS    0H\n         LTR   R15,R15             ALTER ACCESS?\n         BZ    ALTER               YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACB1\n         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,ACEE=(R6),      X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACB2\nRACB1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,ACEE=(R6),      X\n               CLASS=(R7)\nRACB2    DS    0H\n         LTR   R15,R15             CONTROL ACCESS?\n         BZ    CONTROL             YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACC1\n         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,ACEE=(R6),       X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACC2\nRACC1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,ACEE=(R6),       X\n               CLASS=(R7)\nRACC2    DS    0H\n         LTR   R15,R15             UPDATE ACCESS?\n         BZ    UPDATE              YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACD1\n         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,ACEE=(R6),         X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACD2\nRACD1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,ACEE=(R6),         X\n               CLASS=(R7)\nRACD2    DS    0H\n         LTR   R15,R15             READ ACCESS?\n         BZ    READ                YES\n         MVC   OUTMSG,NOACCESS\n         B     WRITEMSG\nREAD     DS    0D\n         MVC   OUTMSG,READMSG\n         B     WRITEMSG\nUPDATE   DS    0D\n         MVC   OUTMSG,UPDATEMS\n         B     WRITEMSG\nCONTROL  DS    0D\n         MVC   OUTMSG,CONTROLM\n         B     WRITEMSG\nALTER    DS    0D\n         MVC   OUTMSG,ALTERMSG\n         B     WRITEMSG\nWRITEMSG DS    0D\n         RACINIT ENVIR=DELETE,ACEE=RACACEE\nWRITEMS2 DS    0H\n         PUT   OUT,OUTWRK\n         B     LOOP\nEOF      DS    0D\n         CLOSE (IN)\n         CLOSE (OUT)\n         TERME\nRACACEE  DS    F\nRACCLASL DS    C\nRACCLASS DS    CL8\nRACUSERL DS    C\nRACUSER  DS    CL8\nVOLSER   DC    CL6'XXXXXX'         REQ'D FOR RACHECK BUT NOT USED\nHEADING  DC    CL132' '\n         ORG   HEADING\n         DC    C' USERID '\n         DS    CL2\n         DC    C' CLASS  '\n         DS    CL17\n         DC    C'RESOURCE NAME'\n         DS    CL15\n         DC    C'   ACCESS LEVEL'\n         ORG\nOUTCLR   DC    C' '\nOUTWRK   DS    0CL132\nOUTUID   DS    CL8\n         DS    CL2\nOUTCLASS DS    CL8\n         DS    CL2\nOUTDSN   DS    CL44\n         DS    CL2\nOUTMSG   DS    CL(132-8-2-44-2)\nBADUSER  DC    CL(L'OUTMSG)'USERID NOT KNOWN TO SYSTEM'\nNOUSER   DC    CL(L'OUTMSG)'USERID NOT SPECIFIED'\nNOACCESS DC    CL(L'OUTMSG)'NO ACCESS'\nREADMSG  DC    CL(L'OUTMSG)'READ'\nUPDATEMS DC    CL(L'OUTMSG)'UPDATE'\nCONTROLM DC    CL(L'OUTMSG)'CONTROL'\nALTERMSG DC    CL(L'OUTMSG)'ALTER'\n         LTORG\n         PRINT NOGEN\nIN       DCB   DSORG=PS,MACRF=GL,LRECL=80,EODAD=EOF,DDNAME=SYSIN\nOUT      DCB   DSORG=PS,MACRF=PM,LRECL=132,DDNAME=SYSPRINT\nCAMLIST  CAMLST NAME,OUTDSN,,WORKA\nWORKA    DS    34D\nINREC    DSECT\nINUID    DS    CL8\nINCLASS  DS    CL8\nINENTITY DS    CL44\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACCESS6": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x12$\\x00\\xd1\\x00\\xd0\\x00\\xd0\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T12:24:00", "lines": 209, "newlines": 208, "modlines": 208, "user": "SBGCSC"}, "text": "         TITLE 'CHECK RACF AUTHORITY'\n*  Disclaimer:\n*         This code has worked at Sungard.  There is no guarantee\n*         that the code will work anywhere else.  Neither Sungard\n*         nor the author may be held reponsible for any damage caused\n*         by this code.\n*\n*  PLEASE, do not distribute modified versions of this code.  If you\n*  have any improvements, send them to me.  That way all changes can\n*  be incorporated.\n*\n*  These programs were written by Arthur Tansky at:\n*       Sungard\n*       Suite 600\n*       401 N. Broad St.\n*       Philadelphia, PA   19108\n*\n*        PROGRAM WILL CHECK READ THE INPUT WHICH CONSISTS OF USERID,\n*        CLASS, AND ENTITY NAME.  FIRST GENERATIONS OF THE PROGRAM WILL\n*        NOT USE CLASS, AND MUST HAVE ALL DATA IN SPECIFIC COLUMNS.\n*        THE PROGRAM WILL THEN VERIFY THAT THE USERID IS DEFINED TO\n*        RACF.  IF IT IS, IT WILL CHECK THE USERID'S AUTHORITY TO THE\n*        DATASET STARTING WITH ALTER AND WORKING DOWN TO READ.  IF AN\n*        ACCESS IS GOOD, IT RETURNS WITH A MESSAGE TO THAT EFFECT AT\n*        THAT LEVEL.  ELSE IT RETURNS W/ A MESSAGE SPECIFYING NO\n*        ACCESS.\n*\n*        UPDATE HISTORY (MOST RECENT FIRST):\n*              07/10/87 - SPECIAL VERSION TO USE USERID FROM\n*                                  FIRST CARD IMAGE ONLY.\n*                                  FOR PERFORMANCE WITH GENERIC\n*                                  PROFILES.\n*              03/23/87 - ADDED CAMLST AND LOCATE FOR VOLSER\n*              02/12/87 - ADDED CLASS\n*\nRACCESS6 PRIME R12,CSECT=YES,GETMAIN=NO\n         PRINT NOGEN\n         OPEN  (IN,(INPUT))\n         OPEN  (OUT,(OUTPUT))\n         PUT   OUT,HEADING\n         USING INREC,R3\n         MVC   OUTWRK,OUTCLR       CLEAR OUTPUT LINE\n         GET   IN\n         LR    R3,R1               SAVE INPUT RECORD ADDRESS\n         MVC   OUTUID,INUID\n         MVC   OUTCLASS,INCLASS\n         MVC   OUTDSN,INENTITY\n         MVC   RACUSER,INUID\n         LA    R4,L'INUID-1        MAX OFFSET FOR LAST BYTE\n         B     USERLOOP            FIRST TIME THRU.\nLOOP     DS    0H\n         MVC   OUTWRK,OUTCLR       CLEAR OUTPUT LINE\n         GET   IN\n         LR    R3,R1               SAVE INPUT RECORD ADDRESS\n         MVC   OUTCLASS,INCLASS\n         MVC   OUTDSN,INENTITY\n         B     GOODUSER            ALL BUT 1ST TIME THRU.\n         PRINT GEN\n*  FIND USERID & LENGTH\nUSERLOOP DS    0H\n         LA    R5,INUID(R4)\n         CLI   0(R5),C' '\n         BNE   FNDLEN              FOUND LAST NON-BLANK\n         BCT   R4,USERLOOP\n         MVC   OUTMSG,NOUSER\n         B     WRITEMS2\n         SPACE 1\nFNDLEN   DS    0D\n         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH\n         STC   R4,RACUSERL         SAVE THE LENGTH FOR THE RACINIT\n         RACINIT USERID=RACUSERL,ENVIR=CREATE,ACEE=RACACEE,PASSCHK=NO\n         LTR   R15,R15\n         BZ    GOODUSER\n         MVC   OUTMSG,BADUSER\n         B     WRITEMS2\nGOODUSER DS    0D\n         L     R6,RACACEE          RACACEE = @ OF ACEE\n*  FIND CLASS  & LENGTH\n         MVC   RACCLASS,INCLASS\n         LA    R4,L'INCLASS-1      MAX OFFSET FOR LAST BYTE\nCLASLOOP DS    0H\n         LA    R5,INCLASS(R4)\n         CLI   0(R5),C' '\n         BNE   FNDCLEN             FOUND LAST NON-BLANK\n         BCT   R4,CLASLOOP\n         MVC   INCLASS,=CL8'DATASET'\n         MVC   OUTCLASS,=CL8'DATASET'\n         MVC   RACCLASS,=CL8'DATASET'\n         LOCATE CAMLIST\n         LTR   R15,R15\n         BNZ   NOVOLSER\n         MVC   VOLSER,WORKA+6\nNOVOLSER DS    0H\n         LA    R4,6                ONE LESS THAN THE LENGTH\n         SPACE 1\nFNDCLEN  DS    0H\n         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH\n         STC   R4,RACCLASL         SAVE THE LENGTH FOR THE RACINIT\n         LA    R7,RACCLASL\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACA1\n         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,ACEE=(R6),        X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACA2\nRACA1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,ACEE=(R6),        X\n               CLASS=(R7)\nRACA2    DS    0H\n         LTR   R15,R15             ALTER ACCESS?\n         BZ    ALTER               YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACB1\n         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,ACEE=(R6),      X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACB2\nRACB1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,ACEE=(R6),      X\n               CLASS=(R7)\nRACB2    DS    0H\n         LTR   R15,R15             CONTROL ACCESS?\n         BZ    CONTROL             YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACC1\n         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,ACEE=(R6),       X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACC2\nRACC1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,ACEE=(R6),       X\n               CLASS=(R7)\nRACC2    DS    0H\n         LTR   R15,R15             UPDATE ACCESS?\n         BZ    UPDATE              YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACD1\n         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,ACEE=(R6),         X\n               VOLSER=VOLSER,CLASS=(R7)\n         B     RACD2\nRACD1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,ACEE=(R6),         X\n               CLASS=(R7)\nRACD2    DS    0H\n         LTR   R15,R15             READ ACCESS?\n         BZ    READ                YES\n         MVC   OUTMSG,NOACCESS\n         B     WRITEMSG\nREAD     DS    0D\n         MVC   OUTMSG,READMSG\n         B     WRITEMSG\nUPDATE   DS    0D\n         MVC   OUTMSG,UPDATEMS\n         B     WRITEMSG\nCONTROL  DS    0D\n         MVC   OUTMSG,CONTROLM\n         B     WRITEMSG\nALTER    DS    0D\n         MVC   OUTMSG,ALTERMSG\n         B     WRITEMSG\nWRITEMSG DS    0D\nWRITEMS2 DS    0H\n         PUT   OUT,OUTWRK\n         B     LOOP\nEOF      DS    0D\n         RACINIT ENVIR=DELETE,ACEE=RACACEE\n         CLOSE (IN)\n         CLOSE (OUT)\n         TERME\nRACACEE  DS    F\nRACCLASL DS    C\nRACCLASS DS    CL8\nRACUSERL DS    C\nRACUSER  DS    CL8\nVOLSER   DC    CL6'XXXXXX'         REQ'D FOR RACHECK BUT NOT USED\nHEADING  DC    CL132' '\n         ORG   HEADING\n         DC    C' USERID '\n         DS    CL2\n         DC    C' CLASS  '\n         DS    CL17\n         DC    C'RESOURCE NAME'\n         DS    CL15\n         DC    C'   ACCESS LEVEL'\n         ORG\nOUTCLR   DC    C' '\nOUTWRK   DS    0CL132\nOUTUID   DS    CL8\n         DS    CL2\nOUTCLASS DS    CL8\n         DS    CL2\nOUTDSN   DS    CL44\n         DS    CL2\nOUTMSG   DS    CL(132-8-2-44-2)\nBADUSER  DC    CL(L'OUTMSG)'USERID NOT KNOWN TO SYSTEM'\nNOUSER   DC    CL(L'OUTMSG)'USERID NOT SPECIFIED'\nNOACCESS DC    CL(L'OUTMSG)'NO ACCESS'\nREADMSG  DC    CL(L'OUTMSG)'READ'\nUPDATEMS DC    CL(L'OUTMSG)'UPDATE'\nCONTROLM DC    CL(L'OUTMSG)'CONTROL'\nALTERMSG DC    CL(L'OUTMSG)'ALTER'\n         LTORG\n         PRINT NOGEN\nIN       DCB   DSORG=PS,MACRF=GL,LRECL=80,EODAD=EOF,DDNAME=SYSIN\nOUT      DCB   DSORG=PS,MACRF=PM,LRECL=132,DDNAME=SYSPRINT\nCAMLIST  CAMLST NAME,OUTDSN,,WORKA\nWORKA    DS    34D\nINREC    DSECT\nINUID    DS    CL8\nINCLASS  DS    CL8\nINENTITY DS    CL44\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACCESS7": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x94\\x06/\\x12$\\x00\\xb3\\x00\\xb2\\x00\\xb2\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1994-03-03T12:24:00", "lines": 179, "newlines": 178, "modlines": 178, "user": "SBGCSC"}, "text": "         TITLE 'CHECK RACF AUTHORITY'\n*  Disclaimer:\n*         This code has worked at Sungard.  There is no guarantee\n*         that the code will work anywhere else.  Neither Sungard\n*         nor the author may be held reponsible for any damage caused\n*         by this code.\n*\n*  PLEASE, do not distribute modified versions of this code.  If you\n*  have any improvements, send them to me.  That way all changes can\n*  be incorporated.\n*\n*  These programs were written by Arthur Tansky at:\n*       Sungard\n*       Suite 600\n*       401 N. Broad St.\n*       Philadelphia, PA   19108\n*\n*        PROGRAM WILL CHECK READ THE INPUT WHICH CONSISTS OF USERID,\n*        CLASS, AND ENTITY NAME.  FIRST GENERATIONS OF THE PROGRAM WILL\n*        NOT USE CLASS, AND MUST HAVE ALL DATA IN SPECIFIC COLUMNS.\n*        THE PROGRAM WILL THEN VERIFY THAT THE USERID IS DEFINED TO\n*        RACF.  IF IT IS, IT WILL CHECK THE USERID'S AUTHORITY TO THE\n*        DATASET STARTING WITH ALTER AND WORKING DOWN TO READ.  IF AN\n*        ACCESS IS GOOD, IT RETURNS WITH A MESSAGE TO THAT EFFECT AT\n*        THAT LEVEL.  ELSE IT RETURNS W/ A MESSAGE SPECIFYING NO\n*        ACCESS.\n*\n*        UPDATE HISTORY (MOST RECENT FIRST):\n*              08/24/88 - USED THE USERID PARAMETER FROM RACF 1.8\n*              03/23/87 - ADDED CAMLST AND LOCATE FOR VOLSER\n*              02/12/87 - ADDED CLASS\n*\nRACCESS  PRIME R12,CSECT=YES,GETMAIN=NO\n         PRINT NOGEN\n         OPEN  (IN,(INPUT))\n         OPEN  (OUT,(OUTPUT))\n         PUT   OUT,HEADING\n         USING INREC,R3\nLOOP     DS    0H\n         MVC   OUTWRK,OUTCLR       CLEAR OUTPUT LINE\n         GET   IN\n         LR    R3,R1               SAVE INPUT RECORD ADDRESS\n         MVC   OUTUID,INUID\n         MVC   OUTCLASS,INCLASS\n         MVC   OUTDSN,INENTITY\n         PRINT GEN\n*  FIND CLASS  & LENGTH\n         MVC   RACCLASS,INCLASS\n         LA    R4,L'INCLASS-1      MAX OFFSET FOR LAST BYTE\nCLASLOOP DS    0H\n         LA    R5,INCLASS(R4)\n         CLI   0(R5),C' '\n         BNE   FNDCLEN             FOUND LAST NON-BLANK\n         BCT   R4,CLASLOOP\n         MVC   INCLASS,=CL8'DATASET'\n         MVC   OUTCLASS,=CL8'DATASET'\n         MVC   RACCLASS,=CL8'DATASET'\n         LOCATE CAMLIST\n         LTR   R15,R15\n         BNZ   NOVOLSER\n         MVC   VOLSER,WORKA+6\nNOVOLSER DS    0H\n         LA    R4,6                ONE LESS THAN THE LENGTH\n         SPACE 1\nFNDCLEN  DS    0H\n         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH\n         STC   R4,RACCLASL         SAVE THE LENGTH FOR THE RACINIT\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACA1\n         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,                  X\n               VOLSER=VOLSER,CLASS=RACCLASL,                           X\n               RELEASE=1.8,USERID=OUTUID\n         B     RACA2\nRACA1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,                  X\n               CLASS=RACCLASL,                                         X\n               RELEASE=1.8,USERID=OUTUID\nRACA2    DS    0H\n         LTR   R15,R15             ALTER ACCESS?\n         BZ    ALTER               YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACB1\n         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,                X\n               VOLSER=VOLSER,CLASS=RACCLASL,                           X\n               RELEASE=1.8,USERID=OUTUID\n         B     RACB2\nRACB1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,                X\n               CLASS=RACCLASL,                                         X\n               RELEASE=1.8,USERID=OUTUID\nRACB2    DS    0H\n         LTR   R15,R15             CONTROL ACCESS?\n         BZ    CONTROL             YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACC1\n         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,                 X\n               VOLSER=VOLSER,CLASS=RACCLASL,                           X\n               RELEASE=1.8,USERID=OUTUID\n         B     RACC2\nRACC1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,                 X\n               CLASS=RACCLASL,                                         X\n               RELEASE=1.8,USERID=OUTUID\nRACC2    DS    0H\n         LTR   R15,R15             UPDATE ACCESS?\n         BZ    UPDATE              YES\n         CLC   RACCLASS,=CL8'DATASET'\n         BNE   RACD1\n         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,                   X\n               VOLSER=VOLSER,CLASS=RACCLASL,                           X\n               RELEASE=1.8,USERID=OUTUID\n         B     RACD2\nRACD1    DS    0D\n         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,                   X\n               CLASS=RACCLASL,                                         X\n               RELEASE=1.8,USERID=OUTUID\nRACD2    DS    0H\n         LTR   R15,R15             READ ACCESS?\n         BZ    READ                YES\n         MVC   OUTMSG,NOACCESS\n         B     WRITEMSG\nREAD     DS    0D\n         MVC   OUTMSG,READMSG\n         B     WRITEMSG\nUPDATE   DS    0D\n         MVC   OUTMSG,UPDATEMS\n         B     WRITEMSG\nCONTROL  DS    0D\n         MVC   OUTMSG,CONTROLM\n         B     WRITEMSG\nALTER    DS    0D\n         MVC   OUTMSG,ALTERMSG\nWRITEMSG DS    0H\n         PUT   OUT,OUTWRK\n         B     LOOP\nEOF      DS    0D\n         CLOSE (IN)\n         CLOSE (OUT)\n         TERME\nRACCLASL DS    C\nRACCLASS DS    CL8\nRACUSERL DS    C\nRACUSER  DS    CL8\nVOLSER   DC    CL6'XXXXXX'         REQ'D FOR RACHECK BUT NOT USED\nHEADING  DC    CL132' '\n         ORG   HEADING\n         DC    C' USERID '\n         DS    CL2\n         DC    C' CLASS  '\n         DS    CL17\n         DC    C'RESOURCE NAME'\n         DS    CL15\n         DC    C'   ACCESS LEVEL'\n         ORG\nOUTCLR   DC    C' '\nOUTWRK   DS    0CL132\nOUTUID   DS    CL8\n         DS    CL2\nOUTCLASS DS    CL8\n         DS    CL2\nOUTDSN   DS    CL44\n         DS    CL2\nOUTMSG   DS    CL(132-8-2-44-2)\nNOACCESS DC    CL(L'OUTMSG)'NO ACCESS'\nREADMSG  DC    CL(L'OUTMSG)'READ'\nUPDATEMS DC    CL(L'OUTMSG)'UPDATE'\nCONTROLM DC    CL(L'OUTMSG)'CONTROL'\nALTERMSG DC    CL(L'OUTMSG)'ALTER'\n         LTORG\n         PRINT NOGEN\nIN       DCB   DSORG=PS,MACRF=GL,LRECL=80,EODAD=EOF,DDNAME=SYSIN\nOUT      DCB   DSORG=PS,MACRF=PM,LRECL=132,DDNAME=SYSPRINT\nCAMLIST  CAMLST NAME,OUTDSN,,WORKA\nWORKA    DS    34D\nINREC    DSECT\nINUID    DS    CL8\nINCLASS  DS    CL8\nINENTITY DS    CL44\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACCLIST": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x06/\\x00\\x94\\x06/\\x18#\\x00\\r\\x00\\x0c\\x00\\x01\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-03-03T00:00:00", "modifydate": "1994-03-03T18:23:00", "lines": 13, "newlines": 12, "modlines": 1, "user": "SBGCSC"}, "text": "//SBGCSCC JOB (A006,SYTM,99,99),S-GOLOB,REGION=8M,\n//        CLASS=S,MSGCLASS=V,NOTIFY=&SYSUID\n/*DIST ROOM-25\n//LISTV  EXEC PGM=IKJEFT01,REGION=4096K\n//STEPLIB  DD DISP=SHR,DSN=SYS2.MVSP.SDTS.USERLIB  (AUTH, HAS IKJTABLS\n//SYSPROC  DD DISP=SHR,DSN=MVSP.CSC.USRCLIB\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTERM  DD SYSOUT=*\n//SYSTSIN  DD *\n  %CLISTRB RACCDAT1\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TERME": {"ttr": 1026, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\t\\x9f\\x00\\x89\\t\\x9f\\x12\\x00\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc1\\xe3\\xc1\\xd5\\xe2\\xd2\\xe8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-04-09T00:00:00", "modifydate": "1989-04-09T12:00:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "ATANSKY"}, "text": "         MACRO\n&NAME    TERME    &RC=(15)\n         GBLA  &SAVESIZE\n         GBLB  &FREESAVE\n         GBLC  &R\n&NAME    DS    0H\n         L     &R.13,4(&R.13)          GET HIGHER SAVE POINTER\n         AIF   (NOT &FREESAVE).RETURN\n         L     &R.1,8(&R.13)           LOAD ADDRESS OF AREA\n         LR    &R.2,&R.15              TEMPORARY SAVE OF REG. 15\n         FREEMAIN R,LV=&SAVESIZE,A=(1)\n         LR    &R.15,&R.2              RESTORE REG 15\n.RETURN  ANOP\n         RETURN (14,12),RC=&RC         RETURN TO CALLING MODULE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT106/FILE106.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT106", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}