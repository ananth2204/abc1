./ ADD NAME=DSTABLE  0201-12230-12230-1200-00067-00067-00000-LEVEL
         MACRO
         DSTABLE &DSECT=YES
.*
.*       COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
.*
.*       LEVEL 2.1 -
.*       THIS IS A NEW MACRO REQUIRED AS PART OF THE
.*       REFURBISHMENT OF THE LAST IBM RELEASE OF
.*       THE ALGOL F COMPILER
.*
.*       FUNCTION -
.*       DSTABLE GENERATES EITHER A DSECT OR THE MODEL PATTERN
.*       FOR A DSTABLE ENTRY USED FOR DATASET CONTROL
.*
.*       NOTES -
.*       1. THIS MACRO IS REQUIRED FOR THE ASSEMBLY OF THE
.*          ALGOL F COMPILER AS WELL AS THE ALGOL F LIBRARY
.*
         AIF   ('&DSECT' EQ 'NO').LAB1
.*
DSTABLE  DSECT
*
         AGO   .LAB2
.LAB1    ANOP
.*
DSTABLE  DC    0F'0'
.LAB2    ANOP
ADCB     DC    F'0'                    -> DCB
R        DC    F'0'                    CHARACTER POINTER
RE       DC    F'0'
NBB      DC    F'0'
BB       DC    F'0'
S        DC    H'1'                    RECORD POINTER
P        DC    H'80'                   RECORD LENGTH
K        DC    X'02'                   NUMBER OF BLANK DELIM CHARS
Q        DC    X'00'                   NO OF RECORDS PER SECTION
DSF      DC    H'00'                   DATASET FLAGS
*
*        DATASET FLAGS - DSF
*
DS0      EQU   X'80'                   DATASET OPEN
DS1      EQU   X'40'
DS2      EQU   X'20'                   LAST I/O OUTPUT
DS3      EQU   X'10'
DS4      EQU   X'08'
DS5      EQU   X'04'
DS6      EQU   X'02'                   OPEN FOR OUTPUT
DS7      EQU   X'01'                   END OF FILE
*
*        DATASET FLAGS - DSF+1
*
DS8      EQU   X'80'                   END OF DATA
DS9      EQU   X'40'
DS10     EQU   X'20'                   OPENED BY SYSACT 12
DS11     EQU   X'10'                   INDICATE IHIERR-ROUT
DSEOD    EQU   X'08'
DSIOERR  EQU   X'04'                   I/O ERROR
DS14     EQU   X'02'                   DATASET OPENED
DS15     EQU   X'01'                   CLOSE FROM IHIERR
*
NOTEADR  DC    F'0'
BL       DC    H'0'                    LRECL+ TWO ARB
         DC    H'0'
*
DSTABLEL EQU   *-DSTABLE               L'DSTABLE ENTRY
*
         MEND
./ ADD NAME=FSACONV  0201-12230-12230-1200-00087-00087-00000-LEVEL
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
***********************************************************************
*
*        TYPE CONVERSION ROUTINES
*
*        FSACONV
*
***********************************************************************
*
*        PERFORM CONVERSION BETWEEN INTEGER AND REAL TYPE
*        FOR EITHER SINGLE OR DOUBLE PRECISION
*
*        CALLING SEQUENCES -
*
*        REAL TO INTEGER CONVERSION
*        BAL   R8,CNVRDI(R13)           REAL NUMBER IN FPR0
*                                       RETURN WITH INTEGER IN R14
*
*        INTEGER TO REAL CONVERSION
*        BAL   R8,CNVIRD(R13)           INTEGER NUMBER IN R14
*                                       RETURN WITH REAL NO IN FPR0
*
*        ALGOL ENTIER FUNCTION
*        BAL   R8,ENTIER(R13)           REAL NUMBER IN FPR0
*                                       RETURN WITH INTEGER IN R14
*
*        INTEGER TO REAL CONVERSION
*
         USING FSAREA,R13
CONVIR   EQU   *
CNVIRD   EQU   *-FSAREA
         X     R14,CNVCNST1+4
         ST    R14,CNVBUF1+4
         LD    FPR0,CNVBUF1
         SD    FPR0,CNVCNST1
CNVINST  EQU   *                        ***
         STD   FPR0,CNVBUF2               *
         MVC   CNVBUF2+1(3),CNVCNST1+1    *
         AD    FPR0,CNVBUF2               *
         BR    R8                         *
*                                         * FOR LONG PRECISION, THESE
*        REAL TO INTEGER CONVERSION       * ARE REPLACED AT EXECUTION
*                                         * TIME BY THE INSTRUCTIONS
*                                         * AT CNVINSTD
ENTIER   EQU   *-FSAREA                   *
         STE   FPR0,CNVBUF3               *
         LD    FPR0,CNVBUF3               *
         B     ENTIER1                    *
*                                         *
CNVRDI   EQU   *-FSAREA                   *
         STE   FPR0,CNVBUF3               *
         LD    FPR0,CNVBUF3               *
*                                       ***
         AD    FPR0,CNVCNST2
ENTIER1  STD   FPR0,CNVBUF4
         CE    FPR0,CNVCNST3
         BNL   ERROR40(R13)
         AW    FPR0,CNVCNST1
         BP    LABEL1
         CLC   CNVBUF4(8),CNVCNST4
         BH    ERROR40(R13)
LABEL1   STD   FPR0,CNVBUF2
         L     R14,CNVBUF2+4
         X     R14,CNVCNST1+4
         SD    FPR0,CNVCNST1
         CD    FPR0,CNVBUF4
         BNHR  R8
         BCTR  R14,R8
*
         DC    0D'0'
CNVBUF1  DC    X'4E00000000000000'
CNVBUF2  DC    D'0'
CNVBUF3  DC    X'0000000000000000'
CNVBUF4  DC    D'0'
CNVCNST1 DC    X'4E00000080000000'
CNVCNST2 DC    X'4080000000000000'
CNVCNST4 DC    X'C880000000000000'
CNVCNST3 DC    X'48800000'
*
         DC    0F'0'
*
*        END OF SYMLIB PART OF FIXED STORAGE AREA
*
./ ADD NAME=FSAREA   0201-12230-12230-1200-00134-00134-00000-LEVEL
*
*        COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
*
*        STATUS - LEVEL 2.1
*
***********************************************************************
*
*        COMMON DATA AREA
*
*        FSAREA
*
***********************************************************************
*
*        DATA THAT IS IMMEDIATELY ACCESSIBLE TO ALL
*        MODULES DURING THE EXECUTION
*
*        ADDRESSED BY MEANS OF R13 OR (FOR THE LIBRARY
*        SUBROUTINES) BY R12
*
FSAREA   EQU   *
*
*        SAVE AREAS
*
         DS    18F                     STANDARD SAVE AREA
ASAVE    EQU   *-FSAREA                ALTERNATE SAVE AREA USED BY
         DS    18F                     CERTAIN SUBROUTINES
*
*        MISCELLANEOUS WORK AREAS AND CONSTANTS
*
FCTVALST EQU   *-FSAREA                TEMPORARY STORAGE FOR
         DS    D                       FUNCTION VALUES
ASTLOC   EQU   *-FSAREA                DISPL FOR ADDR OF STAND LOCTN
         DC    A(FSAREA+FCTVALST)
BRRST    EQU   *-FSAREA                TEMPORARY SAVE REG BRR
HW       EQU   BRRST                   TEMPORARY HALFWORD STORAGE
         DS    F
PROLREG  EQU   *-FSAREA                STORAGE FOR PBT AND LAT WHEN
         DS    2A                      A PROCEDURE IS FORMAL PARAM
*
*        HALFWORD CONTAINING PBN OF CALLED BLOCK IN SECOND BYTE
*
         DS    0H
         DC    X'00'
PROLPBN  EQU   *-FSAREA                STORAGE FOR CALLED PBN
         DC    X'00'
EIGHT    EQU   *-FSAREA                CONST FOR REDUCING RAS
         DC    H'8'
*
         DS    0F
ADSTAB   EQU   *-FSAREA                ADDR OF DSTABLE
         DS    A                       IN THE OBJECT PROGRAM
ANOTTAB  EQU   *-FSAREA                ADDR OF NOTE TABLE
         DS    A                       (INSERTED BY THE OPEN ROUTINE)
*
IHIFSAST EQU   *
PGOPSW   EQU   *-FSAREA                PROGRAM CHECK OLD PSW
         DS    2F
FSAPICA  EQU   *-FSAREA                OLD PICA ADDR
         DC    F'0'
SCRCS    EQU   *-FSAREA                SEMICOLON NUMBER
         DS    H
DTSW     EQU   *-FSAREA                OPTION SWITCHES
OPTSW    EQU   DTSW
         DC    X'00'                   DUMP-80, TRACE-40, SHORT-20
FSAERCOD EQU   *-FSAREA                ERROR CODE FOR ERROR ROUTINE
         DS    C
*
*        RETURN ADDRESS STACK POINTERS DO NOT CHANGE ORDER
*
         DS    0F
IHIFSARS EQU   *
RASSTART EQU   *-FSAREA                ADDR OF FIRST ENTRY IN RAS-8
         DS    F
RASPT    EQU   *-FSAREA                RAS POINTER FROM TOP
         DS    F
RASEND   EQU   *-FSAREA                ADDR OF LAST  ENTRY IN RAS+8
         DS    F
RASPB    EQU   *-FSAREA                RAS POINTER FROM BOTTOM
         DS    F
*
*        LIST OF BRANCH INSTRUCTIONS TO COMMONLY USED SUBROUTINES
*
BRLIST   DS    0F
CAP1     EQU   *-FSAREA                FIRST PART CAPS
         NOP   0
CAP2     EQU   *-FSAREA                SECOND PART CAPS
         NOP   0
PROLOGP  EQU   *-FSAREA                PROLOGUE FORMAL PARAMETER ENTRY
PROLOGFP EQU   PROLOGP
         NOP   0
PROLOG   EQU   *-FSAREA                PROLOGUE PROGRAM USUAL ENTRY
         NOP   0
RETPROG  EQU   *-FSAREA                DISPLACEMENT RETURN PROGRAM
         NOP   0
EPILOGP  EQU   *-FSAREA                EPILOGUE PROGRAM,PROCEDURE ENTRY
         NOP   0
EPILOGB  EQU   *-FSAREA                EPILOGE PROGRAM,BETA-BLOCK ENTRY
         NOP   0
EPILPR3  EQU   *-FSAREA                EPILOGUE PROGRAM ENTRY 3
         NOP   0
CSWE1    EQU   *-FSAREA                FIRST PART CSWES
         NOP   0
CSWE2    EQU   *-FSAREA                SECOND PART CSWES
         NOP   0
LOADPP   EQU   *-FSAREA                LOAD PRECOMPILED PROC ROUTINE
         NOP   0
TRACE    EQU   *-FSAREA
         MVC   0(0),0
         NOP   0
         NOP   0
TERMNTE  EQU   *-FSAREA                NORMAL TERMINATION EXIT
         NOP   0
BCR      EQU   *-FSAREA
         BCR   0,0                     VARIABLE CONDITIONAL BRANCH
GETMSTO  EQU   *-FSAREA
         NOP   0
*
VALUCALL EQU   *-FSAREA
         NOP   0
IORLST   EQU   *-FSAREA
         NOP   0
*
FSAERR   EQU   X'1CC'                  DISPL  FOR ERROR LIST
*
*        DISPLACEMENTS FOR CERTAIN ERROR EXITS IN FSA
*
OUTOFB   EQU   FSAERR+4*16
NUMBIND  EQU   FSAERR+4*19
ARRAYBD  EQU   FSAERR+4*15
ERROR40  EQU   FSAERR+4*40
OERR22   EQU   FSAERR+4*22
ENDLESL  EQU   FSAERR+4*17
OERR21   EQU   FSAERR+4*21
*
./ ADD NAME=IHIENTRY 0201-12230-12230-1200-00055-00055-00000-LEVEL
         MACRO
&NAME    IHIENTRY  &REG=R15,&ID
.*
.*       IHIENTRY
.*
.*       COMPONENT ID - 360S-LM-532 ALGOL F LIBRARY
.*
.*       GENERATE A MODULE EYE CATCHER OF THE SAME FORMAT AS THE
.*       SAVE MACRO BUT DO NOT SAVE REGISTERS AS THE ALGOL RUNTIME
.*       OFTEN DOES NOT PROVIDE FOR THE SAVING OF REGS IN THE
.*       STANDARD MANNER AND FOR STANDARD MODULE ENTRY
.*       THE BRANCH REGISTER MAY BE SET TO ANOTHER REGISTER IF
.*       R15 IS NOT THE ENTRY POINT REGISTER BY USE OF THE
.*       REG PARAMETER
.*
         LCLA  &A,&B,&C
         LCLC  &E,&F,&G,&H
         AIF   ('&ID' EQ '').NULLID
         AIF   ('&ID' EQ '*').SPECID
         AIF   ('&ID'(1,1) NE '''').NOQUOTE
&B       SETA  1
&C       SETA  2
.NOQUOTE ANOP
&A       SETA  ((K'&ID+2)/2)*2+4-&C
*
&NAME    B     &A.(,&REG)          BRANCH AROUND ID
&A       SETA  K'&ID-&C
         DC    AL1(&A)             LENGTH OF IDENTIFIER
&E       SETC  '&ID'(&B+1,&A)
         DC    CL&A'&E'                          IDENTIFIER
         AGO   .CONTA
.NULLID  ANOP
&NAME    DS    0H
         AGO   .CONTA
.SPECID  AIF   ('&NAME' EQ '').CSECTN
&E       SETC  '&NAME'
&A       SETA  1
.CONTQ   AIF   ('&E'(1,&A) EQ '&E').LEAVE
&A       SETA  &A+1
         AGO   .CONTQ
.LEAVE   ANOP
&B       SETA  ((&A+2)/2)*2+4
*
&NAME    B     &B.(,&REG)          BRANCH AROUND ID
         DC    AL1(&A)
         DC    CL&A'&E'            IDENTIFIER
         AGO   .CONTA
.CSECTN  AIF   ('&SYSECT' EQ '').E4
&E       SETC  '&SYSECT'
&A       SETA  1
         AGO   .CONTQ
.E4      IHBERMAC 78,360                    CSECT NAME NULL
.CONTA   ANOP
         MEXIT
         MEND
