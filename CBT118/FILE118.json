{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011250000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 940576, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 13, "INMDSNAM": "CBT.V500.FILE118.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE118.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x10\\x03'", "DS1TRBAL": "b'\\xbf@'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xbc\\x00\\r\\x00\\xbd\\x00\\x0e\\x00\\x11'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Y\\x00$\\x01\\x14 \\x1f\\x01\\x14 \\x1f\\x160\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf9@@@'", "ispf": {"version": "04.89", "flags": 0, "createdate": "2014-07-20T00:00:00", "modifydate": "2014-07-20T16:30:24", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-489"}, "text": "REGULAR CBT TAPE - VERSION 489    FILE:  118\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT489.FILE118\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 42 MEMBERS COUNTED; CUMULATIVE SIZE IS 8,148 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/20/14    16:30:24    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$COB2": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\"\\x00\\x95\\x08\\x0f\\x01\\x01\\x16O\\x16@\\x00\\x19\\x00\\x08\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1995-03-21T00:00:00", "modifydate": "2001-06-13T16:40:22", "lines": 25, "newlines": 8, "modlines": 0, "user": "WSBG"}, "text": "You don't need the COBOL versions of these programs any more.  I have\nAssembler versions now, so the processing is independent of whatever\nIBM wants to do with COBOL.\n\n   Program source for Assembler:  PUTXREF, SMPASUPD, SMPUPD\n\n                               Sam Golob    06/13/01\n\nThe COBOL II versions of these programs have compiled cleanly with the\nLE/370 Cobol compiler.  Jobs to compile the 3 programs are members:\nIGYWCL1, IGYWCL2, IGYWCL3. The LE/370 versions of the programs\nhave executed correctly during my tests.\n\n                               Sam Golob    02/01/99\n\nI've added COBOL II versions of the source programs that have been\nwritten in VS/COBOL.  When I first wrote these programs, I thought they\nwould last forever, because I used such simple language.  However,\nsuch is life.....  Anyway, the COBOL II versions have the number 2\nsomewhere in their name.  Conversion was done with the IBM Cobol\nConversion Aid, release 2.  I feel like an application programmer.\nIt serves me right for writing in VS/COBOL, but it was quick and dirty.\n\n                               Sam Golob    03/21/95\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$$GCRAY": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x01 _\\x01\\x14 \\x1f\\x16#\\x00\\x0e\\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-07-24T00:00:00", "modifydate": "2014-07-20T16:23:35", "lines": 14, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": "All the functionality from Gene Cray's modification to PUTXREF, which\nhe named SMPEXREF, has been included in (LEVEL 006 of) the PUTXREF\nprogram.  Gene Cray's program was originally on File 033 of the CBT\nTape, and it is now being eliminated from being a separate file on\nthe CBT Tape.\n\nIf you are currently using Gene's version of the PUTXREF program, you\ncan keep using the same JCL to run this program instead, except for the\nchange in program name.  Sample JCL has been included here, as member\nPUTXREF#.\n\n   Sam Golob    email:  sbgolob@attglobal.net        (July 24, 01)\n                        sbgolob@cbttape.org\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$$JLAWS": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x17?\\x01\\x01\\x17?\\x11\\t\\x00d\\x00_\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-06-22T00:00:00", "modifydate": "2001-06-22T11:09:00", "lines": 100, "newlines": 95, "modlines": 0, "user": "WSBG"}, "text": "         Jerry Lawson's Documentation for PUTXREF\n\n         Jerry Lawson  860-547-5000 Ext 2960\n         Hartford Insurance Group,\n         690 Asylum Ave.\n         Hartford, CT.  06115\n\n         Original Function (Before extra DD names were added)\n\n         This program takes the PUT PTF file (File 1 from a\n         standard IBM PUT tape), and produces a cross\n         reference of the PTF's included, sorted by FMID.\n         It can take concatenated input, but the tape identity\n         on which the PTF is found will be lost.  The program\n         should be useful to quickly identify what PTF's\n         are on a given tape, what FMID's have maintenance on\n         a tape, and to double check the cross reference (it\n         lies once in a while.)\n\n         DEPENDENCIES:\n\n         1.    This program has an invoked incore sort.\n               It links to the entry point of \"SORT\".\n               change the link macro if you do not support\n               that name or alias.  You will need about\n               300K for the whole program and SORT.\n\n         2.    TITLES.  This file (for FMID titles) is\n               optional.  If not included, you will get a\n               warning message on your SYSOUT, and no titles.\n\n               I have included the file in the JCL, I\n               created the file by doing the following:\n\n               A. ALLOCATE A DATA SET ON TSO  - NORMAL STUFF -\n                   RECFM=FB,LRECL=80\n               B.  ASSIGN THAT DATA SET TO DD NAME OF OZPRINT\n               C.  EXECUTE YOUR INFO - SYS CLIST OR COMMAND\n               D.  ISSUE A 'DEF A' COMMAND TO INFO (SEARCH\n                   ALL FILES)\n               E.  DO A KEY WORD SEARCH AS FOLLOWS -\n                   KWS FMID XREF      I GOT ABOUT 22 HITS,\n                   BUT THE FIRST ONE HAD A TITLE OF\n                   'THIS IS A CROSS REFERENCE OF MVS FMIDS',\n                   OR SOMETHING SIMILAR. BE SURE YOU\n                   HAVE THE LATEST ONE\n               F.  SELECT THE CORRECT ONE, THE ISSUE A\n                   'PRINT UP' COMMAND. THE OUTPUT WILL GO\n                   TO THE DATA SET ALLOCATED TO THE OZPRINT\n                   DDNAME\n               G.  END YOUR INFO SESSION\n               H.  EDIT YOUR PRINT FROM THE INFO SESSION\n                   YOU WANT TO DELETE ALL LINES THAT DO\n                   NOT HAVE AN FMID IN COLUMN 3. NOTE THAT DELETED\n                   FMIDS HAVE A * IN COLUMN 3, FOR BETTER\n                   DOCUMENTATION I DELETE THE STAR ANDMOVE THE\n                   FMID BACK TO 3, BUT THIS IS\n                   OPTIONAL.\n               I.  AFTER YOU HAVE SAVED THE DATA SET,\n                   SORT IT ON COLUMN 3 FOR A LENGTH OF 7.\n               J.  THE TITLE LIST YOU HAVE JUST CREATED\n                   CAN BE EITHER INCLUDED IN THE JCL STREAM\n                   OR KEPT IN A SEPERATE DATA SET, AND POINTED\n                   TO BY THE JCL.\n         3.    REGS MACRO. THE STANDARD REGISTER EQUATES\n               SUCH AS IN R1      EQU    1      ETC.\n               NOTE - REMOVED ON 3/10/82\n\n         CHANGES FOR RELEASE 3.0\n         1.    CHANGED INPUT LOCATION OF TITLES FROM COLUMN 2 TO\n               COLUMN 3. THIS ALLOWS USE OF THE OUTPUT OF THE\n               OZPRINT DD STATEMENT WITHOUT HAVING TO DELETE\n               THE CARRIAGE CONTROL INFO COMPLETELY. SEE THE INFO IN\n               2. ABOVE FOR DETAILS ON HOW TO CREATE THE TITLE\n               FILE.\n         2.    EXTENDED SIZE OF THE TITLE FIELD TO INCLUDE\n               THE COMPONENT ID NOW THAT IBM HAS\n               INCLUDED IT IN THE FMID XREF.\n\n         CHANGES FOR RELEASE 2.0:\n         1. ADDED BLOCKSIZES TO DCB MACROS TO CORRECT DEPENDENCY\n            ON LOCAL MODS\n         2. CORRECTED SORT FIELDS STATEMENT IN PROGRAM. ONLY USED IF\n            IBM SORT IS INVOKED. NOTE THAT PARM ERROR SEEMS TO BE\n            A STANDARD FEATURE WITH THIS PROGRAM - I CAN FIND NO ERROR\n         3. SYSOUT JCL DD STATEMENT ADDED FOR IBM SORTS\n\n         MACROS.\n         SAVE      OPEN      CLOSE      GET\n         PUT       LINK      WTO        ABEND (U128 - BAD SORT)\n         DCB\n\n         REGISTER ASSIGNMENTS - NORMAL LINKAGE CONVENTIONS\n               REG 12              BASE REGISTER\n               REG 2               BAL REGISTER\n               REG 3               BCT REGISTER - PHASE 1\n               REG 4               POINTER TO PTF INPUT RECORD\n               REG 5               OUTPUT POSITION POINTER - PHASE 2\n               REG 6               BCT REGISTER - PHASE 2\n               REG 7               RETURN ADDRESS FOR EODAD (TITLES)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$DOC": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00D\\x00\\x92(\\x8f\\x01\\x01 _\\x11\\x14\\x00l\\x00n\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-10-14T00:00:00", "modifydate": "2001-07-24T11:14:44", "lines": 108, "newlines": 110, "modlines": 0, "user": "WSBG"}, "text": "**********************************************************************\n**********  SMP RELEASE-INDEPENDENT PUT-TAPE TOOLS    ************   *\n**********************************************************************\n*                                                                    *\n*  Documentation  -  S. GOLOB -               - 09/30/87             *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n*   This file, which consists of several programs and sample JCL,    *\n*     allows the systems programmer to pre-view and index,           *\n*     and thoroughly keep track of his PUT tapes BEFORE SMP has      *\n*     a chance to look at them.  Full FORFMID capability is          *\n*     provided, external to SMP.  Since this processing has          *\n*     nothing to do with SMP, it is completely release-independent,  *\n*     and can be used with SMP/4 as well as with SMP/E.              *\n*                                                                    *\n*        *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *        *\n*                                                                    *\n*   The core of this file is the PUTXREF program from Jerry Lawson   *\n*     of the Hartford Insurance Group, which was slightly modified   *\n*     by me.  This program sorts all SYSMODS in a SMPPTFIN file      *\n*     by owning FMID.  The output of Jerry's PUTXREF program is a    *\n*     report showing the FMID name and the sysmods belonging to it   *\n*     listed afterwards.  (See FILE 033 of the CBT tape for          *\n*     another modification of PUTXREF, which allows selectivity      *\n*     by FMID and other criteria.  That one is by Gene Cray of       *\n*     the New Jersey Treasury Department in Trenton.)                *\n*                                                                    *\n*        *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *        *\n*                                                                    *\n*   My program SMPASUPD takes the output of the PUTXREF program      *\n*     and makes it \"inputable\" to an SMP job.  Output of SMPASUPD    *\n*     looks like:                                                    *\n*                                                                    *\n  ./  ADD  NAME=EBB1102\n      UY04130 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */\n      UY09531 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */\n      UY10163 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */\n      UY10354 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */\n      UY10882 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */\n  ./  ADD  NAME=EDM1102\n      UY10582 /*  FMID - EDM1102 - FROM PUT TAPE - DONE 09/15/87  */\n*                                                                    *\n*     You can obviously use this as input to another SMP job, and    *\n*     this gives you full FORFMID power for each PUT tape.           *\n*                                                                    *\n*        *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *        *\n*                                                                    *\n*   The third feature of this processing is my SMPUPD program,       *\n*     which allows the breaking up of a SMPPTFIN file into a PDS,    *\n*     whose members are the separate SYSMODS.  Support is provided   *\n*     for APAR, USERMOD, and FUNCTION sysmods as well as for PTFs.   *\n*     This program is a rather quick-and-dirty way of doing things,  *\n*     but it gets its job done superbly, and that's what counts.     *\n*     Basically, it looks in a file for ++ PTF or ++ APAR or         *\n*     ++ USERMOD etc.  It parses for the 7-character sysmod number.  *\n*     In the process of making a temporary copy of the SMPPTFIN      *\n*     file, it inserts a card in front of each sysmod, with the      *\n*     format:                                                        *\n  ./  ADD  NAME=sysmdno\n*                                                                    *\n*     In addition, all \"./\" strings in columns 1 to 2 of the copied  *\n*     sysmod file are changed to \"><\".  Then the PDSLOAD program     *\n*     (from File 316 of the CBT tape) can be used to load all the    *\n*     sysmods separately into PDS members, and to convert the \"><\"   *\n*     strings within the sysmods, back to \"./\" .                     *\n*                                                                    *\n*   A sample jobstream, called SMPUPDJ in this pds, will show yet    *\n*     another step at the end.  It may not be widely publicized      *\n*     yet, but the PDS command processor (from FILE 182 of the       *\n*     CBT tape) starting with version 8.0, has the capability of     *\n*     supplying full ISPF statistics to a source pds member. This    *\n*     can also be done in batch mode.  I add a step at the end       *\n*     of the jobstream SMPUPDJ which runs TSO in batch, and          *\n*     adds ISPF statistics to all the sysmods, so you know how       *\n*     many lines each one has.  Once the PTFS or other sysmods       *\n*     have been separated, you may inquire about them by browsing    *\n*     or editing them individually.  Also, since this jobstream is   *\n*     a quick and reproducible process (it takes 3.5 minutes to run  *\n*     on my machine), you can leave the output dataset on a work     *\n*     pack for a few hours if you're short of permanent disk space.  *\n*     Then you can recreate it again the next day.                   *\n*                                                                    *\n*   One more note.  Sometimes IBM will send out duplicate PTFs       *\n*     on the same PUT tape.  This will obviously create deleted      *\n*     members on your output library, since the second load of       *\n*     a PDS member will delete the first member that has the         *\n*     same name.  Therefore, I use another capability of the PDS     *\n*     program, which is the RESTORE function to resurrect deleted    *\n*     members.  The deleted members are put back under the names     *\n*     $PTF0001, $PTF0002, etc. so they can be browsed and compared   *\n*     to the \"real\" ones which had the same name.  (Actually, in a   *\n*     RECEIVE job, the deleted version would be received, since it   *\n*     occurs first in the file.)  The PDS command in PDS version     *\n*     8.0 which does this is:                                        *\n*                                                                    *\n*        RESTORE $PTF repeat noprompt                                *\n*                                                                    *\n*   Please browse the sample jobs for their commentary material.     *\n*     I would appreciate getting calls and comment from users or     *\n*     prospective users of these tools.  This kind of interaction    *\n*     leads to improvement and progress, usually.  Thanks much.      *\n*                                                                    *\n*   Please don't forget to look at Gene Cray's code in File 033.     *\n*                                                                    *\n*   If you have an SMP4 environment, look at the additional          *\n*     tools in File 428.                                             *\n*                                                                    *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NEWASM": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00F\\x01\\x01\\x16O\\x01\\x01 _\\x11\\x12\\x00W\\x00\\x17\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-06-13T00:00:00", "modifydate": "2001-07-24T11:12:46", "lines": 87, "newlines": 23, "modlines": 0, "user": "WSBG"}, "text": "              Assembler version of FORFMID processing\n\n\nPLEASE READ ALL OF THESE NOTES......\n\n >>>>>  Recent Changes in this File:\n\n >>>>>\n      All of the functionality of all of the programs in this file,\n      can now be found in the 2 programs:  PUTXREF and SMPUPD.\n\n      The other programs are included only for historical reasons,\n      and as backup, in case some defect might appear in the current\n      version of the main two programs.\n >>>>>\n\n\n      I have \"assemblerized\" the processing in this file.  You don't\nneed COBOL any more.  I have kept the old COBOL programs here for now,\njust in case there is some lack in the Assembler Language versions.\n\n      Renames of programs are as follows:\n       (First name is the current program name, second name is the name\n        of the replaced program, in this current version of the file.)\n\n  PUTXREF  is instead of PUTXREFV (the old version)\n     reason:  We needed FBA blocked output instead of VBA unblocked.\n     reason:  A new optional //SMPCOUT dd card gets you the same\n              output from PUTXREF, as SMPASUPD produces from the\n              //PRINTER output of PUTXREF.\n\n  SMPASUPD is instead of SMPFBUPD (the old FB version)\n     reason:  Same function.  Coded in Assembler instead of COBOL.\n\n  SMPUPD   is instead of SMPUPDCB (the old version)\n     reason:  Same function.  Coded in Assembler instead of COBOL.\n              Added much SYSPRINT reporting for the output of the\n              Assembler SMPUPD program, and a READ-only option.\n\n      I have finally made the FORFMID processing independent of COBOL.\nThe new version of the PUTXREF program, now puts out its report output\nto the PRINTER DD as an FBA blocked file, instead of as a VBA unblocked\nfile.  Therefore the DCB attributes of the PRINTER file can be like:\n\n//PRINTER  DD  DSN=&TEMP1,DISP=(NEW,PASS),UNIT=SYSDA,\n//         DCB=(RECFM=FBA,LRECL=133,BLKSIZE=27930),\n//         SPACE=(TRK,(60,45))\n//SMPCOUT  DD DISP=SHR,DSN=WSBG.PTFPDS(TESTSEQO)    <== OPTIONAL DDNAME\n//*                                      <== FB-80 ./ ADD NAME= output\n\nThe older version of the PUTXREF program that produces VBA PRINTER\noutput, is now called PUTXREFV.\n\nThe full JCL stream to do this processing is now called JCLFMIDS.\nThe full JCL stream to do this processing using //SMPCOUT output\n    of the PUTXREF program, is called JCL3.\n\nThe assembler version of the post-processor program is called SMPASUPD.\nThis program takes only the fixed blocked input from the new version\nof PUTXREF.  Or as an alternative, don't run SMPASUPD, but code a\n//SMPCOUT DD card as output from the PUTXREF program directly.\n\nThe COBOL post-processor programs SMPFMUPV and SMPFMUPD are still being\nkept here, in case there might be a problem with the assembler version.\nThe JCL stream using the old PUTXREF program, has the program name now\nchanged to PUTXREFV.\n\nGene Cray's modification to only look for one FMID, has been included\nin (LEVEL 006 of) the PUTXREF program.  JCL additions to run his code,\nwhich are totally optional, are:\n\n//SRCHDATA DD  *\nHBB6603\n//*  TO USE, PLACE FMID NUMBER IN COLS 1-7 ABOVE, AFTER THE SRCHDATA\n//*  CARD.\n//*  IF YOU WANT A LISTING OF THE WHOLE TAPE, TYPE IN 'ALL', INSTEAD.\n/*\n\nThe use of the SRCHDATA ddname is entirely optional, and I'd only\nrecommend using it in the JCL, if its function is needed.\n\n\n    Questions:   Please write to Sam Golob\n\n                 email:   sbgolob@attglobal.net\n                          sbgolob@aol.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE01": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x15\\x01\\x14 \\x1f\\x01\\x16\\x19\\x9f\\x13#\\x00L\\x00-\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2014-07-20T00:00:00", "modifydate": "2016-07-17T13:23:15", "lines": 76, "newlines": 45, "modlines": 0, "user": "SBGOLOB"}, "text": "         Some more notes on SMP/E input processing\n         ---- ---- ----- -- ----- ----- ----------\n\n\n1.  PTFs as shipped from IBM ain't quite what they used to be.\n    However, we can handle the differences, at least partially.\n\n    For example, we can handle compaction.  This process seems\n    to have been meant to reduce the bulk in PTFs that are being\n    shipped electronically.  However, in my biased opinion, the\n    process does not seem to save that much space.  It does serve\n    to obfuscate the content of the PTFs (namely the object decks)\n    and therefore the actual content of the PTF becomes harder to\n    understand.\n\n    Nevertheless, a simple process, using the IBM utility GIMCPTS\n    with the following sample JCL, can \"expand\" the PTF's material\n    and show you most of the original content.  The only parts of\n    the PTF which remain obfuscated, are the modules presented in\n    $$.GIMDTS  FORMAT .\n\n    Simple expansion of each PTF can be done using the following\n    prototype JCL:\n\n\n    //SBGOLOBG  JOB (ACCT#),S-GOLOB,\n    // NOTIFY=&SYSUID,\n    // CLASS=B,MSGCLASS=X\n    //*\n    //EXPPTF  PROC MEM=XXX\n    //UNZIP   EXEC PGM=GIMCPTS,PARM='EXPAND,LANGUAGE=ENU'\n    //SYSPRINT DD  SYSOUT=*\n    //SYSUT1   DD  DISP=SHR,DSN=SBGOLOB.PTFSyymm.PTFS(&MEM)  *input\n    //SYSUT2   DD  DISP=SHR,DSN=SBGOLOB.PTFSyymm.PTEX(&MEM)  *output\n    //        PEND\n    //*\n    //PTFNUMB EXEC EXPPTF,MEM=PTFNUMB\n\n       etc.\n\n    where the SYSUT2 DD name points to the output dataset.\n\n    All SMPPTS control statements and comment statements are\n    unchanged by this process.  Only the contents of the\n    modules are expanded.\n\n    Again I must emphasize that the contents of\n    $$.GIMDTS  FORMAT material still remains unchanged after\n    this process.\n\n    Sequential SMPPTFIN datasets are also handled correctly\n    by the GIMCPTS program, and you can use the following\n    sample JCL as an example:\n\n    //SBGOLOBG  JOB (ACCT#),S-GOLOB,\n    // NOTIFY=&SYSUID,\n    // CLASS=B,MSGCLASS=X\n    //*\n    //UNZIP   EXEC PGM=GIMCPTS,PARM='EXPAND,LANGUAGE=ENU'\n    //SYSPRINT DD  SYSOUT=*\n    //SYSUT1   DD  DISP=OLD,DSN=SBGOLOB.SMPPTFIN.SEQPTFS  *input\n    //SYSUT2   DD  DISP=SHR,DSN=SBGOLOB.SMPPTFIN.SEQPTEX  *output\n    //SYSIN    DD  DUMMY\n\n\n2.  Since comments and SMP control cards inside the PTFs are not\n    changed by GIMCPTS processing at all, our own programs,\n    PUTXREF and SMPUPD are not affected in their operation at all,\n    except for their report of the number of cards read in each\n    PTF.\n\n\n\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$OLDDOC": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x88\\t?\\x00\\x99\\x03/\\x01R\\x00b\\x00b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1999-02-01T01:52:00", "lines": 98, "newlines": 98, "modlines": 0, "user": "SBGOLOB"}, "text": "*********************************************************************** 00002\n*                                                                     * 00003\n*              PUTXREF - VERSION 3.0                                  * 00004\n*                                                                     * 00005\n*        JERRY LAWSON  860-547-5000 EXT 2960                          * 00006\n*        HARTFORD INSURANCE GROUP,                                    * 00007\n*        690 ASYLUM AVE.                                              * 00008\n*        HARTFORD, CT.  06115                                         * 00009\n*                                                                     * 00010\n*        FUNCTION:                                                    * 00011\n*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A           * 00012\n*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS                 * 00013\n*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.             * 00014\n*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENITY         * 00015\n*        ON WHICH THE PTF IS FOUND WILL BE LOST. THE PROGRAM          * 00016\n*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S              * 00017\n*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON         * 00018\n*        A TAPE, AND TO DOUBLE CHECK THE STERLING FORREST             * 00019\n*        CROSS REFERENCE (IT LIES ONCE IN A WHILE.)                   * 00020\n*                                                                     * 00021\n*        DEPENDANCIES:                                                * 00022\n*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.               * 00023\n*              IT LINKS TO THE ENTRY POINT OF \"SORT\".                 * 00024\n*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT            * 00025\n*              THAT NAME OR ALIAS. YOU WILL NEED ABOUT                * 00026\n*              300K FOR THE WHOLE PROGRAM AND SORT.                   * 00027\n*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS                * 00028\n*              OPTIONAL. IF NOT INCLUDED, YOU WILL GET A              * 00029\n*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.         * 00030\n*              I HAVE INCLUDED THE FILE IN THE JCL, I                 * 00031\n*              CREATED THE FILE BY DOING THE FOLLOWING:               * 00032\n*              A. ALLOCATE A DATA SET ON TSO  - NORMAL STUFF -        * 00033\n*                  RECFM=FB,LRECL=80                                  * 00034\n*              B.  ASSIGN THAT DATA SET TO DD NAME OF OZPRINT         * 00035\n*              C.  EXECUTE YOUR INFO - SYS CLIST OR COMMAND           * 00036\n*              D.  ISSUE A 'DEF A' COMMAND TO INFO (SEARCH            * 00037\n*                  ALL FILES)                                         * 00038\n*              E.  DO A KEY WORD SEARCH AS FOLLOWS -                  * 00039\n*                  KWS FMID XREF      I GOT ABOUT 22 HITS,            * 00040\n*                  BUT THE FIRST ONE HAD A TITLE OF                   * 00041\n*                  'THIS IS A CROSS REFERENCE OF MVS FMIDS',          * 00042\n*                  OR SOMETHING SIMILAR. BE SURE YOU                  * 00043\n*                  HAVE THE LATEST ONE                                * 00044\n*              F.  SELECT THE CORRECT ONE, THE ISSUE A                * 00045\n*                  'PRINT UP' COMMAND. THE OUTPUT WILL GO             * 00046\n*                  TO THE DATA SET ALLOCATED TO THE OZPRINT           * 00047\n*                  DDNAME                                             * 00048\n*              G.  END YOUR INFO SESSION                              * 00049\n*              H.  EDIT YOUR PRINT FROM THE INFO SESSION              * 00050\n*                  YOU WANT TO DELETE ALL LINES THAT DO               * 00051\n*                  NOT HAVE AN FMID IN COLUMN 3. NOTE THAT DELETED      00052\n*                  FMIDS HAVE A * IN COLUMN 3, FOR BETTER             * 00053\n*                  DOCUMENTATION I DELETE THE STAR ANDMOVE THE        * 00054\n*                  FMID BACK TO 3, BUT THIS IS                        * 00055\n*                  OPTIONAL.                                          * 00056\n*              I.  AFTER YOU HAVE SAVED THE DATA SET,                 * 00057\n*                  SORT IT ON COLUMN 3 FOR A LENGTH OF 7.             * 00058\n*              J.  THE TITLE LIST YOU HAVE JUST CREATED               * 00059\n*                  CAN BE EITHER INCLUDED IN THE JCL STREAM           * 00060\n*                  OR KEPT IN A SEPERATE DATA SET, AND POINTED        * 00061\n*                  TO BY THE JCL.                                     * 00062\n*        3.    REGS MACRO. THE STANDARD REGISTER EQUATES              * 00063\n*              SUCH AS IN R1      EQU    1      ETC.                  * 00064\n*              NOTE - REMOVED ON 3/10/82                              * 00065\n*                                                                     * 00066\n*        CHANGES FOR RELEASE 3.0                                      * 00067\n*        1.    CHANGED INPUT LOCATION OF TITLES FROM COLUMN 2 TO      * 00068\n*              COLUMN 3. THIS ALLOWS USE OF THE OUTPUT OF THE         * 00069\n*              OZPRINT DD STATEMENT WITHOUT HAVING TO DELETE          * 00070\n*              THE CARRIAGE CONTROL INFO COMPLETELY. SEE THE INFO IN  * 00071\n*              2. ABOVE FOR DETAILS ON HOW TO CREATE THE TITLE        * 00072\n*              FILE.                                                  * 00073\n*        2.    EXTENDED SIZE OF THE TITLE FIELD TO INCLUDE            * 00074\n*              THE COMPONENT ID NOW THAT IBM HAS                      * 00075\n*              INCLUDED IT IN THE FMID XREF.                          * 00076\n*                                                                     * 00077\n*        CHANGES FOR RELEASE 2.0:                                     * 00078\n*        1. ADDED BLOCKSIZES TO DCB MACROS TO CORRECT DEPENDENCY      * 00079\n*           ON LOCAL MODS                                             * 00080\n*        2. CORRECTED SORT FIELDS STATEMENT IN PROGRAM. ONLY USED IF  * 00081\n*           IBM SORT IS INVOKED. NOTE THAT PARM ERROR SEEMS TO BE     * 00082\n*           A STANDARD FEATURE WITH THIS PROGRAM - I CAN FIND NO ERROR* 00083\n*        3. SYSOUT JCL DD STATEMENT ADDED FOR IBM SORTS               * 00084\n*                                                                     * 00085\n*        MACROS.                                                      * 00086\n*        SAVE      OPEN      CLOSE      GET                           * 00087\n*        PUT       LINK      WTO        ABEND (U128 - BAD SORT)       * 00088\n*        DCB                                                            00089\n*                                                                     * 00090\n*        REGISTER ASSIGNMENTS - NORMAL LINKAGE CONVENTIONS            * 00091\n*              REG 12              BASE REGISTER                      * 00092\n*              REG 2               BAL REGISTER                       * 00093\n*              REG 3               BCT REGISTER - PHASE 1             * 00094\n*              REG 4               POINTER TO PTF INPUT RECORD        * 00095\n*              REG 5               OUTPUT POSITION POINTER - PHASE 2  * 00096\n*              REG 6               BCT REGISTER - PHASE 2             * 00097\n*              REG 7               RETURN ADDRESS FOR EODAD (TITLES)  * 00098\n*********************************************************************** 00099\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PUTXDOC": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92(\\x8f\\x01\\x00)\\x9f\\x111\\x00\\x99\\x00\\x99\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-10-14T00:00:00", "modifydate": "2000-10-25T11:31:00", "lines": 153, "newlines": 153, "modlines": 0, "user": "WSBG"}, "text": "**********************************************************************\n**********       PUTXREF - SMP FORFMID TOOL           ************   *\n**********************************************************************\n*  PUTXREF PROGRAM - PRODUCE A REPORT SORTING ANY SYSMODS ON         *\n*    A PUT TAPE OR APAR TAPE OR ANY SMPPTFIN FILE BY FMID.           *\n**********************************************************************\n*                                                                    *\n*  MODIFICATION RECORD - S. GOLOB -               - 04/26/88        SBG\n*                                                                    *\n*                              SAM GOLOB                             *\n*                                                                    *\n*                                                                   SBG\n*  MODIFIED APRIL 26, '88 BY SHMUEL GOLOB             TO ONLY       SBG\n*    LOOK FOR FMID KEYWORD IF YOU'RE LEGITIMATELY WITHIN A ++VER    SBG\n*    STATEMENT.  LEFT ALL THE OTHER STUFF IN AS SAFETY CHECKS.      SBG\n*    PLEASE INFORM ME             (212) 206-5847 IF THIS VERSION    SBG\n*    OF THE PROGRAM FAILS TO WORK.  (CODE CAN USE CLEANING UP.)     SBG\n*                                                                   SBG\n*  MODIFIED APRIL 25, '88 BY SHMUEL GOLOB             TO FIX A FEW  SBG\n*    BUGS.  THE PROGRAM CAN NOW DETECT IF THE FMID KEYWORD IS IN    SBG\n*    A COMMENT AREA.  IT ALSO KNOWS THAT IN THE INSIDE OF JCLIN YOU SBG\n*    CAN'T TEST FOR A COMMENT AREA, AND IT WON'T TEST FOR AN FMID   SBG\n*    KEYWORD THERE EITHER.  ALSO FIXED BUG THAT 1ST CHARACTER       SBG\n*    OF THE FMID WAS CHOPPED OFF IF THERE WERE AN ODD NUMBER OF     SBG\n*    SPACES BETWEEN THE OPEN PAREN AFTER THE FMID KEYWORD, AND      SBG\n*    THE FIRST NON-BLANK.  ANOTHER BUG WAS THAT THE FMID KEYWORD    SBG\n*    IN A ++IF STATEMENT WAS IGNORED ONLY ON THE SAME LINE AS THE   SBG\n*    ++IF, BUT NOT ON THE FOLLOWING LINES UNDER THE ++IF'S CONTROL. SBG\n*                                                                    *\n*  MODIFIED JUNE 26, 1986 BY SHMUEL GOLOB             TO LOOK AT     *\n*    ++APAR, ++USERMOD, AND ++FUNCTION IN ADDITION TO ++PTF.         *\n*    ( I WANT TO KNOW WHAT FMIDS MY APARS AND USERMODS BELONG TO! )  *\n*                                                                    *\n*  THIS CODE WAS OBTAINED FROM FILE 118 OF THE CBT MVS MODS TAPE,    *\n*    VERSION 260.  THE CODE THERE ONLY EXTRACTS PTFS.  I HAVE        *\n*    MODIFIED IT IN THIS VERSION TO RECOGNIZE APARS, USERMODS, AND   *\n*    FUNCTION SYSMODS ALSO.                                          *\n*                                                                    *\n*  THE OLD VERSION OF THIS PROGRAM REMAINS ON THIS FILE UNDER THE    *\n*    MEMBER NAME PTFSXREF.  THE MEMBER OFILE118 HAS THE EXACT        *\n*    CONTENTS OF FILE 118 FROM PREVIOUS VERSIONS OF THE CBT TAPE.    *\n*                                                                    *\n*  MY PROGRAM, SMPFMUPV, FROM FILE 428 OF THE CBT TAPE               *\n*    CONVERTS THE OUTPUT OF THIS PROGRAM TO THE FORMAT:              *\n*    ./  ADD  NAME=FMIDNAM                                           *\n*          UZ11111  /*  FMID - FMIDNAM - FROM PUT TAPE - DATE  */    *\n*                                                                    *\n*    THIS IS SUITABLE FOR INPUT TO AN SMP APPLY OR LIST              *\n*    JOB.  WE GET A \"FORFMID\" EFFECT, GOOD ON ANY VERSION            *\n*    OF SMP, BECAUSE IT'S ONLY DEPENDENT ON THE SMPPTFIN FILE,       *\n*    AND NOT ON THE VERSION OF SMP WHICH WILL PROCESS THAT FILE.     *\n*                                                                    *\n*    PLEASE LOOK ON FILE 428 TO GET THE MOST MILEAGE FROM THIS       *\n*    PROGRAM, AND FOR OTHER USEFUL SMP TOOLS.                        *\n******************************************************************   *\n**********************************************************************  00002\n*                                                                    *  00003\n*              PUTXREF - VERSION 3.0                                 *  00004\n*                                                                    *  00005\n*        JERRY LAWSON  860-547-5000 EXT 2960                         *  00006\n*        HARTFORD INSURANCE GROUP,                                   *  00007\n*        690 ASYLUM AVE.                                             *  00008\n*        HARTFORD, CT.  06115                                        *  00009\n*                                                                    *  00010\n*        FUNCTION:                                                   *  00011\n*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A          *  00012\n*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS                *  00013\n*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.            *  00014\n*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENITY        *  00015\n*        ON WHICH THE PTF IS FOUND WILL BE LOST. THE PROGRAM         *  00016\n*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S             *  00017\n*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON        *  00018\n*        A TAPE, AND TO DOUBLE CHECK THE STERLING FORREST            *  00019\n*        CROSS REFERENCE (IT LIES ONCE IN A WHILE.)                  *  00020\n*                                                                    *  00021\n*        DEPENDANCIES:                                               *  00022\n*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.              *  00023\n*              IT LINKS TO THE ENTRY POINT OF \"SORT\".                *  00024\n*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT           *  00025\n*              THAT NAME OR ALIAS. YOU WILL NEED ABOUT               *  00026\n*              300K FOR THE WHOLE PROGRAM AND SORT.                  *  00027\n*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS               *  00028\n*              OPTIONAL. IF NOT INCLUDED, YOU WILL GET A             *  00029\n*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.        *  00030\n*              I HAVE INCLUDED THE FILE IN THE JCL, I                *  00031\n*              CREATED THE FILE BY DOING THE FOLLOWING:              *  00032\n*              A. ALLOCATE A DATA SET ON TSO  - NORMAL STUFF -       *  00033\n*                  RECFM=FB,LRECL=80                                 *  00034\n*              B.  ASSIGN THAT DATA SET TO DD NAME OF OZPRINT        *  00035\n*              C.  EXECUTE YOUR INFO - SYS CLIST OR COMMAND          *  00036\n*              D.  ISSUE A 'DEF A' COMMAND TO INFO (SEARCH           *  00037\n*                  ALL FILES)                                        *  00038\n*              E.  DO A KEY WORD SEARCH AS FOLLOWS -                 *  00039\n*                  KWS FMID XREF      I GOT ABOUT 22 HITS,           *  00040\n*                  BUT THE FIRST ONE HAD A TITLE OF                  *  00041\n*                  'THIS IS A CROSS REFERENCE OF MVS FMIDS',         *  00042\n*                  OR SOMETHING SIMILAR. BE SURE YOU                 *  00043\n*                  HAVE THE LATEST ONE                               *  00044\n*              F.  SELECT THE CORRECT ONE, THE ISSUE A               *  00045\n*                  'PRINT UP' COMMAND. THE OUTPUT WILL GO            *  00046\n*                  TO THE DATA SET ALLOCATED TO THE OZPRINT          *  00047\n*                  DDNAME                                            *  00048\n*              G.  END YOUR INFO SESSION                             *  00049\n*              H.  EDIT YOUR PRINT FROM THE INFO SESSION             *  00050\n*                  YOU WANT TO DELETE ALL LINES THAT DO              *  00051\n*                  NOT HAVE AN FMID IN COLUMN 3. NOTE THAT DELETED   *  00052\n*                  FMIDS HAVE A * IN COLUMN 3, FOR BETTER            *  00053\n*                  DOCUMENTATION I DELETE THE STAR ANDMOVE THE       *  00054\n*                  FMID BACK TO 3, BUT THIS IS                       *  00055\n*                  OPTIONAL.                                         *  00056\n*              I.  AFTER YOU HAVE SAVED THE DATA SET,                *  00057\n*                  SORT IT ON COLUMN 3 FOR A LENGTH OF 7.            *  00058\n*              J.  THE TITLE LIST YOU HAVE JUST CREATED              *  00059\n*                  CAN BE EITHER INCLUDED IN THE JCL STREAM          *  00060\n*                  OR KEPT IN A SEPERATE DATA SET, AND POINTED       *  00061\n*                  TO BY THE JCL.                                    *  00062\n*        3.    REGS MACRO. THE STANDARD REGISTER EQUATES             *  00063\n*              SUCH AS IN R1      EQU    1      ETC.                 *  00064\n*              NOTE - REMOVED ON 3/10/82                             *  00065\n*                                                                    *  00066\n*        CHANGES FOR RELEASE 3.0                                     *  00067\n*        1.    CHANGED INPUT LOCATION OF TITLES FROM COLUMN 2 TO     *  00068\n*              COLUMN 3. THIS ALLOWS USE OF THE OUTPUT OF THE        *  00069\n*              OZPRINT DD STATEMENT WITHOUT HAVING TO DELETE         *  00070\n*              THE CARRIAGE CONTROL INFO COMPLETELY. SEE THE INFO IN *  00071\n*              2. ABOVE FOR DETAILS ON HOW TO CREATE THE TITLE       *  00072\n*              FILE.                                                 *  00073\n*        2.    EXTENDED SIZE OF THE TITLE FIELD TO INCLUDE           *  00074\n*              THE COMPONENT ID NOW THAT IBM HAS                     *  00075\n*              INCLUDED IT IN THE FMID XREF.                         *  00076\n*                                                                    *  00077\n*        CHANGES FOR RELEASE 2.0:                                    *  00078\n*        1. ADDED BLOCKSIZES TO DCB MACROS TO CORRECT DEPENDENCY     *  00079\n*           ON LOCAL MODS                                            *  00080\n*        2. CORRECTED SORT FIELDS STATEMENT IN PROGRAM. ONLY USED IF *  00081\n*           IBM SORT IS INVOKED. NOTE THAT PARM ERROR SEEMS TO BE    *  00082\n*           A STANDARD FEATURE WITH THIS PROGRAM - I CAN FIND NO ERROR  00083\n*        3. SYSOUT JCL DD STATEMENT ADDED FOR IBM SORTS              *  00084\n*                                                                    *  00085\n*        MACROS.                                                     *  00086\n*        SAVE      OPEN      CLOSE      GET                          *  00087\n*        PUT       LINK      WTO        ABEND (U128 - BAD SORT)      *  00088\n*        DCB                                                         *  00089\n*                                                                    *  00090\n*        REGISTER ASSIGNMENTS - NORMAL LINKAGE CONVENTIONS           *  00091\n*              REG 12              BASE REGISTER                     *  00092\n*              REG 2               BAL REGISTER                      *  00093\n*              REG 3               BCT REGISTER - PHASE 1            *  00094\n*              REG 4               POINTER TO PTF INPUT RECORD       *  00095\n*              REG 5               OUTPUT POSITION POINTER - PHASE 2 *  00096\n*              REG 6               BCT REGISTER - PHASE 2            *  00097\n*              REG 7               RETURN ADDRESS FOR EODAD (TITLES) *  00098\n**********************************************************************  00099\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$TITLES": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x17\\x01\\x01\\x19O\\x01\\x01\\x19O\\x14\\x07\\x003\\x00.\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-07-13T00:00:00", "modifydate": "2001-07-13T14:07:17", "lines": 51, "newlines": 46, "modlines": 0, "user": "WSBG"}, "text": "              Keeping the TITLES File Up to Date\n\n\n      You may wonder how to keep the TITLES file up to date, to put\nFMID names on the PUTXREF reports.  My advice is to get an FMID list\nfrom the ESO Tape, if you have that service.  This FMID list is\ncustomized to the products you have, and you just need to edit the\nlist a bit, to put it into the format required by the TITLES file.\n\n      This is an example of the relevant parts of the FMID list from\nFile 3 of the first ESO tape:\n\n  PRODUCT     SERVICE              PRODUCT            PRODUCT\n   FMIDS       (Y/N)             DESCRIPTION          V, R, M\n  -------     -------    ---------------------------- -------\n  EAS1102        N       MVS 3.8 System Assembler     01.01.02\n  EAS1102        N       MVS 3.8 System Assembler     01.01.02\n  EAS1102        N       MVS 3.8 System Assembler     01.01.02\n  EBB1102        N       MVS 3.8 Basic Control Progra 01.01.02\n  EBB1102        N       MVS 3.8 Basic Control Progra 01.01.02\n  EBB1102        N       MVS 3.8 Basic Control Progra 01.01.02\n  EBT1102        N       MVS 3.8 BTAM                 01.01.00\n  EBT1102        N       MVS 3.8 BTAM                 01.01.00\n  EBT1102        N       MVS 3.8 BTAM                 01.01.00\n  EBT1102        N       MVS 3.8 BTAM                 01.01.00\n  EDE1102        N       MVS 3.8 DEMF                 01.01.02\n  EDE1102        N       MVS 3.8 DEMF                 01.01.02\n  EDE1102        N       MVS 3.8 DEMF                 01.01.02\n  EDM1102        N       MVS 3.8                      01.01.02\n\n           and so forth .......\n\n      The format that the TITLES file requires is:\n\n  FMID       -   column  3 for  7 characters\n  TITLE text -   column 12 for 40 characters  (used to be 34 chars)\n\n      If you are reading this, this file contains PUTXREF LV 005 source\nthat uses 40 characters for TITLE text information.  The older versions\nof PUTXREF used only 34 characters.\n\n\n      You shouldn't have any problems editing the text from the ESO\ntape, File (3,NL), first tape.\n\n\n      Best of everything.\n\n      Sam Golob,  sbgolob@attglobal.net      07/13/01\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE118": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00G\\x01\\x14 \\x1f\\x01\\x16\\x19\\x8f\"8\\x00\\xeb\\x00\\xe8\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2014-07-20T00:00:00", "modifydate": "2016-07-16T22:38:47", "lines": 235, "newlines": 232, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 118 is from Sam Golob.  This file is in IEBUPDTE SYSIN    *   FILE 118\n//*           format.  For additional information see the members   *   FILE 118\n//*           called $$NEWDOC and $$NEWASM.                         *   FILE 118\n//*                                                                 *   FILE 118\n//*         This file contains our programs which allow you to      *   FILE 118\n//*         identify which FMIDs each PTF belongs to, in any        *   FILE 118\n//*         SMPPTFIN input stream (PUT Tape, CBPDO PTF file,        *   FILE 118\n//*         and so forth).  These programs AVOID INVOLVING          *   FILE 118\n//*         SMP/E RECEIVE - that's the point!                       *   FILE 118\n//*                                                                 *   FILE 118\n//*     >>>>  THESE PROGRAMS ALLOW YOU TO IDENTIFY EACH PTF's FMID  *   FILE 118\n//*     >>>>  WITHOUT DOING A RECEIVE, AND WITHOUT INVOLVING OR     *   FILE 118\n//*     >>>>  INVOKING SMP/E AT ALL!                                *   FILE 118\n//*                                                                 *   FILE 118\n//*     >>>>  (If you're careful, you'll never mount the wrong      *   FILE 118\n//*     >>>>  PTF tape again...... in a RECEIVE job !! )            *   FILE 118\n//*                                                                 *   FILE 118\n//*         Another program which will help you with this, is the   *   FILE 118\n//*         program called \"PHRANQUE\" on CBT File 289.              *   FILE 118\n//*                                                                 *   FILE 118\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 118\n//*                                                                 *   FILE 118\n//*     Jerry Lawson's email:    jlawson@thehartford.com            *   FILE 118\n//*                                                                 *   FILE 118\n//*     Sam Golob's email:       sbgolob@cbttape.org     OR         *   FILE 118\n//*                              sbgolob@attglobal.net              *   FILE 118\n//*                                                                 *   FILE 118\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 118\n//*                                                                 *   FILE 118\n//*     The only programs you now need, to do all the processing    *   FILE 118\n//*     of SMPPTFIN input that can be done with this file, are:     *   FILE 118\n//*                                                                 *   FILE 118\n//*       PUTXREF - When used with optional DD cards //SMPCOUT      *   FILE 118\n//*                 and //PDSATOUT , will replace the combined      *   FILE 118\n//*                 functions of PUTXREF, plus the function of      *   FILE 118\n//*                 SMPASUPD or SMPFMUPD.                           *   FILE 118\n//*                                                                 *   FILE 118\n//*                 The functionality from Gene Cray's file, to     *   FILE 118\n//*                 pick out one FMID for the report, has been      *   FILE 118\n//*                 moved here too.  See member PUTXREF# for        *   FILE 118\n//*                 sample JCL which contains the optional ddname   *   FILE 118\n//*                 //SRCHDATA , and instructions for its use.      *   FILE 118\n//*                                                                 *   FILE 118\n//*       SMPUPD  - Enhanced function with many stats now printed   *   FILE 118\n//*                 and the possibility of PARM=READ for \"read      *   FILE 118\n//*                 only\" of the SMPPTFIN input file.               *   FILE 118\n//*                                                                 *   FILE 118\n//*          All the rest of the programs are just included for     *   FILE 118\n//*          either historical value, or as coding examples.        *   FILE 118\n//*                                                                 *   FILE 118\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 118\n//*                                                                 *   FILE 118\n//*     I would just like to observe that it is possible for one    *   FILE 118\n//*     PTF to have more than one FMID.  IBM's SMP/E people do      *   FILE 118\n//*     this themselves.  The PTF has the same materials, for the   *   FILE 118\n//*     different FMIDs, but it has different requisites.           *   FILE 118\n//*                                                                 *   FILE 118\n//*     The consequences of this for our processing are:            *   FILE 118\n//*                                                                 *   FILE 118\n//*     PUTXREF will create multiple records for such a PTF, each   *   FILE 118\n//*     record belonging to a different FMID.  SMPUPD will only     *   FILE 118\n//*     report one PTF read, because only one PTF was read.         *   FILE 118\n//*     Please note this phenomenon carefully, when it comes to     *   FILE 118\n//*     comparing counts from the two programs.                     *   FILE 118\n//*                                                                 *   FILE 118\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 118\n//*                                                                 *   FILE 118\n//*    Newnote: 1- JCL for batch expansion of PTFs using the        *   FILE 118\n//*    -------     GIMCPTS program is now included.  See GIM****    *   FILE 118\n//*    Jul 2014    members in this pds, and see member $$NOTE01.    *   FILE 118\n//*                                                                 *   FILE 118\n//*             2- Our own programs, PUTXREF and SMPUPD, are        *   FILE 118\n//*                not really affected by the new GIMCPTS           *   FILE 118\n//*                and GIMDTS processing, because the comments      *   FILE 118\n//*                and \"++\" statements remain unchanged.            *   FILE 118\n//*                                                                 *   FILE 118\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 118\n//*                                                                 *   FILE 118\n//*       Note:  COBOL is no longer needed for this processing.     *   FILE 118\n//*                                                                 *   FILE 118\n//*       Note:  FORFMID processing COBOL programs were             *   FILE 118\n//*              replaced with Assembler equivalents.               *   FILE 118\n//*              See member JCLFMIDS.  This processing              *   FILE 118\n//*              no longer needs COBOL.                             *   FILE 118\n//*                                                                 *   FILE 118\n//*       Note2: The PUTXREF program now takes an optional ddname   *   FILE 118\n//*              //SMPCOUT which is an FB-80 file, to replace the   *   FILE 118\n//*              //SYSUT2  file of the SMPASUPD or SMPFMUPD         *   FILE 118\n//*                        programs.  SMPASUPD or SMPFMUPD are      *   FILE 118\n//*                        no longer needed for FORFMID processing. *   FILE 118\n//*                                                                 *   FILE 118\n//*       Note3: The PUTXREF program now takes an optional ddname   *   FILE 118\n//*              //PDSATOUT which is an FB-80 file, to generate     *   FILE 118\n//*              control cards for the PDS 8.6 program from File    *   FILE 118\n//*              182 of the CBT Tape.  These cards will generate    *   FILE 118\n//*              ISPF stats for the SYSMODs in the SMPPTS dataset,  *   FILE 118\n//*              with the ISPF userid being the owning FMID of the  *   FILE 118\n//*              SYSMOD, as follows:                                *   FILE 118\n//*                                                                 *   FILE 118\n//*              ATTRIB UQ54586 ADDSTATS  ID(EDU1G01)               *   FILE 118\n//*              ATTRIB UW79679 ADDSTATS  ID(HBB6603)               *   FILE 118\n//*              ATTRIB UW79748 ADDSTATS  ID(HBB6603)               *   FILE 118\n//*              ATTRIB UQ54576 ADDSTATS  ID(HGD3200)               *   FILE 118\n//*              ATTRIB UQ54956 ADDSTATS  ID(HGD3200)               *   FILE 118\n//*              ATTRIB UW79333 ADDSTATS  ID(HIF4402)               *   FILE 118\n//*              ATTRIB UQ53658 ADDSTATS  ID(HIR2101)               *   FILE 118\n//*                                                                 *   FILE 118\n//*       Note:  SMPUPD processing is now replaced by an            *   FILE 118\n//*              Assembler program too.  No COBOL is                *   FILE 118\n//*              needed any more to run this processing.            *   FILE 118\n//*                                                                 *   FILE 118\n//*              The new Assembler program now has extensive        *   FILE 118\n//*              reporting in the SYSPRINT dataset.  Enjoy!         *   FILE 118\n//*                                                                 *   FILE 118\n//*              SMPUPD can now be run with PARM=READ for read      *   FILE 118\n//*              only action, to print stats about the SMPPTFIN     *   FILE 118\n//*              input dataset.                                     *   FILE 118\n//*                                                                 *   FILE 118\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 118\n//*                                                                 *   FILE 118\n//*     Historical Note about COBOL programs:                       *   FILE 118\n//*                                                                 *   FILE 118\n//*       COBOL programs are being kept here, just in case....      *   FILE 118\n//*                                                                 *   FILE 118\n//*       NOTE:  COBOL PROGRAMS WERE UPDATED FOR LE/370             *   FILE 118\n//*              AND COMPILE-LINK JOBS ARE NOW INCLUDED.            *   FILE 118\n//*                                                                 *   FILE 118\n//*              This file, which consists of several programs      *   FILE 118\n//*              and sample JCL, allows the systems programmer      *   FILE 118\n//*              to pre-view and index, and thoroughly keep         *   FILE 118\n//*              track of his SMPPTFIN-format tapes before SMP/E    *   FILE 118\n//*              has a chance to look at them.  Any tape or disk    *   FILE 118\n//*              SMPPTFIN file can get this treatment.  Full        *   FILE 118\n//*              FORFMID capability is provided, external to        *   FILE 118\n//*              SMP/E.  Since this processing has nothing to do    *   FILE 118\n//*              with SMP/E, it is completely release-independent,  *   FILE 118\n//*              and can be used with any SMPPTFIN-format file      *   FILE 118\n//*              regardless of SMP release (starting with SMP4      *   FILE 118\n//*              and through all releases of SMP/E.)                *   FILE 118\n//*                                                                 *   FILE 118\n//*              The core of this file is the PUTXREF program       *   FILE 118\n//*              from Jerry Lawson of the Hartford Insurance        *   FILE 118\n//*              Group, which has been modified by me.  This        *   FILE 118\n//*              program sorts all SYSMODs in a SMPPTFIN file by    *   FILE 118\n//*              owning FMID.  The output of Jerry's PUTXREF        *   FILE 118\n//*              program is a report showing the FMID name and      *   FILE 118\n//*              the SYSMODS belonging to it listed afterwards.     *   FILE 118\n//*              (See File 033 of the CBT tape for another          *   FILE 118\n//*              modification of PUTXREF, which allows              *   FILE 118\n//*              selectivity by FMID and other criteria.  That      *   FILE 118\n//*              one is by Gene Cray of the New Jersey Treasury     *   FILE 118\n//*              Department in Trenton (Gene has since moved on).   *   FILE 118\n//*                                                                 *   FILE 118\n//*       >>     Putting an //SMPCOUT DD card into a PUTXREF run,   *   FILE 118\n//*              or running my programs SMPASUPD or SMPFMUPD which  *   FILE 118\n//*              take input from the //PRINTER DD name of PUTXREF,  *   FILE 118\n//*              will produce an output file that is almost         *   FILE 118\n//*              \"inputable\" into an SMP/E RECEIVE or APPLY job.    *   FILE 118\n//*              Output of the //SMPCOUT DD card or the SMPASUPD    *   FILE 118\n//*              and SMPFMUPD programs, looks like:                 *   FILE 118\n//*                                                                 *   FILE 118\n//*   ./  ADD  NAME=EBB1102                                         *   FILE 118\n//*   UY04130 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */*   FILE 118\n//*   UY09531 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */*   FILE 118\n//*   UY10163 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */*   FILE 118\n//*   UY10354 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */*   FILE 118\n//*   UY10882 /*  FMID - EBB1102 - FROM PUT TAPE - DONE 09/15/87  */*   FILE 118\n//*   ./  ADD  NAME=EDM1102                                         *   FILE 118\n//*   UY10582 /*  FMID - EDM1102 - FROM PUT TAPE - DONE 09/15/87  */*   FILE 118\n//*                                                                 *   FILE 118\n//*              YOU CAN OBVIOUSLY USE THIS AS INPUT TO ANOTHER     *   FILE 118\n//*              SMP/E JOB, AND THIS GIVES YOU FULL FORFMID POWER   *   FILE 118\n//*              FOR EACH PUT TAPE.                                 *   FILE 118\n//*                                                                 *   FILE 118\n//*              THE THIRD FEATURE OF THIS PROCESSING IS MY         *   FILE 118\n//*              SMPUPD PROGRAM, WHICH ALLOWS THE BREAKING UP OF A  *   FILE 118\n//*              SMPPTFIN FILE INTO A PDS, WHOSE MEMBERS ARE THE    *   FILE 118\n//*              SEPARATE SYSMODS.  SUPPORT IS PROVIDED FOR APAR,   *   FILE 118\n//*              USERMOD, AND FUNCTION SYSMODS AS WELL AS FOR       *   FILE 118\n//*              PTFS.  THIS PROGRAM IS A RATHER QUICK-AND-DIRTY    *   FILE 118\n//*              WAY OF DOING THINGS, BUT IT GETS ITS JOB DONE      *   FILE 118\n//*              SUPERBLY, AND THAT'S WHAT COUNTS.  BASICALLY, IT   *   FILE 118\n//*              LOOKS IN A FILE FOR ++ PTF OR ++ APAR OR ++        *   FILE 118\n//*              USERMOD ETC.  IT PARSES FOR THE 7-CHARACTER        *   FILE 118\n//*              SYSMOD NUMBER.  IN THE PROCESS OF MAKING A         *   FILE 118\n//*              TEMPORARY COPY OF THE SMPPTFIN FILE, IT INSERTS A  *   FILE 118\n//*              CARD IN FRONT OF EACH SYSMOD, WITH THE FORMAT:     *   FILE 118\n//*                                                                 *   FILE 118\n//*          ./ ADD NAME=sysmdno                                    *   FILE 118\n//*                                                                 *   FILE 118\n//*              IN ADDITION, ALL \"./\" STRINGS IN COLUMNS 1 TO 2    *   FILE 118\n//*              OF THE COPIED SYSMOD FILE ARE CHANGED TO \"><\".     *   FILE 118\n//*              THEN THE PDSLOAD PROGRAM (FROM FILE 093 OF THE     *   FILE 118\n//*              CBT TAPE) CAN BE USED TO LOAD ALL THE SYSMODS      *   FILE 118\n//*              SEPARATELY INTO PDS MEMBERS, AND TO CONVERT THE    *   FILE 118\n//*              \"><\" STRINGS WITHIN THE SYSMODS, BACK TO \"./\".     *   FILE 118\n//*                                                                 *   FILE 118\n//*              A SAMPLE JOBSTREAM, CALLED SMPUPDJ IN THIS PDS,    *   FILE 118\n//*              WILL SHOW YET ANOTHER STEP AT THE END.  IT MAY     *   FILE 118\n//*              NOT BE WIDELY PUBLICIZED YET, BUT THE PDS          *   FILE 118\n//*              COMMAND PROCESSOR (FROM FILE 182 OF THE CBT        *   FILE 118\n//*              TAPE) AT VERSION 8.5, HAS THE CAPABILITY OF        *   FILE 118\n//*              SUPPLYING FULL ISPF STATISTICS TO A SOURCE PDS     *   FILE 118\n//*              MEMBER.  THIS CAN ALSO BE DONE IN BATCH MODE.  I   *   FILE 118\n//*              ADD A STEP AT THE END OF THE JOBSTREAM SMPUPDJ     *   FILE 118\n//*              WHICH RUNS TSO IN BATCH, AND ADDS ISPF             *   FILE 118\n//*              STATISTICS TO ALL THE SYSMODS, SO YOU KNOW HOW     *   FILE 118\n//*              MANY LINES EACH ONE HAS.  ONCE THE PTFS OR         *   FILE 118\n//*              OTHER SYSMODS HAVE BEEN SEPARATED, YOU MAY         *   FILE 118\n//*              INQUIRE ABOUT THEM BY BROWSING OR EDITING THEM     *   FILE 118\n//*              INDIVIDUALLY.  ALSO, SINCE THIS JOBSTREAM IS A     *   FILE 118\n//*              QUICK AND REPRODUCIBLE PROCESS (IT TAKES A FEW     *   FILE 118\n//*              MINUTES TO RUN ON MY MACHINE), YOU CAN LEAVE       *   FILE 118\n//*              THE OUTPUT DATASET ON A WORK PACK FOR A FEW        *   FILE 118\n//*              HOURS IF YOU'RE SHORT OF PERMANENT DISK SPACE.     *   FILE 118\n//*              THEN YOU CAN RECREATE IT AGAIN THE NEXT DAY.       *   FILE 118\n//*                                                                 *   FILE 118\n//*              ONE MORE NOTE.  SOMETIMES IBM WILL SEND OUT        *   FILE 118\n//*              DUPLICATE PTFS ON THE SAME PUT OR CBPDO TAPE.      *   FILE 118\n//*              THIS WILL OBVIOUSLY CREATE DELETED MEMBERS ON      *   FILE 118\n//*              YOUR OUTPUT LIBRARY, SINCE THE SECOND STOW OF A    *   FILE 118\n//*              PDS MEMBER WILL DELETE THE FIRST MEMBER THAT       *   FILE 118\n//*              HAS THE SAME NAME.  THEREFORE, I USE ANOTHER       *   FILE 118\n//*              CAPABILITY OF THE PDS PROGRAM, WHICH IS THE        *   FILE 118\n//*              RESTORE FUNCTION TO RESURRECT DELETED MEMBERS.     *   FILE 118\n//*              THE DELETED MEMBERS ARE PUT BACK UNDER THE         *   FILE 118\n//*              NAMES $PTF0001, $PTF0002, ETC. SO THEY CAN BE      *   FILE 118\n//*              BROWSED AND COMPARED TO THE \"REAL\" ONES WHICH      *   FILE 118\n//*              HAD THE SAME NAME.  (ACTUALLY, IN A RECEIVE        *   FILE 118\n//*              JOB, THE DELETED VERSION WOULD BE RECEIVED,        *   FILE 118\n//*              SINCE IT OCCURS FIRST IN THE FILE.)  THE PDS       *   FILE 118\n//*              COMMAND IN PDS VERSION 8.5 WHICH DOES THIS IS:     *   FILE 118\n//*                                                                 *   FILE 118\n//*                 RESTORE $PTF REPEAT NOPROMPT                    *   FILE 118\n//*                                                                 *   FILE 118\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMLK100": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x03\\x01\\x01\\x15\\x0f\\x01\\x01\\x16O\\x16\\x11\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-13T16:11:03", "lines": 27, "newlines": 27, "modlines": 0, "user": "WSBG"}, "text": "//WSBGM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//STEPLIB  DD DISP=SHR,DSN=WSBG.HLASMR3.LOAD\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=WSBG.B.ASM(SMPUPDA)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n NAME    SMPUPDA(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMLK98": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x12\\x01\\x01\\x15\\x0f\\x01\\x01\\x16O\\x100\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-13T10:30:12", "lines": 27, "newlines": 27, "modlines": 0, "user": "WSBG"}, "text": "//WSBGM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//STEPLIB  DD DISP=SHR,DSN=WSBG.HLASMR3.LOAD\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=WSBG.B.ASM(SMPASUPD)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n NAME    SMPASUPD(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMLK99": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x009\\x01\\x01\\x15\\x0f\\x01\\x01\\x16O\\x10C\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-13T10:43:39", "lines": 27, "newlines": 27, "modlines": 0, "user": "WSBG"}, "text": "//WSBGM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//STEPLIB  DD DISP=SHR,DSN=WSBG.HLASMR3.LOAD\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=WSBG.B.ASM(PUTXREFF)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n NAME    PUTXREFF(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GIMEXPS0": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\"\\x01\\x14 \\x1f\\x01\\x14 \\x1f\\x15R\\x00\\x0f\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2014-07-20T00:00:00", "modifydate": "2014-07-20T15:52:22", "lines": 15, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBG  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n//*                                                                 *\n//*  SMP/E UNCOMPACT PTFS SO THAT OBJECT DECKS MAY BE READ, ETC.    *\n//*                                                                 *\n//*     (RUN FOR SEQUENTIAL SMPPTFIN DATASETS WITH ONE OR MORE      *\n//*      PTFS CONTAINED IN THEM)                                    *\n//*                                                                 *\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n//UNCOMP  EXEC PGM=GIMCPTS,PARM='EXPAND,LANGUAGE=ENU'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DISP=OLD,DSN=SBGOLOB.Z24.HBB7790.SEQPTFS\n//SYSUT2   DD  DISP=SHR,DSN=SBGOLOB.Z24.HBB7790.SEQPTEX\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GIMEXP00": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x13\\x01\\x14 \\x1f\\x01\\x14 \\x1f\\x15R\\x00\\x1a\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2014-07-20T00:00:00", "modifydate": "2014-07-20T15:52:13", "lines": 26, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBG  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n//*                                                                 *\n//*  SMP/E UNCOMPACT PTFS SO THAT OBJECT DECKS MAY BE READ, ETC.    *\n//*                                                                 *\n//*     (RUN FOR EACH MEMBER OF A PDS WHICH CONTAINS ONE PTF.)      *\n//*                                                                 *\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n//*\n//EXPPTF  PROC MEM=XXX\n//UNZIP   EXEC PGM=GIMCPTS,PARM='EXPAND,LANGUAGE=ENU'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DISP=SHR,DSN=SBGOLOB.PTFSPDS.PTFS(&MEM)   <--INPUT\n//SYSUT2   DD  DISP=SHR,DSN=SBGOLOB.PTFSPDS.PTEX(&MEM)   <--OUTPUT\n//        PEND\n//*\n//UI12453 EXEC EXPPTF,MEM=UI12453\n//UI12565 EXEC EXPPTF,MEM=UI12565\n//UI12721 EXEC EXPPTF,MEM=UI12721\n//UI12722 EXEC EXPPTF,MEM=UI12722\n//UI12751 EXEC EXPPTF,MEM=UI12751\n//*\n//*             ETC.\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGYWCL1": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x98)_\\x00\\x99\\x03/\\x01F\\x002\\x003\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1998-10-22T00:00:00", "modifydate": "1999-02-01T01:46:00", "lines": 50, "newlines": 51, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBP  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*-----------------------------------------------------------*//\n//*  COMPILE AND LINKEDIT JCL FOR THE COBOL/370 SOURCE CODE   *//\n//*-----------------------------------------------------------*//\n//IGYWCL PROC SYSLBLK=3200,LNGPRFX='IGY.V1R2M0',\n//            PGMLIB='&&GOSET',GOPGM=GO\n//*\n//* IBM COBOL FOR MVS & VM\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  RELEASE LEVEL: 01.02.00  (VERSION.RELEASE.MODIFICATION LEVEL)\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V1R2M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   SYSLBLK   3200             BLOCKSIZE FOR OBJECT DATA SET\n//*   LIBPRFX   CEE.V1R5M0       PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=2048K\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSDA,\n//             DISP=(MOD,PASS),SPACE=(TRK,(3,3)),\n//             DCB=(BLKSIZE=&SYSLBLK)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=HEWL,COND=(8,LT,COBOL),REGION=1024K\n//SYSLIB   DD  DSNAME=CEE.SCEELKED,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),\n//             SPACE=(TRK,(10,10,1)),\n//             UNIT=SYSDA,DISP=(SHR,PASS)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.LOAD',\n//       GOPGM=SMPFMUPD\n//COBOL.SYSIN DD DSN=SBGOLOB.FILE118.PDS(SMPFMU2D),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGYWCL2": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x98)_\\x00\\x99\\x03/\\x01F\\x002\\x003\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1998-10-22T00:00:00", "modifydate": "1999-02-01T01:46:00", "lines": 50, "newlines": 51, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBP  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*-----------------------------------------------------------*//\n//*  COMPILE AND LINKEDIT JCL FOR THE COBOL/370 SOURCE CODE   *//\n//*-----------------------------------------------------------*//\n//IGYWCL PROC SYSLBLK=3200,LNGPRFX='IGY.V1R2M0',\n//            PGMLIB='&&GOSET',GOPGM=GO\n//*\n//* IBM COBOL FOR MVS & VM\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  RELEASE LEVEL: 01.02.00  (VERSION.RELEASE.MODIFICATION LEVEL)\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V1R2M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   SYSLBLK   3200             BLOCKSIZE FOR OBJECT DATA SET\n//*   LIBPRFX   CEE.V1R5M0       PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=2048K\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSDA,\n//             DISP=(MOD,PASS),SPACE=(TRK,(3,3)),\n//             DCB=(BLKSIZE=&SYSLBLK)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=HEWL,COND=(8,LT,COBOL),REGION=1024K\n//SYSLIB   DD  DSNAME=CEE.SCEELKED,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),\n//             SPACE=(TRK,(10,10,1)),\n//             UNIT=SYSDA,DISP=(SHR,PASS)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.LOAD',\n//       GOPGM=SMPFMUPV\n//COBOL.SYSIN DD DSN=SBGOLOB.FILE118.PDS(SMPFMU2V),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGYWCL3": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x98)_\\x00\\x99\\x03/\\x01G\\x002\\x003\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1998-10-22T00:00:00", "modifydate": "1999-02-01T01:47:00", "lines": 50, "newlines": 51, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBP  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*-----------------------------------------------------------*//\n//*  COMPILE AND LINKEDIT JCL FOR THE COBOL/370 SOURCE CODE   *//\n//*-----------------------------------------------------------*//\n//IGYWCL PROC SYSLBLK=3200,LNGPRFX='IGY.V1R2M0',\n//            PGMLIB='&&GOSET',GOPGM=GO\n//*\n//* IBM COBOL FOR MVS & VM\n//*\n//*  COMPILE AND LINK EDIT A COBOL PROGRAM\n//*\n//*  RELEASE LEVEL: 01.02.00  (VERSION.RELEASE.MODIFICATION LEVEL)\n//*\n//*  PARAMETER  DEFAULT VALUE    USAGE\n//*   LNGPRFX   IGY.V1R2M0       PREFIX FOR LANGUAGE DATA SET NAMES\n//*   SYSLBLK   3200             BLOCKSIZE FOR OBJECT DATA SET\n//*   LIBPRFX   CEE.V1R5M0       PREFIX FOR LIBRARY DATA SET NAMES\n//*   PGMLIB    &&GOSET          DATA SET NAME FOR LOAD MODULE\n//*   GOPGM     GO               MEMBER NAME FOR LOAD MODULE\n//*\n//COBOL  EXEC PGM=IGYCRCTL,REGION=2048K\n//STEPLIB  DD  DSNAME=&LNGPRFX..SIGYCOMP,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,UNIT=SYSDA,\n//             DISP=(MOD,PASS),SPACE=(TRK,(3,3)),\n//             DCB=(BLKSIZE=&SYSLBLK)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//LKED   EXEC PGM=HEWL,COND=(8,LT,COBOL),REGION=1024K\n//SYSLIB   DD  DSNAME=CEE.SCEELKED,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSNAME=&PGMLIB(&GOPGM),\n//             SPACE=(TRK,(10,10,1)),\n//             UNIT=SYSDA,DISP=(SHR,PASS)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))\n//  PEND\n//S01COB EXEC IGYWCL,\n//       PGMLIB='SBGOLOB.LOAD',\n//       GOPGM=SMPUPD\n//COBOL.SYSIN DD DSN=SBGOLOB.FILE118.PDS(SMPUPD2),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLFMIDS": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x11\\x00'\\x00\\x88\\t?\\x01\\x01\\x16O\\x128\\x00(\\x00>\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.17", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "2001-06-13T12:38:27", "lines": 40, "newlines": 62, "modlines": 0, "user": "WSBG"}, "text": "//WSBGX     JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X\n//*\n//*\n//STEP1    EXEC PGM=PUTXREFF\n//STEPLIB  DD  DSN=WSBG.LOAD,DISP=SHR\n//INPUT    DD  DISP=SHR,DSN=WSBG.SEQ.TEMP1.SMPPTS\n//SORTIN   DD  DSN=&&SORT,DISP=(NEW,PASS),UNIT=SYSDA,\n//             DCB=(RECFM=FB,LRECL=15,BLKSIZE=4095),\n//             SPACE=(CYL,(55,30))\n//SORTOUT  DD  DSN=&&SORT,DISP=(SHR,PASS),VOL=REF=*.SORTIN\n//TITLES   DD  DISP=SHR,DSN=WCBT.CBT437.FILE118(TITLES)\n//PRINTER  DD  DSN=&TEMP1,DISP=(NEW,PASS),UNIT=SYSDA,\n//         DCB=(RECFM=FBA,LRECL=133,BLKSIZE=27930),\n//         SPACE=(TRK,(60,45))\n//SYSUDUMP DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSIN    DD  *\n SORT FIELDS=(9,7,CH,A,1,7,CH,A)\n/*\n//COPY    EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=&TEMP1,DISP=(OLD,PASS,KEEP)\n//SYSUT2   DD  SYSOUT=*\n//SYSIN    DD  DUMMY\n//*\n//CLEAN  EXEC PGM=IEFBR14\n//IN       DD  DSN=&TEMP1,DISP=(OLD,PASS)\n//*\n//SMPFMUPD EXEC PGM=SMPASUPD\n//STEPLIB DD DISP=SHR,DSN=WSBG.LOAD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=&TEMP1,DISP=(OLD,DELETE,KEEP)\n//SYSUT2   DD DSN=WSBG.TESTXX,DISP=(NEW,CATLG,DELETE),\n//   VOL=SER=WORKB2,UNIT=SYSDA,SPACE=(CYL,(2,2),RLSE),\n//   DCB=(RECFM=FB,DSORG=PS,LRECL=80,BLKSIZE=27920)\n//SYSABEND DD SYSOUT=*,HOLD=YES\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCL0": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x00\\x16\\x00\\x16\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "TST2SSG"}, "text": "//*   TO CREATE A SEQUENTIAL SMPPTFIN-FORMAT FILE FROM MY SMP PTS\n//*            AND TO CREATE SYSMOD LISTS FOR EACH FMID.\n//*\n//*\n//*      1.  I USED THE PDS PROGRAM TO GENERATE IEBCOPY SELECT\n//*             STATEMENTS - THIS PROGRAM IS ON CBT TAPE FILE 182.\n//*             THE PDS COMMAND IS:\n//*                  OUTCOPY A:Z\n//*      2.  I ALLOCATED A PDS (ROUGHLY THE SIZE OF THE SMPPTS)\n//*             ON A WORK PACK, AND CREATED AN IEBCOPY JOB USING\n//*             THE SELECT STATEMENTS OBTAINED IN STEP 1.\n//*             THIS COPIES THE NON-CONTROL MEMBERS OF THE PTS,\n//*             WHICH ARE THE SYSMODS.\n//*           ( IF YOU HAVE SMP/E, YOU CAN SKIP STEPS 1 AND 2,\n//*             BECAUSE SMP/E'S PTS DOESN'T KEEP CONTROL MEMBERS,\n//*             ONLY ACTUAL SYSMODS. )\n//*      3.  USE THE OFFLOAD SAMPLE JCL - MEMBER JCL1 OF THIS DATASET\n//*             TO CREATE THE SEQUENTIAL DATASET FROM THE PDS.\n//*      4.  USE THE SAMPLE JCL IN MEMBER JCL2 TO CREATE THE PUTXREF\n//*             REPORT AND THE SMP CONTROL CARD DECKS BY FMID.\n//*             USE THIS JCL FOR ANY SMPPTFIN-FORMAT INPUT.\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCL1": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x88\\t?\\x00\\x99\\x03/\\x01C\\x00\\x10\\x00\\x0f\\x00\\x08\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1999-02-01T01:43:00", "lines": 16, "newlines": 15, "modlines": 8, "user": "SBGOLOB"}, "text": "//SBGOLOBL  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*     STRING PDS MEMBERS INTO A SEQUENTIAL DATASET.\n//*\n//*\n//DSPEQMOD EXEC PGM=OFFLOAD,REGION=5000K\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSPRINT DD SYSOUT=*\n//IN    DD  DISP=SHR,DSN=MVS5.SMPPTS\n//OUT   DD  DSN=SBGOLOB.TEST.SEQ.PTS,DISP=(NEW,CATLG,DELETE),\n// UNIT=SYSDA,SPACE=(TRK,(120,300),RLSE),\n// DCB=(RECFM=FB,DSORG=PS,LRECL=80,BLKSIZE=27920)\n//SYSIN  DD *\n O I=IN,O=OUT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCL2": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00F\\x00\\x88\\t?\\x01\\x01\\x16O\\x12\\x18\\x00@\\x00>\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "2001-06-13T12:18:46", "lines": 64, "newlines": 62, "modlines": 0, "user": "WSBG"}, "text": "//SBGOLOBX  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//******************************************************************//\n//*    PUTXREF PROGRAM FROM HARTFORD INSURANCE GROUP               *//\n//*      WITH MY EXTENSIONS - S.GOLOB                              *//\n//*                                                                *//\n//*    THIS JOB                                                    *//\n//*       SEPARATES PTFS NUMBERS BY FMID - INPUT IS SMPPTFIN FILE  *//\n//*          OUTPUTS ARE:   1.  A PDS MEMBER WITH ./ ADD NAME=FMID *//\n//*                              AND ALL PTFS BELONGING TO THAT    *//\n//*                              FMID, LISTED UNDERNEATH.          *//\n//*                         2.  A STEP TO LOAD THE MEMBERS INTO    *//\n//*                              A PDS.  FOR EXAMPLE, IF YOU       *//\n//*                              LOOK AT MEMBER JBB1214, YOU'LL    *//\n//*                              FIND A LIST OF ALL PTFS BELONGING *//\n//*                              TO FMID JBB1214, IN A FORMAT SO   *//\n//*                              THEY CAN BE INPUT INTO AN SMP JOB.*//\n//******************************************************************//\n//*\n//STEP1    EXEC PGM=PUTXREFV\n//STEPLIB  DD  DSN=SBGOLOB.LOAD,DISP=SHR\n//INPUT    DD  DISP=SHR,DSN=SBGOLOB.TEST.SEQ.PTS\n//SORTIN   DD  DSN=&&SORT,DISP=(NEW,PASS),UNIT=3380,\n//             DCB=(RECFM=FB,LRECL=15,BLKSIZE=4095),\n//             SPACE=(CYL,(25,20))\n//SORTOUT  DD  DSN=&&SORT,DISP=(SHR,PASS),VOL=REF=*.SORTIN\n//TITLES   DD  DISP=SHR,DSN=SBGOLOB.FILE118.PDS(TITLES)\n//PRINTER  DD  DSN=&TEMP1,DISP=(NEW,PASS),UNIT=3380,\n//         DCB=(RECFM=VBA,LRECL=137,BLKSIZE=141),\n//         SPACE=(TRK,(15,15))\n//SYSUDUMP DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSIN    DD  *\n SORT FIELDS=(9,7,CH,A,1,7,CH,A)\n/*\n//COPY    EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=&TEMP1,DISP=(OLD,PASS,KEEP)\n//SYSUT2   DD  SYSOUT=*\n//SYSIN    DD  DUMMY\n//*\n//CLEAN  EXEC PGM=IEFBR14\n//IN       DD  DSN=&TEMP1,DISP=(OLD,PASS)\n//*\n//SMPFMUPD EXEC PGM=SMPFMUPV\n//STEPLIB DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=&TEMP1,DISP=(OLD,DELETE,KEEP)\n//*YSUT2   DD  DSN=&TEMP3,DISP=(NEW,PASS),UNIT=SYSDA,\n//*        DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),\n//*        SPACE=(TRK,(15,30))\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.PTFPDS(TESTSEQ1)\n//SYSABEND DD SYSOUT=L,HOLD=YES\n//*\n//*\n//S03UPDTE EXEC PGM=PDSLOAD,PARM='UPDTE(./)'  /* CBT TAPE--FILE 093 */\n//STEPLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSPRINT  DD  SYSOUT=*\n//SYSUT1    DD  DSN=SBGOLOB.PTFPDS(TESTSEQ1),DISP=SHR\n//*YSUT1    DD  DSN=&TEMP3,DISP=(OLD,DELETE)\n//SYSUT2    DD  DSN=SBGOLOB.PTSXREF,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCL3": {"ttr": 1043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00H\\x00\\x88\\t?\\x01\\x01\\x17/\\x11\\x08\\x00\\x1b\\x00>\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "2001-06-21T11:08:48", "lines": 27, "newlines": 62, "modlines": 0, "user": "WSBG"}, "text": "//WSBGX     JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X\n//*\n//*  NOTE:  DD NAMES SMPCOUT AND PDSATOUT ARE OPTIONAL.  IF THEY ARE\n//*         MISSING, THE PUTXREF PROGRAM WILL RUN WITHOUT THEM.\n//*\n//STEP1    EXEC PGM=PUTXREF\n//STEPLIB  DD  DSN=WSBG.LOAD,DISP=SHR\n//INPUT    DD  DISP=SHR,DSN=WSBG.SEQ.TEMP1.SMPPTS   <== SMPPTFIN FILE\n//SORTIN   DD  DSN=&&SORT,DISP=(NEW,PASS),UNIT=SYSDA,\n//             DCB=(RECFM=FB,LRECL=15,BLKSIZE=4095),\n//             SPACE=(CYL,(55,30))\n//SORTOUT  DD  DSN=&&SORT,DISP=(SHR,PASS),VOL=REF=*.SORTIN\n//TITLES   DD  DISP=SHR,DSN=WCBT.V436.FILE118.PDS(TITLES)\n//PRINTER  DD  SYSOUT=*\n//SMPCOUT  DD DISP=SHR,DSN=WSBG.PTFPDS(TESTSEQO)    <== OPTIONAL DDNAME\n//*                    <== FB-80, PRODUCES OUTPUT LIKE SMPASUPD PROGRAM\n//PDSATOUT DD DISP=SHR,DSN=WSBG.PTFPDS2(ESO0105A)   <== OPTIONAL DDNAME\n//*                    <== FB-80, PRODUCES ATTRIB INPUT TO PDS 8.5\n//*                    <== NEEDS DIFFERENT PDS TO AVOID S213-30 ABEND\n//SYSUDUMP DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSIN    DD  *\n SORT FIELDS=(9,7,CH,A,1,7,CH,A)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OFILE118": {"ttr": 1045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x03\\\\\\x03\\\\\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 860, "newlines": 860, "modlines": 0, "user": "TST2SSG"}, "text": "*          DATA SET CBT1277    AT LEVEL 006 AS OF 08/28/83\nPUTXREF  TITLE 'PROGRAM TO CROSS REFERENCE A PUT TAPE BY FMID'          00001\n*********************************************************************** 00002\n*                                                                     * 00003\n*              PUTXREF - VERSION 3.0                                  * 00004\n*                                                                     * 00005\n*        JERRY LAWSON  860-547-5000 EXT 2960                          * 00006\n*        HARTFORD INSURANCE GROUP,                                    * 00007\n*        690 ASYLUM AVE.                                              * 00008\n*        HARTFORD, CT.  06115                                         * 00009\n*                                                                     * 00010\n*        FUNCTION:                                                    * 00011\n*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A           * 00012\n*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS                 * 00013\n*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.             * 00014\n*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENITY         * 00015\n*        ON WHICH THE PTF IS FOUND WILL BE LOST. THE PROGRAM          * 00016\n*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S              * 00017\n*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON         * 00018\n*        A TAPE, AND TO DOUBLE CHECK THE STERLING FORREST             * 00019\n*        CROSS REFERENCE (IT LIES ONCE IN A WHILE.)                   * 00020\n*                                                                     * 00021\n*        DEPENDANCIES:                                                * 00022\n*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.               * 00023\n*              IT LINKS TO THE ENTRY POINT OF \"SORT\".                 * 00024\n*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT            * 00025\n*              THAT NAME OR ALIAS. YOU WILL NEED ABOUT                * 00026\n*              300K FOR THE WHOLE PROGRAM AND SORT.                   * 00027\n*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS                * 00028\n*              OPTIONAL. IF NOT INCLUDED, YOU WILL GET A              * 00029\n*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.         * 00030\n*              I HAVE INCLUDED THE FILE IN THE JCL, I                 * 00031\n*              CREATED THE FILE BY DOING THE FOLLOWING:               * 00032\n*              A. ALLOCATE A DATA SET ON TSO  - NORMAL STUFF -        * 00033\n*                  RECFM=FB,LRECL=80                                  * 00034\n*              B.  ASSIGN THAT DATA SET TO DD NAME OF OZPRINT         * 00035\n*              C.  EXECUTE YOUR INFO - SYS CLIST OR COMMAND           * 00036\n*              D.  ISSUE A 'DEF A' COMMAND TO INFO (SEARCH            * 00037\n*                  ALL FILES)                                         * 00038\n*              E.  DO A KEY WORD SEARCH AS FOLLOWS -                  * 00039\n*                  KWS FMID XREF      I GOT ABOUT 22 HITS,            * 00040\n*                  BUT THE FIRST ONE HAD A TITLE OF                   * 00041\n*                  'THIS IS A CROSS REFERENCE OF MVS FMIDS',          * 00042\n*                  OR SOMETHING SIMILAR. BE SURE YOU                  * 00043\n*                  HAVE THE LATEST ONE                                * 00044\n*              F.  SELECT THE CORRECT ONE, THE ISSUE A                * 00045\n*                  'PRINT UP' COMMAND. THE OUTPUT WILL GO             * 00046\n*                  TO THE DATA SET ALLOCATED TO THE OZPRINT           * 00047\n*                  DDNAME                                             * 00048\n*              G.  END YOUR INFO SESSION                              * 00049\n*              H.  EDIT YOUR PRINT FROM THE INFO SESSION              * 00050\n*                  YOU WANT TO DELETE ALL LINES THAT DO               * 00051\n*                  NOT HAVE AN FMID IN COLUMN 3. NOTE THAT DELETED      00052\n*                  FMIDS HAVE A * IN COLUMN 3, FOR BETTER             * 00053\n*                  DOCUMENTATION I DELETE THE STAR ANDMOVE THE        * 00054\n*                  FMID BACK TO 3, BUT THIS IS                        * 00055\n*                  OPTIONAL.                                          * 00056\n*              I.  AFTER YOU HAVE SAVED THE DATA SET,                 * 00057\n*                  SORT IT ON COLUMN 3 FOR A LENGTH OF 7.             * 00058\n*              J.  THE TITLE LIST YOU HAVE JUST CREATED               * 00059\n*                  CAN BE EITHER INCLUDED IN THE JCL STREAM           * 00060\n*                  OR KEPT IN A SEPERATE DATA SET, AND POINTED        * 00061\n*                  TO BY THE JCL.                                     * 00062\n*        3.    REGS MACRO. THE STANDARD REGISTER EQUATES              * 00063\n*              SUCH AS IN R1      EQU    1      ETC.                  * 00064\n*              NOTE - REMOVED ON 3/10/82                              * 00065\n*                                                                     * 00066\n*        CHANGES FOR RELEASE 3.0                                      * 00067\n*        1.    CHANGED INPUT LOCATION OF TITLES FROM COLUMN 2 TO      * 00068\n*              COLUMN 3. THIS ALLOWS USE OF THE OUTPUT OF THE         * 00069\n*              OZPRINT DD STATEMENT WITHOUT HAVING TO DELETE          * 00070\n*              THE CARRIAGE CONTROL INFO COMPLETELY. SEE THE INFO IN  * 00071\n*              2. ABOVE FOR DETAILS ON HOW TO CREATE THE TITLE        * 00072\n*              FILE.                                                  * 00073\n*        2.    EXTENDED SIZE OF THE TITLE FIELD TO INCLUDE            * 00074\n*              THE COMPONENT ID NOW THAT IBM HAS                      * 00075\n*              INCLUDED IT IN THE FMID XREF.                          * 00076\n*                                                                     * 00077\n*        CHANGES FOR RELEASE 2.0:                                     * 00078\n*        1. ADDED BLOCKSIZES TO DCB MACROS TO CORRECT DEPENDENCY      * 00079\n*           ON LOCAL MODS                                             * 00080\n*        2. CORRECTED SORT FIELDS STATEMENT IN PROGRAM. ONLY USED IF  * 00081\n*           IBM SORT IS INVOKED. NOTE THAT PARM ERROR SEEMS TO BE     * 00082\n*           A STANDARD FEATURE WITH THIS PROGRAM - I CAN FIND NO ERROR* 00083\n*        3. SYSOUT JCL DD STATEMENT ADDED FOR IBM SORTS               * 00084\n*                                                                     * 00085\n*        MACROS.                                                      * 00086\n*        SAVE      OPEN      CLOSE      GET                           * 00087\n*        PUT       LINK      WTO        ABEND (U128 - BAD SORT)       * 00088\n*        DCB                                                            00089\n*                                                                     * 00090\n*        REGISTER ASSIGNMENTS - NORMAL LINKAGE CONVENTIONS            * 00091\n*              REG 12              BASE REGISTER                      * 00092\n*              REG 2               BAL REGISTER                       * 00093\n*              REG 3               BCT REGISTER - PHASE 1             * 00094\n*              REG 4               POINTER TO PTF INPUT RECORD        * 00095\n*              REG 5               OUTPUT POSITION POINTER - PHASE 2  * 00096\n*              REG 6               BCT REGISTER - PHASE 2             * 00097\n*              REG 7               RETURN ADDRESS FOR EODAD (TITLES)  * 00098\n*********************************************************************** 00099\n         EJECT                                                          00100\nPUTXREF  CSECT                                                          00101\n         SAVE  (14,12),,*                                               00102\n         LR    R12,R15                                                  00103\n         USING PUTXREF,R12         REG 12 IS BASE                       00104\n         LA    R15,SAVE                                                 00105\n         ST    R15,8(R13)                                               00106\n         ST    R13,SAVE+4                                               00107\n         LR    R13,R15                                                  00108\n         OPEN  (SYSIN,INPUT)                                            00109\n         OPEN  (SORT,OUTPUT)                                            00110\n         SPACE 2                                                        00111\n*---------------------------------------------------------------------* 00112\n*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          * 00113\n*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         * 00114\n*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        * 00115\n*---------------------------------------------------------------------* 00116\nPX010    EQU   *                                                        00117\n         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE          00118\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?         00119\n         BNE   PX010               NO - BACK FOR ANOTHER                00120\n         LA    R4,2(R4)            YES - POINT PAST THE ++              00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP            00122\nPX015    EQU   *                                                        00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?                   00124\n         BNE   PX020               YES - GO CHECK IT OUT                00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION     00126\n         BCT   R3,PX015            LOOP DE LOOP                         00127\n         BAL   R2,PXGET            WOOPS - OUT OF RECORD                00128\n         B     PX015               BACK AGAIN WITH ANOTHER RECORD       00129\nPX020    EQU   *                                                        00130\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?                00131\n         BE    PX100               YES - GO GETPTF NUMBER               00132\n         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?             00133\n         BE    PX200               YES - THEN GO FIND THE FMID          00134\n         B     PX010               NO - THEN THIS IS NG - START OVER.   00135\n         EJECT                                                          00136\n*---------------------------------------------------------------------* 00137\n*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        * 00138\n*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             * 00139\n*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   * 00140\n*        THE KEYWORD 'PTF'                                            * 00141\n*---------------------------------------------------------------------* 00142\nPX100    EQU   *                                                        00143\n         LA    R4,3(R4)            BUMP PAST THE PTF KEYWORD            00144\n         SH    R3,=H'3'            DECREMENT LOOP CONTROL               00145\n         C     R3,=F'0'            OUT OF RECORD?                       00146\n         BH    PX110               NO - ON WITH THE SHOW                00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE     00148\nPX110    EQU   *                                                        00149\n         CLI   0(R4),C'('          THIS A LEFT PAREN?                   00150\n         BE    PX150               YES - THEN GO SAVE PTF NUMBER        00151\n         LA    R4,1(R4)            NO - POINT TO NEXT POSITION          00152\n         BCT   R3,PX110            LOOP AGAIN                           00153\n         BAL   R2,PXGET            OUT OF RECORD AGAIN                  00154\n         B     PX110                                                    00155\nPX150    EQU   *                                                        00156\n         LA    R4,1(R4)            POINT PAST LEFT PAREN                00157\n         BCTR  R3,0                DECREMENT FOR THE PAREN              00158\n         CLI   0(R4),C' '          ANYTHING HERE?                       00159\n         BNE   PX160               YES - THEN GO SAVE IT                00160\n         LA    R4,1(R4)            NO - POINT TO NEXT                   00161\n         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)       00162\n         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN             00163\n         B     PX150                                                    00164\nPX160    EQU   *                                                        00165\n         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER                      00166\n         B     PX010               BACK TO FIND THE FMID                00167\n         EJECT                                                          00168\n*---------------------------------------------------------------------* 00169\n*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      * 00170\n*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         * 00171\n*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         * 00172\n*        WHEN THIS IS LOCATED, A RECORTED IS WRITTEN TO THE SORT FILE.* 00173\n*---------------------------------------------------------------------* 00174\nPX200    EQU   *                                                        00175\n         LA    R4,3(R4)            POINT PAST THE VER KEYWORD           00176\n         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL       00177\n         C     R3,=F'0'            OUT OF RECORD?                       00178\n         BH    PX210               NO - ON WITH THE SHOW                00179\n         BAL   R2,PXGET            YES - OFF AND GET ANOTHER            00180\nPX210    EQU   *                                                        00181\n         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?                    00182\n         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID   00183\n         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL      00184\n         BCT   R3,PX210            WE'LL GET HIM YET                    00185\n         BAL   R2,PXGET            WOOPS OUT OF DATA                    00186\n         B     PX210               BACK WITH A NEW RECORD               00187\nPX220    EQU   *                                                        00188\n         LA    R4,4(R4)            POINT PAST THE KEYWORD               00189\n         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL           00190\n         C     R3,=F'0'            OUT OF DATA?                         00191\n         BH    PX230               NO - THEN FIND THE LITTLE DEVIL      00192\n         BAL   R2,PXGET            OUT OF DATA AGAIN                    00193\nPX230    EQU   *                                                        00194\n         CLI   0(R4),C'('          LEFT PAREN YET?                      00195\n         BE    PX240               YES - ALMOST THERE                   00196\n         LA    R4,1(R4)            POINT TO NEXT PLACE                  00197\n         BCT   R3,PX230            LOOP DE LOOP                         00198\n         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN       00199\n         B     PX230               KEEP ON PLUGGIN.                     00200\nPX240    EQU   *                                                        00201\n         LA    R4,1(R4)            POINT PAST THE PAREN                 00202\n         BCTR  R3,0                DON'T FORGET THE LOOP CONTROL        00203\n         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?   00204\n         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!        00205\n         LA    R4,1(R4)            YES - THOSE LITTLE BUGGERS           00206\n         BCT   R3,PX240            LOOP ONE MORE TIME                   00207\n         BAL   R2,PXGET            COMMONER AND COMMONER                00208\n         B     PX240                                                    00209\nPX250    EQU   *                                                        00210\n         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER                 00211\n         PUT   SORT,OUTPTF         WRITE THE RECORD                     00212\n         B     PX010               BACK AND START AGAIN                 00213\n               EJECT                                                    00214\n*---------------------------------------------------------------------* 00215\n*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216\n*        IS INPUT.                                                    * 00217\n*---------------------------------------------------------------------* 00218\nEOF      EQU   *                                                        00219\n         CLOSE SYSIN                                                    00220\n         CLOSE SORT                                                     00221\n         SPACE 3                                                        00222\n*---------------------------------------------------------------------* 00223\n*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224\n*---------------------------------------------------------------------* 00225\n         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226\n         LINK  EP=SORT             CALL THE SORT UTILITY                00227\n         LTR   R15,R15             CHECK RETURN CODE                    00228\n         BNZ   SORTERR             NO GOOD - ABEND                      00229\n         EJECT                                                          00230\n*---------------------------------------------------------------------* 00231\n*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232\n*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233\n*        WRITES THE FIRST SET OF HEADERS                              * 00234\n*---------------------------------------------------------------------* 00235\n         OPEN  (SORT,INPUT)                                             00236\n         OPEN  (TITLE,INPUT)                                            00237\n         OPEN  (PRINT,OUTPUT)                                           00238\n         LA    R5,TITLE            GET DCB ADDRESS                      00239\n         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?                 00240\n         BO    PX490               YES - BRANCH AROUND BAD OPEN         00241\n         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE           00242\n         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X00243\n               DESC=(7)                                                 00244\nPX490    EQU   *                                                        00245\n         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE           00246\n         EJECT                                                          00247\n*---------------------------------------------------------------------* 00248\n*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      * 00249\n*        THE 1ST RECORD.                                              * 00250\n*---------------------------------------------------------------------* 00251\n         GET   SORT,OUTPTF         1ST READ ONLY                        00252\n         MVC   HOLD,OUTFMID        SAVE FMID FOR COMPARISON             00253\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00254\n         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA              00255\n         LA    R6,12               SET UP LOOP FOR BCT                  00256\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00257\n         BO    PX510               NO - WOOPS - FORGOT TO SAY           00258\n*                                         MOTHER MAY I                  00259\n         LA    R7,PX499            SAVE RETURN POINT FOR EODAD          00260\nPX495    EQU   *                                                        00261\n         GET   TITLE,INAREA        GET A TITLE RECORD                   00262\n         CLC   INAREA+2(7),HOLD    DO FMID'S AGREE?                     00263\n         BL    PX495               NO - LOWER, GO READ ANOTHER          00264\n         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP    00265\n         MVC   OUTAREA+21(34),INAREA+11 EQUAL - GET TITLE               00266\nPX499    EQU   *                                                        00267\n         PUT   PRINT,LINE          WRITE HEADER                         00268\n         MVI   OUTAREA+0,C' '      CLEAR LINE                           00269\n         MVC   OUTAREA+1(131),OUTAREA+0                                 00270\n         AP    LINECNT,ONE         UPDATE LINE COUNT                    00271\n*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE          00272\n         B     PX510               BRANCH AROUND NORMAL READ            00273\n         EJECT                                                          00274\n*---------------------------------------------------------------------* 00275\n*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          * 00276\n*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          * 00277\n*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         * 00278\n*        ACCORDINGLY.                                                 * 00279\n*---------------------------------------------------------------------* 00280\nPX500    EQU   *                                                        00281\n         GET   SORT,OUTPTF         NORMAL READ                          00282\nPX510    EQU   *                                                        00283\n         CLC   HOLD,OUTFMID        SAME AS LAST RECORD?                 00284\n         BNE   PX570               NO - GO WRITE PARTIAL LINE           00285\nPX520    EQU   *                                                        00286\n         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER                   00287\n         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION          00288\n         BCT   R6,PX500            LOOP IN HERE TOO.                    00289\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00290\n         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE                   00291\n         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE                   00292\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00293\n         LA    R6,12               RESET LOOP CONTROL                   00294\n         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES   00295\n         CP    LINECNT,=P'60'      ENOUGH LINES FOR BREAK?              00296\n         BL    PX500               NO - BACK TO TOP                     00297\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00298\n         B     PX500               BACK TO TOP                          00299\n         SPACE 2                                                        00300\nPX570    EQU   *                                                        00301\n         PUT   PRINT,LINE          WRITE SHORT LINE                     00302\n         PUT   PRINT,BLANK         WRITE SPACER                         00303\n         AP    LINECNT,THREE       ADD IN LINE COUNT                    00304\n         CP    LINECNT,=P'59'      ALMOST AT END OF PAGE?               00305\n         BL    PX572               NO - BRANCH AROUND HDR ROUTINE       00306\n         BAL   R2,PXPUT            OFF TO SEE THE WIZARD                00307\nPX572    EQU   *                                                        00308\n         LA    R5,11(R5)           RESET POINTER                        00309\n         LA    R6,12               RESET BCT LOOP                       00310\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00311\n         MVC   OUTAREA+1(131),OUTAREA                                   00312\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00313\n         MVC   HOLD,OUTFMID        SAVE NEW FMID                        00314\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00315\n         BO    PX580               NO - FORGET THIS NONSENSE            00316\n         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD   00317\n         CLC   INAREA+2(7),HOLD    CURRENT ONE RIGHT?                   00318\n         BL    PX575               NO - LOW, GO GET NEXT ONE            00319\n         BH    PX580               NO - HIGH, STILL NOT RIGHT           00320\n         MVC   OUTAREA+21(34),INAREA+11   YES - THIS IS RIGHT ONE       00321\n         B     PX580               GO DIRECTLY TO PUT                   00322\nPX575    EQU   *                                                        00323\n         GET   TITLE,INAREA        READ THE FILE                        00324\n         CLC   INAREA+2(7),HOLD    THIS THE RIGHT GUY?                  00325\n         BL    PX575               NO - LOW, GO BACK AND READ AGAIN     00326\n         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS  00327\n         MVC   OUTAREA+21(34),INAREA+11  MOVE IN TITLE                  00328\nPX580    EQU   *                                                        00329\n         PUT   PRINT,LINE          WITE DATA                            00330\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00331\n         MVC   OUTAREA+1(131),OUTAREA                                   00332\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00333\n         LA    R6,12               RESET LOOP CONTROL                   00334\n         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER          00335\n         CP    LINECNT,=P'60'      ENOUGH FOR A NEW PAGE?               00336\n         BL    PX520               NO - BACK TO PROCESS NEW FMID        00337\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00338\n         B     PX520               BACK AND CONTINUE ON                 00339\n         EJECT                                                          00340\n*---------------------------------------------------------------------* 00341\n*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  * 00342\n*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         * 00343\n*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                * 00344\n*---------------------------------------------------------------------* 00345\nPX590    EQU   *                                                        00346\n         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE        00347\n         BR    R7                  RETURN VIA PRESET REG 7              00348\n         SPACE 3                                                        00349\n*---------------------------------------------------------------------* 00350\n*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  * 00351\n*---------------------------------------------------------------------* 00352\nPX599    EQU   *                                                        00353\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00354\n         CLOSE SORT                                                     00355\n         CLOSE PRINT                                                    00356\n         L     R13,SAVE+4                                               00357\n         LM    R14,R12,12(R13)                                          00358\n         SR    R15,R15                                                  00359\n         BR    R14                                                      00360\n         EJECT                                                          00361\n*---------------------------------------------------------------------* 00362\n*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       * 00363\n*        USED DURING PHASE ONE PROCESSING.                            * 00364\n*---------------------------------------------------------------------* 00365\nPXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN        00366\n         GET   SYSIN,INAREA                                             00367\n         LA    R3,72               SET UP REG 3 FOR BCT                 00368\n         LA    R4,INAREA           POINT TO DATA                        00369\n         BR    R2                  RETURN TO CALLER                     00370\n         SPACE 2                                                        00371\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nPXPUT    EQU   *                                                        00375\n         AP    PAGE,ONE            ADD TO PAGE NUMBER                   00376\n         MVC   NUM,PATRN           INSERT EDIT PATTERN                  00377\n         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE            00378\n         PUT   PRINT,HDR1                                               00379\n         PUT   PRINT,HDR2                                               00380\n         PUT   PRINT,HDR3                                               00381\n         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER              00382\n         BR    R2                  RETURN TO CALLER                     00383\n         SPACE 2                                                        00384\n*---------------------------------------------------------------------* 00385\n*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386\n*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387\n*---------------------------------------------------------------------* 00388\nSORTERR  EQU   *                                                        00389\n         ABEND 128,DUMP                                                 00390\n         EJECT                                                          00391\n         LTORG                                                          00392\n         EJECT                                                          00393\nSYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X00394\n               LRECL=80                                                 00395\n         EJECT                                                          00396\nSORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X00397\n               BLKSIZE=1500,EODAD=PX599                                 00398\n         EJECT                                                          00399\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=VBA,LRECL=137,   X00400\n               BLKSIZE=141                                              00401\n         EJECT                                                          00402\nTITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X00403\n               LRECL=80,EODAD=PX590                                     00404\n         EJECT                                                          00405\nSAVE     DS    18F                                                      00406\nHOLD     DS      CL7                                                    00407\nPAGE     DC      PL2'0'                                                 00408\nLINECNT  DC      PL2'0'                                                 00409\nONE      DC      PL1'1'                                                 00410\nTHREE    DC      PL1'3'                                                 00411\nFOUR     DC      PL1'4'                                                 00412\nFLAG     DC      XL1'00'                                                00413\nNOTITLE  EQU     X'80'                                                  00414\nPATRN    DC      XL4'40202120'                                          00415\nINAREA   DS      CL80                                                   00416\nOUTPTF   DC      CL8' '                                                 00417\nOUTFMID  DC      CL7' '                                                 00418\n         DS     0F                                                      00419\nSORTPARM DC      X'80'                                                  00420\n         DC      AL3(PARMLIST)                                          00421\n         DC      H'0'                                                   00422\nPARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423\n         DC      A(SORTCARD)                                            00424\n         DC      A(SORTEND)                                             00425\n         DC      A(RECCARD)                                             00426\n         DC      A(RECEND)                                              00427\n         DC      A(0)                                                   00428\n         DC      A(0)                                                   00429\nPARMEND  EQU   *                                                        00430\nSORTCARD DC      C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'                    00431\nSORTEND  DC      C' '                                                   00432\nRECCARD  DC      C' RECORD LENGTH=15,TYPE=F'                            00433\nRECEND   DC      C' '                                                   00434\nHDR1     DC      H'133'                                                 00435\n         DC      H'0'                                                   00436\n         DC      CL1'1'                                                 00437\n         DC    47CL1' '                                                 00438\n         DC      C'PTF BY FMID CROSS REFERENCE'                         00439\n         DC    46CL1' '                                                 00440\n         DC      CL4'PAGE'                                              00441\nNUM      DC      CL4'    '                                              00442\nHDR2     DC      H'135'                                                 00443\n         DC      H'0'                                                   00444\n         DC      CL1'0'                                                 00445\n         DC      CL10'FMID'                                             00446\n         DC    12CL10'PTF'                                              00447\nHDR3     DC      H'135'                                                 00448\n         DC      H'0'                                                   00449\n         DC      CL1' '                                                 00450\n         DC    13CL10'*******'                                          00451\nLINE     DC      H'137'                                                 00452\n         DC      H'0'                                                   00453\nOUTAREA  DC   133CL1' '                                                 00454\nBLANK    DC      H'6'                                                   00455\n         DC      H'0'                                                   00456\n         DC      CL2'0 '                                                00457\n         EJECT                                                          00458\n*********************************************************************** 00459\n*              REGISTER EQUIVALENTS                                   * 00460\n*********************************************************************** 00461\nR0       EQU   0                                                        00462\nR1       EQU   1                                                        00463\nR2       EQU   2                                                        00464\nR3       EQU   3                                                        00465\nR4       EQU   4                                                        00466\nR5       EQU   5                                                        00467\nR6       EQU   6                                                        00468\nR7       EQU   7                                                        00469\nR8       EQU   8                                                        00470\nR9       EQU   9                                                        00471\nR10      EQU   10                                                       00472\nR11      EQU   11                                                       00473\nR12      EQU   12                                                       00474\nR13      EQU   13                                                       00475\nR14      EQU   14                                                       00476\nR15      EQU   15                                                       00477\n         END                                                            00478\n//SYMF0199 JOB SY212ZZJWL1100A035,'TECHSYBFC **LAWSON**',MSGCLASS=1,\n// MSGLEVEL=1,NOTIFY=@TSSY09,REGION=2000K\n//*\n//*\n//*                @TSSY09.SYSTEM.CNTL(PUTXREF)               ****\n//*\n//*\n//*  MAIN ORG=RM002\n//*\n//*\n//*\n//STEP1    EXEC PGM=PUTXREF\n//STEPLIB  DD  DSN=TECH.SY.SMPLIB,DISP=SHR\n//INPUT    DD  UNIT=T,VOL=SER=NLVOL1,DISP=SHR,\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=7200),\n//             LABEL=(1,NL)\n//SORTIN   DD  DSN=&&SORT,DISP=(NEW,PASS),UNIT=D,\n//             DCB=(RECFM=FB,LRECL=15,BLKSIZE=4095),\n//             SPACE=(CYL,(25,20))\n//SORTOUT  DD  DSN=&&SORT,DISP=(SHR,PASS),VOL=REF=*.SORTIN\n//TITLES   DD  DATA,DCB=BLKSIZE=80,DLM='/$'\n  EAS1102  ASSEMBLER XF            5752SC103 R102  MVSS038G,H,I\n  EBB1102  BASE CONTROL PROGRAM              R102  MVSS038G,H,I\n  EBT1102  BTAM                    5752SC120 R102  MVSS038G,H,I\n  ECM1200  3790/8100/DPCX HOST SUPPORT             3790HOST120\n  EDE1102  DEMF                    5752CM100 R102  MVSS038G,H,I\n  EDM1102  DATA MANAGEMENT         5752SC1D* R102  MVSS038G,H,I\n  EDS1102  DATA MGMT SUPPORT ERP   5752SC1C* R102  MVSS038G,H,I\n  EDU1602  DSF R060 FOR MVS/XA     565525701 R602  ICKDSF060\n  EEP0100  370X-EP PEP             5735SC100 R100  EP030\n  EEP0101  ACF/NCP/SSP EP R2.1     5735SC100 R101  EP030,\n  EEP0200  EP/VS WITH ACF/NCP R2   5735SC100 R200  EP030,\n  EEP0300  EP FOR NCP REL3         5735SC100 R300  EP030\n  EER1100  EREP                             R100\n  EER1300  EREP RELEASE 1.1        5744EREP1 R300  EREP111\n  EER1400  EREP R1.3               5744EREP1 R400  EREP113\n  EER1500  EREP R1.5               5744EREP1 R500  EREP115\n  EER2100  EREP FOR MVS/XA R2.1    5744EREP1 R100\n  EGA1102  GAM-GPS                 5752SC1G0 R102  MVSS038G,H,I\n  EGS1102  GRAPHIC SUBROUTINE PACKAGE        R102  MVSS038G,H,I\n  EHO1400  PSS HOST SUPPORT                        PSSHOST140\n  EHS6700  3600 HOST SUPPORT       5744CA300 R700  3600HSPIR7\n  EIP1102  IPCS                    5752SC132 R102  MVSS038G,H,I\n  EJE1102  JES2                    5752SC1BH R102  MVSS038G\n  EJE1103  JES2 3800 ENHANCEMENTS  5752SC1BH R103  MVSS038G,H,I\n  EJS1102  JES3                    5752SC1BA R102  MVSS038G,H,I\n  EMF1102  MF/1                              R102  MVSS038G,H,I\n  EMG1100  3694 DOC PROC           565800101 R100  MSC9\n  EMI1102  MICR/OCR                5752SC1DL R102  MVSS038G,H,I\n  EML1102  MULTI-LEAVING WORK STA  5752SC1BL R102  MVSS038G,H,I\n  EMS1102  MASS STORAGE SYSTEM     5752SC1DP R102  MVSS038G,H,I\n  ENC0100  NCP/OS SMP4 R050        5735SC300 R050  NCP050\n  ENC1201  ACF/NCP/SSP R2.1        5735SC300 R201  ACFNCP121,\n  ENC1300  ACF/NCP/SSP R3.0 (SCP)  5735SC300 R300  ACFNCP130,\n  EPM1102  PROGRAM MANAGEMENT                R102  MVSS038G,H,I\n  ESC1326  AMDPSCAN (PSR SERVICE AID)              - DLL -\n  ESP0100  SSP                               R050  NCP050\n  ESP1201  ACF/NCP/SSP R2.1 UTIL   5740AN100 R201  ACFNCP121,\n  ESP1300  ACF/NCP/SSP R3.0 UTIL   5740AN100 R300  ACFNCP130,\n  ESS1102  SUBSYSTEM SUPPORT SERVICES        R102  MVSS038G,H,I\n  EST1102  SYSTEM SUPPORT          5752SC1T* R102  MVSS038G,H,I\n  ESU1102  SU BIT STRING           5752SC1SU R102  MVSS038G,H,I\n  ESY1400  SMP4                    5744SC130 R400  MVSS038G,H,I\n  ETC0108  TCAM10                  5752SC121 R108  MVSS038G,H,I\n  ETC1102  ACF/TCAM SCP-TCAM11     5752SC1T3 R102  OSA789\n  ETC2102  ACF/TCAM SCP-TCAM12     5752TC221 R102  OSA7730\n  ETC2202  ACF/TCAM VER 2 REL 2    5752TC221 R202  MVSS038F\n  ETC2302  ACF/TCAM VER 2 REL 3    5752TC221 R302  ACFTCAM230,\n  ETC2402  ACF/TCAM V2R4           5752TC221 R402  ACFTCAM240\n  ETD1100  SPPS II SUPPORT                         SPPSII010\n  ETI1106  TERM IO CTL (TIOC)      5752SC1T3 R106  MVSS038G,H,I\n  ETV0108  TSO/VTAM                5752SC1T9 R108  MVSS038G,H,I\n  EUT1102  UTILITIES               5752SC1U* R102  MVSS038G,H,I\n  EVP1102  VPSS                    5752SC1DV R102  MVSS038G,H,I\n  EVT0108  VTAM2                   5752SC123 R108  MVSS038G,H,I\n  EVT1102  ACF/VTAM                5752SC1T9 R102  MVSS038F\n  EVT1202  ACF/VTAM REL 2          5752SC1T9 R202  ACFVTAM120\n  EVT1302  ACF/VTAM REL 3 SCP      5752SC123 R302  ACFVTAM130,\n  EXW1102  EXTERNAL WRITER         5752SC1B2 R102  MVSS038G,H,I\n  FBB1221  MVS PROCESSOR SUPPORT 2           R221  MVSS038G,H,I\n  FDM1133  3800 ENHANCEMENTS       5752SC1D* R133  MVSS038G,H,I\n  FDS1122  MVS SU64 SYSGEN         5752SC1CA R122  MVSS038G,H,I\n  FDS1133  3800 ENHANCEMENTS       5752SC1CB R133  MVSS038G,H,I\n  FDS1143  ICKDSF REL2             5752SC1UN R143  MVSS038H\n  FDS1220  DF/DSF STANDALONE       5752SC1UN R220\n  FDS1243  DEV SUPP FAC (DSF) REL3 5752SC1UN R243  MVSS038G\n  FDS1420  DF/DSF STANDALONE       5752SC1UN R420  ICKDSF040\n  FDS1443  DSF REL4                5752SC1UN R443  ICKDSF040,\n  FDS1520  DF/DSF REL5 STANDALONE  5752SC1UN R520  ICKDSF050\n  FDS1543  DF/DSF REL5             5752SC1UN R543  ICKDSF050\n  FDS1620  ICKDSF STANDALONE       5752SC1UN R620  ICKDSF060\n  FDZ1610  ICKDSF FOR MVS          5752SC1UN R610  ICKDSF060\n  FER1110  EREP ENHANCEMENTS       5744EREP1 R110  MVS038\n  FER1410  EREP                    5744EREP1 R400  EREP113\n  FJS1133  JES3 3800 ENHANCEMENTS  5752SC1BA R133  MVSS038G,H,I\n  FSP1221  ACF/NCP/SSP R2.1 (SCP)  5744AN100 R221  ACFNCP121,\n  FSP1320  ACF/NCP/SSP R3.0 MACROS 5744AN100 R320  ACFNCP130,\n  FUT1133  3800 ENHANCEMENTS       5752SC1UM R133  MVSS038G,H,I\n  HAE1200  DF/DSS                  5740CC100 RB00  DFDSS011,\n  HAE1300  DF/DSS                  5740CC100 RC00  DFDSS012\n  HAH2100  ASSEMBLER H             566896201 R100\n  HAP1300  APL INDEPENDENT BASE    5748AP101 R030  APL031\n  HAP1400  APL INDEPENDENT BASE    5748AP101 R040  APL040\n  HBB2102  MVS SP VER2 (XA)                  RA02  MVS038\n  HBC2103  DISOSS/8100/DOSF        566895501 R103\n  HCI1500  CICS REL 1.5            5740XX100 R150  CICS150,\n  HCI1602  CICS REL 1.6            5740XX100 R602  CICS160\n  HCM1100  HOST PREP FOR 8100 DPCX 5740XR315 R100  HOSTPREP110\n  HCM1200  HOST PREP               5740XR315 R200  HOSTPREP120\n  HCM1300  HOST PREP               5740XR315 R300  HOSTPREP130\n  HCM1400  HOST PREP               5740XR315 RD00  HOSTPREP140\n  HCR1102  PROG CRYPTO GRAPHIC FACILITY            CRYPTO010,\n  HCS1102  NCCF (NON SNA)          5752XX600 RA02  NCCF010\n  HCS1302  NCCF (SNA 3,4)          5752XX600 RC02  NCCF010\n  HCS1502  NCCF RELEASE 2          5752XX600 RE02  NCCF020,\n  HCU1102  CRYPTO UNIT SUPPORT     5752CU134 RA02  CUSP010,\n  HDC1400  ADC FOR STORES          5740BCS00 R400\n  HDD1400  DATA DICTIONARY         5740XXF00 RD00  DD140,\n  HDF1201  SCREEN DEF FAC-CICS  (SDF)        RB01  SDF020\n  HDF1300  SDF                     5740XYF00 RC00  SDF030\n  HDI1100  DMS-CICS REL2 PP BASE   5740XC500 RA00  DMS020\n  HDI1310  DMS-CICS REL3 PP BASE   5740XC500 RC10  DMS030\n  HDO2100  DISOSS/370              566598201\n  HDP1102  DFP (VSAM) FOR XA       566528418 R102  MVSXADFP110\n  HDT1100  3650 SDMS V1R1          5740D2200 R100\n  HDT1200  3650 SDMS V1R2          5740D2200 R200\n  HDT1300  3650 SDMS V1R3          5740D2200 R300\n  HDV1102  ISPF PGM DEVELOPMENT    566526801 R102  ISPF110\n  HDX1220  DIST SYS EXEC PGM (DSX) 5748XXG00 RB10  DSX022\n  HDX2100  DSX V2R1                566898601 R100  DSX210\n  HDX3100  DSX VERSION 2           566898601 R100\n  HFC1100  4700 COBOL              566898701 R100\n  HFL1100  FORTRAN LIB BASE REL1   5748LM303 RA00  VSFORTRAN110\n  HFL1103  FRTRN LIB COMMON REL1.1 5748LM303 RA03  VSFORTRAN111\n  HFL1111  FORTRAN VTAM LIBRARY                    VSFORTRAN110\n  HFL1112  FORTRAN LIBRARY SYS INTERFACE           VSFORTRAN110\n  HFL1200  FORTRAN LIB. COMMON                     VSFORTRAN120\n  HFS1121  4700 HOST SUPPORT       566898901 R121  4700HOST100\n  HFT1100  FORTRAN COMP & LIB      5748FO300 RA00  VSFORTRAN110\n  HFT1103  FORTRAN COMP COMMON     5748FO300 RA03  VSFORTRAN111\n  HFT1200  FORTRAN COMP COMMON     5748FO300 RB00  VSFORTRAN120\n  HGD1100  GRAPHICAL DATA DISPLAY MGR (GDDM) RA00  GDDM110\n  HGD1200  GDDM                    5748GD101 RB00  GDDM120\n  HHC1100  HOST COMMAND FACILITY - TCAM --   RA00  HCF010,\n  HHC1102  HOST COMMAND FACILITY - VTAM --   RA02  HCF010,\n  HHC2102  HCF VERSION 2           566598501 R102  HCF020\n  HHM1202  HIERARCHICAL STOR MGR   5752XRB00 RB02  - N/A -\n  HHM1302  HSM REL 3               5752XRB00 RC02  HSM030\n  HIA1100  IIAS                    566801101 R100\n  HIF1102  ISPF FOR MVS/TSO        566526801 R102  ISPF110\n  HIM1200  IMS DB DATA BASE        5740XX214 RB00  IMS120,\n  HIM1500  IMS/VS DATA BASE        5740XX214 RA15\n  HIM1504  IMS/VS REFRESH OF HIM1500\n  HIM1600  IMS/VS REL 1.6          5740XX214 R600  MVSS038F\n  HIP2102  IPCS FOR SP2.1.0        5752SC132 RA02  MVS038\n  HIP2329  IPCS FOR SP1.3.3                  RC29  MVSS038J\n  HIR1102  IMS RESOURCE LOCK MGR   5740IR100 RA02  IMS120\n  HJE1100  APPLIC. DEVELOP FAC.    566893701       ADF2\n  HJE1104  JES2 NJE WITH 3800E     5752SC1BH RA04  MVSS038G,H,I\n  HJE2226  JES2 FOR SP1.3 & HIGHER 5752SC1BH RB26  MVS038,\n  HJE2329  JES2 FOR SOMETHING      5752SC1BH RC29\n  HJS2226  JES3 FOR SP1.3          5752SC1BA RB26  MVS038,\n  HJS2327  JES3 FOR SP1.3.1        5752SC1BA RC27  MVS038\n  HLA1101  OS CICS                 5740XX100       CICS150\n  HMA1100  DASD MIGRATION AID-DF/DASDMAID    RA00  DASDMIG010,\n  HMP1100  SMP/E V1R1                        R100  MVSS038J\n  HNC2100  ACF/NCP V1R1                            MVSS038J\n  HNO1102  NOSP REL2               5752XX200 RA02  NOSP010\n  HNT1100  NETWORK TERMINAL OPTION 5735XX706 R100  NTO110\n  HNT1200  NTO REL2                5735XX700 R200  NTO120\n  HOC1300  OPER PLAN & CTL (OPC)   5740XT900 R300  OPC130\n  HOP1102  IDWS                    5752AMA00 R102  IDWS102,\n  HOZ1202  INFORMATIONS SYSTEMS    5752OZ135 R202  INFO020\n  HOZ1203  INFO SYS REFRESH        5752OZ135 R203  INFOACC020\n  HPD1103  NPDA COMMON            5740PD132 R103\n  HPD1200  NPDA COMMON REL2       5740PD132 R200  NPDA020\n  HPD1203  NPDA REL2 ENHANCED      5740PD132 R203  NPDA02E\n  HPD2100  NPDA VER2               566898301 R100  NPDA210\n  HPE1100  PEP EXTENDED FEATURES   5799PE100 RA00  PEPXF100\n  HPF1102  SPF                     566500901 RA02  SPF010,\n  HPI1102  INFO LIBRARY (TSO)      566527701 R102  INFOLIB110\n  HPI1103  INFO LIBRARY (NCCF)     566527701 R103  INFOLIB110\n  HPL0400  PL1 COMPILER            5734PL141 R040  PL1140,\n  HPO1102  OCCF                    566528801 R102\n  HPP1210  SPPS V1R2               5740D1601 R210\n  HPP1300  SPPS V1R3               5740D1601 R300\n  HPS1100  IIPS                    566801201 R100\n  HRC1100  3650 ARC V1R1           5740D1500 R100\n  HRC1200  3650 ARC V1R2           5740D1500 R200\n  HRF1302  RACF                    5752XXH00 RC02  MVSS038G\n  HRF1402  RACF REL4               5752XXH00 RD02  MVSS038I\n  HRF1502  RACF V1R5                               MVS038\n  HRL0400  PL1 RESIDENT LIBRARY              R040  PL1140,\n  HRL1040  PL1                     5734LM441 R040\n  HRL1400  PL1                     5734LM441 R040\n  HRM2204   RMF V2 REL 2           5752XY400 RB04  MSC2137\n  HRM2205   RMF V2R2 - SE SUPPORT  5752XY400 RB05  MSC1089\n  HRM2305  RMF V2R3                5752XY400 RC05  MVSS038G\n  HRM2405  RMF V2R4 FOR SP1.2      5752XY400 RD05\n  HRM2406  RMF V2R4 FOR SP1.3      5752XY400 RD06  MVS038,\n  HRM3102  RMF VER2                566527404 R102  MVS038\n  HRP1100  RPG II                  5740RG137 RA00  RPG100\n  HRS1200  SERVICE LEVEL REPORTER  5740DC300 R020  MVS038\n  HSL1200  DOC LIB FACILITY (DLF)  5748XXE00 R020  DCF020,\n  HSL1202  DLF MVS                 5748XXE00 R020  DCF020,\n  HSM1500  SORT MERGE              5740SM105 R500  SORT150\n  HSP2100  ACF/NCP V2R1                            MVSS038J\n  HSR1200  DOC COMPOSITION FACLITY 5748XX900 R020  DCF020\n  HSR1202  DCF BACKGROUND          5748XX900 R020  DCF020\n  HTL0400  PL1 TRANSIENT LIBRARY   5734LM541 R040  PL1140,\n  HTP1100  FILE TRANSFER PROG      5740SCFTP R110  FTP010\n  HTR1100  NETWORK ROUTING FACLITY 566896301 R100  NRF110\n  HTS1202  TSO SESSION MANAGER               RB02  MVSS038H\n  HUT1135  DF/DSS                  5740CC100 RA35  DFDSS010\n  HVC1202  VSPC                    5740XR600 R010  VSPC020\n  HVC2102  VSPC VER 2 REL 1        566528301 R020  VSPC210\n  HVT2102  ACF/VTAM VER2 REL1      566528001 R102  ACFVTAM210\n  JAP1303   VSPC JCLIN FOR APL     5748AP101 R030  APL031\n  JAP1305   COMMON INSTALL JCL FOR APL       R030  APL031\n  JAP1320   CICS EXECUTOR FOR APL  5748AP101 R030  APL031\n  JAP1330   VSPC EXECUTOR FOR APL  5748AP101 R030  APL031\n  JAP1401  JCLIN FOR MVS TSO FOR APL         R040  APL040\n  JAP1410  TSO FOR MVS             5748AP101 R040  APL040\n  JAP1412  JCLIN FOR VSPC          5748AP101 R040  APL040\n  JAP1413  JCLIN FOR TSO WITH VSPC 5748AP101 R040  APL040\n  JAP1414  CICS JCLIN              5748AP101 R040  APL040\n  JAP1420  CICS EXECUTOR           5748AP101 R040  APL040\n  JAP1430  VSPC EXECUTOR           5748AP101 R040  APL040\n  JAP1440  COMMON EXECUTOR         5748AP101 R040  APL040\n  JBB1112  TSO COMMAND PACKAGE     5752SC1B4 RA12  MVSS038G,H\n  JBB1113  TSO EXTENSIONS          56652850* RA13  MVS038\n  JBB1114  TSO NETMAIL             566528504 RA14  MVS038\n  JBB1122   MVS/SE PROG PROD                 RA22  MSC3062\n  JBB1123   MVS/SYSTEM EXTENSION 1.1         RA23  MSC1719\n  JBB1126  MVS SP1.1.0             5752BASIC RA26  MVSS038G\n  JBB1127  MVS SP1.1.1             5752BASIC RA27  MVSS038G\n  JBB1129  3375/3380 PRPQ\n  JBB1222  MVS/SYSTEM EXTENSION 2.0          RB22  MSC1717\n  JBB1226  MVS SYSTEM PROD REL1.2.0          RB26  MSC163,MSC144\n  JBB1326  MVS/SYSTEM PROD REL1.3.0          RC26  MVSS038H,I\n  JBB1327  MVS SYSTEM PROD REL1.3.1          RC27  MVS038\n  JBB1328  MVS SYSTEM PROD REL1.3.2          RC28  MVS038\n  JBB1329  MVS SP1.3.3                             MVS038\n  JBB2115  TSO EXTENSIONS          566528501 R115  MVS038\n  JBT1112  BTAM SP                 566527901 RA12\n  JCS1512  TERM ACC FAC FOR NCCF   5752XX600 RE12  NCCF020\n  JDD1410  CICS ONLINE SUPPORT     5740XXF00 R410  DD140,\n  JDD1420  IMS ONLINE SUPPORT      5740XXF00 R420  DD140,\n  JDI1110  DMS/CICS REL2 PP        5740XC500 R111  DMS020\n  JDI1311  DMS/CICS REL3 PP        5740XC500 R311  DMS030\n  JDM1112  MVS SAM - EXTENDED      5752SC1D* RA12  MVSS038G,H,I\n  JDM1113  DF/EF                   5752SC1D* RA13  DFEF010,\n  JDM1116  DF/EF CRYPTO FACILITY   5752SC1DK RA16  DFEF010,\n  JDM1122  AMS CRYPTO                        RA22  MVSS038G,H,I\n  JDM1132  MVS/SE SUPPORT FEATURE  5752SC1D1 RA32  MVSS038G,H,I\n  JDM1134  DF/DS DATA MGMT         5752SC1D* RA34  MVSS038I\n  JDM1136  DF/DS DATA MGMT         5752SC1D* RA36  MVSS038I\n  JDM1137  DF/DS DATA MANAGEMENT   5752SC1D2 RA37  DFDS114\n  JDM1138  DF/DS DATA MGMT         5752SC1D* RA38  MVSS038I\n  JDM1139  DF/DS DATA MGMT         5752DM1CM RA39  DFDS115\n  JDM1141  DF/DS VSAM              5752SC1DE RA41  DFDS115\n  JDM1142  DF/DS OPEN/CLOSE/EOV    5752SC1D1 RA42  DFDS115\n  JDM1145  DF/DS R1.1.6                      RA45  DFDS116\n  JDS1112  MVS DASDR UTILITY                 RA12  MSC1039\n  JDS1125  3375-80 PRPQ PRE-DFDS4  5752SC1S1 RA25  MVSS038H,I,\n  JDS1134  DF/DS CHECKPT RESTART   5752SC1C* RA34  MVSS038I\n  JDS1136  DF/DS DASD EREP         5752SC1CA RA36  MVSS038I\n  JDS1137  DF/DS CHECKPT RESTART   5752SC1CA RA37  DFDS114\n  JDS1139  DF/DS DATA MGMT         5752DS101 RA39  DFDS115\n  JDS1140  DF/DS SYSGEN            5752SC1S1 RA40  DFDS115\n  JDS1145  DF/DS R1.1.6                      RA45  DFDS116\n  JFL1113  LIBRARY VTAM INTERFACE  5748LM303 RA13  VSFORTRAN111\n  JFL1114  LIBRARY SYS INTERFACE   5748LM303 RA14  VSFORTRAN111\n  JFL1211\n  JFL1212\n  JFT1111   FORTRAN COMP & LIB EXEC PROCEDURE      VSFORTRAN110\n  JFT1112   SYSTEM INTERFACE       5748FO300 R112  VSFORTRAN110\n  JFT1113  FORTRAN COMPILER EXEC   5748FO300 RA13  VSFORTRAN111\n  JFT1114  FORTRAN COMPILER SYS INTERFACE    RA14  VSFORTRAN111\n  JFT1211  FORTRAN COMP EXEC                       VSFORTRAN120\n  JFT1212  FORTRAN COMP INTERFACE                  VSFORTRAN120\n  JGD1101  PRESENTATION GRAPHICS   5748GD101 RA01  GDDM110\n  JGD1201  PRESENTATION GRAPHICS   5748GD101 RB01  GDDM120\n  JHM1310  HSM REL3.1              5752XRB00 RC10  HSM031\n  JIF1177  ISPF EXITS              566526801 R102  ISPF110\n  JIM1210  IMS SURVEYOR UTILITY    5740XX214       IMS120,\n  JIM1220  IMS DC DATA COMM        5740XX214       IMS120,\n  JIM1222  IMS DC/XA                               IMS120\n  JIM1230  IMS MCS MULTI SYS COUPL 5740XY211       IMS120,\n  JIM1232  MSC SP2.1               5740XY211\n  JIM1240  IMS FP FAST PATH        5740I1214 R240  IMS120,\n  JIM1242  IMS FAST PATH SP2.1     5740I1214 R242  IMS120\n  JIM1250  IMS DBRC RECVRY CONTROL 5740I1214       IMS120\n  JIM1262  IMS DB/XA                               IMS120\n  JIM1450   IMS/VS RECOVERY CONTROL\n  JIM1510   IMS/VS SURVEYOR\n  JIM1514   IMS/VS REFRESH OF JIM1510\n  JIM1520   IMS/VS DATA COMMUNICATIONS\n  JIM1524   IMS/VS REFRESH OF JIM1520\n  JIM1530   IMS/VS MULTI-SYSTEM\n  JIM1534   IMS/VS REFRESH OF JIM1530\n  JIM1540   IMS/VS FAST PATH\n  JIM1544   IMS/VS REFRESH OF JIM1540\n  JIM1610   IMS/VS SURVEYOR UTILITY\n  JIM1620   IMS/VS DATA COMMUNICATION              MVSS038F\n  JIM1630   IMS/VS MULTI SYS COUP   5740XY211 R630\n  JIM1640   IMS/VS FAST PATH        5740I1214 R640 MVSS038F\n  JIM1650   IMS/VS RECOVERY CONTROL 5740I2214 R650\n  JIP1226  IPCS FOR SP1.2           5752SC132 RB26\n  JIP1326  IPCS FOR SP1.3           5752SC132 RC26  MVS038\n  JIP1327  IPCS FOR SP1.3.1        5752SC132 RC27  MVS038\n  JJE1112  JES2 NJE                5752SC1BH RA12  MSC333\n  JJS1134 JES3 NJE                 5752SC1BA RA34  MSC530\n  JJS1234  JES3 NJE 3800E          5752SC1BA RB34  MVSS038G,H,I\n  JJS1235  JES3 ERA (EXT REAL ADDR)5752SC1BA RB35  MVSS038H,I\n  JMS1112  MSS EXTENSION           5752SC1D* RA12  MVSS038G,H,I\n  JMS1114  MSS-E                             RA14  MVS038\n  JNC1211  ACF/NCP/SSP R2.1 (PP)   5735SC300 RB11  ACFNCP121,\n  JNC1310  ACF/NCP/SSP R3.0 (PP)   5735SC300 RC10  ACFNCP130,\n  JOZ1222  INFORMATION MANAGEMENT  5752OZ135 R222  INFO020\n  JOZ1223  INFO MGMT REFRESH       5752OZ135 R223  INFOACC020\n  JOZ1232  INFO ACCESS             5752OZ135 R232  INFOACC020\n  JPD1122   NPDA                   5752PD132 RA22\n  JPD1212   NPDA                   5740PD132 R212\n  JPD1233  NPDA REL2 ENHANCED TARA 5740PD132 RB33  NPDA02E\n  JPD2103  NPDA VER2 3600 FEATURE  566898301 R103  NPDA210\n  JPF1177  SPF EXITS               566500901 RA77  SPF010,\n  JPM1137  DF/DS LINKEDIT                    RA37  DFDS114\n  JRF1305  RACF REPORT WTR ENHANCE 5752RF100 R305  MVSS038G,\n  JRM2214  RMF                     5752XY400 RB14\n  JRM2215   RMF V2R2-SE 1.1                  RB15\n  JRM2225   RMF V2R2-SE 2.0                  RB25\n  JRM2315  RMF FOR SP1.1.1         5752XY400 RC15  MVSS038G\n  JSM1502  SORT MERGE SVC          5740SM105 R500  SORT150\n  JSP1211  ACF/NCP/SSP R2.1 UTIL   5744AN100 R211  ACFNCP121,\n  JSP1231  ACF/NCP/SSP R2.1 MACROS 5740AN100 R231  ACFNCP121,\n  JSP1310  ACF/NCP/SSP R3.0 UTIL   5740AN100 R310  ACFNCP130,\n  JSP1330  ACF/NCP/SSP R3.0 MACROS 5744AN100 R330  ACFNCP130,\n  JSR1201  DCF TSO                           R020  DCF020\n  JSR1202  DCF ATMS                          R020  DCF020\n  JST1113  DF/EF TSO UTILITIES     5752SC1T2 R113  DFEF010,\n  JTC1112  ACF/TCAM BASE PP        5752SC121 RA12\n  JTC1122  ACF/TCAM NETWORKING     5752SC121 RA22\n  JTC2112  ACF/TCAM BASE PP        5752SC121 RA12\n  JTC2122  ACF/TCAM NETWORKING     5752SC121 RA22\n  JTC2212  ACF/TCAM V2R2           5752TC221 RB12  MVSS038F\n  JTC2222  ACF/TCAM V2R2 NETWORK   5752TC221 RB22  MVSS038F\n  JTC2312  ACF/TCAM VER 2 REL 3    5752TC221 R312  ACFTCAM230,\n  JTC2322  ACF/TCAM V2R3 NETWORK   5752TC221 R322  ACFTCAM230,\n  JTC2412  ACF/TCAM V2R4           5752TC221 RD12  ACFTCAM240\n  JTC2416  ACF/TCAM V2R4           5752TC221 RD16  ACFTCAM240\n  JTC2422  ACF/TCAM V2R4 MSNF      5752TC221 RD22  ACFTCAM240\n  JUT1112  OFFLINE IBM 3800 UTIL             RA12\n  JUT1113  DF/EF IEHLIST           5752SC1U2 R113  DFEF010,\n  JUT1134  DF/DS UTILITY           5752SC1U2 RA34  DFDS112,\n  JUT1137  DF/DS UTILITY           5752SC1U6 RA37  DFDS114,\n  JUT1139  DF/DS UTILITIES         5752SC1U6 RA39  DFDS115\n  JUT1145  DF/DS R1.1.6                      RA45  DFDS116\n  JVP1121  VECTOR PROCESSING SUBSYSTEM\n  JVT1112   ACF/VTAM BASE PP                 RA12\n  JVT1122   ACF/VTAM NETWORKING FEATURE      RA22\n  JVT1132   ENCRYPT-DECRYPT FEATURE          RA32\n  JVT1212  ACF/VTAM BASE PP        5752SC123 RB12  ACFVTAM120\n  JVT1222  ACF/VTAM MSNF                     RB22  ACFVTAM120\n  JVT1232  ENCRYPT-DECRYPT FEATURE           RB32  ACFVTAM120\n  JVT1311  ACF/VTAM PP BASE                        ACFVTAM130\n  JVT1312  ACF/VTAM REL3 BASE PP   5752SC123 RC12  ACFVTAM130,\n  JVT1322  MSNF FOR ACF/VTAM REL 3           RC22  ACFVTAM130,\n  JVT1332  ENCRYPT/DECRYPT ACF/VTAM REL 3    RC32  ACFVTAM130\n  JVT2112  ACF/VTAM V2R1 CRYPTO    566528001       ACFVTAM210\n  JXX1100  NCP PACK SWITCH INTRFACE 566898101 R010 X25NPSI110\n  JXX1200  NCP PACK SWITCH I'FACE   566898101 R020 X25NPSI120\n  JXX1300  NCP PACK SWITCH I'FACE   566898101 R030 X25NPSI130\n/$\n//PRINTER  DD  SYSOUT=1\n//SYSUDUMP DD  SYSOUT=1\n//SYSPRINT DD  SYSOUT=1\n//SYSOUT   DD  SYSOUT=1\n//SYSIN    DD  *\n SORT FIELDS=(9,7,CH,A,1,7,CH,A)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PTFSXREF": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x01\\xdf\\x01\\xdf\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 479, "newlines": 479, "modlines": 0, "user": "TST2SSG"}, "text": "*          DATA SET CBT1277    AT LEVEL 006 AS OF 08/28/83\nPUTXREF  TITLE 'PROGRAM TO CROSS REFERENCE A PUT TAPE BY FMID'          00001\n*********************************************************************** 00002\n*                                                                     * 00003\n*              PUTXREF - VERSION 3.0                                  * 00004\n*                                                                     * 00005\n*        JERRY LAWSON  860-547-5000 EXT 2960                          * 00006\n*        HARTFORD INSURANCE GROUP,                                    * 00007\n*        690 ASYLUM AVE.                                              * 00008\n*        HARTFORD, CT.  06115                                         * 00009\n*                                                                     * 00010\n*        FUNCTION:                                                    * 00011\n*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A           * 00012\n*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS                 * 00013\n*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.             * 00014\n*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENITY         * 00015\n*        ON WHICH THE PTF IS FOUND WILL BE LOST. THE PROGRAM          * 00016\n*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S              * 00017\n*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON         * 00018\n*        A TAPE, AND TO DOUBLE CHECK THE STERLING FORREST             * 00019\n*        CROSS REFERENCE (IT LIES ONCE IN A WHILE.)                   * 00020\n*                                                                     * 00021\n*        DEPENDANCIES:                                                * 00022\n*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.               * 00023\n*              IT LINKS TO THE ENTRY POINT OF \"SORT\".                 * 00024\n*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT            * 00025\n*              THAT NAME OR ALIAS. YOU WILL NEED ABOUT                * 00026\n*              300K FOR THE WHOLE PROGRAM AND SORT.                   * 00027\n*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS                * 00028\n*              OPTIONAL. IF NOT INCLUDED, YOU WILL GET A              * 00029\n*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.         * 00030\n*              I HAVE INCLUDED THE FILE IN THE JCL, I                 * 00031\n*              CREATED THE FILE BY DOING THE FOLLOWING:               * 00032\n*              A. ALLOCATE A DATA SET ON TSO  - NORMAL STUFF -        * 00033\n*                  RECFM=FB,LRECL=80                                  * 00034\n*              B.  ASSIGN THAT DATA SET TO DD NAME OF OZPRINT         * 00035\n*              C.  EXECUTE YOUR INFO - SYS CLIST OR COMMAND           * 00036\n*              D.  ISSUE A 'DEF A' COMMAND TO INFO (SEARCH            * 00037\n*                  ALL FILES)                                         * 00038\n*              E.  DO A KEY WORD SEARCH AS FOLLOWS -                  * 00039\n*                  KWS FMID XREF      I GOT ABOUT 22 HITS,            * 00040\n*                  BUT THE FIRST ONE HAD A TITLE OF                   * 00041\n*                  'THIS IS A CROSS REFERENCE OF MVS FMIDS',          * 00042\n*                  OR SOMETHING SIMILAR. BE SURE YOU                  * 00043\n*                  HAVE THE LATEST ONE                                * 00044\n*              F.  SELECT THE CORRECT ONE, THE ISSUE A                * 00045\n*                  'PRINT UP' COMMAND. THE OUTPUT WILL GO             * 00046\n*                  TO THE DATA SET ALLOCATED TO THE OZPRINT           * 00047\n*                  DDNAME                                             * 00048\n*              G.  END YOUR INFO SESSION                              * 00049\n*              H.  EDIT YOUR PRINT FROM THE INFO SESSION              * 00050\n*                  YOU WANT TO DELETE ALL LINES THAT DO               * 00051\n*                  NOT HAVE AN FMID IN COLUMN 3. NOTE THAT DELETED      00052\n*                  FMIDS HAVE A * IN COLUMN 3, FOR BETTER             * 00053\n*                  DOCUMENTATION I DELETE THE STAR ANDMOVE THE        * 00054\n*                  FMID BACK TO 3, BUT THIS IS                        * 00055\n*                  OPTIONAL.                                          * 00056\n*              I.  AFTER YOU HAVE SAVED THE DATA SET,                 * 00057\n*                  SORT IT ON COLUMN 3 FOR A LENGTH OF 7.             * 00058\n*              J.  THE TITLE LIST YOU HAVE JUST CREATED               * 00059\n*                  CAN BE EITHER INCLUDED IN THE JCL STREAM           * 00060\n*                  OR KEPT IN A SEPERATE DATA SET, AND POINTED        * 00061\n*                  TO BY THE JCL.                                     * 00062\n*        3.    REGS MACRO. THE STANDARD REGISTER EQUATES              * 00063\n*              SUCH AS IN R1      EQU    1      ETC.                  * 00064\n*              NOTE - REMOVED ON 3/10/82                              * 00065\n*                                                                     * 00066\n*        CHANGES FOR RELEASE 3.0                                      * 00067\n*        1.    CHANGED INPUT LOCATION OF TITLES FROM COLUMN 2 TO      * 00068\n*              COLUMN 3. THIS ALLOWS USE OF THE OUTPUT OF THE         * 00069\n*              OZPRINT DD STATEMENT WITHOUT HAVING TO DELETE          * 00070\n*              THE CARRIAGE CONTROL INFO COMPLETELY. SEE THE INFO IN  * 00071\n*              2. ABOVE FOR DETAILS ON HOW TO CREATE THE TITLE        * 00072\n*              FILE.                                                  * 00073\n*        2.    EXTENDED SIZE OF THE TITLE FIELD TO INCLUDE            * 00074\n*              THE COMPONENT ID NOW THAT IBM HAS                      * 00075\n*              INCLUDED IT IN THE FMID XREF.                          * 00076\n*                                                                     * 00077\n*        CHANGES FOR RELEASE 2.0:                                     * 00078\n*        1. ADDED BLOCKSIZES TO DCB MACROS TO CORRECT DEPENDENCY      * 00079\n*           ON LOCAL MODS                                             * 00080\n*        2. CORRECTED SORT FIELDS STATEMENT IN PROGRAM. ONLY USED IF  * 00081\n*           IBM SORT IS INVOKED. NOTE THAT PARM ERROR SEEMS TO BE     * 00082\n*           A STANDARD FEATURE WITH THIS PROGRAM - I CAN FIND NO ERROR* 00083\n*        3. SYSOUT JCL DD STATEMENT ADDED FOR IBM SORTS               * 00084\n*                                                                     * 00085\n*        MACROS.                                                      * 00086\n*        SAVE      OPEN      CLOSE      GET                           * 00087\n*        PUT       LINK      WTO        ABEND (U128 - BAD SORT)       * 00088\n*        DCB                                                            00089\n*                                                                     * 00090\n*        REGISTER ASSIGNMENTS - NORMAL LINKAGE CONVENTIONS            * 00091\n*              REG 12              BASE REGISTER                      * 00092\n*              REG 2               BAL REGISTER                       * 00093\n*              REG 3               BCT REGISTER - PHASE 1             * 00094\n*              REG 4               POINTER TO PTF INPUT RECORD        * 00095\n*              REG 5               OUTPUT POSITION POINTER - PHASE 2  * 00096\n*              REG 6               BCT REGISTER - PHASE 2             * 00097\n*              REG 7               RETURN ADDRESS FOR EODAD (TITLES)  * 00098\n*********************************************************************** 00099\n         EJECT                                                          00100\nPUTXREF  CSECT                                                          00101\n         SAVE  (14,12),,*                                               00102\n         LR    R12,R15                                                  00103\n         USING PUTXREF,R12         REG 12 IS BASE                       00104\n         LA    R15,SAVE                                                 00105\n         ST    R15,8(R13)                                               00106\n         ST    R13,SAVE+4                                               00107\n         LR    R13,R15                                                  00108\n         OPEN  (SYSIN,INPUT)                                            00109\n         OPEN  (SORT,OUTPUT)                                            00110\n         SPACE 2                                                        00111\n*---------------------------------------------------------------------* 00112\n*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          * 00113\n*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         * 00114\n*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        * 00115\n*---------------------------------------------------------------------* 00116\nPX010    EQU   *                                                        00117\n         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE          00118\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?         00119\n         BNE   PX010               NO - BACK FOR ANOTHER                00120\n         LA    R4,2(R4)            YES - POINT PAST THE ++              00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP            00122\nPX015    EQU   *                                                        00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?                   00124\n         BNE   PX020               YES - GO CHECK IT OUT                00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION     00126\n         BCT   R3,PX015            LOOP DE LOOP                         00127\n         BAL   R2,PXGET            WOOPS - OUT OF RECORD                00128\n         B     PX015               BACK AGAIN WITH ANOTHER RECORD       00129\nPX020    EQU   *                                                        00130\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?                00131\n         BE    PX100               YES - GO GETPTF NUMBER               00132\n         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?             00133\n         BE    PX200               YES - THEN GO FIND THE FMID          00134\n         B     PX010               NO - THEN THIS IS NG - START OVER.   00135\n         EJECT                                                          00136\n*---------------------------------------------------------------------* 00137\n*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        * 00138\n*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             * 00139\n*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   * 00140\n*        THE KEYWORD 'PTF'                                            * 00141\n*---------------------------------------------------------------------* 00142\nPX100    EQU   *                                                        00143\n         LA    R4,3(R4)            BUMP PAST THE PTF KEYWORD            00144\n         SH    R3,=H'3'            DECREMENT LOOP CONTROL               00145\n         C     R3,=F'0'            OUT OF RECORD?                       00146\n         BH    PX110               NO - ON WITH THE SHOW                00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE     00148\nPX110    EQU   *                                                        00149\n         CLI   0(R4),C'('          THIS A LEFT PAREN?                   00150\n         BE    PX150               YES - THEN GO SAVE PTF NUMBER        00151\n         LA    R4,1(R4)            NO - POINT TO NEXT POSITION          00152\n         BCT   R3,PX110            LOOP AGAIN                           00153\n         BAL   R2,PXGET            OUT OF RECORD AGAIN                  00154\n         B     PX110                                                    00155\nPX150    EQU   *                                                        00156\n         LA    R4,1(R4)            POINT PAST LEFT PAREN                00157\n         BCTR  R3,0                DECREMENT FOR THE PAREN              00158\n         CLI   0(R4),C' '          ANYTHING HERE?                       00159\n         BNE   PX160               YES - THEN GO SAVE IT                00160\n         LA    R4,1(R4)            NO - POINT TO NEXT                   00161\n         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)       00162\n         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN             00163\n         B     PX150                                                    00164\nPX160    EQU   *                                                        00165\n         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER                      00166\n         B     PX010               BACK TO FIND THE FMID                00167\n         EJECT                                                          00168\n*---------------------------------------------------------------------* 00169\n*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      * 00170\n*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         * 00171\n*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         * 00172\n*        WHEN THIS IS LOCATED, A RECORTED IS WRITTEN TO THE SORT FILE.* 00173\n*---------------------------------------------------------------------* 00174\nPX200    EQU   *                                                        00175\n         LA    R4,3(R4)            POINT PAST THE VER KEYWORD           00176\n         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL       00177\n         C     R3,=F'0'            OUT OF RECORD?                       00178\n         BH    PX210               NO - ON WITH THE SHOW                00179\n         BAL   R2,PXGET            YES - OFF AND GET ANOTHER            00180\nPX210    EQU   *                                                        00181\n         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?                    00182\n         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID   00183\n         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL      00184\n         BCT   R3,PX210            WE'LL GET HIM YET                    00185\n         BAL   R2,PXGET            WOOPS OUT OF DATA                    00186\n         B     PX210               BACK WITH A NEW RECORD               00187\nPX220    EQU   *                                                        00188\n         LA    R4,4(R4)            POINT PAST THE KEYWORD               00189\n         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL           00190\n         C     R3,=F'0'            OUT OF DATA?                         00191\n         BH    PX230               NO - THEN FIND THE LITTLE DEVIL      00192\n         BAL   R2,PXGET            OUT OF DATA AGAIN                    00193\nPX230    EQU   *                                                        00194\n         CLI   0(R4),C'('          LEFT PAREN YET?                      00195\n         BE    PX240               YES - ALMOST THERE                   00196\n         LA    R4,1(R4)            POINT TO NEXT PLACE                  00197\n         BCT   R3,PX230            LOOP DE LOOP                         00198\n         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN       00199\n         B     PX230               KEEP ON PLUGGIN.                     00200\nPX240    EQU   *                                                        00201\n         LA    R4,1(R4)            POINT PAST THE PAREN                 00202\n         BCTR  R3,0                DON'T FORGET THE LOOP CONTROL        00203\n         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?   00204\n         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!        00205\n         LA    R4,1(R4)            YES - THOSE LITTLE BUGGERS           00206\n         BCT   R3,PX240            LOOP ONE MORE TIME                   00207\n         BAL   R2,PXGET            COMMONER AND COMMONER                00208\n         B     PX240                                                    00209\nPX250    EQU   *                                                        00210\n         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER                 00211\n         PUT   SORT,OUTPTF         WRITE THE RECORD                     00212\n         B     PX010               BACK AND START AGAIN                 00213\n               EJECT                                                    00214\n*---------------------------------------------------------------------* 00215\n*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216\n*        IS INPUT.                                                    * 00217\n*---------------------------------------------------------------------* 00218\nEOF      EQU   *                                                        00219\n         CLOSE SYSIN                                                    00220\n         CLOSE SORT                                                     00221\n         SPACE 3                                                        00222\n*---------------------------------------------------------------------* 00223\n*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224\n*---------------------------------------------------------------------* 00225\n         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226\n         LINK  EP=SORT             CALL THE SORT UTILITY                00227\n         LTR   R15,R15             CHECK RETURN CODE                    00228\n         BNZ   SORTERR             NO GOOD - ABEND                      00229\n         EJECT                                                          00230\n*---------------------------------------------------------------------* 00231\n*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232\n*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233\n*        WRITES THE FIRST SET OF HEADERS                              * 00234\n*---------------------------------------------------------------------* 00235\n         OPEN  (SORT,INPUT)                                             00236\n         OPEN  (TITLE,INPUT)                                            00237\n         OPEN  (PRINT,OUTPUT)                                           00238\n         LA    R5,TITLE            GET DCB ADDRESS                      00239\n         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?                 00240\n         BO    PX490               YES - BRANCH AROUND BAD OPEN         00241\n         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE           00242\n         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X00243\n               DESC=(7)                                                 00244\nPX490    EQU   *                                                        00245\n         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE           00246\n         EJECT                                                          00247\n*---------------------------------------------------------------------* 00248\n*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      * 00249\n*        THE 1ST RECORD.                                              * 00250\n*---------------------------------------------------------------------* 00251\n         GET   SORT,OUTPTF         1ST READ ONLY                        00252\n         MVC   HOLD,OUTFMID        SAVE FMID FOR COMPARISON             00253\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00254\n         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA              00255\n         LA    R6,12               SET UP LOOP FOR BCT                  00256\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00257\n         BO    PX510               NO - WOOPS - FORGOT TO SAY           00258\n*                                         MOTHER MAY I                  00259\n         LA    R7,PX499            SAVE RETURN POINT FOR EODAD          00260\nPX495    EQU   *                                                        00261\n         GET   TITLE,INAREA        GET A TITLE RECORD                   00262\n         CLC   INAREA+2(7),HOLD    DO FMID'S AGREE?                     00263\n         BL    PX495               NO - LOWER, GO READ ANOTHER          00264\n         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP    00265\n         MVC   OUTAREA+21(34),INAREA+11 EQUAL - GET TITLE               00266\nPX499    EQU   *                                                        00267\n         PUT   PRINT,LINE          WRITE HEADER                         00268\n         MVI   OUTAREA+0,C' '      CLEAR LINE                           00269\n         MVC   OUTAREA+1(131),OUTAREA+0                                 00270\n         AP    LINECNT,ONE         UPDATE LINE COUNT                    00271\n*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE          00272\n         B     PX510               BRANCH AROUND NORMAL READ            00273\n         EJECT                                                          00274\n*---------------------------------------------------------------------* 00275\n*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          * 00276\n*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          * 00277\n*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         * 00278\n*        ACCORDINGLY.                                                 * 00279\n*---------------------------------------------------------------------* 00280\nPX500    EQU   *                                                        00281\n         GET   SORT,OUTPTF         NORMAL READ                          00282\nPX510    EQU   *                                                        00283\n         CLC   HOLD,OUTFMID        SAME AS LAST RECORD?                 00284\n         BNE   PX570               NO - GO WRITE PARTIAL LINE           00285\nPX520    EQU   *                                                        00286\n         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER                   00287\n         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION          00288\n         BCT   R6,PX500            LOOP IN HERE TOO.                    00289\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00290\n         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE                   00291\n         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE                   00292\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00293\n         LA    R6,12               RESET LOOP CONTROL                   00294\n         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES   00295\n         CP    LINECNT,=P'60'      ENOUGH LINES FOR BREAK?              00296\n         BL    PX500               NO - BACK TO TOP                     00297\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00298\n         B     PX500               BACK TO TOP                          00299\n         SPACE 2                                                        00300\nPX570    EQU   *                                                        00301\n         PUT   PRINT,LINE          WRITE SHORT LINE                     00302\n         PUT   PRINT,BLANK         WRITE SPACER                         00303\n         AP    LINECNT,THREE       ADD IN LINE COUNT                    00304\n         CP    LINECNT,=P'59'      ALMOST AT END OF PAGE?               00305\n         BL    PX572               NO - BRANCH AROUND HDR ROUTINE       00306\n         BAL   R2,PXPUT            OFF TO SEE THE WIZARD                00307\nPX572    EQU   *                                                        00308\n         LA    R5,11(R5)           RESET POINTER                        00309\n         LA    R6,12               RESET BCT LOOP                       00310\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00311\n         MVC   OUTAREA+1(131),OUTAREA                                   00312\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00313\n         MVC   HOLD,OUTFMID        SAVE NEW FMID                        00314\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00315\n         BO    PX580               NO - FORGET THIS NONSENSE            00316\n         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD   00317\n         CLC   INAREA+2(7),HOLD    CURRENT ONE RIGHT?                   00318\n         BL    PX575               NO - LOW, GO GET NEXT ONE            00319\n         BH    PX580               NO - HIGH, STILL NOT RIGHT           00320\n         MVC   OUTAREA+21(34),INAREA+11   YES - THIS IS RIGHT ONE       00321\n         B     PX580               GO DIRECTLY TO PUT                   00322\nPX575    EQU   *                                                        00323\n         GET   TITLE,INAREA        READ THE FILE                        00324\n         CLC   INAREA+2(7),HOLD    THIS THE RIGHT GUY?                  00325\n         BL    PX575               NO - LOW, GO BACK AND READ AGAIN     00326\n         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS  00327\n         MVC   OUTAREA+21(34),INAREA+11  MOVE IN TITLE                  00328\nPX580    EQU   *                                                        00329\n         PUT   PRINT,LINE          WITE DATA                            00330\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00331\n         MVC   OUTAREA+1(131),OUTAREA                                   00332\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00333\n         LA    R6,12               RESET LOOP CONTROL                   00334\n         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER          00335\n         CP    LINECNT,=P'60'      ENOUGH FOR A NEW PAGE?               00336\n         BL    PX520               NO - BACK TO PROCESS NEW FMID        00337\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00338\n         B     PX520               BACK AND CONTINUE ON                 00339\n         EJECT                                                          00340\n*---------------------------------------------------------------------* 00341\n*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  * 00342\n*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         * 00343\n*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                * 00344\n*---------------------------------------------------------------------* 00345\nPX590    EQU   *                                                        00346\n         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE        00347\n         BR    R7                  RETURN VIA PRESET REG 7              00348\n         SPACE 3                                                        00349\n*---------------------------------------------------------------------* 00350\n*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  * 00351\n*---------------------------------------------------------------------* 00352\nPX599    EQU   *                                                        00353\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00354\n         CLOSE SORT                                                     00355\n         CLOSE PRINT                                                    00356\n         L     R13,SAVE+4                                               00357\n         LM    R14,R12,12(R13)                                          00358\n         SR    R15,R15                                                  00359\n         BR    R14                                                      00360\n         EJECT                                                          00361\n*---------------------------------------------------------------------* 00362\n*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       * 00363\n*        USED DURING PHASE ONE PROCESSING.                            * 00364\n*---------------------------------------------------------------------* 00365\nPXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN        00366\n         GET   SYSIN,INAREA                                             00367\n         LA    R3,72               SET UP REG 3 FOR BCT                 00368\n         LA    R4,INAREA           POINT TO DATA                        00369\n         BR    R2                  RETURN TO CALLER                     00370\n         SPACE 2                                                        00371\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nPXPUT    EQU   *                                                        00375\n         AP    PAGE,ONE            ADD TO PAGE NUMBER                   00376\n         MVC   NUM,PATRN           INSERT EDIT PATTERN                  00377\n         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE            00378\n         PUT   PRINT,HDR1                                               00379\n         PUT   PRINT,HDR2                                               00380\n         PUT   PRINT,HDR3                                               00381\n         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER              00382\n         BR    R2                  RETURN TO CALLER                     00383\n         SPACE 2                                                        00384\n*---------------------------------------------------------------------* 00385\n*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386\n*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387\n*---------------------------------------------------------------------* 00388\nSORTERR  EQU   *                                                        00389\n         ABEND 128,DUMP                                                 00390\n         EJECT                                                          00391\n         LTORG                                                          00392\n         EJECT                                                          00393\nSYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X00394\n               LRECL=80                                                 00395\n         EJECT                                                          00396\nSORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X00397\n               BLKSIZE=1500,EODAD=PX599                                 00398\n         EJECT                                                          00399\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=VBA,LRECL=137,   X00400\n               BLKSIZE=141                                              00401\n         EJECT                                                          00402\nTITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X00403\n               LRECL=80,EODAD=PX590                                     00404\n         EJECT                                                          00405\nSAVE     DS    18F                                                      00406\nHOLD     DS      CL7                                                    00407\nPAGE     DC      PL2'0'                                                 00408\nLINECNT  DC      PL2'0'                                                 00409\nONE      DC      PL1'1'                                                 00410\nTHREE    DC      PL1'3'                                                 00411\nFOUR     DC      PL1'4'                                                 00412\nFLAG     DC      XL1'00'                                                00413\nNOTITLE  EQU     X'80'                                                  00414\nPATRN    DC      XL4'40202120'                                          00415\nINAREA   DS      CL80                                                   00416\nOUTPTF   DC      CL8' '                                                 00417\nOUTFMID  DC      CL7' '                                                 00418\n         DS     0F                                                      00419\nSORTPARM DC      X'80'                                                  00420\n         DC      AL3(PARMLIST)                                          00421\n         DC      H'0'                                                   00422\nPARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423\n         DC      A(SORTCARD)                                            00424\n         DC      A(SORTEND)                                             00425\n         DC      A(RECCARD)                                             00426\n         DC      A(RECEND)                                              00427\n         DC      A(0)                                                   00428\n         DC      A(0)                                                   00429\nPARMEND  EQU   *                                                        00430\nSORTCARD DC      C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'                    00431\nSORTEND  DC      C' '                                                   00432\nRECCARD  DC      C' RECORD LENGTH=15,TYPE=F'                            00433\nRECEND   DC      C' '                                                   00434\nHDR1     DC      H'133'                                                 00435\n         DC      H'0'                                                   00436\n         DC      CL1'1'                                                 00437\n         DC    47CL1' '                                                 00438\n         DC      C'PTF BY FMID CROSS REFERENCE'                         00439\n         DC    46CL1' '                                                 00440\n         DC      CL4'PAGE'                                              00441\nNUM      DC      CL4'    '                                              00442\nHDR2     DC      H'135'                                                 00443\n         DC      H'0'                                                   00444\n         DC      CL1'0'                                                 00445\n         DC      CL10'FMID'                                             00446\n         DC    12CL10'PTF'                                              00447\nHDR3     DC      H'135'                                                 00448\n         DC      H'0'                                                   00449\n         DC      CL1' '                                                 00450\n         DC    13CL10'*******'                                          00451\nLINE     DC      H'137'                                                 00452\n         DC      H'0'                                                   00453\nOUTAREA  DC   133CL1' '                                                 00454\nBLANK    DC      H'6'                                                   00455\n         DC      H'0'                                                   00456\n         DC      CL2'0 '                                                00457\n         EJECT                                                          00458\n*********************************************************************** 00459\n*              REGISTER EQUIVALENTS                                   * 00460\n*********************************************************************** 00461\nR0       EQU   0                                                        00462\nR1       EQU   1                                                        00463\nR2       EQU   2                                                        00464\nR3       EQU   3                                                        00465\nR4       EQU   4                                                        00466\nR5       EQU   5                                                        00467\nR6       EQU   6                                                        00468\nR7       EQU   7                                                        00469\nR8       EQU   8                                                        00470\nR9       EQU   9                                                        00471\nR10      EQU   10                                                       00472\nR11      EQU   11                                                       00473\nR12      EQU   12                                                       00474\nR13      EQU   13                                                       00475\nR14      EQU   14                                                       00476\nR15      EQU   15                                                       00477\n         END                                                            00478\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PUTXREF": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x002\\x01\\x01\\x03O\\x01\\x01 _\\x10A\\x03\\xbf\\x02N\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-02-03T00:00:00", "modifydate": "2001-07-24T10:41:32", "lines": 959, "newlines": 590, "modlines": 0, "user": "WSBG"}, "text": "******************************************************************  ***\n**********       PUTXREF - SMP FORFMID TOOL           ************  ***\n******************************************************************  ***\n*                                                                   ***\n*  PUTXREF PROGRAM - PRODUCE A REPORT SORTING ANY SYSMODS ON        ***\n*    A PUT TAPE OR APAR TAPE OR ANY SMPPTFIN FILE BY FMID.          ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*  ORIGINAL AUTHOR   -   JERRY LAWSON                               ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*        JERRY LAWSON'S DOCUMENTATION                               ***\n*                                                                   ***\n*        JERRY LAWSON  860-547-5000 EXT 2960                        ***\n*        HARTFORD INSURANCE GROUP,                                  ***\n*        690 ASYLUM AVE.                                            ***\n*        HARTFORD, CT.  06115                                       ***\n*                                                                   ***\n*        ORIGINAL FUNCTION (BEFORE EXTRA DD NAMES WERE ADDED)       ***\n*                                                                   ***\n*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A         ***\n*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS               ***\n*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.           ***\n*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENTITY      ***\n*        ON WHICH THE PTF IS FOUND WILL BE LOST.  THE PROGRAM       ***\n*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S            ***\n*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON       ***\n*        A TAPE, AND TO DOUBLE CHECK THE CROSS REFERENCE (IT        ***\n*        LIES ONCE IN A WHILE.)                                     ***\n*                                                                   ***\n*        DEPENDENCIES:                                              ***\n*                                                                   ***\n*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.             ***\n*              IT LINKS TO THE ENTRY POINT OF \"SORT\".               ***\n*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT          ***\n*              THAT NAME OR ALIAS.  YOU WILL NEED ABOUT             ***\n*              300K FOR THE WHOLE PROGRAM AND SORT.                 ***\n*                                                                   ***\n*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS              ***\n*              OPTIONAL.  IF NOT INCLUDED, YOU WILL GET A           ***\n*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.       ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*        EUGENE CRAY'S DOCUMENTATION  (APPLICABLE TO LEVEL 006)       * 00067\n*                                                                     * 00077\n*        1.    CHANGED ASSEMBLER AND EXECUTION JCL TO ALLOW THE JOB   * 00068\n*              TO PICK ALL FMID(S), FROM A TAPE, OR ONLY THE PTF(S)   * 00069\n*              FOR A PARTICULAR FMID.                                 * 00070\n*                                                                     * 00077\n*        2.    THESE CHANGES WERE MADE BY EUGENE D. CRAY AND          * 00074\n*              STEPHEN PRELLER, BOTH FROM THE N.J. STATE TREASURY     * 00075\n*              DEPT.                                                  * 00076\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*  MODIFICATION RECORD - S. GOLOB -               - 06/20/01        ***\n*                                                                   ***\n*  MODIFIED JULY 24, '01  BY SAM GOLOB - LEVEL 006 -  GENE CRAY'S   ***\n*    MODIFICATION TO LOOK FOR ONLY ONE FMID, HAS BEEN IMPLEMENTED   ***\n*    HERE, AND HIS JCL WILL ALSO WORK, DUE TO THE ADDITION OF AN    ***\n*    OPTIONAL DDNAME, SRCHDATA.  IF THE SRCHDATA DDNAME IS PRESENT, ***\n*    THEN (CURRENT IMPLEMENTATION) ONE READ IS DONE, AND EITHER     ***\n*    ONE FMID NAME, OR THE WORD \"ALL\" IS COPIED OUT FROM COLUMNS 1  ***\n*    THRU 7.  IF THE WORD \"ALL\" IS READ, THEN THE ACTION OF THE     ***\n*    PROGRAM IS UNCHANGED, EXCEPT FOR THE ADDITION OF AN EXTRA      ***\n*    TITLE LINE.  IF AN FMID NAME IS INSERTED, IT IS COMPARED TO    ***\n*    THE LAST FMID FROM THE INPUT (SMPPTFIN) FILE, BEFORE THE SORT, ***\n*    AND A SORT RECORD IS CREATED ONLY IF THERE IS A MATCH.         ***\n*                                                                   ***\n*    THIS CODE WAS ORIGINALLY ON FILE 033 OF THE CBT TAPE, AND THAT ***\n*    FILE IS NOW BEING ELIMINATED, DUE TO THIS CHANGE IN (A HIGHER  ***\n*    LEVEL OF) THE PUTXREF PROGRAM.                                 ***\n*                                                                   ***\n*    THE FMID NAME OR THE WORD \"ALL\" MUST BEGIN IN COLUMN ONE OF    ***\n*    THE FIRST RECORD OF THE SRCHDATA DDNAME.                       ***\n*                                                                   ***\n*    IF THE SRCHDATA DDNAME IS ABSENT FROM THE JCL, THEN THIS       ***\n*    PROGRAM BEHAVES AS IT DID BEFORE.                              ***\n*                                                                   ***\n*    GENE CRAY'S JCL SHOULD WORK WITH THIS PROGRAM.  JUST USE       ***\n*    PUTXREF INSTEAD OF SMPEXREF FOR THE PROGRAM NAME.              ***\n*                                                                   ***\n*  MODIFIED JULY 13, '01  BY SAM GOLOB - LEVEL 005 -  TO PUT 40     ***\n*    CHARACTERS IN THE TITLES INSTEAD OF 34....                     ***\n*                                                                   ***\n*  MODIFIED JUNE 20, '01  BY SAM GOLOB - LEVEL 005 -  TO PUT OUT    ***\n*    ANOTHER OPTIONAL DDNAME, PDSATOUT, WHICH IS INPUT TO THE FREE  ***\n*    PDS PROGRAM, TO PROVIDE CONTROL STATEMENTS ADDING ISPF STATS   ***\n*    TO EACH PTF IN THE SMPPTS DATASET, WITH THE ISPF USERID FIELD  ***\n*    CONTAINING THE FMID OF THE SYSMOD.                             ***\n*                                                                   ***\n*  MODIFIED JUNE 20, '01  BY SAM GOLOB - LEVEL 004 -  TO PUT OUT    ***\n*    AN OPTIONAL DDNAME, SMPCOUT, WHICH IS FB-80, AND WHICH, IF     ***\n*    PRESENT, WILL RECEIVE FILE OUTPUT IDENTICAL TO THAT PRODUCED   ***\n*    BY THE SMPFMUPD OR SMPASUPD PROGRAMS.  THIS WILL ELIMINATE     ***\n*    THE NEED FOR THE SMPFMUPD OR SMPASUPD PROGRAMS.                ***\n*                                                                   ***\n*  MODIFIED JUNE 13, '01  BY SAM GOLOB - LEVEL 002 -  TO PUT OUT    ***\n*    FBA BLOCKED OUTPUT TO THE \"PRINTER\" DDNAME, NOT VBA UNBLOCKED. ***\n*    SUITABLE FOR INPUT TO SMPASUPD, OR SMPFMUPD PROGRAMS.          ***\n*                                                                   ***\n*  MODIFIED APRIL 26, '88 BY SAM GOLOB                TO ONLY       ***\n*    LOOK FOR FMID KEYWORD IF YOU'RE LEGITIMATELY WITHIN A ++VER    ***\n*    STATEMENT.  LEFT ALL THE OTHER STUFF IN AS SAFETY CHECKS.      ***\n*    PLEASE INFORM ME  ***OLOB@ATTGLOBAL.NET     IF THIS VERSION    ***\n*    OF THE PROGRAM FAILS TO WORK.  (CODE CAN USE CLEANING UP.)     ***\n*                                                                   ***\n*  MODIFIED APRIL 25, '88 BY SAM GOLOB                TO FIX A FEW  ***\n*    BUGS.  THE PROGRAM CAN NOW DETECT IF THE FMID KEYWORD IS IN    ***\n*    A COMMENT AREA.  IT ALSO KNOWS THAT IN THE INSIDE OF JCLIN YOU ***\n*    CAN'T TEST FOR A COMMENT AREA, AND IT WON'T TEST FOR AN FMID   ***\n*    KEYWORD THERE EITHER.  ALSO FIXED BUG THAT 1ST CHARACTER       ***\n*    OF THE FMID WAS CHOPPED OFF IF THERE WERE AN ODD NUMBER OF     ***\n*    SPACES BETWEEN THE OPEN PAREN AFTER THE FMID KEYWORD, AND      ***\n*    THE FIRST NON-BLANK.  ANOTHER BUG WAS THAT THE FMID KEYWORD    ***\n*    IN A ++IF STATEMENT WAS IGNORED ONLY ON THE SAME LINE AS THE   ***\n*    ++IF, BUT NOT ON THE FOLLOWING LINES UNDER THE ++IF'S CONTROL. ***\n*                                                                   ***\n*  MODIFIED JUNE 26, 1986 BY SAM GOLOB                TO LOOK AT    ***\n*    ++APAR, ++USERMOD, AND ++FUNCTION IN ADDITION TO ++PTF.        ***\n*    ( I WANT TO KNOW WHAT FMIDS MY APARS AND USERMODS BELONG TO! ) ***\n*                                                                   ***\n*  THIS CODE WAS OBTAINED FROM FILE 118 OF THE CBT MVS MODS TAPE,   ***\n*    VERSION 260.  THE CODE THERE ONLY EXTRACTS PTFS.  I HAVE       ***\n*    MODIFIED IT IN THIS VERSION TO RECOGNIZE APARS, USERMODS, AND  ***\n*    FUNCTION SYSMODS ALSO.                                         ***\n*                                                                   ***\n*  MY ASSEMBLER PROGRAM, SMPASUPD, ON FILE 118 OF THE CBT TAPE      ***\n*    CONVERTS THE OUTPUT OF THIS PROGRAM TO THE FORMAT:             ***\n*    ./  ADD  NAME=FMIDNAM                                          ***\n*          UZ11111  /*  FMID - FMIDNAM - FROM PUT TAPE - DATE  */   ***\n*                                                                   ***\n*    WHICH IS SUITABLE FOR INPUT TO AN SMP APPLY OR LIST            ***\n*    JOB.  THIS GETS A \"FORFMID\" EFFECT, GOOD ON ANY VERSION        ***\n*    OF SMP, BECAUSE IT'S ONLY DEPENDENT ON THE SMPPTFIN FILE,      ***\n*    AND NOT ON THE VERSION OF SMP WHICH WILL PROCESS THAT FILE.    ***\n*                                                                   ***\n*    THE OLD COBOL PROGRAM ON FILE 118, SMPFMUPD, WORKS THE SAME.   ***\n*    A DDNAME OF //SMPCOUT IN THIS PROGRAM, WILL PRODUCE THE SAME   ***\n*    OUTPUT TOO.                                                    ***\n*                                                                   ***\n******************************************************************  ***\n*********************************************************************\n*\n*    SET LINES PER PAGE VARIABLE, FOR PRINT CONTROL.\n*\n         GBLA  &LINEPPG,&LINELES\n&LINEPPG SETA  60\n&LINELES SETA  &LINEPPG-1\n         GBLC  &LLEV\n&LLEV    SETC  '006'\n*\n*********************************************************************\nPUTXREF  CSECT                                                          00101\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'PUTXREF - FORFMID PROCESSING OF SMPPTFIN SYSMODS - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL &LLEV '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVE     DC    18F'0'                                                   00406\nEYECATCH DS    0H             ENSURE ALIGNMENT\n* ------\n         STM   R14,R12,12(R13)                                          00102\n         LR    R5,R1               SAVE PARM POINTER\n         LA    R1,SAVE              NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         LR    R1,R5               RESTORE PARM POINTER\n         DROP  R15\n* ------\n         USING PUTXREF,R12,R11,R10,R9    SET UP FOUR BASE REGISTERS     00104\n         LR    R12,R15                                                  00103\n         LR    R11,R12                   ENSURE HI ORDER BITS LOADED\n         LA    R11,4095(,R12)\n         LA    R11,1(R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(R10)\n         LA    R9,4095(,R10)\n         LA    R9,1(R9)\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n*                          FILL HEADDATE AREA WITH INFO TO REUSE\n*   --------               HEADDATE FORMAT IS MM/DD/YYYY  HH:MM:SS\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n*   --------               HEADDAY  FORMAT IS MM/DD/YY\n         MVC   HEADDAY(2),DATED\n         MVI   HEADDAY+2,C'/'\n         MVC   HEADDAY+3(2),DATED+2\n         MVI   HEADDAY+5,C'/'\n         MVC   HEADDAY+6(2),DATED+6\n***********************************************************************\nINITEM   DS    0H          OTHER INITIALIZATIONS\n         MVC   BLANK,BLANK-1\n***********************************************************************\n* -- BELOW ----               SCAN THE TIOT FOR PRESENCE OF DDNAME -- *\n*\n*                             SMPCOUT DDNAME IS OPTIONAL\n*                             PDSATOUT DDNAME IS OPTIONAL\nTIOTSCAN DS    0H\n         L     R5,16          R5=CVT                                     00415\n         L     R5,0(,R5)      R5=TCB WORDS                               00416\n         L     R5,4(,R5)      R5=MY TCB                                  00417\n         L     R5,12(,R5)     R5=TIOT                                    00418\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          00419\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             00420\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        00421\n         CLC   4(8,R5),SMPCOUT+40   SMPCOUT DDNAME THERE?                00422\n         BNE   TIOTPDSA       NO                                         00423\n         OI    FLAGSMPC,X'01'       SHOW PRESENCE OF SMPCOUT DD          00424\n         B     TIOTNEXT       CONTINUE                                   00430\nTIOTPDSA CLC   4(8,R5),PDSATOUT+40\n         BNE   TIOTSRCH\n         OI    FLAGSMPC,X'02'       SHOW PRESENCE OF PDSATOUT DD\n         B     TIOTNEXT\nTIOTSRCH CLC   4(8,R5),SRCHDATA+40\n         BNE   TIOTNEXT\n         OI    FLAGSMPC,X'04'       SHOW PRESENCE OF SRCHDATA DD\n         B     TIOTNEXT\nTIOTNEXT SR    R3,R3                                                     00566\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      00567\n         AR    R5,R3          R5=NEXT DD ENTRY                           00568\n         B     TIOTLOOP       GO CHECK IT                                00569\nTIOTSEND DS    0H\n* -- ABOVE ----               SCAN THE TIOT FOR PRESENCE OF DDNAME -- *\n***********************************************************************\n         OPEN  (SYSIN,INPUT)                                            00109\n         OPEN  (SORT,OUTPUT)                                            00110\n* --->\n         TM    FLAGSMPC,X'04'\n         BZ    NOOPSRCH\n         OPEN  (SRCHDATA,INPUT)\nPX001    DS    0H\n         GET   SRCHDATA,INSRCH\n         B     PX010\nNOOPSRCH DS    0H\n* --->\n         SPACE 2                                                        00111\n*---------------------------------------------------------------------* 00112\n*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          * 00113\n*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         * 00114\n*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        * 00115\n*---------------------------------------------------------------------* 00116\nPX010    EQU   *                                                        00117\n         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE          00118\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?         00119\n         BNE   PX010               NO - BACK FOR ANOTHER                00120\n         NI    COMNTFLG,COMJCLOF   AT THIS POINT, EITHER BEGINNING  SBG\n*                                  OR ENDING OF JCLIN. TURN FLAG OFFSBG\n         NI    COMNTFLG,COMIFOF    NO LONGER IN CONTROL OF LAST     SBG\n*                                  ++IF CARD.                       SBG\n         NI    COMNTFLG,COMVEROF   NO LONGER IN CONTROL OF THE      SBG\n*                                  ++VER CARD.                      SBG\n         LA    R4,2(R4)            YES - POINT PAST THE ++              00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP            00122\nPX015    EQU   *                                                        00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?                   00124\n         BNE   PX020               YES - GO CHECK IT OUT                00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION     00126\n         BCT   R3,PX015            LOOP DE LOOP                         00127\n         BAL   R2,PXGET            WOOPS - OUT OF RECORD                00128\n         B     PX015               BACK AGAIN WITH ANOTHER RECORD       00129\nPX020    EQU   *                                                        00130\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?                00131\n         BE    PX100               YES - GO GETPTF NUMBER               00132\n         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131\n         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132\n         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131\n         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132\n         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131\n         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132\n         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?             00133\n         BE    PX200               YES - THEN GO FIND THE FMID          00134\n         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131\n         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132\n         B     PX010               NO - THEN THIS IS NG - START OVER.   00135\n         EJECT                                                          00136\n*---------------------------------------------------------------------* 00137\n*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        * 00138\n*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             * 00139\n*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   * 00140\n*        THE KEYWORD 'PTF'                                            * 00141\n*---------------------------------------------------------------------* 00142\nPX100    EQU   *                                                        00143\n         LA    R4,3(R4)            BUMP PAST PTF KEYWORD                00144\n         SH    R3,=H'3'            DECREMENT LOOP CONTROL               00145\n         C     R3,=F'0'            OUT OF RECORD?                       00146\n         BH    PX110               NO - ON WITH THE SHOW                00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE     00148\n         B     PX110               KEEP GOING                       SBG\nPX101    EQU   *                                                        00143\n         LA    R4,4(R4)            BUMP PAST APAR KEYWORD           SBG 00144\n         SH    R3,=H'4'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\n         B     PX110               KEEP GOING                       SBG\nPX102    EQU   *                                                        00143\n         LA    R4,7(R4)            BUMP PAST USERMOD KEYWORD        SBG 00144\n         SH    R3,=H'7'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\n         B     PX110               KEEP GOING                       SBG\nPX103    EQU   *                                                        00143\n         LA    R4,8(R4)            BUMP PAST FUNCTION KEYWORD       SBG 00144\n         SH    R3,=H'8'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\nPX110    EQU   *                                                        00149\n         CLI   0(R4),C'('          THIS A LEFT PAREN?                   00150\n         BE    PX150               YES - THEN GO SAVE PTF NUMBER        00151\n         LA    R4,1(R4)            NO - POINT TO NEXT POSITION          00152\n         BCT   R3,PX110            LOOP AGAIN                           00153\n         BAL   R2,PXGET            OUT OF RECORD AGAIN                  00154\n         B     PX110                                                    00155\nPX150    EQU   *                                                        00156\n         LA    R4,1(R4)            POINT PAST LEFT PAREN                00157\n         BCTR  R3,0                DECREMENT FOR THE PAREN              00158\n         CLI   0(R4),C' '          ANYTHING HERE?                       00159\n         BNE   PX160               YES - THEN GO SAVE IT                00160\n         LA    R4,1(R4)            NO - POINT TO NEXT                   00161\n         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)       00162\n         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN             00163\n         B     PX150                                                    00164\nPX160    EQU   *                                                        00165\n         MVC   OUTPTF(8),BLANKS    CLEAR AREA                           00166\n         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER                      00166\n         B     PX010               BACK TO FIND THE FMID                00167\nPX170    DS    0H                  GET HERE ONLY IF ++JCLIN CARD    SBG\n         OI    COMNTFLG,COMJCLON   FLAG THAT WE'RE IN JCLIN         SBG\n         NI    COMNTFLG,COMENTOF   TURN OFF COMMENT FLAG INITIALLY  SBG\n         B     PX010               NOT INTERESTED IN ANY OTHER FACT SBG\n         EJECT                                                          00168\n*---------------------------------------------------------------------* 00169\n*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      * 00170\n*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         * 00171\n*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         * 00172\n*        WHEN THIS IS LOCATED, A RECORD IS WRITTEN TO THE SORT FILE.  * 00173\n*---------------------------------------------------------------------* 00174\nPX200    OI    COMNTFLG,COMVERON   FLAG THAT WE ARE INSIDE OF ++VER SBG 00175\n         LA    R4,3(R4)            POINT PAST THE VER KEYWORD           00176\n         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL       00177\n         C     R3,=F'0'            OUT OF RECORD?                       00178\n         BH    PX210               NO - ON WITH THE SHOW                00179\n         BAL   R2,PXGET            YES - OFF AND GET ANOTHER            00180\n******************************************************************  SBG\n*  AT THIS POINT IF YOU'RE LOOKING AT A FUNCTION SYSMOD, IT MAY     SBG\n*   OR MAY NOT BE A DEPENDENT FMID.  IF IT ISN'T DEPENDENT AND SO   SBG\n*   HAS NO FMID KEYWORD IN IT, WE WANT TO PREVENT THE PROGRAM       SBG\n*   FROM LOOPING INTO THE NEXT SYSMOD ON THE FILE WHICH HAS AN      SBG\n*   FMID KEYWORD.  WE THEREFORE TEST AT THIS POINT FOR ++PTF,ETC.   SBG\n*   AND INITIALIZE PROCESSING IF FOUND.                             SBG\n*                                                                   SBG\n*  WE BREAK INTO THE LOOP AFTER THE PXGET, AND TEST FOR ++ ETC.     SBG\n******************************************************************  SBG\nPX210    EQU   *                                                        00181\n         BAL   R2,COMMTEST         DETERMINE IF WE'RE IN A COMMENT  SBG\n*-----------------------------------------------------------------  SBG\n*  FIRST TEST IS FOR SAFETY ONLY. DON'T LOOK FOR FMID KEYWORD       SBG\n*  INSIDE OF JCLIN OR ++IF OR IN A COMMENT AREA.                    SBG\n*-----------------------------------------------------------------  SBG\n         TM    COMNTFLG,COMENTON+COMIFON+COMJCLON                   SBG\n*               ARE WE IN A COMMENT OR A ++IF OR INSIDE OF JCLIN ?  SBG\n*               FMID KEYWORD IS NO GOOD IN ANY OF THESE 3 CASES.    SBG\n         BNZ   PX210B              WE ARE. DON'T LOOK FOR FMID.     SBG\n*-----------------------------------------------------------------  SBG\n*  THIS IS THE LEGITIMATE TEST FOR FMID KEYWORD.  IT MUST LIE       SBG\n*  WITHIN THE ++VER MODIFICATION CONTROL STATEMENT.                 SBG\n*-----------------------------------------------------------------  SBG\n         BAL   R2,VERTEST          TEST FOR PERIOD ENDING ++VER.    SBG\n         TM    COMNTFLG,COMVERON   ARE WE STILL WITHIN ++VER STMT?  SBG\n         BZ    PX210B              NO, FMID NOT LEGITIMATE KEYWORD  SBG\n         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?                    00182\n         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID   00183\nPX210B   DS    0H                  JUST BUMP IF INVALID FMID KEYWD  SBG\n         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL      00184\n         BCT   R3,PX210            WE'LL GET HIM YET                    00185\nPX211    BAL   R2,PXGET            WOOPS OUT OF DATA                SBG 00186\n*************  BREAK IN *****************************************   SBG\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?     SBG 00119\n         BNE   PX210               NO. STILL IN THIS SYSMOD.        SBG 00120\n******    WE HAVE A ++ CARD.  DO WE REINITIALIZE OR NOT?   ******   SBG\n         NI    COMNTFLG,COMJCLOF   NO LONGER IN PREVIOUS ++JCLIN    SBG\n         NI    COMNTFLG,COMIFOF    NO LONGER IN PREVIOUS ++IF       SBG\n         NI    COMNTFLG,COMVEROF   NO LONGER IN PREVIOUS ++VER      SBG\n         LA    R4,2(R4)            YES - POINT PAST THE ++          SBG 00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP        SBG 00122\nPX212    EQU   *                                                    SBG 00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?               SBG 00124\n         BNE   PX215               YES - GO CHECK IT OUT            SBG 00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION SBG 00126\n         BCT   R3,PX212            LOOP DE LOOP                     SBG 00127\n         BAL   R2,PXGET            END OF CARD IS ALL BLANKS        SBG 00128\n         B     PX212               BACK AGAIN WITH ANOTHER RECORD   SBG 00129\nPX215    EQU   *                                                    SBG 00130\n*   IF WE GET A HIT HERE, WE'RE IN THE NEXT SYSMOD, SO GO BACK.     SBG\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?            SBG 00131\n         BE    PX100               YES - GO GET PTF NUMBER          SBG 00132\n         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131\n         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132\n         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131\n         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132\n         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131\n         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132\n         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131\n         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132\n         CLC   0(2,R4),=C'IF'      IS THIS A ++IF CARD?             SBG 00131\n         BE    PX217     YES - DON'T LOOK FOR FMID - YOU'RE FOOLED  SBG 00132\n         B     PX210               NO HIT, ++ IS IN THIS SYSMOD     SBG 00187\nPX217    OI    COMNTFLG,COMIFON    UNDER ++IF, FMID KEYWORD IS WRONGSBG\n         B     PX211               LOOK FURTHER. THIS LINE HAS      SBG\n*                                  NO VALID FMID KEYWORD.           SBG\n*************  BREAK IN *****************************************   SBG\nPX220    EQU   *                                                        00188\n         LA    R4,4(R4)            POINT PAST THE KEYWORD               00189\n         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL           00190\n         C     R3,=F'0'            OUT OF DATA?                         00191\n         BH    PX230               NO - THEN FIND THE LITTLE DEVIL      00192\n         BAL   R2,PXGET            OUT OF DATA AGAIN                    00193\nPX230    EQU   *                                                        00194\n         BAL   R2,COMMTEST         DETERMINE IF PAREN IS IN COMMENT SBG\n         TM    COMNTFLG,COMENTON   IF IT IS A COMMENT, IGNORE IT    SBG\n         BO    PX230A              COMMENT. PAREN IS NOT REAL.      SBG\n         CLI   0(R4),C'('          LEFT PAREN YET?                      00195\n         BE    PX235               YES - ALMOST THERE               SBG 00196\nPX230A   DS    0H                  IF COMMENT, JUST KEEP BUMPING.   SBG\n         LA    R4,1(R4)            POINT TO NEXT PLACE                  00197\n         BCT   R3,PX230            LOOP DE LOOP                         00198\n         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN       00199\n         B     PX230               KEEP ON PLUGGIN.                     00200\nPX235    LA    R4,1(,R4)           BUMP FOR INITIAL FMID NUMBER TRY SBG\n         BCTR  R3,0                LOOP CONTROL FOR INITIAL TRY     SBG\n         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER FMID(    SBG\n         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG\n         BO    PX235A              COMMENT. NOT LEGIT FMID NUMBER.  SBG\n         CLI   0(R4),C' '          IS FIRST CHARACTER A BLANK ?     SBG\n         BNE   PX250               NOPE. ASSUME WE'VE GOT THE FMID. SBG\nPX235A   B     PX240               GO TO LOOP RTN TO FIND 1ST NONBLKSBG\nPX240    EQU   *                                                        00201\n         LA    R4,1(R4)            POINT PAST THE PAREN                 00202\n         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER 'FMID( ' SBG\n         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG\n         BO    PX240A              COMMENT. NOT LEGIT FMID NUMBER.  SBG\n******   BCTR  R3,0     ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00203\n         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?   00204\n         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!        00205\n******   LA    R4,1(R4) ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00206\nPX240A   BCT   R3,PX240            LOOP ONE MORE TIME                   00207\n         BAL   R2,PXGET            COMMONER AND COMMONER                00208\n         B     PX240                                                    00209\nPX250    EQU   *                                                        00210\n         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER                 00211\n* ---->\n         TM    FLAGSMPC,X'04'\n         BZ    WRITFMID\n         CLC   SRCHFMID(3),ALL     SEE IF ALL RECORDS REQUESTED\n         BE    WRITFMID            IF ALL REQUESTED, WRITE REC TO FILE\n         CLC   OUTFMID,SRCHFMID    ELSE COMPARE FMID TO SEARCH VALUE\n         BNE   PX010               GET ANOTHER RECORD IF NOT A MATCH\nWRITFMID DS    0H\n* ---->\n         PUT   SORT,OUTPTF         WRITE THE RECORD                     00212\n         B     PX010               BACK AND START AGAIN                 00213\n               EJECT                                                    00214\n*---------------------------------------------------------------------* 00215\n*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216\n*        IS INPUT.                                                    * 00217\n*---------------------------------------------------------------------* 00218\nEOF      EQU   *                                                        00219\n* --->\n         TM    FLAGSMPC,X'04'\n         BZ    NOOPSRCL\n         CLOSE SRCHDATA\nNOOPSRCL DS    0H\n* --->\n         CLOSE SYSIN                                                    00220\n         CLOSE SORT                                                     00221\n         SPACE 3                                                        00222\n*---------------------------------------------------------------------* 00223\n*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224\n*---------------------------------------------------------------------* 00225\n         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226\n         LINK  EP=SORT             CALL THE SORT UTILITY                00227\n         LTR   R15,R15             CHECK RETURN CODE                    00228\n         BNZ   SORTERR             NO GOOD - ABEND                      00229\n         EJECT                                                          00230\n*---------------------------------------------------------------------* 00231\n*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232\n*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233\n*        WRITES THE FIRST SET OF HEADERS                              * 00234\n*---------------------------------------------------------------------* 00235\n         OPEN  (SORT,INPUT)                                             00236\n         OPEN  (TITLE,INPUT)                                            00237\n         OPEN  (PRINT,OUTPUT)                                           00238\n         TM    FLAGSMPC,X'01'      IS SMPCOUT DDNAME THERE?\n         BZ    NOSMPC1             NO. SKIP ITS OPEN.\n         OPEN  (SMPCOUT,OUTPUT)                                         00238\nNOSMPC1  DS    0H\n         TM    FLAGSMPC,X'02'\n         BZ    NOPDSA1\n         OPEN  (PDSATOUT,OUTPUT)\nNOPDSA1  DS    0H\n         LA    R5,TITLE            GET DCB ADDRESS                      00239\n         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?                 00240\n         BO    PX490               YES - BRANCH AROUND BAD OPEN         00241\n         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE           00242\n         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X00243\n               DESC=(7)                                                 00244\nPX490    EQU   *                                                        00245\n         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE           00246\n         EJECT                                                          00247\n*---------------------------------------------------------------------* 00248\n*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      * 00249\n*        THE 1ST RECORD.                                              * 00250\n*---------------------------------------------------------------------* 00251\n         GET   SORT,OUTSORT        1ST READ ONLY                        00252\n         MVC   HOLDOUTS(15),OUTSORT   SAVE FMID AND PTF FOR COMPARISON  00253\n         BAL   R8,UPDTEOUT          PUT IEBUPDTE ./ ADD CARD OUT\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00254\n         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA              00255\n         LA    R6,12               SET UP LOOP FOR BCT                  00256\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00257\n         BO    PX510               NO - WOOPS - FORGOT TO SAY           00258\n*                                         MOTHER MAY I                  00259\n         LA    R7,PX499            SAVE RETURN POINT FOR EODAD          00260\nPX495    EQU   *                                                        00261\n         GET   TITLE,INAREA        GET A TITLE RECORD                   00262\n         CLC   INAREA+2(7),HOLDFMID  DO FMID'S AGREE?                   00263\n         BL    PX495               NO - LOWER, GO READ ANOTHER          00264\n         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP    00265\n         MVC   OUTAREA+21(40),INAREA+11 EQUAL - GET TITLE               00266\nPX499    EQU   *                                                        00267\n         PUT   PRINT,LINE          WRITE HEADER                         00268\n         MVI   OUTAREA+0,C' '      CLEAR LINE                           00269\n         MVC   OUTAREA+1(131),OUTAREA+0                                 00270\n         AP    LINECNT,ONE         UPDATE LINE COUNT                    00271\n*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE          00272\n         B     PX510               BRANCH AROUND NORMAL READ            00273\n         EJECT                                                          00274\n*---------------------------------------------------------------------* 00275\n*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          * 00276\n*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          * 00277\n*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         * 00278\n*        ACCORDINGLY.                                                 * 00279\n*---------------------------------------------------------------------* 00280\nPX500    EQU   *                                                        00281\n         GET   SORT,OUTSORT        NORMAL READ                          00282\nPX510    EQU   *                                                        00283\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         PUT SMPCOUT SYSMOD LINE\n         CLC   HOLDFMID,OUTFMID    SAME AS LAST RECORD?                 00284\n         BNE   PX570               NO - GO WRITE PARTIAL LINE           00285\nPX520    EQU   *                                                        00286\n         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER                   00287\n         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION          00288\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         WRITE SMPCOUT SYSMOD RECORD\n         BCT   R6,PX500            LOOP IN HERE TOO.                    00289\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00290\n         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE                   00291\n         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE                   00292\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00293\n         LA    R6,12               RESET LOOP CONTROL                   00294\n         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES   00295\n         CP    LINECNT,=P'&LINEPPG'  ENOUGH LINES FOR BREAK?            00296\n         BL    PX500               NO - BACK TO TOP                     00297\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00298\n         B     PX500               BACK TO TOP                          00299\n         SPACE 2                                                        00300\nPX570    EQU   *                                                        00301\n         PUT   PRINT,LINE          WRITE SHORT LINE                     00302\n         PUT   PRINT,BLANK         WRITE SPACER                         00303\n         AP    LINECNT,THREE       ADD IN LINE COUNT                    00304\n         CP    LINECNT,=P'&LINELES'  ALMOST AT END OF PAGE?             00305\n         BL    PX572               NO - BRANCH AROUND HDR ROUTINE       00306\n         BAL   R2,PXPUT            OFF TO SEE THE WIZARD                00307\nPX572    EQU   *                                                        00308\n         LA    R5,11(R5)           RESET POINTER                        00309\n         LA    R6,12               RESET BCT LOOP                       00310\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00311\n         MVC   OUTAREA+1(131),OUTAREA                                   00312\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00313\n         MVC   HOLDFMID,OUTFMID    SAVE NEW FMID                        00314\n         BAL   R8,UPDTEOUT         PUT SMPCOUT ./ ADD NAME= LINE\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00315\n         BO    PX580               NO - FORGET THIS NONSENSE            00316\n         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD   00317\n         CLC   INAREA+2(7),HOLDFMID  CURRENT ONE RIGHT?                 00318\n         BL    PX575               NO - LOW, GO GET NEXT ONE            00319\n         BH    PX580               NO - HIGH, STILL NOT RIGHT           00320\n         MVC   OUTAREA+21(40),INAREA+11   YES - THIS IS RIGHT ONE       00321\n         B     PX580               GO DIRECTLY TO PUT                   00322\nPX575    EQU   *                                                        00323\n         GET   TITLE,INAREA        READ THE FILE                        00324\n         CLC   INAREA+2(7),HOLDFMID  THIS THE RIGHT GUY?                00325\n         BL    PX575               NO - LOW, GO BACK AND READ AGAIN     00326\n         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS  00327\n         MVC   OUTAREA+21(40),INAREA+11  MOVE IN TITLE                  00328\nPX580    EQU   *                                                        00329\n         PUT   PRINT,LINE          WRITE DATA                           00330\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         PUT SMPCOUT SYSMOD LINE\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00331\n         MVC   OUTAREA+1(131),OUTAREA                                   00332\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00333\n         LA    R6,12               RESET LOOP CONTROL                   00334\n         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER          00335\n         CP    LINECNT,=P'&LINEPPG'   ENOUGH FOR A NEW PAGE?            00336\n         BL    PX520               NO - BACK TO PROCESS NEW FMID        00337\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00338\n         B     PX520               BACK AND CONTINUE ON                 00339\n         EJECT                                                          00340\n*---------------------------------------------------------------------* 00341\n*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  * 00342\n*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         * 00343\n*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                * 00344\n*---------------------------------------------------------------------* 00345\nPX590    EQU   *                                                        00346\n         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE        00347\n         BR    R7                  RETURN VIA PRESET REG 7              00348\n         SPACE 3                                                        00349\n*---------------------------------------------------------------------* 00350\n*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  * 00351\n*---------------------------------------------------------------------* 00352\nPX599    EQU   *                                                        00353\n         OI    FINALFLG,X'01'      FORCE FINAL SMPCOUT SYSMOD LINE\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00354\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         PRODUCE FINAL SMPCOUT SYSMOD LINE\n         CLOSE SORT                                                     00355\n         CLOSE PRINT                                                    00356\n         TM    FLAGSMPC,X'01'      IS SMPCOUT DDNAME THERE?\n         BZ    NOSMPC2             NO. SKIP CLOSE. NEVER OPENED.\n         CLOSE SMPCOUT\nNOSMPC2  DS    0H\n         TM    FLAGSMPC,X'02'      IS PDSATOUT DDNAME THERE?\n         BZ    NOPDSA2             NO. SKIP CLOSE. NEVER OPENED.\n         CLOSE PDSATOUT\nNOPDSA2  DS    0H\n         L     R13,SAVE+4                                               00357\n         LM    R14,R12,12(R13)                                          00358\n         SR    R15,R15                                                  00359\n         BR    R14                                                      00360\n         EJECT                                                          00361\n*---------------------------------------------------------------------* 00362\n*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       * 00363\n*        USED DURING PHASE ONE PROCESSING.                            * 00364\n*---------------------------------------------------------------------* 00365\nPXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN        00366\n         GET   SYSIN,INAREA                                             00367\n         LA    R3,72               SET UP REG 3 FOR BCT                 00368\n         LA    R4,INAREA           POINT TO DATA                        00369\n         BR    R2                  RETURN TO CALLER                     00370\n         SPACE 2                                                        00371\n*-------------------------------------------------------------------SBG 00362\n*        ROUTINE TO DETERMINE IF WE ARE INSIDE OF AN SMP COMMENT.   SBG 00363\n*        IF WE ARE, COMNTFLG IS ON AND IF */ OCCURS, TURN IT OFF.   SBG 00364\n*-------------------------------------------------------------------SBG 00365\nCOMMTEST TM    COMNTFLG,COMJCLON   IS THIS INSIDE OF JCLIN?         SBG 00366\n         BO    COMMOFF             YES. /* CAN BE PART OF JCL.      SBG 00367\n         TM    COMNTFLG,COMENTON   ARE WE ALREADY INSIDE A COMMENT? SBG 00366\n         BO    CENDTEST            YES. SEE IF WE'RE ENDING IT NOW. SBG 00367\n         CLC   0(2,R4),COMSTART    COMPARE FOR START OF A COMMENT   SBG 00366\n         BNE   CENDTEST            NO. TEST FOR END OF COMMENT      SBG 00367\n         OI    COMNTFLG,COMENTON   FORCE FLAG ON. WE'RE IN COMMENT  SBG 00368\n         B     COMTEND             WE TURNED IT ON.  ENOUGH --      SBG\nCENDTEST TM    COMNTFLG,COMENTON   ARE WE ALREADY IN A COMMENT?     SBG 00366\n         BZ    COMTEND             NO. THEREFORE CAN'T END COMMENT. SBG\n         CLC   0(2,R4),COMMEND     COMPARE FOR END OF A COMMENT     SBG 00366\n         BNE   COMTEND             NO CHANGE IN STATUS.  EXIT.      SBG\nCOMMOFF  NI    COMNTFLG,COMENTOF   SIGNAL THE END OF THE COMMENT    SBG\nCOMTEND  BR    R2                  RETURN TO CALLER                 SBG 00370\n         SPACE 2                                                    SBG 00371\n*-------------------------------------------------------------------SBG 00362\n*        ROUTINE TO FIND LEGITIMATE PERIOD WHICH ENDS AN            SBG 00363\n*        SMP STATEMENT.  THIS SHOULD BE FIRST PERIOD WHICH          SBG 00364\n*        DOES NOT LIE WITHIN A COMMENT.                             SBG 00364\n*-------------------------------------------------------------------SBG 00365\n*        NOTE THAT COMMTEST MUST BE DONE BEFORE THIS ROUTINE.       SBG\nVERTEST  TM    COMNTFLG,COMENTON   ARE WE INSIDE A COMMENT ?        SBG\n         BO    VEREND              YES-THE PERIOD DONT MEAN NOTHIN  SBG\n         CLI   0(R4),C'.'          THIS PERIOD IS LEGIT ?           SBG\n         BNE   VEREND              NOT A PERIOD. GET OUT.           SBG\n         NI    COMNTFLG,COMVEROF   YES. MARK THE ++VER AS FINISHED  SBG\nVEREND   BR    R2                  BACK TO CALLER                   SBG\n         SPACE 2                                                    SBG 00371\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nPXPUT    EQU   *                                                        00375\n         AP    PAGE,ONE            ADD TO PAGE NUMBER                   00376\n         MVC   NUM,PATRN           INSERT EDIT PATTERN                  00377\n         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE            00378\n         PUT   PRINT,HDR1                                               00379\n* ---->\n         TM    FLAGSMPC,X'04'\n         BZ    NOEXTRPT\n         MVC   HDRSRCH,SRCHFMID\n         PUT   PRINT,HDR1A                                              00379\nNOEXTRPT DS    0H\n* ---->\n         PUT   PRINT,HDR2                                               00380\n         PUT   PRINT,HDR3                                               00381\n         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER              00382\n* ---->\n         TM    FLAGSMPC,X'04'\n         BZ    NOZPFIVE\n         ZAP   LINECNT,FIVE        RESET PAGE LINE COUNTER              00382\nNOZPFIVE DS    0H\n* ---->\n         BR    R2                  RETURN TO CALLER                     00383\n         SPACE 2                                                        00384\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE SMPCOUT ./ ADD WRITING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nUPDTEOUT DS    0H                     WRITE SMPCOUT ./ ADD NAME= LINE\n         TM    FLAGSMPC,X'01'         IS SMPCOUT DDNAME THERE?\n         BZ    UPDTEOUE               NO. ENTIRE ROUTINE IS A NOP.\n         MVC   UPDTELIN,UPDTELIN-1    CLEAR OUTPUT AREA.\n         MVC   UPDTELT(14),UPDTELIT   MOVE IN LITERAL\n         MVC   UPDTENAM(7),OUTFMID    MOVE IN FMID NAME\n         PUT   SMPCOUT,UPDTELIN\nUPDTEOUE BR    R8                     BACK TO CALLER\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE PDSATOUT PTF RECORD WRITING ROUTINE.             * 00373\n*---------------------------------------------------------------------* 00374\n*\n*   THIS ROUTINE MUST BE EXECUTED RIGHT BEFORE EACH   BAL R8,WRITEOUT\n*        BECAUSE OF THE WRITEOMV, WHICH CAN'T BE DONE TWICE.\n*\nPDSAWOUT DS    0H                     WRITE PDSATOUT SYSMOD LINE\n         TM    FLAGSMPC,X'02'         IS PDSATOUT DDNAME THERE?\n         BZ    PDSAWOUE               NO. ENTIRE ROUTINE IS A NOP.\n         TM    FINALFLG,X'01'         ARE WE AT END OF SORT?\n         BO    PDSAWOGO               YES-UNCONDITIONALLY WRITE OUTPUT\n         CLC   HOLDPTF(7),OUTPTF          IS THIS THE SAME PTF AS LAST\n         BE    PDSAWOUE                   YES, DON'T WRITE ANYTHING\nPDSAWOGO MVC   PDSARECD,PDSARECD-1          CLEAR OUTPUT LINE\n         MVC   PDSALIT1(7),PDSLATTR\n         MVC   PDSAPTF(7),HOLDPTF\n         MVC   PDSALIT2(9),PDSLADDS\n         MVC   PDSALIT3(3),PDSLID\n         MVC   PDSAFMID(7),HOLDFMID\n         MVI   PDSALIT4,C')'\n         PUT   PDSATOUT,PDSARECD\nPDSAWOUE BR    R8                     BACK TO CALLER\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE SMPCOUT PTF RECORD WRITING ROUTINE.              * 00373\n*---------------------------------------------------------------------* 00374\nWRITEOUT DS    0H                     WRITE SMPCOUT SYSMOD LINE\n         TM    FLAGSMPC,X'01'         IS SMPCOUT DDNAME THERE?\n         BZ    WRITEOUE               NO. ENTIRE ROUTINE IS A NOP.\n         TM    FINALFLG,X'01'         ARE WE AT END OF SORT?\n         BO    WRITEOGO               YES-UNCONDITIONALLY WRITE OUTPUT\n         CLC   HOLDPTF(7),OUTPTF          IS THIS THE SAME PTF AS LAST\n         BE    WRITEOUE                   YES, DON'T WRITE ANYTHING\nWRITEOGO MVC   OUTRECD,OUTRECD-1          CLEAR OUTPUT LINE\n         MVC   OUTPTFO(7),HOLDPTF         MOVE IN PTF NAME\n         MVC   OUTSLAST,SLAST             MOVE IN /*\n         MVC   OUTFLITR,FLITR             MOVE IN LITERAL\n         MVC   OUTFMIDO,HOLDFMID          MOVE IN FMID\n         MVC   OUTFLIT2,FLIT2             MOVE IN LITERAL\n         MVC   OUTDATE(8),HEADDAY         MOVE IN DATE\n         MVC   OUTASTSL,ASTSL             MOVE IN */\n         PUT   SMPCOUT,OUTRECD\nWRITEOMV MVC   HOLDPTF(7),OUTPTF          STORE THIS PTF NAME FOR NEXT\nWRITEOUE BR    R8\n*---------------------------------------------------------------------* 00385\n*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386\n*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387\n*---------------------------------------------------------------------* 00388\nSORTERR  EQU   *                                                        00389\n         ABEND 128,DUMP                                                 00390\n         EJECT                                                          00391\n         LTORG                                                          00392\n         EJECT                                                          00393\nSYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X00394\n               LRECL=80                                                 00395\n         EJECT                                                          00396\nSMPCOUT  DCB   DSORG=PS,MACRF=PM,DDNAME=SMPCOUT,RECFM=FB,LRECL=80       00394\n         EJECT                                                          00396\nPDSATOUT DCB   DSORG=PS,MACRF=PM,DDNAME=PDSATOUT,RECFM=FB,LRECL=80      00394\n         EJECT                                                          00396\nSORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X00397\n               BLKSIZE=1500,EODAD=PX599                                 00398\n         EJECT                                                          00399\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=FBA,LRECL=133     00400\n         EJECT                                                          00402\nTITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X00403\n               LRECL=80,EODAD=PX590                                     00404\n         EJECT                                                          00405\nSRCHDATA DCB   DSORG=PS,MACRF=GM,DDNAME=SRCHDATA,RECFM=FB,             X00403\n               LRECL=80,EODAD=PX010                                     00404\n         EJECT                                                          00405\nPDSLATTR DC    CL7'ATTRIB '\nPDSLADDS DC    CL9'ADDSTATS '\nPDSLID   DC    CL3'ID('\nPDSLCLOS DC    CL1')'\nUPDTELIT DC    C'./  ADD  NAME='\nSLAST    DC    CL2'/*'\nASTSL    DC    CL2'*/'\nFLITR    DC    CL7'FMID - '\nFLIT2    DC    CL24' - FROM PUT TAPE - DONE '\nALL      DC    CL3'ALL'\nHOLDOUTS DS      0CL15            HOLD AREA FOR PREVIOUS SORT OUTPUT\nHOLDPTF  DC      CL8' '           PREVIOUS PTF NAME\nHOLDFMID DC      CL7' '           PREVIOUS FMID NAME                    00407\n         DC      CL8' '\nBLANKS   DC      CL8' '                                             SBG 00418\nPAGE     DC      PL2'0'                                                 00408\nLINECNT  DC      PL2'0'                                                 00409\nONE      DC      PL1'1'                                                 00410\nTHREE    DC      PL1'3'                                                 00411\nFOUR     DC      PL1'4'                                                 00412\nFIVE     DC      PL1'5'                                                 00412\nFLAG     DC      XL1'00'                                                00413\nFLAGSMPC DC      XL1'00'          X'01' SHOWS PRESENCE OF SMPCOUT DD    00413\n*                                 X'02' SHOWS PRESENCE OF PDSATOUT DD\nFINALFLG DC      XL1'00'          X'01' FORCES WRITEOUT TO ALWAYS WRITE 00413\nNOTITLE  EQU     X'80'                                                  00414\nCOMNTFLG DC      XL1'00'          TEST IF WE'RE INSIDE A COMMENT    SBG\nCOMENTON EQU     X'01'            YES WE ARE.  IGNORE SMP KEYWORDS. SBG\nCOMENTOF EQU     X'FE'            NO WE AREN'T.  PROCESSING NORMAL. SBG\n*                                 IF WE'RE INSIDE JCLIN, NOT COMMENTSBG\nCOMJCLON EQU     X'02'            YES WE ARE IN JCLIN. NOT A COMMENTSBG\nCOMJCLOF EQU     X'FD'            NO WE AREN'T. CAN BE A COMMENT.   SBG\nCOMIFON  EQU     X'04'         WE ARE IN A ++IF CARD. FMID NO GOOD. SBG\nCOMIFOF  EQU     X'FA'            WE AREN'T IN THE ++IF CARD NOW.   SBG\nCOMVERON EQU     X'80'            WE ARE LEGITIMATELY IN THE ++VER  SBG\nCOMVEROF EQU     X'7F'            WE ARE NOT IN ++VER LEGITIMATELY. SBG\nCOMSTART DC      CL2'/*'          BEGINNING OF A COMMENT            SBG\nCOMMEND  DC      CL2'*/'          END OF A COMMENT                  SBG\nPATRN    DC      XL4'40202120'                                          00415\nINAREA   DS      CL80                                                   00416\n         DC      CL8' '\nOUTSORT  DS      0CL15            INPUT AREA FOR SORT OUTPUT RECORD\nOUTPTF   DC      CL8' '           SORT PTF NAME - 1ST 7 CHARACTERS      00417\nOUTFMID  DC      CL7' '           SORT FMID NAME                        00418\n         DS     0F                                                      00419\nSORTPARM DC      X'80'                                                  00420\n         DC      AL3(PARMLIST)                                          00421\n         DC      H'0'                                                   00422\nPARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423\n         DC      A(SORTCARD)                                            00424\n         DC      A(SORTEND)                                             00425\n         DC      A(RECCARD)                                             00426\n         DC      A(RECEND)                                              00427\n         DC      A(0)                                                   00428\n         DC      A(0)                                                   00429\nPARMEND  EQU   *                                                        00430\nSORTCARD DC    C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'                      00431\nSORTEND  DC    C' '                                                     00432\nRECCARD  DC    C' RECORD LENGTH=15,TYPE=F'                              00433\nRECEND   DC    C' '                                                     00434\nHDR1     DC    CL1'1'                                                   00437\n         DC    45CL1' '                                                 00438\n         DC    C'SYSMOD BY FMID CROSS REFERENCE'                        00439\n         DC    45CL1' '                                                 00440\n         DC    CL4'PAGE'                                                00441\nNUM      DC    CL4'    '                                                00442\n         DC    CL4'    '                                                00442\nHDR1A    DC    0CL133                                                   00435\n         DC    CL1' '                                                   00437\n         DC    45CL1' '                                                 00438\n         DC    CL21'SEARCH FOR FMID ===> '                              00439\nHDRSRCH  DC    CL7'       '                                             00442\n         DC    59CL1' '                                                 00440\n         DC    CL8' '             SPACER\nHDR2     DC    CL1'0'                                                   00445\n         DC    CL10'FMID'                                               00446\n         DC    12CL10'SYSMOD'                                       SBG 00447\n         DC    CL4'    '                                                00442\nHDR3     DC    CL1' '                                                   00450\n         DC    13CL10'*******'                                          00451\n         DC    CL4'    '                                                00442\n         DC    CL4' '\nLINE     DS    0CL133                                                   00452\nOUTAREA  DC    133CL1' '                                                00454\n         DC    CL4' '\nBLANK    DC    CL133' '                                                 00455\n         DC    CL16' '\n         EJECT                                                          00458\nTIMED    DS    CL7                TIME AND DATE WORD FIELDS\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '            MM/DD/YYYY  HH:MM:SS\nHEADDAY  DC    CL8' '             MM/DD/YY\n         DC    CL8' '\n*  - - - - - - - - - - - - -      OUTPUTS FOR FORFMID SMPCNTL CARDS\n         DC    C' '\nUPDTELIN DS    0CL80              IEBUPDTE ADD CARD FOR SMPCOUT\nUPDTELT  DC    CL14' '            ./  ADD  NAME= LITERAL\nUPDTENAM DC    CL8' '             FMID NAME\nUPDTERST DC    CL58' '\n* ----                            END OF RECORD\n         DC    CL8' '\nINSRCH   DS    0CL80                                                    00455\nSRCHFMID DC    CL7' '                                                   00456\n         DC    CL73' '                                                  00457\n         DC    CL8' '\n* ----                            END OF RECORD\n         DC    CL8' '\nOUTRECD  DS    0CL80              SYSMOD RECORD FOR SMPCOUT\nOUTRSTRT DC    CL6' '             BLANKS\nOUTPTFO  DC    CL7' '             PTF NAME\nOUTFILL1 DC    CL2' '             BLANKS\nOUTSLAST DC    CL2' '             /*\nOUTFILL2 DC    CL2' '             BLANKS\nOUTFLITR DC    CL7' '             LITERAL INDICATING FMID\nOUTFMIDO DC    CL7' '             FMID NAME\nOUTFLIT2 DC    CL24' '            LITERAL\nOUTDATE  DC    CL10' '            DATE - 8 OR 10 CHARS DEPENDING...\nOUTFILL3 DC    CL2' '             BLANKS\nOUTASTSL DC    CL2' '             */\nOUTFILL4 DC    CL9' '             BLANKS\n* ----                            END OF RECORD\n* ----                            END OF RECORD\n         DC    CL8' '\nPDSARECD DS    0CL80              SYSMOD RECORD FOR PDSATOUT\nPDSASTRT DC    CL1' '             BLANKS\nPDSALIT1 DC    CL7' '             ATTRIB COMMAND\nPDSAPTF  DC    CL7' '             PTF NAME\nPDSAFIL1 DC    CL1' '             BLANKS\nPDSALIT2 DC    CL9' '             ADDSTATS KEYWORD\nPDSAFIL2 DC    CL1' '             BLANKS\nPDSALIT3 DC    CL3' '             ID(\nPDSAFMID DC    CL7' '             FMID NAME\nPDSALIT4 DC    CL1' '             )\nPDSAFIL3 DC    CL43' '            BLANKS\n         DC    CL8' '\n         END                                                            00478\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PUTXREF#": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x007\\x01\\x01\\x17/\\x01\\x06\\x15\\x8f\\t\\x19\\x00!\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-06-21T00:00:00", "modifydate": "2006-06-07T09:19:37", "lines": 33, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": "//WSBGSMPX  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X\n//***********************************************************//\n//*                                                         *//\n//*  THIS IS THE PUTXREF JCL TO INCLUDE GENE CRAY'S         *//\n//*  OPTIONAL DDNAME //SRCHDATA .  INSTRUCTIONS ON THE      *//\n//*  USE OF THAT DDNAME ARE INCLUDED IN THIS MEMBER.        *//\n//*                                                         *//\n//***********************************************************//\n//STEP1    EXEC PGM=PUTXREF\n//STEPLIB  DD  DSN=WSBG.LOAD,DISP=SHR\n//INPUT    DD DISP=SHR,DSN=WSBG.SEQ.TEST.SMPPTS\n//SORTIN   DD  DSN=&&SORT,DISP=(NEW,PASS),UNIT=SYSDA,\n//             DCB=(RECFM=FB,LRECL=15,BLKSIZE=4095),\n//             SPACE=(CYL,(55,30))\n//SORTOUT  DD  DSN=&&SORT,DISP=(SHR,PASS),VOL=REF=*.SORTIN\n//TITLES   DD  DISP=SHR,DSN=WCBT.V437.FILE118.PDS(TITLES)\n//PRINTER  DD  SYSOUT=*\n//PDSATOUT DD DISP=SHR,DSN=WSBG.PTFPDS(ASIDXXXZ)\n//SMPCOUT  DD DISP=SHR,DSN=WSBG.PTFPDS2(ESOXXXZP)\n//SYSUDUMP DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSIN    DD  *\n SORT FIELDS=(9,7,CH,A,1,7,CH,A)\n/*\n//SRCHDATA DD  *\nHBB6603\n//*  TO USE, PLACE FMID NUMBER IN COLS 1-7 ABOVE, AFTER THE SRCHDATA\n//*  CARD.\n//*  IF YOU WANT A LISTING OF THE WHOLE TAPE, TYPE IN 'ALL', INSTEAD.\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PUTXREFO": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00!\\x01\\x01\\x03O\\x01\\x01\\x19O\\x161\\x03_\\x02N\\x00\\x00\\xd6\\xd3\\xc4\\xe5\\xc5\\xd9\\xe2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2001-02-03T00:00:00", "modifydate": "2001-07-13T16:31:21", "lines": 863, "newlines": 590, "modlines": 0, "user": "OLDVERS"}, "text": "******************************************************************  ***\n**********       PUTXREF - SMP FORFMID TOOL           ************  ***\n******************************************************************  ***\n*                                                                   ***\n*  PUTXREF PROGRAM - PRODUCE A REPORT SORTING ANY SYSMODS ON        ***\n*    A PUT TAPE OR APAR TAPE OR ANY SMPPTFIN FILE BY FMID.          ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*  ORIGINAL AUTHOR   -   JERRY LAWSON                               ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*        JERRY LAWSON'S DOCUMENTATION                               ***\n*                                                                   ***\n*        JERRY LAWSON  860-547-5000 EXT 2960                        ***\n*        HARTFORD INSURANCE GROUP,                                  ***\n*        690 ASYLUM AVE.                                            ***\n*        HARTFORD, CT.  06115                                       ***\n*                                                                   ***\n*        ORIGINAL FUNCTION (BEFORE EXTRA DD NAMES WERE ADDED)       ***\n*                                                                   ***\n*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A         ***\n*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS               ***\n*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.           ***\n*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENTITY      ***\n*        ON WHICH THE PTF IS FOUND WILL BE LOST.  THE PROGRAM       ***\n*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S            ***\n*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON       ***\n*        A TAPE, AND TO DOUBLE CHECK THE CROSS REFERENCE (IT        ***\n*        LIES ONCE IN A WHILE.)                                     ***\n*                                                                   ***\n*        DEPENDENCIES:                                              ***\n*                                                                   ***\n*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.             ***\n*              IT LINKS TO THE ENTRY POINT OF \"SORT\".               ***\n*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT          ***\n*              THAT NAME OR ALIAS.  YOU WILL NEED ABOUT             ***\n*              300K FOR THE WHOLE PROGRAM AND SORT.                 ***\n*                                                                   ***\n*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS              ***\n*              OPTIONAL.  IF NOT INCLUDED, YOU WILL GET A           ***\n*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.       ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*  MODIFICATION RECORD - S. GOLOB -               - 06/20/01        ***\n*                                                                   ***\n*  MODIFIED JULY 13, '01  BY SAM GOLOB - LEVEL 005 -  TO PUT 40     ***\n*    CHARACTERS IN THE TITLES INSTEAD OF 34....                     ***\n*                                                                   ***\n*  MODIFIED JUNE 20, '01  BY SAM GOLOB - LEVEL 005 -  TO PUT OUT    ***\n*    ANOTHER OPTIONAL DDNAME, PDSATOUT, WHICH IS INPUT TO THE FREE  ***\n*    PDS PROGRAM, TO PROVIDE CONTROL STATEMENTS ADDING ISPF STATS   ***\n*    TO EACH PTF IN THE SMPPTS DATASET, WITH THE ISPF USERID FIELD  ***\n*    CONTAINING THE FMID OF THE SYSMOD.                             ***\n*                                                                   ***\n*  MODIFIED JUNE 20, '01  BY SAM GOLOB - LEVEL 004 -  TO PUT OUT    ***\n*    AN OPTIONAL DDNAME, SMPCOUT, WHICH IS FB-80, AND WHICH, IF     ***\n*    PRESENT, WILL RECEIVE FILE OUTPUT IDENTICAL TO THAT PRODUCED   ***\n*    BY THE SMPFMUPD OR SMPASUPD PROGRAMS.  THIS WILL ELIMINATE     ***\n*    THE NEED FOR THE SMPFMUPD OR SMPASUPD PROGRAMS.                ***\n*                                                                   ***\n*  MODIFIED JUNE 13, '01  BY SAM GOLOB - LEVEL 002 -  TO PUT OUT    ***\n*    FBA BLOCKED OUTPUT TO THE \"PRINTER\" DDNAME, NOT VBA UNBLOCKED. ***\n*    SUITABLE FOR INPUT TO SMPASUPD, OR SMPFMUPD PROGRAMS.          ***\n*                                                                   ***\n*  MODIFIED APRIL 26, '88 BY SAM GOLOB                TO ONLY       ***\n*    LOOK FOR FMID KEYWORD IF YOU'RE LEGITIMATELY WITHIN A ++VER    ***\n*    STATEMENT.  LEFT ALL THE OTHER STUFF IN AS SAFETY CHECKS.      ***\n*    PLEASE INFORM ME  ***OLOB@ATTGLOBAL.NET     IF THIS VERSION    ***\n*    OF THE PROGRAM FAILS TO WORK.  (CODE CAN USE CLEANING UP.)     ***\n*                                                                   ***\n*  MODIFIED APRIL 25, '88 BY SAM GOLOB                TO FIX A FEW  ***\n*    BUGS.  THE PROGRAM CAN NOW DETECT IF THE FMID KEYWORD IS IN    ***\n*    A COMMENT AREA.  IT ALSO KNOWS THAT IN THE INSIDE OF JCLIN YOU ***\n*    CAN'T TEST FOR A COMMENT AREA, AND IT WON'T TEST FOR AN FMID   ***\n*    KEYWORD THERE EITHER.  ALSO FIXED BUG THAT 1ST CHARACTER       ***\n*    OF THE FMID WAS CHOPPED OFF IF THERE WERE AN ODD NUMBER OF     ***\n*    SPACES BETWEEN THE OPEN PAREN AFTER THE FMID KEYWORD, AND      ***\n*    THE FIRST NON-BLANK.  ANOTHER BUG WAS THAT THE FMID KEYWORD    ***\n*    IN A ++IF STATEMENT WAS IGNORED ONLY ON THE SAME LINE AS THE   ***\n*    ++IF, BUT NOT ON THE FOLLOWING LINES UNDER THE ++IF'S CONTROL. ***\n*                                                                   ***\n*  MODIFIED JUNE 26, 1986 BY SAM GOLOB                TO LOOK AT    ***\n*    ++APAR, ++USERMOD, AND ++FUNCTION IN ADDITION TO ++PTF.        ***\n*    ( I WANT TO KNOW WHAT FMIDS MY APARS AND USERMODS BELONG TO! ) ***\n*                                                                   ***\n*  THIS CODE WAS OBTAINED FROM FILE 118 OF THE CBT MVS MODS TAPE,   ***\n*    VERSION 260.  THE CODE THERE ONLY EXTRACTS PTFS.  I HAVE       ***\n*    MODIFIED IT IN THIS VERSION TO RECOGNIZE APARS, USERMODS, AND  ***\n*    FUNCTION SYSMODS ALSO.                                         ***\n*                                                                   ***\n*  MY ASSEMBLER PROGRAM, SMPASUPD, ON FILE 118 OF THE CBT TAPE      ***\n*    CONVERTS THE OUTPUT OF THIS PROGRAM TO THE FORMAT:             ***\n*    ./  ADD  NAME=FMIDNAM                                          ***\n*          UZ11111  /*  FMID - FMIDNAM - FROM PUT TAPE - DATE  */   ***\n*                                                                   ***\n*    WHICH IS SUITABLE FOR INPUT TO AN SMP APPLY OR LIST            ***\n*    JOB.  THIS GETS A \"FORFMID\" EFFECT, GOOD ON ANY VERSION        ***\n*    OF SMP, BECAUSE IT'S ONLY DEPENDENT ON THE SMPPTFIN FILE,      ***\n*    AND NOT ON THE VERSION OF SMP WHICH WILL PROCESS THAT FILE.    ***\n*                                                                   ***\n*    THE OLD COBOL PROGRAM ON FILE 118, SMPFMUPD, WORKS THE SAME.   ***\n*    A DDNAME OF //SMPCOUT IN THIS PROGRAM, WILL PRODUCE THE SAME   ***\n*    OUTPUT TOO.                                                    ***\n*                                                                   ***\n******************************************************************  ***\n*********************************************************************\n*\n*    SET LINES PER PAGE VARIABLE, FOR PRINT CONTROL.\n*\n         GBLA  &LINEPPG,&LINELES\n&LINEPPG SETA  60\n&LINELES SETA  &LINEPPG-1\n         GBLC  &LLEV\n&LLEV    SETC  '005'\n*\n*********************************************************************\nPUTXREF  CSECT                                                          00101\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'PUTXREF - FORFMID PROCESSING OF SMPPTFIN SYSMODS - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL &LLEV '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVE     DC    18F'0'                                                   00406\nEYECATCH DS    0H             ENSURE ALIGNMENT\n* ------\n         STM   R14,R12,12(R13)                                          00102\n         LR    R5,R1               SAVE PARM POINTER\n         LA    R1,SAVE              NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         LR    R1,R5               RESTORE PARM POINTER\n         DROP  R15\n* ------\n         USING PUTXREF,R12,R11,R10,R9    SET UP FOUR BASE REGISTERS     00104\n         LR    R12,R15                                                  00103\n         LR    R11,R12                   ENSURE HI ORDER BITS LOADED\n         LA    R11,4095(,R12)\n         LA    R11,1(R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(R10)\n         LA    R9,4095(,R10)\n         LA    R9,1(R9)\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n*                          FILL HEADDATE AREA WITH INFO TO REUSE\n*   --------               HEADDATE FORMAT IS MM/DD/YYYY  HH:MM:SS\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n*   --------               HEADDAY  FORMAT IS MM/DD/YY\n         MVC   HEADDAY(2),DATED\n         MVI   HEADDAY+2,C'/'\n         MVC   HEADDAY+3(2),DATED+2\n         MVI   HEADDAY+5,C'/'\n         MVC   HEADDAY+6(2),DATED+6\n***********************************************************************\nINITEM   DS    0H          OTHER INITIALIZATIONS\n         MVC   BLANK,BLANK-1\n***********************************************************************\n* -- BELOW ----               SCAN THE TIOT FOR PRESENCE OF DDNAME -- *\n*\n*                             SMPCOUT DDNAME IS OPTIONAL\n*                             PDSATOUT DDNAME IS OPTIONAL\nTIOTSCAN DS    0H\n         L     R5,16          R5=CVT                                     00415\n         L     R5,0(,R5)      R5=TCB WORDS                               00416\n         L     R5,4(,R5)      R5=MY TCB                                  00417\n         L     R5,12(,R5)     R5=TIOT                                    00418\n         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          00419\nTIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             00420\n         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        00421\n         CLC   4(8,R5),SMPCOUT+40   SMPCOUT DDNAME THERE?                00422\n         BNE   TIOTPDSA       NO                                         00423\n         OI    FLAGSMPC,X'01'       SHOW PRESENCE OF SMPCOUT DD          00424\n         B     TIOTNEXT       CONTINUE                                   00430\nTIOTPDSA CLC   4(8,R5),PDSATOUT+40\n         BNE   TIOTNEXT\n         OI    FLAGSMPC,X'02'       SHOW PRESENCE OF PDSATOUT DD\n         B     TIOTNEXT\nTIOTNEXT SR    R3,R3                                                     00566\n         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      00567\n         AR    R5,R3          R5=NEXT DD ENTRY                           00568\n         B     TIOTLOOP       GO CHECK IT                                00569\nTIOTSEND DS    0H\n* -- ABOVE ----               SCAN THE TIOT FOR PRESENCE OF DDNAME -- *\n***********************************************************************\n         OPEN  (SYSIN,INPUT)                                            00109\n         OPEN  (SORT,OUTPUT)                                            00110\n         SPACE 2                                                        00111\n*---------------------------------------------------------------------* 00112\n*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          * 00113\n*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         * 00114\n*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        * 00115\n*---------------------------------------------------------------------* 00116\nPX010    EQU   *                                                        00117\n         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE          00118\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?         00119\n         BNE   PX010               NO - BACK FOR ANOTHER                00120\n         NI    COMNTFLG,COMJCLOF   AT THIS POINT, EITHER BEGINNING  SBG\n*                                  OR ENDING OF JCLIN. TURN FLAG OFFSBG\n         NI    COMNTFLG,COMIFOF    NO LONGER IN CONTROL OF LAST     SBG\n*                                  ++IF CARD.                       SBG\n         NI    COMNTFLG,COMVEROF   NO LONGER IN CONTROL OF THE      SBG\n*                                  ++VER CARD.                      SBG\n         LA    R4,2(R4)            YES - POINT PAST THE ++              00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP            00122\nPX015    EQU   *                                                        00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?                   00124\n         BNE   PX020               YES - GO CHECK IT OUT                00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION     00126\n         BCT   R3,PX015            LOOP DE LOOP                         00127\n         BAL   R2,PXGET            WOOPS - OUT OF RECORD                00128\n         B     PX015               BACK AGAIN WITH ANOTHER RECORD       00129\nPX020    EQU   *                                                        00130\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?                00131\n         BE    PX100               YES - GO GETPTF NUMBER               00132\n         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131\n         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132\n         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131\n         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132\n         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131\n         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132\n         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?             00133\n         BE    PX200               YES - THEN GO FIND THE FMID          00134\n         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131\n         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132\n         B     PX010               NO - THEN THIS IS NG - START OVER.   00135\n         EJECT                                                          00136\n*---------------------------------------------------------------------* 00137\n*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        * 00138\n*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             * 00139\n*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   * 00140\n*        THE KEYWORD 'PTF'                                            * 00141\n*---------------------------------------------------------------------* 00142\nPX100    EQU   *                                                        00143\n         LA    R4,3(R4)            BUMP PAST PTF KEYWORD                00144\n         SH    R3,=H'3'            DECREMENT LOOP CONTROL               00145\n         C     R3,=F'0'            OUT OF RECORD?                       00146\n         BH    PX110               NO - ON WITH THE SHOW                00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE     00148\n         B     PX110               KEEP GOING                       SBG\nPX101    EQU   *                                                        00143\n         LA    R4,4(R4)            BUMP PAST APAR KEYWORD           SBG 00144\n         SH    R3,=H'4'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\n         B     PX110               KEEP GOING                       SBG\nPX102    EQU   *                                                        00143\n         LA    R4,7(R4)            BUMP PAST USERMOD KEYWORD        SBG 00144\n         SH    R3,=H'7'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\n         B     PX110               KEEP GOING                       SBG\nPX103    EQU   *                                                        00143\n         LA    R4,8(R4)            BUMP PAST FUNCTION KEYWORD       SBG 00144\n         SH    R3,=H'8'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\nPX110    EQU   *                                                        00149\n         CLI   0(R4),C'('          THIS A LEFT PAREN?                   00150\n         BE    PX150               YES - THEN GO SAVE PTF NUMBER        00151\n         LA    R4,1(R4)            NO - POINT TO NEXT POSITION          00152\n         BCT   R3,PX110            LOOP AGAIN                           00153\n         BAL   R2,PXGET            OUT OF RECORD AGAIN                  00154\n         B     PX110                                                    00155\nPX150    EQU   *                                                        00156\n         LA    R4,1(R4)            POINT PAST LEFT PAREN                00157\n         BCTR  R3,0                DECREMENT FOR THE PAREN              00158\n         CLI   0(R4),C' '          ANYTHING HERE?                       00159\n         BNE   PX160               YES - THEN GO SAVE IT                00160\n         LA    R4,1(R4)            NO - POINT TO NEXT                   00161\n         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)       00162\n         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN             00163\n         B     PX150                                                    00164\nPX160    EQU   *                                                        00165\n         MVC   OUTPTF(8),BLANKS    CLEAR AREA                           00166\n         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER                      00166\n         B     PX010               BACK TO FIND THE FMID                00167\nPX170    DS    0H                  GET HERE ONLY IF ++JCLIN CARD    SBG\n         OI    COMNTFLG,COMJCLON   FLAG THAT WE'RE IN JCLIN         SBG\n         NI    COMNTFLG,COMENTOF   TURN OFF COMMENT FLAG INITIALLY  SBG\n         B     PX010               NOT INTERESTED IN ANY OTHER FACT SBG\n         EJECT                                                          00168\n*---------------------------------------------------------------------* 00169\n*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      * 00170\n*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         * 00171\n*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         * 00172\n*        WHEN THIS IS LOCATED, A RECORD IS WRITTEN TO THE SORT FILE.  * 00173\n*---------------------------------------------------------------------* 00174\nPX200    OI    COMNTFLG,COMVERON   FLAG THAT WE ARE INSIDE OF ++VER SBG 00175\n         LA    R4,3(R4)            POINT PAST THE VER KEYWORD           00176\n         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL       00177\n         C     R3,=F'0'            OUT OF RECORD?                       00178\n         BH    PX210               NO - ON WITH THE SHOW                00179\n         BAL   R2,PXGET            YES - OFF AND GET ANOTHER            00180\n******************************************************************  SBG\n*  AT THIS POINT IF YOU'RE LOOKING AT A FUNCTION SYSMOD, IT MAY     SBG\n*   OR MAY NOT BE A DEPENDENT FMID.  IF IT ISN'T DEPENDENT AND SO   SBG\n*   HAS NO FMID KEYWORD IN IT, WE WANT TO PREVENT THE PROGRAM       SBG\n*   FROM LOOPING INTO THE NEXT SYSMOD ON THE FILE WHICH HAS AN      SBG\n*   FMID KEYWORD.  WE THEREFORE TEST AT THIS POINT FOR ++PTF,ETC.   SBG\n*   AND INITIALIZE PROCESSING IF FOUND.                             SBG\n*                                                                   SBG\n*  WE BREAK INTO THE LOOP AFTER THE PXGET, AND TEST FOR ++ ETC.     SBG\n******************************************************************  SBG\nPX210    EQU   *                                                        00181\n         BAL   R2,COMMTEST         DETERMINE IF WE'RE IN A COMMENT  SBG\n*-----------------------------------------------------------------  SBG\n*  FIRST TEST IS FOR SAFETY ONLY. DON'T LOOK FOR FMID KEYWORD       SBG\n*  INSIDE OF JCLIN OR ++IF OR IN A COMMENT AREA.                    SBG\n*-----------------------------------------------------------------  SBG\n         TM    COMNTFLG,COMENTON+COMIFON+COMJCLON                   SBG\n*               ARE WE IN A COMMENT OR A ++IF OR INSIDE OF JCLIN ?  SBG\n*               FMID KEYWORD IS NO GOOD IN ANY OF THESE 3 CASES.    SBG\n         BNZ   PX210B              WE ARE. DON'T LOOK FOR FMID.     SBG\n*-----------------------------------------------------------------  SBG\n*  THIS IS THE LEGITIMATE TEST FOR FMID KEYWORD.  IT MUST LIE       SBG\n*  WITHIN THE ++VER MODIFICATION CONTROL STATEMENT.                 SBG\n*-----------------------------------------------------------------  SBG\n         BAL   R2,VERTEST          TEST FOR PERIOD ENDING ++VER.    SBG\n         TM    COMNTFLG,COMVERON   ARE WE STILL WITHIN ++VER STMT?  SBG\n         BZ    PX210B              NO, FMID NOT LEGITIMATE KEYWORD  SBG\n         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?                    00182\n         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID   00183\nPX210B   DS    0H                  JUST BUMP IF INVALID FMID KEYWD  SBG\n         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL      00184\n         BCT   R3,PX210            WE'LL GET HIM YET                    00185\nPX211    BAL   R2,PXGET            WOOPS OUT OF DATA                SBG 00186\n*************  BREAK IN *****************************************   SBG\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?     SBG 00119\n         BNE   PX210               NO. STILL IN THIS SYSMOD.        SBG 00120\n******    WE HAVE A ++ CARD.  DO WE REINITIALIZE OR NOT?   ******   SBG\n         NI    COMNTFLG,COMJCLOF   NO LONGER IN PREVIOUS ++JCLIN    SBG\n         NI    COMNTFLG,COMIFOF    NO LONGER IN PREVIOUS ++IF       SBG\n         NI    COMNTFLG,COMVEROF   NO LONGER IN PREVIOUS ++VER      SBG\n         LA    R4,2(R4)            YES - POINT PAST THE ++          SBG 00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP        SBG 00122\nPX212    EQU   *                                                    SBG 00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?               SBG 00124\n         BNE   PX215               YES - GO CHECK IT OUT            SBG 00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION SBG 00126\n         BCT   R3,PX212            LOOP DE LOOP                     SBG 00127\n         BAL   R2,PXGET            END OF CARD IS ALL BLANKS        SBG 00128\n         B     PX212               BACK AGAIN WITH ANOTHER RECORD   SBG 00129\nPX215    EQU   *                                                    SBG 00130\n*   IF WE GET A HIT HERE, WE'RE IN THE NEXT SYSMOD, SO GO BACK.     SBG\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?            SBG 00131\n         BE    PX100               YES - GO GET PTF NUMBER          SBG 00132\n         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131\n         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132\n         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131\n         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132\n         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131\n         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132\n         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131\n         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132\n         CLC   0(2,R4),=C'IF'      IS THIS A ++IF CARD?             SBG 00131\n         BE    PX217     YES - DON'T LOOK FOR FMID - YOU'RE FOOLED  SBG 00132\n         B     PX210               NO HIT, ++ IS IN THIS SYSMOD     SBG 00187\nPX217    OI    COMNTFLG,COMIFON    UNDER ++IF, FMID KEYWORD IS WRONGSBG\n         B     PX211               LOOK FURTHER. THIS LINE HAS      SBG\n*                                  NO VALID FMID KEYWORD.           SBG\n*************  BREAK IN *****************************************   SBG\nPX220    EQU   *                                                        00188\n         LA    R4,4(R4)            POINT PAST THE KEYWORD               00189\n         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL           00190\n         C     R3,=F'0'            OUT OF DATA?                         00191\n         BH    PX230               NO - THEN FIND THE LITTLE DEVIL      00192\n         BAL   R2,PXGET            OUT OF DATA AGAIN                    00193\nPX230    EQU   *                                                        00194\n         BAL   R2,COMMTEST         DETERMINE IF PAREN IS IN COMMENT SBG\n         TM    COMNTFLG,COMENTON   IF IT IS A COMMENT, IGNORE IT    SBG\n         BO    PX230A              COMMENT. PAREN IS NOT REAL.      SBG\n         CLI   0(R4),C'('          LEFT PAREN YET?                      00195\n         BE    PX235               YES - ALMOST THERE               SBG 00196\nPX230A   DS    0H                  IF COMMENT, JUST KEEP BUMPING.   SBG\n         LA    R4,1(R4)            POINT TO NEXT PLACE                  00197\n         BCT   R3,PX230            LOOP DE LOOP                         00198\n         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN       00199\n         B     PX230               KEEP ON PLUGGIN.                     00200\nPX235    LA    R4,1(,R4)           BUMP FOR INITIAL FMID NUMBER TRY SBG\n         BCTR  R3,0                LOOP CONTROL FOR INITIAL TRY     SBG\n         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER FMID(    SBG\n         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG\n         BO    PX235A              COMMENT. NOT LEGIT FMID NUMBER.  SBG\n         CLI   0(R4),C' '          IS FIRST CHARACTER A BLANK ?     SBG\n         BNE   PX250               NOPE. ASSUME WE'VE GOT THE FMID. SBG\nPX235A   B     PX240               GO TO LOOP RTN TO FIND 1ST NONBLKSBG\nPX240    EQU   *                                                        00201\n         LA    R4,1(R4)            POINT PAST THE PAREN                 00202\n         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER 'FMID( ' SBG\n         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG\n         BO    PX240A              COMMENT. NOT LEGIT FMID NUMBER.  SBG\n******   BCTR  R3,0     ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00203\n         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?   00204\n         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!        00205\n******   LA    R4,1(R4) ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00206\nPX240A   BCT   R3,PX240            LOOP ONE MORE TIME                   00207\n         BAL   R2,PXGET            COMMONER AND COMMONER                00208\n         B     PX240                                                    00209\nPX250    EQU   *                                                        00210\n         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER                 00211\n         PUT   SORT,OUTPTF         WRITE THE RECORD                     00212\n         B     PX010               BACK AND START AGAIN                 00213\n               EJECT                                                    00214\n*---------------------------------------------------------------------* 00215\n*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216\n*        IS INPUT.                                                    * 00217\n*---------------------------------------------------------------------* 00218\nEOF      EQU   *                                                        00219\n         CLOSE SYSIN                                                    00220\n         CLOSE SORT                                                     00221\n         SPACE 3                                                        00222\n*---------------------------------------------------------------------* 00223\n*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224\n*---------------------------------------------------------------------* 00225\n         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226\n         LINK  EP=SORT             CALL THE SORT UTILITY                00227\n         LTR   R15,R15             CHECK RETURN CODE                    00228\n         BNZ   SORTERR             NO GOOD - ABEND                      00229\n         EJECT                                                          00230\n*---------------------------------------------------------------------* 00231\n*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232\n*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233\n*        WRITES THE FIRST SET OF HEADERS                              * 00234\n*---------------------------------------------------------------------* 00235\n         OPEN  (SORT,INPUT)                                             00236\n         OPEN  (TITLE,INPUT)                                            00237\n         OPEN  (PRINT,OUTPUT)                                           00238\n         TM    FLAGSMPC,X'01'      IS SMPCOUT DDNAME THERE?\n         BZ    NOSMPC1             NO. SKIP ITS OPEN.\n         OPEN  (SMPCOUT,OUTPUT)                                         00238\nNOSMPC1  DS    0H\n         TM    FLAGSMPC,X'02'\n         BZ    NOPDSA1\n         OPEN  (PDSATOUT,OUTPUT)\nNOPDSA1  DS    0H\n         LA    R5,TITLE            GET DCB ADDRESS                      00239\n         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?                 00240\n         BO    PX490               YES - BRANCH AROUND BAD OPEN         00241\n         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE           00242\n         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X00243\n               DESC=(7)                                                 00244\nPX490    EQU   *                                                        00245\n         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE           00246\n         EJECT                                                          00247\n*---------------------------------------------------------------------* 00248\n*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      * 00249\n*        THE 1ST RECORD.                                              * 00250\n*---------------------------------------------------------------------* 00251\n         GET   SORT,OUTSORT        1ST READ ONLY                        00252\n         MVC   HOLDOUTS(15),OUTSORT   SAVE FMID AND PTF FOR COMPARISON  00253\n         BAL   R8,UPDTEOUT          PUT IEBUPDTE ./ ADD CARD OUT\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00254\n         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA              00255\n         LA    R6,12               SET UP LOOP FOR BCT                  00256\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00257\n         BO    PX510               NO - WOOPS - FORGOT TO SAY           00258\n*                                         MOTHER MAY I                  00259\n         LA    R7,PX499            SAVE RETURN POINT FOR EODAD          00260\nPX495    EQU   *                                                        00261\n         GET   TITLE,INAREA        GET A TITLE RECORD                   00262\n         CLC   INAREA+2(7),HOLDFMID  DO FMID'S AGREE?                   00263\n         BL    PX495               NO - LOWER, GO READ ANOTHER          00264\n         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP    00265\n         MVC   OUTAREA+21(40),INAREA+11 EQUAL - GET TITLE               00266\nPX499    EQU   *                                                        00267\n         PUT   PRINT,LINE          WRITE HEADER                         00268\n         MVI   OUTAREA+0,C' '      CLEAR LINE                           00269\n         MVC   OUTAREA+1(131),OUTAREA+0                                 00270\n         AP    LINECNT,ONE         UPDATE LINE COUNT                    00271\n*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE          00272\n         B     PX510               BRANCH AROUND NORMAL READ            00273\n         EJECT                                                          00274\n*---------------------------------------------------------------------* 00275\n*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          * 00276\n*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          * 00277\n*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         * 00278\n*        ACCORDINGLY.                                                 * 00279\n*---------------------------------------------------------------------* 00280\nPX500    EQU   *                                                        00281\n         GET   SORT,OUTSORT        NORMAL READ                          00282\nPX510    EQU   *                                                        00283\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         PUT SMPCOUT SYSMOD LINE\n         CLC   HOLDFMID,OUTFMID    SAME AS LAST RECORD?                 00284\n         BNE   PX570               NO - GO WRITE PARTIAL LINE           00285\nPX520    EQU   *                                                        00286\n         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER                   00287\n         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION          00288\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         WRITE SMPCOUT SYSMOD RECORD\n         BCT   R6,PX500            LOOP IN HERE TOO.                    00289\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00290\n         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE                   00291\n         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE                   00292\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00293\n         LA    R6,12               RESET LOOP CONTROL                   00294\n         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES   00295\n         CP    LINECNT,=P'&LINEPPG'  ENOUGH LINES FOR BREAK?            00296\n         BL    PX500               NO - BACK TO TOP                     00297\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00298\n         B     PX500               BACK TO TOP                          00299\n         SPACE 2                                                        00300\nPX570    EQU   *                                                        00301\n         PUT   PRINT,LINE          WRITE SHORT LINE                     00302\n         PUT   PRINT,BLANK         WRITE SPACER                         00303\n         AP    LINECNT,THREE       ADD IN LINE COUNT                    00304\n         CP    LINECNT,=P'&LINELES'  ALMOST AT END OF PAGE?             00305\n         BL    PX572               NO - BRANCH AROUND HDR ROUTINE       00306\n         BAL   R2,PXPUT            OFF TO SEE THE WIZARD                00307\nPX572    EQU   *                                                        00308\n         LA    R5,11(R5)           RESET POINTER                        00309\n         LA    R6,12               RESET BCT LOOP                       00310\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00311\n         MVC   OUTAREA+1(131),OUTAREA                                   00312\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00313\n         MVC   HOLDFMID,OUTFMID    SAVE NEW FMID                        00314\n         BAL   R8,UPDTEOUT         PUT SMPCOUT ./ ADD NAME= LINE\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00315\n         BO    PX580               NO - FORGET THIS NONSENSE            00316\n         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD   00317\n         CLC   INAREA+2(7),HOLDFMID  CURRENT ONE RIGHT?                 00318\n         BL    PX575               NO - LOW, GO GET NEXT ONE            00319\n         BH    PX580               NO - HIGH, STILL NOT RIGHT           00320\n         MVC   OUTAREA+21(40),INAREA+11   YES - THIS IS RIGHT ONE       00321\n         B     PX580               GO DIRECTLY TO PUT                   00322\nPX575    EQU   *                                                        00323\n         GET   TITLE,INAREA        READ THE FILE                        00324\n         CLC   INAREA+2(7),HOLDFMID  THIS THE RIGHT GUY?                00325\n         BL    PX575               NO - LOW, GO BACK AND READ AGAIN     00326\n         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS  00327\n         MVC   OUTAREA+21(40),INAREA+11  MOVE IN TITLE                  00328\nPX580    EQU   *                                                        00329\n         PUT   PRINT,LINE          WRITE DATA                           00330\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         PUT SMPCOUT SYSMOD LINE\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00331\n         MVC   OUTAREA+1(131),OUTAREA                                   00332\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00333\n         LA    R6,12               RESET LOOP CONTROL                   00334\n         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER          00335\n         CP    LINECNT,=P'&LINEPPG'   ENOUGH FOR A NEW PAGE?            00336\n         BL    PX520               NO - BACK TO PROCESS NEW FMID        00337\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00338\n         B     PX520               BACK AND CONTINUE ON                 00339\n         EJECT                                                          00340\n*---------------------------------------------------------------------* 00341\n*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  * 00342\n*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         * 00343\n*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                * 00344\n*---------------------------------------------------------------------* 00345\nPX590    EQU   *                                                        00346\n         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE        00347\n         BR    R7                  RETURN VIA PRESET REG 7              00348\n         SPACE 3                                                        00349\n*---------------------------------------------------------------------* 00350\n*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  * 00351\n*---------------------------------------------------------------------* 00352\nPX599    EQU   *                                                        00353\n         OI    FINALFLG,X'01'      FORCE FINAL SMPCOUT SYSMOD LINE\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00354\n         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE\n         BAL   R8,WRITEOUT         PRODUCE FINAL SMPCOUT SYSMOD LINE\n         CLOSE SORT                                                     00355\n         CLOSE PRINT                                                    00356\n         TM    FLAGSMPC,X'01'      IS SMPCOUT DDNAME THERE?\n         BZ    NOSMPC2             NO. SKIP CLOSE. NEVER OPENED.\n         CLOSE SMPCOUT\nNOSMPC2  DS    0H\n         TM    FLAGSMPC,X'02'      IS PDSATOUT DDNAME THERE?\n         BZ    NOPDSA2             NO. SKIP CLOSE. NEVER OPENED.\n         CLOSE PDSATOUT\nNOPDSA2  DS    0H\n         L     R13,SAVE+4                                               00357\n         LM    R14,R12,12(R13)                                          00358\n         SR    R15,R15                                                  00359\n         BR    R14                                                      00360\n         EJECT                                                          00361\n*---------------------------------------------------------------------* 00362\n*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       * 00363\n*        USED DURING PHASE ONE PROCESSING.                            * 00364\n*---------------------------------------------------------------------* 00365\nPXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN        00366\n         GET   SYSIN,INAREA                                             00367\n         LA    R3,72               SET UP REG 3 FOR BCT                 00368\n         LA    R4,INAREA           POINT TO DATA                        00369\n         BR    R2                  RETURN TO CALLER                     00370\n         SPACE 2                                                        00371\n*-------------------------------------------------------------------SBG 00362\n*        ROUTINE TO DETERMINE IF WE ARE INSIDE OF AN SMP COMMENT.   SBG 00363\n*        IF WE ARE, COMNTFLG IS ON AND IF */ OCCURS, TURN IT OFF.   SBG 00364\n*-------------------------------------------------------------------SBG 00365\nCOMMTEST TM    COMNTFLG,COMJCLON   IS THIS INSIDE OF JCLIN?         SBG 00366\n         BO    COMMOFF             YES. /* CAN BE PART OF JCL.      SBG 00367\n         TM    COMNTFLG,COMENTON   ARE WE ALREADY INSIDE A COMMENT? SBG 00366\n         BO    CENDTEST            YES. SEE IF WE'RE ENDING IT NOW. SBG 00367\n         CLC   0(2,R4),COMSTART    COMPARE FOR START OF A COMMENT   SBG 00366\n         BNE   CENDTEST            NO. TEST FOR END OF COMMENT      SBG 00367\n         OI    COMNTFLG,COMENTON   FORCE FLAG ON. WE'RE IN COMMENT  SBG 00368\n         B     COMTEND             WE TURNED IT ON.  ENOUGH --      SBG\nCENDTEST TM    COMNTFLG,COMENTON   ARE WE ALREADY IN A COMMENT?     SBG 00366\n         BZ    COMTEND             NO. THEREFORE CAN'T END COMMENT. SBG\n         CLC   0(2,R4),COMMEND     COMPARE FOR END OF A COMMENT     SBG 00366\n         BNE   COMTEND             NO CHANGE IN STATUS.  EXIT.      SBG\nCOMMOFF  NI    COMNTFLG,COMENTOF   SIGNAL THE END OF THE COMMENT    SBG\nCOMTEND  BR    R2                  RETURN TO CALLER                 SBG 00370\n         SPACE 2                                                    SBG 00371\n*-------------------------------------------------------------------SBG 00362\n*        ROUTINE TO FIND LEGITIMATE PERIOD WHICH ENDS AN            SBG 00363\n*        SMP STATEMENT.  THIS SHOULD BE FIRST PERIOD WHICH          SBG 00364\n*        DOES NOT LIE WITHIN A COMMENT.                             SBG 00364\n*-------------------------------------------------------------------SBG 00365\n*        NOTE THAT COMMTEST MUST BE DONE BEFORE THIS ROUTINE.       SBG\nVERTEST  TM    COMNTFLG,COMENTON   ARE WE INSIDE A COMMENT ?        SBG\n         BO    VEREND              YES-THE PERIOD DONT MEAN NOTHIN  SBG\n         CLI   0(R4),C'.'          THIS PERIOD IS LEGIT ?           SBG\n         BNE   VEREND              NOT A PERIOD. GET OUT.           SBG\n         NI    COMNTFLG,COMVEROF   YES. MARK THE ++VER AS FINISHED  SBG\nVEREND   BR    R2                  BACK TO CALLER                   SBG\n         SPACE 2                                                    SBG 00371\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nPXPUT    EQU   *                                                        00375\n         AP    PAGE,ONE            ADD TO PAGE NUMBER                   00376\n         MVC   NUM,PATRN           INSERT EDIT PATTERN                  00377\n         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE            00378\n         PUT   PRINT,HDR1                                               00379\n         PUT   PRINT,HDR2                                               00380\n         PUT   PRINT,HDR3                                               00381\n         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER              00382\n         BR    R2                  RETURN TO CALLER                     00383\n         SPACE 2                                                        00384\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE SMPCOUT ./ ADD WRITING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nUPDTEOUT DS    0H                     WRITE SMPCOUT ./ ADD NAME= LINE\n         TM    FLAGSMPC,X'01'         IS SMPCOUT DDNAME THERE?\n         BZ    UPDTEOUE               NO. ENTIRE ROUTINE IS A NOP.\n         MVC   UPDTELIN,UPDTELIN-1    CLEAR OUTPUT AREA.\n         MVC   UPDTELT(14),UPDTELIT   MOVE IN LITERAL\n         MVC   UPDTENAM(7),OUTFMID    MOVE IN FMID NAME\n         PUT   SMPCOUT,UPDTELIN\nUPDTEOUE BR    R8                     BACK TO CALLER\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE PDSATOUT PTF RECORD WRITING ROUTINE.             * 00373\n*---------------------------------------------------------------------* 00374\n*\n*   THIS ROUTINE MUST BE EXECUTED RIGHT BEFORE EACH   BAL R8,WRITEOUT\n*        BECAUSE OF THE WRITEOMV, WHICH CAN'T BE DONE TWICE.\n*\nPDSAWOUT DS    0H                     WRITE PDSATOUT SYSMOD LINE\n         TM    FLAGSMPC,X'02'         IS PDSATOUT DDNAME THERE?\n         BZ    PDSAWOUE               NO. ENTIRE ROUTINE IS A NOP.\n         TM    FINALFLG,X'01'         ARE WE AT END OF SORT?\n         BO    PDSAWOGO               YES-UNCONDITIONALLY WRITE OUTPUT\n         CLC   HOLDPTF(7),OUTPTF          IS THIS THE SAME PTF AS LAST\n         BE    PDSAWOUE                   YES, DON'T WRITE ANYTHING\nPDSAWOGO MVC   PDSARECD,PDSARECD-1          CLEAR OUTPUT LINE\n         MVC   PDSALIT1(7),PDSLATTR\n         MVC   PDSAPTF(7),HOLDPTF\n         MVC   PDSALIT2(9),PDSLADDS\n         MVC   PDSALIT3(3),PDSLID\n         MVC   PDSAFMID(7),HOLDFMID\n         MVI   PDSALIT4,C')'\n         PUT   PDSATOUT,PDSARECD\nPDSAWOUE BR    R8                     BACK TO CALLER\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE SMPCOUT PTF RECORD WRITING ROUTINE.              * 00373\n*---------------------------------------------------------------------* 00374\nWRITEOUT DS    0H                     WRITE SMPCOUT SYSMOD LINE\n         TM    FLAGSMPC,X'01'         IS SMPCOUT DDNAME THERE?\n         BZ    WRITEOUE               NO. ENTIRE ROUTINE IS A NOP.\n         TM    FINALFLG,X'01'         ARE WE AT END OF SORT?\n         BO    WRITEOGO               YES-UNCONDITIONALLY WRITE OUTPUT\n         CLC   HOLDPTF(7),OUTPTF          IS THIS THE SAME PTF AS LAST\n         BE    WRITEOUE                   YES, DON'T WRITE ANYTHING\nWRITEOGO MVC   OUTRECD,OUTRECD-1          CLEAR OUTPUT LINE\n         MVC   OUTPTFO(7),HOLDPTF         MOVE IN PTF NAME\n         MVC   OUTSLAST,SLAST             MOVE IN /*\n         MVC   OUTFLITR,FLITR             MOVE IN LITERAL\n         MVC   OUTFMIDO,HOLDFMID          MOVE IN FMID\n         MVC   OUTFLIT2,FLIT2             MOVE IN LITERAL\n         MVC   OUTDATE(8),HEADDAY         MOVE IN DATE\n         MVC   OUTASTSL,ASTSL             MOVE IN */\n         PUT   SMPCOUT,OUTRECD\nWRITEOMV MVC   HOLDPTF(7),OUTPTF          STORE THIS PTF NAME FOR NEXT\nWRITEOUE BR    R8\n*---------------------------------------------------------------------* 00385\n*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386\n*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387\n*---------------------------------------------------------------------* 00388\nSORTERR  EQU   *                                                        00389\n         ABEND 128,DUMP                                                 00390\n         EJECT                                                          00391\n         LTORG                                                          00392\n         EJECT                                                          00393\nSYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X00394\n               LRECL=80                                                 00395\n         EJECT                                                          00396\nSMPCOUT  DCB   DSORG=PS,MACRF=PM,DDNAME=SMPCOUT,RECFM=FB,LRECL=80       00394\n         EJECT                                                          00396\nPDSATOUT DCB   DSORG=PS,MACRF=PM,DDNAME=PDSATOUT,RECFM=FB,LRECL=80      00394\n         EJECT                                                          00396\nSORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X00397\n               BLKSIZE=1500,EODAD=PX599                                 00398\n         EJECT                                                          00399\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=FBA,LRECL=133     00400\n         EJECT                                                          00402\nTITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X00403\n               LRECL=80,EODAD=PX590                                     00404\n         EJECT                                                          00405\nPDSLATTR DC    CL7'ATTRIB '\nPDSLADDS DC    CL9'ADDSTATS '\nPDSLID   DC    CL3'ID('\nPDSLCLOS DC    CL1')'\nUPDTELIT DC    C'./  ADD  NAME='\nSLAST    DC    CL2'/*'\nASTSL    DC    CL2'*/'\nFLITR    DC    CL7'FMID - '\nFLIT2    DC    CL24' - FROM PUT TAPE - DONE '\nHOLDOUTS DS      0CL15            HOLD AREA FOR PREVIOUS SORT OUTPUT\nHOLDPTF  DC      CL8' '           PREVIOUS PTF NAME\nHOLDFMID DC      CL7' '           PREVIOUS FMID NAME                    00407\n         DC      CL8' '\nBLANKS   DC      CL8' '                                             SBG 00418\nPAGE     DC      PL2'0'                                                 00408\nLINECNT  DC      PL2'0'                                                 00409\nONE      DC      PL1'1'                                                 00410\nTHREE    DC      PL1'3'                                                 00411\nFOUR     DC      PL1'4'                                                 00412\nFLAG     DC      XL1'00'                                                00413\nFLAGSMPC DC      XL1'00'          X'01' SHOWS PRESENCE OF SMPCOUT DD    00413\n*                                 X'02' SHOWS PRESENCE OF PDSATOUT DD\nFINALFLG DC      XL1'00'          X'01' FORCES WRITEOUT TO ALWAYS WRITE 00413\nNOTITLE  EQU     X'80'                                                  00414\nCOMNTFLG DC      XL1'00'          TEST IF WE'RE INSIDE A COMMENT    SBG\nCOMENTON EQU     X'01'            YES WE ARE.  IGNORE SMP KEYWORDS. SBG\nCOMENTOF EQU     X'FE'            NO WE AREN'T.  PROCESSING NORMAL. SBG\n*                                 IF WE'RE INSIDE JCLIN, NOT COMMENTSBG\nCOMJCLON EQU     X'02'            YES WE ARE IN JCLIN. NOT A COMMENTSBG\nCOMJCLOF EQU     X'FD'            NO WE AREN'T. CAN BE A COMMENT.   SBG\nCOMIFON  EQU     X'04'         WE ARE IN A ++IF CARD. FMID NO GOOD. SBG\nCOMIFOF  EQU     X'FA'            WE AREN'T IN THE ++IF CARD NOW.   SBG\nCOMVERON EQU     X'80'            WE ARE LEGITIMATELY IN THE ++VER  SBG\nCOMVEROF EQU     X'7F'            WE ARE NOT IN ++VER LEGITIMATELY. SBG\nCOMSTART DC      CL2'/*'          BEGINNING OF A COMMENT            SBG\nCOMMEND  DC      CL2'*/'          END OF A COMMENT                  SBG\nPATRN    DC      XL4'40202120'                                          00415\nINAREA   DS      CL80                                                   00416\n         DC      CL8' '\nOUTSORT  DS      0CL15            INPUT AREA FOR SORT OUTPUT RECORD\nOUTPTF   DC      CL8' '           SORT PTF NAME - 1ST 7 CHARACTERS      00417\nOUTFMID  DC      CL7' '           SORT FMID NAME                        00418\n         DS     0F                                                      00419\nSORTPARM DC      X'80'                                                  00420\n         DC      AL3(PARMLIST)                                          00421\n         DC      H'0'                                                   00422\nPARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423\n         DC      A(SORTCARD)                                            00424\n         DC      A(SORTEND)                                             00425\n         DC      A(RECCARD)                                             00426\n         DC      A(RECEND)                                              00427\n         DC      A(0)                                                   00428\n         DC      A(0)                                                   00429\nPARMEND  EQU   *                                                        00430\nSORTCARD DC    C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'                      00431\nSORTEND  DC    C' '                                                     00432\nRECCARD  DC    C' RECORD LENGTH=15,TYPE=F'                              00433\nRECEND   DC    C' '                                                     00434\nHDR1     DC    CL1'1'                                                   00437\n         DC    45CL1' '                                                 00438\n         DC    C'SYSMOD BY FMID CROSS REFERENCE'                        00439\n         DC    45CL1' '                                                 00440\n         DC    CL4'PAGE'                                                00441\nNUM      DC    CL4'    '                                                00442\n         DC    CL4'    '                                                00442\nHDR2     DC    CL1'0'                                                   00445\n         DC    CL10'FMID'                                               00446\n         DC    12CL10'SYSMOD'                                       SBG 00447\n         DC    CL4'    '                                                00442\nHDR3     DC    CL1' '                                                   00450\n         DC    13CL10'*******'                                          00451\n         DC    CL4'    '                                                00442\n         DC    CL4' '\nLINE     DS    0CL133                                                   00452\nOUTAREA  DC    133CL1' '                                                00454\n         DC    CL4' '\nBLANK    DC    CL133' '                                                 00455\n         DC    CL16' '\n         EJECT                                                          00458\nTIMED    DS    CL7                TIME AND DATE WORD FIELDS\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '            MM/DD/YYYY  HH:MM:SS\nHEADDAY  DC    CL8' '             MM/DD/YY\n         DC    CL8' '\n*  - - - - - - - - - - - - -      OUTPUTS FOR FORFMID SMPCNTL CARDS\n         DC    C' '\nUPDTELIN DS    0CL80              IEBUPDTE ADD CARD FOR SMPCOUT\nUPDTELT  DC    CL14' '            ./  ADD  NAME= LITERAL\nUPDTENAM DC    CL8' '             FMID NAME\nUPDTERST DC    CL58' '\n* ----                            END OF RECORD\n         DC    CL8' '\nOUTRECD  DS    0CL80              SYSMOD RECORD FOR SMPCOUT\nOUTRSTRT DC    CL6' '             BLANKS\nOUTPTFO  DC    CL7' '             PTF NAME\nOUTFILL1 DC    CL2' '             BLANKS\nOUTSLAST DC    CL2' '             /*\nOUTFILL2 DC    CL2' '             BLANKS\nOUTFLITR DC    CL7' '             LITERAL INDICATING FMID\nOUTFMIDO DC    CL7' '             FMID NAME\nOUTFLIT2 DC    CL24' '            LITERAL\nOUTDATE  DC    CL10' '            DATE - 8 OR 10 CHARS DEPENDING...\nOUTFILL3 DC    CL2' '             BLANKS\nOUTASTSL DC    CL2' '             */\nOUTFILL4 DC    CL9' '             BLANKS\n* ----                            END OF RECORD\n* ----                            END OF RECORD\n         DC    CL8' '\nPDSARECD DS    0CL80              SYSMOD RECORD FOR PDSATOUT\nPDSASTRT DC    CL1' '             BLANKS\nPDSALIT1 DC    CL7' '             ATTRIB COMMAND\nPDSAPTF  DC    CL7' '             PTF NAME\nPDSAFIL1 DC    CL1' '             BLANKS\nPDSALIT2 DC    CL9' '             ADDSTATS KEYWORD\nPDSAFIL2 DC    CL1' '             BLANKS\nPDSALIT3 DC    CL3' '             ID(\nPDSAFMID DC    CL7' '             FMID NAME\nPDSALIT4 DC    CL1' '             )\nPDSAFIL3 DC    CL43' '            BLANKS\n         DC    CL8' '\n         END                                                            00478\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PUTXREFV": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00F\\x00\\x92(\\x8f\\x01\\x01\\x17?\\x11\\x07\\x02P\\x02N\\x00\\x00\\xe5\\xc2\\xd6\\xe4\\xe3\\xd7\\xe3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-10-14T00:00:00", "modifydate": "2001-06-22T11:07:46", "lines": 592, "newlines": 590, "modlines": 0, "user": "VBOUTPT"}, "text": "******************************************************************  ***\n**********       PUTXREF - SMP FORFMID TOOL           ************  ***\n******************************************************************  ***\n*                                                                   ***\n*  PUTXREF PROGRAM - PRODUCE A REPORT SORTING ANY SYSMODS ON        ***\n*    A PUT TAPE OR APAR TAPE OR ANY SMPPTFIN FILE BY FMID.          ***\n*                                                                   ***\n******************************************************************  ***\n*                                                                   ***\n*  ORIGINAL AUTHOR:   JERRY LAWSON                                  ***\n*                                                                   ***\n*  MODIFICATION RECORD - S. GOLOB -               - 04/26/88        ***\n*                                                                   ***\n*  MODIFIED APRIL 26, '88 BY SHMUEL GOLOB             TO ONLY       ***\n*    LOOK FOR FMID KEYWORD IF YOU'RE LEGITIMATELY WITHIN A ++VER    ***\n*    STATEMENT.  LEFT ALL THE OTHER STUFF IN AS SAFETY CHECKS.      ***\n*    PLEASE INFORM ME             (212) 206-5847 IF THIS VERSION    ***\n*    OF THE PROGRAM FAILS TO WORK.  (CODE CAN USE CLEANING UP.)     ***\n*                                                                   ***\n*  MODIFIED APRIL 25, '88 BY SHMUEL GOLOB             TO FIX A FEW  ***\n*    BUGS.  THE PROGRAM CAN NOW DETECT IF THE FMID KEYWORD IS IN    ***\n*    A COMMENT AREA.  IT ALSO KNOWS THAT IN THE INSIDE OF JCLIN YOU ***\n*    CAN'T TEST FOR A COMMENT AREA, AND IT WON'T TEST FOR AN FMID   ***\n*    KEYWORD THERE EITHER.  ALSO FIXED BUG THAT 1ST CHARACTER       ***\n*    OF THE FMID WAS CHOPPED OFF IF THERE WERE AN ODD NUMBER OF     ***\n*    SPACES BETWEEN THE OPEN PAREN AFTER THE FMID KEYWORD, AND      ***\n*    THE FIRST NON-BLANK.  ANOTHER BUG WAS THAT THE FMID KEYWORD    ***\n*    IN A ++IF STATEMENT WAS IGNORED ONLY ON THE SAME LINE AS THE   ***\n*    ++IF, BUT NOT ON THE FOLLOWING LINES UNDER THE ++IF'S CONTROL. ***\n*                                                                   ***\n*  MODIFIED JUNE 26, 1986 BY SHMUEL GOLOB             TO LOOK AT    ***\n*    ++APAR, ++USERMOD, AND ++FUNCTION IN ADDITION TO ++PTF.        ***\n*    ( I WANT TO KNOW WHAT FMIDS MY APARS AND USERMODS BELONG TO! ) ***\n*                                                                   ***\n*  THIS CODE WAS OBTAINED FROM FILE 118 OF THE CBT MVS MODS TAPE,   ***\n*    VERSION 260.  THE CODE THERE ONLY EXTRACTS PTFS.  I HAVE       ***\n*    MODIFIED IT IN THIS VERSION TO RECOGNIZE APARS, USERMODS, AND  ***\n*    FUNCTION SYSMODS ALSO.                                         ***\n*                                                                   ***\n*  MY PROGRAM, SMPFMUPV, ON FILE 428 OF THE CBT TAPE                ***\n*    CONVERTS THE OUTPUT OF THIS PROGRAM TO THE FORMAT:             ***\n*    ./  ADD  NAME=FMIDNAM                                          ***\n*          UZ11111  /*  FMID - FMIDNAM - FROM PUT TAPE - DATE  */   ***\n*                                                                   ***\n*    WHICH IS SUITABLE FOR INPUT TO AN SMP APPLY OR LIST            ***\n*    JOB.  THIS GETS A \"FORFMID\" EFFECT, GOOD ON ANY VERSION        ***\n*    OF SMP, BECAUSE IT'S ONLY DEPENDENT ON THE SMPPTFIN FILE,      ***\n*    AND NOT ON THE VERSION OF SMP WHICH WILL PROCESS THAT FILE.    ***\n*                                                                   ***\n*    PLEASE LOOK ON FILE 428 TO GET THE MOST MILEAGE FROM THIS      ***\n*    PROGRAM, AND FOR OTHER USEFUL SMP TOOLS.                       ***\n******************************************************************  ***\nPUTXREF  CSECT                                                          00101\n         SAVE  (14,12),,*                                               00102\n         LR    R12,R15                                                  00103\n         USING PUTXREF,R12         REG 12 IS BASE                       00104\n         LA    R15,SAVE                                                 00105\n         ST    R15,8(R13)                                               00106\n         ST    R13,SAVE+4                                               00107\n         LR    R13,R15                                                  00108\n         OPEN  (SYSIN,INPUT)                                            00109\n         OPEN  (SORT,OUTPUT)                                            00110\n         SPACE 2                                                        00111\n*---------------------------------------------------------------------* 00112\n*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          * 00113\n*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         * 00114\n*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        * 00115\n*---------------------------------------------------------------------* 00116\nPX010    EQU   *                                                        00117\n         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE          00118\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?         00119\n         BNE   PX010               NO - BACK FOR ANOTHER                00120\n         NI    COMNTFLG,COMJCLOF   AT THIS POINT, EITHER BEGINNING  SBG\n*                                  OR ENDING OF JCLIN. TURN FLAG OFFSBG\n         NI    COMNTFLG,COMIFOF    NO LONGER IN CONTROL OF LAST     SBG\n*                                  ++IF CARD.                       SBG\n         NI    COMNTFLG,COMVEROF   NO LONGER IN CONTROL OF THE      SBG\n*                                  ++VER CARD.                      SBG\n         LA    R4,2(R4)            YES - POINT PAST THE ++              00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP            00122\nPX015    EQU   *                                                        00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?                   00124\n         BNE   PX020               YES - GO CHECK IT OUT                00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION     00126\n         BCT   R3,PX015            LOOP DE LOOP                         00127\n         BAL   R2,PXGET            WOOPS - OUT OF RECORD                00128\n         B     PX015               BACK AGAIN WITH ANOTHER RECORD       00129\nPX020    EQU   *                                                        00130\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?                00131\n         BE    PX100               YES - GO GETPTF NUMBER               00132\n         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131\n         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132\n         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131\n         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132\n         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131\n         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132\n         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?             00133\n         BE    PX200               YES - THEN GO FIND THE FMID          00134\n         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131\n         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132\n         B     PX010               NO - THEN THIS IS NG - START OVER.   00135\n         EJECT                                                          00136\n*---------------------------------------------------------------------* 00137\n*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        * 00138\n*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             * 00139\n*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   * 00140\n*        THE KEYWORD 'PTF'                                            * 00141\n*---------------------------------------------------------------------* 00142\nPX100    EQU   *                                                        00143\n         LA    R4,3(R4)            BUMP PAST PTF KEYWORD                00144\n         SH    R3,=H'3'            DECREMENT LOOP CONTROL               00145\n         C     R3,=F'0'            OUT OF RECORD?                       00146\n         BH    PX110               NO - ON WITH THE SHOW                00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE     00148\n         B     PX110               KEEP GOING                       SBG\nPX101    EQU   *                                                        00143\n         LA    R4,4(R4)            BUMP PAST APAR KEYWORD           SBG 00144\n         SH    R3,=H'4'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\n         B     PX110               KEEP GOING                       SBG\nPX102    EQU   *                                                        00143\n         LA    R4,7(R4)            BUMP PAST USERMOD KEYWORD        SBG 00144\n         SH    R3,=H'7'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\n         B     PX110               KEEP GOING                       SBG\nPX103    EQU   *                                                        00143\n         LA    R4,8(R4)            BUMP PAST FUNCTION KEYWORD       SBG 00144\n         SH    R3,=H'8'            DECREMENT LOOP CONTROL           SBG 00145\n         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146\n         BH    PX110               NO - ON WITH THE SHOW            SBG 00147\n         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148\nPX110    EQU   *                                                        00149\n         CLI   0(R4),C'('          THIS A LEFT PAREN?                   00150\n         BE    PX150               YES - THEN GO SAVE PTF NUMBER        00151\n         LA    R4,1(R4)            NO - POINT TO NEXT POSITION          00152\n         BCT   R3,PX110            LOOP AGAIN                           00153\n         BAL   R2,PXGET            OUT OF RECORD AGAIN                  00154\n         B     PX110                                                    00155\nPX150    EQU   *                                                        00156\n         LA    R4,1(R4)            POINT PAST LEFT PAREN                00157\n         BCTR  R3,0                DECREMENT FOR THE PAREN              00158\n         CLI   0(R4),C' '          ANYTHING HERE?                       00159\n         BNE   PX160               YES - THEN GO SAVE IT                00160\n         LA    R4,1(R4)            NO - POINT TO NEXT                   00161\n         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)       00162\n         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN             00163\n         B     PX150                                                    00164\nPX160    EQU   *                                                        00165\n         MVC   OUTPTF(8),BLANKS    CLEAR AREA                           00166\n         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER                      00166\n         B     PX010               BACK TO FIND THE FMID                00167\nPX170    DS    0H                  GET HERE ONLY IF ++JCLIN CARD    SBG\n         OI    COMNTFLG,COMJCLON   FLAG THAT WE'RE IN JCLIN         SBG\n         NI    COMNTFLG,COMENTOF   TURN OFF COMMENT FLAG INITIALLY  SBG\n         B     PX010               NOT INTERESTED IN ANY OTHER FACT SBG\n         EJECT                                                          00168\n*---------------------------------------------------------------------* 00169\n*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      * 00170\n*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         * 00171\n*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         * 00172\n*        WHEN THIS IS LOCATED, A RECORD IS WRITTEN TO THE SORT FILE.  * 00173\n*---------------------------------------------------------------------* 00174\nPX200    OI    COMNTFLG,COMVERON   FLAG THAT WE ARE INSIDE OF ++VER SBG 00175\n         LA    R4,3(R4)            POINT PAST THE VER KEYWORD           00176\n         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL       00177\n         C     R3,=F'0'            OUT OF RECORD?                       00178\n         BH    PX210               NO - ON WITH THE SHOW                00179\n         BAL   R2,PXGET            YES - OFF AND GET ANOTHER            00180\n******************************************************************  SBG\n*  AT THIS POINT IF YOU'RE LOOKING AT A FUNCTION SYSMOD, IT MAY     SBG\n*   OR MAY NOT BE A DEPENDENT FMID.  IF IT ISN'T DEPENDENT AND SO   SBG\n*   HAS NO FMID KEYWORD IN IT, WE WANT TO PREVENT THE PROGRAM       SBG\n*   FROM LOOPING INTO THE NEXT SYSMOD ON THE FILE WHICH HAS AN      SBG\n*   FMID KEYWORD.  WE THEREFORE TEST AT THIS POINT FOR ++PTF,ETC.   SBG\n*   AND INITIALIZE PROCESSING IF FOUND.                             SBG\n*                                                                   SBG\n*  WE BREAK INTO THE LOOP AFTER THE PXGET, AND TEST FOR ++ ETC.     SBG\n******************************************************************  SBG\nPX210    EQU   *                                                        00181\n         BAL   R2,COMMTEST         DETERMINE IF WE'RE IN A COMMENT  SBG\n*-----------------------------------------------------------------  SBG\n*  FIRST TEST IS FOR SAFETY ONLY. DON'T LOOK FOR FMID KEYWORD       SBG\n*  INSIDE OF JCLIN OR ++IF OR IN A COMMENT AREA.                    SBG\n*-----------------------------------------------------------------  SBG\n         TM    COMNTFLG,COMENTON+COMIFON+COMJCLON                   SBG\n*               ARE WE IN A COMMENT OR A ++IF OR INSIDE OF JCLIN ?  SBG\n*               FMID KEYWORD IS NO GOOD IN ANY OF THESE 3 CASES.    SBG\n         BNZ   PX210B              WE ARE. DON'T LOOK FOR FMID.     SBG\n*-----------------------------------------------------------------  SBG\n*  THIS IS THE LEGITIMATE TEST FOR FMID KEYWORD.  IT MUST LIE       SBG\n*  WITHIN THE ++VER MODIFICATION CONTROL STATEMENT.                 SBG\n*-----------------------------------------------------------------  SBG\n         BAL   R2,VERTEST          TEST FOR PERIOD ENDING ++VER.    SBG\n         TM    COMNTFLG,COMVERON   ARE WE STILL WITHIN ++VER STMT?  SBG\n         BZ    PX210B              NO, FMID NOT LEGITIMATE KEYWORD  SBG\n         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?                    00182\n         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID   00183\nPX210B   DS    0H                  JUST BUMP IF INVALID FMID KEYWD  SBG\n         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL      00184\n         BCT   R3,PX210            WE'LL GET HIM YET                    00185\nPX211    BAL   R2,PXGET            WOOPS OUT OF DATA                SBG 00186\n*************  BREAK IN *****************************************   SBG\n         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?     SBG 00119\n         BNE   PX210               NO. STILL IN THIS SYSMOD.        SBG 00120\n******    WE HAVE A ++ CARD.  DO WE REINITIALIZE OR NOT?   ******   SBG\n         NI    COMNTFLG,COMJCLOF   NO LONGER IN PREVIOUS ++JCLIN    SBG\n         NI    COMNTFLG,COMIFOF    NO LONGER IN PREVIOUS ++IF       SBG\n         NI    COMNTFLG,COMVEROF   NO LONGER IN PREVIOUS ++VER      SBG\n         LA    R4,2(R4)            YES - POINT PAST THE ++          SBG 00121\n         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP        SBG 00122\nPX212    EQU   *                                                    SBG 00123\n         CLI   0(R4),C' '          ANYTHING HERE YET?               SBG 00124\n         BNE   PX215               YES - GO CHECK IT OUT            SBG 00125\n         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION SBG 00126\n         BCT   R3,PX212            LOOP DE LOOP                     SBG 00127\n         BAL   R2,PXGET            END OF CARD IS ALL BLANKS        SBG 00128\n         B     PX212               BACK AGAIN WITH ANOTHER RECORD   SBG 00129\nPX215    EQU   *                                                    SBG 00130\n*   IF WE GET A HIT HERE, WE'RE IN THE NEXT SYSMOD, SO GO BACK.     SBG\n         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?            SBG 00131\n         BE    PX100               YES - GO GET PTF NUMBER          SBG 00132\n         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131\n         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132\n         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131\n         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132\n         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131\n         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132\n         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131\n         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132\n         CLC   0(2,R4),=C'IF'      IS THIS A ++IF CARD?             SBG 00131\n         BE    PX217     YES - DON'T LOOK FOR FMID - YOU'RE FOOLED  SBG 00132\n         B     PX210               NO HIT, ++ IS IN THIS SYSMOD     SBG 00187\nPX217    OI    COMNTFLG,COMIFON    UNDER ++IF, FMID KEYWORD IS WRONGSBG\n         B     PX211               LOOK FURTHER. THIS LINE HAS      SBG\n*                                  NO VALID FMID KEYWORD.           SBG\n*************  BREAK IN *****************************************   SBG\nPX220    EQU   *                                                        00188\n         LA    R4,4(R4)            POINT PAST THE KEYWORD               00189\n         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL           00190\n         C     R3,=F'0'            OUT OF DATA?                         00191\n         BH    PX230               NO - THEN FIND THE LITTLE DEVIL      00192\n         BAL   R2,PXGET            OUT OF DATA AGAIN                    00193\nPX230    EQU   *                                                        00194\n         BAL   R2,COMMTEST         DETERMINE IF PAREN IS IN COMMENT SBG\n         TM    COMNTFLG,COMENTON   IF IT IS A COMMENT, IGNORE IT    SBG\n         BO    PX230A              COMMENT. PAREN IS NOT REAL.      SBG\n         CLI   0(R4),C'('          LEFT PAREN YET?                      00195\n         BE    PX235               YES - ALMOST THERE               SBG 00196\nPX230A   DS    0H                  IF COMMENT, JUST KEEP BUMPING.   SBG\n         LA    R4,1(R4)            POINT TO NEXT PLACE                  00197\n         BCT   R3,PX230            LOOP DE LOOP                         00198\n         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN       00199\n         B     PX230               KEEP ON PLUGGIN.                     00200\nPX235    LA    R4,1(,R4)           BUMP FOR INITIAL FMID NUMBER TRY SBG\n         BCTR  R3,0                LOOP CONTROL FOR INITIAL TRY     SBG\n         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER FMID(    SBG\n         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG\n         BO    PX235A              COMMENT. NOT LEGIT FMID NUMBER.  SBG\n         CLI   0(R4),C' '          IS FIRST CHARACTER A BLANK ?     SBG\n         BNE   PX250               NOPE. ASSUME WE'VE GOT THE FMID. SBG\nPX235A   B     PX240               GO TO LOOP RTN TO FIND 1ST NONBLKSBG\nPX240    EQU   *                                                        00201\n         LA    R4,1(R4)            POINT PAST THE PAREN                 00202\n         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER 'FMID( ' SBG\n         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG\n         BO    PX240A              COMMENT. NOT LEGIT FMID NUMBER.  SBG\n******   BCTR  R3,0     ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00203\n         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?   00204\n         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!        00205\n******   LA    R4,1(R4) ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00206\nPX240A   BCT   R3,PX240            LOOP ONE MORE TIME                   00207\n         BAL   R2,PXGET            COMMONER AND COMMONER                00208\n         B     PX240                                                    00209\nPX250    EQU   *                                                        00210\n         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER                 00211\n         PUT   SORT,OUTPTF         WRITE THE RECORD                     00212\n         B     PX010               BACK AND START AGAIN                 00213\n               EJECT                                                    00214\n*---------------------------------------------------------------------* 00215\n*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216\n*        IS INPUT.                                                    * 00217\n*---------------------------------------------------------------------* 00218\nEOF      EQU   *                                                        00219\n         CLOSE SYSIN                                                    00220\n         CLOSE SORT                                                     00221\n         SPACE 3                                                        00222\n*---------------------------------------------------------------------* 00223\n*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224\n*---------------------------------------------------------------------* 00225\n         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226\n         LINK  EP=SORT             CALL THE SORT UTILITY                00227\n         LTR   R15,R15             CHECK RETURN CODE                    00228\n         BNZ   SORTERR             NO GOOD - ABEND                      00229\n         EJECT                                                          00230\n*---------------------------------------------------------------------* 00231\n*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232\n*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233\n*        WRITES THE FIRST SET OF HEADERS                              * 00234\n*---------------------------------------------------------------------* 00235\n         OPEN  (SORT,INPUT)                                             00236\n         OPEN  (TITLE,INPUT)                                            00237\n         OPEN  (PRINT,OUTPUT)                                           00238\n         LA    R5,TITLE            GET DCB ADDRESS                      00239\n         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?                 00240\n         BO    PX490               YES - BRANCH AROUND BAD OPEN         00241\n         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE           00242\n         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X00243\n               DESC=(7)                                                 00244\nPX490    EQU   *                                                        00245\n         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE           00246\n         EJECT                                                          00247\n*---------------------------------------------------------------------* 00248\n*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      * 00249\n*        THE 1ST RECORD.                                              * 00250\n*---------------------------------------------------------------------* 00251\n         GET   SORT,OUTPTF         1ST READ ONLY                        00252\n         MVC   HOLD,OUTFMID        SAVE FMID FOR COMPARISON             00253\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00254\n         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA              00255\n         LA    R6,12               SET UP LOOP FOR BCT                  00256\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00257\n         BO    PX510               NO - WOOPS - FORGOT TO SAY           00258\n*                                         MOTHER MAY I                  00259\n         LA    R7,PX499            SAVE RETURN POINT FOR EODAD          00260\nPX495    EQU   *                                                        00261\n         GET   TITLE,INAREA        GET A TITLE RECORD                   00262\n         CLC   INAREA+2(7),HOLD    DO FMID'S AGREE?                     00263\n         BL    PX495               NO - LOWER, GO READ ANOTHER          00264\n         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP    00265\n         MVC   OUTAREA+21(34),INAREA+11 EQUAL - GET TITLE               00266\nPX499    EQU   *                                                        00267\n         PUT   PRINT,LINE          WRITE HEADER                         00268\n         MVI   OUTAREA+0,C' '      CLEAR LINE                           00269\n         MVC   OUTAREA+1(131),OUTAREA+0                                 00270\n         AP    LINECNT,ONE         UPDATE LINE COUNT                    00271\n*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE          00272\n         B     PX510               BRANCH AROUND NORMAL READ            00273\n         EJECT                                                          00274\n*---------------------------------------------------------------------* 00275\n*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          * 00276\n*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          * 00277\n*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         * 00278\n*        ACCORDINGLY.                                                 * 00279\n*---------------------------------------------------------------------* 00280\nPX500    EQU   *                                                        00281\n         GET   SORT,OUTPTF         NORMAL READ                          00282\nPX510    EQU   *                                                        00283\n         CLC   HOLD,OUTFMID        SAME AS LAST RECORD?                 00284\n         BNE   PX570               NO - GO WRITE PARTIAL LINE           00285\nPX520    EQU   *                                                        00286\n         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER                   00287\n         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION          00288\n         BCT   R6,PX500            LOOP IN HERE TOO.                    00289\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00290\n         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE                   00291\n         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE                   00292\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00293\n         LA    R6,12               RESET LOOP CONTROL                   00294\n         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES   00295\n         CP    LINECNT,=P'60'      ENOUGH LINES FOR BREAK?              00296\n         BL    PX500               NO - BACK TO TOP                     00297\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00298\n         B     PX500               BACK TO TOP                          00299\n         SPACE 2                                                        00300\nPX570    EQU   *                                                        00301\n         PUT   PRINT,LINE          WRITE SHORT LINE                     00302\n         PUT   PRINT,BLANK         WRITE SPACER                         00303\n         AP    LINECNT,THREE       ADD IN LINE COUNT                    00304\n         CP    LINECNT,=P'59'      ALMOST AT END OF PAGE?               00305\n         BL    PX572               NO - BRANCH AROUND HDR ROUTINE       00306\n         BAL   R2,PXPUT            OFF TO SEE THE WIZARD                00307\nPX572    EQU   *                                                        00308\n         LA    R5,11(R5)           RESET POINTER                        00309\n         LA    R6,12               RESET BCT LOOP                       00310\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00311\n         MVC   OUTAREA+1(131),OUTAREA                                   00312\n         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00313\n         MVC   HOLD,OUTFMID        SAVE NEW FMID                        00314\n         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00315\n         BO    PX580               NO - FORGET THIS NONSENSE            00316\n         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD   00317\n         CLC   INAREA+2(7),HOLD    CURRENT ONE RIGHT?                   00318\n         BL    PX575               NO - LOW, GO GET NEXT ONE            00319\n         BH    PX580               NO - HIGH, STILL NOT RIGHT           00320\n         MVC   OUTAREA+21(34),INAREA+11   YES - THIS IS RIGHT ONE       00321\n         B     PX580               GO DIRECTLY TO PUT                   00322\nPX575    EQU   *                                                        00323\n         GET   TITLE,INAREA        READ THE FILE                        00324\n         CLC   INAREA+2(7),HOLD    THIS THE RIGHT GUY?                  00325\n         BL    PX575               NO - LOW, GO BACK AND READ AGAIN     00326\n         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS  00327\n         MVC   OUTAREA+21(34),INAREA+11  MOVE IN TITLE                  00328\nPX580    EQU   *                                                        00329\n         PUT   PRINT,LINE          WITE DATA                            00330\n         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00331\n         MVC   OUTAREA+1(131),OUTAREA                                   00332\n         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00333\n         LA    R6,12               RESET LOOP CONTROL                   00334\n         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER          00335\n         CP    LINECNT,=P'60'      ENOUGH FOR A NEW PAGE?               00336\n         BL    PX520               NO - BACK TO PROCESS NEW FMID        00337\n         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00338\n         B     PX520               BACK AND CONTINUE ON                 00339\n         EJECT                                                          00340\n*---------------------------------------------------------------------* 00341\n*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  * 00342\n*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         * 00343\n*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                * 00344\n*---------------------------------------------------------------------* 00345\nPX590    EQU   *                                                        00346\n         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE        00347\n         BR    R7                  RETURN VIA PRESET REG 7              00348\n         SPACE 3                                                        00349\n*---------------------------------------------------------------------* 00350\n*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  * 00351\n*---------------------------------------------------------------------* 00352\nPX599    EQU   *                                                        00353\n         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00354\n         CLOSE SORT                                                     00355\n         CLOSE PRINT                                                    00356\n         L     R13,SAVE+4                                               00357\n         LM    R14,R12,12(R13)                                          00358\n         SR    R15,R15                                                  00359\n         BR    R14                                                      00360\n         EJECT                                                          00361\n*---------------------------------------------------------------------* 00362\n*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       * 00363\n*        USED DURING PHASE ONE PROCESSING.                            * 00364\n*---------------------------------------------------------------------* 00365\nPXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN        00366\n         GET   SYSIN,INAREA                                             00367\n         LA    R3,72               SET UP REG 3 FOR BCT                 00368\n         LA    R4,INAREA           POINT TO DATA                        00369\n         BR    R2                  RETURN TO CALLER                     00370\n         SPACE 2                                                        00371\n*-------------------------------------------------------------------SBG 00362\n*        ROUTINE TO DETERMINE IF WE ARE INSIDE OF AN SMP COMMENT.   SBG 00363\n*        IF WE ARE, COMNTFLG IS ON AND IF */ OCCURS, TURN IT OFF.   SBG 00364\n*-------------------------------------------------------------------SBG 00365\nCOMMTEST TM    COMNTFLG,COMJCLON   IS THIS INSIDE OF JCLIN?         SBG 00366\n         BO    COMMOFF             YES. /* CAN BE PART OF JCL.      SBG 00367\n         TM    COMNTFLG,COMENTON   ARE WE ALREADY INSIDE A COMMENT? SBG 00366\n         BO    CENDTEST            YES. SEE IF WE'RE ENDING IT NOW. SBG 00367\n         CLC   0(2,R4),COMSTART    COMPARE FOR START OF A COMMENT   SBG 00366\n         BNE   CENDTEST            NO. TEST FOR END OF COMMENT      SBG 00367\n         OI    COMNTFLG,COMENTON   FORCE FLAG ON. WE'RE IN COMMENT  SBG 00368\n         B     COMTEND             WE TURNED IT ON.  ENOUGH --      SBG\nCENDTEST TM    COMNTFLG,COMENTON   ARE WE ALREADY IN A COMMENT?     SBG 00366\n         BZ    COMTEND             NO. THEREFORE CAN'T END COMMENT. SBG\n         CLC   0(2,R4),COMMEND     COMPARE FOR END OF A COMMENT     SBG 00366\n         BNE   COMTEND             NO CHANGE IN STATUS.  EXIT.      SBG\nCOMMOFF  NI    COMNTFLG,COMENTOF   SIGNAL THE END OF THE COMMENT    SBG\nCOMTEND  BR    R2                  RETURN TO CALLER                 SBG 00370\n         SPACE 2                                                    SBG 00371\n*-------------------------------------------------------------------SBG 00362\n*        ROUTINE TO FIND LEGITIMATE PERIOD WHICH ENDS AN            SBG 00363\n*        SMP STATEMENT.  THIS SHOULD BE FIRST PERIOD WHICH          SBG 00364\n*        DOES NOT LIE WITHIN A COMMENT.                             SBG 00364\n*-------------------------------------------------------------------SBG 00365\n*        NOTE THAT COMMTEST MUST BE DONE BEFORE THIS ROUTINE.       SBG\nVERTEST  TM    COMNTFLG,COMENTON   ARE WE INSIDE A COMMENT ?        SBG\n         BO    VEREND              YES-THE PERIOD DONT MEAN NOTHIN  SBG\n         CLI   0(R4),C'.'          THIS PERIOD IS LEGIT ?           SBG\n         BNE   VEREND              NOT A PERIOD. GET OUT.           SBG\n         NI    COMNTFLG,COMVEROF   YES. MARK THE ++VER AS FINISHED  SBG\nVEREND   BR    R2                  BACK TO CALLER                   SBG\n         SPACE 2                                                    SBG 00371\n*---------------------------------------------------------------------* 00372\n*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  * 00373\n*---------------------------------------------------------------------* 00374\nPXPUT    EQU   *                                                        00375\n         AP    PAGE,ONE            ADD TO PAGE NUMBER                   00376\n         MVC   NUM,PATRN           INSERT EDIT PATTERN                  00377\n         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE            00378\n         PUT   PRINT,HDR1                                               00379\n         PUT   PRINT,HDR2                                               00380\n         PUT   PRINT,HDR3                                               00381\n         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER              00382\n         BR    R2                  RETURN TO CALLER                     00383\n         SPACE 2                                                        00384\n*---------------------------------------------------------------------* 00385\n*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386\n*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387\n*---------------------------------------------------------------------* 00388\nSORTERR  EQU   *                                                        00389\n         ABEND 128,DUMP                                                 00390\n         EJECT                                                          00391\n         LTORG                                                          00392\n         EJECT                                                          00393\nSYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X00394\n               LRECL=80                                                 00395\n         EJECT                                                          00396\nSORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X00397\n               BLKSIZE=1500,EODAD=PX599                                 00398\n         EJECT                                                          00399\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=VBA,LRECL=137,   X00400\n               BLKSIZE=141                                              00401\n         EJECT                                                          00402\nTITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X00403\n               LRECL=80,EODAD=PX590                                     00404\n         EJECT                                                          00405\nSAVE     DS    18F                                                      00406\nHOLD     DS      CL7                                                    00407\nBLANKS   DC      CL8' '                                             SBG 00418\nPAGE     DC      PL2'0'                                                 00408\nLINECNT  DC      PL2'0'                                                 00409\nONE      DC      PL1'1'                                                 00410\nTHREE    DC      PL1'3'                                                 00411\nFOUR     DC      PL1'4'                                                 00412\nFLAG     DC      XL1'00'                                                00413\nNOTITLE  EQU     X'80'                                                  00414\nCOMNTFLG DC      XL1'00'          TEST IF WE'RE INSIDE A COMMENT    SBG\nCOMENTON EQU     X'01'            YES WE ARE.  IGNORE SMP KEYWORDS. SBG\nCOMENTOF EQU     X'FE'            NO WE AREN'T.  PROCESSING NORMAL. SBG\n*                                 IF WE'RE INSIDE JCLIN, NOT COMMENTSBG\nCOMJCLON EQU     X'02'            YES WE ARE IN JCLIN. NOT A COMMENTSBG\nCOMJCLOF EQU     X'FD'            NO WE AREN'T. CAN BE A COMMENT.   SBG\nCOMIFON  EQU     X'04'         WE ARE IN A ++IF CARD. FMID NO GOOD. SBG\nCOMIFOF  EQU     X'FA'            WE AREN'T IN THE ++IF CARD NOW.   SBG\nCOMVERON EQU     X'80'            WE ARE LEGITIMATELY IN THE ++VER  SBG\nCOMVEROF EQU     X'7F'            WE ARE NOT IN ++VER LEGITIMATELY. SBG\nCOMSTART DC      CL2'/*'          BEGINNING OF A COMMENT            SBG\nCOMMEND  DC      CL2'*/'          END OF A COMMENT                  SBG\nPATRN    DC      XL4'40202120'                                          00415\nINAREA   DS      CL80                                                   00416\nOUTPTF   DC      CL8' '                                                 00417\nOUTFMID  DC      CL7' '                                                 00418\n         DS     0F                                                      00419\nSORTPARM DC      X'80'                                                  00420\n         DC      AL3(PARMLIST)                                          00421\n         DC      H'0'                                                   00422\nPARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423\n         DC      A(SORTCARD)                                            00424\n         DC      A(SORTEND)                                             00425\n         DC      A(RECCARD)                                             00426\n         DC      A(RECEND)                                              00427\n         DC      A(0)                                                   00428\n         DC      A(0)                                                   00429\nPARMEND  EQU   *                                                        00430\nSORTCARD DC      C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'                    00431\nSORTEND  DC      C' '                                                   00432\nRECCARD  DC      C' RECORD LENGTH=15,TYPE=F'                            00433\nRECEND   DC      C' '                                                   00434\nHDR1     DC      H'133'                                                 00435\n         DC      H'0'                                                   00436\n         DC      CL1'1'                                                 00437\n         DC    45CL1' '                                                 00438\n         DC      C'SYSMOD BY FMID CROSS REFERENCE'                      00439\n         DC    45CL1' '                                                 00440\n         DC      CL4'PAGE'                                              00441\nNUM      DC      CL4'    '                                              00442\nHDR2     DC      H'135'                                                 00443\n         DC      H'0'                                                   00444\n         DC      CL1'0'                                                 00445\n         DC      CL10'FMID'                                             00446\n*        DC    12CL10'PTF'                                              00447\n         DC    12CL10'SYSMOD'                                       SBG 00447\nHDR3     DC      H'135'                                                 00448\n         DC      H'0'                                                   00449\n         DC      CL1' '                                                 00450\n         DC    13CL10'*******'                                          00451\nLINE     DC      H'137'                                                 00452\n         DC      H'0'                                                   00453\nOUTAREA  DC   133CL1' '                                                 00454\nBLANK    DC      H'6'                                                   00455\n         DC      H'0'                                                   00456\n         DC      CL2'0 '                                                00457\n         EJECT                                                          00458\n*********************************************************************** 00459\n*              REGISTER EQUIVALENTS                                   * 00460\n*********************************************************************** 00461\nR0       EQU   0                                                        00462\nR1       EQU   1                                                        00463\nR2       EQU   2                                                        00464\nR3       EQU   3                                                        00465\nR4       EQU   4                                                        00466\nR5       EQU   5                                                        00467\nR6       EQU   6                                                        00468\nR7       EQU   7                                                        00469\nR8       EQU   8                                                        00470\nR9       EQU   9                                                        00471\nR10      EQU   10                                                       00472\nR11      EQU   11                                                       00473\nR12      EQU   12                                                       00474\nR13      EQU   13                                                       00475\nR14      EQU   14                                                       00476\nR15      EQU   15                                                       00477\n         END                                                            00478\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAMPLE": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x00M\\x00M\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 77, "newlines": 77, "modlines": 0, "user": "TST2SSG"}, "text": "./  ADD  NAME=DUMMY\n               /* THESE TOP LINES HAVE BEEN EDITED INTO THE FILE.    */\n               /*   I CONVERTED MY ENTIRE SMPPTS INTO A SEQUENTIAL   */\n               /*   SMPPTFIN-FORMAT FILE AND RAN THE PUTXREF AGAINST */\n               /*   THIS FILE.  I HAVE, IN EFFECT, DONE FORFMID      */\n               /*   PROCESSING FOR MY ENTIRE PTS.    S.GOLOB 7/1/86  */\n./  ADD  NAME=EAS1102\n      UZ42140  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ65533  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ68355  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ69166  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ69418  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ70679  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ70940  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ71064  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ71545  /*  FMID - EAS1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EBB1102\n      JBB1213  /*  FMID - EBB1102 - FROM PUT TAPE - DONE 06/27/86    */\n      JBB1214  /*  FMID - EBB1102 - FROM PUT TAPE - DONE 06/27/86    */\n      JBB1329  /*  FMID - EBB1102 - FROM PUT TAPE - DONE 06/27/86    */\n      NTE2001  /*  FMID - EBB1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EBT1102\n      UZ38763  /*  FMID - EBT1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ39306  /*  FMID - EBT1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ39582  /*  FMID - EBT1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ40444  /*  FMID - EBT1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ40804  /*  FMID - EBT1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ41437  /*  FMID - EBT1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EDE1102\n      UZ65613  /*  FMID - EDE1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ69239  /*  FMID - EDE1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EDS1102\n      JDS1140  /*  FMID - EDS1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EER3100\n      FER3110  /*  FMID - EER3100 - FROM PUT TAPE - DONE 06/27/86    */\n      UR08590  /*  FMID - EER3100 - FROM PUT TAPE - DONE 06/27/86    */\n      UR08591  /*  FMID - EER3100 - FROM PUT TAPE - DONE 06/27/86    */\n      UR14447  /*  FMID - EER3100 - FROM PUT TAPE - DONE 06/27/86    */\n      UR14530  /*  FMID - EER3100 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EGA1102\n      UZ65007  /*  FMID - EGA1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ70075  /*  FMID - EGA1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ70235  /*  FMID - EGA1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ71350  /*  FMID - EGA1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ78320  /*  FMID - EGA1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EGS1102\n      UZ66158  /*  FMID - EGS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ69351  /*  FMID - EGS1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EMI1102\n      UZ42656  /*  FMID - EMI1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ66551  /*  FMID - EMI1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ72107  /*  FMID - EMI1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ80304  /*  FMID - EMI1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ90255  /*  FMID - EMI1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EML1102\n      UZ69654  /*  FMID - EML1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ75069  /*  FMID - EML1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ78127  /*  FMID - EML1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ79497  /*  FMID - EML1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=EMS1102\n      UZ38355  /*  FMID - EMS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ38392  /*  FMID - EMS1102 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ90202  /*  FMID - EMS1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=ESC1326\n      US01110  /*  FMID - ESC1326 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=ESY1100\n      PT11400  /*  FMID - ESY1100 - FROM PUT TAPE - DONE 06/27/86    */\n      UZ80817  /*  FMID - HAF1102 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=HAF1103\n      JAF1110  /*  FMID - HAF1103 - FROM PUT TAPE - DONE 06/27/86    */\n      UP90147  /*  FMID - JSR1310 - FROM PUT TAPE - DONE 06/27/86    */\n      UP90194  /*  FMID - JSR1310 - FROM PUT TAPE - DONE 06/27/86    */\n./  ADD  NAME=NWUSER1\n      NSSNT01  /*  FMID - NWUSER1 - FROM PUT TAPE - DONE 06/27/86    */\n      NSVC244  /*  FMID - NWUSER1 - FROM PUT TAPE - DONE 06/27/86    */\n      OSVC215  /*  FMID - NWUSER1 - FROM PUT TAPE - DONE 06/27/86    */\n      OSVC246  /*  FMID - NWUSER1 - FROM PUT TAPE - DONE 06/27/86    */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPASUPD": {"ttr": 2820, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\"\\x01\\x01\\x16?\\x01\\x01\\x16O\\x120\\x00\\xd4\\x00L\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2001-06-12T00:00:00", "modifydate": "2001-06-13T12:30:22", "lines": 212, "newlines": 76, "modlines": 0, "user": "WSBG"}, "text": "* ----------------------------------------------------------------- *\n*       SMPFMUPD   -   ADAPTED FROM A COBOL PROGRAM BY SAM GOLOB    *\n*                                                                   *\n*                      THIS PROGRAM WILL FUNCTIONALLY REPLACE       *\n*                      THE COBOL PROGRAM SMPFMUPD FROM FILE 118     *\n*                      OF THE CBT MVS UTILITIES TAPE.               *\n* ----------------------------------------------------------------- *\n*                                                                   *\n* INPUT - SYSUT1  - FBA-133 BLOCKED FILE WHICH IS THE REPORT FROM   *\n*                   THE \"PRINTER\" DDNAME OF THE NEW PUTXREF PROGRAM *\n*                                                                   *\n*                                                                   *\n* OUTPUT- SYSUT2  - FB-80 BLOCKED FILE CONTAINING ALL PTF NAMES     *\n*                   GROUPED BY OWNING FMID.                         *\n*                                                                   *\n*       SYSPRINT -  NOT USED IN THIS RELEASE                        *\n*                                                                   *\n* ----------------------------------------------------------------- *\n         GBLC  &LLEV\n&LLEV    SETC  '001'\nSMPFMUPD CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'SMPFMUPD - PUTXREF REPORT TO FORFMID LIST OF PTFS - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL &LLEV '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP THREE BASE REGISTERS\n         USING SMPFMUPD,R12,R11,R10\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n         OPEN  (SYSUT1,INPUT)\n         OPEN  (SYSUT2,OUTPUT)\nINITIT   DS    0H\n         MVC   BLANKS,BLANKS-1\n         MVC   INAREA,INAREA-1\n         MVC   OUTAREA,OUTAREA-1\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n*                          FILL HEADDATE AREA WITH INFO TO REUSE\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADDAY(2),DATED\n         MVI   HEADDAY+2,C'/'\n         MVC   HEADDAY+3(2),DATED+2\n         MVI   HEADDAY+5,C'/'\n         MVC   HEADDAY+6(2),DATED+6\n***********************************************************************\n* -------\nMAINLOOP DS    0H                         MAIN PROCESSING LOOP\nINREPT   DS    0H\n         GET   SYSUT1,INAREA\n         CLC   INFMID(7),=C'FMID   '\n         BE    INREPT\n         CLC   INFMID(7),=C'*******'\n         BE    INREPT\n         CLC   INFMID(7),=C'       '\n         BNE   INSAVEF\n         CLC   IN1STPTF(7),=C'       '\n         BE    INREPT\n         B     INPROCC\nINSAVEF  DS    0H\n         CLC   IN1STPTF(7),=C'       '\n         BNE   INREPT\n         MVC   SND7STOR,SND7STOR-1\n         MVC   PTFNAM,PTFNAM-1\n         MVC   FMIDSTOR(7),INFMID\n         MVC   UPDTELIN,UPDTELIN-1\n         MVC   UPDTELT(14),UPDTELIT\n         MVC   UPDTENAM(7),INFMID\n         PUT   SYSUT2,UPDTELIN\n         B     INREPT\nINPROCC  DS    0H\n         LA    R6,12\n         LA    R7,IN1STPTF\nINPRLOOP DS    0H\n         CLC   0(7,R7),=C'       '\n         BNE   INPRCOPY\n         B     INREPT\nINPRCOPY DS    0H\n         MVC   PTFNAM(7),0(R7)\n         BAL   R9,WRITEOUT\n         LA    R7,10(,R7)\n         BCT   R6,INPRLOOP\n         B     INREPT\n* -------\nEOFIN    DS    0H\n         CLOSE SYSUT1\n         CLOSE SYSUT2\n* -------\nTHEEND   DS    0H\n         CLOSE SYSPRINT\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n         EJECT\n* -------     SUBROUTINES\nWRITEOUT DS    0H\n         CLC   SND7STOR(7),PTFNAM         IS THIS THE SAME PTF AS LAST\n         BE    WRITEOUE                   YES, DON'T WRITE ANYTHING\n         MVC   OUTRECD,OUTRECD-1          CLEAR OUTPUT LINE\n         MVC   OUTPTF(7),PTFNAM           MOVE IN PTF NAME\n         MVC   OUTSLAST,SLAST             MOVE IN /*\n         MVC   OUTFLITR,FLITR             MOVE IN LITERAL\n         MVC   OUTFMID,FMIDSTOR           MOVE IN FMID\n         MVC   OUTFLIT2,FLIT2             MOVE IN LITERAL\n         MVC   OUTDATE(8),HEADDAY         MOVE IN DATE\n         MVC   OUTASTSL,ASTSL             MOVE IN */\n         PUT   SYSUT2,OUTRECD\nWRITEOMV MVC   SND7STOR(7),PTFNAM         STORE THIS PTF NAME FOR NEXT\nWRITEOUE BR    R9\n* -------\n*\n*\n* ----- WORK AREA ------ *\nFLAG1    DC    X'00'\nFLAG2    DC    X'00'\n         DC    CL4' '\nFMIDSTOR DC    CL7' '\n         DC    CL4' '\nSND7STOR DC    CL7' '\n         DC    CL4' '\nPTFNAM   DC    CL7' '\n         DC    CL4' '\n         DC    CL1' '\nINAREA   DS    0CL133\nINCNTL   DC    CL1' '\nINFMID   DC    CL7' '\nINFILL1  DC    CL3' '\nIN1STPTF DC    CL7' '\nINREST   DC    CL115' '\n         DC    CL8' '\n         DC    C' '\nUPDTELIN DS    0CL80              IEBUPDTE ADD CARD\nUPDTELT  DC    CL14' '\nUPDTENAM DC    CL8' '\nUPDTERST DC    CL58' '\n         DC    CL8' '\nOUTRECD  DS    0CL80\nOUTRSTRT DC    CL6' '\nOUTPTF   DC    CL7' '\nOUTFILL1 DC    CL2' '\nOUTSLAST DC    CL2' '\nOUTFILL2 DC    CL2' '\nOUTFLITR DC    CL7' '\nOUTFMID  DC    CL7' '\nOUTFLIT2 DC    CL24' '\nOUTDATE  DC    CL10' '\nOUTFILL3 DC    CL2' '\nOUTASTSL DC    CL2' '\nOUTFILL4 DC    CL9' '\n         DC    CL8' '\n* ----- CONSTANTS ------ *\nUPDTELIT DC    C'./  ADD  NAME='\nSLAST    DC    CL2'/*'\nASTSL    DC    CL2'*/'\nFLITR    DC    CL7'FMID - '\nFLIT2    DC    CL24' - FROM PUT TAPE - DONE '\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\n         DC    C' '\nOUTAREA  DS    CL133\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\n         LTORG\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\nHEADDAY  DC    CL8' '\nSYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,EODAD=EOFIN,DSORG=PS,LRECL=133\nSYSUT2   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         END   SMPFMUPD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMPFMUPD": {"ttr": 2825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x00\\xbf\\x00\\xbf\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 191, "newlines": 191, "modlines": 0, "user": "TST2SSG"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.  SMPFMUPD.\n       REMARKS.\n           WRITTEN ON 11/01/85 FOR SMP4 PUT PROCESSING.  THE PROGRAM\n           PUTXREF, TAKEN FROM THE CBT SHARE TAPE, PRODUCES A REPORT\n           BREAKING DOWN A PTF FILE OF PUTS BY FMID.  THIS PROGRAM\n           READS THAT REPORT, AND PRODUCES A LIST OF PTFS IN IBM\n           EXCLUDE LIST FORMAT, SORTED BY FMID, AND WITH CONSECUTIVE\n           DUPLICATE PTFS REMOVED.  THE CONDITION LEADING TO DUPLICATE\n           NAMES IS IF THERE ARE MULTIPLE VERSIONS OF THE SAME PTF FOR\n           DIFFERENT FMIDS THAT IFREQ TO ITSELF.  FOR EXAMPLE, SEE\n           PTFS HAVING TO DO WITH JBB1327, JBB1328, AND JBB1329\n           TOGETHER (UZ39044 FOR INSTANCE).\n              PLEASE NOTE THAT THIS PROGRAM IS SET UP FOR SYNCSORT.\n              IT TURNS OFF WHEN IT \"SEES\" THE SYNCSORT REPORT.\n              IF YOU HAVE IBM SORT, PLEASE MODIFY THE PROGRAM\n              ACCORDINGLY, REGARDING SETTING THE FLAG TO 'E'.\n       EJECT\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.  IBM-370.\n       OBJECT-COMPUTER.  IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINTI-FILE ASSIGN TO   UT-3350-S-SYSUT1.\n           SELECT PRINTO-FILE ASSIGN TO   UT-3350-S-SYSUT2.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINTI-FILE\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD\n           RECORD CONTAINS 133 CHARACTERS\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTI-RECORD.\n           05  PRINTI-CNTL        PIC X.\n           05  PRINTI-DATA        PIC X(132).\n       FD  PRINTO-FILE\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD\n           RECORD CONTAINS 80 CHARACTERS\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTO-RECORD.\n           05  PRINTO-INIT        PIC X(6).\n           05  PRINTO-DATA        PIC X(7).\n           05  PRINTO-END         PIC X(67).\n       EJECT\n       WORKING-STORAGE SECTION.\n     5 77  PAN-VALET PICTURE X(24) VALUE '005CBT1277   05/08/88'.\n       77  IDENT-FIER     PIC X(17) VALUE 'SMPFMUPD 11/01/85'.\n       01  UPDTE-LINE.\n           05  UPDTE-LIT      PIC X(14) VALUE './  ADD  NAME='.\n           05  UPDTE-NAME     PIC X(8)  VALUE SPACES.\n           05  FILLER         PIC X(58) VALUE SPACES.\n       01  REPT-FLAG          PIC X    VALUE SPACES.\n       01  REPORT-NAME        PIC X(7) VALUE SPACES.\n       01  PTF-NAME           PIC X(7) VALUE SPACES.\n       01  IN-FMID-STOR       PIC X(7) VALUE SPACES.\n       01  FMID-STOR          PIC X(7) VALUE SPACES.\n       01  SYSDATE-STOR       PIC X(8) VALUE SPACES.\n       01  SECND-7-STOR       PIC X(7) VALUE SPACES.\n       01  SCAN-WORK                  VALUE '  '.\n           05  SCAN-1             PIC X.\n           05  SCAN-2             PIC X.\n       01  OUT-WORK  VALUE SPACES.\n           05  OUT-INIT           PIC X(6).\n           05  OUT-DATA           PIC X(7).\n           05  OUT-D-C REDEFINES OUT-DATA PIC X OCCURS 7 TIMES\n                   INDEXED BY INDX.\n           05  OUT-END.\n               10  OUT-FLL1       PIC XX.\n               10  OUT-SL-AST     PIC XX.\n               10  OUT-COMMENTS.\n                   15  OUT-C-FLL1    PIC XX.\n                   15  OUT-C-LIT1    PIC X(7).\n                   15  OUT-C-FMID    PIC X(7).\n                   15  OUT-C-LIT2    PIC X(24).\n                   15  OUT-C-DATE    PIC X(8).\n                   15  OUT-C-FLL2    PIC X(4).\n               10  OUT-AST-SL     PIC XX.\n               10  OUT-FLL2       PIC X(9).\n       01  IN-WORK.\n           05  IN-INTERM.\n               10  IN-CNTL        PIC X.\n               10  IN-DATA.\n                   15  IN-FMID.\n                       20  IN-STT   PIC X.\n                       20  IN-SIX   PIC X(6).\n                   15  IN-FILLER1   PIC X(3).\n                   15  IN-1ST-PTF   PIC X(7).\n                   15  IN-REST      PIC X(115).\n               10  IN-CHAR REDEFINES IN-DATA PIC X OCCURS 132 TIMES\n                       INDEXED BY INX.\n           EJECT\n       PROCEDURE DIVISION.\n       PROCESS00.\n           OPEN INPUT  PRINTI-FILE\n                OUTPUT PRINTO-FILE.\n           MOVE SPACES TO REPT-FLAG.\n           MOVE CURRENT-DATE TO SYSDATE-STOR.\n       PROCESS01.\n           IF REPT-FLAG EQUAL 'E'\n               GO TO PROCESS-END.\n       PROCESS02.\n           READ PRINTI-FILE INTO IN-WORK AT END GO TO PROCESS-END.\n           IF IN-FMID EQUAL 'FMID   '\n               MOVE 'S' TO REPT-FLAG.\n           IF IN-FMID EQUAL '      S' AND\n              IN-1ST-PTF EQUAL 'SORT   '\n               MOVE 'E' TO REPT-FLAG\n               GO TO PROCESS01.\n           IF REPT-FLAG EQUAL ' '\n               GO TO PROCESS01.\n       PROCESS03.\n           IF IN-FMID EQUAL SPACES  AND\n              IN-1ST-PTF EQUAL SPACES\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL 'FMID   '\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL '*******'\n               GO TO PROCESS02.\n       PROCESS-SCAN-START.\n           IF IN-FMID NOT EQUAL SPACES\n               AND IN-1ST-PTF EQUAL SPACES\n                  MOVE SPACES TO SECND-7-STOR\n                  MOVE SPACES TO PTF-NAME\n                  MOVE IN-FMID TO IN-FMID-STOR\n                  MOVE IN-FMID TO UPDTE-NAME\n                  PERFORM WRITE-UPDTE THRU WRITE-UPDTE-END\n                  GO TO PROCESS02.\n           IF IN-FMID EQUAL SPACES\n               AND IN-1ST-PTF NOT EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS-SCAN.\n       PROCESS-SCAN.\n           IF INX GREATER THAN 122\n               SET INX TO 11\n               GO TO PROCESS01.\n           IF IN-CHAR (INX) EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS01.\n           PERFORM MOVE-DATA THRU MOVE-DATA-END.\n           IF PTF-NAME EQUAL SECND-7-STOR\n               GO TO PROCESS-SKIP-WRITE.\n           PERFORM WRITE-OUTPUT THRU WRITE-OUTPUT-END.\n       PROCESS-SKIP-WRITE.\n           SET INX UP BY 4.\n           GO TO PROCESS-SCAN.\n       PROCESS-END.\n           CLOSE PRINTI-FILE PRINTO-FILE.\n           STOP RUN.\n           EJECT\n       MOVE-DATA.\n           MOVE PTF-NAME TO SECND-7-STOR.\n           MOVE SPACES TO OUT-WORK.\n           MOVE SPACES TO PTF-NAME.\n           SET INDX TO 1.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 2.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 3.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 4.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 5.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 6.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 7.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           MOVE OUT-DATA TO PTF-NAME.\n       MOVE-DATA-END.\n       WRITE-OUTPUT.\n           MOVE SPACES TO OUT-COMMENTS.\n           MOVE '/*' TO OUT-SL-AST.\n           MOVE 'FMID - ' TO OUT-C-LIT1.\n           MOVE IN-FMID-STOR TO OUT-C-FMID.\n           MOVE ' - FROM PUT TAPE - DONE ' TO OUT-C-LIT2.\n           MOVE SYSDATE-STOR TO OUT-C-DATE.\n           MOVE '*/' TO OUT-AST-SL.\n           WRITE PRINTO-RECORD FROM OUT-WORK.\n       WRITE-OUTPUT-END.\n       WRITE-UPDTE.\n           WRITE PRINTO-RECORD FROM UPDTE-LINE.\n           MOVE SPACES TO UPDTE-NAME.\n       WRITE-UPDTE-END.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMPFMUPV": {"ttr": 2829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x00\\xc4\\x00\\xc4\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 196, "newlines": 196, "modlines": 0, "user": "TST2SSG"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.  SMPFMUPV.\n       REMARKS.\n\n           MODIFIED 04/11/86 TO ACCEPT RECFM=VBA,LRECL=137 INPUT\n              RECORDS.  THESE ARE THE DIRCT OUTPUT OF THE PUTXREF\n              PROGRAM.  THE RECFM CONVERSION STEP OF VBA TO FBA IS\n              THUS ELIMINATED.\n\n           WRITTEN ON 11/01/85 FOR SMP4 PUT PROCESSING.  THE PROGRAM\n           PUTXREF, TAKEN FROM THE CBT SHARE TAPE, PRODUCES A REPORT\n           BREAKING DOWN A PTF FILE OF PUTS BY FMID.  THIS PROGRAM\n           READS THAT REPORT, AND PRODUCES A LIST OF PTFS IN IBM\n           EXCLUDE LIST FORMAT, SORTED BY FMID, AND WITH CONSECUTIVE\n           DUPLICATE PTFS REMOVED.  THE CONDITION LEADING TO DUPLICATE\n           NAMES IS IF THERE ARE MULTIPLE VERSIONS OF THE SAME PTF FOR\n           DIFFERENT FMIDS THAT IFREQ TO ITSELF.  FOR EXAMPLE, SEE\n           PTFS HAVING TO DO WITH JBB1327, JBB1328, AND JBB1329\n           TOGETHER (UZ39044 FOR INSTANCE).\n              PLEASE NOTE THAT THIS PROGRAM IS SET UP FOR SYNCSORT.\n              IT TURNS OFF WHEN IT \"SEES\" THE SYNCSORT REPORT.\n              IF YOU HAVE IBM SORT, PLEASE MODIFY THE PROGRAM\n              ACCORDINGLY, REGARDING SETTING THE FLAG TO 'E'.\n       EJECT\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.  IBM-370.\n       OBJECT-COMPUTER.  IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINTI-FILE ASSIGN TO   UT-3350-S-SYSUT1.\n           SELECT PRINTO-FILE ASSIGN TO   UT-3350-S-SYSUT2.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINTI-FILE\n           RECORDING MODE IS V\n           LABEL RECORDS ARE STANDARD\n           RECORD CONTAINS 133 CHARACTERS\n           BLOCK CONTAINS 0 CHARACTERS.\n       01  PRINTI-RECORD.\n           05  PRINTI-CNTL        PIC X.\n           05  PRINTI-DATA        PIC X(132).\n       FD  PRINTO-FILE\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD\n           RECORD CONTAINS 80 CHARACTERS\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTO-RECORD.\n           05  PRINTO-INIT        PIC X(6).\n           05  PRINTO-DATA        PIC X(7).\n           05  PRINTO-END         PIC X(67).\n       EJECT\n       WORKING-STORAGE SECTION.\n       77  IDENT-FIER     PIC X(17) VALUE 'SMPFMUPV 04/11/86'.\n       01  UPDTE-LINE.\n           05  UPDTE-LIT      PIC X(14) VALUE './  ADD  NAME='.\n           05  UPDTE-NAME     PIC X(8)  VALUE SPACES.\n           05  FILLER         PIC X(58) VALUE SPACES.\n       01  REPT-FLAG          PIC X    VALUE SPACES.\n       01  REPORT-NAME        PIC X(7) VALUE SPACES.\n       01  PTF-NAME           PIC X(7) VALUE SPACES.\n       01  IN-FMID-STOR       PIC X(7) VALUE SPACES.\n       01  FMID-STOR          PIC X(7) VALUE SPACES.\n       01  SYSDATE-STOR       PIC X(8) VALUE SPACES.\n       01  SECND-7-STOR       PIC X(7) VALUE SPACES.\n       01  SCAN-WORK                  VALUE '  '.\n           05  SCAN-1             PIC X.\n           05  SCAN-2             PIC X.\n       01  OUT-WORK  VALUE SPACES.\n           05  OUT-INIT           PIC X(6).\n           05  OUT-DATA           PIC X(7).\n           05  OUT-D-C REDEFINES OUT-DATA PIC X OCCURS 7 TIMES\n                   INDEXED BY INDX.\n           05  OUT-END.\n               10  OUT-FLL1       PIC XX.\n               10  OUT-SL-AST     PIC XX.\n               10  OUT-COMMENTS.\n                   15  OUT-C-FLL1    PIC XX.\n                   15  OUT-C-LIT1    PIC X(7).\n                   15  OUT-C-FMID    PIC X(7).\n                   15  OUT-C-LIT2    PIC X(24).\n                   15  OUT-C-DATE    PIC X(8).\n                   15  OUT-C-FLL2    PIC X(4).\n               10  OUT-AST-SL     PIC XX.\n               10  OUT-FLL2       PIC X(9).\n       01  IN-WORK.\n           05  IN-INTERM.\n               10  IN-CNTL        PIC X.\n               10  IN-DATA.\n                   15  IN-FMID.\n                       20  IN-STT   PIC X.\n                       20  IN-SIX   PIC X(6).\n                   15  IN-FILLER1   PIC X(3).\n                   15  IN-1ST-PTF   PIC X(7).\n                   15  IN-REST      PIC X(115).\n               10  IN-CHAR REDEFINES IN-DATA PIC X OCCURS 132 TIMES\n                       INDEXED BY INX.\n           EJECT\n       PROCEDURE DIVISION.\n       PROCESS00.\n           OPEN INPUT  PRINTI-FILE\n                OUTPUT PRINTO-FILE.\n           MOVE SPACES TO REPT-FLAG.\n           MOVE CURRENT-DATE TO SYSDATE-STOR.\n       PROCESS01.\n           IF REPT-FLAG EQUAL 'E'\n               GO TO PROCESS-END.\n       PROCESS02.\n           READ PRINTI-FILE INTO IN-WORK AT END GO TO PROCESS-END.\n           IF IN-FMID EQUAL 'FMID   '\n               MOVE 'S' TO REPT-FLAG.\n           IF IN-FMID EQUAL '      S' AND\n              IN-1ST-PTF EQUAL 'SORT   '\n               MOVE 'E' TO REPT-FLAG\n               GO TO PROCESS01.\n           IF REPT-FLAG EQUAL ' '\n               GO TO PROCESS01.\n       PROCESS03.\n           IF IN-FMID EQUAL SPACES  AND\n              IN-1ST-PTF EQUAL SPACES\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL 'FMID   '\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL '*******'\n               GO TO PROCESS02.\n       PROCESS-SCAN-START.\n           IF IN-FMID NOT EQUAL SPACES\n               AND IN-1ST-PTF EQUAL SPACES\n                  MOVE SPACES TO SECND-7-STOR\n                  MOVE SPACES TO PTF-NAME\n                  MOVE IN-FMID TO IN-FMID-STOR\n                  MOVE IN-FMID TO UPDTE-NAME\n                  PERFORM WRITE-UPDTE THRU WRITE-UPDTE-END\n                  GO TO PROCESS02.\n           IF IN-FMID EQUAL SPACES\n               AND IN-1ST-PTF NOT EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS-SCAN.\n       PROCESS-SCAN.\n           IF INX GREATER THAN 122\n               SET INX TO 11\n               GO TO PROCESS01.\n           IF IN-CHAR (INX) EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS01.\n           PERFORM MOVE-DATA THRU MOVE-DATA-END.\n           IF PTF-NAME EQUAL SECND-7-STOR\n               GO TO PROCESS-SKIP-WRITE.\n           PERFORM WRITE-OUTPUT THRU WRITE-OUTPUT-END.\n       PROCESS-SKIP-WRITE.\n           SET INX UP BY 4.\n           GO TO PROCESS-SCAN.\n       PROCESS-END.\n           CLOSE PRINTI-FILE PRINTO-FILE.\n           STOP RUN.\n           EJECT\n       MOVE-DATA.\n           MOVE PTF-NAME TO SECND-7-STOR.\n           MOVE SPACES TO OUT-WORK.\n           MOVE SPACES TO PTF-NAME.\n           SET INDX TO 1.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 2.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 3.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 4.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 5.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 6.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 7.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           MOVE OUT-DATA TO PTF-NAME.\n       MOVE-DATA-END.\n       WRITE-OUTPUT.\n           MOVE SPACES TO OUT-COMMENTS.\n           MOVE '/*' TO OUT-SL-AST.\n           MOVE 'FMID - ' TO OUT-C-LIT1.\n           MOVE IN-FMID-STOR TO OUT-C-FMID.\n           MOVE ' - FROM PUT TAPE - DONE ' TO OUT-C-LIT2.\n           MOVE SYSDATE-STOR TO OUT-C-DATE.\n           MOVE '*/' TO OUT-AST-SL.\n           WRITE PRINTO-RECORD FROM OUT-WORK.\n       WRITE-OUTPUT-END.\n       WRITE-UPDTE.\n           WRITE PRINTO-RECORD FROM UPDTE-LINE.\n           MOVE SPACES TO UPDTE-NAME.\n       WRITE-UPDTE-END.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMPFMU2D": {"ttr": 3076, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x08\\x0f\\x00\\x95\\x08\\x0f\\x18\\x13\\x00\\xca\\x00\\xca\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-03-21T00:00:00", "modifydate": "1995-03-21T18:13:00", "lines": 202, "newlines": 202, "modlines": 0, "user": "SBGCSC"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.  SMPFMUPD.\n      *              PROGRAM CONVERTED BY\n      *              COBOL CONVERSION AID PO 5785-ABJ\n      *              CONVERSION DATE 03/21/95 18:07:18.\n      *REMARKS.\n      *    WRITTEN ON 11/01/85 FOR SMP4 PUT PROCESSING.  THE PROGRAM\n      *    PUTXREF, TAKEN FROM THE CBT SHARE TAPE, PRODUCES A REPORT\n      *    BREAKING DOWN A PTF FILE OF PUTS BY FMID.  THIS PROGRAM\n      *    READS THAT REPORT, AND PRODUCES A LIST OF PTFS IN IBM\n      *    EXCLUDE LIST FORMAT, SORTED BY FMID, AND WITH CONSECUTIVE\n      *    DUPLICATE PTFS REMOVED.  THE CONDITION LEADING TO DUPLICATE\n      *    NAMES IS IF THERE ARE MULTIPLE VERSIONS OF THE SAME PTF FOR\n      *    DIFFERENT FMIDS THAT IFREQ TO ITSELF.  FOR EXAMPLE, SEE\n      *    PTFS HAVING TO DO WITH JBB1327, JBB1328, AND JBB1329\n      *    TOGETHER (UZ39044 FOR INSTANCE).\n      *       PLEASE NOTE THAT THIS PROGRAM IS SET UP FOR SYNCSORT.\n      *       IT TURNS OFF WHEN IT \"SEES\" THE SYNCSORT REPORT.\n      *       IF YOU HAVE IBM SORT, PLEASE MODIFY THE PROGRAM\n      *       ACCORDINGLY, REGARDING SETTING THE FLAG TO 'E'.\n      *EJECT\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.  IBM-370.\n       OBJECT-COMPUTER.  IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINTI-FILE ASSIGN TO   UT-3350-S-SYSUT1.\n           SELECT PRINTO-FILE ASSIGN TO   UT-3350-S-SYSUT2.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINTI-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTI-RECORD.\n           05  PRINTI-CNTL        PIC X.\n           05  PRINTI-DATA        PIC X(132).\n       FD  PRINTO-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTO-RECORD.\n           05  PRINTO-INIT        PIC X(6).\n           05  PRINTO-DATA        PIC X(7).\n           05  PRINTO-END         PIC X(67).\n       EJECT\n       WORKING-STORAGE SECTION.\n       01  LCP-CURRENT-DATE-68.\n           05  LCP-MONTH                 PIC X(2).\n           05  FILLER                    PIC X VALUE '/'.\n           05  LCP-DAY1                  PIC X(2).\n           05  FILLER                    PIC X VALUE '/'.\n           05  LCP-YEAR                  PIC X(2).\n       01  LCP-DATE-NEW-74.\n           05  LCP-YEAR                  PIC X(2).\n           05  LCP-MONTH                 PIC X(2).\n           05  LCP-DAY1                  PIC X(2).\n     5 77  PAN-VALET PICTURE X(24) VALUE '005CBT1277   05/08/88'.\n       77  IDENT-FIER     PIC X(17) VALUE 'SMPFMUPD 11/01/85'.\n       01  UPDTE-LINE.\n           05  UPDTE-LIT      PIC X(14) VALUE './  ADD  NAME='.\n           05  UPDTE-NAME     PIC X(8)  VALUE SPACES.\n           05  FILLER         PIC X(58) VALUE SPACES.\n       01  REPT-FLAG          PIC X    VALUE SPACES.\n       01  REPORT-NAME        PIC X(7) VALUE SPACES.\n       01  PTF-NAME           PIC X(7) VALUE SPACES.\n       01  IN-FMID-STOR       PIC X(7) VALUE SPACES.\n       01  FMID-STOR          PIC X(7) VALUE SPACES.\n       01  SYSDATE-STOR       PIC X(8) VALUE SPACES.\n       01  SECND-7-STOR       PIC X(7) VALUE SPACES.\n       01  SCAN-WORK                  VALUE '  '.\n           05  SCAN-1             PIC X.\n           05  SCAN-2             PIC X.\n       01  OUT-WORK  VALUE SPACES.\n           05  OUT-INIT           PIC X(6).\n           05  OUT-DATA           PIC X(7).\n           05  OUT-D-C REDEFINES OUT-DATA PIC X OCCURS 7 TIMES\n                   INDEXED BY INDX.\n           05  OUT-END.\n               10  OUT-FLL1       PIC XX.\n               10  OUT-SL-AST     PIC XX.\n               10  OUT-COMMENTS.\n                   15  OUT-C-FLL1    PIC XX.\n                   15  OUT-C-LIT1    PIC X(7).\n                   15  OUT-C-FMID    PIC X(7).\n                   15  OUT-C-LIT2    PIC X(24).\n                   15  OUT-C-DATE    PIC X(8).\n                   15  OUT-C-FLL2    PIC X(4).\n               10  OUT-AST-SL     PIC XX.\n               10  OUT-FLL2       PIC X(9).\n       01  IN-WORK.\n           05  IN-INTERM.\n               10  IN-CNTL        PIC X.\n               10  IN-DATA.\n                   15  IN-FMID.\n                       20  IN-STT   PIC X.\n                       20  IN-SIX   PIC X(6).\n                   15  IN-FILLER1   PIC X(3).\n                   15  IN-1ST-PTF   PIC X(7).\n                   15  IN-REST      PIC X(115).\n               10  IN-CHAR REDEFINES IN-DATA PIC X OCCURS 132 TIMES\n                       INDEXED BY INX.\n           EJECT\n       PROCEDURE DIVISION.\n       PROCESS00.\n           OPEN INPUT  PRINTI-FILE\n                OUTPUT PRINTO-FILE.\n           MOVE SPACES TO REPT-FLAG.\n           ACCEPT  LCP-DATE-NEW-74 FROM DATE\n           MOVE CORRESPONDING LCP-DATE-NEW-74 TO LCP-CURRENT-DATE-68\n           MOVE LCP-CURRENT-DATE-68 TO SYSDATE-STOR.\n       PROCESS01.\n           IF REPT-FLAG EQUAL 'E'\n               GO TO PROCESS-END.\n       PROCESS02.\n           READ PRINTI-FILE INTO IN-WORK AT END GO TO PROCESS-END.\n           IF IN-FMID EQUAL 'FMID   '\n               MOVE 'S' TO REPT-FLAG.\n           IF IN-FMID EQUAL '      S' AND\n              IN-1ST-PTF EQUAL 'SORT   '\n               MOVE 'E' TO REPT-FLAG\n               GO TO PROCESS01.\n           IF REPT-FLAG EQUAL ' '\n               GO TO PROCESS01.\n       PROCESS03.\n           IF IN-FMID EQUAL SPACES  AND\n              IN-1ST-PTF EQUAL SPACES\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL 'FMID   '\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL '*******'\n               GO TO PROCESS02.\n       PROCESS-SCAN-START.\n           IF IN-FMID NOT EQUAL SPACES\n               AND IN-1ST-PTF EQUAL SPACES\n                  MOVE SPACES TO SECND-7-STOR\n                  MOVE SPACES TO PTF-NAME\n                  MOVE IN-FMID TO IN-FMID-STOR\n                  MOVE IN-FMID TO UPDTE-NAME\n                  PERFORM WRITE-UPDTE THRU WRITE-UPDTE-END\n                  GO TO PROCESS02.\n           IF IN-FMID EQUAL SPACES\n               AND IN-1ST-PTF NOT EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS-SCAN.\n       PROCESS-SCAN.\n           IF INX GREATER THAN 122\n               SET INX TO 11\n               GO TO PROCESS01.\n           IF IN-CHAR (INX) EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS01.\n           PERFORM MOVE-DATA THRU MOVE-DATA-END.\n           IF PTF-NAME EQUAL SECND-7-STOR\n               GO TO PROCESS-SKIP-WRITE.\n           PERFORM WRITE-OUTPUT THRU WRITE-OUTPUT-END.\n       PROCESS-SKIP-WRITE.\n           SET INX UP BY 4.\n           GO TO PROCESS-SCAN.\n       PROCESS-END.\n           CLOSE PRINTI-FILE PRINTO-FILE.\n           STOP RUN.\n           EJECT\n       MOVE-DATA.\n           MOVE PTF-NAME TO SECND-7-STOR.\n           MOVE SPACES TO OUT-WORK.\n           MOVE SPACES TO PTF-NAME.\n           SET INDX TO 1.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 2.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 3.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 4.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 5.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 6.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 7.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           MOVE OUT-DATA TO PTF-NAME.\n       MOVE-DATA-END.\n       WRITE-OUTPUT.\n           MOVE SPACES TO OUT-COMMENTS.\n           MOVE '/*' TO OUT-SL-AST.\n           MOVE 'FMID - ' TO OUT-C-LIT1.\n           MOVE IN-FMID-STOR TO OUT-C-FMID.\n           MOVE ' - FROM PUT TAPE - DONE ' TO OUT-C-LIT2.\n           MOVE SYSDATE-STOR TO OUT-C-DATE.\n           MOVE '*/' TO OUT-AST-SL.\n           WRITE PRINTO-RECORD FROM OUT-WORK.\n       WRITE-OUTPUT-END.\n       WRITE-UPDTE.\n           WRITE PRINTO-RECORD FROM UPDTE-LINE.\n           MOVE SPACES TO UPDTE-NAME.\n       WRITE-UPDTE-END.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMPFMU2V": {"ttr": 3080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x08\\x0f\\x00\\x95\\x08\\x0f\\x18\\x13\\x00\\xcf\\x00\\xcf\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-03-21T00:00:00", "modifydate": "1995-03-21T18:13:00", "lines": 207, "newlines": 207, "modlines": 0, "user": "SBGCSC"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.  SMPFMUPV.\n      *              PROGRAM CONVERTED BY\n      *              COBOL CONVERSION AID PO 5785-ABJ\n      *              CONVERSION DATE 03/21/95 18:07:47.\n      *REMARKS.\n\n      *    MODIFIED 04/11/86 TO ACCEPT RECFM=VBA,LRECL=137 INPUT\n      *       RECORDS.  THESE ARE THE DIRCT OUTPUT OF THE PUTXREF\n      *       PROGRAM.  THE RECFM CONVERSION STEP OF VBA TO FBA IS\n      *       THUS ELIMINATED.\n\n      *    WRITTEN ON 11/01/85 FOR SMP4 PUT PROCESSING.  THE PROGRAM\n      *    PUTXREF, TAKEN FROM THE CBT SHARE TAPE, PRODUCES A REPORT\n      *    BREAKING DOWN A PTF FILE OF PUTS BY FMID.  THIS PROGRAM\n      *    READS THAT REPORT, AND PRODUCES A LIST OF PTFS IN IBM\n      *    EXCLUDE LIST FORMAT, SORTED BY FMID, AND WITH CONSECUTIVE\n      *    DUPLICATE PTFS REMOVED.  THE CONDITION LEADING TO DUPLICATE\n      *    NAMES IS IF THERE ARE MULTIPLE VERSIONS OF THE SAME PTF FOR\n      *    DIFFERENT FMIDS THAT IFREQ TO ITSELF.  FOR EXAMPLE, SEE\n      *    PTFS HAVING TO DO WITH JBB1327, JBB1328, AND JBB1329\n      *    TOGETHER (UZ39044 FOR INSTANCE).\n      *       PLEASE NOTE THAT THIS PROGRAM IS SET UP FOR SYNCSORT.\n      *       IT TURNS OFF WHEN IT \"SEES\" THE SYNCSORT REPORT.\n      *       IF YOU HAVE IBM SORT, PLEASE MODIFY THE PROGRAM\n      *       ACCORDINGLY, REGARDING SETTING THE FLAG TO 'E'.\n      *EJECT\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.  IBM-370.\n       OBJECT-COMPUTER.  IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINTI-FILE ASSIGN TO   UT-3350-S-SYSUT1.\n           SELECT PRINTO-FILE ASSIGN TO   UT-3350-S-SYSUT2.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINTI-FILE\n           RECORDING MODE IS V\n           BLOCK CONTAINS 0 CHARACTERS.\n       01  PRINTI-RECORD.\n           05  PRINTI-CNTL        PIC X.\n           05  PRINTI-DATA        PIC X(132).\n       FD  PRINTO-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTO-RECORD.\n           05  PRINTO-INIT        PIC X(6).\n           05  PRINTO-DATA        PIC X(7).\n           05  PRINTO-END         PIC X(67).\n       EJECT\n       WORKING-STORAGE SECTION.\n       01  LCP-CURRENT-DATE-68.\n           05  LCP-MONTH                 PIC X(2).\n           05  FILLER                    PIC X VALUE '/'.\n           05  LCP-DAY1                  PIC X(2).\n           05  FILLER                    PIC X VALUE '/'.\n           05  LCP-YEAR                  PIC X(2).\n       01  LCP-DATE-NEW-74.\n           05  LCP-YEAR                  PIC X(2).\n           05  LCP-MONTH                 PIC X(2).\n           05  LCP-DAY1                  PIC X(2).\n       77  IDENT-FIER     PIC X(17) VALUE 'SMPFMUPV 04/11/86'.\n       01  UPDTE-LINE.\n           05  UPDTE-LIT      PIC X(14) VALUE './  ADD  NAME='.\n           05  UPDTE-NAME     PIC X(8)  VALUE SPACES.\n           05  FILLER         PIC X(58) VALUE SPACES.\n       01  REPT-FLAG          PIC X    VALUE SPACES.\n       01  REPORT-NAME        PIC X(7) VALUE SPACES.\n       01  PTF-NAME           PIC X(7) VALUE SPACES.\n       01  IN-FMID-STOR       PIC X(7) VALUE SPACES.\n       01  FMID-STOR          PIC X(7) VALUE SPACES.\n       01  SYSDATE-STOR       PIC X(8) VALUE SPACES.\n       01  SECND-7-STOR       PIC X(7) VALUE SPACES.\n       01  SCAN-WORK                  VALUE '  '.\n           05  SCAN-1             PIC X.\n           05  SCAN-2             PIC X.\n       01  OUT-WORK  VALUE SPACES.\n           05  OUT-INIT           PIC X(6).\n           05  OUT-DATA           PIC X(7).\n           05  OUT-D-C REDEFINES OUT-DATA PIC X OCCURS 7 TIMES\n                   INDEXED BY INDX.\n           05  OUT-END.\n               10  OUT-FLL1       PIC XX.\n               10  OUT-SL-AST     PIC XX.\n               10  OUT-COMMENTS.\n                   15  OUT-C-FLL1    PIC XX.\n                   15  OUT-C-LIT1    PIC X(7).\n                   15  OUT-C-FMID    PIC X(7).\n                   15  OUT-C-LIT2    PIC X(24).\n                   15  OUT-C-DATE    PIC X(8).\n                   15  OUT-C-FLL2    PIC X(4).\n               10  OUT-AST-SL     PIC XX.\n               10  OUT-FLL2       PIC X(9).\n       01  IN-WORK.\n           05  IN-INTERM.\n               10  IN-CNTL        PIC X.\n               10  IN-DATA.\n                   15  IN-FMID.\n                       20  IN-STT   PIC X.\n                       20  IN-SIX   PIC X(6).\n                   15  IN-FILLER1   PIC X(3).\n                   15  IN-1ST-PTF   PIC X(7).\n                   15  IN-REST      PIC X(115).\n               10  IN-CHAR REDEFINES IN-DATA PIC X OCCURS 132 TIMES\n                       INDEXED BY INX.\n           EJECT\n       PROCEDURE DIVISION.\n       PROCESS00.\n           OPEN INPUT  PRINTI-FILE\n                OUTPUT PRINTO-FILE.\n           MOVE SPACES TO REPT-FLAG.\n           ACCEPT  LCP-DATE-NEW-74 FROM DATE\n           MOVE CORRESPONDING LCP-DATE-NEW-74 TO LCP-CURRENT-DATE-68\n           MOVE LCP-CURRENT-DATE-68 TO SYSDATE-STOR.\n       PROCESS01.\n           IF REPT-FLAG EQUAL 'E'\n               GO TO PROCESS-END.\n       PROCESS02.\n           READ PRINTI-FILE INTO IN-WORK AT END GO TO PROCESS-END.\n           IF IN-FMID EQUAL 'FMID   '\n               MOVE 'S' TO REPT-FLAG.\n           IF IN-FMID EQUAL '      S' AND\n              IN-1ST-PTF EQUAL 'SORT   '\n               MOVE 'E' TO REPT-FLAG\n               GO TO PROCESS01.\n           IF REPT-FLAG EQUAL ' '\n               GO TO PROCESS01.\n       PROCESS03.\n           IF IN-FMID EQUAL SPACES  AND\n              IN-1ST-PTF EQUAL SPACES\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL 'FMID   '\n               GO TO PROCESS01.\n           IF IN-FMID EQUAL '*******'\n               GO TO PROCESS02.\n       PROCESS-SCAN-START.\n           IF IN-FMID NOT EQUAL SPACES\n               AND IN-1ST-PTF EQUAL SPACES\n                  MOVE SPACES TO SECND-7-STOR\n                  MOVE SPACES TO PTF-NAME\n                  MOVE IN-FMID TO IN-FMID-STOR\n                  MOVE IN-FMID TO UPDTE-NAME\n                  PERFORM WRITE-UPDTE THRU WRITE-UPDTE-END\n                  GO TO PROCESS02.\n           IF IN-FMID EQUAL SPACES\n               AND IN-1ST-PTF NOT EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS-SCAN.\n       PROCESS-SCAN.\n           IF INX GREATER THAN 122\n               SET INX TO 11\n               GO TO PROCESS01.\n           IF IN-CHAR (INX) EQUAL SPACES\n               SET INX TO 11\n               GO TO PROCESS01.\n           PERFORM MOVE-DATA THRU MOVE-DATA-END.\n           IF PTF-NAME EQUAL SECND-7-STOR\n               GO TO PROCESS-SKIP-WRITE.\n           PERFORM WRITE-OUTPUT THRU WRITE-OUTPUT-END.\n       PROCESS-SKIP-WRITE.\n           SET INX UP BY 4.\n           GO TO PROCESS-SCAN.\n       PROCESS-END.\n           CLOSE PRINTI-FILE PRINTO-FILE.\n           STOP RUN.\n           EJECT\n       MOVE-DATA.\n           MOVE PTF-NAME TO SECND-7-STOR.\n           MOVE SPACES TO OUT-WORK.\n           MOVE SPACES TO PTF-NAME.\n           SET INDX TO 1.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 2.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 3.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 4.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 5.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 6.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           SET INX UP BY 1.\n           SET INDX TO 7.\n           MOVE IN-CHAR (INX) TO OUT-D-C (INDX).\n           MOVE OUT-DATA TO PTF-NAME.\n       MOVE-DATA-END.\n       WRITE-OUTPUT.\n           MOVE SPACES TO OUT-COMMENTS.\n           MOVE '/*' TO OUT-SL-AST.\n           MOVE 'FMID - ' TO OUT-C-LIT1.\n           MOVE IN-FMID-STOR TO OUT-C-FMID.\n           MOVE ' - FROM PUT TAPE - DONE ' TO OUT-C-LIT2.\n           MOVE SYSDATE-STOR TO OUT-C-DATE.\n           MOVE '*/' TO OUT-AST-SL.\n           WRITE PRINTO-RECORD FROM OUT-WORK.\n       WRITE-OUTPUT-END.\n       WRITE-UPDTE.\n           WRITE PRINTO-RECORD FROM UPDTE-LINE.\n           MOVE SPACES TO UPDTE-NAME.\n       WRITE-UPDTE-END.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMPUPD": {"ttr": 3084, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01=\\x009\\x01\\x01\\x05O\\x01\\x01\\x17/\\x12 \\x02\\x80\\x00L\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.61", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2001-06-21T12:20:39", "lines": 640, "newlines": 76, "modlines": 0, "user": "WSBG"}, "text": "* ----------------------------------------------------------------- *\n*       SMPUPD     -   ADAPTED FROM A COBOL PROGRAM BY SAM GOLOB    *\n* ----------------------------------------------------------------- *\n*                                                                   *\n*   SMPUPD - PROGRAM TO READ A SMPPTFIN FILE AND ADD ./ ADD NAME=   *\n*            CARDS IN FRONT OF EVERY SYSMOD (PTF, APAR, USERMOD,    *\n*            OR FUNCTION).  THIS ALLOWS YOU TO BREAK ANY SMPPTFIN   *\n*            FILE (PUT TAPE, ETC.) INTO A PDS.  THIS PROGRAM WILL   *\n*            ALSO CHANGE ./ CHANGE CARDS AND OTHER ./ CARDS, WHICH  *\n*            ARE INTERNAL TO EACH SYSMOD, INTO >< CARDS.  THIS      *\n*            ALLOWS THE PDSLOAD PROGRAM (FROM CBT TAPE FILE 093)    *\n*            TO PROPERLY RECONSTITUTE ALL SYSMODS AS MEMBERS OF     *\n*            THE PDS.                                               *\n*                                                                   *\n*                                                                   *\n*   LEVEL 005 - PARM=READ WILL GIVE READ ONLY OPERATION AND WILL    *\n*   (06/21/01)  ONLY REQUIRE SYSUT1 AND SYSPRINT DD NAMES.  THE     *\n*               PURPOSE OF THE PARM=READ RUN, IS TO PRINT STATS     *\n*               ABOUT THE SMPPTFIN FILE.                            *\n*                                                                   *\n*   LEVEL 004 - ENHANCED SYSPRINT AND SUMMARY INFORMATION ABOUT     *\n*   (06/17/01)  ALL SYSMODS THAT WERE READ INTO SYSUT1.             *\n*                                                                   *\n* ----------------------------------------------------------------- *\n*    SET LINES PER PAGE VARIABLE, FOR PRINT CONTROL.\n*    AND SET GLOBAL VARIABLES.\n*\n         GBLA  &LINEPPG,&LINEINT\n&LINEPPG SETA  60\n&LINEINT SETA  &LINEPPG+1\n         GBLC  &LLEV\n&LLEV    SETC  '005'\n* ----------------------------------------------------------------- *\nSMPUPD   CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'SMPUPD - PUTXREF REPORT TO FORFMID LIST OF PTFS - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL &LLEV '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP THREE BASE REGISTERS\n         USING SMPUPD,R12,R11,R10\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R1,R5          RESTORE PARM POINTER\n         L     R1,0(R1)       GET PARM FROM JCL\n         MVC   READST(4),2(R1)\n         OC    READST(4),=X'40404040'\n         CLC   =C'READ',READST  IS THIS RUN READ ONLY?\n         BNE   NOTREADO\n         OI    FLAG2,X'80'     FLAG THIS RUN AS READ ONLY\n         MVC   HEADER+69(11),READONL    ADD READ ONLY TO HEADER\nNOTREADO DS    0H\n         PRINT GEN\n         OPEN  (SYSUT1,INPUT)\n         OPEN  (SYSPRINT,OUTPUT)\n         TM    FLAG2,X'80'           IS ROUTINE READ ONLY?\n         BO    INITIT\n         OPEN  (SYSUT2,OUTPUT)\nINITIT   DS    0H                   INITIALIZE AREAS AND COUNTERS\n         MVC   BLANKS,BLANKS-1\n         MVC   INAREA,INAREA-1\n         MVC   OUTRECD,OUTRECD-1\n         MVC   UPDTELIN,UPDTELIN-1\n         MVC   UPDTELT,UPDTELIT\n         ZAP   INRCDS,=P'0'\n         ZAP   OUTRCDS,=P'0'\n         BAL   R9,ZEROTOTS\n         BAL   R9,ZEROSUBS\n         ZAP   LINECNT,=P'&LINEINT'   FORCE PRINT OF HEADER\n         ZAP   PAGECNT,=P'0'        INITIALIZE PAGE COUNTERS\n         MVI   FLAG,X'02'           MARK AS FIRST SYSMOD BEING READ\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n*                          FILL HEADDATE AREA WITH INFO TO REUSE\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADDAY(2),DATED\n         MVI   HEADDAY+2,C'/'\n         MVC   HEADDAY+3(2),DATED+2\n         MVI   HEADDAY+5,C'/'\n         MVC   HEADDAY+6(2),DATED+6\n***********************************************************************\n         BAL   R9,DOHEDR\n***********************************************************************\n* -------                                MAIN PROCESSING LOOP\nINREPT   DS    0H\n         GET   SYSUT1,INAREA\n         AP    TOTALRCD,=P'1'            COUNT RECORDS READ\n         AP    SUBTORCD,=P'1'\n         CLC   INCNTL(2),=C'./'\n         BE    INUPDREP\n         CLC   INCNTL(2),=C'++'\n         BE    INPLUSPL\n         BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\nINUPDREP DS    0H\n         AP    TOTALCHG,=P'1'            COUNT RECORDS CHANGED\n         AP    SUBTOCHG,=P'1'\n         MVC   INCNTL(2),=C'><'\n         BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\nINPLUSPL DS    0H\n         BAL   R9,FINDKEWD               DETERMINE KEYWORD OF PLUSPLUS\n         CLC   KEYWD,=C'        '        WAS ONE OF THE PROPER ONES?\n         BNE   INGETNUM                  YES - GET THE SYSMOD NUMBER\n         BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\nINGETNUM BAL   R9,FINDNUMB               GET SYSMOD NUMBER\n         CLC   PTFNAM,=C'       '        DID WE GET ONE?\n         BE    INGETWRT                  NO-NO UPDTE WRITE\n         MVC   UPDTENAM(7),PTFNAM        MOVE IN PTF NAME TO UPDTE\n         TM    FLAG,X'02'                FIRST SYSMOD?\n         BZ    INGET1ST                  NO. DON'T COMPENSATE COUNT\n         SP    SUBTORCD,=P'1'\nINGET1ST DS    0H\n         TM    FLAG,X'02'                FIRST SYSMOD?\n         BO    INGETUPD                  YES. NO SUBTOTALS.\n         BAL   R9,MAKERMSG\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9                 CHECK FOR HEADER PRINT\n         BAL   R9,DOHEDR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         BAL   R9,ZEROSUBS               ZERO COUNTERS FOR NEXT TIME\nINGETUPD BAL   R9,WRITEUPD               WRITE UPDTE RECORD BUILT\n*                                        PUT TOTALS HERE LATER\n         MVC   UPDTELIN,UPDTELIN-1       CLEAR UPDTE AREA\n         MVC   UPDTELT,UPDTELIT          AND SET UP FOR NEXT TIME\nINGETWRT BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\n* -------\nEOFIN    DS    0H                        CLOSE FILES AT END OF INPUT\n         CLOSE SYSUT1\n         TM    FLAG2,X'80'                IS ROUTINE READ ONLY?\n         BO    THEEND                    YES. SYSUT2 IS NOT OPEN.\n         CLOSE SYSUT2\n* -------\nTHEEND   DS    0H                        GET OUT OF PROGRAM\n         AP    SUBTORCD,=P'1'         COMPENSATE FOR RCD READ EARLIER\n         BAL   R9,MAKERMSG               PUT OUT LAST MESSAGE\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9                 CHECK FOR HEADER PRINT\n         BAL   R9,DOHEDR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    TOTALSYM,TOTALFUN\n         AP    TOTALSYM,TOTALAPA\n         AP    TOTALSYM,TOTALPTF\n         AP    TOTALSYM,TOTALUSE\n         BAL   R9,MAKEFMSG               PUT OUT SUMMARY MESSAGES\n         AP    TOTALTOT,TOTALRCD\n         AP    TOTALTOT,TOTALCHG\n*                                        PUT OUT SUMMARY MESSAGES HERE\n         CLOSE SYSPRINT\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n         EJECT\n* -------     SUBROUTINES    -------- *\nZEROTOTS DS    0H                        ZERO COUNTERS FOR TOTALS\n         ZAP   TOTALTOT,=P'0'\n         ZAP   TOTALADD,=P'0'\n         ZAP   TOTALCHG,=P'0'\n         ZAP   TOTALRCD,=P'0'\n         ZAP   TOTALFUN,=P'0'\n         ZAP   TOTALAPA,=P'0'\n         ZAP   TOTALPTF,=P'0'\n         ZAP   TOTALUSE,=P'0'\n         BR    R9\n* -------\nZEROSUBS DS    0H                        ZERO COUNTERS FOR NEW SYSMOD\n         ZAP   SUBTOCHG,=P'0'\n         ZAP   SUBTORCD,=P'0'\n         ZAP   SUBTOFUN,=P'0'\n         ZAP   SUBTOAPA,=P'0'\n         ZAP   SUBTOPTF,=P'0'\n         ZAP   SUBTOUSE,=P'0'\n         BR    R9\n* -------\nMAKEFMSG DS    0H                        MAKE FINAL SUMMARY REPORT\n         AP    PAGECNT,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADERF\n         MVC   OUTLINE+95(23),HEADDATE\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT+2\n         MVC   OUTLINE+120(4),=C'PAGE'\n         PUT   SYSPRINT,OUTLINE\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,TOTPTMSG\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALRCD+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,TOTADMSG\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALADD+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,TOTOTMSG\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALOUT+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSTADDCH\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALCHG+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSTSYSMD\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALSYM+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSTFUNCT\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALFUN+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSTPTF\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALPTF+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSTAPAR\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALAPA+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSTUSERM\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTALUSE+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSRFUNCT\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTRCFUN+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSRPTF\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTRCPTF+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSRAPAR\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTRCAPA+2\n         PUT   SYSPRINT,AREAOUT\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSRUSERM\n         MVC   AREAOUT+37(12),EDPAT\n         ED    AREAOUT+37(12),TOTRCUSE+2\n         PUT   SYSPRINT,AREAOUT\n         BR    R9\n* -------\nMAKERMSG DS    0H                        MAKE MESSAGE FOR EACH SYSMOD\n         MVC   AREAOUT,AREAOUT-1\n         MVC   AREAOUT,MSGRECDS\n         MVC   AREAOUT+1(8),KEYWDB       MOVE IN SYSMOD TYPE\n*\n* ----       INCREMENT LINE COUNTERS BY TYPE OF SYSMOD    ------ *\n*\nINCRTPE  DS    0H\n         CLC   =C'PTF',KEYWDB\n         BE    INCRPTF\n         CLC   =C'APAR',KEYWDB\n         BE    INCRAPA\n         CLC   =C'FUNCTION',KEYWDB\n         BE    INCRFUN\n         CLC   =C'USERMOD',KEYWDB\n         BE    INCRUSE\n         B     INCRTPEN\nINCRPTF  DS    0H\n         AP    TOTRCPTF,SUBTORCD\n         B     INCRTPEN\nINCRAPA  DS    0H\n         AP    TOTRCAPA,SUBTORCD\n         B     INCRTPEN\nINCRFUN  DS    0H\n         AP    TOTRCFUN,SUBTORCD\n         B     INCRTPEN\nINCRUSE  DS    0H\n         AP    TOTRCUSE,SUBTORCD\n         B     INCRTPEN\nINCRTPEN DS    0H\n*\n* ----       INCREMENT LINE COUNTERS BY TYPE OF SYSMOD    ------ *\n*\n         MVC   AREAOUT+10(7),PTFNAMB     MOVE IN SYSMOD NAME\n         MVC   AREAOUT+22(12),EDPAT\n         ED    AREAOUT+22(12),SUBTORCD+2\n         MVC   AREAOUT+48(12),EDPAT\n         ED    AREAOUT+48(12),SUBTOCHG+2\n         BR    R9\n* -------\nSYSPROUT DS    0H                        WRITE PRINT RECORD\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9                 CHECK FOR HEADER\n         BAL   R9,DOHEDR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         BR    R9\n* -------\nWRITEOUT DS    0H                        WRITE RECORD FROM INPUT AREA\n         TM    FLAG2,X'80'                IS RUN READ ONLY?\n         BO    WRITEOUE                  YES, THEN NOP THIS ROUTINE\n         AP    TOTALOUT,=P'1'\n         PUT   SYSUT2,INAREA\nWRITEOUE BR    R9\n* -------\nWRITEUPD DS    0H                        WRITE RECORD FROM UPDTE AREA\n         NI    FLAG,X'FF'-X'02'          TURN OFF INITIAL RECD FLAG\n         OI    FLAG,X'01'                SHOW WE'VE ALREADY DONE ONE\n         TM    FLAG2,X'80'                IS RUN READ ONLY?\n         BO    WRITEBKP                  YES, THEN AVOID WRITE\n         AP    TOTALOUT,=P'1'\n         PUT   SYSUT2,UPDTELIN\n         AP    TOTALADD,=P'1'\nWRITEBKP TM    FLAG,X'02'\n         BO    WRITEUPE                  DON'T BACK UP THE FIRST TIME\n         MVC   KEYWDB,KEYWD              BACK UP SYSMOD TYPE\n         MVC   PTFNAMB,PTFNAM            BACK UP SYSMOD NAME\nWRITEUPE BR    R9\n* -------\nFINDKEWD DS    0H\n         MVC   KEYWD,KEYWD-1             CLEAR KEYWORD STORAGE AREA\n         LA    R7,INAREA+2               START POINT\n         LA    R8,INAREA+69              END POINT\nFINDLOOP DS    0H\n         CR    R7,R8                     PAST THE END?\n         BNL   FINDLNUN                  DIDN'T FIND A KEYWORD\n*\n*  ---                   CHECK FOR COMMENTS DURING LINE SEARCH\n*\n         CLC   SLAST(2),0(R7)\n         BE    COMMSTRT\n         CLC   ASTSL(2),0(R7)\n         BE    COMMSTOP\n         B     COMMCONT\nCOMMSTRT DS    0H\n         LA    R7,2(,R7)                 BUMP PAST COMMENT\n         OI    FLAG,X'20'                INDICATE COMMENT AREA HERE\n         B     FINDLOOP                  CONTINUE LOOPING\nCOMMSTOP DS    0H\n         LA    R7,2(,R7)                 BUMP PAST COMMENT ENDER\n         NI    FLAG,X'FF'-X'20'          NO MORE COMMENT HERE\n         B     FINDLOOP\nCOMMCONT DS    0H\n         TM    FLAG,X'20'\n         BZ    COMMGO1\n         LA    R7,1(,R7)                 BUMP ONE SPACE\n         B     FINDLOOP                  IGNORE EVERYTHING IF COMMENT\nCOMMGO1  DS    0H                        FIND FIRST NON-BLANK\n         CLI   0(R7),X'40'\n         BNE   COMMGO2                   NOT BLANK, SEARCH FOR KEYWD\n         LA    R7,1(,R7)                 IS BLANK, BUMP AND TRY AGAIN\n         B     FINDLOOP\nCOMMGO2  DS    0H\n*\n*  ---                   CHECK FOR COMMENTS DURING LINE SEARCH\n*\n         CLC   =C'PTF',0(R7)\n         BE    FOUNDPTF\n         CLC   =C'APAR',0(R7)\n         BE    FOUNDAPA\n         CLC   =C'FUNCTION',0(R7)\n         BE    FOUNDFUN\n         CLC   =C'USERMOD',0(R7)\n         BE    FOUNDUSR\n         B     FINDLSTP\nFOUNDPTF DS    0H\n         MVC   KEYWD(3),=C'PTF'\n         TM    FLAG,X'02'\n         BZ    FOUNDPT1\n         MVC   KEYWDB(8),KEYWD           INITIALIZE BKUP FIRST TIME\nFOUNDPT1 DS    0H\n         AP    SUBTOPTF,=P'1'            COUNT PTF      FOUND\n         AP    TOTALPTF,=P'1'\n         LA    R7,3(,R7)\n         B     FINDKEND\nFOUNDAPA DS    0H\n         MVC   KEYWD(4),=C'APAR'\n         TM    FLAG,X'02'\n         BZ    FOUNDAP1\n         MVC   KEYWDB(8),KEYWD           INITIALIZE BKUP FIRST TIME\nFOUNDAP1 DS    0H\n         AP    SUBTOAPA,=P'1'            COUNT APAR     FOUND\n         AP    TOTALAPA,=P'1'\n         LA    R7,4(,R7)\n         B     FINDKEND\nFOUNDFUN DS    0H\n         MVC   KEYWD(8),=C'FUNCTION'\n         TM    FLAG,X'02'\n         BZ    FOUNDFU1\n         MVC   KEYWDB(8),KEYWD           INITIALIZE BKUP FIRST TIME\nFOUNDFU1 DS    0H\n         AP    SUBTOFUN,=P'1'            COUNT FUNCTION FOUND\n         AP    TOTALFUN,=P'1'\n         LA    R7,8(,R7)\n         B     FINDKEND\nFOUNDUSR DS    0H\n         MVC   KEYWD(7),=C'USERMOD'\n         TM    FLAG,X'02'\n         BZ    FOUNDUS1\n         MVC   KEYWDB(8),KEYWD           INITIALIZE BKUP FIRST TIME\nFOUNDUS1 DS    0H\n         AP    SUBTOUSE,=P'1'            COUNT USERMOD  FOUND\n         AP    TOTALUSE,=P'1'\n         LA    R7,7(,R7)\n         B     FINDKEND\nFINDLSTP DS    0H\n         LR    R7,R8\n         LA    R7,1(,R7)\n         MVC   KEYWD,KEYWD-1\n         B     FINDKEND\nFINDLNUN DS    0H\n         MVC   KEYWD,KEYWD-1\n         LA    R7,INAREA+2               RE-INITIALIZE POINTER\n         B     FINDKEND\nFINDKEND BR    R9\n* -------\nFINDNUMB DS    0H\n*                                        R7 ASSUMED SET BY FINDKEWD\n         LA    R8,INAREA+64              END POINT\nFINDNLUP DS    0H\n         CR    R7,R8                     PAST THE END?\n         BNL   FINDNNUN                  DIDN'T FIND A SYSMOD NUMBER\n*\n*  ---                   CHECK FOR COMMENTS DURING LINE SEARCH\n*\n         CLC   SLAST(2),0(R7)\n         BE    COMFSTRT\n         CLC   ASTSL(2),0(R7)\n         BE    COMFSTOP\n         B     COMFCONT\nCOMFSTRT DS    0H\n         LA    R7,2(,R7)                 BUMP PAST COMMENT\n         OI    FLAG,X'20'                INDICATE COMMENT AREA HERE\n         B     FINDNLUP                  CONTINUE LOOPING\nCOMFSTOP DS    0H\n         LA    R7,2(,R7)                 BUMP PAST COMMENT ENDER\n         NI    FLAG,X'FF'-X'20'          NO MORE COMMENT HERE\n         B     FINDNLUP                  CONTINUE LOOPING\nCOMFCONT DS    0H\n         TM    FLAG,X'20'                IN MIDDLE OF COMMENT?\n         BZ    COMFGO1                   NO. PROCESS NORMALLY.\n         LA    R7,1(,R7)                 BUMP ONE SPACE\n         B     FINDNLUP                  IGNORE EVERYTHING IF COMMENT\nCOMFGO1  DS    0H                        FIND FIRST NON-BLANK\n*\n*  ---                   CHECK FOR COMMENTS DURING LINE SEARCH\n*\n         CLI   0(R7),C' '                CURRENT CHARACTER A SPACE?\n         BE    FINDNBMP                  YES-THEN GO PAST AND RETRY\n         CLI   0(R7),C'('                OPEN PAREN?\n         BE    FINDNGET                  YES-TRY TO GET SYSMOD NUMBER\nFINDNBMP DS    0H\n         LA    R7,1(,R7)                 BUMP POINTER\n         B     FINDNLUP                  AND RETRY\nFINDNGET DS    0H\n         CR    R7,R8                     PAST THE END?\n         BNL   FINDNNUN                  DIDN'T FIND A SYSMOD NUMBER\n         CLI   1(R7),C' '                NEXT CHAR IS SPACE?\n         BE    FINDNGBM                  YES-BUMP AND RETRY\n         MVC   PTFNAM(7),1(R7)           ASSUME NEXT 7 CHARS ARE NUMBER\n         TM    FLAG,X'02'\n         BZ    FINDNGE1\n         MVC   PTFNAMB,PTFNAM            LOAD BACKUP THE FIRST TIME\nFINDNGE1 DS    0H\n         LA    R7,INAREA+2               RESET POINTER\n         B     FINDNEND                  AND GET OUT SUCCESSFULLY\nFINDNGBM DS    0H\n         LA    R7,1(,R7)                 BUMP POINTER\n         B     FINDNGET                  AND RETRY SECOND LOOP\nFINDNNUN DS    0H\n         MVC   PTFNAM,PTFNAM-1\n         LA    R7,INAREA+2               RE-INITIALIZE POINTER\n         B     FINDNEND\nFINDNEND BR    R9\n* -------\nDOHEDR   DS    0H                        PRINT THE PAGE HEADER\n         CP    LINECNT,=P'&LINEPPG'\n         BL    DOHEDRE\n         AP    PAGECNT,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         MVC   OUTLINE+95(23),HEADDATE\n         MVC   OUTLINE+120(12),EDPAT\n         ED    OUTLINE+120(12),PAGECNT+2\n         MVC   OUTLINE+120(4),=C'PAGE'\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         ZAP   LINECNT,=P'4'\nDOHEDRE  BR    R9\n* -------\n*\n*\n* ----- WORK AREA ------ *\nREADST   DC    CL4' '\nSAVER9   DC    F'0'\nSAVER9A  DC    F'0'\nSAVER9B  DC    F'0'\nFLAG     DC    X'00'\nFLAG2    DC    X'00'\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\nLINECNT  DC    PL7'0'\nPAGECNT  DC    PL7'0'\nTOTALTOT DC    PL7'0'\nTOTALOUT DC    PL7'0'\nTOTALADD DC    PL7'0'\nTOTALCHG DC    PL7'0'\nTOTALRCD DC    PL7'0'\nTOTALSYM DC    PL7'0'\nTOTALFUN DC    PL7'0'\nTOTALAPA DC    PL7'0'\nTOTALPTF DC    PL7'0'\nTOTALUSE DC    PL7'0'\nTOTRCFUN DC    PL7'0'\nTOTRCAPA DC    PL7'0'\nTOTRCPTF DC    PL7'0'\nTOTRCUSE DC    PL7'0'\nSUBTOCHG DC    PL7'0'\nSUBTORCD DC    PL7'0'\nSUBTOFUN DC    PL7'0'\nSUBTOAPA DC    PL7'0'\nSUBTOPTF DC    PL7'0'\nSUBTOUSE DC    PL7'0'\n         DC    CL4' '\nKEYWD    DC    CL8' '\n         DC    CL4' '\nFMIDSTOR DC    CL7' '\n         DC    CL4' '\nKEYWDB   DC    CL8' '\n         DC    CL4' '\nSND7STOR DC    CL7' '\n         DC    CL4' '\nPTFNAM   DC    CL7' '\n         DC    CL4' '\nPTFNAMB  DC    CL7' '\n         DC    CL4' '\n         DC    CL1' '\nAREAOUT  DS    0CL133\nAREACC   DC    CL1' '\nAREAREST DC    CL132' '\n         DC    CL1' '\nOUTLINE  DS    0CL133\nOUTLCC   DC    CL1' '\nOUTLINER DC    CL132' '\n         DC    CL1' '\nINAREA   DS    0CL80\nINCNTL   DC    CL2' '\nINREST   DC    CL78' '\n         DC    CL8' '\n         DC    C' '\nUPDTELIN DS    0CL80              IEBUPDTE ADD CARD\nUPDTELT  DC    CL12' '\nUPDTENAM DC    CL8' '\nUPDTERST DC    CL60' '\n         DC    CL8' '\nOUTRECD  DS    0CL80\nOUTCNTL  DC    CL2' '\nOUTREST  DC    CL78' '\n         DC    CL8' '\n* ----- CONSTANTS ------ *\nUPDTELIT DC    C'./ ADD NAME='\nTOTPTMSG DC    CL133'-        TOTAL RECORDS IN SMPPTFIN ='\nTOTADMSG DC    CL133'         ./ ADD NAME RECORDS ADDED ='\nTOTOTMSG DC    CL133'  TOTAL RECORDS PUT TO OUTPUT FILE ='\nMSTADDCH DC    CL133'  TOTAL NUMBER OF ./ CHANGED TO >< ='\nMSTSYSMD DC    CL133'  TOTAL NUMBER OF SYSMODS          ='\nMSTFUNCT DC    CL133'0 TOTAL NUMBER OF FUNCTION SYSMODS ='\nMSTPTF   DC    CL133'  TOTAL NUMBER OF PTF      SYSMODS ='\nMSTAPAR  DC    CL133'  TOTAL NUMBER OF APAR     SYSMODS ='\nMSTUSERM DC    CL133'  TOTAL NUMBER OF USERMOD  SYSMODS ='\nMSRFUNCT DC    CL133'0 TOTAL NUMBER OF FUNCTION RECORDS ='\nMSRPTF   DC    CL133'  TOTAL NUMBER OF PTF      RECORDS ='\nMSRAPAR  DC    CL133'  TOTAL NUMBER OF APAR     RECORDS ='\nMSRUSERM DC    CL133'  TOTAL NUMBER OF USERMOD  RECORDS ='\nMSGRECDS DC    CL133' XXXXXXXX YYYYYYY HAS              RECORDS WITH   -\n                           INTERNAL ./ RECORDS CHANGED TO ><'\nSLAST    DC    CL2'/*'\nASTSL    DC    CL2'*/'\nHEADER   DC    CL133'1        SMPUPD  -  ADD PDSLOAD (IEBUPDTE) CARDS T-\n               O AN SMPPTFIN FILE'\nHEADERF  DC    CL133'1        SMPUPD  -  ADD PDSLOAD (IEBUPDTE) CARDS T-\n               O AN SMPPTFIN FILE - SUMMARY'\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\n         DC    C' '\nREADONL  DC    CL11'- READ ONLY'\n         LTORG\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\nHEADDAY  DC    CL8' '\nSYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,EODAD=EOFIN,DSORG=PS,LRECL=80\nSYSUT2   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         END   SMPUPD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPUPDCB": {"ttr": 3585, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\t?\\x00\\x88\\x12\\x8f\\x06)\\x00\\xb4\\x00\\xb4\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1988-05-07T06:29:00", "lines": 180, "newlines": 180, "modlines": 0, "user": "TST2SSG"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.  SMPUPD.\n       REMARKS.\n\n           THIS PROGRAM READS A PTF FILE FROM A PUT TAPE, AND\n           CREATES AN IDENTICAL OUTPUT FILE, EXCEPT THAT ALL\n           './' IN COLUMN 1 ARE CONVERTED TO '><',\n           AND A ./ ADD NAME=PTFNAME IS INSERTED BEFORE EACH\n           PTF BEGINS.  THE PDSLOAD PROGRAM CAN THEN BE USED TO\n           LOAD THE OUTPUT FILE FROM THIS PROGRAM INTO A PDS.\n           THAT PDS WILL HAVE EACH MEMBER AS A SINGLE PTF.\n           NOTE THAT ON OCCASION, IBM WILL SEND 2 PTFS WITH\n           THE SAME NUMBER ON A PUT TAPE.  TO FIND THE DELETED\n           MEMBER OF THE RESULTANT PDS, YOU SHOULD DO A PDS\n           RESTORE, USING THE PDS TSO COMMAND PROCESSOR FROM\n           THE CBT TAPE, FILE 182.\n\n           MODIFIED 09/30/87 TO DEBUG CASE WHERE OPEN PAREN\n           CAME AFTER ++PTF WITH NO SPACE IN BETWEEN.  ALSO\n           TO ADD SUPPORT FOR ++APAR, ++USERMOD, AND ++FUNCTION.\n\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.  IBM-370.\n       OBJECT-COMPUTER.  IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINTI-FILE ASSIGN TO   UT-3350-S-SYSUT1.\n           SELECT PRINTO-FILE ASSIGN TO   UT-3350-S-SYSUT2.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINTI-FILE\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD\n           RECORD CONTAINS 80 CHARACTERS\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTI-RECORD          PIC X(80).\n       FD  PRINTO-FILE\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD\n           RECORD CONTAINS 80 CHARACTERS\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTO-RECORD          PIC X(80).\n       WORKING-STORAGE SECTION.\n       77  IDENT-FIER     PIC X(17) VALUE 'SMPUPD   09/30/87'.\n       01  PTF                    PIC X(4) VALUE 'PTF '.\n       01  PTFP                   PIC X(4) VALUE 'PTF('.\n       01  APAR                   PIC X(5) VALUE 'APAR '.\n       01  APA                    PIC X(4) VALUE 'APAR'.\n       01  USERMOD                PIC X(8) VALUE 'USERMOD '.\n       01  USER                   PIC X(4) VALUE 'USER'.\n       01  FUNCTION               PIC X(9) VALUE 'FUNCTION '.\n       01  FUNC                   PIC X(4) VALUE 'FUNC'.\n       01  PLUSPLUS               PIC X(2) VALUE '++'.\n       01  HOLD80                 PIC X(80) VALUE SPACES.\n       01  ADDNAME-REC.\n           05  ADDTITLE           PIC X(12)\n                      VALUE './ ADD NAME='.\n           05  ADDPTF             PIC X(7) VALUE SPACES.\n           05  AP REDEFINES ADDPTF PIC X OCCURS 7 TIMES\n                   INDEXED BY IP.\n           05  ADDEND             PIC X(61) VALUE SPACES.\n       01  HOLD4X.\n           05  HOLD4              PIC X(4) VALUE SPACES.\n           05  H4 REDEFINES HOLD4 PIC X OCCURS 4 TIMES\n                   INDEXED BY I4.\n       01  W-PRINTI-RECORD.\n           05  PRINTI-INIT        PIC X(2).\n           05  PRINTI-DATA.\n               10  PRINTI-DAT     PIC X(78).\n               10  PX REDEFINES PRINTI-DAT PIC X OCCURS 78 TIMES\n                       INDEXED BY IX.\n           EJECT\n       PROCEDURE DIVISION.\n       PROCESS00.\n           OPEN INPUT  PRINTI-FILE\n                OUTPUT PRINTO-FILE.\n       PROCESS01-LOOP-COPY.\n           READ PRINTI-FILE INTO W-PRINTI-RECORD AT END\n               GO TO PROCESS-END.\n           IF PRINTI-INIT EQUAL './'\n               MOVE '><' TO PRINTI-INIT.\n           IF PRINTI-INIT NOT EQUAL PLUSPLUS\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n       PROCESS01-PTF-INIT.\n           SET IX TO 1.\n       PROCESS01-PTF-SCAN.\n           IF IX GREATER THAN 76\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n           IF PX (IX) EQUAL SPACES\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-SCAN.\n           SET I4 TO 1.\n       PROCESS01-PTF-CHECK.\n           MOVE SPACES TO HOLD4.\n           MOVE PX (IX) TO H4 (I4).\n           SET IX UP BY 1.\n           SET I4 UP BY 1.\n           MOVE PX (IX) TO H4 (I4).\n           SET IX UP BY 1.\n           SET I4 UP BY 1.\n           MOVE PX (IX) TO H4 (I4).\n           SET IX UP BY 1.\n           SET I4 UP BY 1.\n           MOVE PX (IX) TO H4 (I4).\n           SET I4 TO 1.\n           IF HOLD4 EQUAL PTF\n               GO TO PROCESS01-PTF-PAREN.\n           IF HOLD4 EQUAL PTFP\n               SET IX DOWN BY 1\n               GO TO PROCESS01-PTF-PAREN.\n           IF HOLD4 EQUAL APA\n               GO TO PROCESS01-PTF-APA.\n           IF HOLD4 EQUAL USER\n               GO TO PROCESS01-PTF-USER.\n           IF HOLD4 EQUAL FUNC\n               GO TO PROCESS01-PTF-FUNC.\n           WRITE PRINTO-RECORD FROM W-PRINTI-RECORD.\n           GO TO PROCESS01-LOOP-COPY.\n       PROCESS01-PTF-APA.\n           GO TO PROCESS01-PTF-PAREN.\n       PROCESS01-PTF-USER.\n           SET IX UP BY 3.\n           GO TO PROCESS01-PTF-PAREN.\n       PROCESS01-PTF-FUNC.\n           SET IX UP BY 4.\n           GO TO PROCESS01-PTF-PAREN.\n       PROCESS01-PTF-PAREN.\n           SET IX UP BY 1.\n           IF IX GREATER THAN 68\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n           IF PX (IX) EQUAL '('\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-GETNUM.\n           IF PX (IX) EQUAL SPACES\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-PAREN.\n           WRITE PRINTO-RECORD FROM W-PRINTI-RECORD.\n           GO TO PROCESS01-LOOP-COPY.\n       PROCESS01-PTF-GETNUM.\n           IF IX GREATER THAN 69\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n           IF PX (IX) EQUAL SPACES\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-GETNUM.\n           SET IP TO 1.\n           MOVE SPACES TO ADDPTF.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n       PROCESS01-PTF-ADDPLUS.\n           WRITE PRINTO-RECORD FROM ADDNAME-REC.\n           MOVE SPACES          TO ADDPTF.\n           MOVE SPACES          TO HOLD80.\n           MOVE W-PRINTI-RECORD TO HOLD80.\n           WRITE PRINTO-RECORD FROM HOLD80.\n           GO TO PROCESS01-LOOP-COPY.\n       PROCESS-END.\n           CLOSE PRINTI-FILE PRINTO-FILE.\n           STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPUPDJ": {"ttr": 3589, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x88\\t?\\x00\\x99\\x03/\\x15\\x16\\x008\\x009\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1988-04-02T00:00:00", "modifydate": "1999-02-01T15:16:00", "lines": 56, "newlines": 57, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBO  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//******************************************************************//\n//**     JCL TO MAKE A PDS OUT OF AN SMPPTFIN SEQ INPUT FILE      **//\n//******************************************************************//\n//*       STEP 1 - CREATION OF TEMPORARY COPY OF SMPPTFIN FILE\n//*                   WHICH HAS ./ ADD CARDS INSERTED,\n//*                   AND WHICH CONVERTS OTHER \"./\" STRINGS\n//*                   IN COLUMNS 1-2 TO \"><\".\n//******************************************************************//\n//S1PTFADD EXEC PGM=SMPUPD\n//STEPLIB DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.TEST.SEQ.PTS\n//SYSUT2   DD DISP=(,PASS),DSN=&&TEMP,UNIT=SYSDA,\n//    DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),SPACE=(TRK,(300,120))\n//SYSABEND DD SYSOUT=A,HOLD=YES\n//******************************************************************//\n//*       STEP 2 - RELOAD OF ALL SYSMODS INTO A NEW OUTPUT PDS.\n//******************************************************************//\n//S2UPDTE EXEC PGM=PDSLOAD,PARM='UPDTE(><)'\n//STEPLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSPRINT  DD  SYSOUT=*\n//SYSUT1    DD  DSN=&&TEMP,DISP=(OLD,PASS)\n//SYSUT2    DD  DSN=SBGOLOB.TEST.PDS.PTS,DISP=SHR\n//*YSUT2    DD  DSN=SBGOLOB.TEST.PDS.PTS,DISP=(NEW,CATLG,DELETE),\n//*    UNIT=SYSDA,VOL=SER=PRIM10,SPACE=(TRK,(300,120,137)),\n//*    DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//******************************************************************//\n//*       STEP 3 - CREATION OF ISPF STATISTICS AND RESTORE OF\n//*                  DUPLICATELY-NAMED SYSMODS SO THEY CAN\n//*                  BE EXAMINED.\n//*                COMPARE TOTAL NUMBER OF RECORDS IN THE PDS\n//*                  USING THE   AT : SHORT   COMMAND\n//*                  WITH THE NUMBER OF RECORDS IN THE ORIGINAL\n//*                  FILE, TO MAKE SURE NO RECORDS GOT LOST IN\n//*                  THIS PROCESS.\n//******************************************************************//\n//S3STATS EXEC PGM=IKJEFT01,REGION=4096K,DYNAMNBR=50\n//STEPLIB  DD DISP=SHR,DSN=IBMUSER.PDSE530.LOAD\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTERM  DD SYSOUT=*\n//* ----- THIS SHOULD WORK WITH FREE PDS AS WELL AS STARTOOL ----- *//\n//SYSTSIN  DD *\n PDS   'SBGOLOB.TEST.PDS.PTS'\n AT : ADDSTATS USERID(PTF9901) VER(01)\n RESTORE $PTF REPEAT NOPROMPT\n AT $PTF* ADDSTATS USERID(REP9901) VER(01)\n FIXPDS RELEASE\n AT : SHORT\n VER\n END\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMPUPDO": {"ttr": 3591, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x02\\x01\\x01\\x16?\\x01\\x01\\x16O\\x16!\\x00\\xf0\\x00L\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2001-06-12T00:00:00", "modifydate": "2001-06-13T16:21:02", "lines": 240, "newlines": 76, "modlines": 0, "user": "WSBG"}, "text": "* ----------------------------------------------------------------- *\n*       SMPUPD     -   ADAPTED FROM A COBOL PROGRAM BY SAM GOLOB    *\n* ----------------------------------------------------------------- *\n         GBLC  &LLEV\n&LLEV    SETC  '001'\nSMPUPD   CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'SMPUPD - PUTXREF REPORT TO FORFMID LIST OF PTFS - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL &LLEV '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP THREE BASE REGISTERS\n         USING SMPUPD,R12,R11,R10\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LA    R10,4095(,R11)\n         LA    R10,1(,R10)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n         OPEN  (SYSUT1,INPUT)\n         OPEN  (SYSUT2,OUTPUT)\nINITIT   DS    0H\n         MVC   BLANKS,BLANKS-1\n         MVC   INAREA,INAREA-1\n         MVC   OUTAREA,OUTAREA-1\n         MVC   UPDTELIN,UPDTELIN-1\n         MVC   UPDTELT,UPDTELIT\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n*                          FILL HEADDATE AREA WITH INFO TO REUSE\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+12(2),TIMED\n         MVI   HEADDATE+14,C':'\n         MVC   HEADDATE+15(2),TIMED+2\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+4\n         MVC   HEADDAY(2),DATED\n         MVI   HEADDAY+2,C'/'\n         MVC   HEADDAY+3(2),DATED+2\n         MVI   HEADDAY+5,C'/'\n         MVC   HEADDAY+6(2),DATED+6\n***********************************************************************\n* -------                                MAIN PROCESSING LOOP\nINREPT   DS    0H\n         GET   SYSUT1,INAREA\n         CLC   INCNTL(2),=C'./'\n         BE    INUPDREP\n         CLC   INCNTL(2),=C'++'\n         BE    INPLUSPL\n         BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\nINUPDREP DS    0H\n         MVC   INCNTL(2),=C'><'\n         BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\nINPLUSPL DS    0H\n         BAL   R9,FINDKEWD               DETERMINE KEYWORD OF PLUSPLUS\n         CLC   KEYWD,=C'        '        WAS ONE OF THE PROPER ONES?\n         BNE   INGETNUM                  YES - GET THE SYSMOD NUMBER\n         BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\nINGETNUM BAL   R9,FINDNUMB               GET SYSMOD NUMBER\n         CLC   PTFNAM,=C'       '        DID WE GET ONE?\n         BE    INGETWRT                  NO-NO UPDTE WRITE\n         MVC   UPDTENAM(7),PTFNAM        MOVE IN PTF NAME TO UPDTE\n         BAL   R9,WRITEUPD               WRITE UPDTE RECORD BUILT\n*                                        PUT TOTALS HERE LATER\n         MVC   UPDTELIN,UPDTELIN-1       CLEAR UPDTE AREA\n         MVC   UPDTELT,UPDTELIT          AND SET UP FOR NEXT TIME\nINGETWRT BAL   R9,WRITEOUT               WRITE OUT CURRENT RECORD\n         B     INREPT\n* -------\nEOFIN    DS    0H                        CLOSE FILES AT END OF INPUT\n         CLOSE SYSUT1\n         CLOSE SYSUT2\n* -------\nTHEEND   DS    0H                        GET OUT OF PROGRAM\n         CLOSE SYSPRINT\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n         EJECT\n* -------     SUBROUTINES    -------- *\nWRITEOUT DS    0H\n         PUT   SYSUT2,INAREA             WRITE RECORD FROM INPUT AREA\n         BR    R9\n* -------\nWRITEUPD DS    0H\n         PUT   SYSUT2,UPDTELIN           WRITE RECORD FROM UPDTE AREA\n         BR    R9\n* -------\nFINDKEWD DS    0H\n         MVC   KEYWD,KEYWD-1             CLEAR KEYWORD STORAGE AREA\n         LA    R7,INAREA+2               START POINT\n         LA    R8,INAREA+69              END POINT\nFINDLOOP DS    0H\n         CR    R7,R8                     PAST THE END?\n         BNL   FINDLNUN                  DIDN'T FIND A KEYWORD\n         CLC   =C'PTF',0(R7)\n         BE    FOUNDPTF\n         CLC   =C'APAR',0(R7)\n         BE    FOUNDAPA\n         CLC   =C'FUNCTION',0(R7)\n         BE    FOUNDFUN\n         CLC   =C'USERMOD',0(R7)\n         BE    FOUNDUSR\n         LA    R7,1(,R7)                 BUMP POSITION POINTER\n         B     FINDLOOP\nFOUNDPTF DS    0H\n         MVC   KEYWD(3),=C'PTF'\n         LA    R7,3(,R7)\n         B     FINDKEND\nFOUNDAPA DS    0H\n         MVC   KEYWD(4),=C'APAR'\n         LA    R7,4(,R7)\n         B     FINDKEND\nFOUNDFUN DS    0H\n         MVC   KEYWD(8),=C'FUNCTION'\n         LA    R7,8(,R7)\n         B     FINDKEND\nFOUNDUSR DS    0H\n         MVC   KEYWD(7),=C'USERMOD'\n         LA    R7,7(,R7)\n         B     FINDKEND\nFINDLNUN DS    0H\n         MVC   KEYWD,KEYWD-1\n         LA    R7,INAREA+2               RE-INITIALIZE POINTER\n         B     FINDKEND\nFINDKEND BR    R9\n* -------\nFINDNUMB DS    0H\n*                                        R7 ASSUMED SET BY FINDKEWD\n         LA    R8,INAREA+64              END POINT\nFINDNLUP DS    0H\n         CR    R7,R8                     PAST THE END?\n         BNL   FINDNNUN                  DIDN'T FIND A SYSMOD NUMBER\n         CLI   0(R7),C' '                CURRENT CHARACTER A SPACE?\n         BE    FINDNBMP                  YES-THEN GO PAST AND RETRY\n         CLI   0(R7),C'('                OPEN PAREN?\n         BE    FINDNGET                  YES-TRY TO GET SYSMOD NUMBER\nFINDNBMP DS    0H\n         LA    R7,1(,R7)                 BUMP POINTER\n         B     FINDNLUP                  AND RETRY\nFINDNGET DS    0H\n         CR    R7,R8                     PAST THE END?\n         BNL   FINDNNUN                  DIDN'T FIND A SYSMOD NUMBER\n         CLI   1(R7),C' '                NEXT CHAR IS SPACE?\n         BE    FINDNGBM                  YES-BUMP AND RETRY\n         MVC   PTFNAM(7),1(R7)           ASSUME NEXT 7 CHARS ARE NUMBER\n         LA    R7,INAREA+2               RESET POINTER\n         B     FINDNEND                  AND GET OUT SUCCESSFULLY\nFINDNGBM DS    0H\n         LA    R7,1(,R7)                 BUMP POINTER\n         B     FINDNGET                  AND RETRY SECOND LOOP\nFINDNNUN DS    0H\n         MVC   PTFNAM,PTFNAM-1\n         LA    R7,INAREA+2               RE-INITIALIZE POINTER\n         B     FINDNEND\nFINDNEND BR    R9\n* -------\n*\n*\n* ----- WORK AREA ------ *\nFLAG1    DC    X'00'\nFLAG2    DC    X'00'\n         DC    CL4' '\nKEYWD    DC    CL8' '\n         DC    CL4' '\nFMIDSTOR DC    CL7' '\n         DC    CL4' '\nSND7STOR DC    CL7' '\n         DC    CL4' '\nPTFNAM   DC    CL7' '\n         DC    CL4' '\n         DC    CL1' '\nINAREA   DS    0CL80\nINCNTL   DC    CL2' '\nINREST   DC    CL78' '\n         DC    CL8' '\n         DC    C' '\nUPDTELIN DS    0CL80              IEBUPDTE ADD CARD\nUPDTELT  DC    CL14' '\nUPDTENAM DC    CL8' '\nUPDTERST DC    CL58' '\n         DC    CL8' '\nOUTRECD  DS    0CL80\nOUTCNTL  DC    CL2' '\nOUTREST  DC    CL78' '\n         DC    CL8' '\n* ----- CONSTANTS ------ *\nUPDTELIT DC    C'./  ADD  NAME='\nSLAST    DC    CL2'/*'\nASTSL    DC    CL2'*/'\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\n         DC    C' '\nOUTAREA  DS    CL80\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\n         LTORG\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DC    CL23' '\nHEADDAY  DC    CL8' '\nSYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,EODAD=EOFIN,DSORG=PS,LRECL=80\nSYSUT2   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         END   SMPUPD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPUPD2O": {"ttr": 3596, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x08\\x0f\\x00\\x99\\x03/\\x00$\\x00\\xb3\\x00\\xb3\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-03-21T00:00:00", "modifydate": "1999-02-01T00:24:00", "lines": 179, "newlines": 179, "modlines": 0, "user": "SBGOLOB"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.  SMPUPD.\n      *              PROGRAM CONVERTED BY\n      *              COBOL CONVERSION AID PO 5785-ABJ\n      *              CONVERSION DATE 03/21/95 18:08:16.\n      *REMARKS.\n\n      *    THIS PROGRAM READS A PTF FILE FROM A PUT TAPE, AND\n      *    CREATES AN IDENTICAL OUTPUT FILE, EXCEPT THAT ALL\n      *    './' IN COLUMN 1 ARE CONVERTED TO '><',\n      *    AND A ./ ADD NAME=PTFNAME IS INSERTED BEFORE EACH\n      *    PTF BEGINS.  THE PDSLOAD PROGRAM CAN THEN BE USED TO\n      *    LOAD THE OUTPUT FILE FROM THIS PROGRAM INTO A PDS.\n      *    THAT PDS WILL HAVE EACH MEMBER AS A SINGLE PTF.\n      *    NOTE THAT ON OCCASION, IBM WILL SEND 2 PTFS WITH\n      *    THE SAME NUMBER ON A PUT TAPE.  TO FIND THE DELETED\n      *    MEMBER OF THE RESULTANT PDS, YOU SHOULD DO A PDS\n      *    RESTORE, USING THE PDS TSO COMMAND PROCESSOR FROM\n      *    THE CBT TAPE, FILE 182.\n\n      *    MODIFIED 09/30/87 TO DEBUG CASE WHERE OPEN PAREN\n      *    CAME AFTER ++PTF WITH NO SPACE IN BETWEEN.  ALSO\n      *    TO ADD SUPPORT FOR ++APAR, ++USERMOD, AND ++FUNCTION.\n\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.  IBM-370.\n       OBJECT-COMPUTER.  IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINTI-FILE ASSIGN TO   UT-3350-S-SYSUT1.\n           SELECT PRINTO-FILE ASSIGN TO   UT-3350-S-SYSUT2.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINTI-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTI-RECORD          PIC X(80).\n       FD  PRINTO-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS.\n       01  PRINTO-RECORD          PIC X(80).\n       WORKING-STORAGE SECTION.\n       77  IDENT-FIER     PIC X(17) VALUE 'SMPUPD   09/30/87'.\n       01  PTF                    PIC X(4) VALUE 'PTF '.\n       01  PTFP                   PIC X(4) VALUE 'PTF('.\n       01  APAR                   PIC X(5) VALUE 'APAR '.\n       01  APA                    PIC X(4) VALUE 'APAR'.\n       01  USERMOD                PIC X(8) VALUE 'USERMOD '.\n       01  USER                   PIC X(4) VALUE 'USER'.\n       01  FUNCTON                PIC X(9) VALUE 'FUNCTION '.\n       01  FUNC                   PIC X(4) VALUE 'FUNC'.\n       01  PLUSPLUS               PIC X(2) VALUE '++'.\n       01  HOLD80                 PIC X(80) VALUE SPACES.\n       01  ADDNAME-REC.\n           05  ADDTITLE           PIC X(12)\n                      VALUE './ ADD NAME='.\n           05  ADDPTF             PIC X(7) VALUE SPACES.\n           05  AP REDEFINES ADDPTF PIC X OCCURS 7 TIMES\n                   INDEXED BY IP.\n           05  ADDEND             PIC X(61) VALUE SPACES.\n       01  HOLD4X.\n           05  HOLD4              PIC X(4) VALUE SPACES.\n           05  H4 REDEFINES HOLD4 PIC X OCCURS 4 TIMES\n                   INDEXED BY I4.\n       01  W-PRINTI-RECORD.\n           05  PRINTI-INIT        PIC X(2).\n           05  PRINTI-DATA.\n               10  PRINTI-DAT     PIC X(78).\n               10  PX REDEFINES PRINTI-DAT PIC X OCCURS 78 TIMES\n                       INDEXED BY IX.\n           EJECT\n       PROCEDURE DIVISION.\n       PROCESS00.\n           OPEN INPUT  PRINTI-FILE\n                OUTPUT PRINTO-FILE.\n       PROCESS01-LOOP-COPY.\n           READ PRINTI-FILE INTO W-PRINTI-RECORD AT END\n               GO TO PROCESS-END.\n           IF PRINTI-INIT EQUAL './'\n               MOVE '><' TO PRINTI-INIT.\n           IF PRINTI-INIT NOT EQUAL PLUSPLUS\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n       PROCESS01-PTF-INIT.\n           SET IX TO 1.\n       PROCESS01-PTF-SCAN.\n           IF IX GREATER THAN 76\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n           IF PX (IX) EQUAL SPACES\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-SCAN.\n           SET I4 TO 1.\n       PROCESS01-PTF-CHECK.\n           MOVE SPACES TO HOLD4.\n           MOVE PX (IX) TO H4 (I4).\n           SET IX UP BY 1.\n           SET I4 UP BY 1.\n           MOVE PX (IX) TO H4 (I4).\n           SET IX UP BY 1.\n           SET I4 UP BY 1.\n           MOVE PX (IX) TO H4 (I4).\n           SET IX UP BY 1.\n           SET I4 UP BY 1.\n           MOVE PX (IX) TO H4 (I4).\n           SET I4 TO 1.\n           IF HOLD4 EQUAL PTF\n               GO TO PROCESS01-PTF-PAREN.\n           IF HOLD4 EQUAL PTFP\n               SET IX DOWN BY 1\n               GO TO PROCESS01-PTF-PAREN.\n           IF HOLD4 EQUAL APA\n               GO TO PROCESS01-PTF-APA.\n           IF HOLD4 EQUAL USER\n               GO TO PROCESS01-PTF-USER.\n           IF HOLD4 EQUAL FUNC\n               GO TO PROCESS01-PTF-FUNC.\n           WRITE PRINTO-RECORD FROM W-PRINTI-RECORD.\n           GO TO PROCESS01-LOOP-COPY.\n       PROCESS01-PTF-APA.\n           GO TO PROCESS01-PTF-PAREN.\n       PROCESS01-PTF-USER.\n           SET IX UP BY 3.\n           GO TO PROCESS01-PTF-PAREN.\n       PROCESS01-PTF-FUNC.\n           SET IX UP BY 4.\n           GO TO PROCESS01-PTF-PAREN.\n       PROCESS01-PTF-PAREN.\n           SET IX UP BY 1.\n           IF IX GREATER THAN 68\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n           IF PX (IX) EQUAL '('\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-GETNUM.\n           IF PX (IX) EQUAL SPACES\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-PAREN.\n           WRITE PRINTO-RECORD FROM W-PRINTI-RECORD.\n           GO TO PROCESS01-LOOP-COPY.\n       PROCESS01-PTF-GETNUM.\n           IF IX GREATER THAN 69\n               WRITE PRINTO-RECORD FROM W-PRINTI-RECORD\n               GO TO PROCESS01-LOOP-COPY.\n           IF PX (IX) EQUAL SPACES\n               SET IX UP BY 1\n               GO TO PROCESS01-PTF-GETNUM.\n           SET IP TO 1.\n           MOVE SPACES TO ADDPTF.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n           SET IX UP BY 1.\n           SET IP UP BY 1.\n           MOVE PX (IX) TO AP (IP).\n       PROCESS01-PTF-ADDPLUS.\n           WRITE PRINTO-RECORD FROM ADDNAME-REC.\n           MOVE SPACES          TO ADDPTF.\n           MOVE SPACES          TO HOLD80.\n           MOVE W-PRINTI-RECORD TO HOLD80.\n           WRITE PRINTO-RECORD FROM HOLD80.\n           GO TO PROCESS01-LOOP-COPY.\n       PROCESS-END.\n           CLOSE PRINTI-FILE PRINTO-FILE.\n           STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TITLES": {"ttr": 3844, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x000\\x01\\x01\\x17?\\x01\\x01\\x17?\\x11W\\x02I\\x02\\xd8\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-06-22T00:00:00", "modifydate": "2001-06-22T11:57:30", "lines": 585, "newlines": 728, "modlines": 0, "user": "WSBG"}, "text": "  CL052B0  CA-1 Release 5.2 Base\n  EAS1102  MVS 3.8 System Assembler     01.01.02\n  EBB1102  MVS 3.8 Basic Control Progra 01.01.02\n  EBT1102  MVS 3.8 BTAM                 01.01.00\n  EDE1102  MVS 3.8 DEMF                 01.01.02\n  EDM1102  MVS 3.8                      01.01.02\n  EDS1102  MVS 3.8 Data Management Supp 01.01.02\n  EDU1B01  Device Support Facilities R1 01.11.00\n  EDU1C01  Device Support Facilities R1 01.12.00\n  EDU1D01  Device Support Facilities R1 01.13.00\n  EDU1E01  Device Support Facilities R1 01.14.00\n  EDU1F01  Device Support Facilities R1 01.15.00\n  EDU1G01  IBM ICKDSF MVS/ESA R16       01.16.00\n  EDU1G01  IBM ICKDSF MVS/ESA R16       01.16.00\n  EDU1191  Device Support Facilities/XA 01.10.00\n  EDU1602  Device Support Facilities/XA 01.06.02\n  EDU1702  Device Support Facilities/XA 01.07.02\n  EDU1802  Device Support Facilities/XA 01.08.02\n  EDU1902  Device Support Facilities/XA 01.09.02\n  EER1100  MVS 3.8 EREP 1.0             01.01.00\n  EER1200  MVS 3.8 EREP 1.0             01.01.00\n  EER1300  MVS 3.8 EREP 1.1             01.01.01\n  EER1400  MVS 3.8 EREP 1.3             01.01.03\n  EER1500  MVS 3.8 EREP 1.5             01.01.05\n  EER2100  MVS 3.8 EREP V2 R1.0         02.01.00\n  EER3500  EREP V3 R5.0                 03.05.00\n  EGA1102  MVS 3.8 Graphic Access Metho 01.01.02\n  EGS1102  MVS 3.8 Graphic Support Pack 01.01.02\n  EIP1102  MVS 3.8 IPCS                 01.01.02\n  EJE1102  MVS 3.8 JES2 R4.1            01.04.01\n  EJE1103  MVS 3.8 JES2 3800 Enhancemen 01.01.03\n  EJS1102  MVS 3.8 JES3                 01.01.02\n  EMF1102  MVS 3.8 MF/1                 01.01.02\n  EMI1102  MVS 3.8 MICR/OCR             01.01.02\n  EMI2220  MVS/SP JES2 V2 R2.0 - MICR/O 02.02.00\n  EML1102  MVS 3.8 MLWS / RJE           01.01.02\n  EMS1102  MVS 3.8 MSS                  01.01.02\n  EPM1102  MVS 3.8 Program Management   01.01.02\n  ESA1102  MVS 3.8 SYSTEM SUPPORT       01.01.02\n  ESS1102  MVS 3.8 Subsystem Services R 01.05.02\n  EST1102  MVS 3.8 System Support       01.05.02\n  ESU1102  MVS 3.8 SU Macros            01.05.02\n  ESY1100  MVS 3.8 SMP                  01.01.00\n  ESY1400  MVS 3.8 SMP 4                01.04.00\n  ETC0108  MVS 3.8 TCAM 10              01.10.00\n  ETC1102  MVS 3.8 ACF/TCAM V1 R1 SCP   01.01.00\n  ETC2102  MVS 3.8 ACF/TCAM V2 R1 SCP   02.01.00\n  ETC2202  MVS 3.8 ACF/TCAM V2 R2 SCP   02.02.00\n  ETC2302  MVS 3.8 ACF/TCAM V2 R3 SCP   02.03.00\n  ETC2402  MVS 3.8 ACF/TCAM V2 R4 SCP   02.04.00\n  ETI1106  MVS 3.8 TIOC                 01.01.06\n  ETV0108  MVS 3.8 TSO/VTAM             01.01.08\n  EUT1102  MVS 3.8 Utilities            01.01.02\n  EVP1102  MVS 3.8 VPSS                 01.01.02\n  EVT0108  MVS 3.8 VTAM 2               01.02.08\n  EVT1102  MVS 3.8 ACF/VTAM V1 R1 - SCP 01.01.02\n  EVT1202  MVS 3.8 ACF/VTAM V1 R2 - SCP 01.02.02\n  EVT1302  MVS 3.8 ACF/VTAM V1 R3 - SCP 01.03.02\n  EXW1102  MVS 3.8 External Writer      01.01.02\n  E00L110  IBM O/V HOST/MVS V.1.1.0     01.01.00\n  E00L112  IBM O/V HOST/MVS V.1.1.2     01.01.02\n  FBB1221  MVS 3.8 Processor Support 2  01.02.01\n  FDM1133  MVS 3.8 3800 Enhancements    01.01.03\n  FDS1122  MVS 3.8 Processor Support 2  01.01.02\n  FDS1133  MVS 3.8 3800 Enhancements    01.01.03\n  FDS1143  Device Support Facilities R2 01.02.00\n  FDS1193  DEVICE SUPPORT FACILITIES    01.01.03\n  FDS1243  Device Support Facilities R3 01.03.00\n  FDS1443  Device Support Facilities R4 01.04.00\n  FDS1543  Device Support Facilities R5 01.05.00\n  FDU1D07  Device Support Facilities R1 01.13.00\n  FDU1D08  Device Support Facilities R1 01.13.00\n  FDU1E07  Device Support Facilities R1 01.14.00\n  FDU1E08  Device Support Facilities R1 01.14.00\n  FDU1F07  ICKDSF1.15 KANJI             01.15.00\n  FDU1F08  ICKDSF1.15 KANJI             01.15.00\n  FDU1F09  ICKDSF1.15 KANJI             01.15.00\n  FDU1G07  DEVICE SUPPORT FACILITIES R1 01.16.00\n  FDU1G08  DEVICE SUPPORT FACILITIES R1 01.16.00\n  FDZ1610  Device Support Facilities R6 01.06.00\n  FDZ1710  Device Support Facilities R7 01.07.00\n  FDZ1810  Device Support Facilities R8 01.08.00\n  FDZ1910  Device Support Facilities R9 01.09.00\n  FER1110  MVS 3.8 EREP 1.0 Product Sup 01.01.00\n  FER1310  MVS 3.8 EREP 1.2 (never rele 01.01.02\n  FER1410  MVS 3.8 EREP 1.3 Exception R 01.01.03\n  FJS1133  MVS 3.8 JES3 3800 Enhancemen 01.01.03\n  FUT1133  MVS 3.8 3800 Enhancements    01.01.03\n  HBB6603  OS/390 BCP 1.3.0             01.03.00\n  HBB6605  MVS/JES2 BCP OS/390 V.2.5.0  02.05.00\n  HBB6606  BCP  DDR BASE V.2.6.0        02.06.00\n  HBB6608  BCP  DDR BASE V.2.8.0        02.08.00\n  HBB7703  BCP  DDR BASE V.2.10.0       02.10.00\n  HBCNC00  SW INFO BASE PLNG. V.2.7.0   02.07.00\n  HBDD110  CICS Appl. Mig. Aid R1.0     01.01.00\n  HBD6602  BULK DATA TRANSFER V1.2.0    01.02.00\n  HBKM300  BOOKMANAGER READ/MVS R3.0    01.03.00\n  HBKP300  BOOKMANAGER BLD/MVS BASE 1.3 01.03.00\n  HBKQ200  BM BOOKSERVE WWW/MVS V.2.1.0 02.01.00\n  HBKQ220  BOOKSERVER OS.390 V.2.8.0    02.08.00\n  HCC1102  CICS/DDM                     01.01.00\n  HCI5100  CICS/ESA V.1.1.0             01.01.00\n  HCI5200  CICS/ESA TS BASE V.1.2.0     01.02.00\n  HCI5300  CICS  TS  BASE   V.1.3.0     01.03.00\n  HCKVB00  COOP. DEV. ENV. 370 V1.2.0   01.02.00\n  HCM1210  IBM MVS/HCM BASE V.2.4.0     02.04.00\n  HCM1310  HMC BASE FOR OS/390 V.2.7.0  02.07.00\n  HCPT270  SYSTEM SSL BASE V.2.7.0      02.07.00\n  HCPT280  SYSTEM SSL BASE V.2.8.0      02.08.00\n  HCPT290  SYSTEM SSL BASE V.2.9.0      02.09.00\n  HCRP210  ICSF V.2.1.0                 02.01.00\n  HCRP220  ICSF/MVS OS/390 V.2.6.0      02.06.00\n  HCRP230  ICSF/MVS OS/390 V.2.9.0      02.09.00\n  HCRY270  OCSF BASE     V.2.7.0        02.07.00\n  HCRY280  OCSF BASE     V.2.8.0        02.08.00\n  HCRY290  OCSF BASE     V.2.9.0        02.09.00\n  HCS6031  HCD OS/390 BASE V.1.3.0      01.03.00\n  HCS6051  HCD OS/390 BASE V.2.5.0      02.05.00\n  HCS6091  HCD OS/390 BASE V.2.9.0      02.09.00\n  HDHC140     DCE APPL SUPPORT V2.4.0   02.04.00\n  HDHC150  O/E DCE AS        V.2.5.0    02.05.00\n  HDHC170  O/E DCE AS        V.2.7.0    02.07.00\n  HDL1102  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  HDL1122  PL/I V2 R2.1 Opt Comp. Lib a 02.01.00\n  HDL1202  PL/I V2 R3.0 Opt Comp. Lib a 02.03.00\n  HDZ11D0  DFSMS/MVS  BASE V.1.4.0      01.04.00\n  HDZ11EH  CONFIGHFS OS/390  V.1.5.0    01.05.00\n  HDZ11E0  DFSMS/MVS INSTALL V.1.5.0    01.05.00\n  HDZ11F0  DFSMS/MVS BASE V.2.10.0      02.10.00\n  HDZ11SE  DFSMS/MVS NFS CLIENT V.1.3.0 01.03.00\n  HDZ11SM  DFSMS/MVS NFS O/E S.S.S.V1.3 01.03.00\n  HDZ11TC  NFS CLIENT OS/390 V.2.6.0    02.06.00\n  HDZ11TS  NFS SERVER OS/390 V.2.6.0    02.06.00\n  HEJS100  D.G.W. SRV. EXPO.      V.5.0 05.00.00\n  HEJS110  WEBSPH AS BASE V.2.7.0       02.07.00\n  HEJS120  WEBSPH AS BASE V.2.8.0       02.08.00\n  HEP1B00  EMULATION PROGRAM            01.11.00\n  HEP1C00  EMULATION PROGRAM  V.1.12.0  01.12.00\n  HEP1E00  EMULATION PROGRAM  V.1.14.0  01.14.00\n  HEP1005  Emulation Program R10.0      01.10.00\n  HEZ6604  OS/390 POLITE/MVS V.2.4.0    02.04.00\n  HEZ6605  OS/390 AET BASE   V.2.5.0    02.05.00\n  HEZ6606  OS/390 EZ/AET BASE V.2.6.0   02.06.00\n  HEZ6607   OS/390 EZ/AET BASE V.2.7.0  02.07.00\n  HFP2102  File Transfer Program V2 R1  02.01.00\n  HFP2202  File Transfer Program V2 R2  02.02.00\n  HFST101  FFST/ESA R2.0                01.02.00\n  HFST101  FFST/ESA R2.0                01.02.00\n  HFWL141  DCE FIREWALL BASE   V.2.5.0  02.05.00\n  HFWL161  FIREWALL BASE OS/390 V.2.6.0 02.06.00\n  HFWL171  FIREWALL BASE OS/390 V.2.7.0 02.07.00\n  HFWL181  FIREWALL BASE OS/390 V.2.8.0 02.08.00\n  HFWL2A0  SECSRVR FIREWALL BASE V2.10. 02.10.00\n  HFX1102  3270 PC File Transfer R1.0 - 01.01.00\n  HFX1112  3270 PC File Transfer R1.1 - 01.01.01\n  HGD3200  GDDM/MVS V3 R2.0             03.02.00\n  HGD3201  GDDM/PGF V2 R1.3             02.01.03\n  HHL2102  PL/I V2 R1.0 Opt Comp. Lib a 02.01.00\n  HHL2202  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  HHL2222  PL/I V2 R2.1 Opt Comp. Lib a 02.02.01\n  HHL2302  PL/I V2 R3.0 Opt Comp. Lib a 02.03.00\n  HIF4402  ISPF DM BASE V.4.2.1         04.02.01\n  HIF4502  ISPF BASE & ENG. V.2.5.0     02.05.00\n  HIF4802  ISPF BASE & ENG. V.2.8.0     02.08.00\n  HIL2204  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  HIMN110  NETQUESTION OS/390 V.2.4.0   02.04.00\n  HIMN120  NETQUESTION OS/390 V.2.5.0   02.05.00\n  HIMN130  NETQUESTION OS/390 V.2.6.0   02.06.00\n  HIMN210  OS/390 TEXT SEARCH V.2.7.0   02.07.00\n  HIMN220  OS/390 TEXT SEARCH V.2.8.0   02.08.00\n  HIMN230  OS/390 TEXT SEARCH V.2.9.0   02.09.00\n  HIMW300  IBM I.C.S.S. OS/390 V.2.2.0  02.02.00\n  HIMW460  DOMINO GO WEBSRVR. V.4.6.1   04.06.01\n  HIMW500  DOMINO GO WEBSRVR. BASE V5.0 05.00.00\n  HIMW510  IBM HTTP SERVER V.2.7.0      02.07.00\n  HIMW520  IBM HTTP SERVER V.2.8.0      02.08.00\n  HIO1104  IOCP                         02.01.03\n  HIO1104  IOCP                         02.01.03\n  HIO1104  IOCP                         02.01.03\n  HIPM110  PM FRAMEWORK/2 FOR MVS 3.2.0 03.02.00\n  HIR2101  IBM IRLM DB MANAGER 5.1.0    05.01.00\n  HJE4420  MVS/ESA SP JES2 V4 R2.0      04.02.00\n  HJE4430  MVS/ESA SP JES2 V4 R3.0      04.03.00\n  HJE5510  MVS/ESA JES2 V5 R1.0         05.01.00\n  HJE5520  MVS/ESA SP JES2 V5 R2.0      05.02.00\n  HJE6601  MVS/ESA SP JES2 V1 R1.0      01.01.00\n  HJE6603  OS/390 BASE 1.3.0            01.03.00\n  HJE6604  OS/390 JES 2 BASE V.2.4.0    02.04.00\n  HJE6605  OS/390 JES 2 BASE V.2.5.0    02.05.00\n  HJE6607  JES2 BASE    OS/390 V.2.7.0  02.07.00\n  HJE6608  JES2 BASE    OS/390 V.2.8.0  02.08.00\n  HJS6603  OS/390 JES 3 BASE 1.3.0      01.03.00\n  HJS6604  OS/390 JES 3 BASE 2.4.0      02.04.00\n  HJS6606  OS/390 JES 3 BASE 2.6.0      02.06.00\n  HJS6608  OS/390 JES 3 BASE 2.8.0      02.08.00\n  HJS6609  OS/390 JES 3 BASE V.2.9.0    02.09.00\n  HLBR102  C/370 Library R1.0           01.01.00\n  HLB4701  C/C++ COMPILER  OS/390 V.2.4 02.04.00\n  HLB4801  C-COMPILER OS/390 V.2.6.0    02.06.00\n  HLB6609  C-COMPILER OS/390 V.2.9.0    02.09.00\n  HLC4731  C/C++ CL SOURCE OS/390 V.2.4 02.04.00\n  HLC4831  C/C++ CL SOURCE OS/390 V.2.6 02.06.00\n  HLDP170  LDAP CLIENT V.2.7.0          02.07.00\n  HLE6607  LANGUAGE ENV. BASE  V.2.7.0  02.07.00\n  HLE6608  LANGUAGE ENV. BASE  V.2.8.0  02.08.00\n  HLE6609  LANGUAGE ENV. OS/390 V.2.9.0 02.09.00\n  HLR2120  CICS PL. SYS MNGR. 1.2.0     01.02.00\n  HLR2130  CICS PL. SYS MNGR. 1.3.0     01.03.00\n  HLR2140   CICSPLEX BS/RMAS V.1.3.0    01.03.00\n  HLR2140   CICSPLEX BS/RMAS V.1.3.0    01.03.00\n  HMB3140  DCE BASE SERVICES 2.4.0      02.04.00\n  HMB3150  DCE BASE SERV.    V.2.5.0    02.05.00\n  HMB3160  DCE BASE SERV.    V.2.6.0    02.06.00\n  HMB3170  DCE BASE SERV.    V.2.7.0    02.07.00\n  HMB3190  DCE BASE SERV.    V.2.9.0    02.09.00\n  HMK6600  IBM IMS/ESA T/M SERV. V.6.1. 06.01.00\n  HML7110  IBM MQM MVS/ESA              01.01.00\n  HML7112  IBM MQM MVS/ESA 1.1.1        01.01.01\n  HML7115  IBM MQM MVS/ESA 1.1.2        01.01.02\n  HML7118  IBM MQM MVS/ESA 1.1.3        01.01.03\n  HML7122  IBM MQSERIES MVS/ESA V.1.1.4 01.01.04\n  HML7130  IBM MQSERIES MVS/ESA V.1.2.0 01.02.00\n  HMOS100  PSF.IP.PRINTWAY V.2.2.0      02.02.00\n  HMOS280  PSF.IP.PRINTWAY V.2.8.0      02.08.00\n  HMP1A00  SMP/E BASE OS/390 V.1.3.0    01.03.00\n  HMP1B00  SMP/E BASE OS/390 V.2.5.0    02.05.00\n  HMP1C00  SMP/E BASE OS/390 V.2.7.0    02.07.00\n  HMQ4120  HIGH LEVEL ASSEMBLER R1.2.0  01.02.00\n  HMQ4130  HIGH LEVEL ASSEMBLER R1.3.0  01.03.00\n  HMR6160  OS/390 LANS/MVS HOST V.1.1.0 01.01.00\n  HMR7170  OS/390 LANS/MVS HOST V.2.5.0 02.05.00\n  HMWL510  IBM LANG. ENV. MVS  BASE 1.5 01.05.00\n  HMWL610  IBM LE EXEC LIB. OS/390 V1.2 01.02.00\n  HMWL710  OS/390 LE ENV BASE V.1.3.0   01.03.00\n  HMWL810  OS/390 LE ENV BASE V.2.4.0   02.04.00\n  HMWL910  L/E 1.9 BASE OS/390 V.2.6.0  02.06.00\n  HNC7102  ACF/NCP V7 R1.0              07.01.00\n  HNC7202  ACF/NCP V7 R2.0              07.02.00\n  HNC7303  ACF/NCP V7 R3.0              07.03.00\n  HNC7402  ACF/NCP V7 R4.0              07.04.00\n  HNC7502  ACF/NCP V7 R5.0              07.05.00\n  HNC7602  ACF/NCP V7 R6.0              07.06.00\n  HNC7702  ACF/NCP V7 R7.0              07.07.00\n  HNC7802  ACF/NCP V7 R8.0              07.08.00\n  HNET280  PSF NETSPOOL OS/390 V.2.8.0  02.08.00\n  HOPI100  PRINT INTERFACE OS/390 V.2.5 02.05.00\n  HOPI280  PRINT INTERFACE OS/390 V.2.8 02.08.00\n  HOT1160  OPENEDITION APPL SERV. V2.4. 02.04.00\n  HOT1170  OPENEDITION APPL SERV. V2.5. 02.05.00\n  HOT1180  OPENEDITION APPL SERV. V2.6. 02.06.00\n  HOT6607  MVS/APPC     OS/390 V.2.7.0  02.07.00\n  HOT6608  UNIX SSAS BASE V.2.8.0       02.08.00\n  HOT6609  UNIX SSAS BASE V.2.9.0       02.09.00\n  HOX3102  Info/System V3 R1.0          03.01.00\n  HOY3102  Info/Management V3 R1.0      03.01.00\n  HOZ3102  Info/System V3 R1.0          03.01.00\n  HPGP100  Page Printer Formatting Aid  01.01.00\n  HPL2102  PL/I V2 R1.0 Opt Comp. Lib a 02.01.00\n  HPL2202  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  HPL2222  PL/I V2 R2.1 Opt Comp. Lib a 02.02.01\n  HPL2302  PL/I V2 R3.0 Opt Comp. Lib a 02.03.00\n  HPRF102  PSF V2 R1.0                  02.01.00\n  HPRF220  PSF  V2 R2.0                 02.02.00\n  HPRF220  PSF  V2 R2.0                 02.02.00\n  HPRF226  P.S.F. NETSPOOL V.2.2.0      02.02.00\n  HPRF310   P.S.F. BASE          V.3.1. 03.01.00\n  HPZ8200  IBM NETVIEW BASE V.1.1.0     01.01.00\n  HPZ8300  TME NETVIEW BASE V.1.2.0     01.02.00\n  HPZ8330  NETVIEW C R/T LIB. 1.2.0     01.02.00\n  HPZ8400  TME NETVIEW BASE V.1.3.0     01.03.00\n  HPZ8500  NETVIEW SYS. SER. BASE V.1.4 01.04.00\n  HQG1406  Publishing Systems Bookmaste 01.04.00\n  HQN2110  PSF/MVS                      02.01.01\n  HQN2112  PSF/MVS                      02.01.01\n  HQV1103  Netview Distribution Mgr. R1 01.01.00\n  HQV1170  NETVIEW D/M BASE       V.1.7 01.07.00\n  HQV1213  NETVIEW DM                   01.01.00\n  HQV1223  Netview Distribution Mgr. R2 01.02.00\n  HQV1303  Netview Distribution Mgr. R3 01.03.00\n  HQV1403  Netview Distribution Mgr. R4 01.04.00\n  HQV1503  NETVIEW DISTRIBUTION MGR. R5 01.05.00\n  HQV16A3  NETVIEW D/M V.1.6.1          01.06.01\n  HQV16C3  NETVIEW D/M V.1.6.2          01.06.02\n  HQV1603  NETVIEW DISTRIBUTION MGR. R6 01.06.00\n  HQW7400  OS/390 LAN/RES BASE V.2.4.0  02.04.00\n  HQW7500  OS/390 LAN/RES BASE V.2.5.0  02.05.00\n  HQX1800  OS/390 SDSF BASE V.2.4.0     02.04.00\n  HQX1900  OS/390 SDSF BASE V.2.5.0     02.05.00\n  HRA2102  NTUNE MONITOR FCTLY. 2.1.0   02.01.00\n  HRA2202  NTUNE MONITOR FCTLY. 2.2.0   02.02.00\n  HRA2302  NTUNE MONITOR FCTLY. 2.3.0   02.03.00\n  HRA2402  NTUNE MONITOR FCTLY. 2.4.0   02.04.00\n  HRA2502  NTUNE MONITOR FCTLY. 2.5.0   02.05.00\n  HRA2602  NTUNE MONITOR FCTLY. 2.6.0   02.06.00\n  HRF2240  OS/390 SEC/SERV. RACF V2.4.0 02.04.00\n  HRF2260  SEC/SERV. RACF 2/5 V.2.6.0   02.06.00\n  HRF2608  SEC/SERV. RACF     V.2.8.0   02.08.00\n  HRF7703  SEC. SERVER RACF BASE V.2.10 02.10.00\n  HRM6604  RMF BASE OS/390 V.2.4.0      02.04.00\n  HRM6606  RMF BASE OS/390 V.2.6.0      02.06.00\n  HRM6607  RMF BASE OS/390 V.2.7.0      02.07.00\n  HRO62A0  SYS SSL SEC. LVL-3 V.2.10.0  02.10.00\n  HRO6608  OPN CRYPT ENH PLUG V.2.8.0   02.08.00\n  HRSL150  SEC SRVR-LDAP V.2.5.0        02.05.00\n  HRSL160  SEC SRVR-LDAP V.2.6.0        02.06.00\n  HRSL170  SEC SRVR-LDAP V.2.7.0        02.07.00\n  HRSL180  SEC SRVR-LDAP V.2.8.0        02.08.00\n  HRSL2A0  SEC SRVR-LDAP BASE V.2.10.0  02.10.00\n  HRSS140  OS/390 DCE SEC. SERV. V.2.4. 02.04.00\n  HRSS150  OS/390 DCE SEC. SERV. V.2.5. 02.05.00\n  HRSS160  OS/390 DCE SEC. SERV. V.2.6. 02.06.00\n  HRSS170  OS/390 DCE SEC. SERV. V.2.7. 02.07.00\n  HRSS190  OS/390 DCE SEC. SERV. V.2.9. 02.09.00\n  HSAP270  INTEGRATED CLI        V.2.7. 02.07.00\n  HSAP280  INTEGRATED CLI        V.2.8. 02.08.00\n  HSAP290  INTEGRATED CLI        V.2.9. 02.09.00\n  HSLW110  IBM SVF/MVS V.1.1.0          01.01.00\n  HSM1F00  DFSORT V.1.13.0              01.13.00\n  HSM1G00  DFSORT/MVS V.1.14.0          01.14.00\n  HSP4410  ACF/SSP V4 R1.0              04.01.00\n  HSP4420  ACF/SSP V4 R2.0              04.02.00\n  HSP4430  ACF/SSP V4 R3.0              04.03.00\n  HSP4440  ACF/SSP V4 R4.0              04.04.00\n  HSP4450  ACF/SSP V4 R5.0              04.05.00\n  HSP4460  ACF/SSP V4 R6.0              04.06.00\n  HSP4470  ACF/SSP V4 R7.0              04.07.00\n  HSP4480  ACF/SSP V4 R8.0              04.08.00\n  HSR1401  DCF R4.0 Base                01.04.00\n  HSWF100  MVS/SP JES2 V3 R1.0 ESCON DI 03.01.03\n  HSWK2A0  OS/390 SECSRVR V.2.10.0      02.10.00\n  HTCP320  TCP/IP FOR MVS V.3.2.0       03.02.00\n  HTCP340  TCP/IP BASE    V.2.5.0       02.05.00\n  HTCP350  COMSRVR IP NON-HFS    V.2.6. 02.06.00\n  HTCP370  COMSRVR IP NON-HFS    V.2.7. 02.07.00\n  HTCP380  SECUREWAY COMM. V.2.8.0      02.08.00\n  HTE26D2  TSO/EXTENSION V2 R4.0 MVS/ES 02.04.00\n  HTKT140  ENCINA TOOLKIT       V.2.4.0 02.04.00\n  HTKT170  ENCINA TOOLKIT       V.2.7.0 02.07.00\n  HTV4721  C/C++ CL LIB.          V.2.4 02.04.00\n  HTV4821  STANDARD CLS. LIB.     V.2.6 02.06.00\n  HTV6609  C/C++ LIBS. BASE       V.2.9 02.09.00\n  HUNI2A0  UNICODE BASE         V.2.10. 02.10.00\n  HVRL100  Overlay Generation Language  01.01.00\n  HVS1202  Personal Services/370 R2.0   01.02.00\n  HVT4401  ACF/VTAM  VER.4.4.0          04.04.00\n  HVT4411  VTAM 411 OS/390 V.2.5.0      02.05.00\n  HVT4501  COM/SER VTAM V.2.6.0         02.06.00\n  HVT4701  COM/SER SNA OS/390 V.2.7.0   02.07.00\n  HVT4801  COM/SER SNA OS/390 V.2.8.0   02.08.00\n  HWJ9110  REXX/Library R1.0            01.01.00\n  HWJ9133  SAA REXX/370 LIB. V1.3.0     01.03.00\n  H0AL210  SER. COMP. DB2 INSTR. V.2.2. 02.02.00\n  H0B5110  IBM REXX/CICS DEV. SYS. 1.1. 01.01.00\n  H0B5110  IBM REXX/CICS DEV. SYS. 1.1. 01.01.00\n  H0B7110  REXX DEV. SYS CICS V.1.1.0   01.01.00\n  H0B7110  REXX DEV. SYS CICS V.1.1.0   01.01.00\n  H0GG120  VISUALLIFT FOR MVS V.1.1.1   01.01.01\n  H0GG121  OS/390 VISUALLIFT RTE V.1.1. 01.01.01\n  H0GI200  IBM OSA/SF  V.1.2.0          01.02.00\n  H0GI300  IBM OSA/SF BASE OS/390 V.2.1 02.01.00\n  H0H2140  IBM DCE/DSF MVS BASE V.2.4.0 02.04.00\n  H0H2150  O/E DCE DSF       V.2.5.0    02.05.00\n  H0H2160  O/E DCE DSF BS. OS/390 V.2.6 02.06.00\n  H0H2170  O/E DCE DSF BS. OS/390 V.2.7 02.07.00\n  H0H2180  O/E DCE DSF BS. OS/390 V.2.8 02.08.00\n  H0H2190  O/E DCE DSF BS. OS/390 V.2.9 02.09.00\n  H0Z2110  REXX CICS COMMON. 1.1.0      01.01.00\n  H0Z2110  REXX CICS COMMON. 1.1.0      01.01.00\n  H08K410  OS/390 SOM R/T LIB. V.2.4.0  02.04.00\n  H08K411  OS/390 SOM ADE   V.2.4.0     02.04.00\n  H23H100  OS/390 CONN. SERV. V.1.1.0   01.01.00\n  H24P111  BASE PERF ANAL.        V.2.4 02.04.00\n  H25I625            ENDPOINT V.3.6.1   03.06.01\n  JBB66N1  MVS/ESA BCP ENG.     V.1.1.0 01.01.00\n  JBB6604  MVS/ESA BCP DDR  V.2.4.0     02.04.00\n  JBB6607  BCP DDR BASE OS/390 V.2.7.0  02.07.00\n  JBB6609  BCP DDR BASE OS/390 V.2.9.0  02.09.00\n  JBD6201  BULK DATA TRANSFER FTF V.1.2 01.02.00\n  JBD6202  BULK DATA TRANSFER NJE V.1.2 01.02.00\n  JBKM310  BOOKMANAGER READ/MVS R3.0    01.03.00\n  JBKP310  BOOKMANAGER BLD/MVS ENU. 1.3 01.03.00\n  JBT1112  BTAM/SP R1.0                 01.01.00\n  JCI510A  CICS WEB SERV. ENG.  V.1.1.0 01.01.00\n  JCI510B  CICS WEB SERV. JPN.  V.1.1.0 01.01.00\n  JCI510C  CICS WEB SERV. CHINESE V1.1. 01.01.00\n  JCI5101  CICS COBOL LANG PTF V.1.1.0  01.01.00\n  JCI5102  CICS PL/I LANG PTS  V.1.1.0  01.01.00\n  JCI5103  CICS C LANG. PTS.   V.1.1.0  01.01.00\n  JCI5106  DB2/CICS ADAPTER    V.1.1.0  01.01.00\n  JCI5107  CICS/ESA EXCI FT.   V.1.1.0  01.01.00\n  JCI5202  CICS PLI LANGUAGE PTS. V1.2. 01.02.00\n  JCI5203  C LANGUAGE PARTS      V.1.2. 01.02.00\n  JCI530D   CICS JAVA FEAT.  V.1.3.0    01.03.00\n  JCI530D   CICS JAVA FEAT.  V.1.3.0    01.03.00\n  JCI530E   CICS JAVA FEAT.  V.1.3.0    01.03.00\n  JCI5302   PLI  LANG. PARTS V.1.3.0    01.03.00\n  JCKVB03  COOP. DEV. ENV. 370 V1.2.0   01.02.00\n  JCM12N0  IBM MVS/HCM ENG. V.2.4.0     02.04.00\n  JCS6033  HCD OS/390 ENG. V.1.3.0      01.03.00\n  JCS6053  HCD OS/390 ENG. V.2.5.0      02.05.00\n  JCS6092  HCD HFS BASE/ENG. V.2.9.0    02.09.00\n  JDL1112  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  JDL1114  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  JDL1132  PL/I V2 R2.1 Opt Comp. Lib a 02.02.01\n  JDL1134  PL/I V2 R2.1 Opt Comp. Lib a 02.02.01\n  JDL1212  PL/I V2 R3.0 Opt Comp. Lib a 02.03.00\n  JDL1214  PL/I V2 R3.0 Opt Comp. Lib a 02.03.00\n  JDZ11DB  DFSMS/MVS ENG. PNLS. V.1.4.0 01.04.00\n  JDZ11EB  DFSMS ENG. PANELS V.1.5.0    01.05.00\n  JDZ11FB  DFSMS STORAGE ENU. V.2.10.0  02.10.00\n  JDZ11FC  DFSMS PANELS JPN. V.2.10.0   02.10.00\n  JEJS10A  D.G.W. SRV. EXP.       V.5.0 05.00.00\n  JHL2112  PL/I V2 R1.0 Opt Comp. Lib a 02.01.00\n  JHL2114  PL/I V2 R1.0 Opt Comp. Lib a 02.01.00\n  JIF4404  ISPF CLIENT SERV. V4.2.1     04.02.01\n  JIF4405  ISPF C/S RUNTIME  V4.2.1     04.02.01\n  JIF4410  ISPF DM ENGLISH   V4.2.1     04.02.01\n  JIF4470  ISPF S.C.L.M.     V.4.2.1    04.02.01\n  JIL2212  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  JIL2214  PL/I V2 R2.0 Opt Comp. Lib a 02.02.00\n  JIMW301  IBM I.C.S.S. OS/390 V.2.2.0  02.02.00\n  JIMW46A  DGW NON-SEC ENG.   V.4.6.1   04.06.01\n  JIMW461  DGW NA SEC ENG.    V.4.6.1   04.06.01\n  JIMW50A  D.G.W. SRV. EXP.       V.5.0 05.00.00\n  JIMW501  D.G.W. NA SECURE       V.5.0 05.00.00\n  JJE42J1  MVS/ESA SP JES2 V4 R2.0 JPN  04.02.00\n  JJE42N1  MVS/ESA SP JES2 V4 R2.0 ENU  04.02.00\n  JLB4702  C/C++ COMPILER  ENG.   V.2.4 02.04.00\n  JLB4802  C/C++ COMPILER  OS/390 V.2.6 02.06.00\n  JLB6619  C/C++ FRONT END   V.2.9.0    02.09.00\n  JLE66H7  LANGUAGE ENV.   HFS    V.2.7 02.07.00\n  JLE66H8  LANGUAGE ENV.   HFS    V.2.8 02.08.00\n  JLE66H9  LANGUAGE ENV.   HFS    V.2.9 02.09.00\n  JLR2121  CICS PL. SYS MNGR. 1.2.0     01.02.00\n  JLR2131  CICS PL. S/M CMAS V.1.3.0    01.03.00\n  JLR2143   CICSPLEX SM WUI  V.1.3.0    01.03.00\n  JMB3142  DCE DES/CDMF      2.4.0      02.04.00\n  JMB3152  DCE CDMF          V.2.5.0    02.05.00\n  JMB3162  DCE CDMF          V.2.6.0    02.06.00\n  JMB3172  DCE CDMF          V.2.7.0    02.07.00\n  JMK6601  IBM DB MNGR. SERV.    V.6.1. 06.01.00\n  JML7113  IBM MQM MVS/ESA 1.1.1        01.01.01\n  JML7116  IBM MQM MVS/ESA 1.1.2        01.01.02\n  JML7119  MQM MVS/ESA ENG. 1.1.3       01.01.03\n  JML7121  MQM NON-CICS MOVER V.1.1.3   01.01.03\n  JML7123  IBM MQSERIES US/ENG. V.1.1.4 01.01.04\n  JML7125  IBM MQSERIES CICS MOVER V1.1 01.01.04\n  JML7127  IBM MQSERIES U/C ENG. V.1.1. 01.01.04\n  JML7131  IBM MQSERIES MVS/ESA ENG. 1. 01.02.00\n  JML7132  IBM MQSERIES MVS/ESA JPN  1. 01.02.00\n  JML7133  IBM NON-CICS MOVER V.1.2.0   01.02.00\n  JML7134  IBM MQSERIES MVS/ESA CHS  1. 01.02.00\n  JML7135  IBM MQSERIES UC ENGLISH V1.2 01.02.00\n  JML7137  IBM MQSERIES INT GATEWAY  1. 01.02.00\n  JML7138  IBM MQ CICS BRIDGE BS. V.1.2 01.02.00\n  JML7139  IBM MQ CICS  UC ENGLISH V1.2 01.02.00\n  JML7140  IBM MQ CICS  US ENGLISH V1.2 01.02.00\n  JML7141  IBM MQSERIES CICS JPN.    1. 01.02.00\n  JML7142  IBM MQSERIES CICS CHS.    1. 01.02.00\n  JML7143  IBM INTERLINK SNS/TCP V.1.2. 01.02.00\n  JMP1A01  SMP/E ENG. OS/390 V.1.3.0    01.03.00\n  JMP1C0B  PLNG/MIR ASST. V.2.7.0       02.07.00\n  JMQ412A  HIGH LEVEL ASSM. TLKT V.1.2. 01.02.00\n  JMQ413A  HIGH LEVEL ASSM. TLKT V.1.3. 01.03.00\n  JMR616N  OS/390 LANS/MVS ENG. WKSTN   01.01.00\n  JMWL51B  LE CEL M/C ENG V.1.5.0       01.05.00\n  JMWL51F  LE C/C++ NL RESC.   V.1.5.0  01.05.00\n  JMWL52B  LE COBOL M/C ENG.   V.1.5.0  01.05.00\n  JMWL520  LE COBOL LIBRARY    V.1.5.0  01.05.00\n  JMWL53B  LE PL/I M/C ENG.    V.1.5.0  01.05.00\n  JMWL530  LE PL/I LIBRARY     V.1.5.0  01.05.00\n  JMWL54B  LE FORTRAN M/C ENG. V.1.5.0  01.05.00\n  JMWL540  LE FORTRAN LIBRARY  V.1.5.0  01.05.00\n  JMWL55B  LE C/C++ M/C ENG.   V.1.5.0  01.05.00\n  JMWL55H  LE C/C++ O/E HFS    V.1.5.0  01.05.00\n  JMWL55S  C/C++ DATA ENCRY. MVS V.1.5. 01.05.00\n  JMWL550  LE C/C++ LIBRARY    V.1.5.0  01.05.00\n  JMWL61B  LE CEL M/C ENG.  OS/390 V1.2 01.02.00\n  JMWL61F  LE C/C++ NL RES. OS/390 V1.2 01.02.00\n  JMWL62B  LE COBOL LIB M/C OS/390 V1.2 01.02.00\n  JMWL620  LE COBOL LIB.    OS/390 V1.2 01.02.00\n  JMWL63B  LE PLI LIB M/C ENG OS/390 1. 01.02.00\n  JMWL630  LE PLI. LIB.     OS/390 V1.2 01.02.00\n  JMWL64B  LE FORTRAN M/C ENG OS/390 1. 01.02.00\n  JMWL640  LE FORTRAN LIB OS/390 V.1.2. 01.02.00\n  JMWL65B  LE C/C++ M/C ENG OS/390 V1.2 01.02.00\n  JMWL65H  LE C/C++ HFS     OS/390 V1.2 01.02.00\n  JMWL650  LE C/C++ LIB.    OS/390 V1.2 01.02.00\n  JMWL71B  OS/390 LE ENV ENG. V.1.3.0   01.03.00\n  JMWL75H  OS/390 LE C/C++ HFS V1.3.0   01.03.00\n  JMWL81B  OS/390 LE ENV ENG. V.2.4.0   02.04.00\n  JMWL85H  OS/390 LE O/E   HFS V.2.4.0  02.04.00\n  JMWL95H  C/C++ OPENEDITION HFS V.2.6. 02.06.00\n  JPRF113  PSF V2 R1.0                  02.01.00\n  JPRF223  PSF OPTN. RES. V2 R2.0       02.02.00\n  JPRF223  PSF OPTN. RES. V2 R2.0       02.02.00\n  JPZ8203  IBM NETVIEW LE/370 V.1.1.0   01.01.00\n  JPZ8204  IBM NETVIEW BASE ENG. V.1.1. 01.01.00\n  JPZ8206  IBM NETVIEW BASE HLL  V.1.1. 01.01.00\n  JPZ8220  NETVIEW PROCEDURE  BS. V.1.1 01.01.00\n  JPZ8224  NETVIEW PROCEDURE  ENU. V1.1 01.01.00\n  JPZ8230  NETVIEW A O N          V.1.1 01.01.00\n  JPZ8240  NETVIEW ENTERPRISE BS. V.1.1 01.01.00\n  JPZ8244  NETVIEW ENTERPRISE ENU. V1.1 01.01.00\n  JPZ8246  NETVIEW ENTERPRISE HLL  V1.1 01.01.00\n  JPZ8250  NETVIEW MSM BASE        V1.1 01.01.00\n  JPZ8254  NETVIEW MSM ENU.        V1.1 01.01.00\n  JPZ8303  NETVIEW LE/370     1.2.0     01.02.00\n  JPZ8304  NETVIEW BASE ENG.  1.2.0     01.02.00\n  JPZ8306  NETVIEW BASE HLL   1.2.0     01.02.00\n  JPZ8307  NETVIEW UNIX CODE V.1.2.0    01.02.00\n  JPZ8320  NETVIEW PROC. BASE V.1.2.0   01.02.00\n  JPZ8324  NETVIEW PROC. ENU. V.1.2.0   01.02.00\n  JPZ8340  N/V ENTERPRISE BASE V1.2.0   01.02.00\n  JPZ8344  N/V ENT/PRS. ENU.   V1.2.0   01.02.00\n  JPZ8346  N/V ENT/PRS. HLL    V1.2.0   01.02.00\n  JPZ8354  N/V WKS/STN. ENU.   V1.2.0   01.02.00\n  JPZ8407  NETVIEW BASE OE ENU. V1.3.0  01.03.00\n  JPZ8420  NETVIEW PROCEDURAL  V.1.3.0  01.03.00\n  JPZ8424  NETVIEW PROCEDURAL-E V.1.3.0 01.03.00\n  JPZ8440  NETVIEW ENTERPRISE   V.1.3.0 01.03.00\n  JPZ8454  WORKSTATION FMID ENU V.1.3.0 01.03.00\n  JPZ8504  NETVIEW SYS. SER. ENU. V.1.4 01.04.00\n  JPZ8510  NETVIEW UNATTENDED BASE 1.4. 01.04.00\n  JPZ8514  NETVIEW UNATTENDED ENU. 1.4. 01.04.00\n  JPZ8517  NETVIEW UNATTENDED USS ENG 1 01.04.00\n  JPZ8520  NETVIEW PROCEDURAL BASE 1.4. 01.04.00\n  JPZ8524  NETVIEW PROCEDURAL ENU. 1.4. 01.04.00\n  JPZ8540  NETVIEW ENTERPRISE BASE 1.4. 01.04.00\n  JRM66N4  RMF ENG. OS/390 V.2.4.0      02.04.00\n  JRM66N6  RMF ENG. OS/390 V.2.6.0      02.06.00\n  JRSL151  DCE LDAP SRV-DES V.2.5.0     02.05.00\n  JRSL161  DCE LDAP SRV-DES V.2.6.0     02.06.00\n  JRSL171  DCE LDAP SRV-DES V.2.7.0     02.07.00\n  JRSS19J  OS/390 DCE SEC. SER. JPN 2.9 02.09.00\n  JSLW1N1  IBM SVF/MVS ENG V.1.1.0      01.01.00\n  JSM1FK0  DFSORT ISMF PNLS. V1.13.0    01.13.00\n  JSM1FN0  DFSORT CULT. SORT SUP.V1.13. 01.13.00\n  JSM1F11  DFSORT ISPF PNL. JPN.1.13.0  01.13.00\n  JSM1F52  DFSORT ISMF JPN. V.1.13.0    01.13.00\n  JSR1411  DCF R4.0 ATMS                01.04.00\n  JSR1412  DCF R4.0 DLF Support         01.04.00\n  JSR1413  DCF R4.0 TSO                 01.04.00\n  JTCP32C  TCP/IP  CICS SOCKETS V.3.2.0 03.02.00\n  JTCP32G  TCP/IP N/W STAT. CLNT. V3.2. 03.02.00\n  JTCP32H  TCP/IP HOST ON DEMAND  V3.2. 03.02.00\n  JTCP32N  TCP/IP NETWORK STAT.   V1.3. 01.03.00\n  JTCP321  TCP/IP CICS SOCKETS V.3.2.0  03.02.00\n  JTCP322  TCP/IP KERBEROS DES V.3.2.0  03.02.00\n  JTCP325  TCP/IP IMS SOCKETS   V.3.2.0 03.02.00\n  JTCP326  TCP/IP  N.P.F.       V.3.2.0 03.02.00\n  JTCP329  TCP/IP O/E OS/390 V.1.3.0    01.03.00\n  JTCP34H  HOST ON DEMAND    V.2.5.0    02.05.00\n  JTCP34P    TCP +           V.2.5.0    02.05.00\n  JTCP34X  XWINDOWS FUNCTION V.2.5.0    02.05.00\n  JTCP342  TCP/IP KERBEROS DES V.2.5.0  02.05.00\n  JTCP346  TCP/IP N.F.P.       V.2.5.0  02.05.00\n  JTCP349  COM SRVR BS-HFS   V.2.5.0    02.05.00\n  JTCP35K   IP SEC. TDES         V.2.6. 02.06.00\n  JTCP35P  H/S WEB ACCESS        V.2.6. 02.06.00\n  JTCP35S   IP/SECURITY          V.2.6. 02.06.00\n  JTCP356  TCP/IP NPF        V.2.6.0    02.06.00\n  JTCP359  COM SRVR BS-HFS   V.2.6.0    02.06.00\n  JTCP37P  H/S WEB ACCESS        V.2.7. 02.07.00\n  JTCP376  TCP/IP NPF        V.2.7.0    02.07.00\n  JTCP379  COM SRVR BS-HFS   V.2.7.0    02.07.00\n  JTCP38P  HIGH SPEED WEB ACESS V.2.8.0 02.08.00\n  JTCP386  ENET CS SEC. N/P/F  V.2.8.0  02.08.00\n  JTCP389  SECUREWAY CS IP HFS V.2.8.0  02.08.00\n  JTCP56A  COM. SRVR. NPF.       V.2.10 02.10.00\n  JTE26D0  TSO/EXTEN. ENG V.2.4.0 MVS/E 02.04.00\n  JTV4722  C/C++ CL LIB. ENG.     V.2.4 02.04.00\n  JTV4822  APP. SUPP. CL/LIB      V.2.6 02.06.00\n  JTV4824  CLS. LIB. HFS/HDR      V.2.6 02.06.00\n  JTV6619  C/C++ O/C LIBRARY      V.2.9 02.09.00\n  JTV6639  C/C++ O/C LIB. HFS     V.2.9 02.09.00\n  JVRL107  Overlay Generation Language  01.01.00\n  JVRL108  Overlay Generation Language  01.01.00\n  JVRL109  Overlay Generation Language  01.01.00\n  J0HL14H  AFP FONTS SYMBOL V.1.1.0     01.01.00\n  J0HL14T  AFP FONTS LATIN1 V.1.1.0     01.01.00\n  J0HL14U  AFP FONTS SYMBOL V.1.1.0     01.01.00\n  J0HL145  AFP FONTS LATIN1 V.1.1.0     01.01.00\n  J0HL146  AFP FONTS SYMBOL V.1.1.0     01.01.00\n  J0HL154  AFP FONTS SYMBOL V.1.1.0     01.01.00\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT118/FILE118.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT118", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}