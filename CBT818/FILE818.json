{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012853000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE818.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE818.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0e'", "DS1TRBAL": "b'\\x85\\xbe'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x9a\\x00\\x06\\x05\\x9a\\x00\\x08\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00S\\x01\\x10\\x00\\x1f\\x01\\x10\\x00\\x1f\\x12\\x08\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-01-01T00:00:00", "modifydate": "2010-01-01T12:08:53", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-479"}, "text": "REGULAR CBT TAPE - VERSION 479    FILE:  818\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT479.FILE818\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 5 MEMBERS COUNTED; CUMULATIVE SIZE IS 169 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   01/01/10    12:08:53    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x10\\x00\\x1f\\x01\\x10\\x00\\x1f\\x12\\x03\\x00*\\x00*\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-01-01T00:00:00", "modifydate": "2010-01-01T12:03:45", "lines": 42, "newlines": 42, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:   zOS Cobol calling amode64: stub proposal\nFrom:      \"Petr Svoboda\" <petr.svoboda@cz.ibm.com>\nDate:      Fri, 1 Jan 2010 13:13:42 +0100\nTo:        <sknutson@cbttape.org>, <sbgolob@cbttape.org>\n\nHello Gentlemen,\n\nI searched several free webpages about calling amode64 modules\nfrom amode31 modules eg. cobol.... I found nothing, so I did some\nsmall assembler stub for this. It is used in test phase by one of\nour customers. I think it might be good idea to allow others to\nuse it and your page seems to be the best choice!!\n\nSo my question is if you agree?\n\nWith happy new year's wish and\n\nMit freundlichen Gr\u00fcssen/ Saludos/ Cordiali Saluti / S pozdravem / Best\nRegards\n\nPetr SVOBODA\nIT specialist\n\nIBM GS Delivery Center Czech republic, s.r.o.\n      Technicka 21, Brno 616 00\n       tel.: +420-533 415 663\n       fax: +420-532 155 199\n       e-mail: Petr_Svoboda@cz.ibm.com\n\nIBM Global Services Delivery Center Czech Republic, s.r.o.\nS\u00eddlo: Brno, Technick\u00e1 2995/21, PSC( 61600\nIC(: 26244535\nZapsan\u00e1 v obchodn\u00edm rejstr(\u00edku, veden\u00e9m Krajsk\u00fdm soudem v\nBrne(odd\u00edl C, vlo ka 39922\n\nIBM Global Services Delivery Center Czech Republic, s.r.o.\nRegistered address: Brno, Technicka 2995/21, Zip code: 61600\nCompany ID: 26244535\nEntered in the Commercial Register maintained by the Regional\nCourt in Brno (Part C, Entry 39922)\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE818": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00E\\x01\\x10\\x00\\x1f\\x01\\x10\\x00\\x1f\\x12\\x08\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-01-01T00:00:00", "modifydate": "2010-01-01T12:08:45", "lines": 14, "newlines": 14, "modlines": 0, "user": "CBT-479"}, "text": "//***FILE 818 is from Petr Svoboda and contains an Assembler        *   FILE 818\n//*           stub to call AMODE64 modules from AMODE31 modules     *   FILE 818\n//*           in COBOL.                                             *   FILE 818\n//*                                                                 *   FILE 818\n//*           email:  Petr_Svoboda@cz.ibm.com                       *   FILE 818\n//*                   psvo@centrum.cz                               *   FILE 818\n//*                                                                 *   FILE 818\n//*     I searched several free webpages about calling AMODE64      *   FILE 818\n//*     modules from AMODE31 modules eg. from COBOL....  I found    *   FILE 818\n//*     nothing, so I wrote a small Assembler stub for this.        *   FILE 818\n//*     It is used in test phase by one of our customers.  I        *   FILE 818\n//*     think it might be good idea to allow others to use it       *   FILE 818\n//*     and your page seems to be the best choice!!                 *   FILE 818\n//*                                                                 *   FILE 818\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "A64STUB": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x18\\x01\\t5\\x0f\\x01\\x10\\x00\\x1f\\x16\\t\\x00G\\x00\\x10\\x00B\\xe2\\xe5\\xd6\\xc2\\xd6\\xc4\\xc1@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2009-12-16T00:00:00", "modifydate": "2010-01-01T16:09:18", "lines": 71, "newlines": 16, "modlines": 66, "user": "SVOBODA"}, "text": "A64STUB CSECT\nA64STUB AMODE 31\nA64STUB RMODE 31\n         PRINT OFF\n         IEABRCX DEFINE      LOAD MACRO BRANCHES\n         IEABRCX ENABLE\n         PRINT ON\n********************************************************\n*\n* CALLED FROM COBOL TO ALLOW AMODE64\n*\n*-------------------------------------------------------\n* NEEDS/USAGE\n* 1) LOAD EP=TEST64    CHANGE TO YOUR AMODE64 MODULE\n* 2) CHANGE AMODE IF NECESSARY (AMODE31 CALLS DEFAULTED)\n*    - ?MODE 31     <----LINE TO ?MODE 24\n*    - SAM31        <----LINE TO SAM24\n* 3) CHECK RETURN CODES SECTION IF THIS MODULE ERROR CODE IS OK\n* 4) CALL THIS MODULE AS YOU WOULD CALL DESIRED 64B MODULE\n*-------------------------------------------------------\n* MODULE IS REUSABLE, NOT REENTRANT\n* FIRST RUN LOADS AND SAVES ENTRY POINT OF AMODE 64 MODUL\n* NEXT RUNS REUSE THIS ADDRESS <-- RENT FROM THIS POINT\n*\n* THIS AVOIDS EXCESSIVE IO USING LOAD/DELETE OR LINKX\n* AND ALSO ABENDS OVERFLOWING RESPONSIBILITY COUNT AFTER 32K\n* LOAD ITERATIONS\n*-------------------------------------------------------\n* RETURN CODES:\n* IN CASE MODUL ENDS IN ERROR (LOAD MACRO CANNOT LOAD)\n* CC IS SET TO X'FFFFFFF...'\n* OTHERWISE CC IS COPIED FROM AMODE64 MODULES'S CC\n* PLEASE MAKE SURE X'FFFF...' IS NOT IN CONFLICT WITH SOME ERROR\n* FROM AMODE 64 MODULE!!!\n*-------------------------------------------------------\n* AUTHOR: PETR SVOBODA\n* EMAIL:  PETR.SVOBODA@CZ.IBM.COM\n*         PSVO@CENTRUM.CZ\n*****************************\n         SYSSTATE ASCENV=P\n         BAKR  14,0                SAVE CALLERS ENV\n         XGR   5,5                 CLEAR ALL 64B\n         LR    5,1                 LOAD 32BITS OF PARAMETERS ADDRESS\n         LARL  12,C1               ADRESABILITY CONSTS\n         USING (C1,C2),12\n         LG    15,EPA              LOADED ALREADY?\n         LTR   15,15\n         JNZ   BRANCH              YES JUST BRANCH\n         LOAD  EP=TEST64           NO LOAD\n         LTR   15,15\n         JNZ   ENDERR              CC=FFFF\n         LR     6,0\n         BCTR   6,0                BIT64=1 FOR AMODE64 MODULE CLEAR IT\n         LLGTR  15,6               SET VALID 64B ADDRESS\n         STG   15,EPA              AND SAVE IT FOR NEXT RUN\nBRANCH   DS    0H\n         SAM64 ,                   AMODE SWITCH AND ASM INFORM\n         SYSSTATE ASCENV=P,AMODE64=YES\n         LGR   1,5                 PARAMETERS POINTER RESET\n         BASR  14,15               CALL MODULE\n         SAM31 ,                   SWITCH BACK\nEND      PR    ,                   END USING MODULE CC\nENDERR   LA   15,0                 STUB ERROR FFFFFFF\n         LA   1,1\n         SR   15,1\n         PR\nC1       EQU  *\nEPA      DC    D'0'                FIRST RUN=0, OTHERS EP\n         LTORG\nC2       EQU *\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "A64ZAP": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\t\\x01_\\x01\\x10\\x00\\x1f\\x159\\x00\\x1e\\x00\\x0c\\x00\\x1b\\xe2\\xe5\\xd6\\xc2\\xd6\\xc4\\xc1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-01-15T00:00:00", "modifydate": "2010-01-01T15:39:00", "lines": 30, "newlines": 12, "modlines": 27, "user": "SVOBODA"}, "text": "//SVOBODAZ JOB (ACCT#),BSMF,\n// CLASS=A,MSGCLASS=X,NOTIFY=&SYSUID\n//******************************************************\n//* Job used to update stub to call amode64 module from\n//* amode31 module (eg cobol). it changes hardcoded\n//* amode64 module name that is to be called\n//*-----------------------------------------------------\n//* Necessary Modifications\n//* 1) copy A64STUB to desired STEPLIB\n//* 2) modify SYSLIB according step 1\n//*     ##STEPLIB\n//* 3) modify REP SYSIN statement parameter DATA\n//*    (last block of REP line) to new amode64 module\n//*    in hex. Must be 8bytes padded to right with x'40'\n//*    EG. E3C5E2E3F6F44040 stands for TEST64  (padded\n//*    with 2x final X'40'\n//******************************************************\n//ZAPSTEP  EXEC PGM=AMASPZAP\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DISP=OLD,DSNAME=##STEPLIB\n//*  NAME MEMBER CSECT            WHICH CSECT?\n//*  IDRDATA WHY_CHANGED_TEXT\n//*  REP OFFSET DATA\n//*  DUMP MEMBER CSECT            CONTROL DUMP\n//SYSIN    DD *\n NAME    A64STUB   A64STUB\n IDRDATA SETNEWEP\n REP     0020 E3C5E2E3F6F44040\n DUMP    A64STUB  A64STUB\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT818/FILE818.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT818", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}