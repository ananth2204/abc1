./ ADD NAME=$$INDEX  0103-91249-91291-1109-00019-00011-00000-HOSYS02 00
CONTENTS OF THIS FILE:

ISRUDLP  - REPLACEMENT ISPF/PDF 3.4 PANEL WITH VI & VP ADDED OPTIONS.

VI       - REXX PROGRAM TO DISPLAY VSAM FILE STATS SIMILAR TO
           ISPF/PDF 3.4 INFORMATION DISPLAY FOR NONVSAM CAN ALSO
           BE ISSUED AS 'TSO VI DSNAME' ON COMMAND LINE

VI#1     - VI ISPF DISPLAY PANEL (ISPPLIB)

VP       - SAME AS VI EXCEPT PANEL PRINTS TO ISPF LIST DATASET.

         STEVE KLEEVES
         MAKITA USA INC.
         14930 NORTHAM ST.
         LA MIRADA, CA
         90638-5753
         (714) 522-8088 X4016

./ ADD NAME=ISRUDLP  0100-91122-91122-0853-00052-00052-00000-HOSYS02 00
%--------------------------- DATA SET LIST UTILITY -----------------------------
%OPTION  ===>_ZCMD                                                             +
%
%  blank+- Display data set list%*         %P+ - Print data set list
%  V    +- Display VTOC information only   %PV+- Print VTOC information only
%
+Enter one or both of the parameters below:
+  DSNAME LEVEL %===>_ZDLDSNLV                                    +
+  VOLUME       %===>_ZDLPVL+
%
%
+  INITIAL DISPLAY VIEW    %===>_ZUPIV   +(VOLUME,SPACE,ATTRIB,TOTAL)
+  CONFIRM DELETE REQUEST  %===>_ZUPCD+   (YES or NO)
%
%*+The following line commands will be available when the list is displayed:
%
%B+- Browse data set     %C+- Catalog data set     %F+- Free unused space
%E+- Edit data set       %U+- Uncatalog data set   %=+- Repeat last command
%D+- Delete data set     %P+- Print data set       %VI+- VSAM data set info
%R+- Rename data set     %X+- Print index listing  %VP+- VSAM info print
%I+- Data set information%M+- Display member list
%S+- Information (short) %Z+- Compress data set    %TSO cmd, CLIST or REXX exec
)INIT
  .HELP = ISR34000
  IF (.MSG = &Z)
    .CURSOR = ZCMD
  &ZCMD = &ZUOPT
  &ZUPIV = TRANS (&ZUVIEW 0,VOLUME 1,SPACE 2,ATTRIB 3,TOTAL *,VOLUME)
  IF (&ZUCDR = &Z)
    &ZUCDR = Y
  &ZUPCD = TRANS (&ZUCDR Y,YES N,NO *,*)
)PROC
  IF (&ZCMD ¬= ' ')
    VER (&ZCMD,LIST,P,V,PV)
  &ZUOPT = TRUNC (&ZCMD,2)
  IF (&ZUOPT = 'V ','PV')
    VER (&ZDLPVL,NONBLANK)
  IF (&ZUOPT = '  ','P ')
    IF (&ZDLPVL = ' ')
      VER (&ZDLDSNLV,NONBLANK,MSG=ISRU187)
  &ZUCDR = TRUNC (&ZUPCD,1)
  VER (&ZUCDR,NB,LIST,Y,N)
  &ZVIEW = TRUNC (&ZUPIV,1)
  VER (&ZVIEW,NB,LIST,V,S,A,T)
  &ZUPIV = TRANS (&ZVIEW V,VOLUME S,SPACE A,ATTRIB T,TOTAL *,*)
  &ZUVIEW = TRANS (&ZVIEW V,0 S,1 A,2 T,3 *,*)
)END
/* $SEG(ISRUDLP) COMP(DSLIST)  PROD(MVS):                            */
/* $M0= ENHANC34 M230   860717  641747 :                             */
/* $H0= DSLIST   M230   861016  040100 : FT PTM 294                  */
/* $H1= QUALITY   M310     881216   764700 : PTM #211                */
/* 5665-402 (C) COPYRIGHT IBM CORP 1980, 1989 */
./ ADD NAME=VI       0123-91121-91253-1125-00144-00007-00000-HOSYS02 00
/* REXX */
/**************************************************/
/* VSAM LISTCAT FORMATTED IN ISPF                 */
/**************************************************/
IF SYSVAR(SYSISPF) = 'NOT ACTIVE' THEN DO
   SAY 'ISPF MUST BE ACTIVE TO USE THIS FUNCTION'
   EXIT
END
ARG DSNAME
IF DSNAME = ' ' THEN DO
   SAY "PLEASE ENTER VSAM DATASET NAME"
   PULL DSNAME
END
TDSN = STRIP(DSNAME,,'''')
STATUS=SYSDSN(''''TDSN'''')
IF STATUS ¬= 'OK' THEN DO
    SAY TDSN "NOT FOUND"
    ZDLMSG  = 'NOT CATALOGED'
    VARLIST = 'ZDLMSG'
   "ISPEXEC VPUT (&VARLIST) SHARED"
    EXIT
END
X=OUTTRAP('CLS.')
"LISTC EN('"TDSN"') ALL"
X=OUTTRAP('OFF')
IF POS('NONVSAM',CLS.1) ¬= 0 THEN DO
    SAY TDSN "IS NOT A VSAM DATASET"
    ZDLMSG  = 'ERROR- NONVSAM'
    VARLIST = 'ZDLMSG'
   "ISPEXEC VPUT (&VARLIST) SHARED"
    EXIT
END
IF POS('INDEX',CLS.1) ¬= 0 THEN INDEX = 'Y'
CDATE = SUBSTR(CLS.4,53,8)
EDATE = SUBSTR(CLS.5,53,8)
DO I=8 TO CLS.0
IF POS('ATTRIBUTE',CLS.I) = 6 THEN DO
   I = I + 1
   IF POS('NOUPGRADE',CLS.I) = 8 | POS('UPGRADE',CLS.I) =8 THEN DO
       PARSE VAR CLS.I OPTF
       ITERATE
   END
   KLEN = STRIP(SUBSTR(CLS.I,25,8),,'-')
   ALEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CISZ = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
   RKP  = STRIP(SUBSTR(CLS.I,25,8),,'-')
   MLEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CICA = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
IF POS('RECORDS/CI',CLS.I) ¬=0 THEN I = I + 1
IF POS('AXRKP',CLS.I) ¬=0 THEN I = I + 1
TYPE = 'INDEXED   '
IF POS('NONINDEX',CLS.I) ¬=0 THEN
   TYPE = 'NONINDEX  '
IF POS('NUMBERED',CLS.I) ¬=0 THEN
   TYPE = 'NUMBERED  '
IF POS(' IMBED',CLS.I) ¬=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPT1 OPT2 OPT3 OPT4 OPT5 OPT6 OPT7 OPT8
   I = I + 1
IF POS('NONINDEX',CLS.I) ¬=0 THEN
   TYPE = 'NONINDEX  '
IF POS('NUMBERED',CLS.I) ¬=0 THEN
   TYPE = 'NUMBERED  '
IF POS(' IMBED',CLS.I) ¬=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPTA OPTB OPTC OPTD OPTE
   IF OPTF ¬= 'OPTF' THEN OPTE = OPTF
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('STATISTIC',CLS.I) = 6 THEN DO
   I = I + 1
   RTOT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CISP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   I = I + 1
   RDEL = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CASP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,87,3),,'-')
   I = I + 1
   RINT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CIFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RUPD = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CAFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RRET = STRIP(SUBSTR(CLS.I,21,11),,'-')
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('ALLOCATION',CLS.I) = 6 THEN DO
   I = I + 1
   ATYP = 'cylinders:'
   IF SUBSTR(CLS.I,29,3) = 'ACK' THEN
   ATYP = 'tracks:'
   IF SUBSTR(CLS.I,29,3) = 'ORD' THEN
   ATYP = 'records:'
   BTYP = ATYP
   ARBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SPRI = STRIP(SUBSTR(CLS.I,24,8),,'-')
   URBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SSEC = STRIP(SUBSTR(CLS.I,24,8),,'-')
   LEAVE
END
END
A = 1
DO I=I TO CLS.0
IF POS('INDEX',CLS.I) = 4 THEN LEAVE
IF POS('VOLSER',CLS.I) = 8 THEN DO
   VSER.A = STRIP(SUBSTR(CLS.I,26,6),,'-')
   IF SEQ = 'Y' & A=1 THEN DO
   ARBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,116,3),,'-')
   END
   A = A +1
IF A = 2 THEN DO
   I = I + 1
   IF SEQ = 'Y' THEN DO
   URBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
   LEAVE
   END
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
END
END
END
VOL1 = VSER.1
IF VSER.2 ¬= 'VSER.2' THEN VOL2 = VSER.2
IF VSER.3 ¬= 'VSER.3' THEN VOL3 = VSER.3
ATRK = ARBA/CISZ/CICA*TRKS
UTRK = URBA/CISZ/CICA*TRKS
UPER = UTRK/ATRK*100
ATRK = FORMAT(ATRK,,0)
UTRK = FORMAT(UTRK,,0)
UPER = FORMAT(UPER,,0)
ZDLMSG  = 'INFO - VI     '
VARLIST = 'ZDLMSG'
"ISPEXEC VPUT (&VARLIST) SHARED"
"ISPEXEC DISPLAY PANEL(VI#1)"
./ ADD NAME=VI#1     0128-90318-91249-1607-00036-00026-00000-HOSYS02 00
)ATTR DEFAULT(%+_)
    % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
  ¢ TYPE(TEXT) INTENS(LOW) JUST(RIGHT) CAPS(OFF) COLOR(YELLOW)
    + TYPE(TEXT) INTENS(LOW)  COLOR(BLUE) SKIP(ON)
  # TYPE(OUTPUT) INTENS(HIGH) JUST(LEFT) CAPS(OFF)  COLOR(YELLOW)
  ? TYPE(OUTPUT) INTENS(LOW) JUST(LEFT) CAPS(OFF) COLOR(BLUE)
  @ TYPE(OUTPUT) INTENS(LOW) JUST(RIGHT) CAPS(OFF) COLOR(YELLOW)
    ¬ TYPE(TEXT) INTENS(HIGH) COLOR(RED)
)BODY EXPAND(\\)
+-\-\-%VSAM DATASET INFORMATION+-\-\-
%COMMAND ===>_ZCMD                                                             +
+
¬DATA SET NAME:#TDSN                                        +
+
¬GENERAL DATA:                               CURRENT ALLOCATION:
+   Volume serials:       #VOL1  #VOL2  #VOL3  +Allocated trks:    @ATRK      +
+   Type:                 #TYPE      +          Allocated extents: @EXTS      +
+   Ave record length:    #ALEN    +
+   Max record length:    #MLEN    +        ¬CURRENT UTILIZATION:
+   Key length:           #KLEN  +              Used trks:         @UTRK      +
+   Relative key position:#RKP    +             Used percent:      @UPER      +
+   CI size:              #CISZ    +
+   CI freespace:         #CIFR    +        ¬USAGE DATA:                      +
+   CA freespace:         #CAFR    +            Total records:  @RTOT         +
+   1st extent?ATYP      +#SPRI    +            Records deleted:@RDEL         +
+   Secondary?BTYP      + #SSEC    +            Records inserted:@RINT        +
+                                               Records updated:@RUPD         +
+   Creation date:        #CDATE     +          Records retrieved:@RRET       +
+   Expiration date:      #EDATE     +          CI splits:      @CISP         +
#OPTC            #OPTD        #OPTE            +CA splits:      @CASP         +
#OPT1            #OPT2        #OPT3            #OPT4        #OPT5
#OPT6            #OPT7        #OPT8            #OPTA        #OPTB
)INIT
  &ZCMD = &Z
)PROC
)END
./ ADD NAME=VP       0112-91122-91291-1049-00144-00148-00000-HOSYS02 00
/* REXX */
/**************************************************/
/* VSAM LISTCAT FORMATTED IN ISPF                 */
/**************************************************/
IF SYSVAR(SYSISPF) = 'NOT ACTIVE' THEN DO
   SAY 'ISPF MUST BE ACTIVE TO USE THIS FUNCTION'
   EXIT
END
ARG DSNAME
IF DSNAME = ' ' THEN DO
   SAY "PLEASE ENTER VSAM DATASET NAME"
   PULL DSNAME
END
TDSN = STRIP(DSNAME,,'''')
STATUS=SYSDSN(''''TDSN'''')
IF STATUS ¬= 'OK' THEN DO
    SAY TDSN "NOT FOUND"
    ZDLMSG  = 'NOT CATALOGED'
    VARLIST = 'ZDLMSG'
   "ISPEXEC VPUT (&VARLIST) SHARED"
    EXIT
END
X=OUTTRAP('CLS.')
"LISTC EN('"TDSN"') ALL"
X=OUTTRAP('OFF')
IF POS('NONVSAM',CLS.1) ¬= 0 THEN DO
    SAY TDSN "IS NOT A VSAM DATASET"
    ZDLMSG  = 'ERROR- NONVSAM'
    VARLIST = 'ZDLMSG'
   "ISPEXEC VPUT (&VARLIST) SHARED"
    EXIT
END
IF POS('INDEX',CLS.1) ¬= 0 THEN INDEX = 'Y'
CDATE = SUBSTR(CLS.4,53,8)
EDATE = SUBSTR(CLS.5,53,8)
DO I=8 TO CLS.0
IF POS('ATTRIBUTE',CLS.I) = 6 THEN DO
   I = I + 1
   IF POS('NOUPGRADE',CLS.I) = 8 | POS('UPGRADE',CLS.I) =8 THEN DO
       PARSE VAR CLS.I OPTF
       ITERATE
   END
   KLEN = STRIP(SUBSTR(CLS.I,25,8),,'-')
   ALEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CISZ = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
   RKP  = STRIP(SUBSTR(CLS.I,25,8),,'-')
   MLEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CICA = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
IF POS('RECORDS/CI',CLS.I) ¬=0 THEN I = I + 1
IF POS('AXRKP',CLS.I) ¬=0 THEN I = I + 1
TYPE = 'INDEXED   '
IF POS('NONINDEX',CLS.I) ¬=0 THEN
   TYPE = 'NONINDEX  '
IF POS('NUMBERED',CLS.I) ¬=0 THEN
   TYPE = 'NUMBERED  '
IF POS(' IMBED',CLS.I) ¬=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPT1 OPT2 OPT3 OPT4 OPT5 OPT6 OPT7 OPT8
   I = I + 1
IF POS('NONINDEX',CLS.I) ¬=0 THEN
   TYPE = 'NONINDEX  '
IF POS('NUMBERED',CLS.I) ¬=0 THEN
   TYPE = 'NUMBERED  '
IF POS(' IMBED',CLS.I) ¬=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPTA OPTB OPTC OPTD OPTE
   IF OPTF ¬= 'OPTF' THEN OPTE = OPTF
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('STATISTIC',CLS.I) = 6 THEN DO
   I = I + 1
   RTOT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CISP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   I = I + 1
   RDEL = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CASP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,87,3),,'-')
   I = I + 1
   RINT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CIFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RUPD = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CAFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RRET = STRIP(SUBSTR(CLS.I,21,11),,'-')
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('ALLOCATION',CLS.I) = 6 THEN DO
   I = I + 1
   ATYP = 'cylinders:'
   IF SUBSTR(CLS.I,29,3) = 'ACK' THEN
   ATYP = 'tracks:'
   IF SUBSTR(CLS.I,29,3) = 'ORD' THEN
   ATYP = 'records:'
   BTYP = ATYP
   ARBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SPRI = STRIP(SUBSTR(CLS.I,24,8),,'-')
   URBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SSEC = STRIP(SUBSTR(CLS.I,24,8),,'-')
   LEAVE
END
END
A = 1
DO I=I TO CLS.0
IF POS('INDEX',CLS.I) = 4 THEN LEAVE
IF POS('VOLSER',CLS.I) = 8 THEN DO
   VSER.A = STRIP(SUBSTR(CLS.I,26,6),,'-')
   IF SEQ = 'Y' & A=1 THEN DO
   ARBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,116,3),,'-')
   END
   A = A +1
IF A = 2 THEN DO
   I = I + 1
   IF SEQ = 'Y' THEN DO
   URBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
   LEAVE
   END
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
END
END
END
VOL1 = VSER.1
IF VSER.2 ¬= 'VSER.2' THEN VOL2 = VSER.2
IF VSER.3 ¬= 'VSER.3' THEN VOL3 = VSER.3
ATRK = ARBA/CISZ/CICA*TRKS
UTRK = URBA/CISZ/CICA*TRKS
UPER = UTRK/ATRK*100
ATRK = FORMAT(ATRK,,0)
UTRK = FORMAT(UTRK,,0)
UPER = FORMAT(UPER,,0)
ZDLMSG  = 'INFO - VI     '
VARLIST = 'ZDLMSG'
"ISPEXEC VPUT (&VARLIST) SHARED"
"ISPEXEC DISPLAY PANEL(VI#1) COMMAND(STACKP)"
