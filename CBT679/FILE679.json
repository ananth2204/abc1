{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012602000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE679.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE679.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0f'", "DS1TRBAL": "b'?\\xe2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xc3\\x00\\x02\\x04\\xc3\\x00\\x04\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04B\\x00\\x00\\x01\\x04\\x16?\\x01\\x04\\x16?\\tT\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf6@@@'", "ispf": {"version": "04.66", "flags": 0, "createdate": "2004-06-11T00:00:00", "modifydate": "2004-06-11T09:54:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-466"}, "text": "REGULAR CBT TAPE - VERSION 466    FILE:  679\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT466.FILE679\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   4 MEMBERS COUNTED; CUMULATIVE SIZE IS 378 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   06/11/04    09:54:49    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00G\\x01\\x04\\x15_\\x01\\x04\\x15_\\x08(\\x00\\x16\\x00\\x18\\x00\\x00\\xc1\\xc7\\xe4\\xc9\\xd3\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-06-03T00:00:00", "modifydate": "2004-06-03T08:28:47", "lines": 22, "newlines": 24, "modlines": 0, "user": "AGUILER"}, "text": "From:     Carlos Aguilera <vn0006@heb.com>\nDate:     Tue, 01 Jun 2004 08:57:30 -0500\nTo:       sbgolob@cbttape.org\n\nSam:\n\nI would like to contribute the following REXX exec to the MVS\ncommunity.  It creates input to VISIO from MVS JCL input for\nflowcharting.  It works very well in SPF/PC/PRO and MVS TSO, some\ntidying up may be needed in the generated flowchart, but all the\nelements are correctly created.\n\n\nCarlos Aguilera Sr.\n106 Monticello Avenue\nJefferson, LA 70121-4027\n(504) 828-4953 Home\n(210) 938-3863 Office\n(210) 553-0439 Pager\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE679": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04B\\x00\\x00\\x01\\x04\\x16?\\x01\\x04\\x16?\\tT\\x00\\x16\\x00\\x16\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf6@@@'", "ispf": {"version": "04.66", "flags": 0, "createdate": "2004-06-11T00:00:00", "modifydate": "2004-06-11T09:54:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "CBT-466"}, "text": "//***FILE 679 is from Carlos Aguilera, and contains a REXX exec     *   FILE 679\n//*           to construct a flowchart directly from JCL, via the   *   FILE 679\n//*           VISIO product.                                        *   FILE 679\n//*                                                                 *   FILE 679\n//*           email:  Carlos Aguilera <vn0006@heb.com>              *   FILE 679\n//*                                                                 *   FILE 679\n//*           Carlos Aguilera Sr.                                   *   FILE 679\n//*           106 Monticello Avenue                                 *   FILE 679\n//*           Jefferson, LA 70121-4027                              *   FILE 679\n//*           (504) 828-4953 Home                                   *   FILE 679\n//*           (210) 938-3863 Office                                 *   FILE 679\n//*           (210) 553-0439 Pager                                  *   FILE 679\n//*                                                                 *   FILE 679\n//*      Instructions for use:                                      *   FILE 679\n//*                                                                 *   FILE 679\n//*      Create a temporary member and copy your JCL into it.       *   FILE 679\n//*      invoke this exec VISIO and save the result as a *.CSV      *   FILE 679\n//*      file.  Open this file using VISIO and it will flowchart    *   FILE 679\n//*      it for you.                                                *   FILE 679\n//*                                                                 *   FILE 679\n//*      Works in SPF/PC and TSO.                                   *   FILE 679\n//*                                                                 *   FILE 679\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "VISIO": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x04\\x16?\\x01\\x04\\x16?\\tR\\x01B\\x01B\\x00\\x00\\xc1\\xc7\\xe4\\xc9\\xd3\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-06-11T00:00:00", "modifydate": "2004-06-11T09:52:45", "lines": 322, "newlines": 322, "modlines": 0, "user": "AGUILER"}, "text": "/* visio rexx macro */\n/*---------------------------------------------------------------*/\n/* program: visio.spf                                       */\n/* date:   2000/02/22                                            */\n/* property of: Aguilera Enterprises, Inc.                       */\n/* author:      Carlos Aguilera Sr.                              */\n/*---------------------------------------------------------------*/\n/* function:                                                     */\n/*          generate visio flowcharts from                       */\n/*       jcl job, exec, and dd statements                        */\n/*---------------------------------------------------------------*/\n/* Create a temporary member and copy you JCL into it            */\n/* invoke this exec VISIO and save the result as a *.CSV file    */\n/* Open this file using VISIO and it will flowchart it for you   */\n/*---------------------------------------------------------------*/\n/* Works in SPF/PC and TSO                                       */\n/*---------------------------------------------------------------*/\n/* (c) copyright 2004 aguilera enterprises, inc.                 */\n/*  all rights reserved.                                         */\n/*---------------------------------------------------------------*/\n/* address isredit 'macro noprocess'   */\naddress isredit 'macro'\naddress isredit '(firstr)  = linenum .zfirst'\naddress isredit '(lastr)   = linenum .zlast'\n\nlast  = lastr\ncall prer\ncall readit\naddress isredit 'up max'\ncall deletit\ntstr = 0\ncnt = 0\nexe = 0\ni = 0\no = 0\nx = 0\n/*  */\nshp = 0\nhld = 0\nlnk = 0\n/*  */\ndo until (x = lastr)\n  cnt = 0\n  x = x + 1\n  linea = array.x\n call clearit\n parse var linea test1 test2 test3 test4 test5 test6 test7 test8 test9\n cnt = pos('//*',linea)\n if cnt>0  then do\n   cnt = 0\n  end\n  else do\n   tstr = pos('//',linea)\n   if tstr>0 then call elsejcl\n  end\nend\n/*  */\n    shp = shp + 1\n    lnk = lnk + 1\n    m = 'Shape,'||shp||',@Terminator@,@End of JOB@'\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||exe||','||shp\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n/* change the following line for MVS */\n/* q = \"x'7d'\"   (MVS) */\nq  = \"x'22'\"\n/* change the following line for MVS */\n/* q1 = \"x'50'\"  (MVS) */\nq1 = \"x'26'\"\naddress isredit \"change ',2,2 ' ',1,2 ' all\"\naddress isredit \"change @ \"||q||\" all\"\naddress isredit \"change } \"||q1||\" all\"\naddress isredit 'reset'\naddress isredit 'up max'\naddress isredit 'unnum'\niadsfin = ' '\naddress ispexec;\n\"vput ('iadsfin') profile\"\n         zedsmsg = 'function completed succesfully'\n         zedlmsg = 'exit to your member to view your code'\n         address ispexec 'setmsg msg(isrz001)'\nexit\n/*  */\nreadit:\n  i = 0\n  do while (i < lastr)\n    i = i + 1\n   address isredit '(linex) = line 'i\n    if rc <> 0 then return\n    array.i = linex\n  end\n  return\n/*  */\ndeletit:\n    address isredit 'delete all nx'\n      if rc <> 0 then return\nms = '; Flowchart generated by IADS\\MVS(c) - Aguilera Enterprises Inc.'\n      address isredit \"line_after .zl = '\"ms\"'\"\n  address isredit 'CAPS = OFF'\n  return\n/*  */\n/*  */\nelsejcl:\n   if test2 > ' ' then do\n   select\n     when test2 = 'JOB'    then call jcljob\n     when test2 = 'PROC'   then call jclprc\n     when test2 = 'PEND'   then call pendr\n     when test2 = 'EXEC'   then call jclexe\n     when test2 = 'DD'     then call jcldd\n     when test2 = 'OUTPUT' then call jclout\n     otherwise\n     m = 'a'\n    end\n  end\n  return\n/*  */\njcljob:\n   shp = shp + 1\n    m = 'Template,@Flowchart - Advanced.vst@'\n    o = o + 1\n    parse var test1 v1 '//' v2 ',' v3 .\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    m = 'Shape,'||shp||',@Tagged Process@,@Start JOB '||v2||'@'\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    if shp > 1 then do\n      lnk = lnk + 1\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp-1||','||shp\n      o = o + 1\n      address isredit \"line_after \"o\" = '\"m\"'\"\n    end\n  return\n/*  */\njclprc:\n    shp = shp + 1\n    parse var test1 v1 '//' v2 ',' v3 .\n    m = 'Shape,'||shp||',@External Interactor@,@START PROC '||v2 v3||'@'\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    if shp > 1 then do\n    lnk = lnk + 1\n    m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp-1||','||shp\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    end\n  return\n/*  */\njclexe:\n    shp = shp + 1\n    lnk = lnk + 1\n    exe = shp\n    parse var test1 v1 '//' v2 ' ' v3 .\n   cnt = wordpos('PGM=',test3)\n   if cnt=1  then do\n     cnt = 0\n      parse var test3 'PGM=' v4 ',' v5\n      m = 'Shape,'||shp||',@Create Request@,@Step '||v2||' Program '||v4||'@'\n      if v4 = 'SORT' then do\n        m = 'Shape,'||shp||',@Decision@,@'||v2||' SORT@'\n      end\n      if v4 = 'ICEMAN' then do\n        m = 'Shape,'||shp||',@Decision@,@'||v2||' SORT@'\n      end\n    end\n    else do\n      parse var test3 v4 ',' v5\n      m = 'Shape,'||shp||',@Create Request@,@EXEC PROC '||v2||' '||v4 V5||'@'\n      if v4 = 'SORT90MB' then do\n        m = 'Shape,'||shp||',@Decision@,@'||v2 v4||'@'\n      end\n      if v4 = 'SORT5MB' then do\n        m = 'Shape,'||shp||',@Decision@,@'||v2 v4||'@'\n      end\n      if v4 = 'SORT25MB' then do\n        m = 'Shape,'||shp||',@Decision@,@'||v2 v4||'@'\n      end\n      if v4 = 'SORT40MB' then do\n        m = 'Shape,'||shp||',@Decision@,@'||v2 v4||'@'\n      end\n    end\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    if hld > 1 then do\n        m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||hld||','||shp\n    end\n    else do\n        m = 'Link,@L'||lnk||'@,@Dynamic connector@,,2,'||shp\n    end\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n  return\n/*  */\njclsrt:\n    m = 'Shape,'||shp||',@Decision@,@'||v1||' sort@'\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    if exe > 0 then do\n        m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||hld||','||shp\n    end\n    else do\n        m = 'Link,@L'||lnk||'@,@Dynamic connector@,,1,'||shp\n    end\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n  return\n/*  */\n/*  */\njclout:\n    shp = shp + 1\n    lnk = lnk + 1\n    parse var test1 v1 '//' v2 ',' v3 .\n    parse var test3 v4 ',' v5 .\n    m = 'Shape,'||shp||',@Lined Document@,@'||v1||' '||v4||'@'\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||exe||','||shp\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n  return\n/*  */\n/*  */\njcldd:\n   if exe > 0 then do\n    shp = shp + 1\n    lnk = lnk + 1\n    hld = exe\n    parse var test1 v1 '//' v2 ',' v3 ' ' v6\n    parse var test3 'DSN=' v4 ',' v5 .\n    m = 'Shape,'||shp||',@Disk Storage@,@'||v2||' '||v4||'@'\n/*  IF v2 = 'SYSIN ' then do */\n    IF test3 = '*' then do\n    m = 'Shape,'||shp||',@Deck of cards@,@'||v2||' '||v4||'@'\n    end\n/*  IF v2 = 'SYSOUT ' then do\n    m = 'Shape,'||shp||',@Tagged document@,@'||v2||' '||v4||'@'\n    end\n    IF v2 = 'SYSPRINT ' then do\n    m = 'Shape,'||shp||',@Tagged document@,@'||v2||' '||v4||'@'\n    end\n    IF v2 = 'SYSUOUT ' then do\n    m = 'Shape,'||shp||',@Tagged document@,@'||v2||' '||v4||'@'\n    end */\n/*    IF test3 = 'SYSOUT=' then do */\n   cnt = wordpos('SYSOUT=',test3)\n   if cnt=1  then do\n     cnt = 0\n      m = 'Shape,'||shp||',@Tagged document@,@'||v2||' '||v4||'@'\n    end\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||exe||','||shp\n      IF test3 = '*' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'DD1' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'DD3' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'SYSIN' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'SYSUT1' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'SYSLIN' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'SORTIN' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'SORTIN01' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n      IF v2 = 'SORTIN1' then do\n      m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||shp||','||exe\n      end\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n   end\n  return\n/*  */\n/*  */\npendr:\n    shp = shp + 1\n    lnk = lnk + 1\n    m = 'Shape,'||shp||',@Terminator@,@'||test1||' End of Proc@'\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n    m = 'Link,@L'||lnk||'@,@Dynamic connector@,,'||exe||','||shp\n    o = o + 1\n    address isredit \"line_after \"o\" = '\"m\"'\"\n  return\n/*  */\nprer:\n\n/* q = \"x'7d'\"   (mvs) */\nq = \"x'27'\"\nq1 = \"x'26'\"\naddress isredit \"change \"||q||\" @ all\"\naddress isredit \"change \"||q1||\" } all\"\n\naddress isredit 'reset'\naddress isredit 'up max'\n  return\n/*  */\nclearit:\n     test1 = ' '\n     test2 = ' '\n     test3 = ' '\n     test4 = ' '\n     test5 = ' '\n     test6 = ' '\n     test7 = ' '\n     test8 = ' '\n     test9 = ' '\n  return\n/*  */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT679/FILE679.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT679", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}