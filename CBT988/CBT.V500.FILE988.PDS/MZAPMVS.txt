Porting MOREZAP (MZAP) to MVS

I originally wrote MOREZAP (MZAP) for OS/360 in the expectation
of discarding it once I had the use of DSS. I based the syntax
around that of "Superzap" and COREZAP0, which allowed using the
same VER and REP statements in both programs but led to a
clumsier syntax than I like. There are several areas that anybody
upgrading the code to support MVS must address.

1.      Please avoid forking if feasible; instead, use
        conditional assembly statements for all changes in
        support of MVS so that the Hercules community can use
        the same source modules for older systems.

2.      MZAP gets into key zero by exploiting an integrity
        exposure in OS/360 and MVS; you will need to use APF
        AC(1) and a MODESET instead.

3.      There were no program objects in OS/360, OS/VS1 or OS/VS2
        R1 (SVS). You will need to add code to resolve CSECT
        locations within a program object.

4.      MZAP resolves nucleus CSECTs by processing the scatter
        load data in IEANUCxx. The way NIP loads nucleus CSECTs
        has changed and you will need to write new code for MVS.

5.      MZAP has statements to locate various system control
        blocks; you will need to AIF out the ones that no longer
        exist and may want to add in others.

6.      MZAP processes patches in an atomic fashion. It collects
        the VER and REP statements, then processes all of the VER
        statements before any of the REP statements. It uses SSM
        to serialize this processing. That works well in OS/360
        except for MP65, and it works in SVS because SVS handles
        disabled page faults. To support MVS you will need to
        fix/unfix the affected pages and add a different
        serialization method; even then you can't prevent code not
        holding any locks from running on another processor.

7.      MZAP supports a local 2260, but I can think of no reason
        why you would want to upgrade that code for MVS. AIF it
        out.

8.      MZAP uses EXCP to control a non-SNA local 3270, with the
        assistance of an attention exit. The intent was to allow
        use of MZAP when it was not feasible to use TCAM, TSO or
        VTAM. You will need to provide an attention exit for MVS
        and possibly modify the code.

9.      You may want to write code to allow direct use of VTAM
        for 3270s. I don't see a need for TCP/IP.

10.     MZAP supports use of the MCS consoles for input and
        output. You will probably need to update that code to
        deal with changes in, e.g., QEDIT, WTO.

11.     MZAP can run under TSO. The TIOC support for full screen
        3270 in SVS is subtly different form the VTIOC support in
        MVS, and you will almost certainly need to add some code.

12.     MZAP has code to interpret opcodes. Not only has IBM
        added opcodes, it has added new classes of opcodes. You
        can add new instructions in an existing class by simply
        adding a new macro invocation to the existing table, but
        for new classes you will need to upgrade both the code
        that analyzes opcodes and the macro that generates table
        entries.

13.     As I recall I use DCBEXIT; review the code to see whether
        the magic numbers make sense in the current environment.

You can contact me at Shmuel (Seymour J.) Metz <smetz3@gmu.edu>
or 703-256-4764.

