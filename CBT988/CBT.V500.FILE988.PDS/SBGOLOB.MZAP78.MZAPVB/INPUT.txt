00002000IV. INPUT STATEMENTS
00004000.sp 1
00006000.in 5
00008000Input statements are of three types:
00010000.in 8
00012000.sp 1
00014000.un 4
000160001.)
00018000A statement with an asterisk (*) in column 1 is a column 1 is a comment.
00020000.sp 1
00022000.un 4
000240002.)
00026000A blank card is a comment.
00028000.sp 1
00030000.un 4
000320003.)
00034000Any other statement contains an opcode in the first non-blank column
00036000(normally column 1).
00038000.in 5
00040000.sp 1
00042000For the remainder of this section,
00044000the term "statement" will be understood to apply only to non-comments.
00046000.sp 2
00048000Each opcode may require or permit operands;
00050000the opcode must be followed by a blank unless the operand
00052000begins with a period (.), hyphen (-), or equal sign (=).
00054000.sp 2
00056000A hex (hexadecimal) number is expressed as an even number
00058000of hexadecimal digits(0-9, A-F),
00060000optionally preceeded by an equal sign or hyphen.
00062000An equal sign indicates that the value which follows
00064000is a number rather than a name;
00066000a hyphen indicates a negative number and is only valid when
00068000specifying a relative address;
00070000an equal sign may preceed any hex data.
00072000.sp 2
00074000A character string is expressed by enclosing the desired characters
00076000in apostrophes (');
00078000an apostrophe is represented by two consequtive apostrophes('').
00080000Apostrophe is the only character which is doubled;
00082000in particular, an ampersand (&) is represented by a single______ ampersand.
00084000Character strings may be used wherever hex numbers are valid,
00086000and may be concatenated with hex data:
00088000=C1C2C3, C1C2'C', C1'B'C3 and ='ABC' all represent the same value.
00090000.sp 2
00092000The following statements are accepted:
00094000.in 22
00096000.sp 1
00098000.un 13
00100000.se key='&sysppage'
00102000KEY ¬t
00104000This statement is required if any REP statements are used.
00106000The operand requirements may change for every release;
00108000this is intended to prevent unauthorized use of MZAP.
00110000It is recommended that each installation modify the
00112000requirements for this opcode,
00114000to prevent unauthorized alteration of their system.
00116000The operand requirements have been deliberately omitted
00118000from the writeup;
00120000they will be made available only to a single
00122000individual at each installation and he may select,
00124000at his own discretion,
00126000who is authorized to modify resident code.
00128000.sp 2
00130000.un 13
00132000.se debug='&sysppage'
00134000DEBUG ¬t
00136000The switches and table entries used for communicating between
00138000phases of MZAP will be displayed after each phase completes processing.
00140000.in 22
00142000.sp 2
00144000.se end='&sysppage'
00146000END ¬t
00148000Console input mode will be terminated if a valid SYSIN data set
00150000.un 13
00152000was specified;
00154000otherwise END is an invalid opcode.
00156000.sp 2
00158000GO ¬¬¬¬¬¬¬¬¬¬
00160000Turns off the NOGO switch if from CRT/terminal/console;
00162000GO is invalid from SYSIN.
00164000.sp 2
00166000RESET ¬¬¬¬¬¬¬
00168000Causes all control cards previously read to be processed.
00170000If an operand of EOD is specified,
00172000no further input will be read;
00174000otherwise NOGO and DEBUG will be reset and MZAP will
00176000continue reading input.
00178000.sp 2
00180000JOB ¬¬¬¬¬¬¬¬¬jobname
00182000.br
00184000JOB ¬¬¬¬¬¬¬¬¬jobname.jobstepname
00186000.br
00188000JOB ¬¬¬¬¬¬¬¬¬taskid
00190000.br
00192000JOB ¬¬¬¬¬¬¬¬¬procname.taskid
00194000.br
00196000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement defines the job whose JPAQ is
00198000to be searched, prior to the TSLPA, RERP, RSVC, or RAM list queues.
00200000A related set of ZAPs must lie within a single job;
00202000once a JOB card is accepted, it is invalid to supply
00204000a new one without first supplying a RESET card.
00206000This restriction was imposed to maintain compatability with
00208000the planned OS/VS2 release 2 (MVS) support.
00210000.sp 2
00212000.ce data
00214000THIS DESCRIPTION IS FOR PLANNING PURPOSES ONLY.
00216000THE WRITEUP WILL BE AMENDED WHEN JOB IS AVAILABLE.
00218000.sp 2
00220000NAME ¬¬¬¬¬¬¬¬.
00222000.br
00224000 ¬¬¬¬¬¬¬¬¬¬¬¬¬.csectname
00226000 ¬¬¬¬¬¬¬¬¬¬¬¬¬name csectname
00228000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement defines the module or CSECT for
00230000the VERIFYs, REPLACEs, and DUMPs which follow.
00232000The name may be a load module name, a period (.),
00234000or either one followed by a CSECT name.
00236000If the load module was scatter loaded,
00238000a CSECT name is required.
00240000A period represents the nucleus specified as a member of
00242000the dsname on SYSNUC,
00244000and is considered to be block loaded.
00246000The load address will be added to the relative address
00248000on each applicable statement (VER, DUMP, etc.)
00250000in the SCOPE of the NAME statement;
00252000the length will be used to check that each relative address
00254000is within bounds.
00256000.sp 2
00258000AVT ¬¬¬¬¬¬¬¬¬
00260000This statement defines the module and CSECT for the
00262000statements which follow.
00264000The AVT address is obtained from the CVT;
00266000the opcode is invalid if TCAM is not active.
00268000.sp 2
00270000BLDL ¬¬¬¬¬¬¬¬ name
00272000This statement defines the module and CSECT for
00274000the statements which follow.
00276000It is invalid if the designated name does not
00278000occur in the resident BLDL list.
00280000The length is set to include only the specified
00282000BLDL entry.
00284000.sp 2
00286000CVT ¬¬¬¬¬¬¬¬¬
00288000This statement defines the module,CSECT, and INDEX
00290000for the statements which follow.
00292000Any location in the CSECT containing the CVT may be patched:
00294000the locations should be given relative to the CVT.
00296000It is equivalent, in MVT, to:
00298000.hi 0
00300000.in 25
00302000.nj
00304000NAME      .IEAQBK00
00306000INDEX     IEACVT
00308000.fi l
00310000.in 9
00312000.hi 13
00314000.sp 2
00316000GOVRFLB ¬¬¬¬¬
00318000This statement, valid only for OS/MVT and OS/VS2,
00320000defines the module, CSECT, and INDEX for the statements which follow.
00322000Any location in the CSECT containing the main storage supervisor
00324000may be patched;
00326000the locations given should be relative to GOVRFLB.
00328000It is equivalent to:
00330000.hi 0
00332000.in 25
00334000.br
00336000NAME ¬¬¬¬¬.IEAQBK00
00338000.br
00340000INDEX ¬¬¬¬GOVRFLB
00342000.in 9
00344000.hi 13
00346000.sp 2
00348000HCT ¬¬¬¬¬¬¬¬¬
00350000This statement defines the module and CSECT for the HASP Control Table.
00352000It is invalid if HASP is not active,
00354000or if there is no local modification to the HASP SVC to return
00356000the HCT address in register 15.
00358000.sp 2
00360000IBMORG ¬¬¬¬¬¬
00362000This statement, valid only for OS/MVT and OS/VS2,
00364000defines the module and CSECT for the statements which follow.
00366000Any location in the SVC table may be patched;
00368000the location given should be relative to the IBM portion of the table.
00370000It is equivalent to:
00372000.hi 0
00374000.in 25
00376000Name ¬¬¬¬.IBMORG
00378000.in 9
00380000.hi 13
00382000.sp 2
00384000MSER ¬¬¬¬¬¬¬¬
00386000This statement defines the module and CSECT for
00388000the statements which follow.
00390000Any location in the Master Scheduler Resident Data Area
00392000and in the Master Common Area may be patched.
00394000It is equivalent to:
00396000.hi 0
00398000.in 25
00400000NAME ¬¬¬¬¬.IEEMSER
00402000.in 9
00404000.hi 13
00406000.sp 2
00408000QMRES ¬¬¬¬¬¬¬
00410000This statement defines the module and CSECT for
00412000the statements which follow.
00414000Any location in the Queue Manager Resident Data Area may be patched.
00416000It is equivalent to:
00418000.hi 0
00420000.in 25
00422000NAME ¬¬¬¬IEFJOB
00424000.in 9
00426000.hi 13
00428000.sp 2
00430000SCVT ¬¬¬¬¬¬¬¬
00432000This statement, valid only in OS/MVT and OS/VS2, defines the module, CSECT, and INDEX
00434000for the statements which follow.
00436000It is equivalent to:
00438000.hi 0
00440000.in 25
00442000NAME ¬¬¬¬¬.IGC003
00444000.br
00446000INDEX ¬¬¬¬IEABEND
00448000.in 9
00450000.hi 13
00452000.sp 2
00454000SMCA ¬¬¬¬¬¬¬¬
00456000This statement, valid only if the system was generated with the SMF option,
00458000is used to define the module and CSECT for the statements which follow.
00460000While it is not actually a CSECT, nor is it in the nucleus,
00462000it may be patched as if it were.
00464000.in 9
00466000.hi 13
00468000.sp 2
00470000 TACT ¬¬¬¬¬¬¬¬
00472000This statement, valid only in OS/MVT, defines the module, CSECT, and INDEX
00474000for the statements which follow.
00476000Any location in the CSECT containing the permanent TCBs,
00478000transient areas, and CVT amy be patched;
00480000the location given should be relative to the
00482000Transient Area Control Table.
00484000It is equivalent to:
00486000.hi 0
00488000.in 25
00490000NAME ¬¬¬¬¬.IEAQBK00
00492000.br
00494000INDEX ¬¬¬¬IEAQTAQ
00496000.in 9
00498000.hi 13
00500000.sp 2
00502000TCB ¬¬¬¬¬¬¬¬¬job
00504000.br
00506000TCB ¬¬¬¬¬¬¬¬¬job.step
00508000.br
00510000TCB ¬¬¬¬¬¬¬¬¬id
00512000.br
00514000TCB ¬¬¬¬¬¬¬¬¬proc.id
00516000.br
00518000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement defines the module, CSECT,
00520000and INDEX for the statements which follow.
00522000Any location in the jobstep tcb of the specified job or
00524000started task may be patched:
00526000addresses shhould be given relative to the TCB.
00528000Note that floating-point registers are stored at a negative
00530000displacement.
00532000.sp 1
00534000¬¬¬¬¬¬¬¬¬¬¬¬¬THE TCB OPCODE IS DESCRIBED FOR PLANNING PURPOSES ONLY.
00536000THE WRITEUP WILL BE AMENDED WHEN IT IS AVAILABLE.
00538000.sp 2
00540000TSCVT ¬¬¬¬¬¬¬
00542000This statement, valid onlin with OS/MVT and OS/VS2,
00544000is used to define the module and CSECT for the statements which follow.
00546000It is an invalid statement if TSO is not active.
00548000Any location in the Time Shareing Communications Vector Table
00550000may be patched;
00552000locations should be given relative to the TSCVT.
00554000.sp 2
00556000UCB=cuu
00558000.br
00560000UCB cuu ¬¬¬¬¬
00562000.br
00564000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement defines the module, CSECT, and INDEX for the
00566000statements which follow.
00568000Any location in the I/O Supervisor may be patched;
00570000the location given should be relative to the specified UCB.
00572000It is equivalent, in MVT, to:
00574000.hi 0
00576000.in 25
00578000NAME ¬¬¬¬.IEAQFX00
00580000.br
00582000INDEX ¬¬¬ucbloc
00584000.in 9
00586000.hi 13
00588000.sp 2
00590000UCM ¬¬¬¬¬¬¬¬¬BASE
00592000.br
00594000UCM ¬¬¬¬¬¬¬¬¬HARDCOPY
00596000.br
00598000UCM ¬¬¬¬¬¬¬¬¬MASTER
00600000.br
00602000UCM ¬¬¬¬¬¬¬¬¬MCS
00604000.br
00606000UCM ¬¬¬¬¬¬¬¬¬PREFIX
00608000.br
00610000UCM ¬¬¬¬¬¬¬¬¬ID=xx
00612000.br
00614000UCM ¬¬¬¬¬¬¬¬¬UNIT=cuu
00616000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement defines the module, CSECT, and INDEX
00618000for the statements which follow.
00620000Except for UCM BASE, the INDEX is set as an absolute address
00622000rather than an entrypoint name or relative address.
00624000HARDCOPY, MASTER, and MCS are only valid if the system was
00626000generated with the Multiple Console Support option.
00628000BASE, MCS, and PREFIX refer to UCM areas not related to
00630000a specific console;
00632000UCM MASTER and HARDCOPY refer to the UCME for the console assigned to
00634000the designated function;
00636000UCM ID=xx refers to the UCME whose ID (in decimal) is xx;
00638000and UCM UNIT=cuu refers to the UCME for the designated device.
00640000They are equivalent to:
00642000.hi 0
00644000.in 25
00646000NAME ¬¬¬¬¬.IEEUCMC
00648000.br
00650000INDEX ¬¬¬¬IEECUCB (for BASE)
00652000.br
00654000 ¬¬¬¬¬¬¬¬¬¬forced absolute address
00656000.br
00658000 ¬¬¬¬¬¬¬¬¬¬(for other than BASE)
00660000.in 9
00662000.hi 13
00664000.sp 2
00666000USERORG ¬¬¬¬¬
00668000This statement, valid only for OS/MVT and OS/VS2,
00670000defines the module, CSECT, and INDEX
00672000for the statements which follow.
00674000Any location in the SVC table may be patched;
00676000the location given should be relative to the user portion
00678000of the table.
00680000It is equivalent to:
00682000.hi 0
00684000.in 25
00686000NAME ¬¬¬¬¬.IBMORG
00688000.br
00690000INDEX ¬¬¬¬USERORG
00692000.in 9
00694000.hi 13
00696000.sp 2
00698000BASE=xx ¬¬¬¬¬
00700000.br
00702000BASE xx ¬¬¬¬¬
00704000.br
00706000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to give a value to be subtracted
00708000from the address given in a VER or REP.
00710000It is normally the relative address of the CSECT,
00712000as printed in the assembly listing.
00714000The effect of this statement is retained until
00716000the next statement containing or implying a name
00718000(DUMP, NAME, INDEX, CVT, UCB, ...).
00720000If a previous BASE is in effect,
00722000the statement has a cummulative effect:
00724000the amount subtracted is the sum of the BASEs.
00726000.sp 2
00728000INDEX=xx ¬¬¬¬
00730000.br
00732000INDEX xx ¬¬¬¬
00734000.br
00736000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to give a value to be added to
00738000the address given in a VER, REP, DUMP, etc.
00740000It is normally the relative address of a CSECT from a
00742000link-edit listing.
00744000The effect of this statement is retained until the next statement
00746000containing or implying a name
00748000(CVT, DUMP, INDEX, NAME, etc.);
00750000all previous BASE or INDEX specifications remain in effect.
00752000.sp 2
00754000INDEX ¬¬¬¬¬¬¬name
00756000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to give a value to be added to the
00758000address given in a VER, REP, DUMP, etc.
00760000It resets all previous BASE and INDEX specifications.
00762000The value used is the address of the CSECT or entry point specified,
00764000adjusted by the CSECT or module address of the preceeding name statement.
00766000.sp 2
00768000LIB ¬¬¬¬¬¬¬¬¬AUTO
00770000.br
00772000LIB ¬¬¬¬¬¬¬¬¬ddname
00774000.br
00776000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to specify the ddname of the
00778000data set to be used to resolve CSECT names (other than nucleus CSECTs)
00780000in statements which follow.
00782000If AUTO is specified, modules found in TSLPA are assumed to be on CMDLIB;
00784000modules whose names begin with IFG or IG are assumed to be on SVCLIB;
00786000all other modules are assumed to be on LINKLIB.
00788000AUTO is initially in effect,
00790000and remains in effect untill overrriden by an LIB statement.
00792000.sp 2
00794000VERIFY ¬¬¬¬¬¬rr dd
00796000.br
00798000VER ¬¬¬¬¬¬¬¬¬rr dd
00800000.br
00802000V ¬¬¬¬¬¬¬¬¬¬¬rr dr
00804000.br
00806000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to prevent inadvertently
00808000altering the wrong location.
00810000The data at the specified relative address, r, adjusted by
00812000the address from the NAME statement and any BASE or INDEX in effect,
00814000is compared to the specified data,
00816000and, if a match does not occur,
00818000a switch (called the NOGO switch) is set,
00820000causing all REPs between the preceeding RESET (or beginning of input)
00822000and the following RESET (or end of data) to be suppressed.
00824000.sp 1
00826000 ¬¬¬¬¬¬¬¬¬¬¬¬¬The location must be specified as 2, 4, or 6 hex digits,
00828000preceeded (if negative) by a hyphen (-).
00830000The data may be specified as:
00832000.in 25
00834000.hi 5
00836000.sp 1
008380001). an even number of hex digits
00840000.sp 1
008420002). a character string enclosed in apostrophes (');
00844000an apostrophe is represented by 2 apostrophes
00846000(i.e., "CAN'T" is entered as "CAN''T").
00848000.sp 1
008500003). any combination of 1). and 2).
00852000.sp 1
008540004). any of the above,
00856000separated by commas (,).
00858000.in 9
00860000.hi 13
00862000.sp 2
00864000REPLACE ¬¬¬¬¬rr dd
00866000.br
00868000REP ¬¬¬¬¬¬¬¬¬rr dd
00870000.br
00872000R ¬¬¬¬¬¬¬¬¬¬¬rr dd
00874000.br
00876000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to replace data
00878000at the specified relative location, r, as adjusted by the NAME,
00880000BASE, and INDEX statements in effect.
00882000See VER for a description of formats.
00884000The effect of a REP is suppressed if the NOGO switch is set,
00886000either because of a REP failure (see REP) or by an invalid
00888000control statement (however, see GO and RESET).
00890000.sp 2
00892000CONSOLE
00894000.br
00896000CONSOLE ¬¬¬¬¬ID=cc
00898000.br
00900000CONSOLE ¬¬¬¬¬ID=cca
00902000.br
00904000CONSOLE ¬¬¬¬¬UNIT=ccu
00906000.br
00908000CONSOLE ¬¬¬¬¬DSRT=ddddrrrr
00910000.br
00912000CON
00914000.br
00916000CON ¬¬¬¬¬¬¬¬¬ID=cc
00918000.br
00920000CON ¬¬¬¬¬¬¬¬¬ID=cca
00922000.br
00924000CON ¬¬¬¬¬¬¬¬¬UNIT=ccu
00926000.br
00928000CON ¬¬¬¬¬¬¬¬¬DSRT=ddddrrrr
00930000.br
00932000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to cause subsequent input
00934000to be from the CRT (if a local 2260 or 3270 is assigned),
00936000the terminal (if TSO),
00938000or the operators console (via WTO/WTOR and REPLY/MODIFY).
00940000A specific console may be assigned by a two hex digit UCMID
00942000(with an optional area identifier from A-Z) or
00944000by a unit address.
00946000Routing codes and descriptors may be specified in the form
00948000ddddrrrr, where d is a 16 bit descriptor mask and
00950000r is a 16 bit routing code mask.
00952000.sp 2
00954000DUMP ¬¬¬¬¬¬¬¬.
00956000.br
00958000DUMP ¬¬¬¬¬¬¬¬.csectname
00960000.br
00962000DUMP ¬¬¬¬¬¬¬¬name
00964000.br
00966000DUMP ¬¬¬¬¬¬¬¬name csectname
00968000.br
00970000DUMPB ¬¬¬¬¬¬¬.
00972000.br
00974000DUMPB ¬¬¬¬¬¬¬.csectname
00976000.br
00978000DUMPB ¬¬¬¬¬¬¬name
00980000.br
00982000DUMPB ¬¬¬¬¬¬¬name csectname
00984000.br
00986000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to print a dump of the specified
00988000module or CSECT,
00990000prior to applying any REPs.
00992000The dump will contain a display of 16 bytes/line, in the format:
00994000.ll 120
00996000.nj
00998000.hi 0
01000000.in 0
01002000.sp 2
01004000R:b/rrrrrrb/A:b/aaaaaab/b/xxxxxxxxb/xxxxxxxxb/b/b/xxxxxxxxb/xxxxxxxxb/b/*eeeeeeeeeeeeeeee*
01006000.ll 70
01008000.fi l
01010000.hi 5
01012000.in 22
01014000.sp 2
01016000  Where r is the relative address in hex
01018000.in 28
01020000.br
01022000  a is the absolute address in hex
01024000.br
01026000  x is the data in hex
01028000.br
01030000  e is the data the data in EBCDIC, with unprintable characters
01032000displayed as periods (.) or quotes (").
01034000.br
01036000 b/ is a blank
01038000.in 9
01040000.hi 13
01042000.sp 1
01044000 ¬¬¬¬¬¬¬¬¬¬¬¬¬A character is considered unprintable if it
01046000does not appear on the CRT;
01048000if called from a non-CRT TSO terminal or run in batch
01050000without a CRT,
01052000a character is unprintable if it does not appear un the PN train.
01054000A cent sign (¢) is considered unprintable on the 2260
01056000since it is used as an SMI (>|).
01058000A quote rather than a period will be substituted for each
01060000unprintable character only for the 2260;
01062000quotes appear on the 2260 as an error symbol (_<>¬).
01064000.sp 2
01066000DUMP ¬¬¬¬¬¬¬¬=rr ss
01068000.br
01070000DUMPB ¬¬¬¬¬¬¬=rr ss
01072000.br
01074000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to print a partial dump of the
01076000CSECT or module identified in the preceeding NAME statement.
01078000r is 2, 4, or 6 hex digits,
01080000preceeded by a hyphen if negative;
01082000s is 2, 4, or 6 hex digits.
01084000.sp 1
01086000 ¬¬¬¬¬¬¬¬¬¬¬¬¬The data beginning at r,
01088000adjusted by the preceeding NAME, INDEX, and BASE statements,
01090000is displayed in the format shown above.
01092000The number of bytes dumped will be given by s,
01094000however the dump will always begin and end on a quadword
01096000(16 byte) boundary.
01098000.sp 2
01100000DUMPA ¬¬¬¬¬¬¬.
01102000.br
01104000DUMPA ¬¬¬¬¬¬¬.csectname
01106000.br
01108000DUMPA ¬¬¬¬¬¬¬name
01110000.br
01112000DUMPA ¬¬¬¬¬¬¬name csectname
01114000.br
01116000DUMPA ¬¬¬¬¬¬¬=rr ss
01118000.br
01120000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement has the same effect as DUMP,
01122000except that VERs and REPs will be processed prior
01124000to printing the dump.
01126000.sp 2
01128000DUMPT ¬¬¬¬¬¬¬.
01130000.br
01132000DUMPT ¬¬¬¬¬¬¬.csectname
01134000.br
01136000DUMPT ¬¬¬¬¬¬¬name
01138000.br
01140000DUMPT ¬¬¬¬¬¬¬name csectname
01142000.br
01144000DUMPT ¬¬¬¬¬¬¬=rr ss
01146000.br
01148000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement has the same effect as DUMP,
01150000except that VERs and REPs will be processed will be processed
01152000prior to printing the dump and that the format of the dump is different.
01154000Each halfword will be treated as the beginning of an instruction
01156000for the purpose of printing an opcode under the hex value.
01158000The dump will contain a display of 16 bytes/line, in the format:
01160000.ll 120
01162000.hi 0
01164000.in 0
01166000.nj
01168000rrrrrrb/aaaaaab/b/xxxxb/xxxxb/b/xxxxb/xxxxb/b/b/xxxxb/xxxxb/b/xxxxb/xxxxb/b/*eeeeeeeeeeeeeeee*
01170000b/b/b/b/b/b/b/b/b/b/b/b/b/b/b/oooob/oooob/b/oooob/oooob/b/b/oooob/oooob/b/oooob/oooo
01172000.fi l
01174000.ll 70
01176000.in 22
01178000.hi 5
01180000.sp 1
01182000 Where r is the hex relative address
01184000.in 28
01186000a is the hex absolute address
01188000.br
01190000x is the hex data
01192000.br
01194000e is the EBCDIC data
01196000.br
01198000o is the opcode for the above data,
01200000truncated to 5 characters
01202000.br
01204000b/ is a blank.
01206000.in 9
01208000.hi 13
01210000.sp 2
01212000HELP ¬¬¬¬¬¬¬¬This statement is used to obtain a list
01214000of valid command names.
01216000If a CRT is assigned,
01218000or if MZAP is being run from a TSO terminal,
01220000attention mode is forced and a $HELP is simulated
01222000to enable the user to set the speed or hold options;
01224000the list of commands will begin when a null line is entered.
01226000The list can be terminated by entering an attention message
01228000of "STOP" from the terminal/CRT or by the operator command:
01230000"P id", where id is the jobname or START id.
01232000.sp 2
01234000HELP cmd ¬¬¬¬
01236000.br
01238000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement is used to obtain a list of valid operands
01240000for the designated input statement.
01242000If a CRT is assigned or MZAP was invoked via TSO,
01244000attention mode is forced and a $HELP is simulated
01246000to enable the user to set the speed or hold options;
01248000the list of operands will begin when a null line is entered.
01250000The list can be terminated by entering an attention message
01252000of "STOP" form the terminal/CRT or by the operator command:
01254000"P id,STOP", where id is the jobname or START id.
01256000.sp 2
01258000SETPTR ¬¬¬¬¬¬refdigit *
01260000.br
01262000<- ¬¬¬¬¬¬¬¬¬¬refdigit *
01264000.br
01266000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement, during dump processing or VERIFY/REP
01268000processing;
01270000causes the limits (address,length) and index currently in effect
01272000to be saved in one of 16 MZAP "reference pointers";
01274000refdigit, which may be any hex digit from 0 to F,
01276000is used to identify this information for subsequent use
01278000(see POINT).
01280000.sp 2
01282000SETPTR ¬¬¬¬¬¬refdigit ptr len
01284000.br
01286000<- ¬¬¬¬¬¬¬¬¬¬refdigit ptr len
01288000.br
01290000SETPTR ¬¬¬¬¬¬refdigit ptr len-pfx
01292000.br
01294000<- ¬¬¬¬¬¬¬¬¬¬refdigit ptr len-pfx
01296000.br
01298000SETPTR,plen ¬refdigit ptr len
01300000.br
01302000<-,plen ¬¬¬¬¬refdigit ptr len
01304000.br
01306000SETPTR,plen ¬refdigit ptr len-pfx
01308000.br
01310000<-,plen ¬¬¬¬¬refdigit ptr len-pfx
01312000.br
01314000 ¬¬¬¬¬¬¬¬¬¬¬¬¬This statement,
01316000during dump or VERIFY/REPLACE processing,
01318000saves the limits (address, length) and index of a control block
01320000as described below;
01322000refdigit, which may be any hex digit from 0 to F,
01324000is used to identify this information for subsequent use
01326000(see POINT).
01328000.sp 1
01330000 ¬¬¬¬¬¬¬¬¬¬¬¬¬plen, if present, defines the type of pointer;
01332000it may have the values 15, 16, 24, or 32 (the default);
01334000in addition, Y, H, AL3, and A are synonymous to 15, 16, 24, and 32.
01336000(Only the last 24 bits of a 32 bit pointer are used.)
01338000.sp 1
01340000 ¬¬¬¬¬¬¬¬¬¬¬¬¬ptr must be an even number of hex digits,
01342000giving the relative address of a pointer.
01344000In what follows, "(ptr)" denotes the contents of the designated location.
01346000.sp 1
01348000 ¬¬¬¬¬¬¬¬¬¬¬¬¬len must be an even number of hex digits,
01350000giving the size of the control block pointed to
01352000(excluding prefix, if any).
01354000.sp 1
01356000 ¬¬¬¬¬¬¬¬¬¬¬¬¬pfx, if specified, must be an even number of hex digits,
01358000giving the length in bytes of the control block prefix.
01360000The hyphen separating len and pfx may be preceeded by blanks,
01362000but may not be succeeded by blanks.
01364000pfx is assumed to be 0 if not specified.
01366000.sp 1
01368000 ¬¬¬¬¬¬¬¬¬¬¬¬¬When the specified pointer, (ptr),
01370000is accessed, the following are computed:
01372000.nj
01374000.in 25
01376000.hi 0
01378000address    is    (ptr)-pfx
01380000length     is    len + pfx
01382000index      is    (ptr)
01384000relative
01386000 index     is    index - address = pfx
01388000.fi l
01390000.in 10
01392000.hi 12
01394000 ¬¬¬¬¬¬¬¬¬¬¬¬The address, length, and relative index are then
01396000saved in the requested reference pointer.
01398000.sp 2
01400000POINT ¬¬¬¬¬¬REF refdigit
01402000.br
01404000-> ¬¬¬¬¬¬¬¬¬REF refdigit
01406000.br
01408000 ¬¬¬¬¬¬¬¬¬¬¬¬The address, length, and relative index last set into
01410000the designated reference pointer are made current;
01412000the index may be modified by a subsequent BASE or INDEX (hex only)
01414000statement.
01416000.sp 2
01418000POINT ¬¬¬¬¬¬ptr len
01420000.br
01422000-> ¬¬¬¬¬¬¬¬¬ptr len
01424000.br
01426000POINT ¬¬¬¬¬¬ptr len-pfx
01428000.br
01430000-> ¬¬¬¬¬¬¬¬¬ptr len-pfx
01432000.br
01434000POINT,plen ¬ptr len
01436000.br
01438000->,plen ¬¬¬¬ptr len
01440000.br
01442000POINT,plen ¬ptr len-pfx
01444000.br
01446000->,plen ¬¬¬¬ptr len-pfx
01448000.br
01450000 ¬¬¬¬¬¬¬¬¬¬¬¬The address, length, and relative index for a control block
01452000are made current.
01454000See SETPTR for an explanation of the operands.
01456000.in 0
01458000.hi 0
