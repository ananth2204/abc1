00002000VI. ¬MESSAGES
00004000.in 5
00006000.fo all l
00008000.sp 1
00010000Except for prompting, listing of input,
00012000module/csect/control block dumps, and debug output,
00014000all messages produced by MZAP have a common format:
00016000.in 15
00018000.sp 2
00020000MZPfnnabtext
00022000.in 5
00024000.sp 1
00026000Where f identifies the functional area:
00028000.in 18
00030000.hi 3
00032000.sp 1
000340000 ¬common
00036000.br
000380001 ¬initialization
00040000.br
000420002 ¬control card scan
00044000.br
00046000H ¬HELP
00048000.br
00050000D ¬DEBUG
00052000.br
000540003 ¬CDE search
00056000.br
000580004 ¬ESD processing and module/csect/location listing
00060000.br
000620005 ¬dump processing
00064000.br
000660006 ¬VER/REP processing
00068000.br
000700007 ¬final housekeeping, reinitialization, and termination
00072000.hi 0
00074000.sp 1
00076000.in 10
00078000nn is a decimal message number within function
00080000.sp 1
00082000a ¬is an action indicator:
00084000A if action required, I otherwise.
00086000.in 5
00088000.sp 2
00090000When a message relates to a specific input statement and
00092000does not immediately follow the statement,
00094000the message text will normally begin with the
000960005 digit sequence number assigned when that statement was read.
00098000.in 0
00100000.hi 0
00102000.pa
00104000.ce on
00106000Common Messages_______________
00108000.ce off
00110000.hi 6
00112000.sp 3
00114000>|
00116000.br
00118000sssss>
00120000.br
00122000sssss>|
00124000.br
00126000sssss
00128000 ¬¬¬¬¬¬Input required from the terminal, 2260, or 3270.
00130000.sp 2
00132000EH?>
00134000.br
00136000EH?>|
00138000.br
00140000 ¬¬¬¬¬¬Attention mode is in effect.
00142000Key in attention input or terminated attention mode
00144000with a null line.
00146000.sp 2
00148000MZP001I I/O ERROR ON 2260 - USE CONSOLE
00150000.br
00152000MZP001I I/O ERROR ON 3270 - USE CONSOLE
00154000.in 10
00156000ROUTCDE: 1,10,11
00158000.br
00160000DESC: ¬¬¬1
00162000.in 0
00164000.sp 1
00166000 ¬¬¬¬¬¬Unrecoverable I/O error on the CRT.
00168000Interactive I/O will be done via the WTO/WTOR/MODIFY interface.
00170000.sp 2
00172000MZP0002I $HELP: $HOLD|$AUTO CON STOP $PAGE|$HALFAST|$FAST|$SLOW
00174000.br
00176000.sp 1
00178000 ¬¬¬¬¬¬Either HELP, $HELP or an invalid attention was entered.
00180000The valid attention messages are listed,
00182000with mutually exclusive messages separated by logical OR (|).
00184000.sp 2
00186000MZP0003A
00188000.br
00190000.in 10
00192000ROUTCDE: 9,10
00194000.br
00196000DESC: ¬¬¬2
00198000.br
00200000.in 0
00202000.sp 1
00204000 ¬¬¬¬¬Input required via REPLY.
00206000.sp 2
00208000sssss text
00210000.in 10
00212000ROUTCDE: 9,10
00214000.br
00216000DESC: ¬¬¬7
00218000.sp 1
00220000 ¬¬¬¬¬¬Listing of user's input.
00222000.sp 1
00224000 ¬¬¬¬¬¬The designated text was read and assigned the sequence number
00226000sssss.
00228000The output is to SYSPRINT, terminal (if TSO CRT), or CRT (if assigned).
00230000If the CONSOLE option is in effect, no CRT is assigned,
00232000and MZAP is in batch, a WTO is used.
00234000.pa
00238000.ce on
00240000Initialization Messages_______________________
00242000.ce off
00246000.sp 2
00248000.in 0
00250000.hi 6
00252000.sp 2
00254000MZP100I MOREZAP VERSION mm/dd/yy hh.mm STARTING
00256000.in 10
00258000ROUTCDE: 9,10
00260000.br
00262000DESC: ¬¬¬6
00264000.in 0
00266000.sp 1
00268000 ¬¬¬¬¬¬MZAP has been invoked.
00270000Initialization status and error messages may follow.
00272000.sp 2
00274000MZP101I UNAUTHORIZED CPU FOR MZAP
00276000.in 10
00278000ROUTCDE: 1,9,11
00280000.br
00282000DESC: ¬¬¬1
00284000.in 0
00286000.sp 1
00288000 ¬¬¬¬¬¬MZAP is not running on the machine it was destributed for;
00290000if you wish to use MZAP, order a separate copy for each CPU
00292000on which it is to be used.
00294000.sp 2
00296000MZP102I SYSPRINT CARD MISSING - OUTPUT ON CONSOLE
00298000.br
00300000MZP102I SYSPRINT CARD MISSING - OUTPUT ON TERMINAL
00302000.in 10
00304000ROUTCDE: 9,10
00306000.br
00308000DESC: ¬¬¬7
00310000.in 0
00312000.sp 1
00314000 ¬¬¬¬¬¬No SYSPRINT DD card is present, or, if TSO,
00316000no suitable ALLOC was done for SYSPRINT.
00318000Output will be via TPUT, if TSO,
00320000to the CRT in batch,
00322000and to the console via WTO if there is no CRT
00324000assigned in batch.
00326000.sp 2
00328000MZP103I SYSIN DD CARD MISSING - INPUT FROM CONSOLE
00330000.br
00332000MZP103I SYSIN DD CARD MISSING - INPUT FROM KEYBOARD
00334000MZP103I SYSIN DD CARD MISSING - INPUT FROM TERMINAL
00336000.in 10
00338000ROUTCDE: 9,10
00340000.br
00342000DESC: ¬¬¬7
00344000.in 0
00346000.sp 1
00348000 ¬¬¬¬¬¬No appropriate ALLOC(TSO) or DD card for SYSIN.
00350000Input will be via TPUT for TSO;
00352000for batch, input will be from the keyboard of the
00354000CRT, if one is assigned;
00356000otherwise, input will be via REPLY to WTOR.
00358000.sp 2
00360000MZP104I SYSNUC MISSING OR INVALID
00362000.in 10
00364000ROUTCDE: 9,10,11
00366000.br
00368000DESC: ¬¬¬6
00370000.in 0
00372000.sp 1
00374000 ¬¬¬¬¬¬Either there is no appropriate ALLOC(TSO) or DD card
00376000for SYSNUC, or the DSNAME is not SYS1.NUCLEUS,
00378000or it is not located on the IPL volume,
00380000or the member name, IEANUC0x, is missing or is not the
00382000nucleus most recently IPLed.
00384000.sp 2
00386000MZP105E UNSUPPORTED GRAPHICS DEVICE IGNORED
00388000.in 10
00390000ROUTCDE: 10,11
00392000.br
00394000DESC: ¬¬¬7,8,9
00396000.in 0
00398000.sp 1
00400000 ¬¬¬¬¬¬An  ALLOC(TSO) or DD card exists for a graphics device
00402000other than a 960 byte local 2260 or a 1980 byte local 3277.
004040002250, 2280, etc., are all unsupported, as are all remote CRTs.
00406000Sorry 'bout that!
00408000.in 0
00410000.hi 0
00412000.pa
00416000.ce on
00418000Input Messages______________
00420000
00422000NOTE: NOGO____ switch will be set for all MZP2 messages.
00424000.ce off
00428000.sp 2
00430000.in 0
00432000.hi 6
00434000MZP201I STATEMENT MISPLACED
00436000.sp 1
00438000 ¬¬¬¬¬¬VERIFY, REPLACE, POINT, etc. statement not
00440000in the range of NAME statement.
00442000.in 0
00444000.sp 2
00446000MZP202I INVALID OPCODE
00448000.sp 1
00450000 ¬¬¬¬¬¬The first non-blank column of the input statement
00452000does not contain a valid MZAP opcode, or the opcode is
00454000invalid but has restrictions on its use.
00456000For example, this message is produced if a GO statement
00458000is present in SYSIN.
00460000.sp 2
00462000MZP203I DEVICE NOT FOUND
00464000.sp 1
00466000 ¬¬¬¬¬¬An input statement, such a UCB, specified as
00468000device address which was not present in any UCB.
00470000.sp 2
00472000MZP204I INVALID STATEMENT
00474000.sp 1
00476000 ¬¬¬¬¬¬A syntax error is present in an input statement.
00478000A logical OR (|) will be displaYED BELOW THE COLUMN
00480000AT WHICH THE ERROR WAS DETECTED.
00482000For an omitted operand, this will bee the end of the statement.
00484000For an invalid negative hex operand,
00486000this will be the end of the operand,
00488000not___ under the hyphen.
00490000.sp 2
00492000MZP205I NOT A VALID CONSOLE
00494000.sp 1
00496000 ¬¬¬¬¬¬The user specified a UCMID higher than the number of consoles
00498000specified in the system,
00500000he specified a unit (cuu) which is not defined as
00502000an operators' console.
00504000.sp 2
00506000MZP206I NOT MCS
00508000.sp 1
00510000 ¬¬¬¬¬¬An operand was specified on a UCM statement
00512000which is only valid for a system with the MCS
00514000(Multiple Console Support) option.
00516000.sp 2
00518000MZP207I HARDCPY=SYSLOG - NO UCM
00520000.sp 1
00522000 ¬¬¬¬¬¬The statement UCM HARDCOPY is only valid if
00524000a console device, rather than SYSLOG, is assigned the
00526000SYSLOG function.
00528000.sp 2
00530000MZP208I CONSOLE NOT ACTIVE
00532000.sp 1
00534000 ¬¬¬¬¬¬The user specified a console which is ONLINE or
00536000OFFLINE, rather than in CONSOLE status.
00538000.sp 2
00540000MZP209I NOT SMF
00542000.sp 1
00544000 ¬¬¬¬¬¬The user gave an input statement, such as SMCA,
00546000which is only valid if the system is defined with
00548000the SMF (System Management Facility) option.
00550000.sp 2
00552000MZP210I KEY xxxxxxxx?
00554000.sp 1
00556000 ¬¬¬¬¬¬The user gave a KEY statement with an invalid or
00558000omitted operand.
00560000He must reply with a valid key,
00562000consisting of a scrambled version
00564000of the displayed hexadecimal number.
00566000If you don't know the magic number,
00568000see your installation systems programmer for an explanation of why
00570000you are not allowed to use this program!
00572000.sp 2
00574000MZP211I INVALID KEY
00576000.sp 1
00578000 ¬¬¬¬¬¬The user gave an invalid reply to MZP210I,
00580000or supplied an invalid operand on a KEY statement.
00582000This message will be followed by MZP210I.
00584000.sp 2
00586000MZP212I TCAM IS NOT ACTIVE
00588000.sp 1
00590000 ¬¬¬¬¬¬The user has requested a function,
00592000such as AVT, which is only valid while TCAM is active.
00594000.sp 2
00596000MZP213I TSO IS NOT ACTIVE
00598000.sp 1
00600000 ¬¬¬¬¬¬The user has requested a function,
00602000such as TSCVT, which is only valid while TSO is active.
00604000.sp 2
00606000MZP214I HASP IS NOT ACTIVE
00608000.sp 1
00610000 ¬¬¬¬¬¬The user has requested a function,
00612000such as HCT, which is only valid while HASP is active.
00614000.sp 2
00616000MZP215I NAME NOT IN BLDL LIST
00618000.sp 1
00620000 ¬¬¬¬¬¬ IThe user has supplied a BLDL statement which
00622000specifies a module not found in the BLDL list(s)
00624000used in the current IPL.
00626000An alternative explanation is that, since the latest IPL,
00628000the appropriate BLDL entry has been REPed to another name.
00630000.hi 0
00632000.in 0
00634000.pa
00636000.ce on
00638000HELP Messages_____________
00640000.ce off
00642000.hi 6
00644000.sp 2
00646000MZPH01I ALL
00648000.sp 1
00650000 ¬¬¬¬¬¬A display of all command names is in effect.
00652000This message will remain on line 0 of the CRT
00654000until the display is complete;
00656000it will not appear on the console or SYSPRINT.
00658000.sp 2
00660000MZPH01I cmd
00662000.sp 1
00664000 ¬¬¬¬¬¬A display of the operands of the designated command
00666000is in effect.
00668000See MZPH01I ALL.
00670000.sp 2
00672000MZPH02I USE HELP <cmd> FOR OPERANDS OF <cmd>
00674000.sp 1
00676000 ¬¬¬¬¬¬This is the first line of output for HELP ALL.
00678000If a supported CRT is assigned (960 byte local 2260,
006800001920 byte 3277),
00682000or if MZAP is being called from TSO,
00684000this  will be followed by an MZP002I message;
00686000enter any desired attention messages and then
00688000terminate attention mode with a null line.
00690000.sp 2
00692000MZPH03I OPCODE cmd
00694000.sp 1
00696000 ¬¬¬¬¬¬The designated opcode may be used in input statements.
00698000.sp 2
00700000MZPH04I INVALID OPCODE - HELP ALL FORCED
00702000.sp 1
00704000 ¬¬¬¬¬¬The operand used for HELP was invalid,
00706000and will be ignored.
00708000A list of valid opcodes will be displayed.
00710000.sp 2
00712000MZPH05I OPERAND text
00714000.sp 1
00716000 ¬¬¬¬¬¬The text listed is part of a description of
00718000the operands of the command for which HELP was requested.
00720000.hi 0
00722000.in 0
00724000.pa
00726000.ce on
00728000DEBUG Messages______________
00730000.ce off
00732000.sp 2
00734000.li 1
00736000MZPD01I VER/REP SNAP. SW=xx,xx,xx,xx
00738000.sp 1
00740000.in 10
00742000A phase of MOREZAP has completed processing.
00744000SW1-SW4 had the values, in hex, indicated in the message.
00746000A set of messages, described below,
00748000will be written for each of the MZAP control blocks
00750000which have been constructed;
00752000following this, the next phase will be called.
00754000These messages are at least two lines, and include the following:
00756000.in 0
00758000.sp 2
00760000.nf
00762000.li 2
00764000aaaaaa TYPE=xx: tttttttt NXT: nnnnnn LINE: ##### text
00766000                                      FLG: ff
00768000.fi l
00770000.sp 1
00772000.in 20
00774000.hi 8
00776000 Where a is the 6 hex digit virtual address of the control block
00778000displayed.
00780000.in 26
00782000.hi 2
00784000.sp 1
00786000 x is the two hex digit type.
00788000.sp 1
00790000 t is a descrition of the type.
00792000.sp 1
00794000 n is the 6 hex digit address
00796000of the next MZAP control block.
00798000.sp 1
00800000 # is the sequence number aSSIGNED TO THE INPUT STATEMENT
00802000which generated the control block.
00804000.sp 1
00806000 f is the two hex digit flag field.
00808000.hi 0
00810000.in 0
00812000.sp 2
00814000.nf
00818000.li 3
00820000aaaaaa TYPE=00: VER      NXT: nnnnnn LINE: ##### LOC: @@@@@@ DATLN: mm(ddd-1)
00822000                                      FLG: ff,ff ABS: xxxxxx
00824000                                      vvvv,vvvv,vvvv,vvvvv,vvvv,vvvv,vvvv,vvvv,
00826000.fi l
00830000.sp 1
00832000.in 20
00834000.hi 8
00836000 Where @ is the 6 hex digit relative address of the data to be verified.
00838000.in 26
00840000.hi 2
00842000.sp 1
00844000 m is the hex length-1 (i.e., as it would be used in a CLC).
00846000.sp 1
00848000 d is the decimal data length.
00850000.sp 1
00852000 x is the 6 digit absolute virtual address of the data to be  verified,
00854000or is 0 if not yet known.
00856000.sp 1
00858000 v is the data to be used for verification,
00860000or the data which failed to pass verification.
00862000.sp 2
00864000.hi 0
00866000.in 0
00870000.nf
00872000.li 3
00874000aaaaaa TYPE=01: REP      NXT: nnnnnn LINE: ##### LOC: @@@@@@ DATLN: mm(ddd-1)
00876000                                      FLG: ff,ff ABS: xxxxxx
00878000                                      rrrr,rrrr,rrrr,rrrrr,rrrr,rrrr,rrrr,rrrr,
00880000.fi l
00884000.in 20
00886000.hi 8
00888000.sp 1
00890000 Where @ is the 6 hex digit relative address of the data to be replaced.
00892000.in 26
00894000.hi 2
00896000.sp 1
00898000 m is the hex length-1 (i.e., as it would be used in a MVC).
00900000.sp 1
00902000 d is the decimal data length.
00904000.sp 1
00906000 x is the 6 digit absolute virtual address of the data to be  replaced,
00908000or is 0 if not yet known.
00910000.sp 1
00912000 r is the data to replace the data at @,
00914000as relocated.
00916000.sp 2
00918000.hi 0
00920000.in 0
00922000.nf
00924000.li 2
00926000aaaaaa TYPE=02: BASE     NXT: nnnnnn LINE: ##### LOC: bbbbbb
00928000                                      FLG: ff
00930000.sp 1
00932000.fi l
00934000.in 20
00936000.hi 8
00938000 Where b is the 6 hex digit hex number to be subtraacted from
00940000the relative address of each statement within
00942000the scope of this BASE.
00944000.hi 0
00946000.in 0
00948000.sp 2
00950000.nf
00952000.li 2
00954000aaaaaa TYPE=03: INDEX    NXT: nnnnnn LINE: ##### LOC: xxxxxx IXNAME: eeeeeeee
00956000                                      FLG: ff
00958000.fi l
00960000.sp 1
00962000.in 20
00964000.hi 8
00966000 Where x is the 6 hex digit hex number,
00968000as far as currently resolved,
00970000to be used as a relocation factor for each
00972000statement within the scope of this INDEX.
00974000.in 26
00976000.hi 2
00978000.sp 1
00980000 e is the csect or entry point within the module
00982000whose address is resolved as x.
00984000.in 0
00986000.hi 0
00988000.sp 2
00990000.nf
00992000.li 2
00994000aaaaaa TYPE=04: HINDEX   NXT: nnnnnn LINE: ##### LOC: xxxxxx
00996000                                      FLG: ff
00998000.fi l
01000000.sp 1
01002000.in 20
01004000.hi 8
01006000 Where x is the 6 hex digit number to be added to
01008000the relative address of each statement within the scope
01010000of this INDEX.
01012000.in 0
01014000.hi 0
01016000.sp 2
01018000.nf
01020000.li 3
01022000aaaaaa TYPE=05: NAME     NXT: nnnnnn LINE: ##### BEG: xxxxxx   NAME: mmmmmmmm
01024000                         CDE: rrrrrr  FLG: ff    SIZ: ssssss  CSECT: cccccccc
01026000                         DCB: yyyyyy  dddddddd                  SSI: zzzzzzzz
01028000.fi l
01030000.in 20
01032000.hi 8
01034000.sp 1
01036000 Where x is the module or csect location,
01038000as currently resolved.
01040000.sp 1
01042000.in 26
01044000.hi 2
01046000 m is the module name.
01048000.sp 1
01050000 r is the CDE (OS/MVT, OS/VS2) or RB (OS/MFT, OS/VS1) address,
01052000if known, else 0.
01054000This field is always 0 for the nucleus.
01056000.sp 1
01058000 s is the module or csect size, as currently resolved.
01060000The module size for the nucleus is taken from  CVTNUCB.
01062000.sp 1
01064000 c is the csect name, if specified.
01066000.sp 1
01068000 y is the 6 hex digit address of the DCB for the library
01070000containg the load module.
01072000.sp 1
01074000 d is the ddname of the library.
01076000.sp 1
01078000 z is the 8 hex digit System Status Information
01080000(See the SRL for Services Aids).
01082000.in 0
01084000.hi 0
01086000.sp 2
01088000.nf
01092000.li 2
01094000aaaaaa TYPE=06: DUMP     NXT: nnnnnn LINE: ##### BEG: xxxxxx   NAME: mmmmmmmm
01096000                         CDE: rrrrrr  FLG: ff    SIZ: ssssss  CSECT: cccccccc
01098000                         DCB: yyyyyy  dddddddd                  SSI: zzzzzzzz
01100000.fi l
01104000.in 20
01106000.hi 8
01108000.sp 1
01110000Where all fields are as explained for 05 (NAME).
01112000.in 0
01114000.hi 0
01116000.sp 2
01118000.nf
01122000.li 2
01124000aaaaaa TYPE=07: DUMPA    NXT: nnnnnn LINE: ##### BEG: xxxxxx   NAME: mmmmmmmm
01126000                         CDE: rrrrrr  FLG: ff    SIZ: ssssss  CSECT: cccccccc
01128000                         DCB: yyyyyy  dddddddd                  SSI: zzzzzzzz
01130000.fi l
01134000.in 20
01136000.hi 8
01138000.sp 1
01140000Where all fields are as explained for 05 (NAME).
01142000.in 0
01144000.hi 0
01146000.sp 2
01148000.nf
01152000.li 2
01154000aaaaaa TYPE=08: DUMPT    NXT: nnnnnn LINE: ##### BEG: xxxxxx   NAME: mmmmmmmm
01156000                         CDE: rrrrrr  FLG: ff    SIZ: ssssss  CSECT: cccccccc
01158000                         DCB: yyyyyy  dddddddd                  SSI: zzzzzzzz
01160000.fi l
01164000.in 20
01166000.hi 8
01168000.sp 1
01170000Where all fields are as explained for 05 (NAME).
01172000.in 0
01174000.hi 0
01176000.sp 2
01178000.nf
01182000.li 2
01184000aaaaaa TYPE=09: HDUMP    NXT: nnnnnn LINE: ##### LOC: @@@@@@ LEN: ssssss
01186000                                      FLG: ff,ff ABS: xxxxxx
01188000.fi l
01192000.in 20
01194000.hi 8
01196000.sp 1
01198000 Where @ is the 6 hex digit relative address of the
01200000data to be dumped.
01202000.in 26
01204000.hi 2
01206000.sp 1
01208000 s is the 6 hex digit length of the area to be dumped.
01210000.sp 1
01212000 x is the 6 hex digit absolute virtual address of the data to be dumped,
01214000or is 0 if not yet know.
01216000.in 0
01218000.hi 0
01220000.sp 2
01222000.nf
01226000.li 2
01228000aaaaaa TYPE=0A: HDUMPA   NXT: nnnnnn LINE: ##### LOC: @@@@@@ LEN: ssssss
01230000                                      FLG: ff,ff ABS: xxxxxx
01232000.fi l
01236000.in 20
01238000.hi 8
01240000.sp 1
01242000 Where @ is the 6 hex digit relative address of the
01244000data to be dumped.
01246000.in 26
01248000.hi 2
01250000.sp 1
01252000 s is the 6 hex digit length of the area to be dumped.
01254000.sp 1
01256000 x is the 6 hex digit absolute virtual address of the data to be dumped,
01258000or is 0 if not yet know.
01260000.in 0
01262000.hi 0
01264000.sp 2
01266000.nf
01270000.li 2
01272000aaaaaa TYPE=0B: HDUMPT   NXT: nnnnnn LINE: ##### LOC: @@@@@@ LEN: ssssss
01274000                                      FLG: ff,ff ABS: xxxxxx
01276000.fi l
01280000.in 20
01282000.hi 8
01284000.sp 1
01286000 Where @ is the 6 hex digit relative address of the
01288000data to be dumped.
01290000.in 26
01292000.hi 2
01294000.sp 1
01296000 s is the 6 hex digit length of the area to be dumped.
01298000.sp 1
01300000 x is the 6 hex digit absolute virtual address of the data to be dumped,
01302000or is 0 if not yet know.
01304000.in 0
01306000.hi 0
01308000.sp 2
01310000.nf
01314000.li 2
01316000aaaaaa TYPE=0C: LIB      NXT: nnnnnn LINE: ##### DCB: xxxxxx DDNAME: dddddddd
01318000                                      FLG: ff
01320000.fi l
01324000.in 20
01326000.hi 8
01328000 Where x is the 6 hex digit absolute virtual address of the DCB,
01330000or is 0 if LIB AUTO is in effect.
01332000.in 26
01334000.hi 2
01336000.sp 1
01338000 d is the ddname specified.
01340000.in 0
01342000.hi 0
01344000.nf
01346000.sp 2
01350000.li 2
01352000aaaaaa TYPE=0D: <- N *   NXT: nnnnnn LINE: ##### NDX: @@@@@@   LENB: ssss
01354000                         PTR: pppppp  FLG: ff,ff ABS: xxxxxx    IXB: iiii
01356000.fi l
01358000.sp 1
01362000.in 20
01364000.hi 8
01366000 Where @ is the absolute virtual index in effect at the time
01368000the address, length, and index were saved.
01370000.in 26
01372000.hi 2
01374000.sp 1
01376000 s is the length of the module, csect, or control block.
01378000.sp 1
01380000 p is the address of the 8 byte area in which the address,
01382000length, and relative index are to be stored.
01384000.sp 1
01386000 x is the absolute virtual address of the module, csect,
01388000or control block.
01390000.sp 1
01392000 i is the relative index which was saved.
01394000.in 0
01396000.hi 0
01398000.nf
01400000.sp 2
01404000.li 2
01406000aaaaaa TYPE=0E: MVC      NXT: nnnnnn LINE: ##### LOC: @@@@@@ DATLN: (mm(ddd-1)
01408000                         DST: pppppp  FLG: ff,ff ABS: xxxxxx
01410000.fi l
01414000.in 20
01416000.hi 8
01418000.sp 1
01420000 Where @ is the relative address of the data to be saved.
01422000.in 26
01424000.hi 2
01426000.sp 1
01428000 m is the hex length-1 (i.e., as it would be used in an MVC).
01430000.sp 1
01432000 d is the decimal length.
01434000.sp 1
01436000 p is the address of the area in which the data is to be saved.
01438000.sp 1
01440000 x is the absolute virtual address of the data to be saved,
01442000or 0 if not known.
01444000.in 0
01446000.hi 0
01448000.nf
01450000.sp 2
01454000.li 2
01456000aaaaaa TYPE=0F: <- N PTR NXT: nnnnnn LINE: ##### LOC: @@@@@@  LENB: ssss
01458000                         PTR: pppppp  FLG: ff,ff ABS: xxxxxx   IXB: ssss
01460000.fi l
01464000.in 20
01466000.hi 8
01468000.sp 1
01470000 Where @ is the relative address of the pointer to
01472000the desired control block.
01474000.in 26
01476000.hi 2
01478000.sp 1
01480000 s is the length of the control block pointed to.
01482000.sp 1
01484000 p is the address of the 8 byte area where
01486000the address, length, and relative index are to be stored.
01488000.sp 1
01490000 x is the absolute virtual address of the desired control block,
01492000or 0 if not known.
01494000.sp 1
01496000 i is the relative index.
01498000.in 0
01500000.hi 0
01502000.nf
01504000.sp 2
01508000.li 2
01510000aaaaaa TYPE=10: -> PTR   NXT: nnnnnn LINE: ##### LOC: @@@@@@  LENB: ssss
01512000                         PTR: pppppp  FLG: ff,ff ABS: xxxxxx   IXB: ssss
01514000.fi l
01518000.in 20
01520000.hi 8
01522000.sp 1
01524000 Where @ is the relative address of the pointer to
01526000the desired control block.
01528000.in 26
01530000.hi 2
01532000.sp 1
01534000 s is the length of the control block pointed to.
01536000.sp 1
01538000 p is the absolute virtual address of the pointer to
01540000the desired control block.
01542000.sp 1
01544000 x is the absolute virtual address of the desired control block,
01546000or 0 if not known.
01548000.sp 1
01550000 i is the relative index.
01552000.in 0
01554000.hi 0
01556000.nf
01558000.sp 2
01562000.li 2
01564000aaaaaa TYPE=11: -> REF N NXT: nnnnnn LINE: ##### NDX: @@@@@@  LENB: ssss
01566000                         PTR: pppppp  FLG: ff,ff ABS: xxxxxx   IXB: ssss
01568000.fi l
01572000.in 20
01574000.hi 8
01576000.sp 1
01578000 Where @ is the absolute virtual INDEX in effect when
01580000the address, size, and index were restored.
01582000.in 26
01584000.hi 2
01586000.sp 1
01588000 s is the length of the module, csect, or control block.
01590000.sp 1
01592000 p is the address of the 8 byte area from which
01594000the address, size, and relative index were or are
01596000to be restored.
01598000.sp 1
01600000 x is the absolute virtual adress of the module, csect,
01602000or control block.
01604000.sp 1
01606000 i is the relative index.
01608000.in 0
01610000.hi 0
01612000.pa
01614000.ce on
01616000ESD Messages____________
01618000.ce off
01620000.sp 2
01622000MZP401I mmmmmmmm DIRECTORY I/O ERROR
01624000.sp 1
01626000.in 6
01628000A return code of 8 was received from the BLDL macro,
01630000indicating an I/O error in the directory
01632000while trying to locate module m.
01634000.in 0
01636000.sp 2
01638000MZP402I mmmmmmmm NOT FOUND
01640000.sp 1
01642000.in 6
01644000A return code of 4 was received from the BLDL macro,
01646000indicating that module m was not found
01648000in the directory of any of the relevant libraries.
01650000Add a DD card for the necessary library,
01652000and if required, add a LIB statement.
01654000.in 0
01656000.sp 2
01658000MZP403I mmmmmmmm NOT SCTR
01660000.in 6
01662000.sp 1
01664000A load module was found to be in block load format
01666000when scatter format was expected.
01668000Either the specified module was the nucleus,
01670000or it was loaded with more than one extent;
01672000in either case, the module found in the library
01674000cannot be the proper member, since it does not
01676000have the SCTR attribute.
01678000.in 0
01680000.sp 2
01682000MZP404I mmmmmmmm NO ESD
01684000.in 6
01686000.sp 1
01688000The first record in load module m, or the first
01690000record following the SYM records,
01692000is not a CESD record.
01694000Run IMBLIST (LISTLOAD) on the module,
01696000and call your friendly neighbor IBM CE
01698000- the linkage editor has just awarded you third prize,
01700000and there are only two contestants.
01702000.in 0
01704000.sp 2
01706000MZP405I mmmmmmmm NO CON
01708000.in 6
01710000.sp 1
01712000A reccord follows a CESD record which is not a control,
01714000IDR, SCTR, or CESD record.
01716000Call (but keep it clean) your friendly, neighborhood CE,
01718000as for MZP404I.
01720000.in 0
01722000.sp 2
01724000MZP406I mmmmmmmm MISSING CESD
01726000.in 6
01728000.sp 1
01730000A SCTR format record has fewer CESD records than expected;
01732000the BLDL entry may have an incorrect table length or
01734000there may be a missing or incorrect CESD record.
01736000.sp 1
01738000Before complaining to IBM, list the module with IMBLIST and
01740000verify that the problem is in the load module;
01742000this message could conceivably be caused by an error
01744000in MZAP, in which case the complaint should come to me
01746000rather than IBM.
01748000If you received MZAP as an IUP from IBM,
01750000rather than directly from me,
01752000then they get the complaint regardless
01754000- but no doubt I'll hear from them.
01756000.in 0
01758000.sp 2
01760000MZP407I mmmmmmmm MISSING SC/TR
01762000.in 6
01764000.sp 1
01766000A record type other than hex 10 was found while
01768000reading in the scatter/translate table.
01770000See the remarks for MZP404I and MZP406I.
01772000.in 0
01774000.sp 2
01776000MZP410I sssss NAME: mmmmmmmm NOT LOADED
01778000.sp 1
01780000.in 6
01782000Module m was not found in the RERP, RAM, RSVC,
01784000or TSLPA linkpack queues, nor in the or selected JPAQ.
01786000.in 0
01788000.sp 2
01790000MZP411I sssss NAME: mmmmmmmm NOT IN DIRECTORY
01792000.in 6
01794000.sp 1
01796000 Module m was not found in the proper library.
01798000Usually accompanied by message MZP401I or MZP402I.
01800000.in 0
01802000.sp 2
01804000MZP412I sssss NAME: mmmmmmmm cccccccc NOT FOUND
01806000.in 6
01808000.sp 1
01810000Csect c does not exist in module m,
01812000or an error exists in the format of load module m.
01814000.in 0
01816000.sp 2
01818000MZP413I sssss NAME: mmmmmmmm cccccccc ABS:  aaaaaa:aaaaaa
01820000.in 6
01822000.sp 1
01824000The designated module or csect exists and was loaded at
01826000the listed absolute virtual addresses.
01828000.in 0
01830000.sp 2
01832000MZP414I sssss ENTRY eeeeeeee NOT FOUND
01834000.in 6
01836000.sp 1
01838000Entry point e was either specified in an INDEX statement
01840000or implied by a control block statement:
01842000CVT, UCB, etc.;
01844000it could not be found in the load module's CESD.
01846000.in 0
01848000.sp 2
01850000MZP415I sssss ENTRY eeeeeeee ABS: aaaaaa
01852000.in 6
01854000.sp 1
01856000Entry point e is at the specified absolute virtual address.
01858000.in 0
01860000.sp 2
01862000MZP416I sssss REL: rrrrrr:rrrrrr ABS: aaaaaa:aaaaaa OUT OF RANGE
01864000.in 6
01866000.sp 1
01868000Statement number s specified either:
01870000a relative address beyond the module or csect;
01872000a negative displacement beyond the control block prefix;
01874000or an excessive length for a VER, REP, or DUMP.
01876000The range of addresses given is listed as both relative and
01878000absolute virtual addresses.
01880000.in 0
01882000.sp 2
01884000MZP420I sssss INVALID POINTER AT aaaaaa
01886000.in 6
01888000.sp 1
01890000A POINT or SETPTR statement refers to a halfword which is negative.
01892000Since the pointer type was specified as Y (15),
01894000this is invalid.
01896000.in 0
01898000.sp 2
01900000MZP421I sssss REF NOT - POINT INVALID
01902000.in 6
01904000.sp 1
01906000A POINT REF statement refers to a ref digit for which either:
01908000.hi 3
01910000.in 8
01912000 1. There is no preceeding SETPTR.
01914000 2. The last preceeding SETPTR was not successfully processed.
01916000.hi 0
01918000.in 0
01920000.sp 2
01922000MZP422I sssss INDEX: iiiiii LIMITS: aaaaaa:aaaaaa
01924000.in 6
01926000.sp 1
01928000A POINT statement refers to the designated absolute virtual address, i.
01930000The limits are for the entire area pointed to,
01932000including the prefix, if any.
01934000.in 0
01936000.pa
01938000.ce on
01940000DUMP Messages_____________
01942000.ce off
01944000.sp 2
01946000.fi l
01950000MZP501I sssss ÝACCESSED VIA¨ m Ýc¨
01952000ÝINDEX: e¨ HEX/EBCDICÝ/OPCODE¨ DUMP
01956000.in 6
01958000.sp 1
01960000This message is used as a subtile for all dumps.
01962000The clause "INDEX: eeeeeeee" is present if an entry point
01964000within the containing csect is specified,
01966000either explicitly or implicitly.
01968000The clause "ACCESSED VIA" is present if the limits
01970000of the dump are relative to a location
01972000found with a POINT statement;
01974000any "INDEX" clause which would otherwise be supplied is suppressed,
01976000in order not to exceed the line size of the 2260 or 3270.
01978000.in 0
01980000.hi 0
01982000.pa
01984000.ce daTA
01986000VER/REP Messages________________
01988000.ce off
01990000.sp 2
01992000MZP601I sssss NAME mmmmmmmm cccccccc
01994000.in 6
01996000One or more errors have been found relating to the specified module.
01998000Addition messages will be displayed to diagnose the exact errors.
02000000.in 0
02002000.sp 2
02004000MZP602I sssss rrrrrr:rrrrrr ABS: aaaaaa:aaaaaa OUT OF RANGE
02006000.in 6
02008000.sp 1
02010000The start or end address of the verify or replace is outside the
02012000bounds of the module or csect.
02014000.in 0
02016000.sp 2
02018000MZP603I sssss VERIFY FAILURE AT: rrrrrr ABS :aaaaaa
02020000.in 6
02022000.sp 1
02024000The data in storage did not match the VERIFY data.
02026000This message is always accompanied by MZP604I.
02028000.in 0
02030000.sp 2
02032000MZP604I sssss ACTUAL CONTENT IS xxxx,xxxx,...
02034000.in 6
02036000.sp 1
02038000This message immediately follows MZP603I.
02040000.in 0
02042000.sp 2
02044000MZP698I VERIFY/REPLACE PROCESSING SUCCESSFUL
02046000.in 6
02048000.sp 1
02050000No errors were detected.
02052000All REP operations, if any, were performed.
02054000.in 0
02056000.sp 2
02058000MZP699I NOGO SWITCH SET - ALL REPS SUPPRESSED
02060000.in 6
02062000.sp 1
02064000An error was detected.
02066000No REP operation is performed.
02068000The user should correct the errors indicated
02070000in the preceeding error messages.
02072000.in 0
02074000.pa
02078000.in 12
02080000.nf
02082000Final Housekeeping and Reinitialization Messages________________________________________________
02084000.fo
02088000.sp 2
02090000MZP701I EOD
02092000.in 6
02094000.sp 1
02096000Either an end-of-file occurred on SYSIN or a RESET EOD
02098000statement was read.
02100000All input read prior to that point has been processed.
02102000.in 0
