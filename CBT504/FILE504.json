{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012227000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1116934, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 13, "INMDSNAM": "CBT.V500.FILE504.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1116934, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1116934, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE504.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x12\\x12'", "DS1TRBAL": "b'\\x07\\x92'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xd2\\x00\\x04\\x03\\xd3\\x00\\x07\\x00\\x13'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\t/\\x01\\x01\\t/\\x15\\x00\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-02T00:00:00", "modifydate": "2001-04-02T15:00:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 433    FILE:  504\n\n    ORIGINAL DSNAME:  WSBG.CBT433.FILE504\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n\n   PDS117I 42 MEMBERS COUNTED; CUMULATIVE SIZE IS 9,948 RECORDS\n\nTIME THIS PDS WAS SHIPPED:   04/02/01    15:00:41    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00B\\x01\\x01\\x04\\x0f\\x01\\x01\\x04\\x0f\\x13\\x04\\x00\\xa2\\x00{\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-02-09T00:00:00", "modifydate": "2001-02-09T13:04:42", "lines": 162, "newlines": 123, "modlines": 0, "user": "WSBG"}, "text": "                  A&P Software Inventory System   (introduction)\n                  -----------------------------\n\n\n      This system was designed by my former boss to suit some very\nspecial conditions that he wanted to implement in his data center\ndesign.  Therefore, the system will possibly be useful (as it stands)\nfor certain types of MVS sites.\n\n      Nonetheless, the system has, in my opinion, a large educational\nvalue.  However, if a site wants to implement this system and maintain\nit, they really should have some definite goals in the way they do\nthings.  Those goals shouldn't be radically different from my former\nboss's goals.\n\n      Also, to implement this system, you need to have at least a\nfairly competent SAS programmer on site.  SAS has some concepts and\nmethods that are very foreign to programmers trained only in\nAssembler, and perhaps some other higher level languages such as\nCOBOL.  I don't think that a site should try to work with the \"report\"\nside of this package, without a person around who is competent in SAS.\n\n      This package is currently running with SAS Version 6.09.  If\nyou want to run it on a later version of SAS, you have to know what\nyou're doing.\n\n\nDATA CENTER SETUP GOALS\n\n      The following are some of the conditions in the data center,\nwhere this system was set up:\n\n\n1.  SMP/E is done to libraries that have a site-determined high-level\n    qualifier.  At this site, this hlq is STDL.  BTW, the SMP/E\n    control libraries have a hlq of SYSSMPE.\n\n2.  IBM-named linklist and lpalist libraries are not used, and are\n    empty, for the most part.  Almost all system modules are copied\n    into big system libraries:  SYS1.LINKMVS and SYS1.LPAMVS.  Program\n    product modules (non-IBM) are all copied into large load libraries:\n    SPP.LINKLIB and SPP.LPALIB.  The SPP libraries are concatenated\n    just behind the system libraries.\n\n3.  LPAR-specific linklist and lpalist modules are in lpar-specific\n    libraries concatenated just ahead of the big system libraries,\n    and they don't contain too much--only modules necessary for\n    lpar specificity.\n\n4.  ISPF libraries are combined too, with IBM libraries just ahead\n    of the large SPP program product libraries.\n\n5.  As many ISPF panels as possible, are ISPPREP'ed before being placed\n    into the large panel libraries.  This is for speed in execution.\n\n\n      This arrangement was designed to speed execution, and promote\nshort response times, as much as possible.  In my experience, the\nmachines do run fast, and response times are very good.  As an aside,\nIPLs are rare, and are done months apart, usually.\n\n\n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      Since IBM packaging nowadays is relying on LLA and VLF to\ncreate execution efficiency, IBM usually recommends concatenating\nvery many libraries, in a manner opposite to this design.\n\n      Because most modules are not executed from their IBM-supplied\nlibraries, in this design, Paul has created the concept of \"Execution\nLibraries\".  This is in addition to the concepts of Target Libraries\nand Distribution Libraries.  In this data center setup, Target\nLibraries are almost always NOT executed from.\n\n      Paul's Software Inventory Package (featured in this file)\ntherefore has to keep track of which libraries are executing, and how\ntheir contents relates to the contents of the Target Libraries\n(SMP/E-fed), from whence they came.\n\n      With that in mind, I'll try to briefly explain the pieces of\nthis Software Inventory System, how they are set up, and how they\nwork.\n\n\n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n      There are two pieces to this Software Inventory System:\n\n1.  The Data Gatherer part.       Jobs:  SBGSTG1, SBGSTG2\n2.  The SAS Reporting part.       Jobs:  SBGPRE,  SBGPRCR\n\n      The Data Gatherer part can work anywhere.  It runs against\nyour disk volumes, to report on the software-containing datasets\nwhich each volume contains.\n\n      Stage 1 of the Data Gatherer creates a file of dataset names\nincluded in a FORMAT1 VTOC dump for each dataset.  A file for each disk\npack is created by the Stage 1 process, and it is stored in a special\nformat pds, with a member name for each pack read.  Each member of the\nStage 1 pds contains a header record for the volume, followed by a\nrecord containing an image of each of the actual FORMAT1 VTOC entries\nfor all the datasets.\n\nProgram for Stage 1:   WVOLCOLL\n\n      Stage 2 of the Data Gatherer creates a file of dataset contents,\ndivided by source datasets and load datasets.  VSAM datasets, and such,\nare bypassed by the Stage 2 processing.  Only datasets that are assumed\nto contain software, are included.  Stage 2 processing is fed from the\ncontents of the Stage 1 pds.  Stage 2 produces a special-format pds\nalso, but with member-level data for each scanned volume.\n\n      Every pds on the scanned volume, which is assumed to be\nsoftware-containing, is analyzed member by member, to produce the\nStage 2 output for that disk volume.  Separate processing is done in\nStage 2, for source datasets, and separate processing for load library\ndatasets.  Inside the Stage 2 output file for a volume, there are\nseveral different types of records, depending on whether a program is\nsource code, or whether it is a load module.\n\nPrograms for Stage 2:  WVOLCOL0   (analyze load module pds'es)\n                       WVOLCOL1   (analyze source pds'es)\n\n\n      We'll deal with the SAS Reporting part later.  The Data\nGathering part is really independent of the SAS Reporting part, but\nNOT vice-versa.\n\n      In the SAS reporting part, we will set up formats and use\ncontrol cards, to tell the system which libraries are Execution\nLibraries, which are Target Libraries, which are Distribution Libraries,\nand which are SMP/E control libraries.  These control cards and formats\n(the main format contains explanations for all the FMIDs) must be set up\nby the programmer, according to what is at that site.  (It's kind of\npainstaking, but you can follow our current models for hints.)\n\n      The end result of the SAS part, will be to produce several\nreports:\n\nReport 1:  Shows duplicate LPA and LINK list modules, several ways:\n           a- A module is in 2 Link List libraries\n           b- A module is in a Link List and an LPA List library as well\n           c- Same named modules which are different, exist in\n              different libraries.\n\nReport 2:  Execution Library to Target Library Match report.\n           This report goes module-name by module-name.\n           (There may be more than one execution library containing\n           a given module.)\n\nReport 3:  Which Execution Library modules are not matched with\n           Target Library modules (you have to ask why they are\n           different, or why they don't exist in the Target\n           libraries).\n\n\n      It is obvious that these are useful reports, even for an\ninstallation whose setup is closer to the normal IBM standard.\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$$SETUP": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x01\\x04?\\x01\\x01\\x04O\\x103\\x00W\\x00\\xc9\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-02-12T00:00:00", "modifydate": "2001-02-13T10:33:00", "lines": 87, "newlines": 201, "modlines": 0, "user": "WSBG"}, "text": "              SETUP OF A&P SOFTWARE INVENTORY SYSTEM\n              --------------------------------------\n\n\n      The A&P Software Inventory System requires a rather elaborate\nsetup procedure.  I hope to make it a bit easier, with this explanation.\n\n      It is highly recommended that an experienced SAS programmer, if\none is available, administer this system.  You can make do with a less\nexperienced SAS programmer, as we have (me), but it makes the going\nthat much rougher.\n\n      This partitioned dataset was designed to be as self-contained as\npossible, and even the PROCs are executed out of this pds with JCLLIB\ncards.  You have to globally change all occurrences of the names\n\n           WSBG.WVOL.SOURCE\n           WSBG.WVOL.LOADLIB\n           WSBG.WVOL.FMTLIB\n\nto whatever name these dsns will have on your system.  Of course, change\nthe JOBCARD member, and all the job cards, to fit your system.\n\n      The data gatherer jobs are:  SBGSTG1 and SBGSTG2.  The SAS\nreporting jobs are called SBGPRE and SBGPRCR.  The purpose of the\nsetup is to feed these 4 jobs with all the material they need, to\nrun meaningfully on your system.  Our SAS proc is included here.\nWe are running SAS 6.09 at this time.\n\n      Therefore, the first thing you need to do is to go over each\nof these 4 jobs, and check the appropriate members on this pds, to\nsee if and how, they need to be adjusted for your system.\n\n      For convenience, the load modules needed, are included here\nin a load library, packaged in XMIT format on this pds.  Do a\nTSO RECEIVE INDS(WSBG.WVOL.SOURCE(LOADLIB)) to create the load\nlibrary.  The format member $FMID, creatable by running the job\nFMTTPRD, is included, for the FMIDs that we have coded here.\n\n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      The way this package has to be customized, consists of several\nsteps:\n\n 1 -  Determine your list of DLIBs, Target Libs, Execution Libs,\n      and SMP/E Libs, and customize the DLIB, TLIB, XLIB, and SMPE\n      members of this pds.  Be careful to adhere to the column\n      conventions.  Columns 1-2 contain optional control cards\n      telling you what kind of library each library is.  This\n      information shows up on some of the SAS reports.\n\n      Customize these 4 members carefully for your shop.  This is\n      probably going to be a tedious job, unless you have a way\n      to automate it.\n\n 2 -  Create the list of FMIDs in your shop, and run the jobs:\n      FMTPRD, FMTLIBAL, and INVFMID1.  Provide each job with the\n      information it needs, according to your shop's environment.\n      You'll have to assign each library on the 4 dataset control\n      members, with an FMID as well.  If you want the FMIDs to show\n      up on the reports, you've got to do this.  However, you might\n      want to put this step off a bit, and have some blank FMIDs in\n      the reports for a while.\n\n 3 -  Once these first 2 steps have been done, you have to make a\n      list of the disk packs which contain your system software.\n      You have to make this list as complete as possible, or the\n      SAS jobs will not show the proper information.  After you\n      have a list of all packs containing all of your DLIBs, TLIBs,\n      XLIBs and SMPE libraries, then customize the SBGSTG1 and\n      SBGSTG2 jobs to point to all of those packs.  See if you can\n      get these jobs to run, creating the STG1PNCH and STG2PNCH\n      partitioned datasets.\n\n 4 -  Now try and get the SBGPRE job to run.  After that job looks\n      OK, try and get the SBGPRCR job to run.  You should find the\n      reports full and interesting.  Again, it is quite necessary\n      that a programmer versed in the SAS language should administer\n      this system.  It might not (or then again it might) run well,\n      out of the box.  You might also want to design more reports\n      for this system, once you see what the data is like.  Again,\n      it sure helps, if an experienced SAS programmer is administering\n      this system.\n\n\n Best of luck.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE504": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x05O\\x10)\\x00@\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-02-23T10:29:00", "lines": 64, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 504 is a Software Inventory system to attempt to keep     *   FILE 504\n//*           track of source modules and load modules in an        *   FILE 504\n//*           environment where the \"execution setup\" is not        *   FILE 504\n//*           similar to IBM's design.  This system might be        *   FILE 504\n//*           helpful for data centers which combine execution      *   FILE 504\n//*           libraries, keeping them separate from the SMP/E-fed   *   FILE 504\n//*           IBM and program product libraries.  You want to       *   FILE 504\n//*           know if the modules you're executing, are different   *   FILE 504\n//*           from the ones which are IBM, or ISV supplied.         *   FILE 504\n//*                                                                 *   FILE 504\n//*           You might also want to keep careful track of          *   FILE 504\n//*           multiple occurrences of the same module in            *   FILE 504\n//*           different libraries.                                  *   FILE 504\n//*                                                                 *   FILE 504\n//*           This system consists of 2 distinct parts:             *   FILE 504\n//*                                                                 *   FILE 504\n//*           1.  A data gathering part written in Assembler,       *   FILE 504\n//*               which goes against disk volumes that contain      *   FILE 504\n//*               system software libraries (source and load).      *   FILE 504\n//*                                                                 *   FILE 504\n//*           2.  An analysis part written in SAS, which you        *   FILE 504\n//*               must customize.  We have something that works     *   FILE 504\n//*               for us.                                           *   FILE 504\n//*                                                                 *   FILE 504\n//*           The data gathering part of this system does a         *   FILE 504\n//*           direct read and capture of the FORMAT 1 VTOC          *   FILE 504\n//*           entries of the disk packs containing the software.    *   FILE 504\n//*           This is Stage 1.                                      *   FILE 504\n//*                                                                 *   FILE 504\n//*           Then a member-level gathering is done, on every       *   FILE 504\n//*           dataset from these packs, which is eligible to        *   FILE 504\n//*           contain software.  After that is done, the SAS        *   FILE 504\n//*           reporting mechanisms can be put into effect.          *   FILE 504\n//*           This is Stage 2.                                      *   FILE 504\n//*                                                                 *   FILE 504\n//*           The data gathering part of this system is self-       *   FILE 504\n//*           contained, and you might consider adapting it for     *   FILE 504\n//*           other purposes, but the reporting part of this        *   FILE 504\n//*           system requires SAS.  It is recommended that this     *   FILE 504\n//*           system be administered by an experienced SAS          *   FILE 504\n//*           programmer, if one is available.  The administrator   *   FILE 504\n//*           should know Assembler coding, too.                    *   FILE 504\n//*                                                                 *   FILE 504\n//*           Contributors' Note:                                   *   FILE 504\n//*                                                                 *   FILE 504\n//*           The contributor cannot vouch for the absolute         *   FILE 504\n//*           accuracy of the reports, as they currently stand.     *   FILE 504\n//*           At the site where this is running, this system        *   FILE 504\n//*           can detect all occurrences of modules on system       *   FILE 504\n//*           libraries, and it can tell whether one version of     *   FILE 504\n//*           a module is different from another.  However, you     *   FILE 504\n//*           need a good SAS programmer to go over the code        *   FILE 504\n//*           \"with a fine-toothed comb\" to make sure that it       *   FILE 504\n//*           runs correctly and reports information correctly.     *   FILE 504\n//*                                                                 *   FILE 504\n//*           The reporting part of this system was developed,      *   FILE 504\n//*           and runs, under SAS Release 6.09.  We can't tell      *   FILE 504\n//*           how it will run under other SAS releases, or how      *   FILE 504\n//*           it might run if different SAS options are in          *   FILE 504\n//*           effect.  See member SASOPTS, which shows global       *   FILE 504\n//*           SAS options in effect where this system is running.   *   FILE 504\n//*                                                                 *   FILE 504\n//*     Questions, please email Sam Golob: sbgolob@attglobal.net    *   FILE 504\n//*                                                                 *   FILE 504\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMACL": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x92)\\x0f\\x00\\x98\\x17?\\tS\\x00\"\\x00\\x1e\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1992-10-16T00:00:00", "modifydate": "1998-06-22T09:53:00", "lines": 34, "newlines": 30, "modlines": 0, "user": "WSBG"}, "text": "//ASMACL   PROC   MAC1='SYS1.MACLIB',\n//             MAC2='SYS1.MODGEN',\n//             MAC3='SYS1.MACLIB',\n//             MAC4='SYS1.MODGEN',\n//             MAC5='SYS1.MACLIB',\n//             MAC6='SYS1.MODGEN',\n//             CLASS='*',\n//             OPT='NODECK',\n//             LOPT='MAP'\n//*\n//ASM      EXEC PGM=ASMA90,PARM='OBJECT,NODECK,TERM,&OPT'\n//SYSLIB   DD  DSN=&MAC1,DISP=SHR\n//         DD  DSN=&MAC2,DISP=SHR\n//         DD  DSN=&MAC3,DISP=SHR\n//         DD  DSN=&MAC4,DISP=SHR\n//         DD  DSN=&MAC5,DISP=SHR\n//         DD  DSN=&MAC6,DISP=SHR\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(4096,(360,360),,,ROUND),UNIT=VIO,\n//             DCB=BUFNO=1\n//SYSPRINT DD  SYSOUT=&CLASS\n//SYSTERM  DD  SYSOUT=&CLASS\n//SYSPUNCH DD  SYSOUT=B\n//SYSLIN   DD  DSN=&&OBJ,SPACE=(3040,(120,120),,,ROUND),UNIT=VIO,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS,BUFNO=1)\n//LKED     EXEC PGM=HEWL,PARM='MAP,LET,LIST,NCAL,&LOPT',\n//         COND=(0,NE,ASM)\n//SYSLIN   DD  DSN=&&OBJ,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(1,1,1)),\n//             DSN=&&GOSET(GO)\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(1024,(360,360),,,ROUND),UNIT=VIO,\n//             DCB=BUFNO=1\n//SYSPRINT DD  SYSOUT=&CLASS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DLIB": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x04\\x0f\\x01\\x01\\x04\\x0f\\x10Q\\x02\\x0f\\x02\\x0f\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-09T00:00:00", "modifydate": "2001-02-09T10:51:00", "lines": 527, "newlines": 527, "modlines": 0, "user": "WSBG"}, "text": "   HCI4100    STDL.CICS.V410.$INSTALL\n   HCI4100    STDL.CICS.V410.ADFHAPD1\n   HCI4100    STDL.CICS.V410.ADFHAPD2\n   HCI4100    STDL.CICS.V410.ADFHCLIB\n   HCI4100    STDL.CICS.V410.ADFHCOB\n   HCI4100    STDL.CICS.V410.ADFHC370\n   HCI4100    STDL.CICS.V410.ADFHINST\n   HCI4100    STDL.CICS.V410.ADFHLANG\n   HCI4100    STDL.CICS.V410.ADFHMAC\n   HCI4100    STDL.CICS.V410.ADFHMLIB\nLL HCI4100    STDL.CICS.V410.ADFHMOD\n   HCI4100    STDL.CICS.V410.ADFHMSGS\n   HCI4100    STDL.CICS.V410.ADFHPARM\n   HCI4100    STDL.CICS.V410.ADFHPLIB\n   HCI4100    STDL.CICS.V410.ADFHPL1\n   HCI4100    STDL.CICS.V410.ADFHPROC\n   HCI4100    STDL.CICS.V410.ADFHSAMP\n   HCI4100    STDL.CICS.V410.ADFHSRC\n   HCI4100    STDL.CICS.V410.ADFHSRCE\n   HCI4100    STDL.CICS.V410.XDFHINST\n   HBD6602    STDL.OS390.BDT.ABDTCLI0\n   HBD6602    STDL.OS390.BDT.ABDTHELP\n   HBD6602    STDL.OS390.BDT.ABDTMAC\nLL HBD6602    STDL.OS390.BDT.ABDTMOD\n   HBD6602    STDL.OS390.BDT.ABDTMSG\n   HBD6602    STDL.OS390.BDT.ABDTPNL0\n   HBD6602    STDL.OS390.BDT.ABDTSAMP\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFDOW1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFEXC1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFF301\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFJCL1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFMAC1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFPFA1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFPFB1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFPSF1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDFSAM1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDF38P1\n   HQC1406    STDL.OS390.BOOKMSTR.AEDF3821\n   HQC1406    STDL.OS390.BOOKMSTR.AEDF4251\nLL HTV4621    STDL.OS390.CBC.ACBCCMP\n   HTV4621    STDL.OS390.CBC.ACBCSR1\nLL HLB4601    STDL.OS390.CBC.ACLBDLL\n   HLB4601    STDL.OS390.CBC.ACLBOBJ\n   HLB4601    STDL.OS390.CBC.ACLBSR1\n   HLB4601    STDL.OS390.CBC.ACLBSR2\n   HLB4601    STDL.OS390.CBC.ACLBSR3\n   HLB4601    STDL.OS390.CBC.ACLBSR4\n   HLC4631    STDL.OS390.CBC.ACLDSR1\n   HLC4631    STDL.OS390.CBC.ACLDSR2\n   HLC4631    STDL.OS390.CBC.ACLDSR3\n   HLC4631    STDL.OS390.CBC.ACLDSR4\nLL JXV4642    STDL.OS390.CBC.ADAAMOD\n   JXV4642    STDL.OS390.CBC.ADAAOBJ\n   JXV4642    STDL.OS390.CBC.ADAASR1\n   JXV4642    STDL.OS390.CBC.ADAASR2\nLL HCKVB00    STDL.OS390.CDEBUG.AEQAMOD2\n   HCKVB00    STDL.OS390.CDEBUG.AEQASRC2\n   HMB3122    STDL.OS390.DCEBASE.AEUVACF\n   HMB3122    STDL.OS390.DCEBASE.AEUVEXEC\n   HMB3122    STDL.OS390.DCEBASE.AEUVHDCP\n   HMB3122    STDL.OS390.DCEBASE.AEUVHDR\n   HMB3122    STDL.OS390.DCEBASE.AEUVHETC\n   HMB3122    STDL.OS390.DCEBASE.AEUVHINC\n   HMB3122    STDL.OS390.DCEBASE.AEUVHLBR\n   HMB3122    STDL.OS390.DCEBASE.AEUVHTCL\n   HMB3122    STDL.OS390.DCEBASE.AEUVHXMP\n   HMB3122    STDL.OS390.DCEBASE.AEUVIDL\n   HMB3122    STDL.OS390.DCEBASE.AEUVLIB\nLL HMB3122    STDL.OS390.DCEBASE.AEUVLINK\n   HMB3122    STDL.OS390.DCEBASE.AEUVMSG\n   HMB3122    STDL.OS390.DCEBASE.AEUVPNL\n   HMB3122    STDL.OS390.DCEBASE.AEUVPRC\n   H0H2130    STDL.OS390.DCEDFS.AIOEEXEC\n   H0H2130    STDL.OS390.DCEDFS.AIOEHCFG\n   H0H2130    STDL.OS390.DCEDFS.AIOEHLIB\n   H0H2130    STDL.OS390.DCEDFS.AIOEHSAM\n   H0H2130    STDL.OS390.DCEDFS.AIOEHSHL\nLL H0H2130    STDL.OS390.DCEDFS.AIOELMOD\n   H0H2130    STDL.OS390.DCEDFS.AIOEMSGE\n   H0H2130    STDL.OS390.DCEDFS.AIOEPNLE\n   H0H2130    STDL.OS390.DCEDFS.AIOEPROC\n   H0H2130    STDL.OS390.DCEDFS.AIOESAMP\n   HSR1401    STDL.OS390.DCF.ADCFASM\n   HSR1401    STDL.OS390.DCF.ADCFIMAG\n   HSR1401    STDL.OS390.DCF.ADCFMAC\n   HSR1401    STDL.OS390.DCF.ADCFSAMP\n   HSR1401    STDL.OS390.DCF.AFONTPS\n   HSR1401    STDL.OS390.DCF.AMACLIB\nLL HSR1401    STDL.OS390.DCF.DCFDIST\n   HBKM300    STDL.OS390.EOY.AEOXFONT\n   HBKM300    STDL.OS390.EOY.AEOXIENU\n   HBKM300    STDL.OS390.EOY.AEOXOENU\n   HBKM300    STDL.OS390.EOY.AEOX1ENU\n   HBKM300    STDL.OS390.EOY.AEOX2ENU\n   HBKM300    STDL.OS390.EOY.AEOX3ENU\n   HBKM300    STDL.OS390.EOY.AEOX4ENU\n   HBKP300    STDL.OS390.EOY.AEOYBENU\n   HBKP300    STDL.OS390.EOY.AEOYCLIB\n   HBKP300    STDL.OS390.EOY.AEOYGENU\n   HBKP300    STDL.OS390.EOY.AEOYIENU\n   HBKP300    STDL.OS390.EOY.AEOYLENU\n   HBKP300    STDL.OS390.EOY.AEOYLEXS\nLL HBKP300    STDL.OS390.EOY.AEOYLOAD\n   HBKP300    STDL.OS390.EOY.AEOYMENU\n   HBKP300    STDL.OS390.EOY.AEOYPENU\n   HBKP300    STDL.OS390.EOY.AEOYPROC\n   HBKP300    STDL.OS390.EOY.AEOYSAMP\n   HBKP300    STDL.OS390.EOY.AEOYSENU\n   HBKP300    STDL.OS390.EOY.AEOYTENU\n   HBKP300    STDL.OS390.EOY.AEOYXENU\n   HEZ6603    STDL.OS390.EZAPP.AEZMBASE\n   HEZ6603    STDL.OS390.EZAPP.AEZMBENU\n   HEZ6603    STDL.OS390.EZAPP.AEZMCLST\n   HEZ6603    STDL.OS390.EZAPP.AEZMDB2\n   HEZ6603    STDL.OS390.EZAPP.AEZMHFS\n   HEZ6603    STDL.OS390.EZAPP.AEZMHM\n   HEZ6603    STDL.OS390.EZAPP.AEZMIPDB\n   HEZ6603    STDL.OS390.EZAPP.AEZMIPLP\n   HEZ6603    STDL.OS390.EZAPP.AEZMJOBS\nLL HEZ6603    STDL.OS390.EZAPP.AEZMLNK1\n   HEZ6603    STDL.OS390.EZAPP.AEZMNPRM\n   HEZ6603    STDL.OS390.EZAPP.AEZMPAN\n   HEZ6603    STDL.OS390.EZAPP.AEZMPARM\n   HEZ6603    STDL.OS390.EZAPP.AEZMPROC\n   HEZ6603    STDL.OS390.EZAPP.AEZMREXX\n   HEZ6603    STDL.OS390.EZAPP.AEZMSORC\n   HEZ6603    STDL.OS390.EZAPP.AEZMTCP\n   HEZ6603    STDL.OS390.EZAPP.AEZMVLST\n   HEZ6603    STDL.OS390.EZAPP.AEZMVSAM\n   HEZ6603    STDL.OS390.EZAPP.AEZMWLMP\n   HMQ4120    STDL.OS390.HLASM.AASMBOK2\n   HMQ4120    STDL.OS390.HLASM.AASMMAC1\n   HMQ4120    STDL.OS390.HLASM.AASMMAC2\nLL HMQ4120    STDL.OS390.HLASM.AASMMOD1\nLL HMQ4120    STDL.OS390.HLASM.AASMMOD2\n   HMQ4120    STDL.OS390.HLASM.AASMSAM1\n   HMQ4120    STDL.OS390.HLASM.AASMSAM2\n   HMQ4120    STDL.OS390.HLASM.AASMSHF2\n   HIMW200    STDL.OS390.ICSS.AIMWGENU\n   HIMW200    STDL.OS390.ICSS.AIMWGIF1\n   HIMW200    STDL.OS390.ICSS.AIMWHENU\n   HIMW200    STDL.OS390.ICSS.AIMWMENU\nLL HIMW200    STDL.OS390.ICSS.AIMWMOD1\n   HIMW200    STDL.OS390.ICSS.AIMWSAM1\n   HIMW200    STDL.OS390.ICSS.AIMWSAM2\n   HMOS100    STDL.OS390.IPPWAY.AANFEXEC\nLL HMOS100    STDL.OS390.IPPWAY.AANFLOAD\n   HMOS100    STDL.OS390.IPPWAY.AANFMAC\n   HMOS100    STDL.OS390.IPPWAY.AANFMLIB\n   HMOS100    STDL.OS390.IPPWAY.AANFPLIB\n   HMOS100    STDL.OS390.IPPWAY.AANFPROC\n   HMOS100    STDL.OS390.IPPWAY.AANFSAMP\n   HQX1700    STDL.OS390.ISF.AISFEXEC\n   HQX1700    STDL.OS390.ISF.AISFJCL\nLL HQX1700    STDL.OS390.ISF.AISFLINK\nLL HQX1700    STDL.OS390.ISF.AISFLOAD\n   HQX1700    STDL.OS390.ISF.AISFMLIB\n   HQX1700    STDL.OS390.ISF.AISFPLIB\n   HQX1700    STDL.OS390.ISF.AISFSLIB\n   HQX1700    STDL.OS390.ISF.AISFSRC\n   HQX1700    STDL.OS390.ISF.AISFTLIB\nLL HMR6160    STDL.OS390.LANRES.AEWXAUTH\n   HMR6160    STDL.OS390.LANRES.AEWXEXEC\n   HMR6160    STDL.OS390.LANRES.AEWXFONT\n   HMR6160    STDL.OS390.LANRES.AEWXHLTR\n   HMR6160    STDL.OS390.LANRES.AEWXINDX\nLL HMR6160    STDL.OS390.LANRES.AEWXLMOD\n   HMR6160    STDL.OS390.LANRES.AEWXMLBJ\n   HMR6160    STDL.OS390.LANRES.AEWXMLIB\n   HMR6160    STDL.OS390.LANRES.AEWXMSGJ\n   HMR6160    STDL.OS390.LANRES.AEWXMSGS\n   HMR6160    STDL.OS390.LANRES.AEWXNLMS\n   HMR6160    STDL.OS390.LANRES.AEWXPLBJ\n   HMR6160    STDL.OS390.LANRES.AEWXPLIB\n   HMR6160    STDL.OS390.LANRES.AEWXSAMP\n   HMR6160    STDL.OS390.LANRES.AEWXSLIB\n   HMR6160    STDL.OS390.LANRES.AEWXSRVC\n   HMR6160    STDL.OS390.LANRES.AEWXTLIB\n   HQW7300    STDL.OS390.LANSRVR.ABFSCNFG\n   HQW7300    STDL.OS390.LANSRVR.ABFSCSRC\n   HQW7300    STDL.OS390.LANSRVR.ABFSDBTB\n   HQW7300    STDL.OS390.LANSRVR.ABFSEXEC\nLL HQW7300    STDL.OS390.LANSRVR.ABFSLMOD\n   HQW7300    STDL.OS390.LANSRVR.ABFSMSGS\n   HQW7300    STDL.OS390.LANSRVR.ABFSOBIN\n   HQW7300    STDL.OS390.LANSRVR.ABFSPLIB\n   HQW7300    STDL.OS390.LANSRVR.ABFSPROC\n   HQW7300    STDL.OS390.LANSRVR.ABFSRBIN\n   HQW7300    STDL.OS390.LANSRVR.ABFSSAMP\n   HQW7300    STDL.OS390.LANSRVR.ABFSTLIB\n   HQW7300    STDL.OS390.LANSRVR.ABFSTTBL\n   HQW7300    STDL.OS390.LANSRVR.LFS.ACCSCTL\n   HMWL710    STDL.OS390.LE.$INSTALL\nLL HMWL710    STDL.OS390.LE.AAFHMOD1\n   HMWL710    STDL.OS390.LE.AAFHSRC1\nLL HMWL710    STDL.OS390.LE.ACEEMOD1\n   HMWL710    STDL.OS390.LE.ACEESRC1\n   HMWL710    STDL.OS390.LE.AEDCCPP1\n   HMWL710    STDL.OS390.LE.AEDCHFS\nLL HMWL710    STDL.OS390.LE.AEDCMOD1\nLL HMWL710    STDL.OS390.LE.AEDCMOD2\n   HMWL710    STDL.OS390.LE.AEDCMSEP\n   HMWL710    STDL.OS390.LE.AEDCOBJ1\n   HMWL710    STDL.OS390.LE.AEDCSRC6\n   HMWL710    STDL.OS390.LE.AEDCSRC7\nLL HMWL710    STDL.OS390.LE.AIBMMOD3\n   HMWL710    STDL.OS390.LE.AIBMSRC3\nLL HMWL710    STDL.OS390.LE.AIGZMOD1\n   HMWL710    STDL.OS390.LE.AIGZSRC1\n   HPRF226    STDL.OS390.NETSPL.AAPIINST\n   HPRF226    STDL.OS390.NETSPL.AAPIMAC1\nLL HPRF226    STDL.OS390.NETSPL.AAPIMOD1\n   HPRF226    STDL.OS390.NETSPL.AAPISAMP\nLL HDZ11SM    STDL.OS390.NFS.ANFSLIB\n   HDZ11SM    STDL.OS390.NFS.ANFSMAC\n   HDZ11SM    STDL.OS390.NFS.ANFSSAMP\n   HDZ11SM    STDL.OS390.NFS.ANFSTARB\n   JTCP327    STDL.OS390.OEAPPSRV.AFOMDATA\n   JTCP327    STDL.OS390.OEAPPSRV.AFOMHDRS\n   JTCP327    STDL.OS390.OEAPPSRV.AFOMHFS\nLL JTCP327    STDL.OS390.OEAPPSRV.AFOMMOD1\n   JTCP327    STDL.OS390.OEAPPSRV.AFOMOBJ\n   H0GI200    STDL.OS390.OSASF.AIOACONF\n   H0GI200    STDL.OS390.OSASF.AIOADIMG\n   H0GI200    STDL.OS390.OSASF.AIOAIBIN\nLL H0GI200    STDL.OS390.OSASF.AIOALMOD\nLL H0GI200    STDL.OS390.OSASF.AIOAMMOD\n   H0GI200    STDL.OS390.OSASF.AIOAMSGS\n   H0GI200    STDL.OS390.OSASF.AIOANLMS\n   H0GI200    STDL.OS390.OSASF.AIOASAMP\n   H0GI200    STDL.OS390.OSASF.AIOAWEUI\n   HPRF220    STDL.OS390.PSF.AAPSDAT0\nLL HPRF220    STDL.OS390.PSF.AAPSMOD0\n   HPRF220    STDL.OS390.PSF.AFDEFLIB\n   HPRF220    STDL.OS390.PSF.AFNTLIB\n   HPRF220    STDL.OS390.PSF.AFNTLIBB\n   HPRF220    STDL.OS390.PSF.AFNTOLN\n   HPRF220    STDL.OS390.PSF.AFNTSAMP\n   HPRF220    STDL.OS390.PSF.AFNT300\n   HPRF220    STDL.OS390.PSF.AOVERLIB\n   HPRF220    STDL.OS390.PSF.APDEFLIB\n   HPRF220    STDL.OS390.PSF.APSDAT00\n   HPRF220    STDL.OS390.PSF.APSEGLIB\nLL HQN2110    STDL.OS390.PSFACIF.AAPKMOD1\n   HQN2110    STDL.OS390.PSFACIF.AAPKSAM1\n   HQN2110    STDL.OS390.PSFACIF.AAPKSAM2\n   HQN2110    STDL.OS390.PSFACIF.AAPKSAM3\n   HQN2110    STDL.OS390.PSFACIF.AAPKULIB\nLL HQN2112    STDL.OS390.PSFAPI.AAPQMOD1\nLL HQN2112    STDL.OS390.PSFAPI.AAPQMOD2\n   HQN2112    STDL.OS390.PSFAPI.AAPQSAM1\n   HQN2112    STDL.OS390.PSFAPI.AAPQULIB\n   HRF2230    STDL.OS390.RACF.HHRFCLST\n   HRF2230    STDL.OS390.RACF.HHRFMSG\n   HRF2230    STDL.OS390.RACF.HHRFPANL\n   HRF2230    STDL.OS390.RACF.HHRFSKEL\n   HRM6603    STDL.OS390.RMF.ACPMPWS\n   HRM6603    STDL.OS390.RMF.AERBCLS\n   HRM6603    STDL.OS390.RMF.AERBMAC1\n   HRM6603    STDL.OS390.RMF.AERBMENU\nLL HRM6603    STDL.OS390.RMF.AERBMOD1\n   HRM6603    STDL.OS390.RMF.AERBPENU\n   HRM6603    STDL.OS390.RMF.AERBPWS\n   HRM6603    STDL.OS390.RMF.AERBT\n   HRM6603    STDL.OS390.RMF.AERBTENU\n   HDZ11C0    STDL.OS390.R3.AACBCNTL\n   HTE25D2    STDL.OS390.R3.AADFMAC1\n   HGD3200    STDL.OS390.R3.AADMCDA\n   HGD3200    STDL.OS390.R3.AADMCFO\n   HGD3200    STDL.OS390.R3.AADMDAT\n   HGD3200    STDL.OS390.R3.AADMGDF\n   HGD3200    STDL.OS390.R3.AADMIMG\n   HGD3200    STDL.OS390.R3.AADMMAP\nLL HGD3200    STDL.OS390.R3.AADMMOD\n   HGD3200    STDL.OS390.R3.AADMMSG\n   HGD3200    STDL.OS390.R3.AADMOPS\n   HGD3200    STDL.OS390.R3.AADMPCF\n   HGD3200    STDL.OS390.R3.AADMPNL\n   HGD3200    STDL.OS390.R3.AADMSAM\n   HGD3200    STDL.OS390.R3.AADMSYM\nLL HDZ11C0    STDL.OS390.R3.AADRLIB\n   HDZ11C0    STDL.OS390.R3.AADRYLIB\n   HVT4401    STDL.OS390.R3.AAPPDAT2\n   HVT4401    STDL.OS390.R3.AAPPDAT4\nLL HVT4401    STDL.OS390.R3.AAPPMOD1\nLL HVT4401    STDL.OS390.R3.AAPPMOD2\n   HVT4401    STDL.OS390.R3.AAPPSAMP\n   HBB6603    STDL.OS390.R3.ABLSCLI0\n   HBB6603    STDL.OS390.R3.ABLSKEL0\n   HBB6603    STDL.OS390.R3.ABLSMSG0\n   HBB6603    STDL.OS390.R3.ABLSPNL0\n   HBB6603    STDL.OS390.R3.ABLSTBL0\nLL HDZ11C0    STDL.OS390.R3.ABMFMOD0\n   HBB6603    STDL.OS390.R3.ABPXEXEC\n   HBB6603    STDL.OS390.R3.ABPXMENU\nLL HBB6603    STDL.OS390.R3.ABPXMOD1\n   HBB6603    STDL.OS390.R3.ABPXPENU\nLL HBB6603    STDL.OS390.R3.ABPXSPC\n   HBB6603    STDL.OS390.R3.ABPXTENU\n   HCS6031    STDL.OS390.R3.ACBDCLST\nLL HCS6031    STDL.OS390.R3.ACBDHENU\n   HCS6031    STDL.OS390.R3.ACBDMENU\nLL HCS6031    STDL.OS390.R3.ACBDMOD1\nLL HCS6031    STDL.OS390.R3.ACBDMOD2\n   HCS6031    STDL.OS390.R3.ACBDPENU\n   HCS6031    STDL.OS390.R3.ACBDTEMP\n   HCS6031    STDL.OS390.R3.ACBDTENU\n   HDZ11C0    STDL.OS390.R3.ACBRDBRM\nLL HDZ11C0    STDL.OS390.R3.ACBRMOD0\nLL HDZ11C0    STDL.OS390.R3.ACDMMOD0\nLL HDZ11C0    STDL.OS390.R3.ACDRMODS\n   HDZ11C0    STDL.OS390.R3.ACDRTABL\n   HMWL710    STDL.OS390.R3.ACEESRC1\nLL HDZ11C0    STDL.OS390.R3.ACLMMOD0\nLL HTE25D2    STDL.OS390.R3.ACMDLIB\nLL HDZ11C0    STDL.OS390.R3.ACMP01\nLL HBB6603    STDL.OS390.R3.ACSSLIB\n   HDZ11C0    STDL.OS390.R3.ADBBLIB\n   HTE25D2    STDL.OS390.R3.ADFMAC1\nLL HDZ11C0    STDL.OS390.R3.ADFPMOD0\n   JDZ11CB    STDL.OS390.R3.ADFQMLIB\n   JDZ11CB    STDL.OS390.R3.ADFQPLIB\n   JDZ11CB    STDL.OS390.R3.ADFQPSRC\n   HDZ11C0    STDL.OS390.R3.ADGTCLIB\nLL HDZ11C0    STDL.OS390.R3.ADGTLLIB\n   HDZ11C0    STDL.OS390.R3.ADGTMLIB\n   JDZ11CB    STDL.OS390.R3.ADGTPLIB\n   JDZ11CB    STDL.OS390.R3.ADGTPSRC\n   HDZ11C0    STDL.OS390.R3.ADGTSLIB\n   HDZ11C0    STDL.OS390.R3.ADGTTLIB\n   HDZ11C0    STDL.OS390.R3.ADGTTSRC\nLL HDZ11C0    STDL.OS390.R3.ADMSSVM\n   HMWL710    STDL.OS390.R3.AEDCSRC6\n   JDZ11CB    STDL.OS390.R3.AEDGEXE1\n   JDZ11CB    STDL.OS390.R3.AEDGMENU\nLL JDZ11CB    STDL.OS390.R3.AEDGMOD1\n   JDZ11CB    STDL.OS390.R3.AEDGPENU\n   JDZ11CB    STDL.OS390.R3.AEDGPSRC\n   JDZ11CB    STDL.OS390.R3.AEDGSKL1\n   JDZ11CB    STDL.OS390.R3.AEDGSRC1\n   JDZ11CB    STDL.OS390.R3.AEDGTBL1\n   JDZ11CB    STDL.OS390.R3.AEDGTSRC\n   HFST101    STDL.OS390.R3.AEPWBENU\nLL HFST101    STDL.OS390.R3.AEPWMOD1\n   HFST101    STDL.OS390.R3.AEPWSRC1\n   HTCP320    STDL.OS390.R3.AEZAMAC1\n   HTCP320    STDL.OS390.R3.AEZAMAC2\n   HTCP320    STDL.OS390.R3.AEZAMAC3\nLL HDZ11C0    STDL.OS390.R3.AGDEMOD0\n   HBB6603    STDL.OS390.R3.AGENLIB\nSA HDZ11C0    STDL.OS390.R3.AGFTAJL1\nLL HDZ11C0    STDL.OS390.R3.AGFTAMD1\nLL HDZ11C0    STDL.OS390.R3.AGFUMOD1\n   HJE6603    STDL.OS390.R3.AHASMAC\n   HJE6603    STDL.OS390.R3.AHASMENU\nLL HJE6603    STDL.OS390.R3.AHASMOD\n   HJE6603    STDL.OS390.R3.AHASPARM\n   HJE6603    STDL.OS390.R3.AHASPNL0\n   HJE6603    STDL.OS390.R3.AHASSAMP\n   HJE6603    STDL.OS390.R3.AHASSRC\n   HTE25D2    STDL.OS390.R3.AHELP\n   JTE25D0    STDL.OS390.R3.AHELPENP\n   JTE52D0    STDL.OS390.R3.AICQAB\n   JTE52D0    STDL.OS390.R3.AICQILIB\n   JTE52D0    STDL.OS390.R3.AICQMAC1\n   JTE52D0    STDL.OS390.R3.AICQMAC2\n   JTE52D0    STDL.OS390.R3.AICQMAC3\n   JTE52D0    STDL.OS390.R3.AICQMAC4\n   JTE52D0    STDL.OS390.R3.AICQMAC5\nLL HDZ11C0    STDL.OS390.R3.AIEWMOD0\nLL HBB6603    STDL.OS390.R3.AIFALIB\n   HDZ11C0    STDL.OS390.R3.AIGDVBS1\nLL HDZ11C0    STDL.OS390.R3.AIGWCFLB\n   HMWL710    STDL.OS390.R3.AIGZSRC1\n   HDZ11C0    STDL.OS390.R3.AIMAGE\nLL HDZ11C0    STDL.OS390.R3.AIMFMOD0\nLL HFX1112    STDL.OS390.R3.AINDLMD\n   HIF4402    STDL.OS390.R3.AISPALIB\n   HIF4402    STDL.OS390.R3.AISPCLIB\n   HIF4402    STDL.OS390.R3.AISPEXEC\n   HIF4402    STDL.OS390.R3.AISPGENU\n   HIF4402    STDL.OS390.R3.AISPGMLI\n   HIF4402    STDL.OS390.R3.AISPGUI\n   HIF4402    STDL.OS390.R3.AISPHELP\n   HIF4402    STDL.OS390.R3.AISPMACS\n   HIF4402    STDL.OS390.R3.AISPMENU\nLL HIF4402    STDL.OS390.R3.AISPMOD1\n   HIF4402    STDL.OS390.R3.AISPPENU\n   HIF4402    STDL.OS390.R3.AISPSAMP\nLL HIF4402    STDL.OS390.R3.AISPSASC\n   HIF4402    STDL.OS390.R3.AISPSENU\n   HIF4402    STDL.OS390.R3.AISPSLIB\n   HIF4402    STDL.OS390.R3.AISPTENU\n   HVT4401    STDL.OS390.R3.AISTASGD\n   HVT4401    STDL.OS390.R3.AISTASN1\n   HVT4401    STDL.OS390.R3.AISTCLI0\n   HVT4401    STDL.OS390.R3.AISTCLS1\n   HVT4401    STDL.OS390.R3.AISTCMIP\n   HVT4401    STDL.OS390.R3.AISTDAT1\n   HVT4401    STDL.OS390.R3.AISTDAT2\n   HVT4401    STDL.OS390.R3.AISTDAT3\n   HVT4401    STDL.OS390.R3.AISTGDMO\n   HVT4401    STDL.OS390.R3.AISTMAC1\n   HVT4401    STDL.OS390.R3.AISTMAC2\n   HVT4401    STDL.OS390.R3.AISTMSG0\n   HVT4401    STDL.OS390.R3.AISTPNL0\n   HVT4401    STDL.OS390.R3.AISTPNL1\nLL HBB6603    STDL.OS390.R3.ALINKLIB\nLL HBB6603    STDL.OS390.R3.ALPALIB\n   HBB6603    STDL.OS390.R3.AMACLIB\nLL HBB6603    STDL.OS390.R3.AMIGLIB\n   HBB6603    STDL.OS390.R3.AMODGEN\n   JTE25D0    STDL.OS390.R3.AMSGENP\n   JTED5D0    STDL.OS390.R3.AMSGENU\nLL HBB6603    STDL.OS390.R3.ANUCLEUS\nLL HBB6603    STDL.OS390.R3.AOSACB\nLL HBB6603    STDL.OS390.R3.AOSA0\nLL HBB6603    STDL.OS390.R3.AOSA1\nLL HRF2230    STDL.OS390.R3.AOSBN\nLL HBB6603    STDL.OS390.R3.AOSB0\nLL HBB6603    STDL.OS390.R3.AOSB3\nLL HBB6603    STDL.OS390.R3.AOSCA\nLL HBB6603    STDL.OS390.R3.AOSCD\nLL HBB6603    STDL.OS390.R3.AOSCE\nLL HBB6603    STDL.OS390.R3.AOSC2\nLL HBB6603    STDL.OS390.R3.AOSC5\nLL HBB6603    STDL.OS390.R3.AOSC6\nLL HBB6603    STDL.OS390.R3.AOSD0\nLL HBB6603    STDL.OS390.R3.AOSD7\nLL HBB6603    STDL.OS390.R3.AOSD8\nLL HBB6603    STDL.OS390.R3.AOSG0\nLL HBB6603    STDL.OS390.R3.AOSJSC\nLL HTE25D2    STDL.OS390.R3.AOST3\nLL HTE25D2    STDL.OS390.R3.AOST4\nLL HBB6603    STDL.OS390.R3.AOSU0\nLL HBB6603    STDL.OS390.R3.AOSXCF\nLL HBB6603    STDL.OS390.R3.AOS00\nLL HBB6603    STDL.OS390.R3.AOS04\nLL HBB6603    STDL.OS390.R3.AOS05\nLL HBB6603    STDL.OS390.R3.AOS06\nLL HBB6603    STDL.OS390.R3.AOS11\nLL HBB6603    STDL.OS390.R3.AOS12\nLL HBB6603    STDL.OS390.R3.AOS20\nLL HBB6603    STDL.OS390.R3.AOS24\nLL HBB6603    STDL.OS390.R3.AOS26\nLL HBB6603    STDL.OS390.R3.AOS28\nLL HBB6603    STDL.OS390.R3.AOS32\n   HBB6603    STDL.OS390.R3.APARMLIB\n   HBB6603    STDL.OS390.R3.APROCLIB\n   HBB6603    STDL.OS390.R3.ASAMPLIB\nLL HDZ11C0    STDL.OS390.R3.ASSFMOD0\n   HTE25D2    STDL.OS390.R3.ATSOMAC\n   HTE25D2    STDL.OS390.R3.AUADS\n   HMP1A00    STDL.OS390.SMPE.AGIMCLS0\n   HMP1A00    STDL.OS390.SMPE.AGIMMENU\n   HMP1A00    STDL.OS390.SMPE.AGIMPENU\n   HMP1A00    STDL.OS390.SMPE.AGIMSENU\n   HMP1A00    STDL.OS390.SMPE.AGIMTENU\n   H08K310    STDL.OS390.SOMMVS.AGOSEFW\n   H08K310    STDL.OS390.SOMMVS.AGOSEXEC\n   H08K310    STDL.OS390.SOMMVS.AGOSH.H\n   H08K310    STDL.OS390.SOMMVS.AGOSHH.HH\n   H08K310    STDL.OS390.SOMMVS.AGOSIDL.IDL\n   H08K310    STDL.OS390.SOMMVS.AGOSIMP\n   H08K310    STDL.OS390.SOMMVS.AGOSJCL\nLL H08K310    STDL.OS390.SOMMVS.AGOSLDA\nLL H08K310    STDL.OS390.SOMMVS.AGOSLOAD\n   H08K310    STDL.OS390.SOMMVS.AGOSMISC\n   H08K310    STDL.OS390.SOMMVS.AGOSMSGS\nLL H08K310    STDL.OS390.SOMMVS.AGOSPLX\n   H08K310    STDL.OS390.SOMMVS.AGOSPNLS\n   H08K310    STDL.OS390.SOMMVS.AGOSPROF\n   H08K310    STDL.OS390.SOMMVS.AGOSREXX\n   H08K310    STDL.OS390.SOMMVS.AGOSSH.STARS.H\n   H08K310    STDL.OS390.SOMMVS.AGOSSKEL\n   H08K310    STDL.OS390.SOMMVS.AGOSSMPC.C\n   H08K310    STDL.OS390.SOMMVS.AGOSSMPD.DAT\n   H08K310    STDL.OS390.SOMMVS.AGOSSMPH.H\n   H08K310    STDL.OS390.SOMMVS.AGOSSMPI.IDL\n   H08K310    STDL.OS390.SOMMVS.AGOSSMPP\n   H08K310    STDL.OS390.SOMMVS.AGOSSMPX.CXX\n   H08K310    STDL.OS390.SOMMVS.AGOSSSIR\n   H08K310    STDL.OS390.SOMMVS.AGOSXH.XH\n   H08K310    STDL.OS390.SOMMVS.AGOTDB2B\n   H08K310    STDL.OS390.SOMMVS.AGOTIMP\n   H08K310    STDL.OS390.SOMMVS.AGOTINI\n   H08K310    STDL.OS390.SOMMVS.AGOTJCL\nLL H08K310    STDL.OS390.SOMMVS.AGOTLOAD\n   H08K310    STDL.OS390.SOMMVS.AGOTPDL.IDL\n   H08K310    STDL.OS390.SOMMVS.AGOTPH.H\n   H08K310    STDL.OS390.SOMMVS.AGOTPXH.XH\n   H08K310    STDL.OS390.SOMMVS.AGOTSCXX.CXX\n   H08K310    STDL.OS390.SOMMVS.AGOTSINI\n   H08K310    STDL.OS390.SOMMVS.AGOTSMIH.IH\n   H08K310    STDL.OS390.SOMMVS.AGOTSMPC.C\n   H08K310    STDL.OS390.SOMMVS.AGOTSMPH.H\n   H08K310    STDL.OS390.SOMMVS.AGOTSMPI.IDL\n   H08K310    STDL.OS390.SOMMVS.AGOTSMXH.XH\n   H08K310    STDL.OS390.SOMMVS.AGOTSXIH.XIH\n   HSLW110    STDL.OS390.SYSVIEW.AEFMCLST\n   HSLW110    STDL.OS390.SYSVIEW.AEFMCMDS\nLL HSLW110    STDL.OS390.SYSVIEW.AEFMMOD2\n   HSLW110    STDL.OS390.SYSVIEW.AEFMPENU\n   HSLW110    STDL.OS390.SYSVIEW.AEFMPRMS\n   HSLW110    STDL.OS390.SYSVIEW.AEFMPS21\n   HSLW110    STDL.OS390.SYSVIEW.AEFMPUBS\n   HSLW110    STDL.OS390.SYSVIEW.AEFMSAMP\n   HSLW110    STDL.OS390.SYSVIEW.AEFMSHF\n   HTCP320    STDL.OS390.TCPIP.AEZADBR1\n   HTCP320    STDL.OS390.TCPIP.AEZAHELP\nLL HTCP320    STDL.OS390.TCPIP.AEZAMOD1\n   HTCP320    STDL.OS390.TCPIP.AEZAOOE1\n   HTCP320    STDL.OS390.TCPIP.AEZAOOE2\n   HTCP320    STDL.OS390.TCPIP.AEZARNT1\n   HTCP320    STDL.OS390.TCPIP.AEZARNT2\n   HTCP320    STDL.OS390.TCPIP.AEZARNT3\n   HTCP320    STDL.OS390.TCPIP.AEZARNT4\n   HTCP320    STDL.OS390.TCPIP.AEZAROE1\n   HTCP320    STDL.OS390.TCPIP.AEZAROE2\n   HTCP320    STDL.OS390.TCPIP.AEZAROE3\n   HTCP320    STDL.OS390.TCPIP.AEZASMP1\n   HTCP320    STDL.OS390.TCPIP.AEZAXLTD\n   HTCP320    STDL.OS390.TCPIP.AEZAXLTK\n   HTCP320    STDL.OS390.TCPIP.AEZAXLT1\n   HTCP320    STDL.OS390.TCPIP.AEZAXLT2\n   HTCP320    STDL.OS390.TCPIP.AEZAXLT3\n   H0GG121    STDL.OS390.VLIFT.AIESINST\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FMIDIN": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x01\\x00\\x13\\x1f\\x01\\x00\\x14\\x0f\\x11\\x10\\x05|\\x05v\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2000-05-10T00:00:00", "modifydate": "2000-05-19T11:10:00", "lines": 1404, "newlines": 1398, "modlines": 0, "user": "WSBG"}, "text": "0 /*FMID / DESCRIPTIONS*/\nP ADCS520 ADCS R5.2\nP AFP0100 ADVANCED FUNCTION PRINTING\nP ARTS140 ARTS V1.4\nP ARTS200 ARTS V2.0\nP ARTS220 ARTS V2.2\nP BBAAA20 B&B COMMON INSTALLATION\nP BBBBX16 B&B SUBSYSTEM\nP BBCBK53 B&B\nP BBCIS53 B&B\nP BBCMR53 B&B\nP BBCXT53 B&B\nP BBHZZ11 B&B MAINVIEW ALARM MANAGER\nP BBIIS25 B&B\nP BBISS26 B&B\nP BBI3338 B&B BBI 3.8 PRODUCTS\nP BBLBQ11 B&B\nP BBMCA43 CMF 4.3 ANALYZER\nP BBMCA52 CMF 5.2 ANALYZER\nP BBMCH43 CMF 4.3 ANALYZER HARNESS\nP BBMCH52 CMF 5.2 ANALYZER HARNESS\nP BBMCL52 CMF RELEASE LEVEL INFO\nP BBMCM10 COMMON STORAGE MONITOR\nP BBMCS17 CMF EXTRACTOR SAMPLERS\nP BBMCS43 CMF 4.3 EXTRACTOR SAMPLERS\nP BBMCX17 CMF EXTRACTOR BASE\nP BBMCX43 CMF 4.3 EXTRACTOR BASE\nP BBMCX51 CMF 5.1 EXTRACTOR BASE\nP BBMCX52 CMF 5.2 EXTRACTOR BASE\nP BBMDA20 DSO ANALYZER\nP BBMDX20 DSO EXTRACTOR\nP BBMMA31 CMF ANALYZER (MVS/370)\nP BBMON10 BOOLE & BABBAGE MONITORS\nP BBMRI11 RESOLVE ISPF INTERFACE\nP BBMRS15 RESOLVE SERVICES\nP BBMRS31 RESOLVE SERVICES\nP BBMRT16 REALTIME\nP BBMRX15 RESOLVE BASE\nP BBMRX31 RESOLVE BASE\nP BBMWB12 MVS PERFORMANCE MANAGER\nP BBPCM11 B&B CMFMON\nP BBPCM52 B&B CMFMON 5.2\nP BBTES11 B&B\nP BBTHS12 B&B MAINVIEW DESKTOP\nP BBTTC11 B&B\nP BBVVT31 B&B MAINVIEW ALTERNATE ACCES\nP BBYAA11 MMR APPLICATION\nP BBYAA22 MMR APPLICATION\nP BBYAA24 MMR APPLICATION\nP BBYAB43 CMF ONLINE\nP BBYAB51 CMF ONLINE\nP BBYAB52 CMF ONLINE 5.2\nP BBYDZ21 MV/MGR DATA COLLECTOR\nP BBYDZ22 MV/MGR DATA COLLECTOR\nP BBYDZ24 MV/MGR DATA COLLECTOR\nP BBYVT11 VTAM/EXCP TERMINAL MONITOR\nP BBYZB33 BASE SERVICES\nP BBYZX32 B&B BASE SERVICES\nP BBYZX33 BASE SERVICES\nP BBYZZ21 B&B BASE SERVICES\nP BBYZZ32 B&B BASE SERVICES\nP BBYZZ33 B&B BASE SERVICES\nP BBZCB11 B&B\nP BBZIB11 B&B\nP BSSIB36 SYNCSORT R3.6 BETTERGENER\nP BSSIB37 SYNCSORT R3.7 BETTERGENER\nP BSSIC36 SYNCSORT R3.6 COBOL II EXITS\nP BSSIE36 SYNCSORT R3.6 COBOL/370 EXIT\nP BSSIL37 SYNCSORT R3.7\nP BSSIR36 SYNCSORT R3.6 REENTRANT\nP BSSIY37 SYNCSORT R3.7\nP BSSI036 SYNCSORT R3.6 BASE FUNCTION\nP BSSI037 SYNCSORT R3.7 BASE FUNCTION\nP BSSY036 SYNCSORT R3.6 BASE FUNCTION\nP C$A6200 CA EZTRIEVE\nP C$A6201 CA EZTRIEVE\nP C$F1200 CA\nP CBT4240 PROGRAMS FROM THE CBT TAPE\nP CDU1000 CA DOCVIEW\nP CF33100 CA CA-C RUNTIME 3.1\nP CF62300 CA MAPPER 2.3\nP CG81200 CA\nP CHD3400 CA\nP CI66200 CA\nP CLJ3900 CA LIBRARIAN 3.9\nP CLJ4100 CA LIBRARIAN 4.1\nP CLJ4101 CA LIBRARIAN 4.1\nP CLJ4102 CA LIBRARIAN 4.1\nP CLJ4200 CA LIBRARIAN 4.2\nP CLJ4201 CA LIBRARIAN 4.2\nP CLJ4202 CA LIBRARIAN 4.2\nP CLR3900 CA LIB/AM 3.9\nP CLR4100 CA LIB/AM 4.1\nP CLR4200 CA LIB/AM 4.2\nP CLU3900 CA LIBRARIAN/ELIPS 3.9\nP CLU4100 CA LIBRARIAN/ELIPS 4.1\nP CLU4101 CA LIBRARIAN/ELIPS 4.1\nP CLU4102 CA LIBRARIAN/ELIPS 4.1\nP CLU4200 CA LIBRARIAN/ELIPS 4.2\nP CLU4201 CA LIBRARIAN/ELIPS 4.2\nP CLU4202 CA LIBRARIAN/ELIPS 4.2\nP CL049B0 CA1 (TMS) 4.9\nP CL049I0 CA1 (TMS) 4.9\nP CL049T0 CA1 (TMS) 4.9\nP CL050B0 CA1 (TMS) 5.0 BASE FUNCTION\nP CL050E0 CA1 (TMS) 5.0 DELTAS\nP CL050I0 CA1 (TMS) 5.0 ISPF INTERFACE\nP CL05099 CA1 (TMS) DELETE OLD RELEASE\nP CL052A1 CA1 (TMS) 5.2 TMSACTRT\nP CL052A2 CA1 (TMS) 5.2 TMSUJI\nP CL052A3 CA1 (TMS) 5.2 TMSUSI\nP CL052B0 CA1 (TMS) BASE 5.2\nP CL052I0 CA1 (TMS) ISPF INTERFACE\nP CL052K0 CA1 (TMS) CONVERSION MODULES\nP CL72000 CA11 (ARTS) 2.0\nP CL72010 CA11 (ARTS) 2.0 USERMOD\nP CL72012 CA11 (ARTS) 2.0 USERMOD\nP CL72013 CA11 (ARTS) 2.0 USERMOD\nP CL72014 CA11 (ARTS) 2.0 USERMOD\nP CL72015 CA11 (ARTS) 2.0 USERMOD\nP CL72016 CA11 (ARTS) 2.0 USERMOD\nP CL72017 CA11 (ARTS) 2.0 USERMOD\nP CL72019 CA11 (ARTS) 2.0 USERMOD\nP CL72020 CA11 (ARTS) 2.0 USERMOD\nP CL72021 CA11 (ARTS) 2.0 USERMOD\nP CL72023 CA11 (ARTS) 2.0 USERMOD\nP CL72024 CA11 (ARTS) 2.0 USERMOD\nP CL72200 CA11 (ARTS) 2.2 BASE\nP CL72201 CA11 (ARTS) 2.2 TMS INTERFAC\nP CL72202 CA11 (ARTS)\nP CL72205 CA11 (ARTS) 2.2 IEFUJV\nP CL72206 CA11 (ARTS)\nP CL72208 CA11 (ARTS)\nP CL72209 CA11 (ARTS)\nP CL72210 CA11 (ARTS)\nP CL72211 CA11 (ARTS)\nP CL72212 CA11 (ARTS)\nP CL72213 CA11 (ARTS)\nP CL72214 CA11 (ARTS)\nP CL72215 CA11 (ARTS)\nP CL72216 CA11 (ARTS)\nP CL72217 CA11 (ARTS)\nP CL72218 CA11 (ARTS)\nP CL72219 CA11 (ARTS)\nP CL72220 CA11 (ARTS)\nP CL72221 CA11 (ARTS)\nP CL72222 CA11 (ARTS)\nP CL72223 CA11 (ARTS)\nP CL72224 CA11 (ARTS)\nP CL84300 CA FASTDASD\nP CL84400 CA FASTDASD\nP CL84411 CA FASTDASD\nP CL84412 CA FASTDASD\nP CMF5200 BOOLE & BABBAGE RESOLVE R5.2\nP CPP1000 CA PROFILE\nP CSR7000 CA90 SERVICE  SRAM\nP CS91000 CAIRIM 1.0\nP CUW1000 CA1 COPYCAT 1.0\nP CWU4000 CA DOCVIEW/VPE 4.0\nP CWU4200 CA CAIVPE 4.2\nP CXE6000 CA EARL 6.0\nP C370100 IBM C RELEASE: 1.0\nM DFSMHSM DFSMS/HSM OS/390\nM DFSMMVS DFSMS/MVS OS/390\nM DFSMRMM DFSMS/RMM OS/390\nP DOC1000 DOCULINK V1.0\nP DTA2145 DATA 21 V4.5\nP DUO4600 DOS UNDER OS V4.6\nP EAS1102 ASSEMBLER XF\nM EBA1201 BASE CONTROL PGM 7.0\nM EBB1102 BASE CONTROL PGM.\nM EBT1102 OS390 R3 BTAM/SP BASE 1.1.0\nM EBT1201 BTAM\nP EDE1102 DEMF\nP EDE1201 DEMF\nM EDM1102 ACCESS METHOD SERVIC\nM EDM1201 ACCESS METHOD SERVIC\nP EDS1102 DASD ERP\nP EDS1201 DASD ERP\nP EDT1100 SPPSII SCP\nP EDU1B01 ICKDSF SYS SUPPORT R11 MVS\nP EDU1C01 ICKDSF SYS SUPPORT R12 MVS\nP EDU1D01 ICKDSF SYS SUPPORT R13 MVS\nP EDU1E01 ICKDSF SYS SUPPORT R14 MVS\nP EDU1F01 ICKDSF SYS SUPPORT R15 MVS\nP EDU1G01 ICKDSF SYS SUPPORT R16 MVS\nP EDU1191 ICKDSF SYS SUPPORT R10\nP EDU1602 ICKDSF SYS SUPPORT R6\nP EDU1702 ICKDSF SYS SUPPORT R7\nP EDU1802 ICKDSF SYS SUPPORT R8\nP EDU1902 ICKDSF SYS SUPPORT R9\nM EEP0100 370X/EP SMP4\nP EEP0101 EP/OS V0R101\nP EEP0200 EP/OS V0R200\nP EEP0300 EP/OS  V1R000\nM EER3400 EREP 3.4.0\nM EER3500 EREP 3.5.0 - OS390 R3\nP EGA1102 GAM\nP EGS1102 GSP\nP EGS1201 GSP\nP EHO1400 PSS HOST SUPP. R4.0\nP EHO1410 PSS HOST SUPP. R4.1\nP EHS6100 3600 HOST SUPPORT\nM EIP1102 INTERACTIVE CNTL PGM\nM EMI1102 MICR / OCR\nM EMI2220 MICR / OCR  OS390 R3\nM EML1102 MULTI-LEAVING WORK.\nM EMO1201 MICR / OCR\nM EMS1102 MSS PGM.\nM EMS1201 MSS PGMS\nM EPM1102 PROGRAM MGMT.\nM EPM1201 PROGRAM MGMT.\nP EREP340 EREP 3.4.0\nP EREP350 EREP 3.5.0\nP ESA1201 SERVICE AIDS\nM ESA4300 MVS/ESA RELEASE 4.3\nP ESP     MVS COBOL PREPROCESSOR\nM ESS1102 SSS (BASE IND) SSS 140\nM ESS1201 SSS (BASE IND)\nM EST1102 SYSTEM SUPPORT\nM EST1201 SYSTEM SUPPORT\nM ESU1102 SU BIT STRING\nM ESX1201 OLTEP\nM ESY1400 SMP\nM ETC0108 TCAM 10\nM ETC2402 ACF/TCAM V2R4\nP ETD1100 SPPS-II SCP\nM ETI1106 TSO TIOC OS390 R3 TIOC\nM EUT1102 UTILITIES\nM EUT1201 UTILITIES\nM EVP1102 VPSS\nM EVP1201 VPSS\nM EVT1302 ACF/VTAM SCP BASE R3\nM EXW1102 EXTERNAL WRITER\nP EZT6200 EASYTRIEVE V6.2\nP FBB1221 MVS PROC. SUPPORT 2\nP FDM1131 DATA MGMT 3800   7.0\nP FDM1133 DATA MGMT 3800\nP FDSD440 FASTDASD V4.4\nP FDS1B03 ICKDSF REL 11 STANDALONE\nP FDS1C03 ICKDSF REL 12 STANDALONE\nP FDS1C13 ICKDSF REL 12 STANDALONE\nP FDS1D03 ICKDSF REL 13 STANDALONE\nP FDS1122 MVS PROCESSOR SUP\nP FDS1131 3800 ERP\nP FDS1133 MVS PROCESSOR SUP\nP FDS1193 ICKDSF STANDALONE\nP FDS1511 ICKDSF VS1 REL 5\nP FDS1520 ICKDSF STANDALONE\nP FDS1543 ICKDSF MVS REL 5\nP FDS1611 ICKDSF VS1 REL 6\nP FDS1620 ICKDSF STANDALONE\nP FDS1711 ICKDSF VS1 REL 7\nP FDS1720 ICKDSF STANDALONE\nP FDS1820 ICKDSF STANDALONE\nP FDS1920 ICKDSF STANDALONE\nP FDU1D07 ICKDSF R13 ISMF MODS\nP FDU1D08 ICKDSF R13 PANEL SUPPORT\nP FDU1F07 ICKDSF R15 MODS SUPPORT\nP FDU1F08 ICKDSF R15 PANEL SUPPORT\nP FDU1G07 ICKDSF R16 OS390 MODS SUPP\nP FDU1G08 ICKDSF R16 OS390 PANEL SUPP\nP FDZ1B02 ICKDSF SYS SUP REL 11\nP FDZ1C02 ICKDSF SYS SUP REL 12\nP FDZ1D02 ICKDSF SYS SUP REL 13\nP FDZ1192 ICKDSF SYS SUPPORT R10\nP FDZ1610 ICKDSF SYS SUPPORT R6\nP FDZ1710 ICKDSF SYS SUPPORT R7\nP FDZ1810 ICKDSF SYS SUPPORT R8\nP FDZ1910 ICKDSF SYS SUPPORT R9\nP FER3410 EREP 3.4 FEATURE 1\nP FER3420 EREP 3.4 M2 FEAT.\nP FFST120 FFST V1 R2\nP FHO1411 PSS TCF 3650\nP FHO1412 PSS TCF 3680\nP FHO1413 PSS CCF\nP FHO1414 PSS DCF BTAM\nP FHO1415 PSS DCF VTAM\nP FLZ1210 IPDT 120 NLS ENGLISH\nP FLZ1211 IPDT 120 NLS GERMAN\nP FLZ1212 IPDT 120 NLS FRENCH\nP FLZ1213 IPDT 120 NLS ITALIAN\nP FLZ1214 IPDT 120 NLS SPANISH\nP FLZ1215 IPDT 120 NLS DANISH\nP FLZ1216 IPDT 120 NLS DUTCH\nP FLZ1217 IPDT 120 NLS SWEDISH\nP FLZ1218 IPDT 120 NLS FRENCH CANAD\nP FLZ1220 IPDT 120 NLS SWISS GERMAN\nP FSP1221 ACF/SSP V1R2\nP FSP1320 ACF/SSP V1R3\nP FSS0K00 FILE SUBSYSTEM SUMMARY  V 0.K\nP FUT1133 IEBIMAGE\nP GSS2600 GOAL SUBSYSTEM FOR MVS V2.6\nP GSS2700 GOAL SUBSYSTEM FOR MVS V2.7\nP HAD1102 DXT V1R1\nP HAD2202 DXT V2R2\nP HAD2302 DXT V2R3 BASE\nP HAD2402 DXT V2R4 BASE\nM HAE1400 DEVICE FACILITY R2.0\nM HAE1500 DEVICE FACILITY R2.1\nM HAE2102 DEVICE FACILITY V2.R1.0\nM HAE2202 DEVICE FACILITY V2.R2.0\nM HAE2302 DEVICE FACILITY V2.R3.0\nM HAE2402 DEVICE FACILITY V2.R4.0\nM HAE2502 DFDSS V2.R5.0 SUP 9045\nP HAF1203 PRINT SERV FAC 1.2.0\nP HAF1220 PRINT SERV FAC 1.2.1\nP HAF1228 PRINT SERV FAC 1.3.0\nP HAH2100 ASSEMBLER H\nP HAP1400 VS APL R4 INTERPRETER\nP HAQ1102 INSPECT UPPER CASE\nP HAU1103 PRINT MGMT FAC REL 1.1.1\nM HBB2102 MVS/SP2.2.3\nM HBB3310 MVS/ESA3.1.3\nM HBB4410 MVS/ESA4.1.0\nM HBB4420 MVS/ESA4.2.0 JES2\nM HBB4430 MVS/ESA SP JES2 ENU 4.03.0\nM HBB6601 OS/390 V1R1M0\nM HBB6603 OS/390 V1R3M0 - R3 BCP\nP HBC2103 DIS0SS CONTROLLER\nP HBDC102 ONDS X.400 MVS\nC HBDD110 CICS/ESA AMA 1.1.0\nP HBD1102 BDT RELEASE 1 REFRSH\nP HBD2103 BDT VERSION 2 BASE\nP HBD6602 BDT (OS/390 R3)\nP HBH1202 ASSET V1 R2 M0- MVS\nP HBKK200 OFFICEVISION PS/CAL MVS\nP HBKM300 BOOKMANAGER MVS READ\nP HBKP110 BOOKMANAGER MVS BUILD\nP HBKP300 BOOKMANAGER BUILD OS/390 R3\nP HBS1200 BTS\nP HBXZ111 SAA ACONNS/MVS 1.1.1\nP HBXZ112 ACONNS/MVS 1.1.2 BASE\nP HBY2202 JES328X PRINT FACILITY\nC HCCV100 CICSVR/MVS/ESA V2\nC HCC1102 CICS/DDM\nP HCD4680 HOST COMPRESS DECOMPRESS\nP HCE1102 COMP DOC PRINT FAC\nP HCG1101 RMGR BASE + IQL ADAPTER\nP HCG1111 RMGR COMMON CODE\nP HCG1201 RMGR BASE $& IQL ADAPTER\nP HCH1200 PER BANK MACH AM-BR\nP HCH1204 PER BANK MACH AM-BR\nP HCH1305 4730 AMBR R2.3- MVS\nC HCIB312 MVS/SP CATIA V3.1.3 BASE\nC HCID312 MVS/SP CATIA V3.1.3 IMAGE\nC HCI1100 CICS/OS2 MVS HOST\nC HCI1110 CICS PD/MVS 1.1 BASE\nC HCI1114 CICS PD/MVS 1.1.1\nC HCI1120 CICS/OS2 MVS HOST\nC HCI1601 CICS R160 VS1  8307\nC HCI1602 CICS R160 MVS  8307\nC HCI1612 CICS R161 MVS  8406\nC HCI1613 CICS R161 XA  8406\nC HCI1702 CICS R170 MVS\nC HCI1703 CICS R170 MVS/XA\nC HCI2103 CICS R210 MVS/XA\nC HCI2113 CICS/MVS 2.1.1\nC HCI2212 CICS/MVS 2.1.2 BASE\nC HCI2310 CICS/ESA 3.1.0\nC HCI2312 CICS/ESA 3.1.1\nC HCI2320 CICS/ESA 3.2.0\nC HCI3321 CICS/ESA 3.2.1 BASE\nC HCI4100 CICS/ESA 4.1.0 BASE\nP HCJB312 MVS/SP CATIA V3.1.3 KINEMAT\nP HCJC312 MVS/SP CATIA V3.1.3 ROBOTIC\nP HCJD312 MVS/SP CATIA V3.1.3 BUILD\nP HCJF312 MVS/SP CATIA V3.1.3 SCHEMAT\nP HCJG312 MVS/SP CATIA V3.1.3 PIPING\nP HCJH312 MVS/SP CATIA V3.1.3 STRUCT\nP HCJJ312 MVS/SP CATIA V3.1.3 G.I.I.\nP HCJK312 MVS/SP CATIA V3.1.3 DRAFTIN\nP HCJL312 MVS/XA CATIA V3.1.3 INTERFA\nP HCJM312 MVS/XA CATIA V3.1.3 LIBRARY\nP HCJN312 MVS/XA CATIA V3.1.3 BASE\nP HCJP312 MVS/XA CATIA V3.1.3 3D\nP HCJQ312 MVS/XA CATIA V3.1.3 ADV.SUR\nP HCJR312 MVS/XA CATIA V3.1.3 DRAFTIN\nP HCJS312 MVS/XA CATIA V3.1.3 NC-MILL\nP HCJT312 MVS/XA CATIA V3.1.3 SOLIDS\nP HCJV312 MVS/XA CATIA V3.1.3 NCLATHE\nP HCJW312 MVS/XA CATIA V3.1.3 IMAGE\nP HCJX312 MVS/XA CATIA V3.1.3 KINEMAT\nP HCJY312 MVS/XA CATIA V3.1.2 ROBOT\nP HCJZ312 MVS/XA CATIA V3.1.2 BUILD\nP HCKB312 MVS/XA CATIA SCHEMA\nP HCKC312 MVS/XA CATIA V3.1.2 PIPING\nP HCKD312 MVS/XA CATIA V3.1.2 STRUCT\nP HCKF312 MVS/XA CATIA V3.1.2 G.I.I\nP HCKG312 MVS/SP CATIA V3.1.2 INT\nP HCKH312 MVS/SP CATIA V3.1.2 LIB\nP HCKJ312 MVS/SP CATIA V3.1.2 ADVSURF\nP HCKK312 MVS/SP CATIA V3.1.2 SOLIDS\nP HCKL312 MVS/SP CATIA V3.1.2 NCLATHE\nP HCKM312 MVS/SP CATIA V3.1.3 NC-MILL\nP HCKN312 MVS/SP CATIA V3.1.3 3D\nP HCKVB00 OS390 R3 C/C++ DEBUG TOOL\nP HCLB202 C370 LIBRARY FOR MVS 2.1\nP HCL1300 VS COBOL II LIBRARY\nP HCL1310 VS COBOL II LIBRARY\nP HCL1320 VS COBOL II LIBRARY\nP HCL1400 VS COBOL II LIBRARY\nP HCM1700 3790/8100 HOST PREP\nP HCO2400 OS/VS COBOL COMPILER\nP HCQ1200 VS COBOL II COMP\nP HCQ1300 VS COBOL II COMP\nP HCQ1310 VS COBOL II COMP\nP HCQ1320 VS COBOL II COMP\nP HCQ1400 VS COBOL II COMP\nP HCRP100 INTEG. CRYPTO GRAPHIC 1.1.0\nP HCR1101 CRYPTO GRAPHIC\nP HCR1102 CRYPTO GRAPHIC\nP HCSH101 HCD\nP HCSH201 HCD SUP\nP HCSH301 MVS/ESA SP JES2 ENU 4.03.0\nP HCSH501 HCD 5.1 BASE PART\nP HCSH521 OS/390\nP HCSP100 CSP RUNTIME SERVICES\nP HCS1501 NCCF R2 VS1\nP HCS1502 NCCF R2 MVS\nP HCS2202 NCCF V2 R2 MVS\nP HCS2203 NCCF V2 R2 MVS/XA\nP HCS6031 HCD BASE (OS/390 R3)\nP HCT1203 PER BANK MCH NET MON\nP HCT1204 PER BANK MCH NET MON\nP HCT1205 PBM/NETMON R2.1 IMS\nC HCT1206 PBM/NETMON R2.1 CICS\nP HCT1307 PBM NETMON 230 IMS\nC HCT1308 PBM NETMON 230 CICS\nP HCT1309 PBM NETMON 240 IMS\nC HCT1310 PBM NETMON 240 CICS/MVS\nP HCU1101 CRYPTO\nP HCU1102 CRYPTO\nP HCW1102 DW370 V1R1M0\nP HCW1105 DW370 V1R1M1\nP HCW1202 DW370 V1R2M0\nP HCW1241 DW370 1.2.1 BASE FOR TSO\nP HCW1256 DW370 V1R2M1\nP HDB2210 DATA BASE 2\nP HDB2220 DB2 V2R2 BASE\nP HDC1520\nP HDDM100 GDDM MVS OS/2 LINK 1.0.0\nP HDD1602 DD R6 DD BASE\nP HDF1400 SCREEN DEF FAC/CICS\nP HDF1500 SDF 1.5 OS\nC HDI1100 DMS/CICS/VS - REL 2\nC HDI1102 DXT DIALOGS (MVS/SP)\nC HDI1310 DMS/CICS/VS - REL 3\nC HDI1400 DMS/CICS/VS - REL 4\nC HDI1404 DMS/CICS/VS - REL 4.1\nC HDK1112 QUERY.DL/I CICS/OS/VS\nP HDK1113 QUERY.DL/I IMS/VS\nC HDK1122 QUERY.DL/I CICS/OS/VS\nP HDK1123 QUERY.DL/I IMS/VS\nP HDL1102 COMMON LIBRARY\nP HDL1122 COMMON LIBRARY\nP HDL1202 C/370-PL/I COMMON LIBRARY\nP HDO3302 DISOSS/370 V3R3 MVS\nP HDO3402 DISOSS/370 V3R4 MVS\nP HDPM102 DATA PROPOGATOR MVS/ESA\nP HDP2230 MVS/XA DFP VER 2 REL 3.0\nP HDP2240 MVS/XA DFP VER 2 REL 4.0\nP HDP3FS1 MVS/DFP NETWRK SYS SERVER\nP HDP3310 MVS/DFP V3R1M0\nP HDP3320 MVS/DFP V3R2M0 SUP\nP HDP3330 MVS DFP V3R3M0\nP HDSS102 X.400 DISSOS CONN MVS/370\nP HDSS202 X.400 DISSOS CONN MVS/370\nP HDTN100 IBM DATAINTERCHANGE/MVS\nP HDTN200 IBM DATAINTERCHANGE/MVS\nP HDTV312 MVS/XA CATIA V3.1.3 FIN.ELE\nP HDT1310 PSS S.D.M.  R3.1\nP HDV2302 ISPF/PDF REL 2.3.0\nP HDV3102 ISPF/PDF REL 3.1.0\nP HDV3302 ISPF/PDF REL 3.3.0 BASE\nP HDV3502 ISPF/PDF REL 3.5.0 BASE\nP HDWT100 DW/370 VERSION 2 TSO\nP HDX1130 OPEN EDITION MVS DEBUGGER\nP HDX3102 DSX V3R102 FOR MVS/VS1\nP HDX3202 DSX V3 R2 FOR MVS\nP HDX3203 DSX V3 R2 FOR MVS/XA\nP HDY1102 MVS DITTO\nP HDY1103 MVS DITTO R2\nP HDZ11B0 DFSMS/MVS V1 R2\nP HDZ11C0 DFSMS/MVS V1 R3 OS/390 1.3\nP HDZ11NE DFSMS/MVS V1R2M0 MVS/V430\nP HDZ11NP DFSMS/MVS V1R2M0 MVS/V510\nP HDZ11SE DFSMS NFS CLIENT OS390 1.3\nP HDZ11SM DFSMS NFS SERVER OS390 1.3\nP HDZ1100 DFSMS/MVS ENU 1.01.0\nP HEC1102 ESE (ESCE/MVS)\nP HEC1205 ESE CONS\nP HEC1305 ESE CONSUL MVS\nP HED1305 ESE V1R3M0 DEVELOP MVS\nP HEF1120 SDFII MVS BASE\nP HEP1B00 EP V1R11  MVS\nP HEP1C00 EP V1R12  MVS\nP HEP1105 EP 3725 V1R4M0\nP HEP1204 EP 3705 V1R3M1\nP HEP1205 EP/OS 3725\nP HEP1305 EP/OS 3725\nP HEP1405 EP/OS 3725\nP HEP1510 EP/OS 3745 PEP W/NCP V5R1\nP HEP1520 EP/OS 3725 V1R5 MVS\nP HEP1610 EP/OS 3725 V1R6 MVS&MVS/XA\nP HEP1611 EP V1R6.1 FOR OS/MVS\nP HEP1700 EP V1R7M0 FOR OS/MVS\nP HEP1800 EP V1R8M0 MVS\nP HEP1900 EP V1R9M0 MVS\nP HEQ1100 OCD/GTMOSI R1.0 FOR MVS/370\nP HEQ1103 OCD/GTMOSI R1.0 FOR MVS/XA\nP HEZ6603 EZ APPLICATION ENABLING OS390\nP HFC1200 4700COBOL R2 VS1/MVS\nP HFFM100 IMAGEPLUS IMS FAF API\nP HFFN100 IMAGEPLUS ODM 2.1.0\nP HFF1102 PAGE PRT FORMAT AID 1.1.0\nP HFGC100 AIFORM 1.1.0\nP HFL1200 VS FORTRAN LIBRARY\nP HFL1403 VS FORTRAN LIBRARY\nP HFL2103 VS FORTRAN LIBRARY\nP HFL2202 VS FORTRAN LIBRARY\nP HFL2302 VS FORTRAN MVS LIBRARY\nP HFL2402 VS FORTRAN MVS LIB 2.5.0\nC HFMM100 IMAGEPLUS CICS FAF API\nP HFM1102 FMS/MVS R1M1M1 PP\nP HFN1102 FONT LIB SER FAC\nP HFP2202 FILE TRANSFER PGM\nP HFP3102 NETVIEW FTP BASE\nP HFP3103 NETVIEW FTP BASE MVS/XA\nP HFP3112 NETVIEW FTP - AFS\nP HFP3113 NETVIEW FTP - AFS XA\nP HFR1202 VS FORTRAN\nP HFR2103 VS FORTRAN\nP HFR2302 VS FORTRAN MVS IAD\nP HFR2402 VS FORTRAN MVS IAD\nP HFR2502 VS FORTRAN MVS IAD 2.5.0\nP HFST101 FFST     OS390 R3\nP HFS1410 4700 HOST SUP R8 ELARG.\nP HFS1502 4700 HOST SUPP/MVS\nP HFS1504 4700 HOST SUPP/MVS\nP HFS1511 4700 HOST SUPP 4701-3\nP HFS1512 4700 HOST SUPP 4701-3\nP HFS1602 4700 HSP/MVS\nP HFS1605 4700 HSP/HSX  MVS\nP HFS1611 4700 HSP/A3 MVS\nP HFS1621 4700 HOST SUP 4701-1/2\nP HFS1702 4700 HOST SUP R7 MVS\nP HFS1705 4700 HOST SUP EXTENSIONS\nP HFS1711 4700 HOST SUP A4 MACROS MVS\nP HFS1802 4700 HOST SUP 48 MVS\nP HFS1805 4700 HOST SUP EXTENSIONS\nP HFS1811 4700 HOST SUP 4701-3/4702\nP HFS1902 4700 HOST SUPPORT MVS\nP HFS1905 4700 HOST SUP EXTENSIONS\nP HFS1911 4700 HOST SUP 4701-3/4702\nP HFTM102 OSI/FILE SERVICES 1.1.0\nP HFT1403 VS FORTRAN COMPILER\nP HFT2103 VS FORTRAN COMPILER\nP HFT2202 VS FORTRAN MVS COMPILER\nP HFT2302 VS FORTRAN MVS COMPILER\nP HFT2402 VS FORTRAN MVS COMPILER\nP HFT2502 VS FORTRAN MVS COMP 2.5.0\nP HFX1102 3270PC FILE TRANSFER\nP HFX1112 3270PC FILE TRANSFER OS390\nP HFY1160 116 CSP/AD\nP HFY2104 212 CSP/AD\nP HFY3104 CSP/AD\nP HFY3202 CSP/AD 3.2.0 MVS\nP HFY3205 CSP/AD 3.2.1 MVS\nP HFY3207 CSP/AD 3.2.2 MVS\nP HFY3212 CSP/AD 3.3.0 MVS\nP HFZ1160 CSP/AE\nP HFZ2104 CSP/AE\nP HFZ3104 CSP/AE\nP HFZ3202 CSP/AE 3.2.0 MVS\nP HFZ3205 CSP/AE 3.2.1 MVS\nP HFZ3207 CSP/AE 3.2.2 MVS\nP HFZ3208 CSP/AE 3.2.2 MVS INT MODS\nP HFZ3212 CSP/AE 3.3.0 MVS\nP HGA1202 GAMSP FOR MVS\nP HGA1203 GAMSP FOR MVS\nP HGA1204 GAMSP FOR XA\nP HGA1205 GAMSP FOR MVS/XA\nP HGA1206 GAMSP 1.2.2 MVS\nP HGA1207 GAMSP 1.2.2 MVS/XA\nP HGA1302 GAMSP 1.3.0 MVS\nP HGA1303 GAMSP/BOMF 1.3.0 MVS\nP HGA1304 GAMSP 1.3.0 MVS/XA\nP HGA1305 GAMSP/BOMF 1.3.0 MVS/XA\nP HGD1400 MVS GDDM REL 4\nP HGD2100 MVS GDDM VER 2 REL 1\nP HGD2104 MVS GDDM V2 R1 M1\nP HGD2202 MVS GDDM BASE\nP HGD2300 GDDM MVS 2.3.0 BASE\nP HGD3110 GDDM/MVS 3.1.1\nP HGD3200 GDDM  (OS/390 R3)\nP HGD3201 OS390 R3 GDDM PGF\nP HGE2102 IMS ADF II V2 R1\nP HGE2202 IMS ADF II V2 R2\nP HGG1302 GDDM/GRAPHIGS R3 MVS\nP HGG1304 GDDM/GRAPHIGS 31 MVS\nP HGG1305 GDDM/GRAPHIGS 32 MVS\nP HGG1306 GDDM/GRAPHIGS 33 MVS\nP HGG1307 GDDM/GRAPHIGS 34 MVS\nP HGG1308 GDDM/GRAPHIGS 35 MVS\nC HGI1102 CICSVR/MVS 1.1.0\nC HGI1112 CICSVR/MVS 1.1.1\nP HGL1102 OVERLAY GENERATION LANGUAGE\nP HGL1200 OVERLAY GEN LANG 1.2.0\nP HGML101 SGML TRANSLATOR 1.2.0\nP HGNM100 NETCENTER GNM BASE\nC HGT1103 CICSPARS/MVS/V1\nP HGV1102 MVS OSCS 1.1.0\nP HGV1112 MVS OSCS 1.1.1\nP HGY1103 MERVA MVS/IMS\nP HGY1201 MERVA V1.2 MVS/IMS\nC HGZ1100 MERVA MVS/CICS BASE\nC HGZ1201 MERVA V1.2 MVS/CICS BASE\nM HHC1100 HCF TCAM\nM HHC1101 HCF VTAM\nM HHC1102 HCF VTAM\nM HHC2101 HCF VTAM\nM HHC2102 HCF VTAM\nP HHG1102 ADPS/M MVS\nP HHG1106 ADPS/M 1.1.1 MVS\nP HHK1102 ADPS/P MVS\nP HHK1106 ADPS/P MVS 1.1.1\nP HHL2102 PL/1 2.1.0 MVS LIBRARY\nP HHL2202 PL/1 SPECIFIC LIBRARY\nP HHL2222 PL/1 SPECIFIC LIBRARY\nP HHL2302 PL/1 V2 LIBRARY\nP HHM1302 HIERAR STORAGE MGR\nP HHM2202 DFHSM REL 2.2.0\nP HHM2302 DFHSM VERSION 2.3.0\nP HHM2402 DFHSM R 2.4.0 BASE CODE\nP HHM2502 DFHSM R 2.5.0 BASE CODE\nP HHM2602 DFHSM R 2.6.0 BASE\nP HHX1100 LANGUAGE AND HOST V1 R1\nP HHX1200 LANGUAGE AND HOST V1 R2\nP HIF2302 ISPF/DIALOG MGR 230\nP HIF3102 ISPF/DM ENGLISH\nP HIF3202 ISPF/DM BASE 3.2.0.\nP HIF3302 ISPF/DM BASE 3.3.0.\nP HIF3502 ISPF/DM BASE 3.5.0.\nP HIF4202 ISPF/DM BASE 4.2.0.\nP HIF4402 ISPF/DM BASE 4.2.1 OS390 R3\nP HIL2104 PL/1 2.1.0 MVS PLITEST\nP HIL2204 PLITEST\nP HIL2224 PLITEST\nP HIL2304 PL/I V2 PLITEST\nP HIMW100 INTERNET CONNECTION SERVER\nP HIMW200 ICSS (OS/390 R3)\nP HIM1304 IMS/VS 1.3 DATA BASE\nP HIM2102 DATA BASE 2\nP HIM2202 DATA BASE 2\nP HIM2302 DATA BASE 2\nP HIM2303 DATA BASE 2\nP HIO1104 I/O CONTROL PROGRAM OS390 R3\nP HIPM110 RMF (OS/390 R3)\nP HIP2329 IPCS VER 1 REL 3.3\nP HIR1202 IMS/VS 1.3 IRLM\nP HIR1302 IMS/VS 2.1 IRLM\nP HIR1402 IMS/VS 2.2 IRLM RESOURCE LOCK M\nP HIR1502 IRLM V1R5 SUP 8908\nP HIW1102 ECF TSO/E HOST EXECUTABLE\nP HIW1141 ECF V1R1M2\nP HIW1201 ECF V1R2M0 SERV. BASE\nC HIX1102 CICS ATTACH PACKAGE\nC HIX1202 CICS ATTACH PACKAGE\nC HIX1302 CICS ATTACH PACKAGE\nC HIX2210 CICS ATTACH PACKAGE\nC HIX2220 DB2 V2R2 CICS ATTACH\nP HIYB101 INFOREM III BASE\nP HIY1102 IMS ATTACH PACKAGE\nP HIY1202 IMS ATTACH PACKAGE\nP HIY1302 IMS ATTACH PACKAGE\nP HIY2210 IMS ATTACH PACKAGE\nP HIY2220 DB2 V2R2 IMS ATTACH\nP HIZ1202 EARLY CODE - DB2\nP HIZ1302 EARLY CODE - DB2\nP HIZ2210 EARLY CODE - DB2\nP HIZ2220 DB2 V2R2 SUBSYSTEM INIT\nP HJAXXXX XXXXXXXXXXXXXXXXXX\nM HJE1367 JES2 SP 1.3.6\nM HJE2215 JES2 SP 2.1.5\nM HJE2221 JES2 SP 2.2.0\nM HJE2330 JES2 SP 1.3.4\nM HJE3311 JES2 SP 3.1.1\nM HJE3313 JES2 SP 3.1.3 SUP\nM HJE4103 JES2 SP 4.1.0\nM HJE4420 JES2 SP 4.2.0 SUP\nM HJE4430 MVS/ESA SP JES2 ENU 4.03.0\nM HJE6601 OS/390 JES2\nM HJE6603 JES2 (OS/390 R3)\nM HJS2215 JES3 SP 2.1.5\nM HJS2220 JES3 SP 2.2.1\nM HJS2327 JES3 SP 1.3.1\nM HJS2329 JES3 SP 1.3.4\nM HJS3311 JES3 SP 3.1.1\nM HJS3312 JES3 SP 3.1.2\nM HJS3313 JES3 SP 3.1.3 SUP\nM HJS4421 JES3 SP 4.2.1\nM HJS6601 OS/390 JES3\nP HKBB110 TIRS 1.1.0 S/370 BUILDER\nP HKE0200 PSS 3680 SALES\nP HKE1200 PSS 3680 SALES\nP HKE1210 PSS 3680 SALES\nP HKS0200 PSS 3680 S.A.A.\nP HKS1200 PSS 3680 S.A.A.\nP HKS1210 PSS 3680 S.A.A.\nC HLA1101 CICSV1 R5\nP HLBR102 C/370 LIBRARY\nP HLBR122 C/370 LIBRARY V1R1\nP HLBR142 C/370 LIBRARY V1R2\nP HLB1302 ACRITH V3\nP HLB4601 OS390 R3 C/C++\nP HLC2400 OS/VS COBOL LIBRARY\nP HLC4631 OS390 R3 C/C++ APP SUPP/COLLECT\nP HLD1302 NLDM V2R3 MVS\nP HLD1303 NLDM V2R3 MVS/XA\nP HLG1102 APL2\nP HLG1202 APL2 INTERPRETER\nP HLG1302 APL2 TSO EXECUTOR EXECUTE)\nP HLN1102 RM4700 LOANS APPL.\nP HLU1201 DOWNSTREAM LOAD UTL\nP HLU1202 DOWNSTREAM LOAD UTL\nC HLW1103 DMNL-CICS/VS 1.1.1\nC HLW1105 DMNL-CICS/VS 1.1.2\nP HLX1103 DMNL/IMS/VS 1.1.1\nP HLX1105 DMNL/IMS/VS 1.1.2\nP HLZ1202 IPDT V1R2M0\nP HMA1100 DASD MIGRATION AID\nP HMA1200 DASD MIGRATION AID\nP HMB3122 OS/390 O/E DCE BASE\nP HMC1102 MSCM VER 1 REL 1\nP HMDL100 APPLICATION SYSTEM V2\nP HMDL101 APPLICATION SYSTEM V2\nP HMDL200 APPLICATION SYS V2.2 APF\nP HMDL201 APPLICATION SYSTEM V2.2NLS\nP HMDL202 APPLICATION SYS V2.2 DATAF\nC HMDW100 DW/370 VERSION 2 CICS\nP HMD1202 RMDS V1R2\nP HMD1302 RMDS V1R3\nP HMD1402 RMDS V1R4M0\nP HMH2102 IMS/VS REL 2.1.0 DB\nP HMH2202 IMS/VS REL 2.2.0 DB\nP HMH3102 IMS V3R1 DB MANAGER\nP HMH4102 IMS DATABASE MGR V4.1.0\nP HMJ3102 IMS V3R1 TRANSACTION MGR\nP HMK3102 IMS V3R1 SYS SERV COMP.\nP HMK4102 IMS V4R1 SYS SERV COMP.\nP HMK6600 IMS V6R1              .\nP HMNG102 LANGUAGE ACCESS MVS/VM/V1\nP HMOS100 IP PRINTWAY (OS/390 R3)\nP HMP1A00 SMP/E BASE (OS/390 R3)\nP HMP1100 SMP/E REL1 VER1 MOD0\nP HMP1200 SMP/E REL2 VER1 MOD0\nP HMP1300 SMP/E REL3 VER0 MOD0\nP HMP1400 SMP/E REL4 VER0 MOD0\nP HMP1500 SMP/E REL5 VER0 MOD0\nP HMP1502 SMP/E BASE 1.5.1\nP HMP1600 SMP/E BASE 1.6.1\nP HMP1608 SMP/E BASE 1.6 0 SOFT CPY\nP HMP1700 SMP/E BASE 1.7\nP HMP1800 SMP/E BASE 1.8\nP HMP1802 SMP/E BASE 1.8.1\nP HMQ4100 HIGH LEVEL ASSEMBLER R1\nP HMQ4120 HIGH LEVEL ASSEMBLER\nP HMRG110 DEVELOPMATE COMMON CODE1.1\nP HMRG111 DEVELOPMATE COMMON CODE1.1\nP HMR1302 RM4700CTLR MVS\nP HMR1303 RM4700CTLR MVS\nP HMR1402 RM4700CTLR MVS\nP HMR1502 RM/CTLR MVS\nP HMR1602 4700 RM/CTLR 1.6.0 MVS\nP HMR2102 RM4700CTLR MVS\nP HMR2104 RM4700CTLR MVS\nP HMR2202 RM4700CTLR V2\nP HMR2302 4700 RM/CTLR 2.3.0 MVS\nP HMR2402 4700 RM/CTLR 2.4.0 MVS\nP HMR6160 OS/390 LANRES\nP HMTF100 X.400 MTF VM\nP HMTF102 OSME - X400MTF FOR MVS\nP HMU1102 MTRX SW HOST FAC(NCCF/370)\nP HMU1103 MTRX SW HOST FAC (NCCF/XA)\nP HMU1104 MTRXSW HOST FAC(NVIEW/370)\nP HMU1105 MTRXSW HOST FAC(NVIEW/XA)\nP HMVL210 MERVA/370 V2 IMS\nP HMWL510 LE\nP HMWL710 LE (OS/390 R3)\nP HNC2100 ACF/NCP V2 R1 OS\nP HNC2103 COMMON V2 OS 3725\nP HNC2105 ACF/NCP V2 OS 3725\nP HNC3103 ACF/NCP V3 0S 3705\nP HNC3106 ACF/NCP V3 OS 3725\nP HNC3107 COMMON V3 OS 3725\nP HNC4103 COMMON V4 SLU8601\nP HNC4105 ACF/NCP V4 SLU8601\nP HNC4203 COMMON V4R2  MVS\nP HNC4205 ACF/NCP V4R2 OS\nP HNC4255 ACF/NCP V4R2.5 OS\nP HNC4300 NCP V4R3 OS\nP HNC4310 NCP V4R3.1M0 OS\nP HNC5104 ACF/NCP V5R1 OS (TIERS1-5)\nP HNC5202 NCP V5R2 OS    (TIERS 1-5)\nP HNC5212 NCP V5R2.1M0 OS (TIERS 1-5)\nP HNC5302 NCP V5R3 MVS   (TIERS 1-5)\nP HNC5312 NCP V5R3.1 MVS\nP HNC5402 NCP V5R4.0 MVS\nP HNC6202 NCP V6R2.0 MVS\nP HNC6302 NCP V6R3.0 MVS\nP HNC7303 NCP V7R3.0 MVS\nP HNC7402 NCP V7R4.0 MVS\nP HNC7502 NCP V7R5.0 MVS\nP HNC7602 NCP V7R6.0 MVS\nP HNC7702 NCP V7R7.0 MVS\nP HND1202 X.25 SNA INTERCONNECT\nP HNL1102 IBMBASIC MVS INTERFA\nP HNL1205 IBM BASIC LIBRARY\nP HNP1205 IBM BASIC PROCESSOR\nP HNR1202 NPM V1R2\nP HNR1302 NPM V1R3\nP HNR1402 NPM V1R4\nP HNR1412 NPM V1R4M1\nP HNR2220 NPM V2R2M0\nP HNSF100 NETWORK SEC. PROCESS MVS\nP HNS1100 NSI MVS 3705 V1R1M0\nP HNS1110 NSI MVS 3725 V1R1M0\nP HNS1210 NSI MVS 3725 V1R2M1\nP HNS1300 NSI MVS 3725 V1R3M0\nP HNS1400 NSI MVS 3725 V1R4M0\nP HNS1500 NSI 150 FOR MVS V1R5\nP HNS1510 NSI 151 FOR MVS\nP HNTD100 NETWORK DESIGN & ANALYSIS\nP HNTR110 TARGET SYSTEM CNTRL FAC 1.1\nP HNTV211 NETVIEW FTP 2.1.0 BASE ESA\nP HNT1100 NTO V1R1\nP HNT1200 NTO V1R2 3705\nP HNT1205 NTO V1R2 FOR 3725\nP HNT1210 NTO V1R2M1 3705\nP HNT1215 NTO V1R2M1 3725\nP HNT1305 NTO V1R3M0 3725\nP HNT1405 NTO V1R4M0\nP HNT1410 NTO V1R4M1\nP HNT1500 NTO V1R5M0\nP HNT1510 NTO V1R5M1\nP HNT1600 NTO V1R6M0\nP HNT1700 NTO V1R7M0\nP HNV1102 NETVIEW COMMON\nP HNV1103 NETVIEW COMMON XA\nP HNV1122 PS/TSO V1R1M2 MVS NLS\nP HNV1202 NETVIEW STATUS MONITOR\nP HNV1203 NETVIEW STATUS MONITOR XA\nP HNV1303 NETVIEW COMMON R3  MVS/XA\nP HNW1104 DB2 PERF. MONITOR V120\nP HNW1105 DB2 PERF. MONITOR V121\nP HNW1106 DB2 PERF. MONITOR V2R1\nP HNX1516 APPLICATION SYSTEM APF\nP HOC1300 OPC - OPER PLAN&CNTRL\nP HOC1310 OPC - OPER PLAN&CNTRL\nP HOC2102 OPC/A - EMS\nP HOC2202 OPC/A - EMS V1R2 MVS\nP HOM1130 OS/390 OPEN EDITION\nP HOS1102 RMF/SAM COLLECTOR 4.2.0\nP HOS1103 RMF/SAM REPORT WRITER 4.2.0\nP HOT1130 OS/390 OPEN EDITION\nP HOT1150 O/E APP SERVICES (OS/390 R3)\nP HOW1202 INFO/ACCESS V1R2\nP HOW2102 INFO/ACCESS V2R1\nP HOW3102 INFO/ACCESS V3R1\nP HOX2103 INFO/SYSDAS REFRESH\nP HOX3102 INFO/SYS (DAS) V3\nP HOX3402 INFO/SYS (DAS) V4.1\nP HOX4202 INFO/SYS (BLX) V4.2\nP HOX4212 INFO/SYS BLX NLS 4.2.1\nP HOX4222 INFO/SYS BLX 4.2.2\nP HOY2103 INFO/MAN V2 REFRESH\nP HOY3102 INFO/MANAGEMENT V3\nP HOY4102 INFO/MANAGEMENT V4.1\nP HOY4112 INFO/MANAGEMENT V4.1.1\nP HOY4202 INFO/MANAGEMENT V4.2\nP HOY4212 INFO/MGMT NLS BLM/ 4.2.1\nP HOZ2103 INFO/SYS V2 REFRESH\nP HOZ3102 INFO/SYS VERSION 3\nP HOZ4102 INFO/SYS VERSION 4.1\nP HOZ4112 INFO/SYS VERSION 4.1\nP HOZ4202 INFO/SYS VERSION 4.2\nP HOZ4212 INFO/SYS NLS BLG 4.2.1\nP HOZ4222 INFO/SYS BLG 4.2.2\nP HPDT102 APPLIC. SUPP. FAC. - MVS\nP HPD2100 NPDA V2\nP HPD3100 NPDA V3 R1\nP HPD3200 NPDA V3 R2\nP HPE1100 PEP EXTENDED FEATURE\nP HPFN101 POSTSCRIPT INTERPRETER\nP HPFN134 POSTSCRIPT INTER. V1R3M1\nP HPGP100 PP FORMAT AID 1.1.0\nP HPI1102 INFO/LIB/TSO REL.1\nP HPI1103 INFO/LIB/NCCF REL.1\nP HPI1202 INFO/LIB/TSO REL.2\nP HPI1203 INFO/LIB/NCCF REL.2\nP HPJ3202 NPDA V3R2 MVS/XA\nP HPK1102 ESCON MGR 1.1 MVS/ESA\nP HPL0400 OS PL/1 OPT COMP\nP HPL1500 OS PL/1 OPT COMP\nP HPL1510 OS PL/1 OPT COMP\nP HPL2102 PL/1 MVS COMPILER\nP HPL2202 PL/1 COMPILER\nP HPL2222 PL/1 COMPILER\nP HPL2302 PL/I V2 OPT COMPILER\nP HPMC100 AS PROJ MGMT COSTING (MVS)\nP HPO1102 MVS/OCCF RELEASE 1\nP HPP1310 SPPS-II PROG. R3.1\nP HPRF102 PSF BASE 2.1.0 MVS\nP HPRF220 PSF BASE 2.2.0 MVS\nP HPRF226 NETSPOOL (OS/390 R3)\nP HPRM110 PROCESSMASTER 1.1.0 MVS\nP HPRM118 PROCESSMASTER 1.1.1 MVS\nP HPRM146 PROCESSMASTER 1.1.2 MVS\nP HPRT100 PRINT MANAGER 1.1.0 MVS\nP HPSC100 OFFICEVISION/MVS PS/CAL\nP HPU2210 X.25 SNA INTERCONNECTION\nP HPU2310 X.25 SNA INTERCONNECTION\nP HPV1102 PRINT SERV ACC FAC 1.1.0\nP HPV1103 PRINT SERV ACC FAC 1.1.1\nP HPX1102 VS PASCAL V1R1 C/L/I\nP HPX1202 VS PASCAL V1R2 IND COMP MOD\nP HPZ1102 VS PASCAL V1R1 LIB\nP HPZ1202 VS PASCAL V1R2 IND LIB MOD\nP HPZ8400 VS PASCAL\nP HQB1100 KT BASE-MVS\nP HQB2110 KT DELIVERY 2.1.1 MVS\nP HQB2200 DELIVERY ENVIRONMENT-MVS\nP HQG1102 BOOKMASTER REL 111\nP HQG1103 BOOKMASTER REL 112\nP HQG1104 BOOKMASTER REL 120\nP HQG1118 BOOKMASTER REL 118\nP HQG1406 BOOKMASTER (OS/390 R3)\nP HQH2102 MPSX/370 V2 MVS\nP HQH2103 MPSX/370 V2 BASE MVS\nP HQM1301 VDS/GTMOSI R3.1 FOR MVS/370\nP HQM1302 VDS/GTMOSI R3.0 FOR MVS/370\nP HQM1322 VDS/GTMOSI R3.2 FOR MVS/370\nP HQM1323 VDS/GTMOSI R3.2 FOR MVS/XA\nP HQN2110 ACIF FEATURE\nP HQN2112 AFP API FEATURE\nP HQV1102 NETVIEW DISTRIBUTION MGR\nP HQV1103 NETVIEW DISTRIBUTION M XA\nP HQV1202 NETVIEW DIST V1R2 MVS/SP\nP HQV1223 NETVIEW DIST V1R2 MVS/SP\nP HQV1302 NETVIEW DIST V1R3 MVS/370\nP HQV1303 NETV DIST V1R3 MVS/XA ESA\nP HQV1403 NETVIEW DM R4  MVS/XA ESA\nP HQV16C3 NETVIEW DM\nP HQV1603 NETVIEW DM R6  MVS/XA ESA\nP HQW7100 OS/390 LAN SERVER\nP HQW7101 OS/390 LAN SERVER\nP HQW7300 LAN SERVER (OS/390 R3)\nP HQX1102 SDSF V1 R1 M0\nP HQX1103 SDSF V1 R2 M0\nP HQX1300 SDSF V1 R3 M0\nP HQX1310 SDSF V1 R3 M1 BASE\nP HQX1320 SDSF V1 R3 M2 BASE\nP HQX1700 SDSF (OS/390 R3) - (NOT USED)\nP HQZ1102 C/370 COMPILER\nP HQZ1122 C/370 COMPILER V1R1\nP HQZ1142 C/370 COMPILER V1R2\nP HRA2502 NTUNEMON V2 R5\nP HRC1210 PSS A.R.C. R2.1\nP HRE1200 PSS RETAIL APPL\nP HRE1210 PSS RETAIL APPL\nP HRF1702 RACF VER1 REL7\nP HRF1712 RACF VER1 REL7\nP HRF1802 RACF VER1 REL8\nP HRF1902 RACF VER1 REL9\nP HRF2220 RACF VER2 REL2\nP HRF2230 RACF (OS/390 R3)\nP HRG1504 DD REPORT FILE GENER\nP HRL1500 OS PL/1 RES LIB NT\nP HRL1510 OS PL/1 RES LIB NT\nP HRM2406 RMF 2.4 FOR SP 1.3\nP HRM3202 RMF 3.2 FOR SP 2.1.1\nP HRM3402 RMF 3.4\nP HRM3502 RMF 3.5\nP HRM4410 RMF 4.1.0\nP HRM4420 RMF 4.2.0 BASE\nP HRM6603 RMF (OS/390 R3)\nP HRNT110 TIRS 1.1.0 S/370 RUN-TIME\nP HRPG110 SAA RPG/370 1.1.0\nP HRP1100 OS/VS RPGII\nP HRSS110 O/E DCE SECURITY (OS/390 R3)\nP HRS2200 SLR FOR MVS/VS1 V2R2\nP HRS3102 SLR FOR MVS    V3R1\nP HRS3104 SLR BASE       V3R1\nP HRS3202 SERVICE LEVEL REPORTER\nP HRY1102 RM4700 TELLER APPL.\nP HRZ1102 RM4700 PLATFORM APPL\nP HSDM100 DELIVERY MGR MVS/BASE\nP HSE1210 PSS SUPERMARKET R2.1\nP HSFV101 OFFICEVISION/MVS AS\nP HSFV201 OFFICEVISION/MVS AS\nP HSLW110 SYSTEM VIEW\nP HSL1302 DOC LIB FACILITY\nP HSM1B00 DF SORT/MERGE BASE\nP HSM1C00 DF SORT/MERGE BASE\nP HSM1C10 DF SORT/MERGE BASE MVS SVC\nP HSM1703 DF SORT/MERGE\nP HSM1800 DFSORT SORT/MERGE\nP HSM1902 DF SORT/MERGE\nP HSPC100 OPC/ESA V1\nP HSP2105 ACF/SSP V2R1.1 OS\nP HSP2200 ACF/SSP V2R2.0 OS\nP HSP3202 ACF/SSP V3R2\nP HSP3204 CCP V3R2 MVS\nP HSP3303 ACF/SSP V3R3\nP HSP3304 SSP/CCP V3\nP HSP3402 ACF/SSP V3R4 & CCP\nP HSP3412 SSP V3R4M1\nP HSP3502 ACF/SSP V3R5M0 SUP 9025\nP HSP3510 SSP V3R5M1\nP HSP3602 SSP V3R6M0\nP HSP3604 SSP PUBLICATIONS\nP HSP3702 SSP V3R7\nP HSP3802 SSP V3R8\nP HSP3902 SSP V3R9\nP HSP4470 SSP V4R7\nP HSQ1102 QUERY MANAGEMENT 010\nP HSQ1202 QUERY MANAGEMENT 020\nP HSQ2102 QUERY MNGT V2R1\nP HSQ2202 QUERY MNGT V2R2\nP HSQ2302 QUERY MNGT V2R3\nP HSQ2402 QUERY MNGT V2R4\nP HSQ3102 QUERY MNGT V3R1\nP HSR1132 DCF/MVS BASE\nP HSR1306 DOC COMP FAC/MVS 3.1\nP HSR1401 DCF/MVS 4.1 (OS390 R3)\nP HSS4105 NCP V4 SUBSET\nP HSTV100 AUTOMATED OPER. CNTRL MVS\nP HSU1130 OPEN EDITION UTILITIES\nP HSWF100 ESCON DIRECT DEV SUPP FEAT\nC HSW1104 DSNL-OS/CICS 1.1.1\nC HSW1106 DSNL-OS/CICS 1.1.2\nC HSW2102 DSNL/370 V2 MVS/CICS\nC HSW2201 DSNL/370 V2R2 MVS/CICS\nP HTB1200 CIB REL2\nP HTB1204 CIB REL2.1\nP HTB1205 4730 CIB V2 R2 MVS\nP HTB1206 4730 CIB V2 R3\nP HTB1207 4730 CIB V2 R4\nP HTB1208 4730 CIB V2 R5\nP HTB1209 4730 CIB V2 R6\nP HTCP100 PCPIP BASE CODE XA ESA\nP HTCP102 PCPIP BASE CODE MVS\nP HTCP201 TCP/IP MVS 370 V2R1\nP HTCP203 TCP/IP MVS XA V2R1\nP HTCP310 TCP/IP MVS XA V3R1\nP HTCP320 TCP/IP (OS/390 R3)\nP HTC3102 ACF/TCAM V3 R1\nP HTC3103 ACF/TCAM V3 BASE\nP HTC3104 ACF/TCAM V3 ROUTER\nP HTE1402 TSO/E REL4\nP HTE21C2 TSO/E V2 R1 M0\nP HTE21D2 TSO REXX MVS/ESA\nP HTE24D2 TSO/E ENU 2.04.0\nP HTE25D2 TSO/E ENU 2.05.0\nP HTO1310 TSOE MVS ESA SP3.1.0\nP HTV4621 C/C++ (OS/390 R3)\nP HVRL100 IBM OGL/370 MVS BASE\nM HVT3303 VTAM V3 R3\nM HVT4201 VTAM V4 R2\nM HVT4301 VTAM V4 R3\nM HVT4401 VTAM V4 R4\nP HWJ6200 EXPEDITE\nP HXV4641 C/C++ (OS/390 R3)\nP HXYZ400 NETVIEW BASE V2 R4\nP H0GG121 OS/390 VISUAL LIFT\nP H0GI100 OSA/SF V1R1M0\nP H0GI200 OSA/SF (OS/390 R3)\nP H0HL140 AFP FONTS\nP H0HL141 AFP FONTS\nP H0HL15D AFP FONTS\nP H0HL15E AFP FONTS\nP H0H2110 OPEN EDITION DCE\nP H0H2130 O/E DCE DFS(OS/390 R3)\nP H08K110 SOMOBJECTS FOR MVS\nP H08K111 SOMOBJECTS FOR MVS\nP H08K310 SOMOBJECTS FOR MVS RUNTIME\nP H08K311 SOMOBJECTS FOR MVS ADE\nP H18K114 SOMOBJECTS SERVICE CLASSES\nP IFAR100 IFAR  V1.0\nP IMS1304 IMS/VS 1.3\nC IOFC6B0 IOF FOR CICS V6.B.0\nP IOFT6B0 IOF FOR TSO V6.B.0\nP IOFT6C0 IOF FOR TSO V6.C.0\nP IOFT7C$ IOF FOR TSO V7.C.$\nP IOFT7C0 IOF FOR TSO V7.C.0\nC IPOCICS IPO FOR CICS V1.7\nP IPOIMS3 IPO FOR IMS V1.3\nP IPONCP2 IPO FOR NCP V2\nP JAE2510 DFDSS/ISMF\nP JAE2511 DFDSS/ISMF ENGLISH\nM JBB2220 MVS/XA SP JES2 2.2.0\nM JBB43N0 MVS/ESA SP JES2 ENU 4.03.0\nM JBB66J1 OS/390\nM JBB66N1 OS/390\nP JBD2110 BULK DATA TRANSFER\nP JBD2111 BULK DATA TRANSFER\nP JBD6201 BDT (0S/390 R3)\nP JBD6202 BDT (0S/390 R3)\nP JBKM310 BOOKMANAGER MVS READ\nP JBKP310 OS390 R3 BOOKMANAGER BUILD\nP JBT1112 BTAM/SP 1.1.0 (OS390)\nC JCI410A CICS V4.1.0 WEB INTERFACE\nC JCI4101 CICS V4.1.0 COBOL FRATURE\nC JCI4102 CICS V4.1.0 PL/1  FEATURE\nC JCI4103 CICS V4.1.0 C     FEATURE\nC JCI4106 CICS V4.1.0 DB2 ATTACH FEATU\nC JCI4107 CICS V4.1.0 EXCI  FEATURE\nP JCKVB03 C/C++ DEBUGGER\nC JCL1341 VS COBOL II CICS LIB\nP JCL1342 VS COBOL II DEBUG LIB\nC JCL1343 VS COBOL II CICS DEBUG\nP JCL1401 VS COBOL II LIB JAPANESE\nP JCL1402 VS COBOL II LIB ENGLISH\nC JCL1403 VS COBOL II LIB CICS\nP JCL1404 VS COBOL II DEBUG\nP JCL1405 VS COBOL II DEBUG JAPANESE\nP JCL1406 VS COBOL II DEBUG ENGLISH\nC JCL1407 VS COBOL II DEBUG CICS\nP JCQ1401 VS COBOL II COMP JAPANESE\nP JCQ1402 VS COBOL II COMP ENGLISH\nP JCSH303 MVS/ESA SP JES2 ENU 4.03.0\nP JCSH503 HCD 5.1 ENGLISH PART\nP JCSH523 OS/390\nP JCSH524 OS/390\nP JCS6033 HCD ENU (OS/390 R3)\nP JDC1532\nP JDL1212 C/370-PL/I KANJI\nP JDL1214 PL/I INTERLANGUAGE COMM.\nP JDP2425 ISMF\nP JDV3510 ISPF/PDF 3.5 ENGLISH\nP JDV3570 ISPF/PDF 3.5 SCLM\nP JDV3576 ISPF/PDF 3.5 WORKSTATION\nP JDZ11BB DFSMS/MVS V1 R2\nP JDZ11BL DFSMS/MVS V1 R2\nP JDZ11B4 DFSMS/MVS V1 R2\nP JDZ11CB DFSMS/MVS V1 R3  ISMF\nP JDZ11C0 DFMSM/MVS V1 R3\nP JDZ111B DFSMS/MVS ENU 1.01.0\nP JDZ1110 DFSMS/MVS ENU 1.01.0\nP JDZ112B DFSMS/MVS ENU 1.01.0\nP JDZ1120 DFSMS/MVS ENU 1.01.0\nP JDZ113B DFSMS/MVS ENU 1.01.0\nP JDZ1130 DFSMS/MVS ENU 1.01.0\nP JDZ1135 DFSMS/MVS ENU 1.01.0\nP JDZ1140 DFSMS/MVS ENU 1.01.0\nP JDZ115B DFSMS/MVS ENU 1.01.0\nP JDZ1150 DFSMS/MVS ENU 1.01.0\nP JGD3139 GDDM/MVS 3.1.1\nP JGD3219 GDDM/MVS (OS/390 R3)\nP JIF3510 ISPF 3.5 ENGLISH\nP JIF4203 ISPF 4.2 PDF BASE\nP JIF4204 ISPF 4.2 CLIENT SERVER\nP JIF4210 ISPF 4.2 DM ENGLISH\nP JIF4230 ISPF 4.2 PDS ENGLISH\nP JIF4270 ISPF 4.2 SCLM\nP JIF4290 ISPF 4.2 SOFTCOPY PUBS.\nP JIF4404 ISPF 4.4.1 CLIENT SERVER\nP JIF4405 ISPF 4.4.1 C/S R/T\nP JIF4410 ISPF 4.4.1 ENGLISH\nP JIF4470 ISPF 4.4.1 SCLM\nP JIF4490 ISPF 4.4.1 SOFTCOPY PUBS.\nP JIMW101 INTERNET CONNECTION SERVER\nP JIMW201 ICSS            (OS/390 R3)\nP JIMW210 ICSS US SECURE  (OS/390 R3)\nP JIMW220 ICSS EXPORT SECURE:OS/390 R3\nP JIM1354 IMS/VS 1.3 DBRCF\nP JIM1364 IMS/VS 1.3 LOGGING\nP JIYB101 INFOREM III ALLOCATION\nP JIYB111 INFOREM ALLOCATION\nP JJE43N0 MVS/ESA SP JES2 ENU 4.03.0\nP JJE66J1 OP/390 JES2\nP JJE66N1 OS/390 JES2\nP JJE66N3 JES2  ENU (OS/390 R3)\nP JLB4602 C/C++ (OS/390 R3)\nP JLB4603 C/C++ (OS/390 R3)\nP JMB3124 OS/390 OPEN EDITION DCE\nP JMB3125 O/E DCE BASE - DES\nP JMB3126 O/E DCE BASE - CDMF\nP JMK4112 IMS/VS V4.1 INSTALL/IVP\nP JMK4152 IMS/VS V4.1 DBRC\nP JMK4162 IMS/VS V4.1 LOGGING\nP JMK6601 IMS/VS V6.0\nP JMK6602 IMS/VS V6.0\nP JMK6603 IMS/VS V6.0\nP JMK6604 IMS/VS V6.0\nP JMK6605 IMS/VS V6.0\nP JMP1A01 SMP/E ENU (OS/390 R3)\nP JMP1601 SMP/E R6 ENGLISH\nP JMP1701 SMP/E R7 ENGLISH\nP JMP1801 SMP/E R8 ENGLISH\nP JMP1803 SMP/E R8.1 ENGLISH\nP JMQ412A HLASM TOOLKIT\nP JMR616J OS/390 LANRES\nP JMR616N OS/390 LANRES\nP JMWL51B LE\nP JMWL51F LE\nP JMWL52B LE\nP JMWL520 LE\nP JMWL53B LE\nP JMWL530 LE\nP JMWL54B LE\nP JMWL540 LE\nP JMWL55B LE\nP JMWL550 LE\nP JMWL71B LE (OS/390 R3)\nP JMWL75H LE HFS (OS/390 R3)\nP JNC5218 NCP V5R2.1 UT2.5\nP JNC5308 NCP V5R3 U TIER 2.5\nP JNC5408 NCP V5R4 U TIER 2.5\nP JNC6203 NCP V6R2 U TIER 2\nP JNC6204 NCP V6R2 U TIER 2.5\nP JNC6205 NCP V6R2 U TIER 3\nP JNC6206 NCP V6R2 U TIER 4\nP JNC6350 NCP V6R3 3746 MODEL 900\nP JNV1313 NETVIEW R3 COMMAND FACILITY\nP JNV1323 NETVIEW R3 HARDWARE MONITOR\nP JNV1333 NETVIEW R3 SESSION MONITOR\nP JNV1343 NETVIEW R3 4700 SUPPORT FAC\nP JNV1383 NETVIEW R3 CSCF FEATURE\nP JOBT320 JOBTRAC  V3.2\nP JOM13J0 OS/390 OPEN EDITION\nP JOM13N0 OS/390 OPEN EDITION\nP JOT13J0 OS/390 OPEN EDITION\nP JOT13N0 OS/390 OPEN EDITION\nP JOT15N0 O/E APP SERV\nP JPRF1C7 PSF 2.2.0\nP JPRF1J1 OS390 R3 PSF/MVS 2.02.0 COMP\nP JPRF1J3 PSF 2.2.0\nP JPRF111 PSF 2.1.0\nP JPRF112 PSF 2.1.0\nP JPRF113 PSF 2.1.0\nP JPRF115 PSF 2.1.0\nP JPRF116 PSF 2.1.0\nP JPRF117 PSF 2.1.0\nP JPRF121 PSF 2.1.0\nP JPRF122 PSF 2.1.0\nP JPRF123 PSF 2.1.0\nP JPRF164 PSF 2.1.0\nP JPRF172 PSF 2.2.0\nP JPRF174 PSF 2.2.0\nP JPRF223 PSF 2.2.0\nP JPZ8404 TIVOLI\nP JPZ8420 TIVOLI\nP JPZ8424 TIVOLI\nP JPZ8440 TIVOLI\nP JPZ8444 TIVOLI\nP JQW7301 LAN SERVER  (OS/390 R3)\nP JQX1701 SDSF (NOT USED)\nP JRF1902 RACF  1.09.2\nP JRF1922 RACF/MVS 1.9.2\nP JRM66N3 RMF (OS/390)\nP JSLW1J1 SYSTEM VIEW FOR MVS\nP JSLW1N1 SYSTEM VIEW FOR MVS\nP JSR1413 OS390 R3 DCF\nP JSU13J0 OPEN EDITION UTILITIES\nP JSU13N0 OPEN EDITION UTILITIES\nP JTCP311 TCP/IP V1 R3\nP JTCP312 TCP/IP V1 R3\nP JTCP313 TCP/IP V1 R3\nP JTCP315 TCP/IP V1 R3\nP JTCP318 TCP/IP V1 R3\nP JTCP321 OS390 R3 TCP/IP\nP JTCP322 TCP/IP KERBEROS DES\nP JTCP323 TCP/IP KERBEROS NON-DES\nP JTCP325 OS390 R3 TCP/IP\nP JTCP326 TCP/IP NPF\nP JTCP327 TCP/IP OE APPLICATIONS\nP JTE21C0 TSO/E V2 R1 M0\nP JTE24D0 TSO/E V2.04.0 INFO CNT FAC\nP JTE25D0 TSO/E V2.05.0 INFO CNT FAC\nP JTV4622 OS390 R3 C/C++\nP JTV4623 OS390 R3 C/C++\nP JVRL107 IBM OGL/370 MVS ENGLISH\nP JVRL108 IBM OGL/370 MVS ENGLISH\nP JVRL109 IBM OGL/370 MVS ENGLISH\nP JVT4204 APPC APPL SUITE FEATURE\nP JVT4302 VTAM ANYNET/MVS FEATURE\nP JXV4642 OS390 R3 C/C++ DATABASE ACCESS\nP JXYZ401 NETVIEW BASE US ENGLISH V2.4\nP JXYZ402 NETVIEW EXT US V2.4\nP JXYZ406 NETVIEW EXT BASE V2.4\nP JXYZ408 NETVIEW GRAPHIC MONITOR C/S\nP J0HL14F OS390 R3 AFP FONTS\nP J0HL14T OS390 R3 AFP FONTS\nP J0HL14U OS390 R3 AFP FONTS\nP J0HL145 OS390 R3 AFP FONTS\nP J0HL146 OS390 R3 AFP FONTS\nP J0HL15B OS390 R3 AFP FONTS\nP J0HL152 OS390 R3 AFP FONTS\nP J0HL153 OS390 R3 AFP FONTS\nP J0HL154 OS390 R3 AFP FONTS\nP J08K1N0 SOMOBJECTS FOR MVS\nP J08K1N1 SOMOBJECTS FOR MVS\nP J08K3N0 OS390 R3 SOM RUNTIME\nP J08K3N1 OS390 R3 SOM ADE\nP KODAK00 KODAK PARAMETER MANAGEMENT EXEC\nP KODAK10 KODAK STARLINK\nP LIBR380 LIBRARIAN R3.8\nP LIBR390 LIBRARIAN R3.9\nP LIBR410 LIBRARIAN R4.1\nP LIBR420 LIBRARIAN R4.2\nP LJT3201 CA-JOBSTRAC\nP LMDL120 LANDMARK/BSC/DLS\nP LMFS100 LANDMARK/BSC/LFS\nP LMPCF01 LANDMARK\nP LMQM200 LANDMARK\nP LMRK170 LANDMARK/BSC/TMP\nP LMRK180 LANDMARK/BSC/TMP\nP LMRW150 LANDMARK/BSC/RWR\nP LMSR200 LANDMARK/BSC/SRV\nP LMSR210 LANDMARK\nP LSCR50I SAS/C\nC LTCC100 LANDMARK/TMON/CICS\nP LTCE201 LANDMARK\nC LTCM830 LANDMARK/TMON/CICS\nP NSPY500 NETSPY  V5.0\nM OS390R3 OS/390 RELEASE 1.3\nP PCF1000 TSO PROGRAM CONTROL FACILITY\nP PCF1201 PCF FOR TSO/E\nP ROPER20 REMOTE OPERATOR V2\nP SAS5180 SAS V 5.18\nM SCP3800 SCP REL 3.8 (MISC MVS)\nP SDSF220 SDSF R2.2\nP SMRT110 SMART EDIT\nP SMRT120 NEW VIASOFT STUFF\nP SSC0034 SYNCSORT R3.4 COBOL II\nP SSC0035 SYNCSORT R3.5 COBOL II\nP SSD0035 SYNCSORT R3.5 GLOBAL DSM\nP SSEA035 SYNCSORT R3.5 REENTRANT\nP SSET035 SYNCSORT R3.5 RENT TAPE SORT\nP SSE0034 SYNCSORT R3.4 REENTRANT\nP SSE0035 SYNCSORT R3.5 REENTRANT\nP SSGA035 SYNCSORT R3.5 BETTERGENER\nP SSGB035 SYNCSORT R3.5 BETTERGENER\nP SSNA035 SYNCSORT R3.5 NON-REENTRANT\nP SSNT035 SYNCSORT R3.5 NRNT TAPE SORT\nP SSN0035 SYNCSORT R3.5 NON-REENTRANT\nP SSRA035 SYNCSORT R3.5 MVS/370\nP SSRT035 SYNCSORT R3.5 370 TAPE SORT\nP SSR0035 SYNCSORT R3.5 MVS/370\nP SSS0034 SYNCSORT R3.4 BASE FUNCTION\nP SSS0035 SYNCSORT R3.5 BASE FUNCTION\nP SST0034 SYNCSORT R3.4 TAPE SORT\nP SST0035 SYNCSORT R3.5 TAPE SORT\nP SSX0030 SYNCSORT PRELIMINARY CLEANUP\nP SSX0035 SYNCSORT R3.5 CLEANUP\nP STC31A0 STC TAPE DRIVE DIAGNOSTIC V3.1A\nP STC41A0 STC PERFORMANCE &  MAINT V4.1A\nP SVV0033 SYNCSORT V3.3\nP TMS4900 TAPE MANAGEMENT SYSTEM  V4.9\nP TMS5000 TAPE MANAGEMENT SYSTEM  V5.0\nP TMS5200 TAPE MANAGEMENT SYSTEM  V5.2\nP TSO2100 TSO/E V2 R1 M0\nP VMCF500 VPS R5.0\nP VMCF600 VPS R6.0\nP VSUM133 VSUM R1.3.3\nP XRX4045 FONTS FOR XEROX 4045 PRINTERS\n/*****************************************************************/\n/* LIBRARY CLASSIFICATION                                        */\n/*   1 DLIB                                                      */\n/*   2 TLIB                                                      */\n/*   3 XLIB                                                      */\n/*   4 NLIB                                                      */\n/*   6 SMPE                                                      */\n/*                                                               */\n/* LIBRARY TYPE                                                  */\n/*   CL CLIST                                                    */\n/*   CN CONTROL                                                  */\n/*   HE HELP                                                     */\n/*   JS JOBSTREM                                                 */\n/*   LL LOAD                                                     */\n/*   MA MACLIB                                                   */\n/*   MS MESSAGE                                                  */\n/*   PA PARMLIB                                                  */\n/*   PN PANEL                                                    */\n/*   PR PROCLIB                                                  */\n/*   SK SKELETON                                                 */\n/*   SR SOURCE                                                   */\n/*   TB TABLE                                                    */\n/*   XX EXCLUDE                                                  */\n/*                                                               */\n/*                                                               */\n/*                                                               */\n/*                                                               */\n/*                                                               */\n/*****************************************************************/\n1 /*DLIBS*/\n2 /*TLIBS*/\n3 /*XLIBS*/\n4 /*NLIB*/\n6 /*SMP*/\n!!\n/************** MORE CARDS *****************************************/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FMTLIBAL": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x04?\\x01\\x01\\x04?\\x16\\x04\\x00\\n\\x00\\n\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-02-12T00:00:00", "modifydate": "2001-02-12T16:04:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "WSBG"}, "text": "//WSBGWVOL JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//*                                                                 *//\n//*   ALLOCATE FORMAT LIBRARY -  MEMBER INVFMID1 POPULATES LIBRARY  *//\n//*                                                                 *//\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//FMTLALOC  DD  DSN=WSBG.WVOL.FMTLIB,DISP=SHR,UNIT=3390,\n//  DCB=(RECFM=FS,LRECL=10752,BLKSIZE=10752,DSORG=PS),VOL=SER=W$Z001,\n//  SPACE=(CYL,(3,3))                    /*FREE TRK=30*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FMTTPRD": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x92\\x17o\\x01\\x01\\x04?\\x12\\x02\\x00\\x1c\\x00\\x18\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-06-24T00:00:00", "modifydate": "2001-02-12T12:02:00", "lines": 28, "newlines": 24, "modlines": 0, "user": "WSBG"}, "text": "//WSBGINV  JOB ,S-GOLOB,MSGCLASS=X,NOTIFY=WSBG,CLASS=S\n//*--------------------------------------------------------*//\n//*--  THIS JOB IS RUN WHEN YOU CHANGE THE FMID TABLE    --*//\n//*--    THE FMID TABLE IS CODED IN MEMBER  FMIDIN       --*//\n//*--------------------------------------------------------*//\n//STEP1    EXEC SAS\n//CCIN     DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(FMIDIN)\n//SASPCH   DD  UNIT=VIO,SPACE=(CYL,(1,1,)),DISP=(NEW,PASS),\n//             DCB=(LRECL=80,BLKSIZE=6160,RECFM=FB,DSORG=PS)\n//SASLIB   DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB\nDATA CONTROL;\n  FILE SASPCH;\n  INFILE CCIN MISSOVER;\n  INPUT LIB $2. @;\n  IF LIB = '/*' THEN DO;\n    PUT /*@5 'OTHER' ' = ' ' '' '*/' ;' /   'RUN;';\n    STOP;\n    END;\n  IF LIB = '0' THEN DO;\n    PUT 'PROC FORMAT LIBRARY=SASLIB;';\n    PUT '  VALUE $FMID            '; /*(DEFAULT=44) 6.07*/\n    RETURN;\n    END;\n  INPUT @3 FMID $7. @11 DESC $CHAR33.;\n    PUT @5 ' '''FMID $7. ' ''' ' = ' ' ''' DESC $CHAR33.''' ';\nRUN;\n\n%INC SASPCH;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INVDSNCC": {"ttr": 1538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01b\\x00\\x00\\x00\\x92\\t\\x7f\\x01\\x00\\x13\\x1f\\x15)\\x00\\x9e\\x01\\x16\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.98", "flags": 0, "createdate": "1992-04-06T00:00:00", "modifydate": "2000-05-10T15:29:00", "lines": 158, "newlines": 278, "modlines": 0, "user": "WSBG"}, "text": "0 /*FMID / DESCRIPTIONS*/\nP ADCS520 ADCS R5.2\nP AFP0100 ADVANCED FUNCTION PRINTING\nP ARTS140 ARTS V1.4\nP ARTS200 ARTS V2.0\nP ARTS220 ARTS V2.2\nP BBMON10 BOOLE & BABBAGE MONITORS\nP CA90100 CA 90 V1.0\nP CMF5200 BOOLE & BABBAGE RESOLVE R5.2\nP C370100 IBM C RELEASE: 1.0\nP DOC1000 DOCULINK V1.0\nP DTA2145 DATA 21 V4.5\nP DUO4600 DOS UNDER OS V4.6\nP EAS1102 ASSEMBLER XF\nP EBT1102 BTAM (UNLICENSED BASE)\nP EDU1D01 DSF R13\nP EREP340 EREP 3.4.0\nP EREP350 EREP 3.5.0\nM ESA4300 MVS/ESA V4.3\nP EZT6200 EASYTRIEVE V6.2\nP FDSD440 FASTDASD V4.4\nP FFST120 FFST V1 R2\nP FSS0K00 FILE SUBSYSTEM SUMMARY  V 0.K\nP GSS2600 GOAL SUBSYSTEM FOR MVS V2.6\nP GSS2700 GOAL SUBSYSTEM FOR MVS V2.7\nP KODAK00 KODAK PARAMETER MANAGEMENT EXEC\nP KODAK10 KODAK STARLINK\nP HAH2100 ASSEMBLER H V2\nM HBB2102 MVS/SP2.1.0\nM HBB6603 OS/390 RELEASE 1.3\nP HCD4680 HOST COMPRESS DECOMPRESS\nC HCI1703 CICS R170 MVS/XA\nC HCI4100 CICS R410 OS/390\nP HCL1310 COBOL II LIBRARY      V1R3.1\nP HCO2400 COBOL COMPILER R2.4\nP HCQ1310 COBOL II COMPILER     V1R3.1\nP HDL1202 OS PL/I COMMON LIBRARY V2 R3\nM HDP2240 MVS/XA DFP VER 2 REL 4.0\nM DFSMMVS DFSMS/MVS OS/390\nM DFSMHSM DFSMS/HSM OS/390\nM DFSMRMM DFSMS/RMM OS/390\nP HDV2302 PDF V2.3\nP HEP1900 ACF/EP\nP HFP2202 FILE TRANSFER PROGRAM  V2.2\nP HFX1112 PC 3270 FTP FOR TSO  R1.1\nP HHL2302 OS PL/I LIBRARY V2 R3\nP HDV3502 ISPF/PDF REL 3.5.0 BASE\nP HIM1304 IMS/VS 1.3 DATA BASE\nP HIP2329 IPCS VER 1 REL 3.3\nP HIR1502 IMS V4.1\nM HJE2221 JES2 SP 2.2.0\nP HLC2400 COBOL LIBRARY R2.4\nP HMP1502 SMP/E BASE 1.5.1\nP HMP1600 SMP/E BASE 1.6.1\nP HMQ4100 HIGH LEVEL ASSEMBLER\nP HMWL510 LE/370 R1.5\nP HMWL710 LE/OS390 R3.0\nP HNC2105 ACF/NCP V2 OS 3725\nP HNC5402 NCP V5R4.0\nP HNV1303 NETVIEW COMMON R3\nP HOS1102 RMF 3.4 SAM COLLECTOR\nP HOW1202 INFO/ACC V3\nP HOY3102 INFO/MGT V3\nP HOZ3102 INFO/SYS V3\nP HPGP100 PAGE PRINTER FORMAT AID/370 V1\nP HPL2302 OS PL/I COMPILER V2 R3\nP HPRF102 PSF REL 1.0\nP HQV1223 NDM R2\nP HQV1303 NDM R3\nP HRF1902 RACF VER 1 REL 9.0\nP HRM3502 RMF 3.5\nP HSP2105 ACF/SSP V2R1.1 OS\nP HSP3602 ACF/SSP V3R6\nP HWJ6200 EXPEDITE\nP HVT3303 VTAM V3 R3\nP IFAR100 IFAR  V1.0\nP IMS1304 IMS/VS 1.3\nP IOFC6B0 IOF FOR CICS V6.B.0\nP IOFT6B0 IOF FOR TSO V6.B.0\nP IOFT6C0 IOF FOR TSO V6.C.0\nP IOFT7C$ IOF FOR TSO V7.C.$\nP IOFT7C0 IOF FOR TSO V7.C.0\nC IPOCICS IPO FOR CICS V1.7\nP IPOIMS3 IPO FOR IMS V1.3\nP IPONCP2 IPO FOR NCP V2\nM JBB2102 MVS/SP V2.2\nM JBB2220 MVS/SP V2.2\nP JBT1112 BTAM (LICENSED DEPENDENT)\nP JCL1331 COBOL II CICS LIBRARY V1R3.1\nP JCL1332 COBOL II DEBUG        V1R3.1\nP JCL1333 COBOL II CICS DEBUG   V1R3.1\nP JDL1214 OS PL/I MIXED CASE MODULES V2 R3\nP JNV1313 NETVIEW COMMAND FACILITY  R1.3.0\nP JNV1323 NETVIEW HARDWARE MONITOR  R1.3.0\nP JNV1333 NETVIEW SESSION MONITOR   R1.3.0\nP JNV1383 NETVIEW SITE CNTL FACILITY R1.3.0\nP JOBT320 JOBTRAC  V3.2\nP JVRL107 OVERLAY GENERATION LANG V1R1M0\nP LIBR380 LIBRARIAN R3.8\nP LIBR390 LIBRARIAN R3.9\nP LIBR410 LIBRARIAN R4.1\nP LIBR420 LIBRARIAN R4.2\nP NSPY500 NETSPY  V5.0\nP PANAUDT PANAUDT\nP PCF1000 TSO PROGRAM CONTROL FACILITY\nP ROPER20 REMOTE OPERATOR V2\nP SAS5180 SAS V 5.18\nM SCP3800 SCP REL 3.8 (MISC MVS)\nP SDSF220 SDSF R2.2\nP SMRT110 SMART EDIT\nP SMRT120 NEW VIASOFT STUFF\nP STC31A0 STC TAPE DRIVE DIAGNOSTIC V3.1A\nP STC41A0 STC PERFORMANCE &  MAINT V4.1A\nP SVV0033 SYNCSORT V3.3\nP TMS4900 TAPE MANAGEMENT SYSTEM  V4.9\nP TMS5000 TAPE MANAGEMENT SYSTEM  V5.0\nP TMS5200 TAPE MANAGEMENT SYSTEM  V5.2\nP TSO2100 TSO/E V2 R1 M0\nP VMCF500 VPS R5.0\nP VMCF600 VPS R6.0\nP VSUM133 VSUM R1.3.3\nP XRX4045 FONTS FOR XEROX 4045 PRINTERS\n/*****************************************************************/\n/* LIBRARY CLASSIFICATION                                        */\n/*   1 DLIB                                                      */\n/*   2 TLIB                                                      */\n/*   3 XLIB                                                      */\n/*   4 NLIB                                                      */\n/*   6 SMPE                                                      */\n/*                                                               */\n/* LIBRARY TYPE                                                  */\n/*   CL CLIST                                                    */\n/*   CN CONTROL                                                  */\n/*   HE HELP                                                     */\n/*   JS JOBSTREM                                                 */\n/*   LL LOAD                                                     */\n/*   MA MACLIB                                                   */\n/*   MS MESSAGE                                                  */\n/*   PA PARMLIB                                                  */\n/*   PN PANEL                                                    */\n/*   PR PROCLIB                                                  */\n/*   SK SKELETON                                                 */\n/*   SR SOURCE                                                   */\n/*   TB TABLE                                                    */\n/*   XX EXCLUDE                                                  */\n/*                                                               */\n/*                                                               */\n/*                                                               */\n/*                                                               */\n/*                                                               */\n/*****************************************************************/\n1 /*DLIBS*/\n2 /*TLIBS*/\n3 /*XLIBS*/\n4 /*NLIB*/\n6 /*SMP*/\n!!\n/************** MORE CARDS *****************************************/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INVFMID1": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x92\\x15_\\x01\\x01\\x04?\\x15 \\x006\\x00\\r\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1992-06-03T00:00:00", "modifydate": "2001-02-12T15:20:00", "lines": 54, "newlines": 13, "modlines": 0, "user": "WSBG"}, "text": "//WSBGINV  JOB ,GOLOB,MSGCLASS=X,NOTIFY=WSBG,CLASS=S\n//STEP1    EXEC SAS\n//CCIN1    DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(FMIDIN)\n//CCIN2    DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVLLDUP)\n//SASPCH   DD  UNIT=VIO,SPACE=(CYL,(1,1,)),\n//             DCB=(LRECL=80,BLKSIZE=6160,RECFM=FB,DSORG=PS)\n//SASLIB   DD  DISP=OLD,DSN=WSBG.WVOL.FMTLIB\nOPTIONS SYMBOLGEN MLOGIC SOURCE SOURCE2 MPRINT;\nDATA CONTROL;\n  FILE SASPCH;\n  INFILE CCIN1 MISSOVER;\n  INPUT LIB $2. @;\n  IF LIB = '/*' THEN DO;\n    PUT /*@5 'OTHER' ' = ' \" 'OTHER'    ;\" / /**/ 'RUN;';\n    STOP;\n    END;\n  IF LIB = '0' THEN DO;\n    PUT 'PROC FORMAT LIBRARY=SASLIB;';\n    PUT '  VALUE $FMID(DEFAULT=33)'; /*(DEFAULT=44) 6.07*/\n    RETURN;\n    END;\n  INPUT @3 FMID $7. @11 DESC $CHAR33.;\n    PUT @5 ' '''FMID $7. ' ''' ' = ' ' ''' DESC $CHAR33.''' ';\nRUN;\n\n%INC SASPCH;\n\nPROC FORMAT FMTLIB LIBRARY=SASLIB.FORMATS;\n  SELECT $FMID;\n\nDATA CONTROL;\n  FILE SASPCH;\n  INFILE CCIN2 MISSOVER;\n  LENGTH DSN1 DSN2 $70;\n  IF _N_ EQ 1 THEN DO;\n    PUT 'PROC FORMAT LIBRARY=SASLIB;';\n    PUT '  VALUE $LLDP(DEFAULT=1)';\n    END;\n  INPUT @1 LIB1 $40. @41 LIB2 $40.;\n  IF LIB1 = '/*' THEN DO;\n    PUT   @5 'OTHER' ' = ' \" ' '    ;\" / /**/ 'RUN;';\n    STOP;\n    RETURN;\n    END;\n  DSN1 = TRIM(LIB1)||TRIM(LIB2);\n  DSN2 = TRIM(LIB2)||TRIM(LIB1);\n  PUT @1 \"'\" DSN1 $70. \"'\" \"='D'\";\n  PUT @1 \"'\" DSN2 $70. \"'\" \"='D'\";\nRUN;\n\n%INC SASPCH;\n\nPROC FORMAT FMTLIB LIBRARY=SASLIB.FORMATS;\n  SELECT $LLDP;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INVLLDUP": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x00\\x00\\x98'/\\x01\\x01\\x04?\\x15W\\x00\\x02\\x00\\x01\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1998-09-29T00:00:00", "modifydate": "2001-02-12T15:57:00", "lines": 2, "newlines": 1, "modlines": 0, "user": "WSBG"}, "text": "SYS1.NUCLEUS                            SYS1.LINKMVS\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INVLLSTM": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x98\"o\\x01\\x00\\x15\\x1f\\x16(\\x00\\x17\\x00\\x13\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1998-08-14T00:00:00", "modifydate": "2000-05-30T16:28:00", "lines": 23, "newlines": 19, "modlines": 0, "user": "WSBG"}, "text": "  VALUE $LLIST\n     'SYS1.NUCLEUS        ' = ' 1'\n     'SYS1.LPALIB         ' = ' 2'\n     'SYS1.LPATRI         ' = ' 3'\n     'S$A.LPALIB          ' = ' 4'\n     'SYS1.LPAMVS         ' = ' 5'\n     'SPP.LPALIB          ' = ' 6'\n     'W$$.LPALIB          ' = ' 7'\n     'SYS1.LINKLIB        ' = ' 8'\n     'SYS1.MIGLIB         ' = ' 9'\n     'SYS1.CSSLIB         ' = '10'\n     'S$A.LINKTRI         ' = '11'\n     'S$A.LINKLIB         ' = '12'\n     'SYS1.LINKMVS        ' = '13'\n     'SYS1.CMDLIB         ' = '14'\n     'SPP.LINKLIB         ' = '15'\n     'P$#.MON.LINKTRI     ' = '16'\n     'P$#.MON.LINKLIB     ' = '17'\n     'P$#.COL.LINKLIB     ' = '18'\n     'W$$.LINKLIB         ' = '19'\n     'S$#.RCVR.LINKLIB    ' = '20'\n      OTHER                 = '99'\n      ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INVPRC": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01<\\x00\\x00\\x00\\x98\\x18/\\x01\\x00\\x15\\x1f\\x17T\\x00\\xf4\\x00D\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.60", "flags": 0, "createdate": "1998-07-01T00:00:00", "modifydate": "2000-05-30T17:54:00", "lines": 244, "newlines": 68, "modlines": 0, "user": "WSBG"}, "text": "OPTIONS PAGESIZE=80  SORTNAME=SYNCSORT SORTWKNO=1;\nPROC CONTENTS DATA=MEMBER._ALL_;\nPROC FORMAT;\n  VALUE MSG\n    0   = 'SAME AS NEXT MEMBER     '\n    1   = 'DE MISMATCH             '\n    2   = 'DATE MISMATCH           '\n    3   = 'DATE & DE MISMATCH      '\n    4   = 'HASH MISMATCH           '\n    5   = 'HASH & DE MISMATCH      '\n    6   = 'HASH & DATE MISMATCH    '\n    7   = 'HASH, DATE & DE MISMATCH'\n   15   = 'LAST MEMBER             '\n  OTHER = 'OOPS                    ';\n\n    %INCLUDE CNTLLIB3;\n\n/*DATA ALLDATA;\n     SET  MEMBER.SSLIB1\n     MEMBER.SSLIB3\n     MEMBER.SSLIB4\n     MEMBER.SSLIB5\n     MEMBER.SSRES1 ;  */\n\n  DATA ALLDATA;\n     SET  MEMBER.ALLDATA ;\n\nDATA TLIB\n     XLIB;\n  SET /*MEMBER.SSLIB1\n      MEMBER.SSLIB3\n      MEMBER.SSLIB4\n      MEMBER.SSLIB5\n      MEMBER.SSRES1*/ ALLDATA\n        END=EOD;\n      BY DSN NOTSORTED;\n    IF MEMBER \u00ac= '$$$COIBM';\n    IF MEMBER \u00ac= '$$$INDEX';\n    IF TYPE    = 'LL' ;\n    IF CLASS = 'TLIB' THEN OUTPUT TLIB;\n    IF CLASS = 'XLIB' THEN DO;\n      ORDER = PUT(DSN,$LLIST.);\n      OUTPUT XLIB;\n      END;\n\nPROC SORT DATA=TLIB;\n  BY MEMBER DATE DE;\n\nDATA TLIBCMPR;\n  LENGTH DSNT1-DSNT5 $44;\n  ARRAY DSNT DSNT1-DSNT5;\n  DO I=1 TO 5;\n    SET TLIB END=LAST;\n      BY MEMBER DATE DE;\n    DSNT{I} = DSN;\n    IF LAST.DE THEN DO;\n      OUTPUT TLIBCMPR;\n      RETURN;\n      END;\n    END;\n\nPROC SORT DATA=XLIB;\n  BY MEMBER DATE DE ORDER;\n\nDATA XLIBCMPR;\n  LENGTH DSNX1-DSNX5 $44;\n  ARRAY DSNX DSNX1-DSNX5;\n  DO I=1 TO 5;\n    SET XLIB END=LAST;\n      BY MEMBER DATE DE;\n    DSNX{I} = DSN;\n    IF LAST.DE THEN DO;\n      OUTPUT XLIBCMPR;\n      RETURN;\n      END;\n    END;\n\nDATA LLISTDUP;\n  MERGE TLIBCMPR\n        XLIB(IN=XLIB_IN);\n    BY MEMBER DATE DE;\n    IF XLIB_IN AND ORDER NE '99';\n\nPROC SORT DATA=LLISTDUP;\n  BY MEMBER ORDER;\n\nDATA LLISTDUP;\n  SET LLISTDUP;\n    BY MEMBER;\n    IF FIRST.MEMBER AND LAST.MEMBER AND DSNT2 = ' ' THEN DELETE;\n\nTITLE1 'LOAD MODULE INVENTORY - XLIB TO TLIB CROSS REFRENCE';\nTITLE2 'DUPLICATE LPA AND LINKLIST MODULES ONLY';\nPROC PRINTTO PRINT=LLIST;\nPROC PRINT DATA=LLISTDUP;\n  BY MEMBER;\n  ID MEMBER;\n  VAR DSN DATE DSNT1 DSNT2 DSNT3;\n  FORMAT DATE MMDDYY8.;\nPROC PRINTTO;\n\nDATA MATCH(DROP=DSN)\n     NOMATCH(DROP=FLAG1);\n  MERGE XLIBCMPR(IN=XLIB_IN)\n        TLIBCMPR(IN=TLIB_IN);\n    BY MEMBER DATE DE;\n  FLAG1=0;\n  IF TLIB_IN + XLIB_IN NE 2 THEN OUTPUT NOMATCH;\n    ELSE DO;\n      IF DSNT2 NE ' ' THEN FLAG1 + 1;\n      IF DSNX2 NE ' ' THEN FLAG1 + 2;\n      OUTPUT MATCH;\n      END;\n\nPROC SORT DATA=MATCH EQUALS;\n  BY FMID MEMBER DATE;\n\nTITLE1 'LOAD MODULE INVENTORY - TLIB TO XLIB CROSS REFERENCE';\nTITLE2 'BY PRODUCT';\nDATA _NULL_;\n  ARRAY DSNT $44 DSNT1-DSNT5;\n  ARRAY DSNX $44 DSNX1-DSNX5;\n  SET MATCH;\n    BY FMID MEMBER DATE;\n /* %INCLUDE CNTLLIB1 ; */\n    FILE PRINT LINESLEFT=REMAIN PAGESIZE=66;\n    IF _N_=1 THEN LINK HEADER;\n    IF REMAIN LE 3 THEN LINK HEADER;\n    IF FIRST.FMID   THEN PUT / @1  FMID      $8. @;\n    IF FIRST.MEMBER THEN PUT @9  MEMBER    $8. @;\n    IF FIRST.DATE   THEN PUT @18 DATE   MMDDYY. @;\n    PUT @30 DSNT{1} $44. @80 DSNX{1} $44.;\n    DO I=2 TO 5;\n      IF DSNT{I} NE ' ' OR DSNX{I} NE ' ' THEN\n        PUT @30 DSNT{I} $44. @80 DSNX{I} $44.;\n      END;\nRETURN;\n\nHEADER:\n  IF _N_ NE 1 THEN PUT _PAGE_;\n  PUT / @1 'PRODUCT' @10 'MEMBER' @18 'LKED DATE' @30 'TLIB' @80 'XLIB';\n  IF FIRST.FMID=0 THEN PUT / @1FMID $8. @;\nRETURN;\n\nDATA TLIB;\n  ARRAY DSNT $44 DSNT1-DSNT5;\n  ARRAY DSNX $44 DSNX1-DSNX5;\n  SET MATCH;\n  DO I=1 TO 5;\n    TLIB = DSNT{I};\n    DO J=1 TO 5;\n      XLIB = DSNX{J};\n      IF TLIB NE ' ' AND XLIB NE ' ' THEN OUTPUT TLIB;\n      END;\n    END;\n\nPROC SORT DATA=TLIB;\n  BY TLIB MEMBER;\n\nTITLE1 'LOAD MODULE INVENTORY - TLIB TO XLIB CROSS REFRENCE';\nTITLE2 'BY TLIB';\nDATA _NULL_;\n  SET TLIB;\n  BY TLIB MEMBER;\n /* %INCLUDE CNTLLIB2; */\n  FILE TLIB PS=80 LS=80 LINESLEFT=REMAIN;\n  IF FIRST.TLIB OR REMAIN LE 3 THEN LINK HEADER;\n  IF FIRST.MEMBER THEN PUT @3 MEMBER $8. @;\n  PUT               @13 XLIB $20. @;\n  IF FLAG1 = '.......1'B THEN\n    PUT @35 'MEMBER EXISTS IN MULTIPLE TLIBS';\n  ELSE PUT;\nRETURN;\n\nHEADER:\n  IF REMAIN LE 3 THEN PUT _PAGE_;\n  PUT / @1 '***** ' TLIB : $44. '- ' FMID $8.;\n  PUT / @3 'MEMBER' @13 'XLIB' @35 'COMMENT';\nRETURN;\n\nDATA XLIB;\n  ARRAY DSNT $44 DSNT1-DSNT5;\n  ARRAY DSNX $44 DSNX1-DSNX5;\n  SET MATCH;\n  DO I=1 TO 5;\n    XLIB = DSNX{I};\n    DO J=1 TO 5;\n      TLIB = DSNT{J};\n      IF XLIB NE ' ' AND TLIB NE ' ' THEN OUTPUT XLIB;\n      END;\n    END;\n\nPROC SORT DATA=XLIB;\n  BY XLIB MEMBER;\n\nTITLE1 'LOAD MODULE INVENTORY - XLIB TO TLIB CROSS REFRENCE';\nTITLE2 'BY XLIB';\nDATA _NULL_;\n  SET XLIB;\n  BY XLIB MEMBER;\n /* %INCLUDE CNTLLIB2; */\n  FILE XLIB PS=80 LS=80 LINESLEFT=REMAIN;\n  IF FIRST.XLIB OR REMAIN LE 3 THEN LINK HEADER;\n  IF FIRST.MEMBER THEN PUT @3 MEMBER $8. @;\n  PUT               @13 TLIB $30. @;\n  IF FLAG1 = '......1.'B THEN\n    PUT @45 'MEMBER EXISTS IN MULTIPLE XLIBS';\n  ELSE PUT;\nRETURN;\n\nHEADER:\n  IF REMAIN LE 3 THEN PUT _PAGE_;\n  PUT / @1 '***** ' XLIB : $44. ;\n  PUT / @3 'MEMBER' @13 'TLIB' @45 'COMMENT';\nRETURN;\n\nPROC SORT DATA=XLIB;\n  BY MEMBER ORDER;\n\nPROC CONTENTS DATA=MATCH;\n\nPROC CONTENTS DATA=NOMATCH;\n\nTITLE1 'LOAD MODULE INVENTORY - XLIB TO TLIB CROSS REFRENCE';\nTITLE2 'NOMATCH REPORT';\n\nPROC PRINTTO PRINT=NOMATCH;\nPROC PRINT DATA=NOMATCH;\n  WHERE CLASS='XLIB';\n  VAR DSN MEMBER DATE FMID DSNX1;\n  FORMAT DATE DATE8.;\nPROC PRINTTO;\n\nTITLE1 'LOAD MODULE INVENTORY - XLIB TO TLIB CROSS REFRENCE';\nTITLE2 'MATCH REPORT';\n\nPROC PRINTTO PRINT=MATCH;\nPROC PRINT DATA=MATCH;\n  BY FMID MEMBER DATE;\n  ID FMID MEMBER DATE;\n  VAR DSNT1-DSNT2 DSNX1-DSNX2;\n  FORMAT DATE JULIAN.;\nPROC PRINTTO;\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INVPREP1": {"ttr": 1553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01C\\x00\\x00\\x00\\x92\\x08\\x7f\\x01\\x00\\x14o\\x17\\x17\\x00\\xb6\\x00i\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.67", "flags": 0, "createdate": "1992-03-27T00:00:00", "modifydate": "2000-05-25T17:17:00", "lines": 182, "newlines": 105, "modlines": 0, "user": "WSBG"}, "text": "OPTION COMPRESS=YES;\nPROC FORMAT;\n  VALUE DSRG (DEFAULT=3)\n        0  = ' '\n        2  = 'PO'\n       32  = 'DA'\n       64  = 'PS'\n       65  = 'PSU'\n      128  = 'IS';\n\n  VALUE RCFM (DEFAULT=3)\n        0  = ' '\n       80  = 'VB'\n       82  = 'VBM'\n      128  = 'F'\n      130  = 'FM'\n      144  = 'FB'\n      192  = 'U';\n\n\nDATA _NULL_;\n   TITLE \"DATASET INVENTORY SYSTEM -- CONTROL EDIT\";\n   FILE REPORTA ;\n  IF _N_=1 THEN DO;\n    INFILE STG2IN;\n    INPUT @5 TYPE PIB1.@;\n    IF TYPE \u00ac= 0 THEN DO;\n      PUT 'FIRST RECORD IS NOT A VOLUME RECORD.  RUN WILL BE ABORTED.';\n      ABORT RETURN 16;\n      END;\n  /*INPUT @7 VOLSER $6.;\n    CALL SYMPUT('PACK',VOLSER);*/\n    END;\n  INFILE SITE;\n /* ------------------------------------------------------- */\n /* INPUT SYSID AND DATA DATE                               */\n /* DATA DATE WILL DEFAULT TO CURRENT DATE IF NOT SPECIFIED */\n /* ------------------------------------------------------- */\n  INPUT SYSID $4. @7 DATE $10.;\n  IF DATE = ' ' THEN\n    DDATE = TODAY();\n  ELSE DDATE = INPUT(DATE,DATE10.);\n  CALL SYMPUT('SITE',SYSID);\n  CALL SYMPUT('DAY',DDATE);\n  PUT  SYSID= DDATE= ;\nRUN;\n\nDATA PREPROC1.ALLDATA;\n  FILE REPORTA ;\n  LENGTH MEMTYPE $ 6\n         SYSID   $ 4;\n  INFILE STG2IN;\n  RETAIN SYSID\n         DDATE\n         DSN\n         VOLSER;\n  IF _N_=1 THEN DO;\n      SYSID = SYMGET('SITE');\n      TITLE \"DATASET INVENTORY SYSTEM -- &SITE -- STAGE2 EDIT\";\n      END;\n    DDATE  = &DAY         ;\n  INPUT @5 TYPE PIB1. @; DROP TYPE;\n  SELECT (TYPE);\n    WHEN (0) DO;\n      INPUT @7 VOLSER $6.;\n      PUT 'NOW PROCESSING VOLUME ' VOLSER $6.;\n      DELETE;\n      END;\n    WHEN (1) DO;\n      INPUT @6 DSNTYPE PIB1.@; RETAIN DSNTYPE;\n      IF DSNTYPE = 0 THEN DSTYPE = 'LOAD  ';\n        ELSE IF DSNTYPE = 1 THEN DSTYPE = 'SOURCE';\n          ELSE DSTYPE = 'OTHER';\n      LINK DSN;\n      END;\n    WHEN (2) DO;\n      IF DSNTYPE = 0 THEN LINK LMEM;\n        ELSE LINK SMEM;\n      END;\n    WHEN (3) DELETE;\n    OTHERWISE DO;\n      PUT  'UNDEFINED TYPE ' TYPE=;\n      DELETE;\n      END;\n    END;\n  RETURN;\n\nDSN:\n  INPUT @7 DSN $CHAR44. @52 VOLSER $6. @89 DSRG PIB1. @91 RCFM PIB1.\n        @93 BLKSIZE PIB2. @95 LRECL PIB2. @66 EXTENTS PIB1. @;\n  IF SUBSTR(DSN,1,8) = 'CATINDEX' OR\n     SUBSTR(DSN,1,2) = 'ZZ'       THEN DELETE;\n  DSORG = PUT(DSRG,DSRG.); DROP DSRG;\n  RECFM = PUT(RCFM,RCFM.); DROP RCFM;\n  IF DSORG = ' ' THEN DO;\n    INPUT @90 VSAM PIB1. @;\n    IF VSAM = 8 THEN DSORG = 'VS';\n    END;\n  IF EXTENTS <= 3 THEN X = EXTENTS;\n    ELSE X = 3;\n  SPACE = 0;\n  DO I=1 TO X;\n    Q = (I-1) * 10;\n    INPUT @(112+Q+2) CCL PIB2. HHL PIB2. CCH PIB2. HHH PIB2. @;\n    SPACE = SPACE + ((CCH - CCL) * 15) + (HHH - HHL + 1);\n    END;\n  INPUT;\n* PUT SPACE= X= I= Q= CCL= HHL= CCH= HHH= EXTENTS=;\n  DROP X I Q CCL HHL CCH HHH;\n  IF DSORG = 'VS' THEN DO;\n    POSITION = INDEX(DSN,'DATA'); DROP POSITION;\n    IF POSITION \u00ac= 0 THEN DO;\n      INPUT @7 DSNI $CHAR44. @66 EXTENTSI PIB1. @@;\n      IF SUBSTR(DSN,1,POSITION-1) EQ SUBSTR(DSNI,1,POSITION-1) AND\n         SUBSTR(DSNI,POSITION) EQ 'INDEX' THEN DO;\n        IF EXTENTSI <= 3 THEN X = EXTENTSI;\n          ELSE X = 3;\n        SPACEI = 0;\n        DO I=1 TO X;\n          Q = (I-1) * 10;\n          INPUT @(112+Q+2) CCL PIB2. HHL PIB2. CCH PIB2. HHH PIB2. @;\n          SPACEI = SPACEI + ((CCH - CCL) * 15) + (HHH - HHL + 1);\n          END;\n        INPUT;\n        SPACE = SPACE + SPACEI;\n        END;\n      END;\n    END;\n\nRETURN;\n\nLMEM:\n    /* PROCESS MEMBER RECORD */\n  INPUT @7 MEMBER $8. @18 LENGTH PIB1. @; DROP LENGTH;\n  IF LENGTH \u00ac= 0 THEN DO;\n*   PUT LENGTH=;\n    LENGTH = (MOD(LENGTH,32) * 2) - 7;\n    INPUT @26 DE $VARYING34. LENGTH;\n    SUBSTR(DE,2,1)  = '00'X;\n    SUBSTR(DE,7,2)  = '0000'X;\n    SUBSTR(DE,14,1) = '00'X;\n    END;\n  ELSE DO;\n    INPUT;\n    MEMTYPE='LOAD';\n    RETURN;\n    END;\n  MEMTYPE='LOAD';\n    /* PROCESS IDR RECORDS - FIND LKED DATE */\n  DO UNTIL(IDRTYPE = 2);\n    INPUT @5 IDR PIB1. @@; DROP IDR;\n  /*PUT IDR= MEMBER= ;*/\n    IF IDR \u00ac= 3 THEN DO; /* NOT AN IDR RECORD */\n      PUT 'TYPE 2 IDR RECORD NOT FOUND ' DSN= MEMBER=;\n      RETURN;\n      END;\n    INPUT @7 IDRTYPE PIB1. @; DROP IDRTYPE;\n  /*PUT IDRTYPE= MEMBER=;*/\n    IF IDRTYPE = 2 THEN DO;\n      INPUT @20 LDATE PD3.; DROP LDATE;\n      DATE = INPUT(PUT(LDATE,5.),JULIAN5.);\n      END;\n    ELSE INPUT;\n  END;\nRETURN;\n\nSMEM:\n  MEMTYPE='SOURCE';\n  INPUT @7 MEMBER $8. @18 LENGTH PIB1. @;\n  LENGTH = MOD(LENGTH,32) * 2;\n  IF LENGTH = 30 THEN DO;\n    INPUT @23 DATE1 PIB1. @27 DATE2 PIB1. @; DROP DATE1 DATE2;\n    IF DATE1 = 0 AND DATE2 = 0 THEN\n      INPUT @27 CDATE PD4. @39 UID $8. @19 DE $CHAR30. @; DROP CDATE;\n      DATE = INPUT(PUT(CDATE,7.),JULIAN7.);\n    END;\n  INPUT @(18 + LENGTH + 6) HASH $CHAR8.;\nRETURN;\n\nPROC PRINTTO PRINT=DATACONT;\nPROC CONTENTS DATA=PREPROC1.ALLDATA;\nPROC PRINTTO;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INVPREP2": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x15\\x1f\\x01\\x00\\x15\\x1f\\x11T\\x01\\x12\\x01\\x12\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-05-30T00:00:00", "modifydate": "2000-05-30T11:54:00", "lines": 274, "newlines": 274, "modlines": 0, "user": "WSBG"}, "text": "PROC SORT DATA=PREPROC1.ALLDATA OUT=ALLDATA;\n  BY DSN;/**/\nOPTIONS FMTSEARCH=(FMTLIB.FORMATS) PAGESIZE=80 SORTWKNO=3;\nDATA _NULL_;\n  LENGTH DFILE MFILE $7;\n  SET ALLDATA(OBS=1);\n  CALL SYMPUT('VOLSIR',VOLSER);\n  VOLSER = TRANSLATE(VOLSER,'S','$');\n    DFILE = TRIM(SYSID)||'DSN';\n    MFILE = TRIM(SYSID)||'MEM';\n    PUT DFILE= MFILE=;\n    CALL SYMPUT('DSNFILE',DFILE);\n    CALL SYMPUT('MEMFILE',MFILE);\n    CALL SYMPUT('VOLSR',VOLSER);\nRUN;\n\nPROC FORMAT;\n  VALUE $LIB\n    '1' = 'DLIB'\n    '2' = 'TLIB'\n    '3' = 'XLIB'\n    '4' = 'NLIB'\n    '6' = 'SMPE';\n\n  VALUE $EDIT\n    '  ' = 'OK'\n    'CL' = 'OK'\n    'CN' = 'OK'\n    'DO' = 'OK'\n    'EX' = 'OK'\n    'FO' = 'OK'\n    'HE' = 'OK'\n    'IN' = 'OK'\n    'JS' = 'OK'\n    'LO' = 'OK'\n    'LL' = 'OK'\n    'MA' = 'OK'\n    'MS' = 'OK'\n    'NL' = 'OK'\n    'OB' = 'OK'\n    'PA' = 'OK'\n    'PN' = 'OK'\n    'PR' = 'OK'\n    'RL' = 'OK'\n    'SA' = 'OK'\n    'SK' = 'OK'\n    'SR' = 'OK'\n    'TB' = 'OK'\n   OTHER = 'ER';\n\n  VALUE $TYPE\n   'CL' = 'CLIST'\n   'CN' = 'CONTROL CARD'\n   'DO' = 'DOCUMENTATION'\n   'EX' = 'REXX EXEC'\n   'FO' = 'FONTS - AFP'\n   'HE' = 'HELP'\n   'IN' = 'INSTALL'\n   'JS' = 'JOBSTREAM'\n   'LO' = 'LINKED OBJECT'\n   'LL' = 'LOAD'\n   'MA' = 'MACRO'\n   'MS' = 'MESSAGE'\n   'NL' = 'NON-LL LMOD'\n   'OB' = 'OBJECT'\n   'PA' = 'PARMLIB'\n   'PN' = 'PANEL'\n   'PR' = 'PROCLIB'\n   'RL' = 'RPLLIST ONLY'\n   'SA' = 'SAMPLE'\n   'SK' = 'SKELETON'\n   'SR' = 'SOURCE'\n   'TB' = 'TABLE'\n   '  ' = 'UNKNOWN'\n  OTHER = 'ERROR';\n\n  VALUE $INDX\n    'A'  = ' 1'\n    'B'  = ' 2'\n    'C'  = ' 3'\n    'D'  = ' 4'\n    'E'  = ' 5'\n    'F'  = ' 6'\n    'G'  = ' 7'\n    'H'  = ' 8'\n    'I'  = ' 9'\n    'J'  = '10'\n    'K'  = '11'\n    'L'  = '12'\n    'M'  = '13'\n    'N'  = '14'\n    'O'  = '15'\n    'P'  = '16'\n    'Q'  = '17'\n    'R'  = '18'\n    'S'  = '19'\n    'T'  = '20'\n    'U'  = '21'\n    'V'  = '22'\n    'W'  = '23'\n    'X'  = '24'\n    'Y'  = '25'\n    'Z'  = '26';\n\n  VALUE $UNIT\n    'A' = ' ABS'\n    'B' = ' BLK'\n    'C' = ' CYL'\n    'T' = ' TRK'\n    ;\n\n  VALUE $EXCLD\n    'O' = 'OBSOLETE OR UNUSED       '\n    'F' = 'FUTURE LIBRARY           '\n    'P' = 'PARTIAL-NON MATCHED NAMES'\n    ;\n\n\n\nDATA DLIB;\n  TITLE1 'DATASET INVENTORY SYSTEM -- DLIB CONTROL CARD EDIT';\n  TITLE2 ' VOLUME SERIAL -- '&VOLSIR ;\n  FILE REPORTA;\n  INFILE DLIB;\n  INPUT @1 TYPE $2. @4 FMID $7. @15 DSN $44.;\n  CLASS = 'DLIB';\n  ERROR = PUT(TYPE,$EDIT.);\n  IF ERROR = 'ER' THEN DO;\n    PUT TYPE= DSN=;\n    DELETE;\n    END;\n\nDATA TLIB;\n  TITLE1 'DATASET INVENTORY SYSTEM -- TLIB CONTROL CARD EDIT';\n  TITLE2 ' VOLUME SERIAL -- '&VOLSIR ;\n  FILE REPORTA;\n  INFILE TLIB;\n  INPUT @1 TYPE $2. @4 FMID $7.\n        @12 EXCLUDE $1. @13 RUN $1. @15 DSN $44.;\n  CLASS = 'TLIB';\n  ERROR = PUT(TYPE,$EDIT.);\n  IF ERROR = 'ER' THEN DO;\n    PUT TYPE= DSN=;\n    DELETE;\n    END;\n\nOPTIONS PAGENO=1;\nPROC PRINTTO PRINT=TLIBRPT;\nPROC PRINT DATA=TLIB UNIFORM NOOBS LABEL;\n  FORMAT TYPE $TYPE.\n         FMID $FMID.\n      EXCLUDE $EXCLD.\n          DSN $40.;\n  LABEL  FMID='PRODUCT DESCRIPTION'\n      EXCLUDE='REASON FOR EXCLUSION';\n  VAR DSN TYPE FMID EXCLUDE;\n  TITLE 'DATASET INVENTORY SYSTEM -- TLIB CONTROL CARD REPORT';\nPROC PRINTTO ;\n\nOPTIONS PAGENO=1;\nPROC PRINTTO PRINT=DLIBRPT;\nPROC PRINT DATA=DLIB UNIFORM NOOBS LABEL;\n  FORMAT TYPE $TYPE.\n         FMID $FMID.\n          DSN $40.;\n  LABEL  FMID='PRODUCT DESCRIPTION'\n  VAR DSN TYPE FMID ;\n  TITLE  'DATASET INVENTORY SYSTEM -- DLIB CONTROL CARD REPORT';\nPROC PRINTTO ;\n\nDATA SMPE;\n  INFILE SMPE;\n  INPUT @1 TYPE $2. @4 FMID $7. @15 DSN $44.;\n  CLASS = 'SMPE';\n  ERROR = PUT(TYPE,$EDIT.);\n  IF ERROR = 'ER' THEN DO;\n    PUT TYPE= DSN=;\n    DELETE;\n    END;\n\nDATA XLIB;\n  INFILE XLIB;\n  INPUT @1 TYPE $2. @4 FMID $7. @15 DSN $44.;\n  CLASS = 'XLIB';\n  ERROR = PUT(TYPE,$EDIT.);\n  IF ERROR = 'ER' THEN DO;\n    PUT TYPE= DSN=;\n    DELETE;\n    END;\n\nOPTIONS PAGENO=1;\nPROC PRINTTO PRINT=XLIBRPT;\nPROC PRINT DATA=XLIB UNIFORM NOOBS LABEL;\n  FORMAT TYPE $TYPE.\n         FMID $FMID.\n          DSN $40.;\n  LABEL  FMID='PRODUCT DESCRIPTION'\n  VAR DSN TYPE FMID ;\n  TITLE  'DATASET INVENTORY SYSTEM -- XLIB CONTROL CARD REPORT';\nPROC PRINTTO ;\n\nDATA CNTLCRDS;\n  SET\n      DLIB\n      TLIB\n      SMPE\n      XLIB;\n\nPROC SORT DATA=CNTLCRDS;\n  BY DSN;\n\nDATA DSNTEMP1(KEEP=SYSID DSN VOLSER DSORG RECFM BLKSIZE LRECL DDATE\n                   TYPE CLASS EXTENTS SPACE DSTYPE DSNTYPE FMID)\n     DSNTEMP2(KEEP=DSN MEMNO)\n     &MEMFILE..&VOLSR(KEEP=MEMTYPE SYSID DSN VOLSER MEMBER DE DATE UID\n                     HASH TYPE CLASS FMID DSNTYPE DDATE EXCLUDE RUN\n                     COMPRESS=YES);\n  MERGE ALLDATA (IN=PROC1IN)\n        CNTLCRDS         (IN=CNTRLIN);\n  BY DSN;\n\n  IF PROC1IN = 1 AND CNTRLIN = 0 AND DSORG='PO' THEN\n    PUT 'CONTROL CARD REQUIRED FOR DSN ' DSN;\n  IF PROC1IN = 0 THEN DELETE;\n\n  IF MEMTYPE = ' ' THEN DO;\n    OUTPUT DSNTEMP1;\n    MEMNO = 0;\n    END;\n  ELSE DO;\n    OUTPUT &MEMFILE..&VOLSR;\n    MEMNO = MEMNO + 1; RETAIN MEMNO;\n    END;\n  IF LAST.DSN THEN OUTPUT DSNTEMP2;\nRUN;\n\n  PROC APPEND BASE=&MEMFILE..ALLDATA DATA=&MEMFILE..&VOLSR;\nRUN;\n\nDATA CNTLDSN;\n  INFILE DSNIN;\n  INPUT @1 DSN $44.;\n  IF SUBSTR(DSN,1,6)='TOTALS' THEN DELETE;\n\nPROC SORT DATA=CNTLDSN;\n  BY DSN;\n\nDATA &DSNFILE..&VOLSR;\n  MERGE DSNTEMP1 (IN=DSN1IN)\n        DSNTEMP2 (IN=DSN2IN)\n        CNTLDSN  (IN=CNTLIN);\n    BY DSN;\n  FILE PRINT;\n  IF CNTLIN = 0 THEN DO;\n    PUT 'NO CONTROL CARD FOR ' DSN $40. 'DATASET WILL BE DELETED.';\n    DELETE;\n    END;\n  IF DSN1IN = 0 THEN DO;\n    PUT 'CONTROL CARD FOR ' DSN $40. 'NOT REQUIRED.  '\n       \"DATASET IS NOT ON &VOLSIR OR HAS BEEN PREVIOUSLY EXCLUDED.\";\n    DELETE;\n    END;\n\n  PROC APPEND BASE=&DSNFILE..ALLDATA DATA=&DSNFILE..&VOLSR;\nRUN;\n\nPROC PRINTTO PRINT=DSNRPT;\nPROC CONTENTS DATA=&DSNFILE..&VOLSR;\nPROC CONTENTS DATA=&MEMFILE..&VOLSR;\nPROC PRINT DATA=&DSNFILE..&VOLSR;\n  FORMAT DDATE DATE7.;\n  TITLE1 'DATASET INVENTORY SYSTEM -- VTOC DSN REPORT BY VOLUME';\n  TITLE2 ' VOLUME SERIAL -- '&VOLSIR ;\nPROC PRINTTO;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JOBCARD": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x04?\\x01\\x01\\x04?\\x16\\x01\\x00\\x03\\x00\\x03\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-12T00:00:00", "modifydate": "2001-02-12T16:01:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "WSBG"}, "text": "//WSBGWVOL JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADLIB": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x05/\\x01\\x01\\x05/\\x18\\x04\\x05\\xb8\\x05\\xb8\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-21T00:00:00", "modifydate": "2001-02-21T18:04:00", "lines": 1464, "newlines": 1464, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SAS": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94#O\\x01\\x00\\x01\\x9f\\t\\x16\\x00\\x17\\x00\\x17\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-08-22T00:00:00", "modifydate": "2000-01-19T09:16:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "WSBG"}, "text": "//SAS609 PROC  OPT=,\n//             SORT=4,\n//             WORK=20\n//*********************************************************************\n//*  PRODUCT: MVS SAS RELEASE 6.09E TS470                            **\n//*  DOCUMENTATION: SAS COMPANION FOR THE MVS ENVIRONMENT, VERSION 6 **\n//*  FROM: SAS INSTITUTE INC., SAS CAMPUS DRIVE, CARY, NC 27513      **\n//*********************************************************************\n//SAS       EXEC PGM=SASXAL,PARM='SORT=&SORT &OPT'\n//STEPLIB   DD DISP=SHR,DSN=STDL.SAS609.LIBRARY\n//CONFIG    DD DISP=SHR,DSN=STDL.SAS609.$INSTALL(BATCHXA)\n//SASAUTOS  DD DISP=SHR,DSN=STDL.SAS609.AUTOLIB\n//SASHELP   DD DISP=SHR,DSN=STDL.SAS609.SASHELP\n//SASLIST   DD SYSOUT=*\n//SASLOG    DD SYSOUT=*\n//SASMSG    DD DISP=SHR,DSN=STDL.SAS609.SASMSG\n//SASPARM   DD UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=1)\n//SYSUDUMP  DD SYSOUT=*\n//**  ADD A LINE LIKE THE FOLLOWING TO CREATE A MACHINE-READABLE DUMP\n//*SYSMDUMP DD DSN=DUMP,UNIT=SYSDA,DISP=(NEW,CATLG),SPACE=(TRK,(20,5))\n//WORK      DD UNIT=SYSDA,SPACE=(CYL,(&WORK,5)),\n//             DCB=(RECFM=FS,LRECL=6144,BLKSIZE=6144,DSORG=PS)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SASOPTS": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x04O\\x01\\x01\\x04O\\x10X\\x01\\x15\\x01\\x15\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-13T00:00:00", "modifydate": "2001-02-13T10:58:00", "lines": 277, "newlines": 277, "modlines": 0, "user": "WSBG"}, "text": "1                                                          The SAS System\n\nNOTE: Copyright (c) 1989-1996 by SAS Institute Inc., Cary, NC, USA.\nNOTE: SAS (r) Proprietary Software Release 6.09  TS450\n      Licensed to THE GREAT ATLANTIC & PACIFIC TEA COMPANY, Site 0009484001.\n\n\nNOTE: The SASUSER library was not specified. SASUSER library will now be the sam\nNOTE: All data sets and catalogs in the SASUSER library will be deleted at the e\n      prevent their deletion.\n\nNOTE: SAS system options specified are:\n      SORT=4\n\nNOTE: The initialization phase used 0.04 CPU seconds and 3161K.\n1            PROC OPTIONS;\n2            RUN;\n\n    SAS (r) Proprietary Software Release 6.09  TS450\n\nPORTABLE OPTIONS:\n\n _LAST_=_NULL_     Last data set created\n BATCH             Use batch mode default system options\n BUFNO=3           Number of buffers to use for each SAS data set\n BUFSIZE=0         Size of internal I/O buffer\n BYERR             Null by list/stmt on _NULL_ input data sets an error?\n BYLINE            Print the by-line for at the beginning of each by-group?\n NOCAPS            Translate quoted strings and titles to upper case?\n CARDIMAGE         SAS source lines are processed as 80-byte cards\n CATCACHE=4        Requested number of cached SAS catalogs\n CBUFNO=0          Number of buffers to use for each SAS catalog\n CENTER            Center SAS output?\n NOCHARCODE        Represent special symbols with alternate characters?\n CLEANUP           Try to recover from an out-of-resource condition?\n NOCMDMAC          Command line commands scanned for implicit invocation of 'cmd\n COMPRESS=NO       Compress observations in created datasets?\n NOCPUID           Print CPU information at the top of log?\n DATE              Date printed in title?\n NODBCS            Support Japanese, Chinese, Korean and other languages that us\n DBCSLANG=         Double byte character set language\n DBCSTYPE=         Double byte character set collating sequence\n NODETAILS         Obtain and display additional information with directory list\n DEVICE=           Graphics device name\n DKRICOND=ERROR    Action for DROP/KEEP/RENAME error conditions on input data se\n DKROCOND=WARN     Action for DROP/KEEP/RENAME error conditions on output data s\n NODMR             Invoke a remote version of Display Manager for use with SAS/C\n NODMS             Invoke the Display Manager?\n NODMSBATCH        Use batch mode for DMS?\n DSNFERR           Treat data set not found as an error or set ds to _NULL_?\n NOECHOAUTO        Echo AUTOEXEC input to log?\n ENGINE=V609       Default access method for SAS libraries\n NOERRORABEND      Abend on error conditions?\n ERRORCHECK=NORMAL Level of special error processing to be performed.\n ERRORS=20         Maximum number of observations with error messages\n FIRSTOBS=1        First observation of each data set to be processed\n FMTERR            Treat missing format or informat as an error?\n FMTSEARCH=        List of catalogs for format search.\n FORMCHAR=|----|+|---+=|-/\\<>*\n                   Specifies the formatting characters for the print device\n2                                                          The SAS System\n\n FORMDLIM=         Delimiter character for page separation\n FORMS=DEFAULT     Default form for PRINT command\n NOGWINDOW         Graphics output put in a DMS window?\n NOIMPLMAC         SAS statements scanned for implicit invocation of a 'STMT' ma\n INITSTMT=         Initial statement(s) executed before SYSIN\n INVALIDDATA=.     Missing value for invalid data\n LABEL             Allow procedures to use variable labels?\n LINESIZE=132      Line size for printed output\n MACRO             Perform macro processing?\n MAPS=MAPS         Libname of map datasets\n MAUTOSOURCE       Allow SAS macro automatic call from source library?\n MERROR            Treat apparent undefined macro references as an error?\n MISSING=.         Character printed to represent numeric missing values\n NOMLOGIC          Trace macro execution?\n NOMPRINT          Print macro facility results in a synthetic compressed form?\n NOMRECALL         Attempt to look up autocall macros which were not found previ\n NOMSGCASE         All messages in message files are upper-case?\n MSGLEVEL=N        Print informatory messages? Valid values are I and N\n NOMSTORED         Use stored compiled macros?\n MSYMTABMAX=1048576\n                   Maximum allocation for macro table.\n MVARSIZE=8192     Maximum allocation for macro symbols.\n NEWS=             Filename of news to be written to the log.\n NOTES             Print SAS notes on log?\n NUMBER            Print page number on each page of SAS output?\n OBS=MAX           Number of last observation to be processed\n OVP               Allow SAS printed output lines to be overprinted?\n PAGENO=1          Resets the current page number on the print file\n PAGESIZE=60       Number of lines printed per page of output\n PARM=             Parm for external programs\n PARMCARDS=SASPARM Logical name for PARMCARDS\n NOPRINTINIT       SAS print file initialized?\n PROBSIG=0         Number of significant figures guaranteed when printing P-valu\n PROC              Allow external program invocation via PROC statement?\n REMOTE=           Remote session id for use with SAS/CONNECT\n REPLACE           Allow replacement of permanent SAS data sets?\n REUSE=NO          Reuse Space when adding records to a compressed SAS Data Set?\n NORSASUSER        Open the SASUSER library as READONLY.\n S=0               Source statement length\n SASAUTOS=SASAUTOS Filename of automatic call library for source macros\n SASFRSCR=         Fileref assigned to location of SAS/CONNECT script files.\n SASHELP=SASHELP   Libname of SAS system catalog library\n SASMSG=SASMSG     Filename for message library\n SASMSTORE=        Libname for SAS data library containing SAS compiled stored m\n SASSCRIPT=        Location of SAS/CONNECT script files.\n SASUSER=          Libname for SAS data library containing user profile catalog\n SEQ=8             Number of numeric digits in sequence numbers\n SERROR            Consider undefined macro variable references an error?\n NOSETINIT         Update site validation data via proc setinit or setinit windo\n SITEINFO=         Filename of site information\n SKIP=0            Number of lines to skip before title.\n SORTSEQ=          Collating sequence to be used for sorting.\n SORTSIZE=MAX      Size parameter for sort.\n SOURCE            List SAS source statements on log?\n NOSOURCE2         List included SAS source statements on log?\n SPOOL             Spool SAS statements entered at terminal to utility file?\n NOSYMBOLGEN       Print symbolic replacement text?\n SYSPARM=          Value return by the SYSPARM() function\n3                                                          The SAS System\n\n S2=0              %INCLUDE statement length\n TAPECLOSE=LEAVE   Close disposition (volume positioning) for tape data librarie\n NOTERMINAL        Is a terminal available?\n TRANTAB=          Names of translate tables.\n USER=WORK         Default libname for all one-level SAS data set names\n VNFERR            Treat variable not found on _NULL_ data set as error?\n WORK=WORK         Libname for WORK library\n NOWORKINIT        Erase WORK library at SAS invocation?\n NOWORKTERM        Erase WORK library at SAS termination time?\n YEARCUTOFF=1960   Cutoff year for DATE7. informat\n\n\n\n HOST OPTIONS :\n\n ALTLOG=           Fileref for alternate log file\n ALTPRINT=         Fileref for alternate print file\n AUTHENCR=OPTIONAL Is encryption of authorization information by TCP clients OPT\n AUTOEXEC=         Fileref containing SAS statements which will be automatically\n NOBLKALLOC        BLKSIZE and LRECL for new SAS Data Libraries will be defaulte\n BLKSIZE=0         Default block size for V6 SAS data libraries and V5 SAS data\n BMPREAD=N         Read only flag for BMP regions\n BNDLSUFX=         One-character suffix for bundle load modules\n NOCAPSOUT         Output is not to be uppercased\n CHARTYPE=0        Character set to use for device\n NOCLIST           SAS System will obtain its input from the terminal\n CODEPASS=1        Number of passes during code generation\n CODEPCT=0         Code generation storage allocation overhead percentage\n COMAMID=          Default communications access method\n COMAUX1=          Communications auxiliary access method 1\n COMAUX2=          Communications auxiliary access method 2\n CONFIG=CONFIG     Fileref for configuration file\n DLIREAD=N         Read only flag for DLI, DBB regions\n NODSRESV          ENQ will be issued instead of RESERVE when accessing OS parti\n NODYNALLOC        SAS System will allocate sort work data sets\n FILECC            External input data sets inspected for PRINT attribute\n FILEDEST=         Default printer destination\n FILEDEV=SYSDA     Device name used for allocation of new data sets\n FILEDIRBLK=6      Default directory block allocation for new data sets\n FILEEXT=VERIFY    Method to use in processing  extension in member name\n FILEFORMS=        Default FORMS for print file\n FILEMOUNT         Volume is to be mounted if not online\n NOFILEMSGS        Do not display dynamic allocation error messages\n FILENULL          Write out zero-length records to external files\n NOFILEPROMPT      Do not prompt user when data set does not exist for FILENAME\n NOFILEREUSE       File being allocated is not to be freed if currently in use\n FILESPPRI=1       Default primary space allocation for new data sets\n FILESPSEC=1       Default secondary space allocation for new data sets\n NOFILESTAT        Don't maintain ISPF statistics in member directory\n FILESYSOUT=       Default SYSOUT CLASS for print file\n FILEUNIT=CYLS     Default unit of allocation for new data sets\n FILEVOL=          VOLSER used for allocation of new data sets\n NOFSBCOLOR        Do not use window background colors on vector graphics device\n FSBORDER=BEST     Full-screen Border Character Set\n FSDEVICE=         Specifies the full-screen device driver for your terminal\n FSMODE=IBM        Full-screen data stream type\n NOFULLSTATS       Print condensed step resource usage statistics\n GHFONT=           Default graphics hardware font\n4                                                          The SAS System\n\n HSLXTNTS=1500     Number of pages in each extent of a hiperspace data library\n HSMAXPGS=200000   Maximum number of hiperspace pages allowed in this session\n HSMAXSPC=200      Maximum number of hiperspaces allowed in this session\n HSSAVE            Issue SAVE to linear dataset data library after each write\n HSWORK            Use a hiperspace for the WORK library\n ICSRSLV=          Defines the order in which the Interlink DNR and SAS resolver\n LOG=SASLOG        Specifies fileref for the SAS log data set\n LUFIRST=1         Defines user VTAM application pool begin boundary\n LULAST=9          Defines VTAM application pool end boundary\n LUNAME=           VTAM communication LU name\n LUPOOL=USER       Environment in which VTAM LU is acquired from pool\n LUPREFIX=         Defines VTAM application prefix for user application pool\n LUTYPE=SNA0       LU protocol to use in establishing VTAM communications with r\n LU0MODE=          VTAM session mode name for LU0\n LU62MODE=         VTAM session mode name for LU6.2\n MEMRPT            Memory usage statistics will be reported for each step\n MEMSIZE=16M       Limit on the total amount of memory to be used by the SAS Sys\n NOMINSTG          SAS System will not attempt to minimize use of storage\n NDSVOLS=          VOLSER upon which no V5 SAS data library processing is to occ\n OPLIST            List options from command line on log\n ORAVER=V7         Version number for the ORACLE software you are using\n PFKEY=            Function key set - PRIMARY, ALTERNATE, 12, CUAPRI, CUAALT, or\n PGMPARM=          Miscellaneous parameters to be passed to SYSIN program\n PRINT=SASLIST     Fileref for print file to which SAS output will be written\n PROCLEAVE=(0,102400)\n                   Amount of memory to be reserved for task to handle out-of-mem\n PSUP=SASXKERN     Name of SAS portable supervisor\n REXXLOC=SASREXX   Filename from which to load REXX macros\n NOREXXMAC         Do not process unrecognized statements as implicit REXX macro\n SASLIB=SASLIB     DDname for alternate load library\n SEQENGINE=SASV6SEQ\n                   Default sequential engine\n SORT=4            Minimum size of all allocated sort work data sets\n SORTANOM=0X       Sort program anomalies flags\n SORTCUTP=4M       Internal/external sort cutover point\n SORTDEV=SYSDA     Device name used for allocated sort work data sets\n SORTLIB=          Name of sort library\n NOSORTLIST        SAS will not pass the LIST parameter to sort utility\n NOSORTMSG         SAS will not pass the MSG=AP parameter to sort utility\n SORTMSG=SYSOUT    Fileref to be dynamically allocated for the system sort utili\n SORTNAME=SYNCSORT Name of host sort program\n SORTPARM=         Miscellaneous parameters to be passed to host sort program\n SORTPGM=BEST      Name of system sort utility\n NOSORTSHRB        Host sort interface may modify data in buffers\n SORTUNIT=CYLS     Allocation space units for sort work files\n SORTWKDD=SASS     Prefix of sort work data sets\n SORTWKNO=1        Number of sort work data sets to allocate\n STAE              System abend exit enabled\n STATS             Resource statistics will be printed\n STAX              System attention exit enabled\n STIMER            SAS will print the CPU time used for each step\n SUBSYSID=SAS0     Subsystem name\n SYNCHIO           Synchronous I/O enabled\n SYSIN=SYSIN       Fileref of primary SAS input data stream\n SYSINP=           Name of the external program to handle SYSIN\n SYSLEAVE=(0,102400)\n                   Amount of memory to be reserved for end of task termination\n SYSPREF=          Prefix for unqualified data set names\n5                                                          The SAS System\n\n SYSPRINT=         Fileref for default print file\n NOS99NOMIG        Restore migrated data sets\n TCPIPMCH=         TCP/IP Virtual Machine Name\n TCPIPPRF=         Prefix for TCP/IP configuration datasets\n VECTOR            Use the vector facility instructions if available\n NOVERBOSE         Do not list options on terminal\n NOVSAMLOAD        Do not allow user to load a VSAM data set\n VSAMREAD          Allow user to read VSAM data set\n NOVSAMUPDATE      Do not allow user to update a VSAM data set\n\n DEVICE TYPE  2301   9345   2303  2305-1 2305-2  2311   2314\n ----------- ------ ------ ------ ------ ------ ------ ------\n     BLKSIZE   6144   6144   4608   6144   6144      .   6144\n FILEBLKSIZE  20483  22928   4892  14136  14660   3625   7294\n\n DEVICE TYPE  2321   3330  3330-1  3340   3350   3375   3380\n ----------- ------ ------ ------ ------ ------ ------ ------\n     BLKSIZE      .   6144   6144   6144   6144   8192   6144\n FILEBLKSIZE   2000  13030  13030   8368  19069  17600  23476\n\n DEVICE TYPE  3390   2400   3400   3480   3490E SYSOUT  TERM\n ----------- ------ ------ ------ ------ ------ ------ ------\n     BLKSIZE   6144      .      .      .      .      .      .\n FILEBLKSIZE  27998  32760  32760  32760  32760    264    264\n\n DEVICE TYPE  OTHER\n ----------- ------\n     BLKSIZE   6144\n FILEBLKSIZE   6400\n\nNOTE: The PROCEDURE OPTIONS used 0.03 CPU seconds and 3183K.\n\n\nNOTE: The SAS session used 0.07 CPU seconds and 3183K.\nNOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SBGPRCR": {"ttr": 2568, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00\\x00\\x00\\x92\\x18O\\x01\\x01\\x04?\\x16\\x15\\x00\\x1c\\x00\\r\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "2001-02-12T16:15:00", "lines": 28, "newlines": 13, "modlines": 0, "user": "WSBG"}, "text": "//WSBGPRCR JOB ,S-GOLOB,MSGCLASS=X,NOTIFY=WSBG,CLASS=S\n//*\n//JCL      JCLLIB  ORDER=WSBG.WVOL.SOURCE\n//*\n//STEP1    EXEC SAS,WORK='120'\n//CNTLLIB1 DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(WINVPRD1)\n//CNTLLIB2 DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(WINVPRD2)\n//CNTLLIB3 DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVLLSTM)\n//MEMBER   DD  DISP=SHR,DSN=WSBG.MONAMEM\n//MONACMPR DD  DISP=OLD,DSN=WSBG.MONACMPR\n//ERRRPT1  DD  SYSOUT=*\n//ERRRPT2  DD  SYSOUT=*\n//ERRRPT3  DD  SYSOUT=*\n//ERRRPT4  DD  SYSOUT=*\n//ERRRPT5  DD  SYSOUT=*\n//LLIST    DD  SYSOUT=*\n//MATCH    DD  SYSOUT=*\n//NOMATCH  DD  SYSOUT=*\n//SASPCH   DD  UNIT=VIO,SPACE=(CYL,(1,1,)),\n//             DCB=(LRECL=80,BLKSIZE=8880,RECFM=FB,DSORG=PS)\n//SASLIB   DD  DISP=SHR,DSN=WSBG.WVOL.FMTLIB\n//TLIB     DD  SYSOUT=*\n//XLIB     DD  SYSOUT=*\n//$ORTPARM DD  *\nNORC16\n//*\n//SYSIN    DD  DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPRC)\n//*                                                                     BACKUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SBGPRE": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&\\x00\\x00\\x00\\x92\\x18O\\x01\\x01\\x04?\\x16\\x15\\x02)\\x00}\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.38", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "2001-02-12T16:15:00", "lines": 553, "newlines": 125, "modlines": 0, "user": "WSBG"}, "text": "//WSBGPRE  JOB ,S-GOLOB,MSGCLASS=X,NOTIFY=WSBG,CLASS=S                  JOB08804\n//*\n//JCL      JCLLIB  ORDER=WSBG.WVOL.SOURCE\n//*\n//ALLC0010 EXEC PGM=IEFBR14\n//MONACMPR DD   DISP=(MOD,DELETE),DSN=WSBG.MONACMPR,\n//         UNIT=SYSDA,SPACE=(CYL,(20,1)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//MONADSN  DD   DISP=(MOD,DELETE),DSN=WSBG.MONADSN,\n//         UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//MONAMEM  DD   DISP=(MOD,DELETE),DSN=WSBG.MONAMEM,\n//         UNIT=SYSDA,SPACE=(CYL,(50,40)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//ALLC0015 EXEC PGM=IEFBR14\n//MONACMPR DD   DISP=(NEW,CATLG),DSN=WSBG.MONACMPR,\n//         UNIT=SYSDA,SPACE=(CYL,(20,1)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//MONADSN  DD   DISP=(NEW,CATLG),DSN=WSBG.MONADSN,\n//         UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//MONAMEM  DD   DISP=(NEW,CATLG),DSN=WSBG.MONAMEM,\n//         UNIT=SYSDA,SPACE=(CYL,(50,40)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//PREPROC1 DD   DISP=(NEW,PASS),DSN=&&PREPROC1,\n//         UNIT=SYSDA,SPACE=(CYL,(50,10)),\n//         DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)\n//*\n//S$R10010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC SARES1 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$R10020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(SARES1)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$R10030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L10010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$GEN1 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L10020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$GEN1)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L10030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L30010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$GEN2 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L30020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$GEN2)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L30030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L40010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$GEN3 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L40020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$GEN3)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L40030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L50010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$GEN5 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L50020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$GEN5)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L50030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L60010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$GEN6 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L60020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$GEN6)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L60030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L70010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC SAOS11 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L70020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(SAOS11)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L70030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L80010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$OS12 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L80020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$OS12)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L80030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$L90010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC P$OE02 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$L90020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(P$OE02)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$L90030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$LA0010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$LIB3 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$LA0020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$LIB3)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$LA0030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$LB0010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$LIB4 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$LB0020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$LIB4)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$LB0030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$LC0010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC S$LIB4 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$LC0020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(S$LIB5)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$LC0030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$LD0010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC W$Z001 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$LD0020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(W$Z001)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$LD0030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$LE0010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC W$Z002 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$LE0020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(W$Z002)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$LE0030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n//S$LF0010 EXEC  PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//VTOCOUT  DD DISP=(NEW,CATLG),DSN=&&VTOC,UNIT=VIO,SPACE=(TRK,(1,1)),\n//         DCB=(LRECL=80,BLKSIZE=8880)\n//SYSTSIN  DD  *\n  VTOC W$Z003 NOHEADING SORT(DSNAME,A) -\n  EXLEVEL(ZZ,SYS1.VVDS,SYS1.VTOCIX) -\n  PRINT(NEW (DSNAME))\n//*\n//S$LF0020 EXEC SAS\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SITE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SITEMON)\n//STG2IN   DD   DISP=SHR,DSN=WSBG.MONA.STG2PNCH(W$Z003)\n//REPORTA  DD   SYSOUT=*\n//DATACONT DD   SYSOUT=*\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP1)\n//*\n//S$LF0030 EXEC SAS\n//SASLIB   DD   DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//REPORTA  DD   SYSOUT=*\n//TLIBRPT  DD   SYSOUT=*\n//DLIBRPT  DD   SYSOUT=*\n//XLIBRPT  DD   SYSOUT=*\n//DSNRPT   DD   SYSOUT=*\n//CCIN     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVDSNCC)\n//DSNIN    DD   DISP=(OLD,DELETE),DSN=&&VTOC\n//DLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(DLIB)\n//TLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(TLIB)\n//SMPE     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(SMPE)\n//XLIB     DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(XLIB)\n//MONADSN  DD   DISP=OLD,DSN=WSBG.MONADSN\n//MONAMEM  DD   DISP=OLD,DSN=WSBG.MONAMEM\n//PREPROC1 DD   DISP=OLD,DSN=&&PREPROC1\n//SYSIN    DD   DISP=SHR,DSN=WSBG.WVOL.SOURCE(INVPREP2)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SBGSTG1": {"ttr": 2822, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x92\\x18O\\x01\\x01\\x04?\\x16I\\x00T\\x00-\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "2001-02-12T16:49:00", "lines": 84, "newlines": 45, "modlines": 0, "user": "WSBG"}, "text": "//WSBGMPR1 JOB  ,S-GOLOB,CLASS=S,MSGCLASS=X,NOTIFY=WSBG\n/*ROUTE XEQ MON1\n/*ROUTE PRINT MON1\n//*\n//JCL      JCLLIB  ORDER=WSBG.WVOL.SOURCE\n//*\n//STEP0010 EXEC WVOLALL1,STG1DS='WSBG.MONA.STG1PNCH'\n//ALLC0010.COMPPDS DD DCB=LRECL=255\n//*\n//STEP0020 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$GEN1,\n//          VOLUME=S$GEN1\n//COLL0005.SYSIN DD *\n//*\n//STEP0040 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=SARES1,\n//          VOLUME=SARES1\n//COLL0005.SYSIN DD *\n//*\n//STEP0050 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$GEN2,\n//          VOLUME=S$GEN2\n//COLL0005.SYSIN DD *\n//*\n//STEP0060 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$GEN3,\n//          VOLUME=S$GEN3\n//COLL0005.SYSIN DD *\n//*\n//STEP0070 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$GEN5,\n//          VOLUME=S$GEN5\n//COLL0005.SYSIN DD *\n//*\n//STEP0080 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$GEN6,\n//          VOLUME=S$GEN6\n//COLL0005.SYSIN DD *\n//*\n//STEP0090 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=SAOS11,\n//          VOLUME=SAOS11\n//COLL0005.SYSIN DD *\n//*\n//STEP0100 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$OS12,\n//          VOLUME=S$OS12\n//COLL0005.SYSIN DD *\n//*\n//STEP0110 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=P$OE02,\n//          VOLUME=P$OE02\n//COLL0005.SYSIN DD *\n//*\n//STEP0120 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$LIB3,\n//          VOLUME=S$LIB3\n//COLL0005.SYSIN DD *\n//*\n//STEP0130 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$LIB4,\n//          VOLUME=S$LIB4\n//COLL0005.SYSIN DD *\n//*\n//STEP0140 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=S$LIB5,\n//          VOLUME=S$LIB5\n//COLL0005.SYSIN DD *\n//*\n//STEPD020 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=W$Z001,\n//          VOLUME=W$Z001\n//COLL0005.SYSIN DD *\n//*\n//STEPE020 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=W$Z002,\n//          VOLUME=W$Z002\n//COLL0005.SYSIN DD *\n//*\n//STEPF020 EXEC WVOLRUN1,STG1DS='WSBG.MONA.STG1PNCH',\n//          RUNVOL=W$Z003,\n//          VOLUME=W$Z003\n//COLL0005.SYSIN DD *\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SBGSTG2": {"ttr": 2825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x00!\\x7f\\x01\\x01\\x04?\\x12&\\x005\\x003\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-08-04T00:00:00", "modifydate": "2001-02-12T12:26:00", "lines": 53, "newlines": 51, "modlines": 0, "user": "WSBG"}, "text": "//WSBGMPR2 JOB  ,S-GOLOB,CLASS=S,MSGCLASS=X,NOTIFY=WSBG\n/*ROUTE XEQ MON1\n/*ROUTE PRINT MON1\n//*\n//JCL      JCLLIB  ORDER=WSBG.WVOL.SOURCE\n//*\n//STEP0010 EXEC WVOLALL2,STG2DS='WSBG.MONA.STG2PNCH'\n//STEP0020 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$GEN1\n//STEP0040 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=SARES1\n//STEP0050 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$GEN2\n//STEP0060 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$GEN3\n//STEP0070 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$GEN5\n//STEP0080 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$GEN6\n//STEP0090 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=SAOS11\n//STEP0100 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$OS12\n//STEP0110 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=P$OE02\n//STEP0120 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$LIB3\n//STEP0130 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$LIB4\n//STEP0140 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=S$LIB5\n//STEP1020 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=W$Z001\n//STEP2020 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=W$Z002\n//STEP3020 EXEC WVOLRUNI,STG2DS='WSBG.MONA.STG2PNCH',\n//          STG1DS0='WSBG.MONA.STG1PNCH',\n//          MEM=W$Z003\n//*                                                                     BACK\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SITEMON": {"ttr": 2827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x08\\x00\\x00\\x00\\x92\\x08o\\x01\\x00\\x12\\x9f\\x10'\\x00\\x01\\x00\\x01\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.08", "flags": 0, "createdate": "1992-03-26T00:00:00", "modifydate": "2000-05-08T10:27:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "WSBG"}, "text": "MONA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPE": {"ttr": 2829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x04\\x0f\\x01\\x01\\x04\\x0f\\x10Q\\x00s\\x00s\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-09T00:00:00", "modifydate": "2001-02-09T10:51:00", "lines": 115, "newlines": 115, "modlines": 0, "user": "WSBG"}, "text": "              SYSSMPE.OS390D.CSI.DATA\n              SYSSMPE.OS390D.CSI.INDEX\n              SYSSMPE.OS390T.CSI.DATA\n              SYSSMPE.OS390T.CSI.INDEX\nLL            SYSSMPE.OS390T.SMPLTS\n              SYSSMPE.OS390T.SMPMTS\n              SYSSMPE.OS390T.SMPSCDS\n              SYSSMPE.OS390T.SMPSTS\n              SYSSMPE.RELFILE.CLJ4200.F1\n              SYSSMPE.RELFILE.CLJ4200.F2\nLL            SYSSMPE.RELFILE.CLJ4200.F3\nLL            SYSSMPE.RELFILE.CLJ4200.F4\n              SYSSMPE.RELFILE.CLJ4201.F1\nLL            SYSSMPE.RELFILE.CLJ4201.F2\nLL            SYSSMPE.RELFILE.CLJ4201.F3\n              SYSSMPE.RELFILE.CLJ4202.F1\nLL            SYSSMPE.RELFILE.CLJ4202.F2\nLL            SYSSMPE.RELFILE.CLR4200.F1\n              SYSSMPE.RELFILE.CLU4200.F1\nLL            SYSSMPE.RELFILE.CLU4200.F2\n              SYSSMPE.RELFILE.CLU4201.F1\nLL            SYSSMPE.RELFILE.CLU4201.F2\n              SYSSMPE.RELFILE.CLU4202.F1\n              SYSSMPE.RELFILE.CLU4202.F2\nLL            SYSSMPE.RELFILE.CLU4202.F3\nLL            SYSSMPE.RELFILE.CPP1000.F1\n              SYSSMPE.RELFILE.HBKP300.F1\nLL            SYSSMPE.RELFILE.HBKP300.F2\n              SYSSMPE.RELFILE.HBKP300.F3\n              SYSSMPE.RELFILE.HBKP300.F4\n              SYSSMPE.RELFILE.HBKP300.F5\n              SYSSMPE.RELFILE.HBKP300.F6\n              SYSSMPE.RELFILE.HBKP300.F7\n              SYSSMPE.RELFILE.HBKP300.F8\n              SYSSMPE.RELFILE.HBKP300.F9\n              SYSSMPE.RELFILE.HDZ11SE.F1\n              SYSSMPE.RELFILE.HDZ11SE.F2\nLL            SYSSMPE.RELFILE.HDZ11SE.F3\n              SYSSMPE.RELFILE.HDZ11SM.F1\n              SYSSMPE.RELFILE.HDZ11SM.F2\nLL            SYSSMPE.RELFILE.HDZ11SM.F3\n              SYSSMPE.RELFILE.HDZ11SM.F4\n              SYSSMPE.RELFILE.HEZ6603.F1\n              SYSSMPE.RELFILE.HEZ6603.F2\n              SYSSMPE.RELFILE.HEZ6603.F3\nLL            SYSSMPE.RELFILE.HEZ6603.F4\n              SYSSMPE.RELFILE.HIMW200.F1\n              SYSSMPE.RELFILE.HIMW200.F2\n              SYSSMPE.RELFILE.HIMW200.F3\nLL            SYSSMPE.RELFILE.HIMW200.F4\n              SYSSMPE.RELFILE.HIMW200.F5\n              SYSSMPE.RELFILE.HIPM110.F1\n              SYSSMPE.RELFILE.HJE6603.F1\nLL            SYSSMPE.RELFILE.HJE6603.F2\n              SYSSMPE.RELFILE.HMB3122.F1\n              SYSSMPE.RELFILE.HMB3122.F2\n              SYSSMPE.RELFILE.HMB3122.F3\nLL            SYSSMPE.RELFILE.HMB3122.F4\n              SYSSMPE.RELFILE.HMB3122.F5\n              SYSSMPE.RELFILE.HOT1150.F1\n              SYSSMPE.RELFILE.HOT1150.F2\nLL            SYSSMPE.RELFILE.HOT1150.F3\n              SYSSMPE.RELFILE.HQX1700.F1\n              SYSSMPE.RELFILE.HQX1700.F2\nLL            SYSSMPE.RELFILE.HQX1700.F3\n              SYSSMPE.RELFILE.HRA2402.F1\n              SYSSMPE.RELFILE.HRA2402.F2\nLL            SYSSMPE.RELFILE.HRA2402.F3\n              SYSSMPE.RELFILE.HRM6603.F1\n              SYSSMPE.RELFILE.HRM6603.F2\nLL            SYSSMPE.RELFILE.HRM6603.F3\n              SYSSMPE.RELFILE.HRSS110.F1\n              SYSSMPE.RELFILE.HRSS110.F2\nLL            SYSSMPE.RELFILE.HRSS110.F3\n              SYSSMPE.RELFILE.HTE25D2.F1\n              SYSSMPE.RELFILE.HTE25D2.F2\nLL            SYSSMPE.RELFILE.HTE25D2.F3\n              SYSSMPE.RELFILE.H0H2130.F1\n              SYSSMPE.RELFILE.H0H2130.F2\nLL            SYSSMPE.RELFILE.H0H2130.F3\n              SYSSMPE.RELFILE.H0H2130.F4\n              SYSSMPE.RELFILE.JBKP310.F1\n              SYSSMPE.RELFILE.JBKP310.F10\n              SYSSMPE.RELFILE.JBKP310.F11\n              SYSSMPE.RELFILE.JBKP310.F12\n              SYSSMPE.RELFILE.JBKP310.F13\n              SYSSMPE.RELFILE.JBKP310.F14\n              SYSSMPE.RELFILE.JBKP310.F15\n              SYSSMPE.RELFILE.JBKP310.F2\n              SYSSMPE.RELFILE.JBKP310.F3\n              SYSSMPE.RELFILE.JBKP310.F4\n              SYSSMPE.RELFILE.JBKP310.F5\n              SYSSMPE.RELFILE.JBKP310.F6\n              SYSSMPE.RELFILE.JBKP310.F7\n              SYSSMPE.RELFILE.JBKP310.F8\n              SYSSMPE.RELFILE.JBKP310.F9\n              SYSSMPE.RELFILE.JIMW201.F1\n              SYSSMPE.RELFILE.JIMW201.F2\n              SYSSMPE.RELFILE.JIMW201.F3\n              SYSSMPE.RELFILE.JJE66N3.F1\n              SYSSMPE.RELFILE.JMWL75H.F1\n              SYSSMPE.RELFILE.JOT15N0.F1\n              SYSSMPE.RELFILE.JOT15N0.F2\n              SYSSMPE.RELFILE.JOT15N0.F3\n              SYSSMPE.RELFILE.JQX1701.F1\n              SYSSMPE.RELFILE.JRM66N3.F1\n              SYSSMPE.RELFILE.JTE25D0.F1\n              SYSSMPE.RELFILE.JTE25D0.F2\n              SYSSMPE.RELFILE.JTE25D0.F3\nLL            SYSSMPE.RELFILE.JTE25D0.F4\n              SYSSMPE.RELFILE.TY00R36.F1\nLL            SYSSMPE.RELFILE.TY30B36.F1\n              SYSSMPE.RELFILE.TY40Y36.F1\n              SYSSMPE.RELFILE.TY50036.F1\nLL            SYSSMPE.RELFILE.TY50036.F2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TLIB": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x04\\x0f\\x01\\x01\\x04\\x0f\\x10Q\\x03@\\x03@\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-09T00:00:00", "modifydate": "2001-02-09T10:51:00", "lines": 832, "newlines": 832, "modlines": 0, "user": "WSBG"}, "text": "LL            STDL.ADCS.ADCSLIB\nLL            STDL.ADCS.ADCSLOAD\nLL            STDL.ASMH.V2.LINKLIB\nLL            STDL.ASMX.LINKLIB\nLL BBI3338    STDL.BBI.V338.BBCMOD\nLL BBI3338    STDL.BBI.V338.BBLINK\nLL BBI3338    STDL.BBI.V338.BBLOAD\nLL BBI3338    STDL.BBI.V338.BBYCOPY\nLL BBI3338    STDL.BBI.V338.SASCOMOD\nLL            STDL.BMC3003.SUPEROPT.LOAD\nLL            STDL.CAIIJMP.V62.LOADLIB\nLL            STDL.CALIBR.R38.LINKLIB\nLL            STDL.CALIBR.R39.CAILIB\nLL CLJ4200    STDL.CALIBR.R42.CAILIB\nLL            STDL.CALIBR.R42.CAILIB.ZAP\nLL            STDL.CA1.COPYCAT.R1.CAILIB\nLL            STDL.CA1.COPYCAT.R1.CUW10LLD\nLL CL052B0    STDL.CA1.R52.CA1ISPL\nLL CL052B0    STDL.CA1.R52.CA1LIB\nLL CL72000    STDL.CA11.R20.CA11LINK\nLL CL72000    STDL.CA11.R20.CA11UMOD\nLL CL72000    STDL.CA11.R22.CA11CICS\nLL CL72000    STDL.CA11.R22.CA11ISPL\nLL CL72000    STDL.CA11.R22.CA11LIB\nLL CL72000    STDL.CA11.R22.CA11LPA\nLL CS91000    STDL.CA90.R10.CAICICS\nLL CS91000    STDL.CA90.R10.CAILIB\nLL CBT4240    STDL.CBTSTUFF.TLIB\nLL            STDL.CD4680.LINKLIB\nLL            STDL.CEE.V150.SAFHFORT\nLL            STDL.CEE.V150.SCEECICS\nLL            STDL.CEE.V150.SCEELKED\nLL            STDL.CEE.V150.SCEERUN\nLL            STDL.CEE.V150.SCEESPC\nLL            STDL.CEE.V150.SIBMCALL\nLL            STDL.CEE.V150.SIBMMATH\nLL            STDL.CEE.V150.SIBMTASK\nSA HCI4100    STDL.CICS.V410.SDFHAPD1\nSA HCI4100    STDL.CICS.V410.SDFHAPD2\nLL HCI4100 F  STDL.CICS.V410.SDFHAUTH\nCL HCI4100    STDL.CICS.V410.SDFHCLIB\nSR HCI4100    STDL.CICS.V410.SDFHCOB\nSR HCI4100    STDL.CICS.V410.SDFHC370\nLL HCI4100 F  STDL.CICS.V410.SDFHEXCI\nIN HCI4100    STDL.CICS.V410.SDFHINST\nCN HCI4100    STDL.CICS.V410.SDFHLANG\nLL HCI4100    STDL.CICS.V410.SDFHLINK\nLL HCI4100 F  STDL.CICS.V410.SDFHLLIB\nLL HCI4100 F  STDL.CICS.V410.SDFHLOAD\nLL HCI4100    STDL.CICS.V410.SDFHLPA\nMA HCI4100    STDL.CICS.V410.SDFHMAC\nMS HCI4100    STDL.CICS.V410.SDFHMLIB\nHE HCI4100    STDL.CICS.V410.SDFHMSGS\nPA HCI4100    STDL.CICS.V410.SDFHPARM\nPN HCI4100    STDL.CICS.V410.SDFHPLIB\nSR HCI4100    STDL.CICS.V410.SDFHPL1\nPR HCI4100    STDL.CICS.V410.SDFHPROC\nSA HCI4100    STDL.CICS.V410.SDFHSAMP\nSR HCI4100    STDL.CICS.V410.SDFHSRC\nSR HCI4100    STDL.CICS.V410.SDFHSRCE\nLL            STDL.CICS2.DLOADLIB\nLL            STDL.CICS2.IPO.LINKLIB\nLL HCI2212    STDL.CICS2.LOADLIB\nLL HCI2212    STDL.CICS2.LOADLIB1\nLL HCI2212    STDL.CICS2.LOADLIB2\nLL            STDL.CICS2.OLD.LOADLIB\nLL            STDL.CMF.R520.BBCMOD\nLL            STDL.CMF.R520.BBLINK\nLL            STDL.CMF.R520.BBLOAD\nLL            STDL.CMF.R520.BBYCOPY\nLL            STDL.CMF.R520.SASCOMOD\nLL            STDL.COB2.R4.COB2CICS\nLL            STDL.COB2.R4.COB2COBJ\nLL            STDL.COB2.R4.COB2COMP\nLL            STDL.COB2.R4.COB2DOBJ\nLL            STDL.COB2.R4.COB2EOBJ\nLL            STDL.COB2.R4.COB2LIB\nLL            STDL.COB2.R4.COB2LOBJ\nLL            STDL.COB2.R4.COB29OBJ\nLL            STDL.CPAC.OS271310.LOADLIB\nLL            STDL.CPAC.OS271310.SCPPLOAD\nLL            STDL.CPAC.SCPPLOAD\nLL            STDL.C370.CLIB\nLL            STDL.C370.LINKLIB\nLL            STDL.DA.V200.LOADLIB\nLL            STDL.DA.V3.LOAD\nLL            STDL.DMYCEE.LE370.SCEELKED\nLL            STDL.DMYCEE.LE370.SCEESPC\nLL            STDL.DMYTCPIP.SEZACMTX\nLL            STDL.DOCULINK.LOADLIB\nLL            STDL.DOCULINK.SNDRCV.LOADLIB\nLL            STDL.DUO.LINKDOS\nLL            STDL.DUO.LINKDUTL\nLL            STDL.DUO.LINKLIB\nLL            STDL.D21V45K.LOADLIB\nLL            STDL.EREP.R35.LINKLIB\nLL            STDL.ESA.CBIPO.LINKLIB\nLL            STDL.EZKEY.LOAD\nLL CI66200    STDL.EZTRIEVE.V62.CAILIB\nLL            STDL.FA.V802.LOADLIB\nLL            STDL.FA.V85.LOAD\nLL            STDL.FDSD.LINKLIB\nLL            STDL.FFST.V120.LPALIB\nLL            STDL.FFST.V120.SEPWMOD1\nLL            STDL.FFST.V120.SEPWMOD2\nLL            STDL.FFST.V120.SEPWMOD3\nLL            STDL.FFST.V120.SEPWMOD4\nLL            STDL.FSS.LOAD\nLL            STDL.FTP.DISTLIB\nLL            STDL.FTP.LOADLIB\nLL            STDL.FTP3270.CMDLIB\nLL            STDL.GSS.V263.LINKLIB\nLL            STDL.GSS.V27.LINKLIB\nLL            STDL.HLASM.V120.SASMMOD1\nLL            STDL.HOST4680.LOAD\nLL            STDL.HOST4680.V40.LOAD\nLL            STDL.HOST4680.V40.LOAD.BKUP\nLL            STDL.IBMEXPDT.EXPLOAD\nLL            STDL.IFAR.LINKLIB\nLL            STDL.IMS.V41.ACBLIB\nLL            STDL.IMS.V41.ACBLIB.SUBSET\nLL            STDL.IMS.V41.DBC.ACBLIB\nLL            STDL.IMS.V41.DBC.ACBLIBA\nLL            STDL.IMS.V41.DBC.ACBLIBB\nLL            STDL.IMS.V41.DBC.LOAD\nLL            STDL.IMS.V41.DBC.LOADLIB\nLL            STDL.IMS.V41.DBC.MODBLKS\nLL            STDL.IMS.V41.DBC.MODBLKSA\nLL            STDL.IMS.V41.DBC.MODBLKSB\nLL            STDL.IMS.V41.DBC.RESLIB\nLL            STDL.IMS.V41.DBDLIB\nLL            STDL.IMS.V41.IPO1.LINKLIB\nLL            STDL.IMS.V41.IPO1.LNKLIB\nLL            STDL.IMS.V41.LOAD\nLL            STDL.IMS.V41.MODBLKS\nLL            STDL.IMS.V41.PGMLIB\nLL            STDL.IMS.V41.PSBLIB\nLL            STDL.IMS.V41.RESLIB\nLL            STDL.IMS.V41.RLLOAD\nLL            STDL.IMS.V41.RLRESLIB\nLL            STDL.IMSD.LOAD\nLL            STDL.IMSD.RLLOAD\nLL            STDL.IMST.RESLIB\nLL            STDL.IMST.RLRESLIB\nLL HMK6600    STDL.IMS610.ACBLIB\nLL HMK6600    STDL.IMS610.ACBLIBA\nLL HMK6600    STDL.IMS610.ACBLIBB\nLL HMK6600    STDL.IMS610.ADXRLOAD\nLL HMK6600    STDL.IMS610.DBDLIB\nLL            STDL.IMS610.IVPEXE61.ACBLIB\nLL            STDL.IMS610.IVPEXE61.ACBLIBA\nLL            STDL.IMS610.IVPEXE61.ACBLIBB\nLL            STDL.IMS610.IVPEXE61.DBDLIB\nLL            STDL.IMS610.IVPEXE61.PGMLIB\nLL            STDL.IMS610.IVPEXE61.PSBLIB\nLL HMK6600    STDL.IMS610.LOAD\nLL HMK6600    STDL.IMS610.LOAD.CRKA\nLL HMK6600    STDL.IMS610.LOAD.TRK\nLL HMK6600    STDL.IMS610.MODBLKS\nLL HMK6600    STDL.IMS610.MODBLKSB\nLL            STDL.IMS610.MONB.LOAD\nLL            STDL.IMS610.MONT.LOAD\nLL HMK6600    STDL.IMS610.PGMLIB\nLL HMK6600    STDL.IMS610.PSBLIB\nLL HMK6600    STDL.IMS610.RESLIB\nLL HMK6600    STDL.IMS610.SDXRRESL\nLL HOZ3102    STDL.INFO.BLGMOD1\nLL HOW1202    STDL.INFOACC.LINKLIB\nLL            STDL.INFOMGT.BLMMOD1\nLL            STDL.INFO4.MODS\nLL            STDL.IOF.LOADLIB\nLL            STDL.IOFC7C0.DFHRPL\nLL            STDL.IOFC7C0.LINKLIST\nLL            STDL.IOFC7C0.LOAD\nLL            STDL.IOFC7D$.LOAD\nLL            STDL.IOFC7D0.DFHRPL\nLL            STDL.IOFC7D0.LOAD\nLL            STDL.IOFC7D1.DFHRPL\nLL            STDL.IOFC7D1.LOAD\nLL            STDL.IOFC7D9.LOAD\nLL            STDL.IOFT7C0.LINKLIB\nLL            STDL.IOFT7C0.LOAD\nLL            STDL.IOFT7C1.LINKLIB\nLL            STDL.IOFT7C1.LOAD\nLL            STDL.IOFT7C9.LINKLIB\nLL            STDL.IOFT7C9.LOAD\nLL            STDL.IOFT7D$.LOAD\nLL            STDL.IOFT7D0.LINKLIB\nLL            STDL.IOFT7D0.LOAD\nLL            STDL.IOFT7D1.LINKLIB\nLL            STDL.IOFT7D1.LOAD\nLL            STDL.IPO.LINKLIB\nLL            STDL.ISPF.V35.ISPLOAD\nLL            STDL.ISPF.V35.ISPLPA\nLL            STDL.JES243.EXITS\nLL JOBT320    STDL.JOBT.V32.TRACLINK\nLL JOBT320    STDL.JOBTRAC.CHD34LIB\nLL            STDL.JOBTRAC.TRACLINK\nLL            STDL.KOM.PMELIB\nLL            STDL.KOM.PME54.LINK\nLL LMRK180    STDL.LMRKPERF.V3.LMKLOAD\nLL LMRK180    STDL.LMRKTMON.V2.TCELOAD\nLL            STDL.MACSIGN1.LOADLIB\nLL            STDL.MHTRAN2.LOADLIB\nLL            STDL.MTPREL50.LOADLIB\nLL            STDL.MV2.LINKLIB\nLL            STDL.MV2.LPALIB\nLL            STDL.MV2.NUCLEUS\nLL            STDL.NCP.V75.SNCPMOD1\nLL            STDL.NCP.V77.SNCPMOD1\nLL            STDL.NDM.R16.SFZDLOAD\nLL            STDL.NDM.R16.SFZDLPA\nLL            STDL.NDM.R162.SFZDLOAD\nLL            STDL.NDM.R162.SFZDLPA\nLL            STDL.NETSPY.V50.LOADLIB\nLL HXYZ400    STDL.NETV.TME13.CNMLINK\nLL            STDL.NETV.TME13.NVULIB\nLL HXYZ400    STDL.NETV.TME13.SCNMLNK1\nLL HXYZ400    STDL.NETV.TME13.SCNMLPA1\nLL            STDL.NETV.TME13.SEKGLNK1\nLL            STDL.NETV.TME13.SEKGMOD1\nLL            STDL.NETV.TME13.SEKGMOD2\nLL            STDL.NETV.TME13.SEZLLINK\nLL HXYZ400    STDL.NETVIEW.V24.CNMLINK\nLL            STDL.NETVIEW.V24.CNMLINK\nLL            STDL.NETVIEW.V24.NVULIB\nLL HXYZ400    STDL.NETVIEW.V24.SCNMLNK1\nLL            STDL.NETVIEW.V24.SCNMLNK1\nLL HXYZ400    STDL.NETVIEW.V24.SCNMLPA1\nLL            STDL.NETVIEW.V24.SCNMLPA1\nLL            STDL.NETVIEW.V24.SEKGLNK1\nLL            STDL.NETVIEW.V24.SEKGMOD1\nLL            STDL.NETVIEW.V24.SEKGMOD2\nLL            STDL.NTUNE.V25.SATFMOD1\nLL            STDL.OGL.V1R1M0.DZILINK\nLL            STDL.OLTEC.OLTELIB\nCL HBD6602    STDL.OS390.BDT.SBDTCLI0\nLL HBD6602 F  STDL.OS390.BDT.SBDTCMD\nHE HBD6602    STDL.OS390.BDT.SBDTHELP\nLL HBD6602 F  STDL.OS390.BDT.SBDTLIB\nLL HBD6602 F  STDL.OS390.BDT.SBDTLINK\nLL HBD6602 F  STDL.OS390.BDT.SBDTLPA\nMA HBD6602    STDL.OS390.BDT.SBDTMAC\nMS HBD6602    STDL.OS390.BDT.SBDTMSG\nPN HBD6602    STDL.OS390.BDT.SBDTPNL0\nSA HBD6602    STDL.OS390.BDT.SBDTSAMP\n   HQG1406    STDL.OS390.BOOKMSTR.EDFDOW1\nEX HQG1406    STDL.OS390.BOOKMSTR.EDFEXC1\n   HQG1406    STDL.OS390.BOOKMSTR.EDFF301\nJS HQG1406    STDL.OS390.BOOKMSTR.EDFJCL1\nMA HQG1406    STDL.OS390.BOOKMSTR.EDFMAC1\n   HQG1406    STDL.OS390.BOOKMSTR.EDFPFA1\n   HQG1406    STDL.OS390.BOOKMSTR.EDFPFB1\n   HQG1406    STDL.OS390.BOOKMSTR.EDFPSF1\nSA HQG1406    STDL.OS390.BOOKMSTR.EDFSAM1\n   HQG1406    STDL.OS390.BOOKMSTR.EDF38P1\n   HQG1406    STDL.OS390.BOOKMSTR.EDF3821\n   HQG1406    STDL.OS390.BOOKMSTR.EDF4251\nLL HTV4621    STDL.OS390.CBC.SCBCCMP\nLL            STDL.OS390.CBC.SCBCCMP\nDO HTV4621    STDL.OS390.CBC.SCBCDOC\nMS HTV4621    STDL.OS390.CBC.SCBCIMG\nJS HTV4621    STDL.OS390.CBC.SCBCJCL\nPN HTV4621    STDL.OS390.CBC.SCBCPNL\nPR HTV4621    STDL.OS390.CBC.SCBCPRC\nSA HTV4621    STDL.OS390.CBC.SCBCSAM\nSK HTV4621    STDL.OS390.CBC.SCBCSKL\nEX HTV4621    STDL.OS390.CBC.SCBCUTL\nOB HLB4601    STDL.OS390.CBC.SCLBCPP\nLL HLB4601    STDL.OS390.CBC.SCLBDLL\nSR HLB4601    STDL.OS390.CBC.SCLBH.C\nSR HLB4601    STDL.OS390.CBC.SCLBH.H\nSR HLB4601    STDL.OS390.CBC.SCLBH.HPP\nSR HLB4601    STDL.OS390.CBC.SCLBH.INL\nJS HLB4601    STDL.OS390.CBC.SCLBJCL\nOB HLB4601    STDL.OS390.CBC.SCLBOBC\nOB HLB4601    STDL.OS390.CBC.SCLBOXL\nSA HLB4601    STDL.OS390.CBC.SCLBSAM\nSA HLB4601    STDL.OS390.CBC.SCLBSAM.C\nSA HLB4601    STDL.OS390.CBC.SCLBSAM.H\nSR HLB4601    STDL.OS390.CBC.SCLBSID\nHE HLB4601    STDL.OS390.CBC.SCLBTUT\nHE HLB4601    STDL.OS390.CBC.SCLBTUT.H\nHE HLB4601    STDL.OS390.CBC.SCLBTUTD\n   HLB4601    STDL.OS390.CBC.SCLBXL.H\n   HLB4601    STDL.OS390.CBC.SCLBXL.HH\n   HLB4601    STDL.OS390.CBC.SCLBXL.IDL\n   HLB4601    STDL.OS390.CBC.SCLBXSM\n   HLB4601    STDL.OS390.CBC.SCLBXSM.IDL\n   HLC4631    STDL.OS390.CBC.SCLDBLD\n   HLC4631    STDL.OS390.CBC.SCLDH.C\n   HLC4631    STDL.OS390.CBC.SCLDH.CXX\n   HLC4631    STDL.OS390.CBC.SCLDH.H\n   HLC4631    STDL.OS390.CBC.SCLDH.HPP\n   HLC4631    STDL.OS390.CBC.SCLDH.INL\n   HLC4631    STDL.OS390.CBC.SCLDJCL\n   HLC4631    STDL.OS390.CBC.SCLDSRE\n   JXV4642    STDL.OS390.CBC.SDAADBM\nLL JXV4642 F  STDL.OS390.CBC.SDAADLL\n   JXV4642    STDL.OS390.CBC.SDAADOC\n   JXV4642    STDL.OS390.CBC.SDAAH.C\n   JXV4642    STDL.OS390.CBC.SDAAH.H\nJS JXV4642    STDL.OS390.CBC.SDAAJCL\nLL JXV4642 F  STDL.OS390.CBC.SDAALOD\nOB JXV4642    STDL.OS390.CBC.SDAAOBJ\nSA JXV4642    STDL.OS390.CBC.SDAASAM\nSA JXV4642    STDL.OS390.CBC.SDAASAM.H\n   JXV4642    STDL.OS390.CBC.SDAASID\nLL JXV4642 F  STDL.OS390.CBC.SDAASTUB\nLL            STDL.OS390.CDEBUG.SEQADUM\nLL HCKVB00 F  STDL.OS390.CDEBUG.SEQAMOD\nSA HCKVB00    STDL.OS390.CDEBUG.SEQASAMP\n   HMB3122    STDL.OS390.DCEBASE.SEUVACF\nEX HMB3122    STDL.OS390.DCEBASE.SEUVEXEC\n   HMB3122    STDL.OS390.DCEBASE.SEUVHDR\n   HMB3122    STDL.OS390.DCEBASE.SEUVIDL\n   HMB3122    STDL.OS390.DCEBASE.SEUVLIB\nMS HMB3122    STDL.OS390.DCEBASE.SEUVMSG\nPN HMB3122    STDL.OS390.DCEBASE.SEUVPNL\n   HMB3122    STDL.OS390.DCEBASE.SEUVPRC\nEX H0H2130    STDL.OS390.DCEDFS.SIOEEXEC\nLL H0H2130    STDL.OS390.DCEDFS.SIOELMOD\nMS H0H2130    STDL.OS390.DCEDFS.SIOEMSGE\nPN H0H2130    STDL.OS390.DCEDFS.SIOEPNLE\n   H0H2130    STDL.OS390.DCEDFS.SIOEPROC\nSA H0H2130    STDL.OS390.DCEDFS.SIOESAMP\nSR HSR1401    STDL.OS390.DCF.DCFASM\nLL HSR1401    STDL.OS390.DCF.DCFDIST\nSR HSR1401    STDL.OS390.DCF.DCFIMAGE\nLL HSR1401    STDL.OS390.DCF.DCFLOAD\nMA HSR1401    STDL.OS390.DCF.DCFMAC\nSA HSR1401    STDL.OS390.DCF.DCFSAMP\n   HSR1401    STDL.OS390.DCF.FONTPS\nMA HSR1401    STDL.OS390.DCF.MACLIB\n   HBKM300    STDL.OS390.EOY.SEOXFONT\n   HBKM300    STDL.OS390.EOY.SEOXIENU\n   HBKM300    STDL.OS390.EOY.SEOXOENU\n   HBKM300    STDL.OS390.EOY.SEOX1ENU\n   HBKM300    STDL.OS390.EOY.SEOX2ENU\n   HBKM300    STDL.OS390.EOY.SEOX3ENU\n   HBKM300    STDL.OS390.EOY.SEOX4ENU\n   HBKP300    STDL.OS390.EOY.SEOYBENU\n   HBKP300    STDL.OS390.EOY.SEOYCLIB\n   HBKP300    STDL.OS390.EOY.SEOYGENU\n   HBKP300    STDL.OS390.EOY.SEOYIENU\n   HBKP300    STDL.OS390.EOY.SEOYLENU\n   HBKP300    STDL.OS390.EOY.SEOYLEXS\nLL HBKP300    STDL.OS390.EOY.SEOYLOAD\nLL HBKP300    STDL.OS390.EOY.SEOYLPA\n   HBKP300    STDL.OS390.EOY.SEOYMENU\n   HBKP300    STDL.OS390.EOY.SEOYPENU\n   HBKP300    STDL.OS390.EOY.SEOYPROC\n   HBKP300    STDL.OS390.EOY.SEOYSAMP\n   HBKP300    STDL.OS390.EOY.SEOYSENU\n   HBKP300    STDL.OS390.EOY.SEOYTENU\n   HBKP300    STDL.OS390.EOY.SEOYXENU\n   HEZ6603    STDL.OS390.EZAPP.SEZMBASE\n   HEZ6603    STDL.OS390.EZAPP.SEZMBENU\n   HEZ6603    STDL.OS390.EZAPP.SEZMCLST\n   HEZ6603    STDL.OS390.EZAPP.SEZMDB2\n   HEZ6603    STDL.OS390.EZAPP.SEZMHM\n   HEZ6603    STDL.OS390.EZAPP.SEZMIPDB\n   HEZ6603    STDL.OS390.EZAPP.SEZMIPLP\n   HEZ6603    STDL.OS390.EZAPP.SEZMJOBS\nLL HEZ6603    STDL.OS390.EZAPP.SEZMLNK1\n   HEZ6603    STDL.OS390.EZAPP.SEZMNPRM\n   HEZ6603    STDL.OS390.EZAPP.SEZMPAN\n   HEZ6603    STDL.OS390.EZAPP.SEZMPARM\n   HEZ6603    STDL.OS390.EZAPP.SEZMPROC\n   HEZ6603    STDL.OS390.EZAPP.SEZMREXX\n   HEZ6603    STDL.OS390.EZAPP.SEZMSORC\n   HEZ6603    STDL.OS390.EZAPP.SEZMTCP\n   HEZ6603    STDL.OS390.EZAPP.SEZMVLST\n   HEZ6603    STDL.OS390.EZAPP.SEZMVSAM\n   HEZ6603    STDL.OS390.EZAPP.SEZMWLMP\n   HMQ4120    STDL.OS390.HLASM.SASMBOK2\n   HMQ4120    STDL.OS390.HLASM.SASMMAC1\n   HMQ4120    STDL.OS390.HLASM.SASMMAC2\nLL HMQ4120    STDL.OS390.HLASM.SASMMOD1\nLL HMQ4120 F  STDL.OS390.HLASM.SASMMOD2\n   HMQ4120    STDL.OS390.HLASM.SASMSAM1\n   HMQ4120    STDL.OS390.HLASM.SASMSAM2\n   HMQ4120    STDL.OS390.HLASM.SASMSHF2\nLL HIMW200    STDL.OS390.ICSS.SIMWMOD1\n   HIMW200    STDL.OS390.ICSS.SIMWSAM1\n   HMOS100    STDL.OS390.IPPWAY.SANFEXEC\nLL HMOS100 F  STDL.OS390.IPPWAY.SANFLOAD\n   HMOS100    STDL.OS390.IPPWAY.SANFMAC\n   HMOS100    STDL.OS390.IPPWAY.SANFMLIB\n   HMOS100    STDL.OS390.IPPWAY.SANFPLIB\n   HMOS100    STDL.OS390.IPPWAY.SANFPROC\n   HMOS100    STDL.OS390.IPPWAY.SANFSAMP\n   HQX1700    STDL.OS390.ISF.SISFEXEC\n   HQX1700    STDL.OS390.ISF.SISFJCL\nLL HQX1700    STDL.OS390.ISF.SISFLINK\nLL HQX1700    STDL.OS390.ISF.SISFLOAD\nLL HQX1700    STDL.OS390.ISF.SISFLPA\n   HQX1700    STDL.OS390.ISF.SISFMLIB\n   HQX1700    STDL.OS390.ISF.SISFPLIB\n   HQX1700    STDL.OS390.ISF.SISFSLIB\n   HQX1700    STDL.OS390.ISF.SISFSRC\n   HQX1700    STDL.OS390.ISF.SISFTLIB\nLL HMR6160    STDL.OS390.LANRES.SEWXAUTH\n   HMR6160    STDL.OS390.LANRES.SEWXEXEC\n   HMR6160    STDL.OS390.LANRES.SEWXFONT\n   HMR6160    STDL.OS390.LANRES.SEWXHLTR\n   HMR6160    STDL.OS390.LANRES.SEWXINDX\nLL HMR6160 F  STDL.OS390.LANRES.SEWXLMOD\n   HMR6160    STDL.OS390.LANRES.SEWXMLBJ\n   HMR6160    STDL.OS390.LANRES.SEWXMLIB\n   HMR6160    STDL.OS390.LANRES.SEWXMSGJ\n   HMR6160    STDL.OS390.LANRES.SEWXMSGS\n   HMR6160    STDL.OS390.LANRES.SEWXNLMS\n   HMR6160    STDL.OS390.LANRES.SEWXPLBJ\n   HMR6160    STDL.OS390.LANRES.SEWXPLIB\n   HMR6160    STDL.OS390.LANRES.SEWXSAMP\n   HMR6160    STDL.OS390.LANRES.SEWXSLIB\n   HMR6160    STDL.OS390.LANRES.SEWXSRVC\n   HMR6160    STDL.OS390.LANRES.SEWXTLIB\n   HQW7300    STDL.OS390.LANSRVR.SBFSCNFG\n   HQW7300    STDL.OS390.LANSRVR.SBFSCSRC\n   HQW7300    STDL.OS390.LANSRVR.SBFSDBTB\n   HQW7300    STDL.OS390.LANSRVR.SBFSEXEC\nLL HQW7300    STDL.OS390.LANSRVR.SBFSLMOD\n   HQW7300    STDL.OS390.LANSRVR.SBFSMSGS\n   HQW7300    STDL.OS390.LANSRVR.SBFSOBIN\n   HQW7300    STDL.OS390.LANSRVR.SBFSPLIB\n   HQW7300    STDL.OS390.LANSRVR.SBFSPROC\n   HQW7300    STDL.OS390.LANSRVR.SBFSRBIN\n   HQW7300    STDL.OS390.LANSRVR.SBFSSAMP\n   HQW7300    STDL.OS390.LANSRVR.SBFSTLIB\n   HQW7300    STDL.OS390.LANSRVR.SBFSTTBL\nLL HMWL710 F  STDL.OS390.LE.SAFHFORT\nRL HMWL710    STDL.OS390.LE.SCEECICS\n   HMWL710    STDL.OS390.LE.SCEECLST\n   HMWL710    STDL.OS390.LE.SCEECMAP\n   HMWL710    STDL.OS390.LE.SCEECPP\n   HMWL710    STDL.OS390.LE.SCEEGXLT\n   HMWL710    STDL.OS390.LE.SCEEH.ARPA.H\n   HMWL710    STDL.OS390.LE.SCEEH.H\n   HMWL710    STDL.OS390.LE.SCEEH.NET.H\n   HMWL710    STDL.OS390.LE.SCEEH.NETINET.H\n   HMWL710    STDL.OS390.LE.SCEEH.SYS.H\nLO HMWL710    STDL.OS390.LE.SCEELKED\n   HMWL710    STDL.OS390.LE.SCEELOCL\n   HMWL710    STDL.OS390.LE.SCEELOCX\n   HMWL710    STDL.OS390.LE.SCEEMAC\n   HMWL710    STDL.OS390.LE.SCEEMSGP\n   HMWL710    STDL.OS390.LE.SCEEOBJ\n   HMWL710    STDL.OS390.LE.SCEEPROC\nLL HMWL710 P  STDL.OS390.LE.SCEERUN\n   HMWL710    STDL.OS390.LE.SCEESAMP\nLL HMWL710 P  STDL.OS390.LE.SCEESPC\n   HMWL710    STDL.OS390.LE.SCEESPCO\n   HMWL710    STDL.OS390.LE.SCEEUCS2.UCMAP\n   HMWL710    STDL.OS390.LE.SCEEUCS2.UCONVTBL\nLL HMWL710 P  STDL.OS390.LE.SIBMCALL\nLL HMWL710 P  STDL.OS390.LE.SIBMMATH\nLL HMWL710 P  STDL.OS390.LE.SIBMTASK\n   HPRF226    STDL.OS390.NETSPL.SAPIINST\n   HPRF226    STDL.OS390.NETSPL.SAPIMAC1\nLL HPRF226 F  STDL.OS390.NETSPL.SAPIMOD1\n   HPRF226    STDL.OS390.NETSPL.SAPISAMP\nLL HDZ11SM    STDL.OS390.NFS.NFSLIB\n   HDZ11SM    STDL.OS390.NFS.NFSMAC\n   HDZ11SM    STDL.OS390.NFS.NFSSAMP\n   HDZ11SM    STDL.OS390.NFS.NFSTARB\n   JTCP327    STDL.OS390.OEAPPSRV.SFOMDATA\n   JTCP327    STDL.OS390.OEAPPSRV.SFOMHDRS\n   JTCP327    STDL.OS390.OEAPPSRV.SFOMOBJ\n   H0GI200    STDL.OS390.OSASF.SIOACONF\n   H0GI200    STDL.OS390.OSASF.SIOADIMG\n   H0GI200    STDL.OS390.OSASF.SIOAIBIN\nLL H0GI200    STDL.OS390.OSASF.SIOALMOD\nLL H0GI200 F  STDL.OS390.OSASF.SIOAMMOD\n   H0GI200    STDL.OS390.OSASF.SIOAMSGS\n   H0GI200    STDL.OS390.OSASF.SIOANLMS\n   H0GI200    STDL.OS390.OSASF.SIOASAMP\n   H0GI200    STDL.OS390.OSASF.SIOAWEUI\n   HPRF220    STDL.OS390.PSF.FDEFLIB\n   HPRF220    STDL.OS390.PSF.FONTLIB\n   HPRF220    STDL.OS390.PSF.FONTLIBB\n   HPRF220    STDL.OS390.PSF.FONTOLN\n   HPRF220    STDL.OS390.PSF.FONTSAMP\n   HPRF220    STDL.OS390.PSF.FONT300\n   HPRF220    STDL.OS390.PSF.OVERLIB\n   HPRF220    STDL.OS390.PSF.PDEFLIB\n   HPRF220    STDL.OS390.PSF.PSEGLIB\nLL HQN2110 F  STDL.OS390.PSFACIF.SAPKMOD1\n   HQN2110    STDL.OS390.PSFACIF.SAPKSAM1\n   HQN2110    STDL.OS390.PSFACIF.SAPKSAM2\n   HQN2110    STDL.OS390.PSFACIF.SAPKSAM3\n   HQN2110    STDL.OS390.PSFACIF.SAPKULIB\nLL HQN2112 F  STDL.OS390.PSFAPI.SAPQMOD1\nLL HQN2112 F  STDL.OS390.PSFAPI.SAPQMOD2\n   HQN2112    STDL.OS390.PSFAPI.SAPQSAM1\n   HQN2112    STDL.OS390.PSFAPI.SAPQULIB\n   HRF2230    STDL.OS390.RACF.HRFCLST\n   HRF2230    STDL.OS390.RACF.HRFMSG\n   HRF2230    STDL.OS390.RACF.HRFPANL\n   HRF2230    STDL.OS390.RACF.HRFSKEL\n   HRM6603    STDL.OS390.RMF.SCPMPWS\n   HRM6603    STDL.OS390.RMF.SERBCLS\n   HRM6603    STDL.OS390.RMF.SERBMENU\n   HRM6603    STDL.OS390.RMF.SERBPENU\n   HRM6603    STDL.OS390.RMF.SERBPWS\n   HRM6603    STDL.OS390.RMF.SERBT\n   HRM6603    STDL.OS390.RMF.SERBTENU\n   HDZ11C0    STDL.OS390.R3.CBRDBRM\nLL HDZ11C0 F  STDL.OS390.R3.CIPLIB\nLL HTE25D2    STDL.OS390.R3.CMDLIB\nLL HBB6603    STDL.OS390.R3.CSSLIB\n   HDZ11C0    STDL.OS390.R3.DBBLIB\nLL HDZ11C0 F  STDL.OS390.R3.DFQLLIB\n   HDZ11C0    STDL.OS390.R3.DFQMLIB\n   HDZ11C0    STDL.OS390.R3.DFQPLIB\n   HDZ11C0    STDL.OS390.R3.DGTCLIB\nLL HDZ11C0    STDL.OS390.R3.DGTLLIB\n   HDZ11C0    STDL.OS390.R3.DGTMLIB\n   HDZ11C0    STDL.OS390.R3.DGTPLIB\n   HDZ11C0    STDL.OS390.R3.DGTSLIB\n   HDZ11C0    STDL.OS390.R3.DGTTLIB\n   HBB6603    STDL.OS390.R3.DOCLIB\nHE HTE25D2    STDL.OS390.R3.HELP\n   JTE25D0    STDL.OS390.R3.HELPENP\n   JTE25D0    STDL.OS390.R3.ICQABTXT\n   JTE25D0    STDL.OS390.R3.ICQCCLIB\n   JTE25D0    STDL.OS390.R3.ICQILIB\n   JTE25D0    STDL.OS390.R3.ICQMLIB\n   JTE25D0    STDL.OS390.R3.ICQPLIB\n   JTE25D0    STDL.OS390.R3.ICQSLIB\n   JTE25D0    STDL.OS390.R3.ICQTABLS\n   HDZ11C0    STDL.OS390.R3.IGDVBS1\nLO HDZ11C0  N STDL.OS390.R3.IMAGELIB\nLL HDZ11C0 F  STDL.OS390.R3.ISAMLPA\nLL OS390R3    STDL.OS390.R3.LINKLIB\nLL OS390R3    STDL.OS390.R3.LPALIB\nMA OS390R3    STDL.OS390.R3.MACLIB\nLL OS390R3    STDL.OS390.R3.MIGLIB\nMA OS390R3    STDL.OS390.R3.MODGEN\n   JTE25D0    STDL.OS390.R3.MSGENP\n   JTE25D0    STDL.OS390.R3.MSGENU\nLL OS390R3    STDL.OS390.R3.NUCLEUS\nPA OS390R3    STDL.OS390.R3.PARMLIB\n   OS390R3    STDL.OS390.R3.PGMDIR\n   OS390R3    STDL.OS390.R3.PPOPTION\n   OS390R3    STDL.OS390.R3.PROCLIB\n   OS390R3    STDL.OS390.R3.RIMLIB\nSA HDZ11C0    STDL.OS390.R3.SACBCNTL\n   HGD3200    STDL.OS390.R3.SADMCDA\n   HGD3200    STDL.OS390.R3.SADMCFO\n   HGD3200    STDL.OS390.R3.SADMDAT\n   HGD3200    STDL.OS390.R3.SADMGDF\n   HGD3200    STDL.OS390.R3.SADMIMG\n   HGD3200    STDL.OS390.R3.SADMMAP\nLL HGD3200    STDL.OS390.R3.SADMMOD\n   HGD3200    STDL.OS390.R3.SADMMSG\n   HGD3200    STDL.OS390.R3.SADMOPS\n   HGD3200    STDL.OS390.R3.SADMPCF\n   HGD3200    STDL.OS390.R3.SADMPNL\n   HGD3200    STDL.OS390.R3.SADMSAM\n   HGD3200    STDL.OS390.R3.SADMSYM\n   HDZ11C0    STDL.OS390.R3.SADRYLIB\nSA OS390R3    STDL.OS390.R3.SAMPLIB\n   HVT4401    STDL.OS390.R3.SAPPDAT2\n   HVT4401    STDL.OS390.R3.SAPPDAT4\nLL HVT4401 F  STDL.OS390.R3.SAPPMOD1\n   HVT4401    STDL.OS390.R3.SAPPSAMP\nCL HBB6603    STDL.OS390.R3.SBLSCLI0\nSK HBB6603    STDL.OS390.R3.SBLSKEL0\nMS HBB6603    STDL.OS390.R3.SBLSMSG0\nPN HBB6603    STDL.OS390.R3.SBLSPNL0\nTB HBB6603    STDL.OS390.R3.SBLSTBL0\n   HBB6603    STDL.OS390.R3.SBPXEXEC\nMS HBB6603    STDL.OS390.R3.SBPXMENU\nPN HBB6603    STDL.OS390.R3.SBPXPENU\nTB HBB6603    STDL.OS390.R3.SBPXTENU\nCL HCS6031    STDL.OS390.R3.SCBDCLST\nLL HCS6031 F  STDL.OS390.R3.SCBDHENU\nMS HCS6031    STDL.OS390.R3.SCBDMENU\nPN HCS6031    STDL.OS390.R3.SCBDPENU\n   HCS6031    STDL.OS390.R3.SCBDTEMP\nTB HCS6031    STDL.OS390.R3.SCBDTENU\n   HDZ11C0    STDL.OS390.R3.SCDRTABL\n   JDZ11CB    STDL.OS390.R3.SDFQPSRC\n   JDZ11CB    STDL.OS390.R3.SDGTPSRC\n   JDZ11CB    STDL.OS390.R3.SDGTTSRC\nLL HDZ11C0 F  STDL.OS390.R3.SDMSSVM\nLL HDZ11C0 F  STDL.OS390.R3.SDMSSVMS\n   JDZ11CB    STDL.OS390.R3.SEDGEXE1\nHE JDZ11CB    STDL.OS390.R3.SEDGHLP1\nMS JDZ11CB    STDL.OS390.R3.SEDGMENU\nPN JDZ11CB    STDL.OS390.R3.SEDGPENU\n   JDZ11CB    STDL.OS390.R3.SEDGPSRC\nSK JDZ11CB    STDL.OS390.R3.SEDGSKL1\nTB JDZ11CB    STDL.OS390.R3.SEDGTBL1\n   JDZ11CB    STDL.OS390.R3.SEDGTSRC\n   HFST101    STDL.OS390.R3.SEPWBENU\n   HFST101    STDL.OS390.R3.SEPWCENU\n   HFST101    STDL.OS390.R3.SEPWMAC1\nLL HFST101    STDL.OS390.R3.SEPWMOD1\nLL HFST101    STDL.OS390.R3.SEPWMOD2\nLL HFST101 F  STDL.OS390.R3.SEPWMOD3\nLL HFST101 F  STDL.OS390.R3.SEPWMOD4\n   HFST101    STDL.OS390.R3.SEPWPENU\n   HFST101    STDL.OS390.R3.SEPWSRC1\n   HFST101    STDL.OS390.R3.SEPWSRC2\nMA HTCP320    STDL.OS390.R3.SEZACMAC\nLL HJE6603 F  STDL.OS390.R3.SHASLINK\n   HJE6603    STDL.OS390.R3.SHASMAC\n   HJE6603    STDL.OS390.R3.SHASMENU\nLL HJE6603 F  STDL.OS390.R3.SHASMIG\n   HJE6603    STDL.OS390.R3.SHASPARM\n   HJE6603    STDL.OS390.R3.SHASPNL0\n   HJE6603    STDL.OS390.R3.SHASSAMP\n   HJE6603    STDL.OS390.R3.SHASSRC\nLL HBB6603    STDL.OS390.R3.SIFALIB\n   HIF4402    STDL.OS390.R3.SISPALIB\n   HIF4402    STDL.OS390.R3.SISPCLIB\n   HIF4402    STDL.OS390.R3.SISPEXEC\n   HIF4402    STDL.OS390.R3.SISPGENU\n   HIF4402    STDL.OS390.R3.SISPGMLI\n   HIF4402    STDL.OS390.R3.SISPGUI\n   HIF4402    STDL.OS390.R3.SISPHELP\nLL HIF4402    STDL.OS390.R3.SISPLOAD\nLL HIF4402    STDL.OS390.R3.SISPLPA\n   HIF4402    STDL.OS390.R3.SISPMACS\n   HIF4402    STDL.OS390.R3.SISPMENU\n   HIF4402    STDL.OS390.R3.SISPPENU\n   HIF4402    STDL.OS390.R3.SISPSAMP\nLL HIF4402    STDL.OS390.R3.SISPSASC\n   HIF4402    STDL.OS390.R3.SISPSENU\n   HIF4402    STDL.OS390.R3.SISPSLIB\n   HIF4402    STDL.OS390.R3.SISPTENU\n   HVT4401    STDL.OS390.R3.SISTASGD\n   HVT4401    STDL.OS390.R3.SISTASN1\nLL HVT4401    STDL.OS390.R3.SISTCLIB\n   HVT4401    STDL.OS390.R3.SISTCLI0\n   HVT4401    STDL.OS390.R3.SISTCLS1\n   HVT4401    STDL.OS390.R3.SISTCMIP\n   HVT4401    STDL.OS390.R3.SISTDAT1\n   HVT4401    STDL.OS390.R3.SISTDAT2\n   HVT4401    STDL.OS390.R3.SISTDAT3\nLL HVT4401 F  STDL.OS390.R3.SISTDBUG\n   HVT4401    STDL.OS390.R3.SISTGDMO\nLL HVT4401 F  STDL.OS390.R3.SISTLMD1\n   HVT4401    STDL.OS390.R3.SISTMAC1\n   HVT4401    STDL.OS390.R3.SISTMAC2\n   HVT4401    STDL.OS390.R3.SISTMSG0\n   HVT4401    STDL.OS390.R3.SISTPNL0\n   HVT4401    STDL.OS390.R3.SISTPNL1\nLL OS390R3  N STDL.OS390.R3.SVCLIB\nLL EBT1102 F  STDL.OS390.R3.TELCMLIB\n   HTE25D2    STDL.OS390.R3.UADS\nLL HVT4401    STDL.OS390.R3.VTAMLIB\n   HVT4401    STDL.OS390.R3.VTAMLST\n   HMP1A00    STDL.OS390.SMPE.SGIMCLS0\nLL HMP1A00    STDL.OS390.SMPE.SGIMLMD0\n   HMP1A00    STDL.OS390.SMPE.SGIMMENU\n   HMP1A00    STDL.OS390.SMPE.SGIMPENU\n   HMP1A00    STDL.OS390.SMPE.SGIMSENU\n   HMP1A00    STDL.OS390.SMPE.SGIMTENU\n   H08K310    STDL.OS390.SOMMVS.SGOSEFW\n   H08K310    STDL.OS390.SOMMVS.SGOSEXEC\n   H08K310    STDL.OS390.SOMMVS.SGOSH.H\n   H08K310    STDL.OS390.SOMMVS.SGOSHH.HH\n   H08K310    STDL.OS390.SOMMVS.SGOSIDL.IDL\n   H08K310    STDL.OS390.SOMMVS.SGOSIMP\n   H08K310    STDL.OS390.SOMMVS.SGOSIR\n   H08K310    STDL.OS390.SOMMVS.SGOSIRSM\n   H08K310    STDL.OS390.SOMMVS.SGOSJCL\nLL H08K310 F  STDL.OS390.SOMMVS.SGOSLDA\nLL H08K310 F  STDL.OS390.SOMMVS.SGOSLNKL\nLL H08K310 F  STDL.OS390.SOMMVS.SGOSLOAD\n   H08K310    STDL.OS390.SOMMVS.SGOSMISC\n   H08K310    STDL.OS390.SOMMVS.SGOSMSGS\n   H08K310    STDL.OS390.SOMMVS.SGOSPNLS\n   H08K310    STDL.OS390.SOMMVS.SGOSPROF\n   H08K310    STDL.OS390.SOMMVS.SGOSREXX\n   H08K310    STDL.OS390.SOMMVS.SGOSSH.STARS.H\n   H08K310    STDL.OS390.SOMMVS.SGOSSKEL\n   H08K310    STDL.OS390.SOMMVS.SGOSSMPC.C\n   H08K310    STDL.OS390.SOMMVS.SGOSSMPD.DAT\n   H08K310    STDL.OS390.SOMMVS.SGOSSMPH.H\n   H08K310    STDL.OS390.SOMMVS.SGOSSMPI.IDL\n   H08K310    STDL.OS390.SOMMVS.SGOSSMPP\n   H08K310    STDL.OS390.SOMMVS.SGOSSMPX.CXX\n   H08K310    STDL.OS390.SOMMVS.SGOSSSIR\n   H08K310    STDL.OS390.SOMMVS.SGOSXH.XH\n   H08K310    STDL.OS390.SOMMVS.SGOTDB2B\n   H08K310    STDL.OS390.SOMMVS.SGOTIMP\n   H08K310    STDL.OS390.SOMMVS.SGOTINI\n   H08K310    STDL.OS390.SOMMVS.SGOTJCL\nLL H08K310    STDL.OS390.SOMMVS.SGOTLOAD\n   H08K310    STDL.OS390.SOMMVS.SGOTPDL.IDL\n   H08K310    STDL.OS390.SOMMVS.SGOTPH.H\n   H08K310    STDL.OS390.SOMMVS.SGOTPXH.XH\n   H08K310    STDL.OS390.SOMMVS.SGOTSCXX.CXX\n   H08K310    STDL.OS390.SOMMVS.SGOTSINI\n   H08K310    STDL.OS390.SOMMVS.SGOTSMIH.IH\n   H08K310    STDL.OS390.SOMMVS.SGOTSMPC.C\n   H08K310    STDL.OS390.SOMMVS.SGOTSMPH.H\n   H08K310    STDL.OS390.SOMMVS.SGOTSMPI.IDL\n   H08K310    STDL.OS390.SOMMVS.SGOTSMXH.XH\n   H08K310    STDL.OS390.SOMMVS.SGOTSXIH.XIH\n   HSLW110    STDL.OS390.SYSVIEW.SEFMCLST\n   HSLW110    STDL.OS390.SYSVIEW.SEFMCMDS\nLL HSLW110 F  STDL.OS390.SYSVIEW.SEFMLINK\n   HSLW110    STDL.OS390.SYSVIEW.SEFMPENU\n   HSLW110    STDL.OS390.SYSVIEW.SEFMPRMS\n   HSLW110    STDL.OS390.SYSVIEW.SEFMPS21\n   HSLW110    STDL.OS390.SYSVIEW.SEFMPUBS\n   HSLW110    STDL.OS390.SYSVIEW.SEFMSAMP\n   HSLW110    STDL.OS390.SYSVIEW.SEFMSHF\nLL HTCP320    STDL.OS390.TCPIP.SEDCBASE\nLL HTCP320    STDL.OS390.TCPIP.SEDCSPC\nLL HTCP320 F  STDL.OS390.TCPIP.SEZACMTX\n   HTCP320    STDL.OS390.TCPIP.SEZADBCX\n   HTCP320    STDL.OS390.TCPIP.SEZADBRM\nLL HTCP320 F  STDL.OS390.TCPIP.SEZADPIL\nLL HTCP320 F  STDL.OS390.TCPIP.SEZADSIL\n   HTCP320    STDL.OS390.TCPIP.SEZADSIM\n   HTCP320    STDL.OS390.TCPIP.SEZADSIP\n   HTCP320    STDL.OS390.TCPIP.SEZAHELP\n   HTCP320    STDL.OS390.TCPIP.SEZAINST\nLL HTCP320 F  STDL.OS390.TCPIP.SEZALIBN\nLL HTCP320    STDL.OS390.TCPIP.SEZALINK\nLL HTCP320    STDL.OS390.TCPIP.SEZALNK2\nLL HTCP320    STDL.OS390.TCPIP.SEZALPA\n   HTCP320    STDL.OS390.TCPIP.SEZAMENU\nLL HTCP320 F  STDL.OS390.TCPIP.SEZAMIG\n   HTCP320    STDL.OS390.TCPIP.SEZANCLS\n   HTCP320    STDL.OS390.TCPIP.SEZANPNL\nLL HTCP320 F  STDL.OS390.TCPIP.SEZAOLDX\n   HTCP320    STDL.OS390.TCPIP.SEZAPENU\n   HTCP320    STDL.OS390.TCPIP.SEZARNT1\n   HTCP320    STDL.OS390.TCPIP.SEZARNT2\n   HTCP320    STDL.OS390.TCPIP.SEZARNT3\n   HTCP320    STDL.OS390.TCPIP.SEZARNT4\n   HTCP320    STDL.OS390.TCPIP.SEZAROE1\n   HTCP320    STDL.OS390.TCPIP.SEZAROE2\n   HTCP320    STDL.OS390.TCPIP.SEZAROE3\nLL HTCP320 F  STDL.OS390.TCPIP.SEZARPCL\nLL HTCP320    STDL.OS390.TCPIP.SEZATCP\n   HTCP320    STDL.OS390.TCPIP.SEZATCPX\n   HTCP320    STDL.OS390.TCPIP.SEZATELX\nLL HTCP320 F  STDL.OS390.TCPIP.SEZAXAWL\n   HTCP320    STDL.OS390.TCPIP.SEZAXLD1\n   HTCP320    STDL.OS390.TCPIP.SEZAXLD2\nLL HTCP320 F  STDL.OS390.TCPIP.SEZAXMLB\nLL HTCP320 F  STDL.OS390.TCPIP.SEZAXTLB\nLL HTCP320 F  STDL.OS390.TCPIP.SEZAX11L\nLL HTCP320    STDL.OS390.TCPIP.SIBMBASE\n   H0GG121    STDL.OS390.VLIFT.SIESINST\nLL            STDL.PANAUDIT.LOADLIB\nLL            STDL.PCF.LOAD\nLL            STDL.PCFTP.R1.LOADLIB\nLL            STDL.PCM412.LOADLIB\nLL            STDL.PCM422.LOADLIB\nLL            STDL.PCM510.LOADLIB\nLL            STDL.PCM520.LOADLIB\nLL            STDL.PDF.V35.ISRLOAD\nLL            STDL.PDF.V35.ISRLPA\nLL            STDL.PLI.V23.PLIBASE\nLL            STDL.PLI.V23.PLICMD\nLL            STDL.PLI.V23.PLICOMP\nLL            STDL.PLI.V23.PLILINK\nLL            STDL.PLI.V23.PLITASK\nLL            STDL.PLI.V23.SIBMBASE\nLL            STDL.PLI.V23.SIBMLINK\nLL            STDL.PM2.LINKLIB\nLL            STDL.POST.LINKLIB\nLL            STDL.PPFA.LINKLIB\nLL            STDL.PSF.V22.ACIF.SAPKMOD1\nLL            STDL.PSF.V22.AFP.SAPQMOD1\nLL            STDL.PSF.V22.AFP.SAPQMOD2\nLL            STDL.PSF.V22.LINKLIB\nLL            STDL.PSF.V22.NUCLEUS\nLL            STDL.RACF.DELEXITS\nLL            STDL.RACF.R220.PTF.LINKLIB\nLL            STDL.RACF.R220.PTF.LPALIB\nLL            STDL.RACF.TEACO.LINKLIB\nLL            STDL.REMOP30.LOAD\nLL            STDL.SAS608.LIBRARY\nLL            STDL.SAS608.TS430.LIBRARY\nLL            STDL.SAS609.LIBRARY\nLL            STDL.SAS8.LIBRARY\nLL            STDL.SAS8.SASC.TRANSLIB\nLL            STDL.SIM2KR21.DIFLOAD\nLL            STDL.SIM2KR21.PTLLOAD\nLL            STDL.SMPE.IMST200.SMPLTS\nLL            STDL.SMPE.R81.LINKLIB\nLL            STDL.SMPE.R81.SGIMLMD0\nLL            STDL.SRVY2000.LOADLIB\nLL            STDL.SSP.V47.LINKLIB\nLL            STDL.SSP.V47.NUCLEUS\nLL            STDL.SSP.V47.SSPLIB\nLL            STDL.SSP.V47.SSPOBJ\nLL            STDL.SYNCSORT.R36B.LINKLIB\nLL            STDL.SYNCSORT.R36B.LPALIB\nLL            STDL.SYNCSORT.R36B.SYNCAUTH\nLL            STDL.SYNCSORT.R36B.SYNCLIB\nLL            STDL.SYNCSORT.R37A.LINKLIB\nLL            STDL.SYNCSORT.R37A.LPALIB\nLL            STDL.SYNCSORT.R37A.SYNCAUTH\nLL            STDL.SYNCSORT.R37A.SYNCLIB\nLL            STDL.SYNCSORT.R37A.SYNCRENT\nLL            STDL.SYNCSORT.R37A.SYNCTAPE\nLL            STDL.TMV81911.DSTAPF\nLL            STDL.TR2K.LOADLIB2\nLL            STDL.TR2K.LOADLIB3\nLL            STDL.TSOE25.CMDLIB\nLL            STDL.TSOE25.LINKLIB\nLL            STDL.TSOE25.LPALIB\nLL            STDL.VIASFT.P45.LOADLIB\nLL            STDL.VIASFT.P45.TLABLOAD\nLL            STDL.VIASFT.R45.LOADLIB\nLL            STDL.VIASFT.R45.TLABLOAD\nLL            STDL.VPS.R10.LOAD\nLL            STDL.VPS.R62B.CICS.LOAD\nLL            STDL.VPS.R62B.LINKLIB\nLL            STDL.VPS.R62B.LOAD\nLL            STDL.VPS.R62B.LPALIB\nLL            STDL.VPS.R62B.RPLLIB\nLL            STDL.VPS.R62B.TSO.LOAD\nLL            STDL.VPS.R70.LOAD\nLL            STDL.VPS.VMCF.R70.LOAD\nLL            STDL.VPS.VPSPRINT.R61.LOAD\nLL            STDL.VPS.VSV.R70.LOAD\nLL            STDL.VSAMUTIL.V24.LOADLIB\nLL            STDL.VSUM.R33.LOADLIB\nLL            STDL.VSUM.R40.LOADLIB\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WINVPRD1": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x98\\x18\\x7f\\x01\\x00\\x15\\x1f\\x173\\x00\\n\\x00\\x05\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-07-06T00:00:00", "modifydate": "2000-05-30T17:33:00", "lines": 10, "newlines": 5, "modlines": 0, "user": "WSBG"}, "text": "/* ----------------------------------------------------------------- */\n/*    To generate report for specific product add an if statement.   */\n/*  IF FMID = 'ADCS520';                                             */\n/* ----------------------------------------------------------------- */\n    IF FMID = 'ADCS520';\n    IF FMID = 'HCI4100';\n    IF FMID = 'HBB6603';\n    IF FMID = 'HBD6602';\n    IF FMID = 'HSR1401';\n    IF FMID = 'OS390R3';\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "WINVPRD2": {"ttr": 3335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x98\\x18\\x7f\\x01\\x00\\x15\\x1f\\x174\\x00\\n\\x00\\x05\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1998-07-06T00:00:00", "modifydate": "2000-05-30T17:34:00", "lines": 10, "newlines": 5, "modlines": 0, "user": "WSBG"}, "text": "/* ----------------------------------------------------------------- */\n/*    To generate report for specific product add an if statement.   */\n/*  IF FMID = 'ADCS520';                                             */\n/* ----------------------------------------------------------------- */\n    IF FMID = 'ADCS520';\n    IF FMID = 'HCI4100';\n    IF FMID = 'HBB6603';\n    IF FMID = 'HBD6602';\n    IF FMID = 'HSR1401';\n    IF FMID = 'OS390R3';\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "WVOLALL1": {"ttr": 3337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05\\x00\\x00\\x00\\x89'_\\x00\\x97\\x14\\x9f\\x10A\\x00\\x0b\\x00\\x07\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.05", "flags": 0, "createdate": "1989-10-02T00:00:00", "modifydate": "1997-05-29T10:41:00", "lines": 11, "newlines": 7, "modlines": 0, "user": "WSBG"}, "text": "//WVOLALL1 PROC STG1DS=,\n//             STG1VOL=\n//ALLC0010 EXEC PGM=IEFBR14\n//COMPPDS  DD  DSN=&STG1DS,DISP=(,CATLG),UNIT=SYSDA,VOL=SER=&STG1VOL,\n//         SPACE=(23476,(100,10,46),,,ROUND),\n//         DCB=(DSORG=PO,RECFM=VB,LRECL=264,BLKSIZE=23476)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(20)),DISP=(,PASS)\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(20)),DISP=(,PASS)\n//STG1WK   DD  DSN=&&STG1WK,DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(23476,(100,10,46),,,ROUND),\n//         DCB=(DSORG=PO,RECFM=VB,LRECL=264,BLKSIZE=23476)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLALL2": {"ttr": 3339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x00\\x00\\x89'_\\x00\\x97\\x14\\x9f\\x10A\\x00\\x08\\x00\\x08\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1989-10-02T00:00:00", "modifydate": "1997-05-29T10:41:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "WSBG"}, "text": "//WVOLALL2 PROC STG2DS=,\n//          STG2VOL=\n//ALLC0010 EXEC PGM=IEFBR14\n//COMPPDS  DD   DSN=&STG2DS,DISP=(,CATLG),UNIT=SYSDA,VOL=SER=&STG2VOL,\n//         SPACE=(CYL,(12,10,46),,,ROUND),\n//         DCB=(DSORG=PO,RECFM=VB,LRECL=264,BLKSIZE=23476)\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(20)),DISP=(,PASS)\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(20)),DISP=(,PASS)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLCOLL": {"ttr": 3341, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x894/\\x01\\x01\\x04?\\x16A\\x02*\\x02*\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1989-12-08T00:00:00", "modifydate": "2001-02-12T16:41:00", "lines": 554, "newlines": 554, "modlines": 0, "user": "WSBG"}, "text": "//WSBGWVOL JOB  ,GROUT,MSGCLASS=X,NOTIFY=WSBG\n//S1       EXEC  ASMACL MAC='STDL.MVS.AMODGEN'\n//ASM.SYSIN  DD  *\n         TITLE 'WVOLCOLL - COLLECT VTOC DSCBS'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*    WRITTEN BY JOHN R. GROUT (EARLIER VERSION BY CHRIS MARTEN)       *\n*                                                                     *\n*    MODULE:   WVOLCOLL                                               *\n*                                                                     *\n*    FUNCTION: WVOLCOLL READS IN FORMAT-1 DSCBS FROM A DESIGNATED     *\n*              VTOC AND WRITES OUT A CONTROL RECORD AND DATA SET      *\n*              RECORDS DESCRIBING THEM.                               *\n*              ALSO, A MESSAGE FILE IS WRITTEN TO SYSPRINT.           *\n*                                                                     *\n*    INPUT:    SYSIN  - INCL STATEMENTS OR                            *\n*                       EXCL STATEMENTS (UP TO 512)                   *\n*              TGTVOL - POINTER TO VOLUME TO PROCESS                  *\n*                                                                     *\n*    OUTPUT:   RETURN CODE IN REG 15                                  *\n*                 0 - AT LEAST ONE DATA SET WAS SELECTED              *\n*                 4 - NO DATA SETS WERE SELECTED                      *\n*                 8 - ERROR IN INPUT STATMEMENTS                      *\n*                16 - COULD NOT OPEN ALL DCBS FOR PROCESSING          *\n*                                                                     *\n*              OUTDSR  - DATA SET RECORDS                             *\n*              SYSPRINT - MESSAGE FILE                                *\n*                                                                     *\n*    REGISTERS:                                                       *\n*                 R12 - BASE REGISTER                                 *\n*                                                                     *\n*    EXTERNAL REFERENCES:                                             *\n*                                                                     *\n*    MACROS USED:                                                     *\n*                                                                     *\n*    READJFCB, CVAFSEQ, OPEN, CLOSE, PUT, GET, AND READ               *\n*                                                                     *\n* PROGRAM LOGIC:                                                      *\n*                                                                     *\n* THE PROGRAM USES 'RDJFCB' AND 'OPEN TYPE=J' TO ACCESS THE VTOC      *\n* (FORMAT-4 DSCB), THEN FALLS INTO A 'CVAFSEQ' READ-LOOP TO GATHER    *\n* THE FORMAT-1 DSCBS. THE DSCBS ARE READ IN PHYSICAL-SEQUENTIAL ORDER *\n* AND DATA SET RECORDS DESCRIBING THEM ARE WRITTEN OUT.               *\n*                                                                     *\n* INPUT:                                                              *\n*                                                                     *\n* THE CONTROL STATEMENTS PROVIDED IN SYSIN ARE 'INCL' AND 'EXCL':     *\n* UP TO 512 'INCL' STATEMENTS MAY BE PROCESSED OR UP TO 512 'EXCL'    *\n* STATEMENTS (BUT NOT BOTH IN THE SAME RUN).  IF SYSIN IS NULL,       *\n* ALL ELIGIBLE PDSES FROM THE TARGET VOLUME ARE SELECTED.             *\n*                                                                     *\n* THE FORMAT FOR THE CONTROL STATEMENTS IS:                           *\n*                                                                     *\n* COLUMN                                                              *\n* 1         6                             50                          *\n*                                                                     *\n* INCL      FULLY QUALIFIED DATASET NAME  COMMENTS                    *\n*                                                                     *\n* (OR)           (OR)                                                 *\n*                                                                     *\n* EXCL      FULLY QUALIFIED DATASET NAME  COMMENTS                    *\n*                                                                     *\n* FOR EXAMPLE:                                                        *\n*                                                                     *\n* INCL SPP#.LINKLIB                                 COMMENT           *\n*                                                                     *\n* EXCL W$.LPALIB                                    COMMENT           *\n*                                                                     *\n* OUTPUT:                                                             *\n*                                                                     *\n* THE PROGRAM CREATES TWO OUTPUT FILES: ONE FILE CONTAINING DATA      *\n* SET RECORDS (SEE FORMAT BELOW) AND ONE OUTPUT MESSAGE FILE.         *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n* CONTROL RECORD                                                      *\n* ******* ******                                                      *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CTLREC                               *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 16 BYTES)         *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'00' - CONTROL RECORD                         *\n*                                                                     *\n*   BYTE  9          SECTION TYPE                                     *\n*                                                                     *\n*                      X'00' - BASE                                   *\n*                                                                     *\n*   BYTES 10-15      VOLUME SERIAL                                    *\n*                                                                     *\n*   BYTES 16-149     RESERVED (SET TO ZERO)                           *\n*                                                                     *\n* DATA SET RECORD                                                     *\n* **** *** ******                                                     *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECTS CDSREC AND CDSRECVR                 *\n*                                                                     *\n*   CDSREC (BASE SECTION)                                             *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'01' - DATA SET RECORD                        *\n*                                                                     *\n*   BYTE  9          BASE FOR CDSRECVR                                *\n*                                                                     *\n*   CDSRECVR (VARIABLE SECTION)                                       *\n*                                                                     *\n*   BYTE  0          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - SELECTABLE LOAD PDS                    *\n*                      X'01' - SELECTABLE SOURCE PDS                  *\n*                      X'02' - OTHER NON-VSAM DATA SET                *\n*                                                                     *\n*   BYTES 1-140      FORMAT-1 DSCB (140 BYTES)                        *\n*                                                                     *\n* MESSAGES                                                            *\n* ********                                                            *\n*                                                                     *\n* MSG1  *** WARNING - MORE THAN 512 CONTROL STMTS                     *\n*                                                                     *\n* MSG2  *** WARNING - NO DATASET NAME ON CONTROL STMT                 *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         EJECT\n         TITLE  'WVOLCOLL -- MAPPING DSECTS'\n***********************************\n*                                 *\n*      MAPPING DSECTS             *\n*                                 *\n***********************************\n         SPACE  ,\nSTMTFMT  DSECT                       INPUT STATEMENT FORMAT\nCLUDE    DS     4C                   EXCL/INCL\n         DS     C                    BLANK\nDSNAME   DS     44C                  DATASET NAME\nCOMMENTS DS     31C                  UNUSED BY PROGRAM\n         SPACE ,\n*\n* COMPARISON DATASET FORMATS\n*\n* CONTROL RECORD\nCTLREC   DSECT\nCTLLEN   DS    H                     LENGTH OF RECORD\nCTLRESV  DS    CL8                   RESERVED (MUST BE ZERO)\n         ORG   CTLRESV+2\nCTLDSNM  DS    H                     DATA SET NUMBER\nCTLMBNM  DS    H                     MEMBER NUMBER\nCTLTYPE  DS    XL1                   RECORD TYPE\nTYPECTL  EQU   X'00'                 CONTROL RECORD\nCTLSTYP  DS    XL1                   SECTION TYPE\nCTLVOLSR DS    CL6                   VOLUME SERIAL\nCTLRESV1 DS    CL134                 RESERVED (MUST BE ZERO)\n* DATA SET RECORD\nCDSREC   DSECT\nCDSLEN   DS    H                     LENGTH OF RECORD\nCDSRESV  DS    H                     RESERVED (MUST BE ZERO)\nCDSDSNM  DS    H                     DATA SET NUMBER\nCDSMBNM  DS    H                     MEMBER NUMBER\nCDSTYPE  DS    XL1                   RECORD TYPE\nTYPEDSR  EQU   X'01'                 DATA SET RECORD\nCDSVAR   DS    0C                    BEGINNING OF VARIABLE LENGTH SECT\nCDSRECVR DSECT\nCDSSTYPE DS    XL1                   SECTION TYPE\nSTYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)\nSTYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)\nSTYPNSLC EQU   X'02'                 NON-SELECTABLE\nCDSFMT1D DS    CL140                 FORMAT-1 DSCB\n         ORG   CDSFMT1D\nCDSDSN   DS    CL44                  DATA SET NAME\nCDSFMTID DS    CL1                   FORMAT IDENTIFIER\nCDSVOLSR DS    CL6                   VOLUME SERIAL\n         SPACE ,\n         PRINT OFF\n         DCBD  DSORG=(PS)\nWVOLDSCB DSECT\n         IECSDSL1 (1)\nDSCBLTH  EQU   *-WVOLDSCB\n         PRINT  ON\n         SPACE  ,\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n         TITLE  'WVOLCOLL -- INITIALIZATION'\n***********************************\n*                                 *\n*        INITIALIZATION           *\n*                                 *\n***********************************\nWVOLCOLL CSECT\n         SAVE  (14,12)\n         LR    R12,R15\n         USING WVOLCOLL,R12\n         ST    R13,SAVEAREA+4\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)\n         LR    R13,R1\n         LA    R1,DCBLST             LOAD DCB LIST PTR\n         OPEN  MF=(E,(1))            OPEN ALL FILES\n         USING IHADCB,R3             CHECK DCBS\n         LA    R3,SYSINDCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         LA    R3,SYSPTDCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         LA    R3,ODSRDCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         TITLE  'WVOLCOLL -- READ AND SORT SYSIN'\n***********************************\n*                                 *\n*   READ CONTROL CARDS            *\n*                                 *\n***********************************\n*                                 *\n* REMEMBER THAT THERE'S A LIMIT   *\n* OF 512 STATEMENTS FOR INCL/EXCL.*\n*                                 *\n***********************************\n         SPACE ,\n         GETMAIN RU,LV=512*80\n         ST    R1,CTLAREA           STORE STORAGE FOR CARD AREA\n         LR    R9,R1\n*\n* R9 INDEXES THE STATEMENT TABLE\n*\n         SLR   R10,R10               CLEAR THE STMT CTR\n         SPACE ,\nGETLOOP  DS    0H\n         GET   SYSINDCB             GET AN INPUT 'CARD' (LOCATE MODE)\n         LR    R2,R1                POINT TO CARD\n         USING STMTFMT,R2\n         SPACE 2\n         CLI   DSNAME,C' '          IF THE DSNAME FIELD\n         BE    NODSN                   ERROR\n         CLC   CLUDE(4),=C'INCL'    IF IT'S AN INCL,\n         BNE   EXCLTST                 AND WE'RE NOT\n         TM    FLAGS,EXCLMODE            IN EXCLUDE\n         BO    GETLOOP                     MODE,\n         OI    FLAGS,INCLMODE        SET 'INCL' MODE,\n         B     SLOTIT                  AND GO SLOT IT.\n         SPACE 2\nEXCLTST  DS    0H\n         CLC   CLUDE(4),=C'EXCL'    ON THE OTHER HAND,\n         BNE   GETLOOP                 IF IT'S AN EXCL,\n         TM    FLAGS,INCLMODE            AND WE'RE IN\n         BO    GETLOOP                     INCL MODE, FORGET IT.\n         OI    FLAGS,EXCLMODE        OTHERWISE, SET EXCL MODE.\n         SPACE 2\nSLOTIT   DS    0H\n         LA    R10,1(R10)            IF MORE THAN 512\n         CH    R10,=H'513'             INPUT STMTS,\n         BE    TOOMANY                   EXIT 'N WARN ...\n         SPACE ,\n         MVC   0(80,R9),0(R2)        MOVE IT INTO A SLOT\n         LA    R9,80(,R9)              AND STEP TO NEXT ...\n         B     GETLOOP\n         DROP  R2\n         SPACE 2\nTOOMANY  DS    0H\n         OI    FLAGS,MESSY1          FLAG 'TOO MANY CNTL STMTS'\n         LA    R10,512               WE HAVE ONLY 512 CNTL STATEMENTS\n         B     INPEODAD\nNODSN    DS    0H\n         OI    FLAGS,MESSY2          FLAG 'NO DSN ON CNTL STMT'\n         B     GETLOOP\n         TITLE  'WVOLCOLL -- RDJFCB'\n***********************************\n*                                 *\n*   READ JFCB FOR TARGET VTOC     *\n*                                 *\n***********************************\nINPEODAD DS    0H\n         BCTR  R10,0                DECREMENT NUMBER OF CARDS\n         ST    R10,CTLCOUNT         STORE CONTROL COUNT\nGETJFCB  RDJFCB MF=(E,JFCBLIST)\n         SPACE 2\n         MVC   JFCBAREA(44),=44X'04'\n         LTR   R15,R15               IF WE GOT THE JFCB,\n         BZ    WRTCTL                  GO WRITE CONTROL RECORD\nDEBUG2   DC    H'0'                  OTHERWISE, CROAK\n         SPACE 2\nWRTCTL   DS    0H\n         PUT   ODSRDCB\n         USING CTLREC,R1\n         MVC   CTLLEN,=H'150'        SET LENGTH\n         MVC   CTLRESV(8),ZEROS      MOVE IN RESERVED AREA\n         MVC   CTLVOLSR(6),JFCBAREA+118 MOVE IN VOLUME SERIAL\n         MVC   VOLUME,CTLVOLSR       SAVE FOR FILLING IN DATA SET RECS\n         MVI   CTLRESV1,X'00'        SET RESERVED AREA TO ZERO\n         MVC   CTLRESV1+1(133),CTLRESV1\n         DROP  R1\nOPENVTOC DS    0H\n         LA    R3,VTOCDCB\n         OPEN  TYPE=J,MF=(E,JFCBLIST)\n         SPACE ,\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         L     R2,DCBDEBAD           GET DEB ADDR FOR CVAF\n         DROP  R3\n         TITLE  'WVOLCOLL -- CVAFSEQ LOOP'\n***********************************\n*                                 *\n*   READ ALL FMT-1 DSCBS          *\n*                                 *\n***********************************\n         SPACE ,\n         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST    ZERO THE CALLING LIST\n         OI    BFLHFL,BFLHDSCB                   READ DSCBS (NOT INDEX)\n         MVI   BFLHNOE,1             JUST ONE BUFFER LIST ENTRY\n         MVI   BFLELTH,DSCBLTH       GET THE WHOLE DSCB\n         MVC   BFLEARG,ZEROS         SET CCHHR OF FIRST DSCB TO ZERO\n         LA    R5,WVOLDSBA\n         USING WVOLDSCB,R5\n         ST    R5,BFLEBUF            SAVE IT IN THE PARM LIST\n         SPACE ,\n         SPACE ,\nREADDSCB DS    0H\n         TM    FLAGS,WVOLCVAF        IS THIS FIRST READ?\n         BO    SKIPFRST              NO, SKIP TO LATER READ\n         OI    FLAGS,WVOLCVAF        THIS IS FIRST TIME READ\n         SPACE ,\n         LA    R1,CVPL\n         CVAFSEQ DEB=(R2),                                             C\n               ACCESS=GTEQ,          *******************************   C\n               BUFLIST=BUFLIST,      *  GET THE FIRST DSCB (FMT-4) *   C\n               MF=(E,(1))            *******************************\n         SPACE 2\nSKIPFRST DS    0H\n         SPACE ,\n         LA    R1,CVPL\n         CVAFSEQ DEB=(R2),                                             C\n               ACCESS=GT,            ***************                   C\n               BUFLIST=BUFLIST,      *  GET A DSCB *                   C\n               MF=(E,(1))            ***************\n         SPACE ,\n         LTR   R15,R15               OUT OF DSCBS?\n         BNZ   ENDOFRDS              YES, OR AN ERROR\n         SPACE ,\n         CLI   DS1FMTID,C'1'         FMT-1?\n         BNE   SKIPFRST              READ TILL WE DO ...\n         SPACE ,\n         TM    DS1DSORG,DS1DSGPS+DS1DSGDA+DS1DSGIS NON-VSAM DS?\n         BNZ   FNONSELC\n         TM    DS1DSORG+1,DS1ORGAM  VSAM?\n         BNZ   FNONSELC\n         TM    DS1DSORG,DS1DSGPO    PDS?\n         BZ    FNONSELC\n         OI    FLAGS,PDSFND\nCHKLRECL DS    0H\n         TM    DS1RECFM,DS1RECFU     UNDEFINED FORMAT?\n         BNO   CSRCEF                NO, CHECK SOURCE FORMAT\n         CLC   DS1DSNAM(3),=CL3'ZZ.' IS THIS A FILLER FILE?\n         BE    FNONSELC              YES, NON-SELECTABLE\n         NI    FLAGS,X'FF'-SPDSFND   TURN OFF SOURCE PDS FOUND\n         B     CTLHEDR               CHECK FOR INCLUDE/EXCLUDE\nCSRCEF   DS    0H\n         TM    DS1RECFM,DS1RECFF     IS THIS FIXED FORMAT?\n         BZ    FNONSELC              NO, NON-SELECTABLE\n         CLC   DS1LRECL,=H'80'       IS LRECL = 80?\n         BNE   FNONSELC              NO, FILE NON SELECTABLE\n         NI    FLAGS,X'FF'-LPDSFND   TURN OFF LOAD PDS FOUND\n         CLC   DS1DSNAM(9),=CL9'SYS1.UADS'\n         BE    FNONSELC\nCTLHEDR  TM    FLAGS,INCLMODE+EXCLMODE   IF NO CONTROLS,\n         BZ    PUTDSREC                    CHECK PDS FLAGS\n         L     R14,CTLAREA\n         L     R15,CTLCOUNT\nCTLLOOP  DS    0H\n         CLC   5(44,R14),DS1DSNAM\n         BNE   CTLLOOP1\n         TM    FLAGS,INCLMODE        IF WE'RE IN\n         BO    PUTDSREC                INCLUDE MODE, ACCEPT RECORD\n         B     FNONSELC\nCTLLOOP1 LA    R14,80(,R14)\n         BCT   R15,CTLLOOP\n         TM    FLAGS,EXCLMODE        IF NO MATCH AND\n         BO    PUTDSREC                EXCLUDE MODE, ACCEPT RECORDL\nFNONSELC DS    0H\n         OI    FLAGS,NONSELC\nPUTDSREC DS    0H\n         PUT   ODSRDCB\n         USING CDSREC,R1\n         MVC   CDSLEN,=H'150'        SET RECORD LENGTH\n         MVC   CDSRESV(2),ZEROS\n         MVC   CDSDSNM(2),ZEROS\n         MVC   CDSMBNM(2),ZEROS\n         MVI   CDSTYPE,TYPEDSR       SET RECORD TYPE\n         LA    R1,CDSVAR             MOVE TO VARIABLE SECTION\n         USING CDSRECVR,R1\n         TM    FLAGS,NONSELC         IS FILE NON-SELECTABLE?\n         BO    PUTDSRC2\n         TM    FLAGS,PDSFND          CHECK PDS FLAGS\n         BO    PUTDSRC2              IF UNFAMILIAR PDS, BRANCH\n         TM    FLAGS,LPDSFND\n         BZ    PUTDSRC1\n         MVI   CDSSTYPE,STYPLOAD     SET SECTION TYPE\n         B     PUTDSRC3\nPUTDSRC1 MVI   CDSSTYPE,STYPSRCE     SET SECTION TYPE\n         B     PUTDSRC3\nPUTDSRC2 MVI   CDSSTYPE,STYPNSLC     SET SECTION TYPE\nPUTDSRC3 MVC   CDSFMT1D(140),DS1DSNAM MOVE IN FORMAT-1 DSCB\n         MVC   CDSVOLSR,VOLUME       INSURE CORRECT VOLUME SERIAL\n         DROP  R1\n         NI    FLAGS,X'FF'-NONSELC-PDSFND\n         B     READDSCB\nENDOFRDS DS    0H\n         TM    FLAGS,MESSY1+MESSY2\n         BZ    WVOLEXIT\n         TM    FLAGS,MESSY1\n         BZ    TESTMSG2\n         MVC   WSOUTBFR+1(40),MSG1\n         B     PUTMSG\n         SPACE ,\nTESTMSG2 DS    0H\n         TM    FLAGS,MESSY2\n         BZ    TESTMSG3\n         MVC   WSOUTBFR+1(45),MSG2\n         B     PUTMSG\nTESTMSG3 DS    0H\n         SPACE ,\nPUTMSG   DS    0H\n         PUT   SYSPTDCB,WSOUTBFR\n         TITLE  'WVOLCOLL -- TERMINATION'\nWVOLEXIT DS    0H\n         LA    R1,DCBLST             LOAD DCB LIST PTR\n         CLOSE MF=(E,(1))            CLOSE ALL FILES\n         L     R1,CTLAREA            FREE STORAGE FOR CARD AREA\n         FREEMAIN RU,LV=512*80,A=(1)\n         SPACE ,\n         SR    R15,R15\nWVOLRETN L     R13,SAVEAREA+4\n         RETURN (14,12),RC=(15)\nBADDCB   LA    R15,16\n         B     WVOLRETN\n         TITLE  'WVOLCOLL -- CONSTANTS'\n***********************************\n*                                 *\n*         CONSTANTS               *\n*                                 *\n***********************************\nZEROS    DC    10D'0'\n         SPACE ,\nFLAGS    DC    X'0'\nINCLMODE EQU   X'80'\nEXCLMODE EQU   X'40'\nWVOLCVAF EQU   X'20'\nPDSFND   EQU   X'18'\nLPDSFND  EQU   X'10'\nSPDSFND  EQU   X'08'\nNONSELC  EQU   X'04'\nMESSY1   EQU   X'02'\nMESSY2   EQU   X'01'\n         SPACE ,\nVOLUME   DS    CL6\n         SPACE\nSAVEAREA DC    18F'0'\nCTLAREA  DS    A\nCTLCOUNT DS    F\n         SPACE ,\nJFCBAREA DS    0F,176C\nJFCBARE2 DS    0F,176C\nJFCBARE3 DS    0F,176C\nJFCBARE4 DS    0F,176C\n         TITLE  'WVOLCOLL -- DCBS'\n***********************************\n*                                 *\n*           DCBS                  *\n*                                 *\n***********************************\n         SPACE ,\nVTOCDCB  DCB   EXLST=EXITLIST,                                         C\n               DSORG=PS,                                               C\n               MACRF=(E),                                              C\n               DDNAME=TGTVOL\n         SPACE ,\nEXITLIST DS    0F\n         DC    X'87'\n         DC    AL3(JFCBAREA)\n         SPACE ,\nSYSINDCB DCB   DDNAME=SYSIN,         CONTROL STATEMENTS                C\n               DSORG=PS,                                               C\n               EODAD=INPEODAD,                                         C\n               MACRF=(GL)\n         SPACE ,\nSYSPTDCB DCB   DDNAME=SYSPRINT,      SYSPRINT                          C\n               DSORG=PS,               FILE                            C\n               LRECL=133,                FOR                           C\n               RECFM=FBA,                  THE                         C\n               BLKSIZE=1330,                 HUMANS                    C\n               MACRF=(PM)\n         SPACE ,\nODSRDCB  DCB   DSORG=PS,                                               C\n               RECFM=VB,                                               C\n               DDNAME=OUTDSR,                                          C\n               MACRF=(PL),                                             C\n               LRECL=264,                                              C\n               BLKSIZE=4094\n         SPACE ,\n         TITLE  'WVOLCOLL -- CVAF BUFFER AND RDJFCB LIST'\nBUFLIST  ICVAFBFL DSECT=NO\n         EJECT\nJFCBLIST RDJFCB (VTOCDCB),MF=L\nCVPL     CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,MF=L\n         ORG   CVPL\nCVPLMAP  ICVAFPL DSECT=NO\n         SPACE ,\n         DS    0F\nDCBLST   OPEN  (SYSINDCB,,SYSPTDCB,(OUTPUT),ODSRDCB,(OUTPUT)),MF=L\n         SPACE ,\nMSG1     DC    C'*** WARNING - MORE THAN 512 CONTROL STMTS'\nMSG2     DC    C'*** WARNING - NO DATASET NAME ON CONTROL STMT'\n         SPACE ,\n*\n* THIS IS THE SYSPRINT BUFFER DEFINITION\n*\nWSOUTBFR DC    CL133' '\nWVOLDSBA DS    CL140\n         LTORG\n         END\n//LKED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB(WVOLCOLL)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLCOLM": {"ttr": 3590, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x894/\\x01\\x01\\x04?\\x16C\\x00\\xe2\\x00\\xe2\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1989-12-08T00:00:00", "modifydate": "2001-02-12T16:43:00", "lines": 226, "newlines": 226, "modlines": 0, "user": "WSBG"}, "text": "//WSBGWVOL JOB  ,GOLOB,MSGCLASS=X,NOTIFY=WSBG\n//S4       EXEC  ASMACL MAC='STDL.MVS.AMODGEN'\n//ASM.SYSIN  DD  *\n         TITLE 'WVOLCOLM - E15 EXIT TO PASS DATA SET RECORDS'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*    WRITTEN BY JOHN R. GROUT                                         *\n*                                                                     *\n*    MODULE:   WVOLCOLM                                               *\n*                                                                     *\n*    FUNCTION: WVOLCOLM IS CALLED TO CREATE EACH RECORD FOR THE       *\n*              DATA SET RECORD ALPHABETIC SORT: IT COPIES CONTROL     *\n*              RECORDS, NUMBERS DATA SET RECORDS AND FLAGS DATA SET   *\n*              RECORDS AS EXCLUDED (ADDS X'80' TO THE TYPE FIELD) IF  *\n*              THE DATA SET IS NOT PRESENT AT EITHER OF THE OTHER TWO *\n*              SITES.                                                 *\n*                                                                     *\n*    INPUT:    STG1DS0 - MAIN INPUT RECORDS (FOR THIS SITE)           *\n*              STG1DS1 - DATA SET NAMES FOR OTHER SITE #1             *\n*              STG1DS2 - DATA SET NAMES FOR OTHER SITE #2             *\n*                                                                     *\n*    OUTPUT:   RETURN CODE IN REG 15                                  *\n*                 8 - DO NOT RETURN (WHEN NO MORE RECORDS)            *\n*                12 - INSERT RECORD (POINTED TO BY R1)                *\n*                16 - ERROR (WHEN DATA SETS ARE BROKEN OR MISSING)    *\n*                                                                     *\n*    REGISTERS:                                                       *\n*                 R12 - BASE REGISTER                                 *\n*                                                                     *\n*    EXTERNAL REFERENCES:                                             *\n*                                                                     *\n*    MACROS USED:                                                     *\n*                                                                     *\n*    NONE                                                             *\n*                                                                     *\n* PROGRAM LOGIC:                                                      *\n*                                                                     *\n* SEE ABOVE.                                                          *\n*                                                                     *\n* INPUT:                                                              *\n*                                                                     *\n* SEE ABOVE.                                                          *\n*                                                                     *\n* OUTPUT:                                                             *\n*                                                                     *\n* SEE ABOVE.                                                          *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n* DATA SET RECORDS                                                    *\n* **** *** *******                                                    *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CDSREC                               *\n*                                                                     *\n*   CDSREC                                                            *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'01' - DATA SET RECORD                        *\n*                                                                     *\n*   BYTE  9          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - SELECTABLE LOAD PDS                    *\n*                      X'01' - SELECTABLE SOURCE PDS                  *\n*                      X'02' - OTHER NON-VSAM DATA SET                *\n*                                                                     *\n*   BYTES 10-149     FORMAT-1 DSCB (140 BYTES)                        *\n***********************************************************************\n         TITLE 'WVOLCOLM - MAPPING DSECTS'\n*\n* COMPARISON DATASET FORMATS\n*\n* DATASET RECORD\nCDSREC   DSECT\nCDSLEN   DS    H                     LENGTH OF RECORD\nCDSRESV  DS    H                     RESERVED (MUST BE ZERO)\nCDSDSNM  DS    H                     DATA SET NUMBER\nCDSMBNM  DS    H                     MEMBER NUMBER\nCDSTYPE  DS    XL1                   RECORD TYPE\nTYPEDSR  EQU   X'01'                 DATA SET RECORD\nCDSSTYPE DS    XL1                   SECTION TYPE\nSTYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)\nSTYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)\nSTYPNSLC EQU   X'02'                 NON-SELECTABLE\nSTYPEXCL EQU   X'80'                 AUTOMATIC EXCLUDE FLAG\nCDSFMT1D DS    CL140                 FORMAT-1 DSCB\n         ORG   CDSFMT1D\nCDSDSN   DS    CL44                  DATA SET NAME\n         DCBD  DEVD=DA\n         SPACE  ,\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n         TITLE  'WVOLCOLM -- MAIN PROGRAM'\nWVOLCOLM CSECT\n         SAVE  (14,12)\n         SPACE ,\n         LR   R12,R15\n         USING WVOLCOLM,R12\n         ST    R13,SAVEAREA+4\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)\n         LR    R13,R1\n         SPACE ,\n         TM    MODE,INIT            HAVE WE GONE THROUGH INITIALIZATION\n         BO    GETS00               YES, SKIP INITIALIZATION\n         LA    R1,OPENDCB           POINT TO DCB LIST\n         OPEN  MF=(E,(1))           OPEN DCBS FOR PROCESSING\n         USING IHADCB,R3\n         LA    R3,STG1DS0           POINT TO STG1DS0 DCB\n         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?\n         BZ    BADDCB               NO - GO EXIT\n         LA    R3,STG1DS1           POINT TO STG1DS1 DCB\n         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?\n         BZ    BADDCB               NO - GO EXIT\n         LA    R3,STG1DS2           POINT TO STG1DS2 DCB\n         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?\n         BZ    BADDCB               NO - GO EXIT\n         OI    MODE,INIT            WE HAVE GONE THROUGH INIT PROCESS\nGETS00   GET   STG1DS0              GET A RECORD FROM STG1DS0\n         LR    R9,R1                RECORD IS POINTED TO BY R9\n         USING CDSREC,R9\n         CLI   CDSTYPE,TYPEDSR      IS THIS A CONTROL RECORD?\n         BNE   DOREC                YES, GO RETURN CONTROL RECORD\n         LH    R1,DSNCTR            INCREMENT DATA SET COUNTER\n         AH    R1,=H'1'\n         STH   R1,DSNCTR\n         MVC   CDSDSNM(2),DSNCTR    MOVE DATA SET COUNTER INTO RECORD\n         CLI   CDSSTYPE,STYPNSLC    IS THIS A NON-SELECTABLE RECORD?\n         BE    DOREC                YES, GO RETURN DATA SET RECORD\n         TM    MODE,DS01RD          IS THERE A CURRENT STG1DS1 REC?\n         BO    COMPS01              YES, GO CHECK STG1DS1\nGETS01   GET   STG1DS1              GET A RECORD FROM STG1DS1\n         ST    R1,STG1DS1A          STORE ADDRESS FOR LATER USE\nGETS01A  OI    MODE,DS01RD          MARK CURRENT STG1DS1 RECORD\nCOMPS01  L     R10,STG1DS1A         LOAD ADDRESS OF RECORD\n         CLC   CDSDSN,4(R10)        COMPARE MAIN AND STG1DS1\n         BH    GETS01               MAIN HIGH - GET ANOTHER RECORD\n         BL    CHECKS02             MAIN LOW - GO CHECK STG1DS2\n         NI    MODE,X'FF'-DS01RD    MAIN EQUAL - RECORD HAS BEEN USED\n         B     DOREC                GO RETURN DATA SET RECORD\nCHECKS02 TM    MODE,DS02RD          IS THERE A CURRENT STG1DS2 REC?\n         BO    COMPS02              YES, GO CHECK STG1DS2\nGETS02   GET   STG1DS2              GET A RECORD FROM STG1DS2\n         ST    R1,STG1DS2A          STORE ADDRESS FOR LATER USE\nGETS02A  OI    MODE,DS02RD          MARK CURRENT STG1DS2 RECORD\nCOMPS02  L     R11,STG1DS2A         LOAD ADDRESS OF RECORD\n         CLC   CDSDSN,4(R11)        COMPARE MAIN AND STG1DS2\n         BH    GETS02               MAIN HIGH - GET ANOTHER RECORD\n         BL    SUPPREC              MAIN LOW - GO SUPPRESS RECORD\n         NI    MODE,X'FF'-DS02RD    MAIN EQUAL - RECORD HAS BEEN USED\n         B     DOREC                GO RETURN DATA SET RECORD\nSUPPREC  OI    CDSSTYPE,STYPEXCL    GO FLAG RECORD AS AUTO EXCLUDED\nDOREC    LR    R1,R9                POINT TO INSERTED RECORD\n         LA    R15,12               INSERT RECORD\n         L     R13,4(,R13)          POINT TO CALLERS SAVE AREA\n         L     R14,12(,R13)         LOAD REGISTER 14\n         L     R0,20(,R13)          LOAD REGISTER 0\n         RETURN (2,12),RC=(15)      RETURN REST OF REGS AND EXIT\nSTG1DS0E LA    R1,OPENDCB           POINT TO DCB LIST\n         CLOSE MF=(E,(1))           CLOSE DATA SETS\n         LA    R15,8                DO NOT RETURN TO EXIT\nCOLMEXIT L     R13,4(,R13)          POINT TO CALLERS SAVE AREA\n         RETURN (14,12),RC=(15)     RETURN TO CALLER\nBADDCB   LA    R15,16               SIGNAL ERROR IN SORT\n         B     COLMEXIT\nSTG1DS1E MVC   STG1DS1A,=AL4(DMYDSREC) POINT TO DUMMY RECORD\n         B     GETS01A              RETURN TO MAINLINE\nSTG1DS2E MVC   STG1DS2A,=AL4(DMYDSREC) POINT TO DUMMY RECORD\n         B     GETS02A              RETURN TO MAINLINE\nSAVEAREA DS    18F\nSTG1DS0  DCB   DDNAME=STG1DS0,                                         X\n               DSORG=PS,                                               X\n               LRECL=264,                                              X\n               EODAD=STG1DS0E,                                         X\n               RECFM=VB,                                               X\n               MACRF=(GL)\nSTG1DS1  DCB   DDNAME=STG1DS1,                                         X\n               DSORG=PS,                                               X\n               LRECL=264,                                              X\n               EODAD=STG1DS1E,                                         X\n               RECFM=VB,                                               X\n               MACRF=(GL)\nSTG1DS2 DCB    DDNAME=STG1DS2,                                         X\n               DSORG=PS,                                               X\n               LRECL=264,                                              X\n               EODAD=STG1DS2E,                                         X\n               RECFM=VB,                                               X\n               MACRF=(GL)\nOPENDCB  OPEN  (STG1DS0,(INPUT),STG1DS1,(INPUT),STG1DS2,(INPUT)),MF=L\nSTG1DS1A DS    A\nSTG1DS2A DS    A\nDMYDSREC DS    0F\n         DC    H'48'\n         DC    H'0'\n         DC    44XL1'FF'\nDSNCTR   DC    H'-1'\nMODE     DC    X'00'\nINIT     EQU   X'80'                INITIALIZATION PERFORMED\nDS01RD   EQU   X'40'                RECORD FOR STG1DS1 READ\nDS02RD   EQU   X'20'                RECORD FOR STG1DS2 READ\n         END\n//LKED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB(WVOLCOLM)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLCOLN": {"ttr": 3595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x894/\\x01\\x01\\x04?\\x16E\\x00\\xbe\\x00\\xbe\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1989-12-08T00:00:00", "modifydate": "2001-02-12T16:45:00", "lines": 190, "newlines": 190, "modlines": 0, "user": "WSBG"}, "text": "//WSBGWVOL JOB  ,GOLOB,MSGCLASS=X,NOTIFY=WSBG\n//S5       EXEC  ASMACL MAC='STDL.MVS.AMODGEN'\n//ASM.SYSIN  DD  *\n         TITLE 'WVOLCOLN - E35 EXIT TO FIX UP RECORDS'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*    WRITTEN BY JOHN R. GROUT                                         *\n*                                                                     *\n*    MODULE:   WVOLCOLN                                               *\n*                                                                     *\n*    FUNCTION: WVOLCOLN IS CALLED FOR EACH RECORD LEAVING THE         *\n*              FINAL SORT: IT DELETES DUPLICATE CONTROL RECORDS AND   *\n*              FIXES AUTO EXCLUDED DATA SET RECORDS                   *\n*                                                                     *\n*    INPUT:    DATA SET RECORD                                        *\n*                                                                     *\n*    OUTPUT:   RETURN CODE IN REG 15                                  *\n*                 0 - ACCEPT RECORD (POINTED TO BY REG 1)             *\n*                 4 - DELETE RECORD (WHEN DUP CTL REC READ)           *\n*                 8 - DO NOT RETURN (AT END OF FILE)                  *\n*                                                                     *\n*    REGISTERS:                                                       *\n*                 R12 - BASE REGISTER                                 *\n*                                                                     *\n*    EXTERNAL REFERENCES:                                             *\n*                                                                     *\n*    MACROS USED:                                                     *\n*                                                                     *\n*    NONE                                                             *\n*                                                                     *\n* PROGRAM LOGIC:                                                      *\n*                                                                     *\n* SEE ABOVE.                                                          *\n*                                                                     *\n* INPUT:                                                              *\n*                                                                     *\n* SEE ABOVE.                                                          *\n*                                                                     *\n* OUTPUT:                                                             *\n*                                                                     *\n* SEE ABOVE.                                                          *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n* CONTROL RECORD                                                      *\n* ******* ******                                                      *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CTLREC                               *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'00' - CONTROL RECORD                         *\n*                                                                     *\n*   BYTE  9          SECTION TYPE                                     *\n*                                                                     *\n*                      X'00' - BASE                                   *\n*                                                                     *\n*   BYTES 10-15      VOLUME SERIAL                                    *\n*                                                                     *\n*   BYTES 16-149     RESERVED (SET TO ZERO)                           *\n*                                                                     *\n* DATA SET RECORDS                                                    *\n* **** *** *******                                                    *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CDSREC                               *\n*                                                                     *\n*   CDSREC                                                            *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'01' - DATA SET RECORD                        *\n*                                                                     *\n*   BYTE  9          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - SELECTABLE LOAD PDS                    *\n*                      X'01' - SELECTABLE SOURCE PDS                  *\n*                      X'02' - OTHER NON-VSAM DATA SET                *\n*                                                                     *\n*   BYTES 10-149     FORMAT-1 DSCB (140 BYTES)                        *\n***********************************************************************\n         TITLE 'WVOLCOLN - MAPPING DSECTS'\n*\n* COMPARISON DATASET FORMATS\n*\n* CONTROL RECORD\nCTLREC   DSECT\nCTLLEN   DS    H                     LENGTH OF RECORD\nCTLRESV  DS    CL8                   RESERVED (MUST BE ZERO)\n         ORG   CTLRESV+2\nCTLDSNM  DS    H                     DATA SET NUMBER\nCTLMBNM  DS    H                     MEMBER NUMBER\nCTLTYPE  DS    XL1                   RECORD TYPE\nTYPECTL  EQU   X'00'                 CONTROL RECORD\nCTLSTYP  DS    XL1                   SECTION TYPE\nCTLVOLSR DS    CL6                   VOLUME SERIAL\nCTLRESV1 DS    CL134                 RESERVED (MUST BE ZERO)\n* DATASET RECORD\nCDSREC   DSECT\nCDSLEN   DS    H                     LENGTH OF RECORD\nCDSRESV  DS    H                     RESERVED (MUST BE ZERO)\nCDSDSNM  DS    H                     DATA SET NUMBER\nCDSMBNM  DS    H                     MEMBER NUMBER\nCDSTYPE  DS    XL1                   RECORD TYPE\nTYPEDSR  EQU   X'01'                 DATA SET RECORD\nCDSSTYPE DS    XL1                   SECTION TYPE\nSTYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)\nSTYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)\nSTYPNSLC EQU   X'02'                 NON-SELECTABLE\nSTYPEXCL EQU   X'80'                 AUTOMATIC EXCLUDE FLAG\nCDSFMT1D DS    CL140                 FORMAT-1 DSCB\n         ORG   CDSFMT1D\nCDSDSN   DS    CL44                  DATA SET NAME\n         SPACE  ,\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n         TITLE  'WVOLCOLN -- MAIN PROGRAM'\nWVOLCOLN CSECT\n         SAVE  (11,12)\n         SPACE ,\n         LR   R12,R15\n         USING WVOLCOLN,R12\n         SPACE ,\n         L     R11,0(,R1)           LOAD POINTER TO RECORD\n         LTR   R11,R11              IS POINTER ZERO?\n         BZ    COLNNRET             YES, DO NOT RETURN\n         USING CTLREC,R11\n         CLI   CTLTYPE,TYPECTL      IS THIS A CONTROL RECORD?\n         BNE   COLNDSR              NO, GO HANDLE DATA SET RECORD\n         DROP  R11\n         TM    FLAGS,CTLREAD        HAS A CTL RECORD BEEN READ BEFORE?\n         BO    DELREC               YES, DELETE THIS ONE\n         OI    FLAGS,CTLREAD        A CONTROL RECORD HAS NOW BEEN READ\n         B     RETREC\nCOLNDSR  EQU   *\n         USING CDSREC,R11\n         CLI   CDSTYPE,TYPEDSR      IS THIS A DATA SET RECORD?\n         BNE   RETREC               NO - GO ACCEPT RECORD\n         TM    CDSSTYPE,STYPEXCL    IS THIS RECORD AUTO EXCLUDED?\n         BZ    RETREC               NO - GO ACCEPT RECORD\n         DROP  R11\n         LA    R1,WORKAREA\n         MVC   0(150,R1),0(R11)     MOVE RECORD TO WORKAREA\n         USING CDSREC,R1\n         NI    CDSSTYPE,X'FF'-STYPEXCL TURN OFF AUTO EXCLUDE\n         B     RETREC1              GO ACCEPT RECORD\n         DROP  R1\nDELREC   LA    R15,4\n         B     COLNEXIT\nCOLNNRET LA    R15,8                DO NOT RETURN\n         B     COLNEXIT             GO EXIT\nRETREC   LR    R1,R11               POINT TO RECORD TO ACCEPT\nRETREC1  SLR   R15,R15              INSERT RECORD\nCOLNEXIT RETURN (11,12)\nFLAGS    DC    XL1'00'\nCTLREAD  EQU   X'80'\nWORKAREA DS    CL150\n         END\n//LKED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB(WVOLCOLN)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLCOLX": {"ttr": 3844, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x894/\\x01\\x01\\x04?\\x12U\\x00\\xab\\x00\\xe2\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1989-12-08T00:00:00", "modifydate": "2001-02-12T12:55:00", "lines": 171, "newlines": 226, "modlines": 0, "user": "WSBG"}, "text": "//WSBGWVOL JOB  ,GOLOB,MSGCLASS=X,NOTIFY=WSBG,CLASS=S\n//S1       EXEC  ASMACL MAC='STDL.MVS.AMODGEN'\n//ASM.SYSIN  DD  *\n         TITLE 'WVOLCOLM - E15 EXIT TO PASS DATA SET RECORDS'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*    ADAPTED FROM WVOLCOLM WRITTEN BY JOHN GROUT                      *\n*                                                                     *\n*    MODULE:   WVOLCOLX                                               *\n*                                                                     *\n*    FUNCTION: WVOLCOLX IS CALLED TO CREATE EACH RECORD FOR THE       *\n*              DATA SET RECORD ALPHABETIC SORT: IT COPIES CONTROL     *\n*              RECORDS AND NUMBERS DATA SET RECORDS.                  *\n*                                                                     *\n*    INPUT:    STG1DS0 - MAIN INPUT RECORDS (FOR THIS SITE)           *\n*                                                                     *\n*    OUTPUT:   RETURN CODE IN REG 15                                  *\n*                 8 - DO NOT RETURN (WHEN NO MORE RECORDS)            *\n*                12 - INSERT RECORD (POINTED TO BY R1)                *\n*                16 - ERROR (WHEN DATA SETS ARE BROKEN OR MISSING)    *\n*                                                                     *\n*    REGISTERS:                                                       *\n*                 R12 - BASE REGISTER                                 *\n*                                                                     *\n*    EXTERNAL REFERENCES:                                             *\n*                                                                     *\n*    MACROS USED:                                                     *\n*                                                                     *\n*    NONE                                                             *\n*                                                                     *\n* PROGRAM LOGIC:                                                      *\n*                                                                     *\n* SEE ABOVE.                                                          *\n*                                                                     *\n* INPUT:                                                              *\n*                                                                     *\n* SEE ABOVE.                                                          *\n*                                                                     *\n* OUTPUT:                                                             *\n*                                                                     *\n* SEE ABOVE.                                                          *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n* DATA SET RECORDS                                                    *\n* **** *** *******                                                    *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CDSREC                               *\n*                                                                     *\n*   CDSREC                                                            *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'01' - DATA SET RECORD                        *\n*                                                                     *\n*   BYTE  9          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - SELECTABLE LOAD PDS                    *\n*                      X'01' - SELECTABLE SOURCE PDS                  *\n*                      X'02' - OTHER NON-VSAM DATA SET                *\n*                                                                     *\n*   BYTES 10-149     FORMAT-1 DSCB (140 BYTES)                        *\n***********************************************************************\n         TITLE 'WVOLCOLX - MAPPING DSECTS'\n*\n* COMPARISON DATASET FORMATS\n*\n* DATASET RECORD\nCDSREC   DSECT\nCDSLEN   DS    H                     LENGTH OF RECORD\nCDSRESV  DS    H                     RESERVED (MUST BE ZERO)\nCDSDSNM  DS    H                     DATA SET NUMBER\nCDSMBNM  DS    H                     MEMBER NUMBER\nCDSTYPE  DS    XL1                   RECORD TYPE\nTYPEDSR  EQU   X'01'                 DATA SET RECORD\nCDSSTYPE DS    XL1                   SECTION TYPE\nSTYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)\nSTYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)\nSTYPNSLC EQU   X'02'                 NON-SELECTABLE\nSTYPEXCL EQU   X'80'                 AUTOMATIC EXCLUDE FLAG\nCDSFMT1D DS    CL140                 FORMAT-1 DSCB\n         ORG   CDSFMT1D\nCDSDSN   DS    CL44                  DATA SET NAME\n         DCBD  DEVD=DA\n         SPACE  ,\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n         TITLE  'WVOLCOLM -- MAIN PROGRAM'\nWVOLCOLM CSECT\n         SAVE  (14,12)\n         SPACE ,\n         LR   R12,R15\n         USING WVOLCOLM,R12\n         ST    R13,SAVEAREA+4\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)\n         LR    R13,R1\n         SPACE ,\n         TM    MODE,INIT            HAVE WE GONE THROUGH INITIALIZATION\n         BO    GETS00               YES, SKIP INITIALIZATION\n         LA    R1,OPENDCB           POINT TO DCB LIST\n         OPEN  MF=(E,(1))           OPEN DCBS FOR PROCESSING\n         USING IHADCB,R3\n         LA    R3,STG1DS0           POINT TO STG1DS0 DCB\n         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?\n         BZ    BADDCB               NO - GO EXIT\n         OI    MODE,INIT            WE HAVE GONE THROUGH INIT PROCESS\nGETS00   GET   STG1DS0              GET A RECORD FROM STG1DS0\n         LR    R9,R1                RECORD IS POINTED TO BY R9\n         USING CDSREC,R9\n         CLI   CDSTYPE,TYPEDSR      IS THIS A CONTROL RECORD?\n         BNE   DOREC                YES, GO RETURN CONTROL RECORD\n         LH    R1,DSNCTR            INCREMENT DATA SET COUNTER\n         AH    R1,=H'1'\n         STH   R1,DSNCTR\n         MVC   CDSDSNM(2),DSNCTR    MOVE DATA SET COUNTER INTO RECORD\nDOREC    LR    R1,R9                POINT TO INSERTED RECORD\n         LA    R15,12               INSERT RECORD\n         L     R13,4(,R13)          POINT TO CALLERS SAVE AREA\n         L     R14,12(,R13)         LOAD REGISTER 14\n         L     R0,20(,R13)          LOAD REGISTER 0\n         RETURN (2,12),RC=(15)      RETURN REST OF REGS AND EXIT\nSTG1DS0E LA    R1,OPENDCB           POINT TO DCB LIST\n         CLOSE MF=(E,(1))           CLOSE DATA SETS\n         LA    R15,8                DO NOT RETURN TO EXIT\nCOLMEXIT L     R13,4(,R13)          POINT TO CALLERS SAVE AREA\n         RETURN (14,12),RC=(15)     RETURN TO CALLER\nBADDCB   LA    R15,16               SIGNAL ERROR IN SORT\n         B     COLMEXIT\nSAVEAREA DS    18F\nSTG1DS0  DCB   DDNAME=STG1DS0,                                         X\n               DSORG=PS,                                               X\n               LRECL=264,                                              X\n               EODAD=STG1DS0E,                                         X\n               RECFM=VB,                                               X\n               MACRF=(GL)\nOPENDCB  OPEN  (STG1DS0,(INPUT)),MF=L\nDMYDSREC DS    0F\n         DC    H'48'\n         DC    H'0'\n         DC    44XL1'FF'\nDSNCTR   DC    H'-1'\nMODE     DC    X'00'\nINIT     EQU   X'80'                INITIALIZATION PERFORMED\n         END\n//*KED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB(WVOLCOLX)\n//LKED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD(WVOLCOLX)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLCOL0": {"ttr": 3848, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x894/\\x01\\x01\\x05/\\x17S\\x03\\xc6\\x03c\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1989-12-08T00:00:00", "modifydate": "2001-02-21T17:53:00", "lines": 966, "newlines": 867, "modlines": 0, "user": "WSBG"}, "text": "         TITLE 'WVOLCOL0 - ANALYZE LOAD PDSES'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*    WRITTEN BY JOHN R. GROUT (EARLIER VERSION BY CHRIS MARTEN)       *\n*      FIXED BY SAM GOLOB TO ADD ERROR REPORTING IN SYSPRINT.         *\n*                                                                     *\n*    MODULE:   WVOLCOL0                                               *\n*                                                                     *\n*    FUNCTION: WVOLCOL0 READS IN DATA SET RECORDS DESCRIBING LOAD     *\n*              PDSES ON A GIVEN VOLUME AND WRITES OUT MEMBER RECORDS  *\n*              AND IDR RECORDS FOR EACH MEMBER CONTAINED IN THE PDSES.*\n*                                                                     *\n*    INPUT:    INDSR0 - DATA SET RECORDS FOR LOAD PROCESSING          *\n*                                                                     *\n*    OUTPUT:   RETURN CODE IN REG 15                                  *\n*                 0 - PROCESSING COMPLETE NORMALLY                    *\n*                16 - COULD NOT OPEN A DCB FOR PROCESSING             *\n*                                                                     *\n*              OUTMBR0  - MEMBER RECORDS FOR SELECTED LOAD PDSES      *\n*              SYSPRINT - REPORT OF DATASETS SKIPPED BECAUSE OF       *\n*                         ERRORS OR DISCREPANCIES WITH STAGE 1.       *\n*                                                                     *\n*    REGISTERS:                                                       *\n*                 R12 - BASE REGISTER                                 *\n*                                                                     *\n*    EXTERNAL REFERENCES:                                             *\n*                                                                     *\n*      ICSORTI - STANDARD TABLE SORT (INTERNAL VERSION USED TO AVOID  *\n*                 GETMAIN FOR EACH DATA SET)                          *\n*                                                                     *\n*    MACROS USED:                                                     *\n*                                                                     *\n*    OPEN, CLOSE, PUT, GET, READ, POINT, DYNALLOC                     *\n*                                                                     *\n* PROGRAM LOGIC:                                                      *\n*                                                                     *\n* THE CONTROL RECORD IS READ TO DETERMINE THE VOLUME TO BE PROCESSED. *\n* EACH PDS DESCRIBED BY A DATA SET RECORD IS DYNAMICALLY ALLOCATED,   *\n* ITS DIRECTORY IS READ, MEMBER RECORDS ARE WRITTEN TO 31-BIT         *\n* ADDRESSABLE STORAGE AND SORTED BY TTR.  THEN, EACH MEMBER RECORD IS *\n* REREAD, THE CORRESPONDING MEMBER IS ACCESSED (VIA POINT), THE MEMBER*\n* RECORD IS WRITTEN TO AN OUTPUT FILE, AND, FOR ANY IDR RECORDS THAT  *\n* ARE FOUND IN THE MEMBER, IDR RECORDS CONTAINING THEM ARE WRITTEN TO *\n* AN OUTPUT FILE (EXCEPTION: DUMMY IDR ZAP RECORDS ARE IGNORED).      *\n*                                                                     *\n* INPUT:                                                              *\n*                                                                     *\n* THE CONTROL AND DATA SET RECORDS READ BY WVOLCOL0 ARE READ FROM     *\n* FILE INDSR0: THE RECORD FORMATS ARE GIVEN BELOW.                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*                                                                     *\n* THE PROGRAM CREATES AN OUTPUT FILE CONTAINING MEMBER RECORDS (SEE   *\n* BELOW FOR FORMAT).                                                  *\n*                                                                     *\n* THE SYSPRINT OUTPUT FILE REPORTS DATASETS SKIPPED FOR THE           *\n* FOLLOWING REASONS:                                                  *\n*                                                                     *\n*   1.  A DATASET ON THE VOLUME WAS DELETED OR RENAMED AFTER          *\n*       THE STAGE 1 VTOC ENTRY GATHERING WAS DONE.                    *\n*   2.  DYNALLOC FAILED FOR THE DATASET, BECAUSE SOMEBODY WAS         *\n*       HOLDING AN EXCLUSIVE ENQUEUE ON IT.                           *\n*                                                                     *\n*   YOU DO NOT WANT TO SKIP A DATASET THAT IS A TARGET LIBRARY        *\n*   OR AN EXECUTION LIBRARY FOR THE SUBSEQUENT SAS PROCESSING.        *\n*   THEREFORE IT IS BEST TO RUN THE STAGE 2 (MEMBER LEVEL) DATA       *\n*   GATHERING AT A TIME WHEN SIGNIFICANT DATASETS ARE NOT BEING       *\n*   ENQUEUED UPON (EXCLUSIVELY).                                      *\n*                                                                     *\n* THE FILE CONTAINING MEMBER RECORDS IS OUTMBR0.                      *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n* CONTROL RECORD                                                      *\n* ******* ******                                                      *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CTLREC                               *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 16 BYTES)         *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'00' - CONTROL RECORD                         *\n*                                                                     *\n*   BYTE  9          SECTION TYPE                                     *\n*                                                                     *\n*                      X'00' - BASE                                   *\n*                                                                     *\n*   BYTES 10-15      VOLUME SERIAL                                    *\n*                                                                     *\n*   BYTES 16-149     RESERVED (SET TO ZERO)                           *\n*                                                                     *\n* DATA SET RECORD                                                     *\n* **** *** ******                                                     *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECTS CDSREC AND CDSRECVR                 *\n*                                                                     *\n*   CDSREC (BASE SECTION)                                             *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 160 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (IN ALPHABETIC SEQUENCE)         *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'01' - DATA SET RECORD                        *\n*                                                                     *\n*   BYTE  9          BASE FOR CDSRECVR                                *\n*                                                                     *\n*   CDSRECVR (VARIABLE SECTION)                                       *\n*                                                                     *\n*   BYTE  0          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - SELECTABLE LOAD PDS                    *\n*                      X'01' - SELECTABLE SOURCE PDS                  *\n*                      X'02' - OTHER NON-VSAM DATA SET                *\n*                                                                     *\n*   BYTES 1-140      FORMAT-1 DSCB (140 BYTES)                        *\n*                                                                     *\n* MEMBER RECORD                                                       *\n* ****** ******                                                       *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECTS CMBREC AND CMBRECVR                 *\n*                                                                     *\n*   CMBREC (BASE SECTION)                                             *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (VARIABLE)                *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (IN ALPHABETIC SEQUENCE)         *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (IN ALPHABETIC SEQUENCE)           *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'02' - MEMBER RECORD                          *\n*                                                                     *\n*   BYTE  9          BASE FOR CMBRECVR                                *\n*                                                                     *\n*   CMBRECVR (VARIABLE SECTION)                                       *\n*                                                                     *\n*   BYTE  0          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - BASE SECTION (CONTAINS DE)             *\n*                      X'01' - HASH SECTION (CONTAINS HASH FIELD)     *\n*                                                                     *\n*   BYTES 1-74       DE (VARIABLE LENGTH)                             *\n*                                                                     *\n*    (OR)                                                             *\n*                                                                     *\n*   BYTES 1-4        STATEMENT COUNT (4 BYTES)                        *\n*                                                                     *\n*   BYTES 5-12       HASH (8 BYTES)                                   *\n*                                                                     *\n* IDR RECORD                                                          *\n* *** ******                                                          *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CIDREC                               *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (VARIABLE)                *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (IN ALPHABETIC SEQUENCE)         *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (IN ALPHABETIC SEQUENCE)           *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'03' - IDR RECORD                             *\n*                                                                     *\n*   BYTE  9          LENGTH OF THIS SECTION (IN BYTES)                *\n*                                                                     *\n*   BYTE  10         IDR RECORD TYPE                                  *\n*                                                                     *\n*   BYTES 11-263     REST OF IDR RECORD                               *\n*                                                                     *\n* MESSAGES                                                            *\n* ********                                                            *\n*                                                                     *\n***********************************************************************\n         TITLE 'WVOLCOL0 - MAPPING DSECTS'\n*\n* COMPARISON DATASET FORMATS\n*\n* CONTROL RECORD\nCTLREC   DSECT\nCTLLEN   DS    H                     LENGTH OF RECORD\nCTLRESV  DS    CL8                   RESERVED (MUST BE ZERO)\n         ORG   CTLRESV+2\nCTLDSNM  DS    H                     DATA SET NUMBER\nCTLMBNM  DS    H                     MEMBER NUMBER\nCTLTYPE  DS    XL1                   RECORD TYPE\nTYPECTL  EQU   X'00'                 CONTROL RECORD\nCTLSTYP  DS    XL1                   SECTION TYPE\nCTLVOLSR DS    CL6                   VOLUME SERIAL\nCTLRESV1 DS    CL134                 RESERVED (MUST BE ZERO)\n* DATA SET RECORD\nCDSREC   DSECT\nCDSLEN   DS    H                     LENGTH OF RECORD\nCDSRESV  DS    H                     RESERVED (MUST BE ZERO)\nCDSDSNM  DS    H                     DATA SET NUMBER\nCDSMBNM  DS    H                     MEMBER NUMBER\nCDSTYPE  DS    XL1                   RECORD TYPE\nTYPEDSR  EQU   X'01'                 DATA SET RECORD\nCDSVAR   DS    0C                    BEGINNING OF VARIABLE LENGTH SECT\nCDSRECVR DSECT\nCDSSTYPE DS    XL1                   SECTION TYPE\nSTYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)\nSTYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)\nSTYPNSLC EQU   X'02'                 NON-SELECTABLE\nCDSFMT1D DS    CL140                 FORMAT-1 DSCB\n         ORG   CDSFMT1D\nCDSDSN   DS    CL44                  DATA SET NAME\n         SPACE ,\n* MEMBER RECORD\nCMBREC   DSECT\nCMBLEN   DS    H                     LENGTH OF RECORD\nCMBRESV  DS    H                     RESERVED (MUST BE ZERO)\nCMBDSNM  DS    H                     DATA SET NUMBER\nCMBMBNM  DS    H                     MEMBER NUMBER\nCMBTYPE  DS    XL1                   RECORD TYPE\nTYPEMBR  EQU   X'02'                 MEMBER RECORD\nCMBVAR   DS    0C                    BEGINNING OF VARIABLE LENGTH SECT\nCMBRECVR DSECT\nCMBSTYPE DS    XL1                   SECTION TYPE\nSTYPBASE EQU   X'00'                 BASE SECTION (DE)\nSTYPHASH EQU   X'01'                 HASH SECTION\nCMBDE    DS    CL74                  DE (VARIABLE LENGTH)\n         ORG   CMBDE\nCMBNAME  DS    CL8                   MEMBER NAME\nCMBTTR   DS    CL3                   TTR (NOT ALIGNED FOR POINT)\nCMBCNT   DS    CL1                   COUNT FOR REST OF RECORD (* 2)\n         ORG   CMBDE\nCMBMRCNT DS    XL4                   MEMBER COUNT (NOT ALIGNED!)\nCMBHASH  DS    CL8                   HASH CODE\n         SPACE ,\n* IDR RECORD\nCIDREC   DSECT\nCIDLEN   DS    H                     LENGTH OF RECORD\nCIDRESV  DS    H                     RESERVED (MUST BE ZERO)\nCIDDSNM  DS    H                     DATA SET NUMBER\nCIDMBNM  DS    H                     MEMBER NUMBER\nCIDTYPE  DS    XL1                   RECORD TYPE\nTYPEIDR  EQU   X'03'                 IDR RECORD\nCIDRREC  DS    CL255                 IDR RECORD (UP TO 255 BYTES)\n         ORG   CIDRREC\nCIDSECLN DS    XL1                   SECTION LENGTH\n         SPACE ,\nDIRBLKDS DSECT\nDIRBLOCK DS    32D\nLODDECB  DSECT\nLODDECBH DS    CL4\nLODDECBP DS    A\nLODDDECB READ  DLODDECB,SF,LOADDCB,,32760,MF=L\n         DS    0F\nLODDECBL EQU   *-LODDECB\n         EJECT\n*        PRINT  OFF\nWVOLDSCB DSECT\n         IECSDSL1 (1)\nWVOLCOL0 CSECT\n         EXTRN  ICSORTI\n         DCBD   DSORG=(PS,PO)\n         EJECT\n         IEFZB4D0\nRBLEN    EQU    (S99RBEND-S99RB)\n         IEFZB4D2\n*        PRINT  ON\n         SPACE  ,\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\nSRTBUFSZ EQU   4194340              GET 4M TOTAL STORAGE\nTAGBUFSZ EQU   163840               ALLOW FOR 20,480 MEMBERS\n         TITLE  'WVOLCOL0 -- INITIALIZATION'\n***********************************\n*                                 *\n*        INITIALIZATION           *\n*                                 *\n***********************************\nWVOLCOL0 CSECT\n         SAVE  (14,12)\n         SPACE ,\n         LR    R12,R15\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         USING WVOLCOL0,R12,R11\n         SPACE ,\n         ST    R13,SAVEAREA+4\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)\n         LR    R13,R1\n         SPACE 2\n         OPEN  (SYSPRINT,OUTPUT)\n         L     R1,=A(DCBLST)\n         OPEN  MF=(E,(1))\n         USING IHADCB,R3\n         LA    R3,OMBR0DCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         LA    R3,IDSR0DCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         DROP  R3\n         TITLE  'WVOLCOL0 -- DATA SET RECORD PROCESSING'\n******************************************************\n*                                                    *\n* READ THE CONTROL RECORD                            *\n*                                                    *\n******************************************************\n         GET   IDSR0DCB\n         USING CTLREC,R1\n         MVC   VOLUME,CTLVOLSR      SAVE THE VOLSER FOR DYNALLOC\n         DROP  R1\n         MVC   BLANKSMS,BLANKSMS-1  CLEAR BLANK SPACES\n         MVC   HEADERMS,BLANKSMS    CLEAR HEADER LINE\n         MVI   HEADERMS,C'1'        SKIP TO NEW PAGE\n         MVC   HEADERMS+2(8),=C'WVOLCOL0'  PROGRAM NAME\n         MVC   HEADERMS+16(6),VOLUME       VOLSER\n         MVC   HEADERMS+38(44),HEADR1DS    MOVE TITLE\n         PUT   SYSPRINT,HEADERMS\n         PUT   SYSPRINT,BLANKSMS\n******************************************************\n*                                                    *\n* READ A DATA SET RECORD                             *\n*                                                    *\n******************************************************\nGETLOOP  DS    0H\n         GET   IDSR0DCB             GET A DATA SET RECORD\n         LR    R9,R1                POINT TO DATA SET RECORD\n         USING CDSREC,R9\n         MVC   DSNUM(2),CDSDSNM     SAVE DATA SET NUMBER\n         LA    R9,CDSVAR            POINT TO 2ND SECTION\n         USING CDSRECVR,R9\n         LA    R9,CDSFMT1D          LOAD ADDRESS OF FORMAT-1 DSCB\n         USING WVOLDSCB,R9\n         SPACE ,\n         LA    R1,DYNALRB           STORE DYNALLOC RB\n         ST    R1,DYNALPTR            POINTER INTO PTR FIELD\n         USING S99RB,R1\n         OI    DYNALPTR,S99RBPND    REQUIRED BIT ON ...\n         MVI   S99RBLN,RBLEN        SET RB LTH FIELD\n         MVI   S99VERB,S99VRBAL     VERB CODE = ALLOCATION\n         SPACE ,\n         LA    R6,S99RB+RBLEN       ADDRESS\n         USING S99TUPL,R6             TUP LIST\n         ST    R6,S99TXTPP              AND SAVE IN RB\n         SPACE ,\n         L     R3,=A(TUPTR)         LOAD POINTER TO TUS\n         USING TUPTR,R3\n         LA    R2,DSNTU             ADDRESS DSNAME TUP\n         ST    R2,S99TUPTR            AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,DISPTU            ADDRESS DISP TUP\n         ST    R2,S99TUPTR+4          AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,VOLTU             ADDRESS VOLUME TUP\n         ST    R2,S99TUPTR+8          AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,UNITTU            ADDRESS UNIT TUP\n         ST    R2,S99TUPTR+12         AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,CLOSTU            ADDRESS FREE = CLOSE TUP\n         ST    R2,S99TUPTR+16         AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,RETNDDN           ADDRESS DDNAME RETURN TUP\n         ST    R2,S99TUPTR+20         AND, OF COURSE ....\n         SPACE ,\n         OI    S99TUPTR+20,S99TUPLN     FLAG LAST TUP ENTRY\n         SPACE ,\n         MVC   PODSN(44),DS1DSNAM\n         DROP  R9\n         SPACE 2\n         ST    R2,SAVEREG2          SAVE REG 2\n         OBTAIN ISSTILL\n         C     R15,=F'8'            RC FOR DATASET NOT THERE?\n         BE    NODSNM               HANDLE \"MISSING DSN\" CONDITION\n         L     R2,SAVEREG2          RESTORE REG 2\n         LTR   R15,R15              IS THE DATASET STILL THERE?\n         BZ    DODYN                YES, DO DYNALLOC FOR IT\n*                                   HANDLE OTHER OBTAIN RET CODES\n         MVC   MISCERVL(6),VOLUME\n         MVC   MISCERDS(44),PODSN\n         PUT   SYSPRINT,MISCERMS\n         LA    R15,0\n         B     GETLOOP\n         SPACE 2\nDODYN    DS    0H\n         LA    R1,DYNALPTR            SETUP FOR CALL\n         DYNALLOC                   CALL SVC 99 ........\n         SPACE 2\n         LTR   R15,R15\n         BNZ   BADALLOC\n         DROP  R1,R3,R6\n         SPACE ,\n**********************************\n*                                *\n*  OPEN PDS - PROCESS DIRECTORY  *\n*                                *\n**********************************\n         USING DIRBLKDS,R8\n         SPACE ,\n         LA    R3,DIRDCB\n         USING IHADCB,R3\n         MVC   DCBDDNAM(8),PODDN    SET DYNALLOC DDNAME\n         SPACE ,\n         OPEN  (DIRDCB)\n         SPACE ,\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         L     R1,DECBFQ            LOAD POINTER TO DECB FREE QUEUE?\n         LTR   R1,R1                HAS QUEUE BEEN INITIALIZED?\n         BNZ   PROCLOAD             YES, SKIP INIT\n         LA    R3,LOADDCB           POINT TO MEMBER DCB\n         XC    DCBBLKSI,DCBBLKSI    INSURE GETPOOL FIRST TIME\n         L     R1,=A(DECBQARE)      LOAD ADDRESS OF DECB QUEUE AREA\n         ST    R1,DECBFQ            STORE DECB FREE QUEUE POINTER\n         XC    DECBUQF,DECBUQF      INITIALIZE DECB USE Q FIRST PTR\n         XC    DECBUQL,DECBUQL      INITIALIZE DECB USE Q LAST PTR\n         USING LODDECB,R1\nLDDECBLP MVC   0(LODDECBL,R1),MLODDECB INITIALIZE LOOP\n         LA    R0,LODDECBL(,R1)     LOAD ADDRESS OF NEXT DECB\n         C     R0,=A(DECBQARN)      ARE WE DONE WITH INIT?\n         BE    GETSRTTB             YES, GO GET SORT BUFFERS\n         ST    R0,LODDECBP          STORE NEXT POINTER\n         LR    R1,R0                LOAD NEW REGISTER CONTENTS\n         B     LDDECBLP             GO BACK THROUGH LOOP\n         DROP  R1\nGETSRTTB DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\n         GETMAIN RU,LV=SRTBUFSZ,BNDRY=PAGE,LOC=(ANY,ANY)\n         LA    R1,0(,R1)            PURIFY ADDRESS\n         ST    R1,SRTTAGBG          STORE START OF SORT TAG AREA\n         ST    R1,SRTTAGPT          STORE SORT TAG POINTER\n         A     R1,=F'4096'          POINT TO NEXT PAGE\n         ST    R1,SORTTAGB\n         A     R1,=A(TAGBUFSZ-4096)\n         ST    R1,SRTRECBG          STORE START OF SORT REC AREA\n         ST    R1,SRTRECPT          STORE SORT RECORD POINTER\n         A     R1,=F'4096'\n         ST    R1,SORTRECB\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         TITLE  'WVOLCOL0 -- LOAD DATASET PROCESSING'\n******************\n*                *\n* LOAD DATASET *\n*                *\n******************\nPROCLOAD DS    0H\n         MVC   SORTITCT,=H'-1'      CLEAR TOTAL MBR COUNTER\n         LA    R3,LOADDCB\n         MVC   DCBDDNAM(8),PODDN    SET DYNALLOC DDNAME\n         LH    R2,DSNBLKL           LOAD BLOCK LENGTH\n         STH   R2,DCBBLKSI          SET BLOCK SIZE\n         TM    FLAGS,GPOOLFLG       IS THIS FIRST TIME?\n         BO    PRODLOD1             NO, SKIP GETPOOL\n         GETPOOL (3),7,(2)          GET A BUFFER POOL (NCP * LEN)\n         OI    FLAGS,GPOOLFLG       INDICATE POOL GOTTEN\n         SPACE ,\nPRODLOD1 DS    0H\n         OPEN  (LOADDCB)              AND OPEN MEMBER DCB\n         SPACE ,\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         DROP  R3\n         SPACE ,\nSTTRSORT DS    0H\n         XC    DIRAREA,DIRAREA      INIT DIR BLOCK POINTERS\nRDDIRLOP LM    R7,R8,DIRAREA        LOAD POINTERS\n         LTR   R7,R7                TEST POINTER\n         BNZ   SPDSRDR2             POSITIVE, CONTAINS VALID PTR\nSPDSRDR1 DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         GET   DIRDCB               READ A DIRECTORY BLOCK\n         LA    R8,0(,R1)            SET POINTER TO DIRECTORY BLOCK\n         ST    R8,DIRBLK            STORE DIRECTORY BLOCK POINTER\n         LA    R7,DIRBLOCK+2        POINT TO FIRST MEMBER\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\nSPDSRDR2 CLC   0(8,R7),FOXES        IS THIS THE LAST MEMBER IN DIR?\n         BE    SORTREC              YES, GO SORT RECORDS\n         LH    R1,SORTITCT\n         AH    R1,=H'1'             COUNT IT\n         STH   R1,SORTITCT          STORE NEW COUNT\n         L     R9,SRTRECPT          POINT TO BEGINNING OF NEW RECORD\n         USING CMBREC,R9            SET UP BASE FOR MEMBER RECORD\n         XC    CMBRESV,CMBRESV      CLEAR OUT RESERVED FIELD\n         MVC   CMBDSNM,DSNUM        MOVE IN SAVED DATA SET NUMBER\n         STH   R1,CMBMBNM           MOVE IN SAVED MEMBER NUMBER\n         MVI   CMBTYPE,TYPEMBR      SET RECORD TYPE TO MEMBER\n         LA    R1,CMBVAR            LOAD START OF VAR SECTION\n         USING CMBRECVR,R1\n         MVI   CMBSTYPE,STYPBASE    SET FIRST SUBTYPE\n         IC    R10,11(,R7)\n         N     R10,=F'31'           KEEP BITS 3 - 7\n         SLL   R10,1                X2 FOR HALFWORD LTH\n         LA    R10,12(,R10)         ADD LTH OF NAME + TTRC\n         LR    R2,R10               DO MOVE OF DE TO RECORD\n         BCTR  R2,0                 DECREMENT LENGTH FOR MOVE INTO REC\n         EX    R2,MVCDE             MOVE DE (MVC USES R1 EXPLICITLY)\n         L     R2,SRTTAGPT          LOAD POINTER TO SORT TAG RECORD\n         MVC   0(3,R2),CMBTTR       STORE TTR FOR SORT\n         MVI   3(R2),X'00'          STORE '00' TO USE FOR POINT\n         DROP  R1\n         ST    R9,4(,R2)            STORE POINTER TO RECORD FOR SORT\n         LA    R2,8(,R2)            POINT TO NEXT SORT RECORD\n         ST    R2,SRTTAGPT          SAVE POINTER\n         AR    R7,R10               STEP TO NEXT DE\n         LA    R10,10(,R10)         ADD LENGTH OF REST OF MBR RECORD\n         STH   R10,CMBLEN           STORE LENGTH\n         AR    R9,R10               POINT TO NEW RECORD\n         ST    R9,SRTRECPT          STORE POINTER\n         SPACE ,\n         LR    R10,R8\n         LH    R15,0(,R10)\n         AR    R10,R15\n         CR    R7,R10               BLOCK EXHAUSTED?\n         BNL   SPDSRDR3\n         ST    R7,DIRPTR            STORE NEW POINTER FOR NEXT TIME\n         B     RDDIRLOP             GO CONTINUE\n         SPACE\nMVCDE    MVC   CMBDE-CMBRECVR(0,R1),0(R7)\n         SPACE 2\nSPDSRDR3 XC    DIRPTR,DIRPTR        ZERO OUT DIRECTORY PTR\n         B     RDDIRLOP             GO CONTINUE\n         DROP  R8,R9\nDIREODAD DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\nSORTREC  DS    0H\n         CLC   SRTTAGBG,SRTTAGPT    ARE THERE NO MEMBERS IN DS?\n         BE    INITSRT1             YES, GO CLOSE DOWN DS\n         LH    R1,SORTITCT          INCREMENT SORT ITEM COUNT\n         AH    R1,=H'1'             FOR ICSORTI\n         STH   R1,SORTITCT          STORE NEW COUNT\n         MVC   ICSORTTB,SRTTAGBG    MOVE IN TAG TABLE ADDRESS\n         LA    R1,ICSORTPR          LOAD ADDRESS OF ICSORTI PARMS\n         L     R15,=A(X'80000000'+ICSORTI) SET ICSORTI ADDRESS IN R15\n         BASSM R14,R15              CALL ICSORTI\n         L     R8,SRTTAGBG          LOAD BEGINNING OF MEMBERS\nMEMLOOP  C     R8,SRTTAGPT          ARE THERE NO MORE MEMBERS?\n         BE    CHEKTSTR             YES, GO DO PAGE RELEASE\n         L     R9,4(,R8)            LOAD POINTER TO MEMBER RECORD\n         USING CMBREC,R9            SET UP ADDRESSABILITY TO RECS\n         MVC   TTRAREA(3),0(R8)     MOVE TO BELOW THE LINE STORAGE\n         L     R2,=A(IDRWAREA)      POINT TO IDR WORK AREA\n         USING CIDREC,R2\n         MVC   CIDRESV(6),CMBRESV   INITIALIZE IDR RECORD AREA\n         MVI   CIDTYPE,TYPEIDR      INITIALIZE RECORD TYPE\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         POINT LOADDCB,TTRAREA      POINT TO TTRZ\n         XC    BUFFPTR,BUFFPTR      CLEAR OUT BUFFER POINTER\n         OI    FLAGS,READFLAG\n         NI    FLAGS,X'FF'-JUSTCHEK\n         SPACE ,\nREADMEM  DS    0H\n         TM    FLAGS,READFLAG       IS READ FLAG ON?\n         BZ    CHEKMEM              NO, GO TO CHECK BUFFER\n         L     R6,DECBFQ            LOAD POINTER TO DECB FREE QUEUE\n         LTR   R6,R6                ARE THERE ANY FREE DECB'S?\n         BZ    STOPREAD             NO, GO WAIT FOR NEXT BLOCK\n         GETBUF LOADDCB,(3)         GET A BUFFER FOR READ\n         USING LODDECB,R6\n         READ  LODDDECB,SF,,(3),MF=E DO READ\n         L     R1,LODDECBP          LOAD POINTER TO NEXT DECB\n         ST    R1,DECBFQ            STORE AS HEAD OF FREE QUEUE\n         XC    LODDECBP,LODDECBP    NO NEXT ELEMENT ON QUEUE\n         L     R1,DECBUQL           LOAD POINTER TO LAST ELEMENT\n         ST    R6,DECBUQL           STORE NEW LAST ELEMENT ON QUEUE\n         LTR   R1,R1                ARE THERE NO DECBS ON QUEUE?\n         BZ    READMEM1             YES, GO HANDLE\n         ST    R6,LODDECBP-LODDECB(,R1) STORE POINTER TO LAST ELEMENT\n         B     READMEM              GO CONTINUE WITH READS\nREADMEM1 ST    R6,DECBUQF           STORE NEW FIRST ELEMENT ON QUEUE\n         B     READMEM              GO CONTINUE WITH READS\n         DROP  R6\nSTOPREAD NI    FLAGS,X'FF'-READFLAG STOP TRYING TO READ FOR NOW\nCHEKMEM  DS    0H\n         L     R6,DECBUQF           LOAD POINTER TO FIRST DECB\n         USING LODDECB,R6\n         CHECK LODDDECB             DO CHECK OF DECB\n         L     R3,LODDDECB+12       LOAD STORED AREA ADDRESS AS BUF\n         ST    R3,BUFFPTR           STORE BUFFER POINTER\n         L     R1,LODDECBP          SAVE OLD NEXT PTR\n         L     R0,DECBFQ            LOAD FREE QUEUE PTR\n         ST    R0,LODDECBP          STORE FREE QUEUE PTR AS NEXT\n         ST    R6,DECBFQ            STORE NEW FREE QUEUE PTR\n         ST    R1,DECBUQF           STORE NEW FIRST QUEUE PTR\n         LTR   R1,R1                IS PTR ZERO?\n         BNZ   CHEKMEM1             NO, SKIP OVER STORE\n         XC    DECBUQL,DECBUQL      INDICATE NO ELEMENTS ON QUEUE\n         OI    FLAGS,READFLAG       START READING AGAIN\n         DROP  R6\nCHEKMEM1 DS    0H\n         CLI   0(R3),X'80'          IS THIS AN IDR RECORD\n         BNE   MEMEND               NO, FINISH PROCESSING MEMBER\n         TM    FLAGS,JUSTCHEK       ARE WE JUST READING FOR FUN?\n         BO    MEMEND               YES, FREE BUFFER\n         TM    2(R3),X'80'          IS THIS THE LAST IDR RECORD?\n         BZ    CHEKMEM2             NO, CONTINUE PROCESSING\n         NI    2(R3),X'7F'          TURN OFF LAST IDR RECORD FLAG\n         OI    FLAGS,JUSTCHEK       START CHECKING ONLY TO PURGE I/O\nCHEKMEM2 DS    0H\n         SLR   R1,R1\n         IC    R1,1(R3)             LOAD IN COUNT FROM IDR RECORD\n         CH    R1,=H'3'             IS THIS A VALID LENGTH RECORD?\n         BL    MEMEND               NO, IGNORE THE RECORD\n         CLI   2(R3),X'01'          IS THIS A ZAP IDR RECORD?\n         BNE   CHEKMEM3             NO, OUTPUT THE RECORD\n         TM    3(R3),X'7F'          IS THIS A DUMMY ZAP IDR RECORD?\n         BZ    MEMEND               YES, IGNORE THE RECORD\nCHEKMEM3 LH    R0,=H'9'             LOAD BASE RECORD LENGTH\n         AR    R0,R1                ADD NEW COUNT\n         STH   R0,CIDLEN            STORE NEW RECORD LENGTH\n         BCTR  R1,0                 DECREMENT BY 1\n         EX    R1,MVCIDR            MOVE IDR RECORD\n         PUT   OMBR0DCB,(2)\nMEMEND   L     R3,BUFFPTR           LOAD BUFFER POINTER\n         FREEBUF LOADDCB,(3)        RETURN THE BUFFER\n         XC    BUFFPTR,BUFFPTR      BUFFER POINTER IS INVALID\n         TM    FLAGS,READFLAG+JUSTCHEK ARE WE DONE WITH PROCESSING?\n         BNO   READMEM              NO, KEEP GOING\n         B     ENDLODME\n         DROP  R2\n         SPACE ,\nMVCIDR   MVC   CIDRREC-CIDREC(0,R2),1(R3)\n         SPACE ,\nLODEODAD DS    0H\n         L     R2,DECBFQ            LOAD FREE QUEUE POINTER\n         USING LODDECB,R6           RESTABLISH USING\nLODEODLP L     R3,LODDDECB+12       LOAD STORED AREA ADDRESS AS BUF\n         FREEBUF LOADDCB,(3)        FREE THE BUFFER\n         L     R1,LODDECBP          STORE NEXT POINTER\n         ST    R2,LODDECBP          STORE POINTER TO FREE QUEUE\n         ST    R6,DECBFQ            STORE NEW FREE QUEUE POINTER\n         LR    R2,R6                STORE PREVIOUS POINTER ON FREE Q\n         LR    R6,R1                LOAD NEXT DECB ON USED QUEUE\n         LTR   R6,R6                IS THIS END OF QUEUE?\n         BNZ   LODEODLP             NO, CONTINUE TO FREE BUFFERS\n         XC    DECBUQF,DECBUQF      INIT USED QUEUE POINTERS\n         XC    DECBUQL,DECBUQL\nENDLODME DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\n*\n* WRITE MEMBER RECORD\n*\n         LA    R3,OMBR0DCB\n         USING IHADCB,R3\n         LH    R2,CMBLEN            LOAD RECORD LENGTH\n         BCTR  R2,0\n         EX    R2,MVCMBR            DO MOVE (USES R9 EXPLICITLY)\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         LA    R2,MEMWAREA\n         PUT   (3),(2)              WRITE RECORD TO OUTPUT FILE\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\n         LA    R8,8(,R8)            POINT TO NEXT TAG RECORD\n         B     MEMLOOP\n         DROP  R3,R9\nMVCMBR   MVC   MEMWAREA(0),0(R9)\nCHEKTSTR BCTR  R8,0                 POINT TO END OF TAG AREA\n         O     R8,=XL4'00000FFF'    POINT TO END OF PAGE\n         ST    R8,SORTTAGE          SAVE IN PSL\n         S     R8,SORTTAGB          CHECK IF VALID RANGE\n         BP    CHEKTST1             YES, RANGE IS VALID\n         MVI   SORTTOPT,X'40'       NO, RANGE INVALID, FLAG IN PSL\n         B     CHEKRSTR\nCHEKTST1 MVI   SORTTOPT,X'00'       RANGE VALID, FLAG IN PSL\nCHEKRSTR L     R8,SRTRECPT          POINT TO END OF REC AREA\n         BCTR  R8,0\n         O     R8,=XL4'00000FFF'    POINT TO END OF PAGE\n         ST    R8,SORTRECE          SAVE IN PSL\n         S     R8,SORTRECB          CHECK IF VALID RANGE\n         BP    CHEKRST1             YES, RANGE IS VALID\n         MVI   SORTROPT,X'C0'       NO, RANGE INVALID, FLAG IN PSL\n         CLI   SORTTOPT,X'40'       ARE BOTH INVALID?\n         BE    INITSRT              YES, SKIP PGSER\n         B     DORELS               NO (VERY, VERY UNLIKELY), DO PGSER\nCHEKRST1 MVI   SORTROPT,X'80'       RANGE VALID, FLAG IN PSL\nDORELS   PGSER L,RELEASE,LA=SORTPSL RELEASE PAGES WHICH MAY NOT BE USED\nINITSRT  MVC   SRTTAGPT,SRTTAGBG\n         MVC   SRTRECPT,SRTRECBG\nINITSRT1 CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(CLOSEIT)\nCLOSEIT  L     R1,=A(DCBLST1)\n         CLOSE MF=(E,(1))\n         B     GETLOOP\nBADALLOC DS    0H\n         C     R15,=F'4'\n         BNE   BADDCB\n         MVC   BADDYNVL(6),VOLUME\n         MVC   BADDYNDS(44),PODSN\n         PUT   SYSPRINT,BADDYNMS\n         AP    ERRCOUNT,=P'1'\n         LA    R15,0\n         B     GETLOOP\nNODSNM   DS    0H\n         MVC   NODSNMVL(6),VOLUME\n         MVC   NODSNMDS(44),PODSN\n         PUT   SYSPRINT,NODSNMMS\n         AP    ERRCOUNT,=P'1'\n         LA    R15,0\n         B     GETLOOP\nBADDCB   DS    0H\n         LA    R15,16\n         B     WVOLRETN\n         TITLE  'WVOLCOL0 -- TERMINATION'\nINPEODAD DS    0H\nWVOLEXIT DS    0H\n         L     R1,=A(DCBLST)\n         CLOSE MF=(E,(1))\n         L     R1,SRTTAGBG\n         LTR   R1,R1               DID WE GET BUFFER?\n         BZ    WVOLEXT1            NO, SKIP FREEMAIN\n         FREEMAIN RU,LV=SRTBUFSZ,A=(1)\nWVOLEXT1 SLR   R15,R15\nWVOLRETN DS    0H\n         MVC   ERRCNTMS,BLANKSMS\n         MVC   ERRCNTMS(41),ERRCNTLT\n         MVC   ERRCNTMS+46(8),ERRCNTPT\n         ED    ERRCNTMS+46(8),ERRCOUNT+1\n         PUT   SYSPRINT,ERRCNTMS\n         CLOSE (SYSPRINT)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=(15)\n         TITLE  'WVOLCOL0 -- CONSTANTS'\n***********************************\n*                                 *\n*         CONSTANTS               *\n*                                 *\n***********************************\nSAVEAREA DS    18F\nZEROS    DC    10D'0'\nFOXES    DC    XL8'FFFFFFFFFFFFFFFFF'\nBUFFPTR  DS    A\nDIRAREA  DS    2A\n         ORG   DIRAREA\nDIRPTR   DS    A\nDIRBLK   DS    A\nDECBUQF  DS    A\nDECBUQL  DS    A\nDECBFQ   DC    A(0)\nTTRAREA  DC    A(0)\nSRTTAGBG DC    A(0)\nSRTTAGPT DS    A\nSRTRECBG DS    A\nSRTRECPT DS    A\nSORTPSL  DS    0CL24\nSORTTAGB DC    A(0)\nSORTTAGE DC    A(0)\nSORTTOPT DC    XL1'00'\n         DC    XL3'000000'\nSORTRECB DC    A(0)\nSORTRECE DC    A(0)\nSORTROPT DC    XL1'80'\n         DC    XL3'000000'\n         SPACE ,\nICSORTPR DS    0A                     ICSORTI PARM LIST\n         DC    A(SORTPARM)            ADDRESS OF SORT CONTROL PARMS\nICSORTTB DS    A\n         DC    A(SORTWORK)\nDSNUM    DS    H\nDSNBLKL  DC    H'32760'\nSORTPARM DS    0CL9                  LENGTH OF SORT PARM AREA\nSORTILEN DC    H'8'                  LENGTH OF ITEM TO BE SORTED\nSORTKDSP DC    H'0'                  DISPLACEMENT OF THE KEY FIELD\nSORTKLEN DC    H'3'                  LENGTH OF THE KEY FIELD\nSORTITCT DS    H                     COUNT OF ITEMS TO BE SORTED\nSORTSEQC DC    C'A'                  SORT SEQUENCE CHARACTER\nFLAGS    DC    XL1'0'\nGPOOLFLG EQU   X'80'\nREADFLAG EQU   X'40'\nJUSTCHEK EQU   X'20'\n         SPACE ,\nDYNALPTR DC    F'0'                  PTR TO DYNALLOC RB (DYNALRB)\n         SPACE ,\nDYNALRB  DC    5F'0'\n         SPACE ,\nDYNALTUP DC    15F'0'                TEXT UNIT POINTER LIST\n         SPACE ,\nMEMWAREA DS    CL256\n         LTORG\n         TITLE  'WVOLCOL0 -- DCBS'\n***********************************\n*                                 *\n*           DCBS                  *\n*                                 *\n***********************************\n         SPACE ,\nOMBR0DCB DCB   DSORG=PS,             MEMBER                            C\n               DDNAME=OUTMBR0,         RECORDS                         C\n               MACRF=(PM),               DATASET                       C\n               BUFNO=5,                                                C\n               RECFM=VB,                                               C\n               LRECL=264\n         SPACE ,\nIDSR0DCB DCB   DSORG=PS,             DATA SET                          C\n               DDNAME=INDSR0,          RECORDS                         C\n               MACRF=(GL),               DATASET                       C\n               EODAD=INPEODAD,                                         C\n               BUFNO=2,                                                C\n               RECFM=VB,                                               C\n               LRECL=264\n         SPACE ,\nDIRDCB   DCB   DSORG=PS,             USED TO READ                      C\n               DDNAME=XXXXXX,                                          C\n               MACRF=GL,               PDS DIRECTORY                   C\n               EODAD=DIREODAD,                                         C\n               BUFNO=100,                                              C\n               RECFM=F,                                                C\n               LRECL=256,                                              C\n               BLKSIZE=256\n         SPACE ,\nLOADDCB  DCB   DSORG=PO,             USED TO READ                      C\n               DDNAME=XXXXXX,                                          C\n               NCP=7,                  NUMBER OF CHANNEL PROGRAMS      C\n               MACRF=R,                                                C\n               RECFM=U,                  MEMBERS                       C\n               EODAD=LODEODAD\n         SPACE ,\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE ,\nMLODDECB DS    0F\n         DC    CL4'LOAD'\n         DC    A(0)\n         READ  LODMDECB,SF,LOADDCB,,32760,MF=L\n         SPACE ,\n         DS    0F\nRETNDDN  DC    AL2(DALRTDDN)\n         DC    X'0001'\n         DC    X'0008'               SYSTEM RETURNS\nPODDN    DS    CL8                      CREATED DDNAME\n         EJECT\n         LTORG\nDECBQARE DS    CL(LODDECBL*7)       DECB QUEUE AREA (NCP * LEN)\nDECBQARN EQU   *                    END OF QUEUE AREA\nTUPTR    DS    0F\n*\n* THESE TUPS ARE FOR THE TARGET DATASETS\n*\nDISPTU   DC    AL2(DALSTATS)\n         DC    X'0001'\n         DC    X'0001'\n         DC    X'08'                 DISP = SHR\n         SPACE ,\nVOLTU    DC    AL2(DALVLSER)\n         DC    X'0001'\n         DC    X'0006'\nVOLUME   DC    CL6'??????'           VOLID\n         SPACE ,\n*\n* THESE TUPS ARE COMMON TO BOTH\n*\nDSNTU    DC    AL2(DALDSNAM)\n         DC    X'0001'\n         DC    X'002C'\nPODSN    DC    CL44' '               ALLOCATE BY DSNAME\n         SPACE ,\n         SPACE ,\nUNITTU   DC    AL2(DALUNIT)\n         DC    X'0001'\n         DC    X'0008'\nUNIT     DC    CL8'SYSALLDA'         UNIT = 3380\n         SPACE ,\nCLOSTU   DC    AL2(DALCLOSE)\n         DC    X'0000'               FREE = CLOSE\n         SPACE ,\nDCBLST   OPEN  (OMBR0DCB,(OUTPUT),IDSR0DCB),MF=L\nDCBLST1  CLOSE (DIRDCB,,LOADDCB),MF=L\nIDRWAREA DS    CL300\n         DS    0D\nSORTWORK DS    CL200                 WORK AREA FOR ICSORTI\nBLANKS   DC    CL44' '\nERRCOUNT DC    PL5'0'\nSAVEREG2 DS    F\nBADDYNMS DS    0CL133\nBADDYNCC DC    C' '\nBADDYNP1 DC    C' ON PACK '\nBADDYNVL DC    C'XXXXXX'\nBADDYNP2 DC    C', DATASET '\nBADDYNDS DC    CL44' '\nBADDYNSF DC    C' GOT A BAD DYNALLOC RC. PROCESSING SKIPPED.'\n         DC    CL20' '\nNODSNMMS DS    0CL133\nNODSNMCC DC    C' '\nNODSNMP1 DC    C' ON PACK '\nNODSNMVL DC    C'XXXXXX'\nNODSNMP2 DC    C', DATASET '\nNODSNMDS DC    CL44' '\nNODSNMSF DC    C' THE DATASET HAS BEEN DELETED OR RENAMED.  '\n         DC    CL20' '\nMISCERMS DS    0CL133\nMISCERCC DC    C' '\nMISCERP1 DC    C' ON PACK '\nMISCERVL DC    C'XXXXXX'\nMISCERP2 DC    C', DATASET '\nMISCERDS DC    CL44' '\nMISCERSF DC    C' THERE WAS AN ERROR DOING THE OBTAIN.      '\n         DC    CL20' '\nHEADR1DS DC    CL44'A&&P  LOAD  MODULE STAGE 2 ERROR REPORT'\nERRCNTPT DC    XL8'4020202020202120'\nERRCNTLT DC    C'-     DATASETS SKIPPED BECAUSE OF ERRORS:'\n         DC    C' '\nBLANKSMS DS    0CL133\n         DC    CL133' '\nHEADERMS DS    0CL133\n         DC    CL133' '\nERRCNTMS DS    0CL133\n         DC    CL133' '\n         DC    C'     '\nISSTILL  CAMLST SEARCH,PODSN,VOLUME,CAMWORK\nCAMWORK  DS    CL140\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WVOLCOL1": {"ttr": 4355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x00\\x894/\\x01\\x01\\x05/\\x17U\\x03\\xd6\\x03x\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1989-12-08T00:00:00", "modifydate": "2001-02-21T17:55:00", "lines": 982, "newlines": 888, "modlines": 0, "user": "WSBG"}, "text": "         TITLE 'WVOLCOL1 - ANALYZE SOURCE PDSES'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*    WRITTEN BY JOHN R. GROUT (EARLIER VERSION BY CHRIS MARTEN)       *\n*      FIXED BY SAM GOLOB TO ADD ERROR REPORTING IN SYSPRINT.         *\n*                                                                     *\n*    MODULE:   WVOLCOL1                                               *\n*                                                                     *\n*    FUNCTION: WVOLCOL1 READS IN DATA SET RECORDS DESCRIBING SOURCE   *\n*              PDSES ON A GIVEN VOLUME AND WRITES OUT MEMBER RECORDS  *\n*              FOR EACH MEMBER CONTAINED IN THE PDSES.             ,  *\n*                                                                     *\n*    INPUT:    INDSR1 - DATA SET RECORDS FOR SOURCE PROCESSING        *\n*                                                                     *\n*    OUTPUT:   RETURN CODE IN REG 15                                  *\n*                 0 - PROCESSING COMPLETE NORMALLY                    *\n*                16 - COULD NOT OPEN A DCB FOR PROCESSING             *\n*                                                                     *\n*              OUTMBR1  - MEMBER RECORDS FOR SELECTED SOURCE PDSES    *\n*              SYSPRINT - REPORT OF DATASETS SKIPPED BECAUSE OF       *\n*                         ERRORS OR DISCREPANCIES WITH STAGE 1.       *\n*                                                                     *\n*    REGISTERS:                                                       *\n*                 R12 - BASE REGISTER                                 *\n*                                                                     *\n*    EXTERNAL REFERENCES:                                             *\n*                                                                     *\n*      ICSORTI - STANDARD TABLE SORT (INTERNAL VERSION USED TO AVOID  *\n*                 GETMAIN FOR EACH DATA SET)                          *\n*                                                                     *\n*    MACROS USED:                                                     *\n*                                                                     *\n*    OPEN, CLOSE, PUT, GET, READ, POINT, DYNALLOC                     *\n*                                                                     *\n* PROGRAM LOGIC:                                                      *\n*                                                                     *\n* THE CONTROL RECORD IS READ TO DETERMINE THE VOLUME TO BE PROCESSED. *\n* EACH PDS DESCRIBED BY A DATA SET RECORD IS DYNAMICALLY ALLOCATED,   *\n* ITS DIRECTORY IS READ, SKELETON MEMBER RECORDS ARE WRITTEN TO 31-BIT*\n* ADDRESSABLE STORAGE AND SORTED BY TTR.  THEN, EACH MEMBER RECORD IS *\n* REREAD, THE CORRESPONDING MEMBER IS ACCESSED (VIA POINT) AND HASHED,*\n* AND THE MEMBER RECORD IS FILLED IN AND WRITTEN TO AN OUTPUT FILE.   *\n*                                                                     *\n* INPUT:                                                              *\n*                                                                     *\n* THE CONTROL AND DATA SET RECORDS READ BY WVOLCOL1 ARE READ FROM     *\n* FILE INDSR1: THE RECORD FORMATS ARE GIVEN BELOW.                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*                                                                     *\n* THE PROGRAM CREATES AN OUTPUT FILE CONTAINING MEMBER RECORDS (SEE   *\n* BELOW FOR FORMAT).                                                  *\n*                                                                     *\n* THE SYSPRINT OUTPUT FILE REPORTS DATASETS SKIPPED FOR THE           *\n* FOLLOWING REASONS:                                                  *\n*                                                                     *\n*   1.  A DATASET ON THE VOLUME WAS DELETED OR RENAMED AFTER          *\n*       THE STAGE 1 VTOC ENTRY GATHERING WAS DONE.                    *\n*   2.  DYNALLOC FAILED FOR THE DATASET, BECAUSE SOMEBODY WAS         *\n*       HOLDING AN EXCLUSIVE ENQUEUE ON IT.                           *\n*                                                                     *\n*   YOU DO NOT WANT TO SKIP A DATASET THAT IS A TARGET LIBRARY        *\n*   OR AN EXECUTION LIBRARY FOR THE SUBSEQUENT SAS PROCESSING.        *\n*   THEREFORE IT IS BEST TO RUN THE STAGE 2 (MEMBER LEVEL) DATA       *\n*   GATHERING AT A TIME WHEN SIGNIFICANT DATASETS ARE NOT BEING       *\n*   ENQUEUED UPON (EXCLUSIVELY).                                      *\n*                                                                     *\n* THE FILE CONTAINING MEMBER RECORDS IS OUTMBR1.                      *\n***********************************************************************\n          EJECT\n***********************************************************************\n*                                                                     *\n* CONTROL RECORD                                                      *\n* ******* ******                                                      *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT CTLREC                               *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 16 BYTES)         *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'00' - CONTROL RECORD                         *\n*                                                                     *\n*   BYTE  9          SECTION TYPE                                     *\n*                                                                     *\n*                      X'00' - BASE                                   *\n*                                                                     *\n*   BYTES 10-15      VOLUME SERIAL                                    *\n*                                                                     *\n*   BYTES 16-149     RESERVED (SET TO ZERO)                           *\n*                                                                     *\n* DATA SET RECORD                                                     *\n* **** *** ******                                                     *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECTS CDSREC AND CDSRECVR                 *\n*                                                                     *\n*   CDSREC (BASE SECTION)                                             *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 160 BYTES)        *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (IN ALPHABETIC SEQUENCE)         *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'01' - DATA SET RECORD                        *\n*                                                                     *\n*   BYTE  9          BASE FOR CDSRECVR                                *\n*                                                                     *\n*   CDSRECVR (VARIABLE SECTION)                                       *\n*                                                                     *\n*   BYTE  0          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - SELECTABLE LOAD PDS                    *\n*                      X'01' - SELECTABLE SOURCE PDS                  *\n*                      X'02' - OTHER NON-VSAM DATA SET                *\n*                                                                     *\n*   BYTES 1-140      FORMAT-1 DSCB (140 BYTES)                        *\n*                                                                     *\n* MEMBER RECORD                                                       *\n* ****** ******                                                       *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECTS CMBREC AND CMBRECVR                 *\n*                                                                     *\n*   CMBREC (BASE SECTION)                                             *\n*                                                                     *\n*   BYTES 0-1        RECORD DESCRIPTOR WORD (VARIABLE)                *\n*                                                                     *\n*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *\n*                                                                     *\n*   BYTES 4-5        DATA SET NUMBER (IN ALPHABETIC SEQUENCE)         *\n*                                                                     *\n*   BYTES 6-7        MEMBER NUMBER (IN ALPHABETIC SEQUENCE)           *\n*                                                                     *\n*   BYTE  8          RECORD TYPE:                                     *\n*                                                                     *\n*                      X'02' - MEMBER RECORD                          *\n*                                                                     *\n*   BYTE  9          BASE FOR CMBRECVR                                *\n*                                                                     *\n*   CMBRECVR (VARIABLE SECTION)                                       *\n*                                                                     *\n*   BYTE  0          SECTION TYPE:                                    *\n*                                                                     *\n*                      X'00' - BASE SECTION (CONTAINS DE)             *\n*                      X'01' - HASH SECTION (CONTAINS HASH FIELD)     *\n*                                                                     *\n*   BYTES 1-74       DE (VARIABLE LENGTH)                             *\n*                                                                     *\n*    (OR)                                                             *\n*                                                                     *\n*   BYTES 1-4        STATEMENT COUNT (4 BYTES)                        *\n*                                                                     *\n*   BYTES 5-12       HASH (8 BYTES)                                   *\n*                                                                     *\n* SORT CONTROL RECORD                                                 *\n* **** ******* ******                                                 *\n*                                                                     *\n* A RECORD IS DESCRIBED BY DSECT SRTCREC                              *\n*                                                                     *\n*   BYTES 0-2        NUMBER OF RECORDS DESCRIBED (PACKED DECIMAL)     *\n*                                                                     *\n*   BYTES 3-5        LARGEST RECORD DESCRIBED (PACKED DECIMAL)        *\n*                                                                     *\n* MESSAGES                                                            *\n* ********                                                            *\n*                                                                     *\n***********************************************************************\n         TITLE 'WVOLCOL1 - MAPPING DSECTS'\n*\n*\n* COMPARISON DATASET FORMATS\n*\n* CONTROL RECORD\nCTLREC   DSECT\nCTLLEN   DS    H                     LENGTH OF RECORD\nCTLRESV  DS    CL8                   RESERVED (MUST BE ZERO)\n         ORG   CTLRESV+2\nCTLDSNM  DS    H                     DATA SET NUMBER\nCTLMBNM  DS    H                     MEMBER NUMBER\nCTLTYPE  DS    XL1                   RECORD TYPE\nTYPECTL  EQU   X'00'                 CONTROL RECORD\nCTLSTYP  DS    XL1                   SECTION TYPE\nCTLVOLSR DS    CL6                   VOLUME SERIAL\nCTLRESV1 DS    CL134                 RESERVED (MUST BE ZERO)\n* DATA SET RECORD\nCDSREC   DSECT\nCDSLEN   DS    H                     LENGTH OF RECORD\nCDSRESV  DS    H                     RESERVED (MUST BE ZERO)\nCDSDSNM  DS    H                     DATA SET NUMBER\nCDSMBNM  DS    H                     MEMBER NUMBER\nCDSTYPE  DS    XL1                   RECORD TYPE\nTYPEDSR  EQU   X'01'                 DATA SET RECORD\nCDSVAR   DS    0C                    BEGINNING OF VARIABLE LENGTH SECT\nCDSRECVR DSECT\nCDSSTYPE DS    XL1                   SECTION TYPE\nSTYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)\nSTYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)\nSTYPNSLC EQU   X'02'                 NON-SELECTABLE\nCDSFMT1D DS    CL140                 FORMAT-1 DSCB\n         ORG   CDSFMT1D\nCDSDSN   DS    CL44                  DATA SET NAME\n         SPACE ,\n* MEMBER RECORD\nCMBREC   DSECT\nCMBLEN   DS    H                     LENGTH OF RECORD\nCMBRESV  DS    H                     RESERVED (MUST BE ZERO)\nCMBDSNM  DS    H                     DATA SET NUMBER\nCMBMBNM  DS    H                     MEMBER NUMBER\nCMBTYPE  DS    XL1                   RECORD TYPE\nTYPEMBR  EQU   X'02'                 MEMBER RECORD\nCMBVAR   DS    0C                    BEGINNING OF VARIABLE LENGTH SECT\nCMBRECVR DSECT\nCMBSTYPE DS    XL1                   SECTION TYPE\nSTYPBASE EQU   X'00'                 BASE SECTION (DE)\nSTYPHASH EQU   X'01'                 HASH SECTION\nCMBDE    DS    CL74                  DE (VARIABLE LENGTH)\n         ORG   CMBDE\nCMBNAME  DS    CL8                   MEMBER NAME\nCMBTTR   DS    CL3                   TTR (NOT ALIGNED FOR POINT)\nCMBCNT   DS    CL1                   COUNT FOR REST OF RECORD (* 2)\n         ORG   CMBDE\nCMBMRCNT DS    XL4                   MEMBER COUNT (NOT ALIGNED!)\nCMBHASH  DS    CL8                   HASH CODE\n         SPACE ,\nDIRBLKDS DSECT\nDIRBLOCK DS    32D\nSRCDECB  DSECT\nSRCDECBH DS    CL4\nSRCDECBP DS    A\nSRCDDECB READ  DSRCDECB,SF,SRCEDCB,MF=L\n         DS    0F\nSRCDECBL EQU   *-SRCDECB\n         EJECT\n*        PRINT  OFF\nWVOLDSCB DSECT\n         IECSDSL1 (1)\nWVOLCOL1 CSECT\n         DCBD   DSORG=(PS,PO)\n         EJECT\n         IEFZB4D0\nRBLEN    EQU    (S99RBEND-S99RB)\n         IEFZB4D2\n*        PRINT  ON\n         SPACE  ,\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\nSRTBUFSZ EQU   4194304              GET 4M TOTAL STORAGE\nTAGBUFSZ EQU   327680               ALLOW FOR 40,960 MEMBERS\n         TITLE  'WVOLCOL1 -- INITIALIZATION'\n***********************************\n*                                 *\n*        INITIALIZATION           *\n*                                 *\n***********************************\nWVOLCOL1 CSECT\n         EXTRN ICSORTI\n         SAVE  (14,12)\n         SPACE ,\n         LR    R12,R15\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         USING WVOLCOL1,R12,R11\n         SPACE ,\n         ST    R13,SAVEAREA+4\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)\n         LR    R13,R1\n         SPACE 2\n         OPEN  (SYSPRINT,OUTPUT)\n         L     R1,=A(DCBLST)\n         OPEN  MF=(E,(1))\n         USING IHADCB,R3\n         LA    R3,OMBR1DCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         LA    R3,IDSR1DCB\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         DROP  R3\n         TITLE  'WVOLCOL1 -- DATA SET RECORD PROCESSING'\n******************************************************\n*                                                    *\n* READ THE CONTROL RECORD                            *\n*                                                    *\n******************************************************\n         GET   IDSR1DCB\n         USING CTLREC,R1\n         MVC   VOLUME,CTLVOLSR      SAVE THE VOLSER FOR DYNALLOC\n         DROP  R1\n         MVC   BLANKSMS,BLANKSMS-1  CLEAR BLANK SPACES\n         MVC   HEADERMS,BLANKSMS    CLEAR HEADER LINE\n         MVI   HEADERMS,C'1'        SKIP TO NEW PAGE\n         MVC   HEADERMS+2(8),=C'WVOLCOL1'  PROGRAM NAME\n         MVC   HEADERMS+16(6),VOLUME       VOLSER\n         MVC   HEADERMS+38(44),HEADR1DS    MOVE TITLE\n         PUT   SYSPRINT,HEADERMS\n         PUT   SYSPRINT,BLANKSMS\n******************************************************\n*                                                    *\n* READ A DATA SET RECORD                             *\n*                                                    *\n******************************************************\nGETLOOP  DS    0H\n         GET   IDSR1DCB             GET A DATA SET RECORD\n         LR    R9,R1                POINT TO DATA SET RECORD\n         USING CDSREC,R9\n         MVC   DSNUM(2),CDSDSNM     SAVE DATA SET NUMBER\n         LA    R9,CDSVAR            POINT TO 2ND SECTION\n         USING CDSRECVR,R9\n         LA    R9,CDSFMT1D          LOAD ADDRESS OF FORMAT-1 DSCB\n         USING WVOLDSCB,R9\n         SPACE ,\n         LA    R1,DYNALRB           STORE DYNALLOC RB\n         ST    R1,DYNALPTR            POINTER INTO PTR FIELD\n         USING S99RB,R1\n         OI    DYNALPTR,S99RBPND    REQUIRED BIT ON ...\n         MVI   S99RBLN,RBLEN        SET RB LTH FIELD\n         MVI   S99VERB,S99VRBAL     VERB CODE = ALLOCATION\n         SPACE ,\n         LA    R6,S99RB+RBLEN       ADDRESS\n         USING S99TUPL,R6             TUP LIST\n         ST    R6,S99TXTPP              AND SAVE IN RB\n         SPACE ,\n         L     R3,=A(TUPTR)         LOAD POINTER TO TUS\n         USING TUPTR,R3\n         LA    R2,DSNTU             ADDRESS DSNAME TUP\n         ST    R2,S99TUPTR            AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,DISPTU            ADDRESS DISP TUP\n         ST    R2,S99TUPTR+4          AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,VOLTU             ADDRESS VOLUME TUP\n         ST    R2,S99TUPTR+8          AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,UNITTU            ADDRESS UNIT TUP\n         ST    R2,S99TUPTR+12         AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,CLOSTU            ADDRESS FREE = CLOSE TUP\n         ST    R2,S99TUPTR+16         AND STORE IN LIST ...\n         SPACE ,\n         LA    R2,RETNDDN           ADDRESS DDNAME RETURN TUP\n         ST    R2,S99TUPTR+20         AND, OF COURSE ....\n         SPACE ,\n         OI    S99TUPTR+20,S99TUPLN     FLAG LAST TUP ENTRY\n         SPACE ,\n         MVC   DSNBLKL(2),DS1BLKL\n         MVC   PODSN(44),DS1DSNAM\n         DROP  R9\n         SPACE 2\n         ST    R2,SAVEREG2          SAVE REG 2\n         OBTAIN ISSTILL\n         C     R15,=F'8'            RC FOR DATASET NOT THERE?\n         BE    NODSNM               HANDLE \"MISSING DSN\" CONDITION\n         L     R2,SAVEREG2          RESTORE REG 2\n         LTR   R15,R15              IS THE DATASET STILL THERE?\n         BZ    DODYN                YES, DO DYNALLOC FOR IT\n*                                   HANDLE OTHER OBTAIN RET CODES\n         MVC   MISCERVL(6),VOLUME\n         MVC   MISCERDS(44),PODSN\n         PUT   SYSPRINT,MISCERMS\n         LA    R15,0\n         B     GETLOOP\n         SPACE 2\nDODYN    DS    0H\n         LA    R1,DYNALPTR            SETUP FOR CALL\n         DYNALLOC                   CALL SVC 99 ........\n         SPACE 2\n         LTR   R15,R15\n         BNZ   BADALLOC\n         DROP  R1,R3,R6\n         SPACE ,\n**********************************\n*                                *\n*  OPEN PDS - PROCESS DIRECTORY  *\n*                                *\n**********************************\n         USING DIRBLKDS,R8\n         SPACE ,\n         LA    R3,DIRDCB\n         USING IHADCB,R3\n         MVC   DCBDDNAM(8),PODDN    SET DYNALLOC DDNAME\n         SPACE ,\n         OPEN  (DIRDCB)\n         SPACE ,\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         L     R1,DECBFQ            LOAD POINTER TO DECB FREE QUEUE?\n         LTR   R1,R1                HAS QUEUE BEEN INITIALIZED?\n         BNZ   PROCSRCE             YES, SKIP INIT\n         LA    R3,SRCEDCB           POINT TO MEMBER DCB\n         XC    DCBBLKSI,DCBBLKSI    INSURE GETPOOL FIRST TIME\n         L     R1,=A(DECBQARE)      LOAD ADDRESS OF DECB QUEUE AREA\n         ST    R1,DECBFQ            STORE DECB FREE QUEUE POINTER\n         XC    DECBUQF,DECBUQF      INITIALIZE DECB USE Q FIRST PTR\n         XC    DECBUQL,DECBUQL      INITIALIZE DECB USE Q LAST PTR\n         USING SRCDECB,R1\nSRDECBLP MVC   0(SRCDECBL,R1),MSRCDECB INITIALIZE LOOP\n         LA    R0,SRCDECBL(,R1)     LOAD ADDRESS OF NEXT DECB\n         C     R0,=A(DECBQARN)      ARE WE DONE WITH INIT?\n         BE    GETSRTTB             YES, GO GET SORT TABLE\n         ST    R0,SRCDECBP          STORE NEXT POINTER\n         LR    R1,R0                LOAD NEW REGISTER CONTENTS\n         B     SRDECBLP             GO BACK THROUGH LOOP\n         DROP  R1\nGETSRTTB DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\n         GETMAIN RU,LV=SRTBUFSZ,BNDRY=PAGE,LOC=(ANY,ANY)\n         LA    R1,0(,R1)            PURIFY ADDRESS\n         ST    R1,SRTTAGBG          STORE START OF SORT TAG AREA\n         ST    R1,SRTTAGPT          STORE SORT TAG POINTER\n         A     R1,=F'4096'          POINT TO NEXT PAGE\n         ST    R1,SORTTAGB\n         A     R1,=A(TAGBUFSZ-4096)\n         ST    R1,SRTRECBG          STORE START OF SORT REC AREA\n         ST    R1,SRTRECPT          STORE SORT RECORD POINTER\n         A     R1,=F'4096'\n         ST    R1,SORTRECB\n         L     R1,SRTTAGBG          COMPUTE END OF STORAGE ADDRESS\n         A     R1,=A(SRTBUFSZ)\n         ST    R1,SRTRECEN\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         TITLE  'WVOLCOL1 -- SOURCE DATASET PROCESSING'\n******************\n*                *\n* SOURCE DATASET *\n*                *\n******************\nPROCSRCE DS    0H\n         MVC   SORTITCT,=H'-1'      CLEAR TOTAL MBR COUNTER\n         LA    R3,SRCEDCB\n         MVC   DCBDDNAM(8),PODDN    SET DYNALLOC DDNAME\n         LH    R2,DSNBLKL           LOAD BLOCK LENGTH\n         LH    R0,DCBBLKSI          LOAD DCB BLOCK LENGTH?\n         CR    R0,R2                IS BLOCK LENGTH THE SAME?\n         BE    PROCSRC2             YES, DO NOT GET NEW BUF POOL\n         STH   R2,DCBBLKSI          SET BLOCK SIZE\n         LTR   R0,R0                IS THIS FIRST TIME?\n         BE    PROCSRC1             YES, SKIP FREEPOOL\n         FREEPOOL (3)               FREE OLD BUFFER POOL\nPROCSRC1 DS    0H\n         GETPOOL (3),10,(2)         GET A BUFFER POOL (NCP * LEN)\n         SPACE ,\nPROCSRC2 DS    0H\n         OPEN  (SRCEDCB)              AND OPEN MEMBER DCB\n         SPACE ,\n         TM    DCBOFLGS,X'10'\n         BZ    BADDCB\n         DROP  R3\n         SPACE ,\nSTTRSORT DS    0H\n         XC    DIRAREA,DIRAREA      INIT DIR BLOCK POINTERS\nRDDIRLOP LM    R7,R8,DIRAREA        LOAD POINTERS\n         LTR   R7,R7                TEST POINTER\n         BNZ   SPDSRDR2             POSITIVE, CONTAINS VALID PTR\nSPDSRDR1 DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         GET   DIRDCB               READ A DIRECTORY BLOCK\n         LA    R8,0(,R1)            SET POINTER TO DIRECTORY BLOCK\n         ST    R8,DIRBLK            STORE DIRECTORY BLOCK POINTER\n         LA    R7,DIRBLOCK+2        POINT TO FIRST MEMBER\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\nSPDSRDR2 CLC   0(8,R7),FOXES        IS THIS THE LAST MEMBER IN DIR?\n         BE    SORTREC              YES, GO SORT RECORDS\n         LH    R1,SORTITCT\n         AH    R1,=H'1'             COUNT IT\n         STH   R1,SORTITCT          STORE NEW COUNT\n         L     R9,SRTRECPT          POINT TO BEGINNING OF NEW RECORD\n         USING CMBREC,R9            SET UP BASE FOR MEMBER RECORD\n         XC    CMBRESV,CMBRESV      CLEAR OUT RESERVED FIELD\n         MVC   CMBDSNM,DSNUM        MOVE IN SAVED DATA SET NUMBER\n         STH   R1,CMBMBNM           MOVE IN SAVED MEMBER NUMBER\n         MVI   CMBTYPE,TYPEMBR      SET RECORD TYPE TO MEMBER\n         LA    R1,CMBVAR            LOAD START OF VAR SECTION\n         USING CMBRECVR,R1\n         MVI   CMBSTYPE,STYPBASE    SET FIRST SUBTYPE\n         IC    R10,11(,R7)\n         N     R10,=F'31'           KEEP BITS 3 - 7\n         SLL   R10,1                X2 FOR HALFWORD LTH\n         LA    R10,12(,R10)         ADD LTH OF NAME + TTRC\n         LR    R2,R10               DO MOVE OF DE TO RECORD\n         BCTR  R2,0                 DECREMENT LENGTH FOR MOVE INTO REC\n         EX    R2,MVCDE             MOVE DE (MVC USES R1 EXPLICITLY)\n         L     R2,SRTTAGPT          LOAD POINTER TO SORT TAG RECORD\n         MVC   0(3,R2),CMBTTR       STORE TTR FOR SORT\n         MVI   3(R2),X'00'          STORE '00' TO USE FOR POINT\n         DROP  R1\n         ST    R9,4(,R2)            STORE POINTER TO RECORD FOR SORT\n         LA    R2,8(,R2)            POINT TO NEXT SORT RECORD\n         ST    R2,SRTTAGPT          SAVE POINTER\n         C     R2,SRTRECBG          ANY ROOM LEFT?\n         BL    TAGOK\n         ABEND 2001,DUMP\nTAGOK    AR    R7,R10               STEP TO NEXT DE\n         LA    R10,23(,R10)         ADD LENGTH OF REST OF MBR RECORD\n         STH   R10,CMBLEN           STORE LENGTH\n         AR    R9,R10               POINT TO NEW RECORD\n         ST    R9,SRTRECPT          STORE POINTER\n         C     R9,SRTRECEN          ANY ROOM LEFT\n         BL    DATAOK\n         ABEND 2002,DUMP\n         SPACE ,\nDATAOK   LR    R10,R8\n         LH    R15,0(,R10)\n         AR    R10,R15\n         CR    R7,R10               BLOCK EXHAUSTED?\n         BNL   SPDSRDR3\n         ST    R7,DIRPTR            STORE NEW POINTER FOR NEXT TIME\n         B     RDDIRLOP             GO CONTINUE\n         SPACE\nMVCDE    MVC   CMBDE-CMBRECVR(0,R1),0(R7)\n         SPACE 2\nSPDSRDR3 XC    DIRPTR,DIRPTR        ZERO OUT DIRECTORY PTR\n         B     RDDIRLOP             GO CONTINUE\n         DROP  R8,R9\nDIREODAD DS    0H\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\nSORTREC  DS    0H\n         CLC   SRTTAGBG,SRTTAGPT    ARE THERE NO MEMBERS IN DS?\n         BE    INITSRT1             YES, GO CLOSE DOWN DS\n         LH    R1,SORTITCT          INCREMENT SORT ITEM COUNT\n         AH    R1,=H'1'             FOR ICSORTI\n         STH   R1,SORTITCT          STORE NEW COUNT\n         MVC   ICSORTTB,SRTTAGBG    MOVE IN TAG TABLE ADDRESS\n         LA    R1,ICSORTPR          LOAD ADDRESS OF ICSORTI PARMS\n         L     R15,=A(X'80000000'+ICSORTI) SET ICSORTI ADDRESS IN R15\n         BASSM R14,R15              CALL ICSORTI\n         L     R8,SRTTAGBG          LOAD BEGINNING OF MEMBERS\nMEMLOOP  C     R8,SRTTAGPT          ARE THERE NO MORE MEMBERS?\n         BE    CHEKTSTR             YES, GO DO PAGE RELEASE\n         L     R9,4(,R8)            LOAD POINTER TO MEMBER RECORD\n         USING CMBREC,R9            SET UP ADDRESSABILITY TO RECS\n         MVC   MRCNT(4),ZEROS       CLEAR STMT COUNTER\n         MVI   HASHAREA,X'00'       INITIALIZE HASHAREA\n         MVC   HASHAREA+1(79),HASHAREA\n         MVC   TTRAREA(3),0(R8)     MOVE TO BELOW THE LINE STORAGE\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         POINT SRCEDCB,TTRAREA      POINT TO TTRZ\n         LA    R2,HASHAREA          R2 RIPPLES HASHAREA\n         XC    BUFFPTR,BUFFPTR      CLEAR OUT BUFFER POINTER\n         OI    FLAGS,READFLAG\n         SPACE ,\nREADMEM  DS    0H\n         TM    FLAGS,READFLAG       IS READ FLAG ON?\n         BZ    CHEKMEM              NO, GO TO CHECK BUFFER\n         L     R6,DECBFQ            LOAD POINTER TO DECB FREE QUEUE\n         LTR   R6,R6                ARE THERE ANY FREE DECB'S?\n         BZ    STOPREAD             NO, GO WAIT FOR NEXT BLOCK\n         GETBUF SRCEDCB,(3)         GET A BUFFER FOR READ\n         USING SRCDECB,R6\n         READ  SRCDDECB,SF,,(3),MF=E DO READ\n         L     R1,SRCDECBP          LOAD POINTER TO NEXT DECB\n         ST    R1,DECBFQ            STORE AS HEAD OF FREE QUEUE\n         XC    SRCDECBP,SRCDECBP    NO NEXT ELEMENT ON QUEUE\n         L     R1,DECBUQL           LOAD POINTER TO LAST ELEMENT\n         ST    R6,DECBUQL           STORE NEW LAST ELEMENT ON QUEUE\n         LTR   R1,R1                ARE THERE NO DECBS ON QUEUE?\n         BZ    READMEM1             YES, GO HANDLE\n         ST    R6,SRCDECBP-SRCDECB(,R1) STORE POINTER TO LAST ELEMENT\n         B     READMEM              GO CONTINUE WITH READS\nREADMEM1 ST    R6,DECBUQF           STORE NEW FIRST ELEMENT ON QUEUE\n         B     READMEM              GO CONTINUE WITH READS\n         DROP  R6\nSTOPREAD NI    FLAGS,X'FF'-READFLAG STOP TRYING TO READ\n*        XC    DECBCNTR,DECBCNTR    TURN ON UPWARD DECB COUNTER\nCHEKMEM  DS    0H\n         L     R6,DECBUQF           LOAD POINTER TO FIRST DECB\n         USING SRCDECB,R6\n         CHECK SRCDDECB             DO CHECK OF DECB\n         L     R3,SRCDDECB+12       LOAD STORED AREA ADDRESS AS BUF\n         ST    R3,BUFFPTR           STORE BUFFER POINTER\n         MVC   BFIOBPTR,SRCDDECB+16 SAVE IOB POINTER\n         L     R1,SRCDECBP          SAVE OLD NEXT PTR\n         L     R0,DECBFQ            LOAD FREE QUEUE PTR\n         ST    R0,SRCDECBP          STORE FREE QUEUE PTR AS NEXT\n         ST    R6,DECBFQ            STORE NEW FREE QUEUE PTR\n         ST    R1,DECBUQF           STORE NEW FIRST QUEUE PTR\n         LTR   R1,R1                IS PTR ZERO?\n         BNZ   CHEKMEM1             NO, SKIP OVER STORE\n         XC    DECBUQL,DECBUQL      INDICATE NO ELEMENTS ON QUEUE\n         OI    FLAGS,READFLAG       START READING AGAIN\n         DROP  R6\nCHEKMEM1 DS    0H\n*        TM    FLAGS,READFLAG       IS READ FLAG ON?\n*        BO    CHEKMEM2\n*        L     R6,DECBCNTR          LOAD DECB COUNTER\n*        LA    R6,1(,R6)            INCREMENT DECB COUNTER\n*        ST    R6,DECBCNTR          STORE DECB COUNTER\n*        C     R6,=F'5'             IS COUNTER EQUAL TO NCP/2?\n*        BNE   CHEKMEM2             NO, KEEP GOING\n*        OI    FLAGS,READFLAG       START READING AGAIN\nCHEKMEM2 DS    0H\n         LR    R6,R3                LOAD POINTER TO BEG OF BLOCK\n         AH    R6,DSNBLKL           ADD LENGTH OF REQUESTED BLOCK\n         L     R1,BFIOBPTR          RESTORE SAVED PTR TO IOB\n         LH    R1,14(,R1)           LOAD EXCESS LENGTH\n         SR    R6,R1                COMPUTE END OF BLOCK ADDRESS\n         LA    R0,78                LOAD MAGIC VALUE\nHASHIT   DS    0H\n         L     R1,MRCNT             COUNT NUMBER OF\n         LA    R1,1(,R1)              RECORDS IN\n         ST    R1,MRCNT                 MEMBER\n         LA    R1,HASHAREA+79       LOAD LAST BYTE\n         SR    R1,R2                COMPUTE LENGTH FOR EXECUTE\n         BNM   HASHIT1              IF LENGTH IS PROPER, CONTINUE\n         SH    R2,=H'80'            SUBTRACT 80 FROM HASH AREA\n         AH    R1,=H'80'            ADD 80 TO LENGTH\nHASHIT1  EX    R1,EXOR1             HASH FIRST SEGMENT\n         LA    R14,1(R3,R1)         LOAD NEW RECORD POINTER\n         LNR   R1,R1                LOAD NEGATIVE OF COUNT\n         AR    R1,R0                ADD MAGIC VALUE\n         BM    SKIPEXOR             IF NEGATIVE, DO NOT DO SECOND XC\n         EX    R1,EXOR2               HASH REMAINDER\n         SPACE ,\nSKIPEXOR DS    0H\n         LA    R2,11(,R2)           RIPPLE THE HASH FIELD\n         LA    R3,80(,R3)           STEP TO NEXT RECORD\n         CR    R6,R3                CHECK AGAINST END OF BLOCK\n         BH    HASHIT               MORE RECORDS\n         L     R3,BUFFPTR           LOAD BUFFER POINTER\n         FREEBUF SRCEDCB,(3)        RETURN THE BUFFER\n         XC    BUFFPTR,BUFFPTR      BUFFER POINTER IS INVALID\n         B     READMEM              OUT OF RECORDS\n         SPACE ,\nEXOR1    XC    0(0,R2),0(R3)        XC FIRST PIECE\nEXOR2    XC    HASHAREA(0),0(R14)   XC REMAINDER\n         SPACE ,\nSRCEODAD DS    0H\n         L     R2,DECBFQ            LOAD FREE QUEUE POINTER\n         USING SRCDECB,R6           RESTABLISH USING\nSRCEODLP L     R3,SRCDDECB+12       LOAD STORED AREA ADDRESS AS BUF\n         FREEBUF SRCEDCB,(3)        FREE THE BUFFER\n         L     R1,SRCDECBP          STORE NEXT POINTER\n         ST    R2,SRCDECBP          STORE POINTER TO FREE QUEUE\n         ST    R6,DECBFQ            STORE NEW FREE QUEUE POINTER\n         LR    R2,R6                STORE PREVIOUS POINTER ON FREE Q\n         LR    R6,R1                LOAD NEXT DECB ON USED QUEUE\n         LTR   R6,R6                IS THIS END OF QUEUE?\n         BNZ   SRCEODLP             NO, CONTINUE TO FREE BUFFERS\n         XC    DECBUQF,DECBUQF      INIT USED QUEUE POINTERS\n         XC    DECBUQL,DECBUQL\n         LA    R15,11               FOLD THE 80-BYTE\n         LA    R10,HASHAREA+10\nLASTHASH XC    HASHAREA(7),0(R10)   HASH DOWN TO\n         LA    R10,7(,R10)\n         BCT   R15,LASTHASH             SEVEN BYTES\n         XC    HASHAREA+8(1),HASHAREA+9 HASH LAST THREE BYTES TOGETHER\n         XC    HASHAREA+7(1),HASHAREA+8\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\n*\n* STORE STATEMENT COUNT AND HASH\n*\n         LH    R1,CMBLEN            LOAD LENGTH OF MEMBER RECORD\n         LA    R3,OMBR1DCB\n         USING IHADCB,R3\n         STH   R1,DCBLRECL          STORE LENGTH FOR LOCATE-MODE PUT\n         SH    R1,=H'13'            SUBTRACT LENGTH OF HASH RECORD\n         LA    R1,0(R1,R9)          POINT TO HASH STORAGE AREA\n         USING CMBRECVR,R1          STORE HASH SECTION\n         MVI   CMBSTYPE,STYPHASH    DEFINE SECTION AS HASH\n         MVC   CMBMRCNT,MRCNT       STORE STATEMENT COUNT\n         MVC   CMBHASH(8),HASHAREA  STORE HASH AREA\n         DROP  R1\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(*+4)\n         PUT   (3)                  WRITE RECORD TO OUTPUT FILE\n         CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 31 BIT MODE\n         DC    A(X'80000000'+*+4)\n         LH    R2,CMBLEN            LOAD RECORD LENGTH\n         BCTR  R2,0\n         EX    R2,MVCMBR            DO MOVE (USES R9 EXPLICITLY)\n         LA    R8,8(,R8)            POINT TO NEXT TAG RECORD\n         B     MEMLOOP\n         DROP  R3,R9\nMVCMBR   MVC   0(0,R1),0(R9)\nCHEKTSTR BCTR  R8,0                 POINT TO END OF TAG AREA\n         ST    R8,SORTTAGE          SAVE IN PSL\n         S     R8,SORTTAGB          CHECK IF VALID RANGE\n         BP    CHEKTST1             YES, RANGE IS VALID\n         MVI   SORTTOPT,X'40'       NO, RANGE INVALID, FLAG IN PSL\n         B     CHEKRSTR\nCHEKTST1 MVI   SORTTOPT,X'00'       RANGE VALID, FLAG IN PSL\nCHEKRSTR L     R8,SRTRECPT          POINT TO END OF REC AREA\n         BCTR  R8,0\n         ST    R8,SORTRECE          SAVE IN PSL\n         S     R8,SORTRECB          CHECK IF VALID RANGE\n         BP    CHEKRST1             YES, RANGE IS VALID\n         MVI   SORTROPT,X'C0'       NO, RANGE INVALID, FLAG IN PSL\n         CLI   SORTTOPT,X'40'       ARE BOTH INVALID?\n         BE    INITSRT              YES, SKIP PGSER\n         B     DORELS               NO (VERY, VERY UNLIKELY), DO PGSER\nCHEKRST1 MVI   SORTROPT,X'80'       RANGE VALID, FLAG IN PSL\nDORELS   PGSER L,RELEASE,LA=SORTPSL RELEASE PAGES WHICH MAY NOT BE USED\nINITSRT  MVC   SRTTAGPT,SRTTAGBG\n         MVC   SRTRECPT,SRTRECBG\nINITSRT1 CNOP  2,4\n         L     R14,*+6\n         BSM   0,14                 ENTER 24 BIT MODE\n         DC    A(CLOSEIT)\nCLOSEIT  L     R1,=A(DCBLST1)\n         CLOSE MF=(E,(1))\n         B     GETLOOP\nBADALLOC DS    0H\n* TEMPORARY - SKIP DSN\n         C     R15,=F'4'\n         BNE   BADDCB\n         MVC   BADDYNVL(6),VOLUME\n         MVC   BADDYNDS(44),PODSN\n         PUT   SYSPRINT,BADDYNMS\n         AP    ERRCOUNT,=P'1'\n         LA    R15,0\n         B     GETLOOP\nNODSNM   DS    0H\n         MVC   NODSNMVL(6),VOLUME\n         MVC   NODSNMDS(44),PODSN\n         PUT   SYSPRINT,NODSNMMS\n         AP    ERRCOUNT,=P'1'\n         LA    R15,0\n         B     GETLOOP\nBADDCB   DS    0H\n         LA    R15,16\n         B     WVOLRETN\n         TITLE  'WVOLCOL1 -- TERMINATION'\nINPEODAD DS    0H\nWVOLEXIT DS    0H\n         L     R1,=A(DCBLST)\n         CLOSE MF=(E,(1))\n         L     R1,SRTTAGBG\n         LTR   R1,R1\n         BZ    WVOLEXT1\n         FREEMAIN RU,LV=SRTBUFSZ,A=(1)\nWVOLEXT1 DS    0H\nWVOLEXT2 SLR   R15,R15\nWVOLRETN DS    0H\n         MVC   ERRCNTMS,BLANKSMS\n         MVC   ERRCNTMS(41),ERRCNTLT\n         MVC   ERRCNTMS+46(8),ERRCNTPT\n         ED    ERRCNTMS+46(8),ERRCOUNT+1\n         PUT   SYSPRINT,ERRCNTMS\n         CLOSE (SYSPRINT)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=(15)\n         TITLE  'WVOLCOL1 -- CONSTANTS'\n***********************************\n*                                 *\n*         CONSTANTS               *\n*                                 *\n***********************************\nSAVEAREA DS    18F\nZEROS    DC    10D'0'\nFOXES    DC    XL8'FFFFFFFFFFFFFFFFF'\nHASHAREA DS    CL80\n*DECBCNTR DS    F\nMRCNT    DS    F\nBUFFPTR  DS    A\nBFIOBPTR DS    A\nDIRAREA  DS    2A\n         ORG   DIRAREA\nDIRPTR   DS    A\nDIRBLK   DS    A\nDECBUQF  DS    A\nDECBUQL  DS    A\nDECBFQ   DC    A(0)\nTTRAREA  DC    A(0)\nSRTTAGBG DC    A(0)\nSRTTAGPT DS    A\nSRTRECBG DS    A\nSRTRECPT DS    A\nSRTRECEN DS    A\nSORTPSL  DS    0CL24\nSORTTAGB DC    A(0)\nSORTTAGE DC    A(0)\nSORTTOPT DC    XL1'00'\n         DC    XL3'000000'\nSORTRECB DC    A(0)\nSORTRECE DC    A(0)\nSORTROPT DC    XL1'80'\n         DC    XL3'000000'\n         SPACE ,\nICSORTPR DS    0A                     ICSORTI PARM LIST\n         DC    A(SORTPARM)            ADDRESS OF SORT CONTROL PARMS\nICSORTTB DS    A\n         DC    A(SORTWORK)\nDSNUM    DS    H\nDSNBLKL  DS    H\nSORTPARM DS    0CL9                  LENGTH OF SORT PARM AREA\nSORTILEN DC    H'8'                  LENGTH OF ITEM TO BE SORTED\nSORTKDSP DC    H'0'                  DISPLACEMENT OF THE KEY FIELD\nSORTKLEN DC    H'3'                  LENGTH OF THE KEY FIELD\nSORTITCT DS    H                     COUNT OF ITEMS TO BE SORTED\nSORTSEQC DC    C'A'                  SORT SEQUENCE CHARACTER\nFLAGS    DC    XL1'0'\nREADFLAG EQU   X'80'\nBADALLC  EQU   X'40'\n         SPACE ,\nDYNALPTR DC    F'0'                  PTR TO DYNALLOC RB (DYNALRB)\n         SPACE ,\nDYNALRB  DC    5F'0'\n         SPACE ,\nDYNALTUP DC    15F'0'                TEXT UNIT POINTER LIST\n         SPACE ,\n         DS    0F\n         LTORG\n         TITLE  'WVOLCOL1 -- DCBS'\n***********************************\n*                                 *\n*           DCBS                  *\n*                                 *\n***********************************\n         SPACE ,\nOMBR1DCB DCB   DSORG=PS,             MEMBER                            C\n               DDNAME=OUTMBR1,         RECORDS                         C\n               MACRF=(PL),               DATASET                       C\n               BUFNO=2,                                                C\n               RECFM=VB,                                               C\n               LRECL=264\n         SPACE ,\nIDSR1DCB DCB   DSORG=PS,             DATA SET                          C\n               DDNAME=INDSR1,          RECORDS                         C\n               MACRF=(GL),               DATASET                       C\n               EODAD=INPEODAD,                                         C\n               BUFNO=2,                                                C\n               RECFM=VB,                                               C\n               LRECL=264\n         SPACE ,\nDIRDCB   DCB   DSORG=PS,             USED TO READ                      C\n               DDNAME=XXXXXX,                                          C\n               MACRF=GL,               PDS DIRECTORY                   C\n               EODAD=DIREODAD,                                         C\n               BUFNO=100,                                              C\n               RECFM=F,                                                C\n               LRECL=256,                                              C\n               BLKSIZE=256\n         SPACE ,\nSRCEDCB  DCB   DSORG=PO,             USED TO READ                      C\n               DDNAME=XXXXXX,                                          C\n               NCP=10,                 NUMBER OF CHANNEL PROGRAMS      C\n               MACRF=R,                                                C\n               RECFM=FB,                 MEMBERS                       C\n               EODAD=SRCEODAD\n         SPACE ,\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA\n         SPACE ,\nMSRCDECB DS    0F\n         DC    CL4'SRCE'\n         DC    A(0)\n         READ  SRCMDECB,SF,SRCEDCB,MF=L\n         SPACE ,\n         DS    0F\nRETNDDN  DC    AL2(DALRTDDN)\n         DC    X'0001'\n         DC    X'0008'               SYSTEM RETURNS\nPODDN    DS    CL8                      CREATED DDNAME\n         EJECT\n         LTORG\nDECBQARE DS    CL(SRCDECBL*10)      DECB QUEUE AREA (NCP * LEN)\nDECBQARN EQU   *                    END OF QUEUE AREA\nTUPTR    DS    0F\n*\n* THESE TUPS ARE FOR THE TARGET DATASETS\n*\nDISPTU   DC    AL2(DALSTATS)\n         DC    X'0001'\n         DC    X'0001'\n         DC    X'08'                 DISP = SHR\n         SPACE ,\nVOLTU    DC    AL2(DALVLSER)\n         DC    X'0001'\n         DC    X'0006'\nVOLUME   DC    CL6'??????'           VOLID\n         SPACE ,\n*\n* THESE TUPS ARE COMMON TO BOTH\n*\nDSNTU    DC    AL2(DALDSNAM)\n         DC    X'0001'\n         DC    X'002C'\nPODSN    DC    CL44' '               ALLOCATE BY DSNAME\n         SPACE ,\n         SPACE ,\nUNITTU   DC    AL2(DALUNIT)\n         DC    X'0001'\n         DC    X'0008'\nUNIT     DC    CL8'SYSALLDA'         UNIT = 3380\n         SPACE ,\nCLOSTU   DC    AL2(DALCLOSE)\n         DC    X'0000'               FREE = CLOSE\n         SPACE ,\nDCBLST   OPEN  (OMBR1DCB,(OUTPUT),IDSR1DCB),MF=L\nDCBLST1  CLOSE (DIRDCB,,SRCEDCB),MF=L\n         DS    0D\nSORTWORK DS    CL200                 WORK AREA FOR ICSORTI\nBLANKS   DC    CL44' '\nERRCOUNT DC    PL5'0'\nSAVEREG2 DS    F\nBADDYNMS DS    0CL133\nBADDYNCC DC    C' '\nBADDYNP1 DC    C' ON PACK '\nBADDYNVL DC    C'XXXXXX'\nBADDYNP2 DC    C', DATASET '\nBADDYNDS DC    CL44' '\nBADDYNSF DC    C' GOT A BAD DYNALLOC RC. PROCESSING SKIPPED.'\n         DC    CL20' '\nNODSNMMS DS    0CL133\nNODSNMCC DC    C' '\nNODSNMP1 DC    C' ON PACK '\nNODSNMVL DC    C'XXXXXX'\nNODSNMP2 DC    C', DATASET '\nNODSNMDS DC    CL44' '\nNODSNMSF DC    C' THE DATASET HAS BEEN DELETED OR RENAMED.  '\n         DC    CL20' '\nMISCERMS DS    0CL133\nMISCERCC DC    C' '\nMISCERP1 DC    C' ON PACK '\nMISCERVL DC    C'XXXXXX'\nMISCERP2 DC    C', DATASET '\nMISCERDS DC    CL44' '\nMISCERSF DC    C' THERE WAS AN ERROR DOING THE OBTAIN.      '\n         DC    CL20' '\nHEADR1DS DC    CL44'A&&P SOURCE MODULE STAGE 2 ERROR REPORT'\nERRCNTPT DC    XL8'4020202020202120'\nERRCNTLT DC    C'-     DATASETS SKIPPED BECAUSE OF ERRORS:'\n         DC    C' '\nBLANKSMS DS    0CL133\n         DC    CL133' '\nHEADERMS DS    0CL133\n         DC    CL133' '\nERRCNTMS DS    0CL133\n         DC    CL133' '\n         DC    C'     '\nISSTILL  CAMLST SEARCH,PODSN,VOLUME,CAMWORK\nCAMWORK  DS    CL140\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WVOLRUNI": {"ttr": 4617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x92\\x18O\\x01\\x01\\x05/\\x18 \\x001\\x00.\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "2001-02-21T18:20:00", "lines": 49, "newlines": 46, "modlines": 0, "user": "WSBG"}, "text": "//WVOLRUNI PROC MEM=,\n//          STG1DS0=,\n//          STG2DS=\n//*\n//* GATHER MEMBER DATA FOR MODULE INVENTORY SYSTEM\n//*\n//SORT0010 EXEC PGM=SYNCSORT\n//STEPLIB  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//SORTOF1  DD  DSN=&&DSR0,DISP=(,PASS),\n//         SPACE=(23476,(10,10),,,ROUND),\n//         UNIT=SYSDA,DCB=(RECFM=VB,LRECL=264,BLKSIZE=23476)\n//SORTOF2  DD  DSN=&&DSR1,DISP=(,PASS),\n//         SPACE=(23476,(10,10),,,ROUND),\n//         UNIT=SYSDA,DCB=(RECFM=VB,LRECL=264,BLKSIZE=23476)\n//SORTOF3  DD  DSN=&&DSR2,DISP=(,PASS),\n//         SPACE=(23476,(10,10),,,ROUND),\n//         UNIT=SYSDA,DCB=(RECFM=VB,LRECL=264,BLKSIZE=23476)\n//SORTWK01 DD  DSN=*.STEP0010.ALLC0010.SORTWK01,DISP=(OLD,PASS)\n//SORTWK02 DD  DSN=*.STEP0010.ALLC0010.SORTWK02,DISP=(OLD,PASS)\n//STG1DS0  DD  DSN=&STG1DS0.(&MEM),DISP=(OLD,KEEP)\n//SYSIN    DD  DSN=WSBG.WVOL.SOURCE(WVOLSRT2),DISP=SHR\n//SYSOUT   DD SYSOUT=*\n//LOAD0020 EXEC PGM=WVOLCOL0,REGION=4096K,COND=(4,LT,SORT0010)\n//STEPLIB  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//SYSPRINT DD  SYSOUT=*\n//INDSR0   DD  DSN=&&DSR0,DISP=(OLD,PASS)\n//OUTMBR0  DD  DSN=&&MBR0,DISP=(,PASS),\n//         SPACE=(23476,(50,50),,,ROUND),\n//         DCB=(RECFM=VB,LRECL=264,BLKSIZE=23476),UNIT=SYSDA\n//SYSUDUMP DD  SYSOUT=*\n//SRCE0030 EXEC PGM=WVOLCOL1,REGION=4096K,COND=(4,LT,SORT0010)\n//STEPLIB  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//INDSR1   DD  DSN=&&DSR1,DISP=(OLD,PASS)\n//OUTMBR1  DD  DSN=&&MBR1,DISP=(,PASS),\n//          SPACE=(23476,(50,50),,,ROUND),\n//          DCB=(RECFM=VB,LRECL=264,BLKSIZE=23476),UNIT=SYSDA\n//SORT0040 EXEC PGM=SYNCSORT,COND=((4,LT,LOAD0020),(4,LT,SRCE0030))\n//SORTIN   DD  DSN=&&DSR0,DISP=(OLD,DELETE)\n//         DD  DSN=&&DSR1,DISP=(OLD,DELETE)\n//         DD  DSN=&&DSR2,DISP=(OLD,DELETE)\n//         DD  DSN=&&MBR0,DISP=(OLD,DELETE)\n//         DD  DSN=&&MBR1,DISP=(OLD,DELETE)\n//SORTOUT  DD  DSN=&STG2DS.(&MEM),DISP=(MOD,KEEP)\n//SORTWK01 DD  DSN=*.STEP0010.ALLC0010.SORTWK01,DISP=(OLD,PASS)\n//SORTWK02 DD  DSN=*.STEP0010.ALLC0010.SORTWK02,DISP=(OLD,PASS)\n//SYSIN    DD  DSN=WSBG.WVOL.SOURCE(WVOLSRT5),DISP=SHR\n//SYSOUT   DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLRUN1": {"ttr": 4619, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x10\\x00\\x00\\x00\\x89'_\\x00\\x97\\x14\\x9f\\x10B\\x00\\x10\\x00\\x0e\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.16", "flags": 0, "createdate": "1989-10-02T00:00:00", "modifydate": "1997-05-29T10:42:00", "lines": 16, "newlines": 14, "modlines": 0, "user": "WSBG"}, "text": "//WVOLRUN1 PROC RUNVOL=,VOLUME=,\n//             STG1DS=\n//COLL0005 EXEC PGM=WVOLCOLL\n//OUTDSR   DD  DSN=&&DSR,DISP=(,PASS),SPACE=(23476,(10,10),,,ROUND),\n//         DCB=(RECFM=VB,LRECL=264,BLKSIZE=23476),UNIT=SYSDA\n//SYSIN    DD  DUMMY\n//SYSPRINT DD  SYSOUT=*\n//TGTVOL   DD  UNIT=SYSDA,DISP=SHR,VOL=SER=&VOLUME\n//SORT0010 EXEC PGM=SYNCSORT,COND=(4,LT,COLL0005)\n//SORTIN   DD  DSN=&&DSR,DISP=(OLD,DELETE)\n//SORTOF1  DD  DSN=&STG1DS.(&RUNVOL),DISP=(MOD,PASS)\n//SORTOF2  DD  DSN=&&STG1WK(&RUNVOL),DISP=(MOD,PASS)\n//SORTWK01 DD  DSN=*.STEP0010.ALLC0010.SORTWK01,DISP=(OLD,PASS)\n//SORTWK02 DD  DSN=*.STEP0010.ALLC0010.SORTWK02,DISP=(OLD,PASS)\n//SYSIN    DD  DSN=W$$.CNTLLIB(WVOLSRT1),DISP=SHR\n//SYSOUT   DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLSRT2": {"ttr": 4621, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x10O\\x00\\x92\\x10_\\tW\\x00\\x06\\x00\\x06\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-04-13T00:00:00", "modifydate": "1992-04-14T09:57:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "WSBG"}, "text": "  SORT FIELDS=(9,1,CH,A,11,44,CH,A),SIZE=E300\n  RECORD TYPE=V,LENGTH=(150,,,150)\n  MODS E15=(WVOLCOLX,400000,,N)\n  OUTFIL FILES=1,INCLUDE=(9,1,CH,EQ,X'00',OR,10,1,CH,EQ,X'00')\n  OUTFIL FILES=2,INCLUDE=(9,1,CH,EQ,X'00',OR,10,1,CH,EQ,X'01')\n  OUTFIL FILES=3,INCLUDE=(9,1,CH,NE,X'00',AND,10,1,CH,GT,X'01')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WVOLSRT5": {"ttr": 4623, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x10O\\x00\\x92\\x10_\\x13X\\x00\\x03\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-04-13T00:00:00", "modifydate": "1992-04-14T13:58:00", "lines": 3, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "  SORT FIELDS=(5,5,CH,A),SIZE=E50000,EQUALS\n  RECORD TYPE=V,LENGTH=(264,,,12,,76,40)\n  MODS E35=(WVOLCOLN,256,,N)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XLIB": {"ttr": 4625, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x04\\x0f\\x01\\x01\\x04\\x0f\\x10Q\\x000\\x000\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-09T00:00:00", "modifydate": "2001-02-09T10:51:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "WSBG"}, "text": "LL HBB6603    S$A.LINKLIB\nLL HBB6603    S$A.LINKTRI\nLL HBB6603    S$A.LPALIB\nLL HBB6603    S$A.LPATRI\nLL OS390R3    SPP.LINKLIB\nLL OS390R3    SPP.LPALIB\nLL HTE25D2    SYS1.CMDLIB\nLL HBB6603    SYS1.CSSLIB\nLL HBB6603    SYS1.LINKLIB\nLL HBB6603    SYS1.LINKMVS\nLL HBB6603    SYS1.LPALIB\nLL HBB6603    SYS1.LPAMVS\nLL HBB6603    SYS1.MIGLIB\nLL HBB6603    W$$.LINKLIB\nLL HBB6603    W$$.LPALIB\nCL OS390R3    S$A.TRIAL.CLIST\nCL OS390R3    W$$.CLIST\nCL OS390R3    S$A.CLIST\nCL HIF4402    SYS1.ISPF.CLIB\nCL HIF4402    SPP.ISPF.CLIB\nPN HIF4402    S$$.ISPF.PLIB\nPN HIF4402    SYS1.ISPF.PLIB\nPN HIF4402    SPP.ISPF.PLIB\nMS HIF4402    S$$.ISPF.MLIB\nMS HIF4402    SYS1.ISPF.MLIB\nMS HIF4402    SPP.ISPF.MLIB\nSK HIF4402    S$$.ISPF.SLIB\nSK HIF4402    SYS1.ISPF.SLIB\nSK HIF4402    SPP.ISPF.SLIB\nTB HIF4402    S$$.ISPF.TLIB\nTB HIF4402    SYS1.ISPF.TLIB\nTB HIF4402    SPP.ISPF.TLIB\n   HDZ11C0    SYS1.DBBLIB\nHE HBB6603    SYS1.HELP\nNL HDZ11C0    SYS1.IMAGELIB\nCN OS390R3    SYS1.IPLPARM\nMA HBB6603    SYS1.MACLIB\nMA HBB6603    SYS1.MODGEN\nLL HBB6603    SYS1.NUCLEUS\nPA OS390R3    SYS1.PARMLIB\nPR OS390R3    SYS1.PROCLIB\n   J0HL14F    SYS1.PSFFONTB\n   J0HL152    SYS1.PSFFONT3\nPA OS390R3    SYS1.TCPPARMS\nLL JBT1112    SYS1.TELCMLIB\n   OS390R3    SYS1.UADS\nLL HVT4401    SYS1.VTAMLIB\nLL KODAK10    SPP.KOM.STARLINK\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT504/FILE504.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT504", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}