*          DATA SET 00MA2456   AT LEVEL 001 AS OF 06/11/75
DATECNVT CSECT                                                          00001
         TITLE '"DATECNVT" - DATE CONVERSION SUBROUTINE'                00002
*********************************************************************** 00003
*        THIS SUBROUTINE PERFORMS DATE CONVERSION AND DATE RETRIEVAL  * 00004
* FOR THE INVOKING PROGRAM. ON ENTRY, REGISTER 1 MUST POINT TO A PARM * 00005
* AREA WITHIN THE INVOKER'S STORAGE. THE CONTENTS OF THE 1ST THREE    * 00006
* FIELDS INDICATE WHAT CONVERSION IS DESIRED:                         * 00007
*                                                                     * 00008
*        1. IF THE 1ST FIELD IN THE PARM LIST CONTAINS A NON-BINARY   * 00009
*           ZERO VALUE, THEN THE SUBROUTINE ASSUMES THAT IT IS A VALID* 00010
*           JULIAN DATE, AND PERFORMS ALL CONVERSIONS NECESSARY TO    * 00011
*           FILL IN THE REST OF THE LIST.                             * 00012
*        2. IF THE 1ST FIELD IS BINARY ZEROES, AND THE SECOND FIELD   * 00013
*           CONTAINS A VALUE, THE SUBROUTINE CONVERTS THE SECOND FIELD* 00014
*           (PACKED CALENDAR DATE), AND FILLS IN THE REST OF THE LIST,* 00015
*           INCLUDING THE 1ST FIELD - (PACKED JULIAN DATE).           * 00016
*        3. IF THE 1ST TWO FIELDS ARE BINARY ZERO, AND THE THIRD      * 00017
*           CONTAINS A VALUE, THEN THE THIRD FIELD (PRINTABLE CALENDAR* 00018
*           DATE) IS CONVERTED TO FILL IN THE REST OF THE FIELDS,     * 00019
*           INCLUDING THE 1ST TWO.                                    * 00020
*        4. IF ALL THREE OF THE 1ST FIELDS ARE BINARY ZERO,           * 00021
*           IPL DATE IS RETRIEVED, AND THE ENTIRE LIST IS FILLED IN.  * 00022
*        5. IF MORE THAN ONE OF THE 1ST THREE FIELDS CONTAINS A       * 00023
*           VALID VALUE, THE SUBROUTINE PERFORMS CONVERSION ON THE    * 00024
*           FIRST ONE ENCOUNTERED, AND OVERLAYS THE OTHER(S).         * 00025
*                                                                     * 00026
*        THE SUBROUTINE DOES PERFORM DATE CONTENT AND VALIDITY CHECK- * 00027
* ING, AND WILL ISSUE THE FOLLOWING RETURN CODES IN REGISTER 15, ON   * 00028
* RETURN TO THE INVOKING PROGRAM:                                     * 00029
*                                                                     * 00030
*        R15 = 0 MEANS SUCCESSFUL COMPLETION                          * 00031
*        R15 = 4 MEANS INVALID DATE WAS PASSED; E.G. THE 32ND DAY OF  * 00032
*                MONTH, JULIAN DATE OF 000, ETC. NO CONVERSION        * 00033
*                HAS BEEN PERFORMED.                                  * 00034
*        R15 = 8 MEANS THAT NON-NUMERIC DATE HAS BEEN PASSED IN A     * 00035
*                FIELD; NO CONVERSION HAS BEEN PERFORMED.             * 00036
*        R15 = 12 MEANS THAT THE PARM LIST WAS NOT DOUBLEWORD         * 00037
*                ALIGNED; NO CONVERSION PERFORMED.                    * 00038
*                                                                     * 00039
*        THE PARM LIST PROVIDED BY THE INVOKING PROGRAM MUST HAVE     * 00040
* THE FOLLOWING FORMAT, AND BE DOUBLEWORD ALIGNED:                    * 00041
*                                                                     * 00042
* PARMLIST DS    0D                                                   * 00043
* PACKJUL  DC    PL3'YYDDD'        * PACKED JULIAN DATE; Y=YEAR, D=DAY* 00044
* PACKCAL  DC    PL4'MMDDYY'       * PACKED CALENDAR DATE; E.G.       * 00045
* *                                * PL4'123175'                      * 00046
* PRNTCAL  DC    CL8'MM/DD/YY'     * PRINTABLE CALENDAR DATE; E.G.    * 00047
* *                                * CL8'12/31/75' - YOU MUST CODE    * 00048
* *                                * IN THE SLASHES                   * 00049
* MNTHLNTH DS    XL1               * CONTAINS BINARY LENGTH OF NEXT   * 00050
* *                                * FIELD, ON RETURN TO INVOKING PROG* 00051
* MNTHNAME DS    CL9               ( CONTAINS NAME OF MONTH, LEFT     * 00052
* *                                * JUSTIFIED, RIGHT BLANK FILLED ON * 00053
* *                                * RETURN - E.G. C'APRIL    '       * 00054
* DAYLNTH  DS    XL1               * BINARY LENGTH OF NEXT FIELD      * 00055
* DAYNAME  DS    CL9               * NAME OF DAY OF WEEK, ON RETURN   * 00056
* *                                * - E.G. C'SUNDAY   '              * 00057
* WORK     DS    CL21              * WORK AREA                        * 00058
*                                                                     * 00059
*        THIS CODE IS REENTRANT AS IT STANDS. IF THE INVOKING PROG-   * 00060
* RAM IS REENTRANT (INCLUDING THE PARM LIST PASSED TO THIS SUBROUTINE)* 00061
* THEN THIS SUBROUTINE WILL NOT VIOLATE THAT REENTRANCY.  ON RETURN   * 00062
* ALL OF THE INVOKING PROGRAMS REGISTERS WILL BE RETURNED INTACT,     * 00063
* WITH THE EXCEPTION OF R15, WHICH IS USED TO PASS THE RETURN CODE.   * 00064
*                                                                     * 00065
*        - DENNIS BUSWELL, DEPT OF ADMIN, SYSTEMS TECH, 5/5/75        * 00066
*                                                                     * 00067
*********************************************************************** 00068
         EJECT                                                          00069
         USING *,R15               * ESTABLISH E.P REG AS BASE          00070
         B     AROUNDID            * BRANCH AROUND                      00071
         DC    C'DATECNVT'         *    I.D.                            00072
AROUNDID STM   R14,R5,12(R13)      * SAVE INVOKER'S REGISTERS           00073
         LR    R3,R1               * TRANSFER PARMLIST ADDRESS          00074
         USING PARMLIST,R3         *    & ESTABLISH ADDRESSABILITY      00075
         CLC   PACKJUL(15),=4F'0'  * DOES HE WANT IPL DATE ?            00076
         BNE   CHCKPARM            * - NO, GO EDIT PARM FIELD           00077
         LR    R4,R15              * - YES, SAVE OUR BASE REG           00078
         TIME                                                           00079
         LR    R15,R4              * RESTORE OUR BASE REG               00080
         STCM  R1,7,PACKJUL        * FORCE DATE INTO JULIAN AREA        00081
         SPACE 2                                                        00082
CHCKPARM EQU   *                   * ROUTINE TO INSURE VALID DATA       00083
*                                  * WAS PASSED                         00084
         SR    R1,R1               * PRECLEAR R1                        00085
         LR    R0,R3               * TRANSFER PARM LIST ADDRESS         00086
         SRDL  R0,3                * SHIFT LOWEST ADDR BITS TO R1       00087
         LTR   R1,R1               * WERE THEY ALL ZEROES ?             00088
         BZ    DECODE              * - YES, CONTINUE ON                 00089
         MVC   DOUB(2),=H'12'      * - NO, SET APPROPRIATE RETURN CODE  00090
         B     RETURN              *    AND GO GET OUT                  00091
         SPACE 2                                                        00092
DECODE   EQU   *                   * ROUTINE TO FIND OUT WHAT           00093
*                                  *    CONVERSION HE WANTS             00094
         CLC   PACKJUL,=4F'0'      * IS JULIAN DATE CODED ?             00095
         BNE   CNVTJUL             * - YES, GO EDIT IT                  00096
         CLC   PACKCAL,=4F'0'      * HOW ABOUT PACKED CALENDAR ?        00097
         BNE   CNVTCAL             * - YES, GO DO IT                    00098
         SPACE 2                                                        00099
CNVTPRNT MVC   WORK(2),PRNTCAL     * - MUST BE PRINTABLE CAL DATE       00100
         MVC   WORK+2(2),PRNTCAL+3 *     SO LET'S PACK THE NUMERIC      00101
         MVC   WORK+4(2),PRNTCAL+6 *        PORTION OF IT               00102
         PACK  PACKCAL,WORK(6)     *           FOR EDIT SUBROUTINE      00103
         SPACE 2                                                        00104
CNVTCAL  LA    R1,PACKCAL          * POINT TO FIELD                     00105
         BAL   R5,EDIT             *    AND GO EDIT IT                  00106
         MVC   DOUB+6(2),PACKCAL+2 * PUT CAL YEAR INTO PARM AREA        00107
         BAL   R5,TESTLEAP         *    & GO SET LEAP YR SWITCH         00108
         BAL   R5,CALRANGE         * GO SEE IF THIS CAL DATE'S IN RANGE 00109
         BAL   R5,CALTOPRT         * GO CNVRT PACKED CAL TO PRINTABLE   00110
         BAL   R5,CALTOJUL         * GO CONVERT CAL TO JULIAN           00111
         BAL   R5,BLDMONTH         * NOW GO BUILD NAME OF MONTH         00112
         BAL   R5,BLDDAY           *    AND DAY FIELDS                  00113
         B     GOODEND             *        AND GET OUT                 00114
         SPACE 2                                                        00115
CNVTJUL  EQU   *                                                        00116
         NI    DOUB+4,0            * PRECLEAR 1ST BYTE OF FULLWORD      00117
         MVC   DOUB+5(3),PACKJUL   * PUT PKD JULIAN INTO WORK AREA      00118
         LA    R1,DOUB+4           * POINT TO IT,                       00119
         BAL   R5,EDIT             *    AND GO EDIT IT                  00120
         SR    R1,R1               * PRECLEAR WORK REG                  00121
         IC    R1,PACKJUL          * PICK UP JULIAN YEAR                00122
         SLL   R1,4                * MAKE ROOM FOR SIGN                 00123
         STH   R1,DOUB+6           *   AND PUT YEAR IN PARM AREA        00124
         BAL   R5,TESTLEAP         *        THEN GO SET LEAP SWITCH     00125
         MVC   DOUB+6(2),PACKJUL+1 * PUT JULIAN DAYS INTO WORK AREA     00126
         CVB   R1,DOUB             * CONVERT JULIAN DAYS                00127
         STH   R1,BNRYJDAY         * SAVE IT FOR LATER                  00128
         LTR   R1,R1               * IS JULIAN DATE ZERO ?              00129
         BZ    BADJUL              * - YES, GO SET R.C. AND GET OUT     00130
         LA    R2,365              * PRELOAD # OF DAYS IN REG YEAR      00131
         AH    R2,LEAPSAVE         * ADD IN ANY LEAPYEAR ADJUSTMENT     00132
         CR    R1,R2               * IS JULIAN IN RANGE ?               00133
         BNH   JULIANOK            * - YES, CONTINUE                    00134
BADJUL   MVC   DOUB(2),=H'4'       * - NO, SET RETURN CODE              00135
         B     RETURN              *    AND GET OUT NOW                 00136
         SPACE 1                                                        00137
JULIANOK BAL   R5,JULTOCAL         * GO CONVERT JULIAN TO PACKED CAL    00138
         BAL   R5,CALTOPRT         *    AND THEN CAL TO PRTABLE CAL     00139
         BAL   R5,BLDMONTH         *        THEN NAME OF MONTH AND      00140
         BAL   R5,BLDDAY           *            YEAR FIELDS             00141
         SPACE 5                                                        00142
GOODEND  XC    DOUB(2),DOUB        * SET RETURN CODE =0 - EVERYTHING OK 00143
         SPACE 1                                                        00144
RETURN   LM    R14,R5,12(R13)      * NOW RESTORE ALL OF INVOKER'S REGS  00145
         DROP  R3                  * CHANGE BASE REGS FOR PARM LIST     00146
         USING PARMLIST,R1         *    BACK TO R1                      00147
         LH    R15,DOUB            * LOAD RETURN CODE,                  00148
         BR    R14                 *    AND RETURN TO INVOKING PROGRAM  00149
         DROP  R1                  * NOW REESTABLISH ADDRESSABILITY     00150
         USING PARMLIST,R3         *    FOR "PARMLIST" WITH R3 FOR      00151
*                                  *        REMAINDER OF CODE           00152
         EJECT                                                          00153
         SPACE 5                                                        00154
**************************** SUBROUTINES ****************************** 00155
         SPACE 3                                                        00156
TESTLEAP EQU   *             ******* SUBROUT TO SET LEAP YR SWITCH      00157
         MVC   LEAPSAVE,=H'1'      * PRESET SWITCH TO "IT'S LEAP YEAR"  00158
         NC    DOUB,=X'0000000000000FF0' * "AND" OUT EXTRANEOUS BITS    00159
         OI    DOUB+7,X'0F'        * FORCE IN PACKED SIGN               00160
         CVB   R1,DOUB             * CONVERT IT TO BINARY               00161
         STC   R1,DOUB+7           *   THEN PUT IT BACK FOR TESTING     00162
         TM    DOUB+7,B'00000011'  * IS IT LEAP YEAR ?                  00163
         BZR   R5                  * - YES, GET OUT - WE'RE ALL SET     00164
         NI    LEAPSAVE+1,0        * - NO, RESET LEAP SWITCH            00165
         BR    R5                  *    AND GET OUT                     00166
         SPACE 5                                                        00167
BLDMONTH EQU   *              ****** SUBROUTINE TO BUILD NAME OF MONTH  00168
         LH    R1,BNRYMNTH         *    & PICK UP MONTH # IN BINARY     00169
         BCTR  R1,0                * ADJUST FOR TABLE                   00170
         MH    R1,=H'10'           * MULTIPLY BY TABLE ENTRY LENGTH     00171
         LA    R1,MONTHTAB(R1)     * GET ADDR OF ENTRY WE WANT          00172
         MVC   MNTHLNTH(L'MNTHLNTH+L'MNTHNAME),0(R1) * MOVE IT INTO     00173
*                                  * USERS PARM FIELD                   00174
         BR    R5                  * RETURN TO POINT OF INVOCATION      00175
         SPACE 5                                                        00176
CALTOPRT EQU   *              ****** SUBROUTINE TO CONVERT PACKED CAL   00177
*                                  *    DATE TO PRINTABLE CALENDAR      00178
         MVC   WORK(10),=X'40202020612020612120' * MOVE IN EDIT PATT    00179
         ED    WORK(10),PACKCAL    * EDIT PACKED CAL DATE TO PRTABLE    00180
         MVC   PRNTCAL,WORK+2      * MOVE RESULT INTO USER PARM FIELD,  00181
         BR    R5                  *    AND RETURN TO POINT OF INVOC    00182
         SPACE 5                                                        00183
JULTOCAL EQU   *              ****** SUBROUT TO CALC CAL DATE FROM JUL  00184
         LH    R1,BNRYJDAY         * PICK UP BINARY JULIAN DATE         00185
         LH    R2,LEAPSAVE         *    & LEAP YEAR INDICATOR           00186
         MH    R2,TABLNGTH         * MULTIPLY BY TABLE LENGTH           00187
         LA    R2,REGYEAR(R2)      *    & GET ADDR OF APPROP TABLE      00188
         LA    R4,1                * PRELOAD OUR MONTH COUNTER          00189
         SPACE 1                                                        00190
LOOPIT   CH    R1,2(R2)            * IS JULIAN GRTR = TABLE VALUE ?     00191
         BNH   GOTCHA              * - YES, GET OUT                     00192
         LA    R4,1(R4)            * - NO, ADD 1 TO MONTH COUNT         00193
         LA    R2,2(R2)            *    POINT TO NEXT ENTRY             00194
         B     LOOPIT              *        & GO TRY AGAIN              00195
         SPACE 1                                                        00196
GOTCHA   SH    R1,0(R2)            * SUBTRACT TABLE ENTRY FROM JULIAN   00197
*                                  *    TO GET DAY OF MONTH             00198
         STH   R4,BNRYMNTH         * SAVE BINARY MONTH # FOR LATER      00199
         MH    R4,=H'10000'        * SHIFT MONTH OVER 4 DEC PLACES      00200
         MH    R1,=H'100'          * SHIFT DAYS OVER 2                  00201
         AR    R4,R1               * CONCATENATE MONTH AND DAYS         00202
         SR    R1,R1               * PRECLEAR WORK REG                  00203
         IC    R1,PACKJUL          * PICK UP YEAR                       00204
         SLL   R1,4                * MAKE ROOM FOR SIGN                 00205
         ST    R1,DOUB+4           * STORE RESULT                       00206
         OI    DOUB+7,X'0F'        * FORCE IN SIGN                      00207
         CVB   R1,DOUB             * CONVERT IT                         00208
         AR    R1,R4               * CONCATENATE MONTH, DAY, YEAR       00209
         CVD   R1,DOUB             * CONVERT RESULT                     00210
         MVC   PACKCAL,DOUB+4      *    AND PUT IT IN USER'S PARM LIST  00211
         BR    R5                  * RETURN TO POINT OF INVOCATION      00212
         SPACE 5                                                        00213
CALTOJUL EQU   *              ****** CALENDAR TO JULIAN CONVERS SUBRT   00214
         L     R1,PACKCAL          * PICK UP PACKED CALENDAR DATE       00215
         SRL   R1,4                * GET RID OF SIGN                    00216
         STC   R1,PACKJUL          *    & PUT YEAR IN JULIAN AREA       00217
         LH    R1,BNRYMNTH         * GET MONTH FROM CAL YEAR            00218
         LH    R2,LEAPSAVE         * PICK UP LEAP YEAR INDICATOR        00219
         MH    R2,TABLNGTH         * MULTIPLY BY TABLE LENGTH           00220
         LA    R2,REGYEAR(R2)      *    & GET ADDR OF APPROP TABLE      00221
         SPACE 5                                                        00222
         BCTR  R1,0                * ADJUST TO BEGIN OF TABLE           00223
         SLL   R1,1                * MULTIPLY R1 BY TABLE ENTRY LNGTH   00224
         LH    R2,0(R2,R1)         * PICK UP ENTRY FROM TABLE           00225
         AH    R2,BNRYCDAY         * PICK UP MONTH # IN BINARY          00226
         STH   R2,BNRYJDAY         * STORE JULIAN DATE FOR LATER        00227
         CVD   R2,DOUB             * CONVERT IT BACK                    00228
         MVC   PACKJUL+1(2),DOUB+6 *    & PUT RESULT IN PARM LIST       00229
         BR    R5                  * RETURN TO POINT OF INVOCATION      00230
         SPACE 5                                                        00231
BLDDAY   EQU   *              ****** SUBROUT TO BUILD NAME OF DAY       00232
*                                  *    OF WEEK                         00233
         MVC   WORK(2),CENTURY     * PUT CENTURY AND                    00234
         MVC   WORK+2(2),PRNTCAL+6 *    YEAR IN WORK AREA               00235
         PACK  DOUB,WORK(4)        * PACK THEM                          00236
         CVB   R1,DOUB             *    & CONVERT THEM                  00237
         ST    R1,WORK             * SAVE THIS VALUE                    00238
         BCTR  R1,0                * BACK OFF 1 TO GET CENT-YEAR - 1    00239
         LR    R2,R1               * SAVE THIS, TOO                     00240
         SRL   R1,2                * DIVIDE CENT-YEAR -1 / 4            00241
         LR    R14,R1              * SAVE THIS                          00242
         LR    R1,R2               * RESTORE CENT-YEAR - 1              00243
         SR    R0,R0               * PRECLEAR EVEN DIVIDE REG           00244
         D     R0,=F'400'          * DIVIDE IT BY 400                   00245
         LR    R4,R1               * SAVE RESULT                        00246
         SR    R0,R0               * RECLEAR EVEN DIVIDE REG            00247
         LR    R1,R2               * RESTORE  CENT-YEAR - 1             00248
         D     R0,=F'100'          * DIVIDE IT BY 100                   00249
         LH    R0,BNRYJDAY         * PICK UP JULIAN DAY IN BINARY       00250
         A     R0,WORK             * ADD CENT-YEAR TO JULIAN            00251
         AR    R0,R4               * ADD IN CENT-YEAR - 1 / 400         00252
         AR    R0,R14              * ADD IN CENT-YEAR - 1 / 4           00253
         SR    R0,R1               * SUBTRACT CENT-YEAR - 1 / 100       00254
         LR    R1,R0               * TRANSFER TO ODD DIVIDE REG         00255
         SR    R0,R0               * PRECLEAR EVEN DIVIDE REG           00256
         D     R0,=F'7'            * DIVIDE BY SEVEN                    00257
         LR    R1,R0               * GET REMAINDER OUT OF R0            00258
         MH    R1,=H'10'           * MULTIPLY BY TABLE ENTRY LNGTH      00259
         LA    R1,DAYTAB(R1)       * GET ADDRESS OF OUR ENTRY           00260
         MVC   DAYLNTH(L'DAYLNTH+L'DAYNAME),0(R1) * MOVE RESULT TO      00261
*                                  *    USER PARM LIST                  00262
         BR    R5                  * RETURN TO POINT OF INVOCATION      00263
         SPACE 5                                                        00264
EDIT     EQU   *              ****** SUBROUT TO CHECK FOR VALID PACKED  00265
*                                  *    DATA IN A 4 BYTE FIELD POINTED  00266
*                                  *        TO BY R1 AT ENTRY           00267
         TM    3(R1),B'00001100'   * 1ST TWO DIGITS OF SIGN VALID ?     00268
         BNO   BADDIGIT            * - NO, GO SET R.C. & GET OUT        00269
         TM    3(R1),B'00000011'   * HOW ABOUT LAST TWO ?               00270
         BM    BADDIGIT            * - NO, DO LIKEWISE                  00271
         L     R0,0(R1)            * LOAD PACKED DATA INTO R1           00272
         SRL   R0,4                * SHIFT OUT PACKED SIGN              00273
         SPACE 1                                                        00274
EDLOOP   SR    R1,R1               * PRECLEAR ODD REGISTER              00275
         SRDL  R0,4                * SHIFT ONE PACKED DIGIT INTO R1     00276
         CL    R1,=X'90000000'     * IS DIGIT GREATER THAN 9 ?          00277
         BH    BADDIGIT            * - YES, GO SET R.C. & GET OUT       00278
         LTR   R0,R0               * ARE WE OUT OF DIGITS ?             00279
         BNZ   EDLOOP              * - NO, KEEP IT UP                   00280
         BR    R5                  * - YES, RETURN TO POINT OF INVOC    00281
         SPACE 1                                                        00282
BADDIGIT MVC   DOUB(2),=H'8'       * SET RETURN CODE TO APPROPIATE      00283
         B     RETURN              *    VALUE & GO GET OUT              00284
         SPACE 5                                                        00285
CALRANGE EQU   *              ****** SUBROUTINE TO VALIDATE DAY OF      00286
*                                  * MONTH - MAKE SURE THAT THE 32ND    00287
*                                  * OF FEBRUARY HAS NOT BEEN PASSED    00288
         XC    DOUB(6),DOUB        * PRECLEAR WORK AREA                 00289
         MVC   DOUB+6(2),PACKCAL   * PUT X'0MMD' IN WORK AREA           00290
         OI    DOUB+7,X'0F'        * FORCE IN PACKED SIGN               00291
         CVB   R1,DOUB             * CONVERT IT                         00292
         CH    R1,=H'12'           * IS MONTH GRTR THAN 12 ?            00293
         BH    BADMONTH            * - YES, IT'S BAD                    00294
         LTR   R1,R1               * IS MONTH ZERO ?                    00295
         BZ    BADMONTH            * - YES, GO SET R.C. & END           00296
         STH   R1,BNRYMNTH         * SAVE BINARY MONTH #                00297
         BCTR  R1,0                * ADJUST REG TO BEGIN OF TABLE       00298
         SR    R0,R0               * PRECLEAR WORK REG                  00299
         IC    R0,VALIDTAB(R1)     * PICK UP ENTRY                      00300
         MVC   DOUB+6(2),PACKCAL+1 * MOVE IN PASSED CAL DAY             00301
         OI    DOUB+7,X'0F'        * FORCE IN PACKED SIGN               00302
         NI    DOUB+6,X'0F'        * "AND" OUT LAST DIGIT OF MONTH      00303
         CVB   R2,DOUB             * CONVERT IT                         00304
         STH   R2,BNRYCDAY         * SAVE IT FOR LATER                  00305
         CH    R1,=H'1'            * IS IT  FEB ?                       00306
         BNE   NOTLEAP             * - YES, DON'T ADJUST TABLE          00307
         AH    R0,LEAPSAVE         * - NO, ADD IN ANY LEAP YR ADJUST.   00308
NOTLEAP  CR    R2,R0               * IS OUR DAY OF YEAR TO LARGE ?      00309
         BNHR  R5                  * - NO, RETURN CLEAN                 00310
         SPACE 1                                                        00311
BADMONTH MVC   DOUB(2),=H'4'       * - YES, SET APPROPRIATE RETURN CODE 00312
         B     RETURN              *    AND GO GET OUT NOW              00313
         EJECT                                                          00314
***********************  CONSTANTS, TABLES, ETC **********************  00315
         SPACE 3                                                        00316
CENTURY  DC    C'19'               * CURRENT CENTURY                    00317
         SPACE 3                                                        00318
TABLNGTH DC    AL2(ENDREGYR-REGYEAR) * LENGTH OF TABLE "REGYEAR"        00319
         SPACE 3                                                        00320
REGYEAR  DC    H'0'                * REGULAR YEAR JULIAN TABLE          00321
         DC    H'31'               *                                    00322
         DC    H'59'               *                                    00323
         DC    H'90'               *                                    00324
         DC    H'120'              *                                    00325
         DC    H'151'              *                                    00326
         DC    H'181'              *                                    00327
         DC    H'212'              *                                    00328
         DC    H'243'              *                                    00329
         DC    H'273'              *                                    00330
         DC    H'304'              *                                    00331
         DC    H'334'              *                                    00332
         DC    H'365'              *                                    00333
ENDREGYR EQU   *                   * END OF ABOVE TABLE                 00334
         SPACE 3                                                        00335
LEAPYEAR DC    H'0'                * LEAP YEAR JULIAN TABLE             00336
         DC    H'31'               *                                    00337
         DC    H'60'               *                                    00338
         DC    H'91'               *                                    00339
         DC    H'121'              *                                    00340
         DC    H'152'              *                                    00341
         DC    H'182'              *                                    00342
         DC    H'213'              *                                    00343
         DC    H'244'              *                                    00344
         DC    H'274'              *                                    00345
         DC    H'305'                                                   00346
         DC    H'335'              *                                    00347
         DC    H'366'              *                                    00348
         SPACE 3                                                        00349
DAYTAB   EQU   *                   * DAY OF WEEK TABLE                  00350
         DC    X'08',C'SATURDAY '  * LENGTH OF ENTRY AND ENTRY ITSELF   00351
         DC    X'06',C'SUNDAY   '  *                                    00352
         DC    X'06',C'MONDAY   '  *                                    00353
         DC    X'07',C'TUESDAY  '  *                                    00354
         DC    X'09',C'WEDNESDAY'  *                                    00355
         DC    X'08',C'THURSDAY '  *                                    00356
         DC    X'06',C'FRIDAY   '  *                                    00357
         SPACE 3                                                        00358
MONTHTAB EQU   *                   * NAME OF MONTH TABLE                00359
         DC    X'07',C'JANUARY  '  *                                    00360
         DC    X'08',C'FEBRUARY '  *                                    00361
         DC    X'05',C'MARCH    '  *                                    00362
         DC    X'05',C'APRIL    '  *                                    00363
         DC    X'03',C'MAY      '  *                                    00364
         DC    X'04',C'JUNE     '  *                                    00365
         DC    X'04',C'JULY     ' *                                     00366
         DC    X'06',C'AUGUST   '  *                                    00367
         DC    X'09',C'SEPTEMBER'  *                                    00368
         DC    X'07',C'OCTOBER  '  *                                    00369
         DC    X'08',C'NOVEMBER '  *                                    00370
         DC    X'08',C'DECEMBER '  *                                    00371
         SPACE 3                                                        00372
VALIDTAB EQU   *                   * VALIDITY TABLE; CONTAINS LAST      00373
*                                  *     VALID DAY OF EACH MONTH        00374
         DC    FL1'31'             *                                    00375
         DC    FL1'28'             *                                    00376
         DC    FL1'31'             *                                    00377
         DC    FL1'30'             *                                    00378
         DC    FL1'31'             *                                    00379
         DC    FL1'30'             *                                    00380
         DC    FL1'31'             *                                    00381
         DC    FL1'31'             *                                    00382
         DC    FL1'30'             *                                    00383
         DC    FL1'31'             *                                    00384
         DC    FL1'30'             *                                    00385
         DC    FL1'31'             *                                    00386
         SPACE 3                                                        00387
         LTORG                                                          00388
         EJECT                                                          00389
         SPACE 5                                                        00390
***************************  DSECTS, EQUTES **************************  00391
         SPACE 5                                                        00392
**************************************************************
*   ABSOLUTE REGISTER EQUATES
**************************************************************
          SPACE
R0        EQU   0
R1        EQU   1           PARAMETER REGISTER
R2        EQU   2
R3        EQU   3
R4        EQU   4
R5        EQU   5
R6        EQU   6
R7        EQU   7
R8        EQU   8
R9        EQU   9
R10       EQU   10
R11       EQU   11
R12       EQU   12
R13       EQU   13          ADDRESS OF SAVE-AREA
R14       EQU   14          RETURN REGISTER
R15       EQU   15
          SPACE
**************************************************************
*   CONDITIONAL VALUES
**************************************************************
          SPACE
*   AFTER COMPARE INSTRUCTIONS (A:B)
          SPACE
H         EQU   2           A HIGH
L         EQU   4           A LOW
E         EQU   8           A EQUAL B
NH        EQU   13          A NOT HIGH
NL        EQU   11          A NOT LOW
NE        EQU   7           A NOT EQUAL B
          SPACE
*   AFTER ARITHMETIC INSTRUCTIONS
          SPACE
O         EQU   1           OVERFLOW     (AFTER TM - ALL ONES)
P         EQU   2           PLUS
M         EQU   4           MINUS        (AFTER TM - MIXED   )
Z         EQU   8           ZERO         (AFTER TM - ALL ZERO)
NP        EQU   13          NOT PLUS
NM        EQU   11          NOT MINUS
NZ        EQU   7           NOT ZERO
          SPACE
*   AFTER TEST UNDER MASK INSTRUCTIONS
          SPACE
NO        EQU   14          NOT ONES     (SEE ABOVE FOR O, M, & Z)
          SPACE
**************************************************************
         SPACE 3                                                        00394
PARMLIST DSECT                     * DSECT FOR INVOKER'S PARM LIST      00395
PACKJUL  DS    PL3                 * PACKED JULIAN DATE - P'YYDDD'      00396
PACKCAL  DS    PL4                 * PACKED CALENDAR DATE - P'0MMDDYY'  00397
PRNTCAL  DS    CL8                 * PRINTABLE CALENDAR DATE            00398
MNTHLNTH DS    XL1                 * LENGTH OF MONTH NAME - BINARY      00399
MNTHNAME DS    CL9                 * NAME OF MONTH - E.G. "MARCH"       00400
DAYLNTH  DS    XL1                 * LENGTH OF NAME OF DAY - BINARY     00401
DAYNAME  DS    CL9                 * NAME OF DAY - E.G. "SUNDAY"        00402
WORK     DS    CL5                 * WORK AREA                          00403
DOUB     DS    XL8                 * DOUBLEWORD WORK AREA               00404
LEAPSAVE DS    XL2                 * LEAP YEAR INDICATOR; H'0' = NON-   00405
*                                  * LEAP YEAR; H'1' = LEAP YEAR        00406
BNRYJDAY DS    XL2                 * SAVE AREA FOR BINARY JULIAN DATE   00407
BNRYMNTH DS    XL2                 *  "     "   "     "   MONTH #       00408
BNRYCDAY DS    XL2                 *  "     "   "     " DAY OF MONTH    00409
         END   DATECNVT                                                 00410
