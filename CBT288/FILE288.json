{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011647000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE288.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE288.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x05\\x06'", "DS1TRBAL": "b'm,'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xfa\\x00\\x03\\x01\\xfa\\x00\\x08\\x00\\x06'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"HELPSCRP": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x966\\x1f\\x00\\x966\\x1f\\x16%\\x00\\xd3\\x00\\xd3\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-26T00:00:00", "modifydate": "1996-12-26T16:25:00", "lines": 211, "newlines": 211, "modlines": 0, "user": "CBT249"}, "text": ")F FUNCTION\n    A TSO COMMAND TO EXECUTE 'SCRIPTW'(NSCRIPT), A TEXT FORMATTING\n    PROGRAM.\n)X SYNTAX\n\n   SCRIPT 'TEXT DATASETNAME' 'VALUELIST'\n          NOADjust/ADjust('n')/NOCEnter/CEnter('n')\n          NOCOntinue/COntinue\n          CHannel(m)/DOwn('n')\n          FNSize('n')\n          FOrmatted/UNFOrmatted\n          LINenumber('n')\n          NOMArk/MArk\n          NONUmber/NUmber/NUmber('n')\n          OFfline/ONline/TErminal\n          PAge('m')/PAge('m':'n')/NOSIngle/SIngle\n          ONEPass/TWOPass/PAsses('n')\n          NOQUiet/QUiet\n          RMSIze('n')\n          SCREen/NOSCREen\n          SEQColumn('n')\n          SREference('m')/SRLength('n')\n          NOSTATistics/STATistics\n          NOSTop/STop\n          TMargin('n')\n          NOTRanslate/TRanslate\n          UPper/NOUPper\n          WAit/NOWAit\n\n\n  REQUIRED - 'TEXT DATASETNAME', MUST INCLUDE THE QUALIFIER\n  DEFAULTS - NOADJUST,NOCONTINUE,CHANNEL(1),DOWN(64),FORMATTED,\n             LINUMBER(0),NOMARK,NONUMBER,PAGE(1:32K),PASSES(1),NOQUIET,\n             NOREVERSE,SEQCOLUMN(240),SREFERENCE(200),SRLENGTH(100),\n             NOSTOP,NOTRANSLATE,UPPER,WAIT\n\n             SCREEN IS THE DEFAULT IF THE TERMINAL IS A CRT, OTHERWISE\n             NOSCREEN. THE DETERMINATION IS BASED UPON THE VALUE OF\n             THE SCRSIZE OPERAND OF THE TERM COMMAND.\n  ALIAS    - SCR\n  NOTE     - IF A \"VALUELIST\" IS GIVEN, IT MUST BE ENCLOSED\n             IN SINGLE QUOTES (APOSTROPHES).\n\n)O OPERANDS\n   ANY NUMERIC VALUE WHICH IS A MULTIPLE OF 1024 MAY BE WRITTEN\n   IN THE FORM nK. IF A NAME BEGINS WITH 'NO', THE OPERAND IS DISABLED.\n\n))NOADJUST - CAUSES ALL OUTPUT TO BE FLUSH WITH THE LEFT MARGIN.\n             DEFAULT.\n))ADJUST('n')\n           - CAUSES ALL OUTPUT TO BE OFFSET N COLUMNS, IN RANGE 0:30.\n))BMARGIN('n')\n           - SAME EFFECT AS .BM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS BM(3).\n))NOCENTER - CAUSES ALL OUTPUT TO BE FLUSH WITH THE LEFT MARGIN.\n             DEFAULT. SAME AS NOADJUST.\n))CENTER('n')\n           - CAUSES ALL OUTPUT TO BE OFFSET N COLUMNS, IN RANGE 0:30.\n             SAME AS ADJUST.\n))NOCONTINUE\n           - TERMINATE AFTER FIRST ERROR.\n))CONTINUE - CONTINUE FORMATTING AFTER ERRORS.\n))CHANNEL('n')\n           - SPECIFIES A PRINTER CARRIAGE TAPE CHANNEL FROM 1 TO 9.\n             DEFAULT VALUE IS 1.\n))DEBUG    - FOR SYSTEMS USE ONLY.\n))DOWN('n')\n           - SPECIFIES THE NUMBER OF SPACES TO SKIP TO ARRIVE AT THE\n             TOP OF A NEW PAGE, AFTER SKIPPING TO THE CHANNEL\n             SPECIFIED IN CHANNEL('n').\n))FMARGIN('n')\n           - SAME EFFECT AS .FM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS FM(1).\n))FNSize('n')\n           - 'n' IS THE MAXIMUM NUMBER OF FOOTNOTE LINES THAT MAY BE\n             OUTSTANDING AT ONE TIME, IN THE RANGE 1:1024.\n             DEFAULT IS FNS(200).\n))FORMATTED\n           - SCRIPT FORMATTING TAKES PLACE. DEFAULT.\n))UNFORMATTED\n           - THE FILE IS PRINTED ALONG WITH ALL CONTROL LINES.\n             NO FORMATTING TAKES PLACE.\n))HMARGIN('n')\n           - SAME EFFECT AS .HM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS HM(1).\n))LINENUMBER('n')\n           - CAUSES LINE NUMBER OF RAW TEXT DATA TO BE DISPLAYED\n             ALONGSIDE FORMATTED TEXT, STARTING IN OUTPUT COLUMN 'n' OF\n             THE OUTPUT LINE, IF THAT PORTION OF THE OUTPUT IS BLANK.\n             'n' MAY BE 1:125.\n))LLENGTH('n')\n           - SAME EFFECT AS .LL n. 'n' MUST BE IN THE RANGE 1:120.\n             DEFAULT IS LL(60).\n))NOMARK   - DOES NOT MARK BOUNDARIES OF ORIGINAL INPUT. DEFAULT.\n))MARK     - MARKS THE BEGINNING OF EACH LINE OF ORIGINAL TEXT WITH\n             AN UNDERSCORE.\n))NONUMBER - SUPPRESSES THE FILE INFORMATION DISPLAY. DEFAULT.\n))NUMBER('n')\n           - CAUSES THE LINE NUMBER,FILENAME AND MEMBERNAME OF THE\n             ORIGINAL DATA TO DISPLAYED ALONGSIDE THE FORMATTED OUTPUT.\n             THE FORMATTED OUTPUT. DEFAULT J=0 DISABLES THIS FEATURE.\n))OFFLINE  - FORMATS OUTPUT FOR AN OFF-LINE DEVICE, RECOMMENDED FOR\n             THE PROOF READING STAGE.\n))ONLINE     FORMAT FOR ON-LINE OUTPUT. SAME AS TERMINAL OPERAND.\n             DEFAULT.\n))ONEPASS  - SCRIPTW WILL PROCESS THE INPUT ONLY ONCE. SAME AS PAS(1).\n))PAGE('K')\n  PAGE('K':'L')\n           - STARTS PRINTING FORMATTED OUTPUT AT PAGE 'K' AND CONTINUES\n             TO PAGE 'L'. THE SECOND OPERAND, 'L', IS EQUAL TO 'K' WHEN\n             PRINTING ONLY A SINGLE PAGE. DEFAULTS ARE PAGE(1:32K).\n             SEE EXAMPLE.\n))PASSES('N')\n           - SCRIPTW WILL PROCESS THE INPUT TEXT 'N' TIMES.\n             IN RANGE 1:10, DEFAULT IS 1.\n))PLENGTH('N')\n           - SAME EFFECT AS .PL N. 'N' MUST BE IN THE RANGE 33:132.\n             DEFAULT IS 66.\n))NOQUIET  - WRITES SCRIPTW IDENTIFICATION LINE AFTER ISSUING THE\n             SCRIPT COMMAND. DEFAULT.\n))QUIET    - SUPPRESSES SCRIPTW IDENTIFICATION LINE AFTER ISSUING THE\n             SCRIPT COMMAND.\n))LR       - DO NOT REVERSE OUTPUT TEXT. SAME AS NOREVERSE. DEFAULT.\n))NOREVERSE\n           - DO NOT REVERSE OUTPUT TEXT. DEFAULT.\n))REVERSE<('N')>\n           - REVERSE ALL OUTPUT TEXT AND PAD TO THE LEFT WITH BLANKS.\n             'N', IF SPECIFIED, MUST BE IN THE RANGE 1:144, AND HAS\n             A DEFAULT OF 66. 'N', OR IT'S DEFAULT, GIVES THE LENGTH\n             OF THE LINE TO BE REVERSED: THE TEXT WILL BE TRUNCATED\n             IF IT EXCEEDS THIS LENGTH.\n))RL<('N')>\n           - REVERSE ALL OUTPUT TEXT AND PAD TO THE LEFT WITH BLANKS.\n             'N', IF SPECIFIED, MUST BE IN THE RANGE 1:144, AND HAS\n             A DEFAULT OF 66. 'N', OR IT'S DEFAULT, GIVES THE LENGTH\n             OF THE LINE TO BE REVERSED: THE TEXT WILL BE TRUNCATED\n             IF IT EXCEEDS THIS LENGTH. SAME AS REVERSE('N').\n))RMSIZE('n')\n           - 'n' IS THE MAXIMUM NUMBER OF RECORDS THAT MAY BE IN A\n             SINGLE REMOTE DEFINITION, IN THE RANGE 1:1K.\n             DEFAULT IS RMS(200).\n))SCREEN   - ONLINE OUTPUT IS FORMATTED FOR CRT.\n             OVERPRINT LINES ARE USED RATHER THAN BACKSPACE.\n))NOSCREEN - ONLINE OUTPUT IS FORMATTED FOR NON CRT TERMINALS.\n             BACKSPACES ARE USED RATHER THAN OVERPRINT LINES.\n))NOSINGLE - MULTIPLE PAGES OF OUTPUT ARE TO BE PRODUCED. DEFAULT.\n))SINGLE   - ONLY A SINGLE PAGE OF OUTPUT IS TO BE PRODUCED.\n             PAGE('N'),SINGLE IS EQUIVALENT TO PAGE('N':'N').\n))SEQCOLUMN('S')\n           - 's' SPECIFIES WHERE THE 8 COLUMN LINE SEQUENCE NUMBER IS\n             LOCATED FOR RECFM=V OR VB, in RANGE 0:240. DEFAULT IS 1.\n             SEQC(0) MEANS NO INPUT SEQUENCING.\n))SREFERENCE('n')\n           - MAXIMUM NUMBER OF ENTRIES IN SYMBOLIC REFERENCE\n             DICTIONARY, IN RANGE 1:4096. DEFAULT IS 200.\n))SRLENGTH('n')\n           - 'n' IS THE MAXIMUM LENGTH OF ANY SYMBOLIC REFERENCE NAME,\n             IN THE RANGE 4:240. DEFAULT IS 200.\n))NOST     - DO NOT STOP AT THE BOTTOM OF EACH PAGE. SAME AS NOSTOP.\n             DEFAULT.\n))ST       - PAUSE AT THE BOTTOM OF EACH PAGE. SAME AS STOP.\n             CONTINUE WITH CARRIAGE RETURN.\n))NOSTATISTICS\n           - NO STATISTICS ON STORAGE AND CONTROL WORD USAGE ARE TO\n             BE PRINTED ON SYSTERM. DEFAULT.\n))STATISTICS\n           - STATISTICS ON STORAGE AND CONTROL WORD USAGE ARE TO BE\n             PRINTED ON SYSTERM.\n))NOSTOP   - DO NOT STOP AT THE BOTTOM OF EACH PAGE. DEFAULT.\n))STOP     - PAUSE AT THE BOTTOM OF EACH PAGE.\n             CONTINUE WITH CARRIAGE RETURN.\n))TERMINAL - FORMAT FOR ON-LINE OUTPUT. SAME AS ONLINE OPERAND.\n             DEFAULT.\n))TMARGIN('n')\n           - SAME EFFECT AS .TM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS TM(5).\n))NOTRANSLATE\n           - SUPPRESSS TRANSLATION FROM LOWER CASE TO UPPER CASE.\n             DEFAULT.\n))TRANSLATE\n           - CAUSES TRANSLATION FROM LOWER CASE TO UPPER CASE.\n))TWOPASS  - SCRIPTW WILL PROCESS THE INPUT TWICE. SAME AS PAS(2).\n))UPPER    - CAUSES ALL SET REFERENCE SYMBOLS TO BE CONVERTED TO\n             UPPER CASE BEFORE SYMBOL TABLE LOOKUP. DEFAULT.\n))NOUPPER    CAUSES ALL SET REFERENCE SYMBOLS TO BE LOOKED UP ASIS,\n             WITHOUT BEING CONVERTED FIRST TO UPPER CASE.\n))VALUELIST\n           - THE OPTIONAL SECOND POSITIONAL PARAMETER IS USED TO GIVE\n             DEFAULT VALUES TO SET REFERENCE SYMBOLS. THE SYNTAX IS\n             '+name=value +name=value &&name=value', WHERE THE\n             APOSTROPHES ARE MANDATORY AND PLUS (+) MAY BE FREELY\n             INTERCHANGED WITH AMPERSANDS (&&).\n))WAIT     - PAUSE BEFORE STARTING TO PRINT TO ALLOW PAGE ADJUSTMENT.\n             DEFAULT.\n))NOWAIT   - DO NOT PAUSE BEFORE STARTING PRINTING.\n))EXAMPLE\n  SCRIPT LETTER.TEXT SEQC(1) ON CO\n\n         MEANS FORMAT DATASET LETTER.TEXT FOR ONLINE OUTPUT.\n         LINE SEQUENCE NUMBERS OF RAW INPUT DATA ARE IN COLUMNS\n         1-8 (AS IS USUAL FOR A TEXT DATASET) AND CONTINUE\n         PROCESSING IN CASE OF ERRORS.\n\n   SCR    LETTER.TEXT '+SHAKRAN=HENRYK' PAGE(3:7)\n\n          MEANS FORMAT DATASET LETTER.TEXT AND PRINT PAGES 3-7.\n          THE SET REFERENCE SYMBOL &SHAKRAN IS SET TO THE VALUE HENRYK.\n\n   SCR    LETTER.TEXT PAGE(4:4)\n\n          MEANS FORMAT DATASET LETTER.TEXT AND PRINT ONLY PAGE 4.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SCRIPT": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x966\\x1f\\x00\\x966\\x1f\\x16%\\x07\\x90\\x07\\x90\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-26T00:00:00", "modifydate": "1996-12-26T16:25:00", "lines": 1936, "newlines": 1936, "modlines": 0, "user": "CBT249"}, "text": "*        ***   PREFACE NOTES FROM UNIVERSITY OF WATERLOO   ***\n*\n*        WE THANK THE AUTHORS FOR PASSING ON THIS TSO PROMPTER\n*        FOR \"SCRIPT\" AND TO OTHERS FOR SUBSEQUENT UPDATES.\n*\n*        IT IS NO FAULT OF THE AUTHORS THAT THIS INTERFACE ROUTINE\n*        HAS BECOME OUT OF DATE.  IT IS ENTIRELY DUE TO CHANGES\n*        AT WATERLOO THAT THEY COULD NOT HAVE FORSEEN.  SINCE\n*        THE UNIVERSITY OF WATERLOO IS NOT A TSO INSTALLATION\n*        IT WAS DECIDED NOT TO ATTEMPT TO UPDATE SOMETHING WE\n*        COULD NOT THEN TEST, BUT WE FELT OBLIGATED TO POINT\n*        OUT AREAS OF CHANGE --\n*\n*        'WORKSIZE=' IS NO LONGER A RECOGNIZED PARM.\n*        'SREFERENCE=' WHILE STILL RECOGNIZED HAS NO EFFECT.\n*\n*        'MEMO' OPTION NOT SUPPORTED BY INTERFACE\n*\n*        ***   END OF PREFACE NOTES   ***\n         EJECT\n***********************************************************************\n*\n*        TSO USE OF THE SCRIPT INTERFACE ROUTINE.\n*\n*        SYNTAX:\n*        SCRIPT IDSN '+SR=VALUE' LIBRARY(LDSN) PRINT(*|PDSN) OPTIONS\n*\n*        WHERE:\n*\n*        1. IDSN - THE PRIMARY SCRIPT INPUT FILE.\n*\n*        2. +SR=VALUE - EXTERNAL ASSIGNMENT OF SCRIPT VARIABLES\n*                       USED WITH .UR COMMANDS.\n*\n*        3. LDSN - USED TO IMBED FILES WITH .IM.\n*\n*        4. *    - SCRIPT OUTPUT TO TERMINAL.\n*           PDSN - SCRIPT OUTPUT TO DATA SET.\n*\n*        5. OPTIONS - SCRIPT OPTIONS, SEE SCRIPT USERS GUIDE.\n*\n*        NOTES:\n*\n*        1. THE ONLY REQUIRED OPERAND IS IDSN.\n*\n*\n*        2. * IS DEFAULT FOR PRINT OPERAND.\n*\n*        3. ALL DATA SET NAMES FOLLOW TSO NAMING CONVENTIONS.\n*           A DATA SET NAME ENCLOSED IN QUOTES IS FULLY QUALIFIED.\n*           A DATA SET NAME NOT ENCLOSED IN QUOTES HAS THE TSO\n*           USERID PREFIXED TO IT.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        USE OF MACROS CHECK, KEY, SUBJ, MOVEP1-MOVEP5.\n*\n*        THE KEY AND SUBF MACROS ARE USED TO GENERATE THE NECESSARY\n*        TSO INTERFACE TO TSO PARSE SERVICES.\n*        RANGE ERROR CHECKING ROUTINES ARE GENERATED USING MACRO CHECK.\n*        MACROS MOVEP1 THROUGH MOVEP5 ARE USED TO CREATE THE PARAMETER\n*        LIST FOR SCRIPT BEFORE IT IS CALLED.\n*        THESE MACROS ARE INTER-DEPENDENT AND MUST BE USED ARE SHOWN.\n*\n*        THE REASON THAT A PARAMETER LIST MUST BE CONSTRUCTED FROM THE\n*        LIST OF OPTIONS WHICH THE TSO USER REQUESTS IS THAT THE SYNTAX\n*        OF THE PARAMETER FIELD ON THE EXEC JCL CARD AND THE SYNTAX OF\n*        THE OPERANDS OF A TSO COMMAND DIFFER.\n*        FOR EXAMPLE;\n*\n*        JCL -> // EXEC PGM=NSCRIPT,PARM='CO,SEQC=1,PAGE=3:4'\n*        TSO -> SCRIPT DSNAME CO SEQC(1) PAGE(3:4)\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        THESE MACROS ARE USED AS FOLLOWS.\n*\n*        SCRIPT OPTIONS, NO SUBFIELD:\n*\n*          SCRIPT OPTION - CONTINUE/CO\n*                          NOCONTINUE/NOCO - DEFAULT\n*\n*        TO GENERATE THE TSO INTERFACE SO PARSE RECOGNIZES ALL 4 OF\n*        THE KEYWORDS, CONTINUE, CO, NOCONTINUE OR NOCO CODE;\n*\n*CO      KEY   (CO,CONTINUE)\n*NOCO    KEY   (NOCO,NOCONTINUE)\n*\n*        THE LABEL FIELD ON THE KEY MACRO MUST BE THE SHORT FORM OF THE\n*        SCRIPT OPTION.  THE OPERAND OF THE KEY MACRO IS A LIST OF ALL\n*        ALLOWABLE FORMS OF THIS OPTION.  ONLY NON-DEFAULT OPTIONS ARE\n*        GENERATED IN THE SCRIPT PARAMETER WHEN SCRIPT IS CALLED.\n*        THAT IS, IF A USER SPECIFIES THE NOCO OR NOCONTINUE OPTION,\n*        THIS OPTION IS NOT GENERATED WHEN SCRIPT IS CALLED, BECAUSE\n*        IT IS THE DEFAULT.\n*        SINCE THESE OPTIONS CANNOT HAVE A VALUE ASSIGNED TO THEM, NO\n*        RANGE CHECKING IS REQUIRED.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        SCRIPT OPTION, WITH SUBFIELD.\n*\n*          SCRIPT OPTION - DOWN=N\n*                          DO=N\n*\n*        TO GENERATE THE TSO INTERFACE FOR PARSE TO RECOGNIZE THIS\n*        SYNTAX, CODE;\n*\n*DO      KEY   (DO,DOWN),SUBF=YES\n*\n*        AGAIN, THE LABEL FIELD OF THIS MACRO MUST BE THE SHORT FORM\n*        OF THE SCRIPT OPTION.\n*        BECAUSE THERE IS A SUBFIELD ASSOCIATED WITH THIS OPTION, THE\n*        FOLLOWING MACROS MUST ALSO BE CODED.\n*\n*DO      SUBF  'DOWN NUMBER',3,'MUST BE 1 TO 130'\n*\n*        AGAIN, THE LABEL FIELD OF THIS MACRO MUST BE THE SHORT FORM\n*        OF THE SCRIPT OPTION.\n*        THE FIRST OPERAND IS THE PROMPT GIVEN TO THE TSO USER BY\n*        PARSE, IF THIS OPTION IS REQUIRED.\n*        THE SECOND OPERAND IS THE MAXIMUM LENGTH OF THE SUBFIELD.\n*        ALL SUBFIELDS ARE NUMERIC FOR SCRIPT.\n*        THE THIRD OPERAND IS THE PROMPT GIVEN BY PARSE WHEN A SYNTAX\n*        ERROR, LIKE NON-NUMERIC OR INCORRECT LENGTH, IS DETECTED.\n*        FURTHER, TO CHECK THAT THE RANGE SPECIFIED FOR THIS OPTION\n*        IS VALID FOR SCRIPT, CODE;\n*\n*        CHECK DO\n*DOSTR   DC    C'130',C'1'\n*ERDO    DC    C'** ERROR ** VALID RANGE FOR DOWN IS 1-130'\n*\n*        THE CHECK MACRO USES THE CONSTANTS DOSTR TO VERIFY THAT THE\n*        RANGE FOR THIS OPTION IS VALID FOR SCRIPT.  THE LENGTH OF THE\n*        FIRST (THE UPPER LIMIT) VARIES ACCORDING TO THE OPTION,\n*        BUT THE SECOND CONSTANT (THE LOWER LIMIT) MUST HAVE A\n*        LENGTH OF ONE.\n*        THE CHECK MACRO DISPLAYS THE MESSAGE DEFINED BY ERDO WHEN A\n*        RANGE ERROR IS DETECTED.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        THAT COVERS ALL CASES EXCEPT THE SCRIPT OPTION , PAGE.\n*        THE SUBF MACRO FOR OPTION PAGE IS;\n*\n*PA      SUBF  'FIRST PAGE NUMBER',6,'PAGE NUMBERS',RANGE=YES\n*\n*        THE RANGE OPERAND IS USED TO INFORM PARSE THAT A RANGE CAN\n*        BE SPECIFIED FOR THIS OPTION.\n*        AS WELL, THE CHECK MACRO FOR PAGE MUST BE;\n*\n*        CHECK PA,CHK=NO\n*\n*        SINCE THE PAGE OPTION MAY BE A SINGLE NUMBER OR A RANGE, THE\n*        RANGE CHECK IS NON-TRIVIAL, (BUT NOT IMPOSSIBLE).\n*        ALSO, THERE REALLY IS NO INVALID RANGE, OTHER THAN INFINITY,\n*        WHATEVER THAT IS FOR A DOCUMENT.\n*        THE CHK=NO OPERAND INHIBITS RANGE CHECKING FOR THIS OPTION.\n*        TSO PARSE WILL DETECT ANY SYNTAX ERRORS AND THAT IS SUFFICIENT\n*        FOR THIS OPTION.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        CREATION OF SCRIPT PARAMETER LIST:\n*\n*        KEEPING IN MIND THAT THE TSO USER SPECIFIES\n*\n*        PAGES(37:39) DO(60) CONTINUE\n*\n*        AND THAT SCRIPT EXPECTS\n*\n*        PAGE=37:39 DO=60 CO\n*\n*        THE MACROS MOVEP1 THROUGH MOVEP5 MUST BE USED TO TRANSFORM\n*        THE OPTIONS SO SCRIPT CAN RECOGNIZE THEM.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        MACRO MOVEP1 IS USED FOR OPTIONS WITHOUT SUBFIELDS.\n*\n*        MOVEP1 CO\n*        MOVEP1 NOMA\n*\n*        ONLY NON-DEFAULT OPTIONS MUST BE GENERATED, SO IF THE TSO USER\n*        REQUESTS NOCO, THIS IS NOT PASSED TO SCRIPT.\n*        AGAIN, THE OPERAND OF THE MOVEP1 MACRO MUST BE THE SHORT FORM\n*        OF THE SCRIPT OPTION.  MOVEP1 PASSES THIS OPTION TO SCRIPT\n*        ONLY IF THE TSO USER REQUESTED IT.  MOVEP1 DETERMINES WHETHER\n*        AN OPTION HAS BEEN SPECIFIED BY THE TSO USER BY EXAMINING THE\n*        FLAGS RETURNED BY TSO PARSE SERVICES.  THE AREA FOR THESE\n*        FLAGS IS CREATED BY THE KEY MACRO.  FOR MORE DETAILS ON TSO\n*        PARSE SERVICES, SEE THE IBM MANUAL, \"TCAM PROGRAMMERS GUIDE\"\n*        FORM GC30-2040.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        MACRO MOVEP3 IS USED TO GENERATE AN OPTION WITH A SUBFIELD.\n*\n*        MOVEP3 DO\n*        MOVEP3 PAS\n*\n*        THE OPERAND MUST BE THE SHORT FORM OF THE SCRIPT OPTION.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        SINCE THE PAGE OPTION MAY HAVE A RANGE AS THE SUBFIELD\n*        MACRO MOVEP5 IS USED SPECIFICALLY FOR THIS OPTION.\n*\n*        MOVEP5 PA\n*\n*        MACROS MOVEP2 AND MOVEP4 ARE USED INTERNALLY IN MOVEP1, MOVEP3\n*        AND MOVEP5.\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*        MACRO FLAG IS USED TO DETERMINE WHETHER OUTPUT IS ONLINE OR\n*        OFFLINE.\n*\n***********************************************************************\n         EJECT\n*\n*\n*       \"NSCRIPT\"   TSO   PROMPTER\n*\n*\n*    WRITTEN BY:           GABRIEL SILBERMAN\n*                          COMPUTER CENTER\n*                          TECHNION - ISRAEL INSTITUTE OF TECHNOLOGY\n*                          TECHNION CITY - HAIFA\n*                          ISRAEL\n         SPACE 1\n*    CORRECTED BY:         SHMUEL METZ\n*                          COMPUTER CENTER\n*                          TECHNION\n         SPACE 2\n*              THIS PROGRAM MAY NOT BE DISTRIBUTED WITHOUT PERMISSION.\n*              PERMISSION TO DISTRIBUTE IS EXPLICITLY GRANTED TO:\n         SPACE 1\n*                           GERHARD POSTPISCHIL\n*                           AMS COMPUTER CENTER\n         SPACE 1\n*                           SHARE, GUIDE, AND ALL COMMITTEES AND\n*                             WORKING GROUPS THEREOF,\n*                             CBT TAPE COMES FROM SHARE MVS PROJECT\n*                             INCLUDING SPLA AND ALL PROJECTS.\n         SPACE 1\n*                           UNIVERSITY OF WATERLOO\n*                           WATERLOO - ONTARIO\n*                           CANADA\n         EJECT\n         MACRO\n&L       MOVEP1 &NAME,&LABMVC=\n&L       CLI   ##&NAME.+1,0   /IF NOT SELECTED THEN IGNORE\n         BE    BP&NAME.\n&LABMVC  MOVEP2 &NAME.\nBP&NAME. EQU   *\n         SPACE 1\n         MEND\n         SPACE 3\n         MACRO\n&L       MOVEP2 &NAME,&SIGN=BLANK\n         LCLA   &LEN\n&LEN     SETA  K'&NAME\n&L       MVC   0(&LEN,R7),=C'&NAME.'    /MOVE PARAMETER TO STRING\n         AIF   ('&SIGN' EQ 'BLANK').NOSIGN\n         MVI   &LEN.(R7),&SIGN            /INSERT SIGN AFTER PARAM.\n.NOSIGN  ANOP\n         LA    R7,1+&LEN.(,R7)          /INCREMENT OFFSET\n         MEND\n         SPACE 3\n         MACRO\n         MOVEP3 &NAME\n         TM    ##&NAME.+6,PRESENT\n         BZ    BP&NAME.       /ABSENT,IGNORE\n         MOVEP2 &NAME.,SIGN=EQUAL\n         L     R5,##&NAME.    /PTR. TO NUMBER\n         MOVEP4 &NAME.\nBP&NAME. EQU   *\n         SPACE 1\n         MEND\n         SPACE 3\n         MACRO\n         MOVEP4 &NAME\n         LH    R4,##&NAME+4   /LENGTH OF NUMBER\n         BCTR  R4,0           /-1 FOR \"EX\"\n         EX    R4,MOVEPR4     /PARM. TO PLACE\n         LA    R7,1(R4,R7)       /UPDATE OFFSET\n         MVI   0(R7),BLANK    /INSERT BLANK AFTER NUMBER\n         LA    R7,1(,R7)      /UPDATE OFFSET\n         MEND\n         SPACE\n         MACRO\n         CHECK &OPT,&CHK=YES\n         GBLC  &MCSECT\n         LCLC  &LQUOTE\n&LQUOTE  SETC  'L'''\n&OPT.CK  EQU   *\n         AIF   ('&CHK' NE 'YES').NOCHK\n         STM   R14,R12,12(R13)\n         USING &OPT.CK,R15\n         L     R12,=A(&MCSECT)\n         L     R11,=A(VDCHECK)\n         DROP  R15\n         LA    R9,&LQUOTE&OPT.STR\n         LA    R7,&OPT.STR\n         LA    R5,0(R7,R9)\n         BAL   R6,GENCK\n         LA    R2,ER&OPT\n         LA    R0,&LQUOTE.ER&OPT\n         B     ERRTPUT\n         MEXIT\n.NOCHK   ANOP\n         SR    R15,R15\n         BR    R14\n         MEND\n         SPACE\n         MACRO\n&L       MOVEP5 &NAME\n&L       TM    ##&NAME.+6,PRESENT\n         BZ    BP&NAME.\n         L     R5,##&NAME\n         LH    R4,##&NAME.+4\n         AH    R4,##&NAME.+12\n         OC    ##&NAME.+12(2),##&NAME.+12\n         BNZ   NODECR\n         BCTR  R4,0\nNODECR   DS    0H\n         MOVEP2 &NAME.,SIGN=EQUAL\n         EX    R4,MOVEPR4\n         LA    R7,1(R4,R7)\n         MVI   0(R7),BLANK\n         LA    R7,1(,R7)\nBP&NAME  EQU   *\n         MEND\n         MACRO\n&L       FLAG  &KEY,&SW,&BIT\n&L       CLI   ##&KEY+1,0\n         BE    BF&KEY\n         OI    &SW,&BIT\nBF&KEY   DS    0H\n         MEND\n         MACRO\n&LABEL   KEY   &LIST,&SUB=NO\n         LCLA  &NUM\n         LCLC  &P\n&NUM     SETA  1\n&P       SETC  '##'\n         AIF   ('&SUB' EQ 'NO').NOSUB1\n&P       SETC  ''\n.NOSUB1  ANOP\n&P&LABEL IKJKEYWD\n.MORE1   ANOP\n         AIF   ('&SUB' EQ 'NO').NOSUB2\n         IKJNAME '&LIST(&NUM)',SUBFLD=S&LIST(1)\n         AGO   .MORE2\n.NOSUB2  ANOP\n         IKJNAME '&LIST(&NUM)'\n.MORE2   ANOP\n&NUM     SETA  &NUM+1\n         AIF   (&NUM LE N'&LIST).MORE1\n         MEND\n         MACRO\n&KEY     SUBF  &EXP,&LENGTH,&HELP,&RANGE=NO\n         LCLC  &RANG\n&RANG    SETC  ''\n         AIF   ('&RANGE' EQ 'NO').NORANG\n&RANG    SETC  'RANGE'\n.NORANG  ANOP\nS&KEY    IKJSUBF\n##&KEY   IKJIDENT &EXP,&RANG, XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n               MAXLNTH=&LENGTH,FIRST=NUMERIC,OTHER=NUMERIC, XXXXXXXXXXXX\n               VALIDCK=&KEY.CK, XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n               HELP=&HELP\n         MEND\n         MACRO\n&L       ENDM  &DSECT=,&END=,&RC=\n&L       LA    R0,(&END-&DSECT)+18*4\n         LR    R1,R13\n         L     R13,4(0,R13)\n         FREEMAIN R,LV=(R0),A=(R1)\n         ST    &RC,16(0,R13)\n         LM    R14,R12,12(R13)\n         BR    R14\n         MEND\n         MACRO\n         MTITL &L\n         TITLE &L\n         MEND\n         MACRO\n         STITL &L\n         TITLE &L\n         MEND\n         MACRO\n         SAVEM &CSECTN,&DSECT=,&END=\n         GBLC  &MCSECT\n&MCSECT  SETC  '&CSECTN'\n&MCSECT  CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         STM   R14,R12,12(R13)\n         LR    R11,R1\n         LR    R12,R15\n         USING &MCSECT,R12\n         LA    R0,(&END-&DSECT)+18*4\n         GETMAIN R,LV=(R0)\n         LR    R15,R13\n         LR    R13,R1\n         ST    R13,8(0,R15)\n         ST    R15,4(0,R13)\n         USING &DSECT-18*4,R13\n         MEND\n         GBLC  &MCSECT\n         STITL 'SCRIPT -- PROMPTER FOR NSCRIPT -- GABRIEL SILBERMAN'\n         STITL 'INITIALIZATION'\nSCRIPT   SAVEM SCRIPT,DSECT=PPL,END=PPLEND\n         USING CPPL,R11\n         SPACE 1\n*\n***>   CALL IKJPARS\n*\n         SPACE 1\n         XC    ECB,ECB             /ZERO ECB\n         MVC   PPLCBUF,CPPLCBUF    /ADD. OF COMMAND BUFFER\n         MVC   PPLUPT,CPPLUPT      /ADD. OF UPT\n         MVC   PPLECT,CPPLECT      /ADD. OF ECT\n         LA    R4,ECB\n         ST    R4,PPLECB           /ADD. OF ECB\n         LA    R4,ANS\n         ST    R4,PPLANS           /ADD. OF ANSWER (FOR PARSE TO FILL)\n         MVC   PPLPCL,=A(PARSE)    /ADD. OF PCL\n         ST    R13,PPLUWA          /ADD. OF UWA (ADD. OF WORK AREA)\n         LA    R1,PPLUPT           /ADD. OF PARAMETER LIST\n         LINK  EP=IKJPARS\n         LTR   R15,R15             /TEST RETURN CODE\n         BNZ   PARSFAIL            /SQUAWK AND EXIT\n         STITL 'PARAMETER CONSTRUCTION AND ALLOCATIONS'\n         L     R10,ANS             /ADD. OF PDL\n         USING IKJPARMD,R10\n         SPACE 5\n*\n***>  PARAMETER EXAMINATION AND CONSTRUCTION OF STRING TO BE PASSED TO\n*    \"NSCRIPT\" .\n*\n*   THE FORMAT FOR THE PARAMETERS PASSED TO \"NSCRIPT\" ARE AS FOLLOWS :\n*\n*    R1 -->|00| P T R| ---> |LENGTH|STRING.........|\n*          |80| P T R| ---> |# OF ENTRIES|\n*                           |DDNAME|REPLACEMENT|\n*                             ............\n*                           |DDNAME|REPLACEMENT|\n*\n*   \"00\" AND \"80\" ARE BYTES , EACH \"PTR\" IS 3 BYTES LONG , ENTRIES IS\n* HALFWORD AND DDNAMES AND THEIR REPLACEMENTS ARE 8 BYTES LONG PADDED\n* WITH BLANKS IN THE RIGHT .\n*\n         EJECT\n         MVC   ALIASES(ALIEND-ALICONS),ALICONS  /CONSTANT DDNAMES\n         SPACE 1\n*\n*\n***>   ALLOCATE DATA SET(S) TO BE FORMATTED\n*\n*\n         SPACE 2\n         MVC   DAPLPSCB(4),CPPLPSCB /PTR TO PSCB\n         LA    R6,DA08CD            /PTR TO DAPB\n         ST    R6,DAPLDAPB\n         LA    R6,DSN               /ADD. OF FIRST PDE\n         ST    R6,CNCT1\n         MVI   RECFM,ZERO            /INITIALIZE\n         BAL   R4,SBRCNCT            /CONCAT SUBROUTINE\n         SPACE 3\n***> KEEP DDNAME\n         SPACE 1\n         USING DAPB0C,R9\n         SPACE 1\n         MVC   SYSIN+8(8),DA0CDDN\n         SPACE 2\n*\n***>  ALLOCATE \"LIB\" DATA SETS AND CONCATENATE THEM IF NECESSARY\n*\n         SPACE 1\n         LH    R6,LIB                /CHECK IF \"NOLIB\" SPECIFIED\n         CH    R6,HALFONE\n         BNE   SYSPRT                /\"NOLIB\" SPECIFIED\n         SPACE 1\n         MVC   CNCTLNG1(4),CNCTLNGT  /KEEP LENGTH OF DSN(S) AREA\n         ST    R9,CNCTADD            /KEEP ADD. OF DSN(S) AREA\n         LA    R6,LIBB               /ADD. OF FIRST PDE\n         ST    R6,CNCT1\n         BAL   R4,SBRCNCT            /CONCAT SUBROUTINE\n         SPACE 2\n***> KEEP DDNAME FOR SYSLIB\n         SPACE 1\n         MVC   SYSLIB+8(8),DA0CDDN\n         SPACE 1\n***>  SIGNAL 5 DDNAMES FOR \"NSCRIPT\"\n         SPACE 1\n         LH    R4,ALIASES\n         AH    R4,HALFONE\n         STH   R4,ALIASES     /4 -> 5\n         SPACE 2\n*\n***> ALLOCATE SYSPRINT AND CONTROL TO THE TERMINAL\n         MNOTE 4,'CHANGE TO MAKE CONTROL AND SYSPRINT PARAMETERS'\n*\n         SPACE 1\nSYSPRT   BAL   R5,TRMALC          /ALLOCATE SYSPRINT\n         SPACE 1\n***> KEEP DDNAME\n         SPACE 1\n         MVC   SYSTERM+8(8),DA1CDDN\n         SPACE 1\n         BAL   R5,TRMALC1         /ALLOCATE CONTROL\n         SPACE 1\n***> KEEP DDNAME\n         SPACE 1\n         MVC   SYSCONS+8(8),DA1CDDN\n         SPACE 3\n***> ALLOCATION OF \"SCRIPT\" (OUTPUT) FILE\n*\n         SPACE 1\n         LA    R6,PRINTT1         /ADD. OF OUTPUT DSNAME PDE\n         USING DSNDSECT,R6\n         L     R8,DSNPTRN         /PTR. TO DSNAME\n         CLI   0(R8),ASTERISK     /IS IT TERMINAL?\n         BNE   SCRNOTRM           /NO => NORMAL DSNAME\n         SPACE 2\n***>  ALLOCATE TERMINAL AS OUTPUT FILE\n         SPACE 1\n         BAL   R5,TRMALC1\n         SPACE 1\n         MVC   SYSPRINT+8(8),DA1CDDN\n         OI    SWITCH,ONLINE  INDICATE ONLINE OUTPUT\n         SPACE 1\n         B     SCRALEND                      /\"SCRIPT\" ALLOCATED\n         SPACE 2\nSCRNOTRM EQU   *\n         OI    SWITCH,OFFLINE INDICATE OFFLINE OUTPUT\n         SPACE 1\n***>  ALLOCATION OF DSNAME AS \"SCRIPT\" (OUTPUT) FILE\n         MNOTE 4,'ALLOW FOR PARTIALLY QUALIFIED DSNAME'\n         MNOTE 0,'QUALIFIER IS LIST: DSN->USERID.DSN.LIST'\n         SPACE 1\n*    TRY FIRST TO ALLOCATE AS \"OLD\" DATA SET\n         SPACE 1\n         MVC   DA08DDN(8),BLANKS8   /BLANK DDNAME FIELD\n         SPACE 1\n         LA    R5,DA08CD\n         ST    R5,DAPLDAPB            /PTR. TO DAPB\n         SPACE 1\n         BAL   R5,DAIRALOC            /ALLOCATE DSNAME\n         MVC   SYSPRINT+8(8),DA08DDN\n         SPACE 1\n         BZ    SCRALEND       /O.K.,ALLOCATION COMPLETED\n         SPACE 1\n*  CHECK IF THE DATA SET SHOULD BE ALLOCATED AS \"NEW\" .\n*  IN THAT CASE R.C. SHOULD BE 8 , THE R.C. FROM DYNAMIC ALLOCATION\n*  SHOULD BE X'1708' AND FROM CATALOG MANAGEMENT X'0008' .\n         SPACE 1\n         CH    R15,OLDDS1    /CHECK RETURN CODE\n         BE    *+8          *FD 79.260 /NOW MUST CHECK DYNALLOC RC\n         B     ERRANAL       /NOT TO BE ALLOCATED AS NEW\n         CLC   DA08DARC(4),OLDDS2  /SECOND CHECK(DYN. ALLOC. AND C.M.)\n         BNE   ERRANAL       /FAILED , ERROR\n         SPACE 2\n*  DATA  SET TO BE ALLOCATED AS \"NEW\"\n         SPACE 1\n         XR    R5,R5\n         ST    R5,DA08DARC         /ZERO R.C.'S\n         MVI   DA08DSP1,DSNEW      /CHANGE STATUS TO \"NEW\"\n         MVI   DA08DPS2,DSCAT      / *FD79.260         \"CATLG\"\n         MVI   DA08DPS3,DSNEW      /CHANGE COND. DISP. TO \"DELETE\"\n         LA    R5,11               /LENGTH-1 OF SPACE PARMS.\n         CLC   DA08MNM(8),BLANKS8  /MEMBER SPECIFIED ?\n         BNE   NEWALL\n         LA    R5,4(R5)            /ADD LENGTH OF DIR. SPACE\n         SPACE 1\nNEWALL   EQU   *\n         EX    R5,MOVEDSNW         /MOVE SPACE CONSTANTS\n         OI    DA08CTL,UNITSTRK    /SIGNAL SPACE IN TRACKS\n         SPACE 2\n         BAL   R5,ALLOCDSN         /ALLOCATE AS \"NEW\"\n         SPACE 1\n         BNZ   ERRANAL             /UNSUCCESSFUL\n         SPACE 1\n         MVC   SYSPRINT+8(8),DA08DDN\n         SPACE 1\nSCRALEND EQU   *                      /DONE\n         STITL 'CALLING SEQUENCE'\n**> CALL PARAMETER BUILDING ROUTINE .\n         SPACE 1\n         L     R15,=A(BUILDPRM) /ADD. OF ROUTINE\n         BALR  R14,R15       /BRANCH TO ROUTINE\n         SPACE 3\n*\n***>  PUT SECOND PART OF PARAMETER LIST IN PLACE\n*\n         LA    R7,ALIASES\n         ST    R7,PRMSCR+4       /PTR. TO DDNAMES' LIST\n         OI    PRMSCR+4,PRESENT INDICATE END OF PARM LIST\n         SPACE 2\n*\n***>  SET UP \"STAX\" IN CASE OF ATTENTION\n*\n         SPACE 1\n         LA    R6,STXLST       /ADD. OF LIST FORM\n         L     R4,=A(ATTEN)    /ADD. OF ATTENTION HANDLING ROUTINE\n         STAX  (R4),MF=(E,(R6)),IBUF=(ATTIN,1),OBUF=(ATTOUT,L'ATTOUT), X\n               USADDR=TCBAD\n         SPACE 2\n*\n***> CALL \"NSCRIPT\"\n*\n         SPACE 1\n         MVI   ATTIN,ATT#C       /SIGNAL NORMAL END\n         LA    R1,PRMSCR         /ADD. OF PARM. LIST\n         LA    R2,ABENDC         /ADD. OF ABEND CODES BUFFER\n         MVC   ABENDC(3),BLANKS8 /BLANK BUFFER\n         L     R4,=A(STAEROUT)   /ADD. OF STAE EXIT ROUTINE\n         XC    ECB,ECB\n         LA    R6,ECB        /PTR. TO ECB\n         ATTACH EP=SCRIPTW,ECB=(R6),SF=(E,LATT),STAI=((R4),(R2)),      X\n               PURGE=HALT,ASYNCH=YES\n         SPACE 1\n         ST    R1,TCBAD      /KEEP TCB ADD.\n         WAIT  ECB=ECB\n         SPACE 1\n         CLC   ABENDC(3),BLANKS8      /SEE IF \"NSCRIPT\" ABENDED\n         BNE   NSCABND                /ABEND OCURRED\n         SPACE 1\n         SPACE 1\n         CLI   ATTIN,ATT#C   /EXITED NORMALLY ?\n         BNE   ABEXIT        /ABNORMAL EXIT FROM SUBTASK\n         SPACE 1\n         LTR   R15,R15       /TEST RETURN CODE FROM \"NSCRIPT\"\n         BNZ   NSCRERR       /GO ANALYZE TROUBLE\n         SPACE 1\nDTCH     EQU   *\n         SPACE 1\n         DETACH TCBAD\n         SPACE 1\n         B     DONEFREE\n         STITL 'ALLOCATION AND CONCATENATION OF DATA SETS'\nSBRCNCT  MVC   DA08CD(LFORMS-DA08CNST),DA08CNST  /CONTANTS TO PLACE\n         LA    R6,DSNAMEP             /ADD. OF DSN BUFFER\n         ST    R6,DA08PDSN\n         L     R6,CNCT1             /FIRST PDE OF LIST\n         SPACE 2\n*\n***> COUNT THE NUMBER OF SOURCE DATA SETS . IF MORE THAN ONE\n*   ALLOCATE SPACE FOR CONCATENATION BLOCK (DAIR '0C') .\n*\n         SPACE 1\n         XR    R3,R3               /ZERO COUNTER\nDSCOUNT  LA    R3,1(R3)            /INCREMENT COUNTER\n         TM    DSNNEXT,DSNLAST     /TEST FOR LAST\n         SPACE 1\n         L     R6,DSNNEXT          /NEXT DSN IF ANY - RC NOT CHANGED\n         BNO   DSCOUNT             /COUNT NEXT DSNAME IF ANY\n         SPACE 1\nDSPFF    LR    R2,R3               /KEEP NUMBER OF DATA SETS\n         SLL   R3,3                /MULTIPLY BY 8\n         LA    R3,12(R3)           /LENGTH OF CONCAT. BLOCK\n         ST    R3,CNCTLNGT         /KEEP LENGTH FOR FUTURE FREEMAIN\n         GETMAIN R,LV=(R3)\n         LR    R9,R1                /ADD. OF BLOCK\n         MVC   DA0CCD(CNCEND-CNCONS),CNCONS\n         STH   R2,DA0CNUMB          /# OF DATA SETS TO BE CONCATENATED\n         SPACE 1\nNOCNCT   L     R6,CNCT1             /FIRST PDE\n         LA    R1,DAPLUPT           /ADD. OF DAPL\n         ST    R1,FAILDAPL          /FOR POSSIBLE TROUBLES\n         LA    R2,DA0CDDN           /FIRST DDN INDEX\n         SPACE 2\nDSNLOOP  L     R8,DSNPTRN         /PTR TO DSNAME\n         CLI   0(R8),ASTERISK     /CHECK FOR TERMINAL\n         BE    TERMALC            /ALLOCATE TERMINAL AS INPUT FILE\n         SPACE 1\n         BAL   R5,DAIRALOC        /ALLOCATE DSNAME AS INPUT FILE\n         BNZ   ERRANAL            /ON ERROR PUTLINE AND ABORT\n         SPACE 1\n         MNOTE 0,'BYPASS IF SEQC=N SPECIFIED'\n***>   CHECK FOR RECFM=V IN FIRST DATA SET TO BE FORMATTED\n         SPACE 1\n         TM    RECFM,PRESENT      /ALREADY DONE ?\n         BO    NOFIRSTF           /YES , BYPASS\n         LA    R0,DSCBLEND-LOCWORK   /LENGTH OF WORK AREA\n         GETMAIN R,LV=(0)\n         LR    R7,R1              /KEEP ADD. OF AREA\n         MNOTE 4,'ALLOW FOR PARTIALLY QUALIFIED DSNAME'\n         MNOTE 0,'DSN->USERID.DSN ONLY IF IT EXISTS, OTHERWISE:'\n         MNOTE 0,'     USERID.DSN.MEMO'\n         MNOTE 0,'     USERID.DSN.SCRIPT'\n         MNOTE 0,'     USERID.DSN.TEXT'\n         MNOTE 0,' IN THAT ORDER'\n         USING DSCBF1,R7\n         MVC   DSCBL(4),CAMLSTL   /MOVE FLAGS FOR LOCATE\n         TM    DA08CTL,PREFIX     /USERID TO BE PREFIXED ?\n         BZ    NOPREF             / NO!\n         SPACE 1\n***>  PREFIX USERID TO DSNAME\n         SPACE 1\n         MVI   DSNVAL,BLANK       /BLANK BUFFER\n         MVC   DSNVAL+1(43),DSNVAL\n         L     R5,CPPLPSCB          /PTR. TO PSCB\n         USING PSCB,R5\n         XR    R15,R15\n         IC    R15,PSCBUSRL      /LENGTH OF USERID\n         BCT   R15,AFTMOVE\nMOVEID   MVC   DSNVAL(0),PSCBUSER\nAFTMOVE  EX    R15,MOVEID        /MOVE IN USERID\n         DROP  R5\n         LA    R5,DSNVAL         /ADD. OF DSNAME BUFFER\n         LR    R1,R5\n         LA    R1,1(R1,R15)      /OFFSET\n         MVI   0(R1),PERIOD      /PUT PERIOD\n         LH    R15,DSNAMEP       /LENGTH OF DSNAME\n         BCT   R15,AFTNAME\nMOVEDNM  MVC   1(0,R1),DSNAMEP+2\nAFTNAME  EX    R15,MOVEDNM       /MOVE DSNAME\n         B     AFTPREF           /DONE\n         SPACE 1\nNOPREF   LA    R5,DSNAMEP+2      /ADD. OF DSNAME BUFFER (NOT PREF)\n         SPACE 1\nAFTPREF  ST    R5,DSNPTR          /PTR. TO DSNAME BUFFER\n         XC    VOLPTR,VOLPTR      /ZERO VOLUME SERIAL\n         LA    R5,LOCWORK         /PTR. TO RESULT AREA\n         ST    R5,WORKPTR\n         MVI   RECFM,PRESENT      /SIGNAL DONE\n         SPACE 1\n         LOCATE DSCBL\n         SPACE 1\n         LTR   R15,R15          /TEST R.C.\n         BNZ   LOCERR           /R.C.\u00ac=0\n         SPACE 1\n         LA    R5,VOLSER        /PLACE OF VOLUME SERIAL\n         ST    R5,VOLPTR        /STORE PTR.\n         LA    R5,DS1FMTID      /PTR. TO RESULT AREA FOR OBTAIN\n         ST    R5,WORKPTR\n         MVI   DSCBL,OBTFLAG    /FLAGS FOR OBTAIN\n         SPACE 1\n         OBTAIN DSCBL\n         SPACE 1\n         LTR   R15,R15            /TEST RETURN CODE\n         BNZ   OBTAINER           /R.C.\u00ac=0\n         TM    DS1RECFM,RECFMV    /TEST FOR '40' BIT\n         BZ    FREEDSCB           /FAILED\n         TM    DS1RECFM,RECFMU    /TEST FOR '80' BIT\n         BO    FREEDSCB           /SUCCESS => RECFM=U\n         OI    RECFM,RECFMV       /SIGNAL RECFM=V\n         SPACE 1\nFREEDSCB EQU   *\n         SPACE 1\n         LA    R0,DSCBLEND-LOCWORK      /LENGTH OF AREA\n         LR    R1,R7                    /ADD. OF AREA\n         LA    R1,0(R1)                 /CLEAR HIGH ORDER BYTE\n         SVC   10                       /FREEMAIN SVC\n         SPACE 1\nNOFIRSTF EQU   *\n         SPACE 1\n*\n***> INSERT DDNAME IN CONCATENATION LIST .\n*\n         SPACE 1\n         MVC   0(8,R2),DA08DDN    /MOVE DDNAME\nINCRDDN  LA    R2,8(R2)           /NEXT ENTRY\n         SPACE 2\n         TM    DSNNEXT,DSNLAST       /TEST FOR LAST PDE\n         SPACE 1\n         L     R6,DSNNEXT            /ADD. OF NEXT PDE IF ANY\n         MVC   DA08DDN(8),BLANKS8    /BLANK DDNAME FIELD\n         BNO   DSNLOOP\n         SPACE 2\nDSNDONE  EQU   *\n         CLI   DA0CNUMB+1,1           /# OF ENTRIES > 1\n         BE    SOFDSN                 /NO - NO CONCAT NECESSARY\n         SPACE 2\n*\n***>  CONCATENATE DDNAMES\n*\n         SPACE 1\n         LA    R2,DA0CCD\n         ST    R2,DAPLDAPB       /PTR. TO DAPB\n         XC    ECB,ECB\n         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)\n         LTR   R15,R15           /TEST RETURN CODE\n         BNZ   ERRANAL           /ON ERROR PUTLINE AND ABORT\n         SPACE 2\nSOFDSN   EQU   *\n         BR    R4           /RETURN\n         SPACE 3\n*\n***> ALLOCATE TERMINAL\n*\n         SPACE 1\nTERMALC  EQU   *\n         LA    R5,TRM1              /FOR SKIP\n         SPACE 2\nTRMALC   EQU   *\n         LA    R7,DA1CCD\n         ST    R7,DAPLDAPB       /PTR. TO DAPB\nTRMALC1  XC    ECB,ECB\n         MVC   DA1CCD(DA1CEND-DA1CONS),DA1CONS   /MOVE \"LIST\" FORM\n         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)\n         LTR   R15,R15           /TEST RETURN CODE\n         BNZ   ERRANAL           /ON ERROR PUTLINE AND ABORT\n         SPACE 1\n         BR    R5                /RETURN OR SKIP\n         SPACE 1\nTRM1     MVC   0(8,R2),DA1CDDN   /DDNAME TO PLACE\n         LA    R7,DA08CD         /RESTORE PTR. TO CODE \"08\"\n         ST    R7,DAPLDAPB\n         B     INCRDDN           /BACK TO NORMAL\n         EJECT\n*\n*\n***>  ALLOCATION OF DSNAME BY DAIR CODE \"08\"\n*\n*\n         SPACE 1\nDAIRALOC LA    R0,DA08CD                                      ** TSM **\n         ST    R0,DAPLDAPB                                    ** TSM **\n         SPACE 1\n*\n**> AT ENTRY :  R5 POINTS TO RETURN ADDRESS\n*               R8 POINTS TO DSNAME\n*               R6 POINTS TO START OF PDE FOR THIS DSNAME\n*               R1 POINTS TO DAPL    -   WANNA BET?           ** TSM **\n*               DAPL IS ALREADY BUILT -  WANNA BET?           ** TSM **\n*               DDNAME FIELD IS BLANK\n*\n**>     EXIT :   BY    BR R5 .\n*                R15 CONTAINS RETURN CODE FROM DAIR\n*\n         SPACE 2\n         LH    R7,DSNLEN1           /LENGTH OF DSNAME\n         STH   R7,DSNAMEP\n         BCTR  R7,0\n         MVI   DSNAMEP+2,BLANK    /BLANK DSNAME BUFFER\n         MVC   DSNAMEP+3(43),DSNAMEP+2\n         EX    R7,MOVEDSN         /DSNAME TO PLACE\n         SPACE 1\n         TM    DSNFLG1,QUOTES     /DSNAME ENTERED BETWEEN QOUTES?\n         BO    QUOTED             / YES\n         MVI   DA08CTL,PREFIX     /USERID TO BE PREFIXED\n         B     MNMD\nQUOTED   MVI   DA08CTL,ZERO       /USERID NOT TO BE PREFIXED\n         SPACE 1\nMNMD     TM    DSNFLG2,PRESENT    /TEST FOR MEMBER NAME\n         BZ    PSWRD              /NONE\n         L     R8,DSNPTRM         /PTR TO MEMBER NAME\n         LH    R7,DSNLEN2         /LENGTH OF MEMBER NAME\n         BCTR  R7,0\n         MVC   DA08MNM(8),BLANKS8 /BLANK MEMBER NAME FIELD\n         EX    R7,MOVEMNM         /MEMBER NAME TO PLACE\n         SPACE 1\nPSWRD    TM    DSNFLG3,PRESENT    /TEST FOR PASSWORD\n         BZ    ALLOCDSN           /NONE\n         L     R8,DSNPTRP         /PTR TO PASSWORD\n         LH    R7,DSNLEN3         /LENGTH OF PASSWORD\n         BCTR  R7,0\n         MVC   DA08PSWD(8),BLANKS8 /BLANK PASSWORD FIELD\n         EX    R7,MOVEPSWD        /PASSWORD TO PLACE\n         SPACE 2\nALLOCDSN XC    ECB,ECB            /ZERO ECB\n         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)\n         LTR   R15,R15            /TEST RETURN CODE\n         SPACE 1\n         BR    R5                /RETURN IF EVERYTHING O.K.\n         SPACE 1\n         DROP  R6\n         STITL 'EPILOG '\nSOF      ENDM  DSECT=PPL,END=PPLEND,RC=R4\n         SPACE 3\n*\n***>  FREE DATA SETS\n*\n         SPACE 1\nDONEFREE EQU   *\n         LA    R7,FLP1         /FIRST TIME -> FALL THROUGH\n         MVC   DA18CD(DA18END-DA18CONS),DA18CONS    /MOVE \"LIST\" FORM\n         LA    R2,DA18CD\n         ST    R2,DAPLDAPB         /PTR. TO DAPB\n         LH    R5,HALFONE      /TEST VALUE\n         XR    R4,R4           /ZERO RETURN CODE\nTWOFREE  LH    R2,DA0CNUMB         /NUMBER OF DDNAMES TO BE FREED\n         LA    R3,DA0CDDN          /START OF DDNAMES\nDOFREE   XC    ECB,ECB\n         SPACE 1\nFREELOOP MVC   DA18DDN(8),0(R3)    /MOVE DDNAME\n         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)\n         LTR   R15,R15             /TEST RETURN CODE\n         BNZ   ERRANAL             /ON ERROR PUTLINE AND ABORT\n         SPACE 1\n         BR    R7                  /FALL OR RETURN\n         SPACE 1\nFLP1     LA    R3,8(R3)            /NEXT DDNAME TO BE FREED\n         BCT   R2,FREELOOP         /AGAIN ?\n         SPACE 2\n*\n***>  FREE THE SPACE ALLOCATED FOR CONCATENATION .\n*\n         SPACE 1\n         DROP  R9\n         L     R0,CNCTLNGT        /LENGTH OF AREA\n         LA    R1,0(R9)           /ADD. OF AREA\n         SVC   10                 /ISSUE FREEMAIN SVC\n         SPACE 1\n*\n***> CHECK IF THE AREA JUST FREED WAS FOR \"SYSLIB\" .\n*   (FIRST PASS) IF SO FREE ALSO THE AREA FOR \"DSN\" .\n*\n         SPACE 1\n         CH    R5,LIB            /CHECK FOR SECOND PASS (OR \"NOLIB\")\n         BNE   FREE2             / SECOND PASS (OR \"NOLIB\")=> DONE\n         SPACE 1\n         XC    LIB(2),LIB        /ZERO FOR SECOND PASS\n         L     R9,CNCTADD        /ADD. FOR DSN'S CONCAT AREA\n         MVC   CNCTLNGT(4),CNCTLNG1   /LENGTH OF AREA\n         B     TWOFREE           /FREE THIS AREA\n         SPACE 2\n*\n***> FREE \"SYSPRINT\" , \"CONTROL\" AND SCRIPT .\n*\n         SPACE 1\nFREE2    EQU   *\n         LA    R2,3        /NUMBER OF DDNAMES\n         LA    R3,SYSTERM+8   ADDRESS OF FIRST DDNAME\nFREEL2   BAL   R7,DOFREE   /FREE DDNAME\n         LA    R3,16(R3)   /NEXT DDNAME'S ADD.\n         BCT   R2,FREEL2\n         SPACE 1\n*\n***>  FREE PARAMETER AREA\n*\n         SPACE 1\n         L     R1,PRMSCR       /ADD. OF AREA\n         LH    R3,EQUS+4\n         LA    R0,MAXLEN(R3)   /LENGTH OF AREA\n         SVC   10              /ISSUE FREEMAIN SVC\n         SPACE 1\n         B     SOF         /DONE\n         STITL 'ERROR AND DIAGNOSTIC ROUTINES'\n***> ERROR IN \"NSCRIPT\"\n         SPACE 1\nNSCRERR  EQU   *\n         B     DTCH     ***> TEMPORARY <***\n         SPACE 1\n         LR    R4,R15      /FOR RETURN CODE PASSING\n         LA    R2,ER10     /ADD. OF MESSAGE\n         LA    R0,ER11-ER10  /LENGTH OF MESSAGE\n         B     MESSAGE     /TPUT AND ABORT\n         SPACE 3\nNSCABND  EQU   *\n*\n**>  \"NSCRIPT\" ABENDED\n*\n         SPACE 1\n         MVC   ABNDMSG(45),ER18      /MOVE TEMPLATE OF MESSAGE\n         SPACE 1\n*  USER CODE\n         LH    R2,ABENDC+1    LOAD ABEND CODE\n         LA    R3,4095\n         NR    R2,R3                 /ELIMINATE GARBAGE\n         CVD   R2,DWORK\n         OI    DWORK+7,COMPF        /PUT \"F\" IN LOWEST HALF BYTE\n         UNPK  ABNDMSG+41(4),DWORK+5(3)\n         SPACE 1\n*  SYSTEM CODE\n         UNPK  DWORK(5),ABENDC(3)   /UNPACK CODE + BYTE\n         MVC   ABNDMSG+28(3),DWORK  /MOVE RELEVANT PART\n         TR    ABNDMSG+28(3),TRTABLE /TRANSLATE HEX. CODES\n         LA    R2,ABNDMSG            /ADD. OF MESSAGE\n         LA    R0,45                 /LENGTH OF MESSAGE\n         SPACE 1\n         TPUT  (R2),(0)\n         SPACE 1\n         B     DONEFREE             /FREE AND EXIT\n         SPACE 3\n*\n***>  SUBTASK ABNORMALLY TERMINATED BY ATTENTION\n*\n         SPACE 1\nABEXIT   EQU   *\n         CLI   ATTIN,ATT#F        /FREE REQUESTED ?\n         BE    DONEFREE\n         SPACE 1\n*  \"ABEND\" WAS REQUESTED\n         LA    R4,69              /SIGNAL ABENDED\n         B     SOF\n         SPACE 3\nPARSFAIL LR    R4,R15             /ERROR CODE\n         LA    R2,ER9           /ERROR MESSAGE\n         LA    R0,ER10-ER9      /LENGTH OF MESSAGE\n         SPACE 3\nMESSAGE  TPUT  (R2),(0)\n         B     SOF\n         SPACE 3\n*\n***>  OBTAIN ERROR\n*\n         SPACE 1\nOBTAINER EQU   *\n         MVC   OBTERR(9),ER12          /\"OBTAIN\"\n         SPACE 1\nOBTLOC   EQU   *\n         MVC   OBTERR+9(L'ER11),ER11    /FIRST PART OF MESSAGE\n         CVD   R15,PDWORK              /CONVERT R.C.\n         OI    PDWORK+7,X'03'          /\"F\" IN LAST HALF BYTE\n         UNPK  OBTERR+9+L'ER11(2),PDWORK+6(2)  /UNPK & TO PLACE\n         SPACE 1\n         LR    R4,R15                  /ERROR CODE\n         SPACE 1\n         LA    R2,OBTERR               /ERROR MESSAGE\n         LA    R0,11+L'ER11            /LENGTH OF MESSAGE\n         SPACE 1\n         TPUT  (R2),(0)\n         SPACE 1\n*\n***>   FREE WORK AREA FOR OBTAIN\n*\n         SPACE 1\n         LA    R0,DSCBLEND-LOCWORK     /LENGTH OF AREA\n         LR    R1,R7                   /ADD. OF AREA\n         LA    R1,0(R1)                /CLEAR HIGH ORDER BYTE\n         SVC   10                      /FREEMAIN SVC\n         SPACE 1\n         B     SOF                     / END\n         SPACE 3\n*\n***>   LOCATE ERROR\n*\n         SPACE 1\nLOCERR   EQU   *\n         MVC   OBTERR(9),ER13          /\"LOCATE\"\n         B     OBTLOC                  /FURTHER PROCESS\n         SPACE 2\n         DROP  R7\n         EJECT\n*\n***>  ERROR ANALYSIS FOR DAIR USING DAIRFAIL(IKJEFF18)\n*\n         SPACE 2\nERRANAL  EQU   *\n         ST    R15,DAIRRC       /STORE R.C.\n         LA    R15,DAIRRC\n         ST    R15,FAILRC      /PTR TO R.C.\n         LA    R15,DAIRMSWR\n         ST    R15,FAILMSWR     /PTR TO ADD. OF MESSAGE WRITER\n         LA    R15,DAIRID\n         ST    R15,FAILID       /PTR TO I.D. OF C.P.\n         SPACE 1\n*   ATTACH\n         SPACE 1\n         XC    ECB,ECB\n         LA    R1,FAILDAPL      /ADD. OF PARAMETER LIST\n         LA    R6,ECB\n         ATTACH EP=IKJEFF18,ECB=(R6),SF=(E,LATT)\n         SPACE 1\n         ST    R1,TCBAD         /KEEP ADD. OF TCB\n         WAIT  ECB=ECB\n         SPACE 1\n         DETACH TCBAD           /DONE\n         L     R4,DAIRRC        /RETURN CODE FROM THE PROGRAM\n         B     SOF             /EXIT\n         EJECT\n         LTORG\n         STITL 'VALIDITY CHECK ROUTINES (VDCHECK CSECT)'\nVDCHECK  CSECT    ,     /CSECT FOR VALIDITY CHECK AND STAX/STAE .\n         USING VDCHECK,R11\n*\n***> VALIDITY CHECK ROUTINE FOR \"EQUALITIES\" .\n*\n         USING VALPAR,R1          /ADDRESSABILITY FOR PARAM. LIST\nEQUSCK   EQU   *\n*\n***>   VALIDITY CHECK ROUTINE FOR STRINGS OF THE FORM :\n*              +A=B  OR  &A=B\n*\n         STM   R14,R12,12(R13)\n         USING EQUSCK,R15\n         L     R12,=A(&MCSECT)\n         L     R11,=A(VDCHECK)      /ADD. OF START\n         DROP  R15\n         LR    R15,R13\n         L     R13,USERWORD\n         ST    R15,KEEPR\n         L     R10,PDEADR\n         USING QST,R10           /ADDRESSABILITY FOR PDE\n         LH    R9,QSTLNGT        /LOAD LENGTH OF STRING\n         BCTR  R9,0              /LENGTH-1\n         L     R8,QSTSTRP        /START OF STRING\n         DROP  R10\n         LR    R4,R8\n         AR    R4,R9            /END OF STRING ADD.\n         XR    R2,R2\n         EX    R9,TRTEX          /LOOK FOR NEXT DELIMITER\n         SPACE 2\n         B     BTAB1(R2)         /BRANCH WITH CODE RETURNED\nBTAB1    B     INV               /INVALID (NULL?)\n         B     FOP               / + OR & FOUND => START\n         SPACE 2\nINV      EQU   *\n*\n***>   INVALID PARAMETER(S) ENTERED\n*\n*  ERROR MESSAGE\n         LA    R2,ER1\n         LA    R0,L'ER1\n         B     ERRTPUT\n         SPACE 2\nFOP      EQU   *\n*\n***>   FIRST OPERAND START (+ OR &)\n*\n         LR    R7,R1             /ADD. OF + OR &\n         SR    R7,R8             /LENGTH OF STRING PARSED (-1)\nFOP1     LA    R7,1(,R7)\n         SR    R9,R7              /LENGTH REMAINING (-1)\n         LA    R8,1(R1)           /START ADD. FOR NEXT TRT\n         XR    R2,R2\n         EX    R9,TRTEX           /LOOK FOR \"=\"\n         B     BTAB2(R2)\n         SPACE 2\nBTAB2    B     INV                /NOTHING FOUND\n         B     INV                /NO \"=\" FOUND\n*\n***>  EQUAL SIGN\n*\n         LR    R7,R1\n         SR    R7,R8            /LENGTH OF PARAMETER (IDENTIFIER)\n         BNP   INV              /INVALID IF NO IDENTIFIER\n         LA    R7,1(,R7)        /LENGTH PARSED\n         LA    R8,1(R1)         /NEXT START ADD. FOR TRT\n         XR    R2,R2\n         SR    R9,R7            /LENGTH OF STRING TO BE PARSED\n         EX    R9,TRTEX\n         B     BTAB3(R2)\n         SPACE 2\nBTAB3    B     GOOD            /END OF STRING ??\n         B     NEXTEQ          /NEXT EQUALITY\n         B     INV             /INVALID (\"=\" AFTER \"=\")\n         SPACE 2\nGOOD     EQU   *\n         SR    R4,R1           /LENGTH OF  VALUE\n         BNP   INV             /NULL VALUE\n         B     RC0             /RETURN\n         SPACE 1\nNEXTEQ   EQU   *\n*\n***>  NEXT PARAMETER-VALUE PAIR\n*\n         LR    R7,R1\n         SR    R7,R8          /LENGTH OF VALUE\n         BNP   INV            /NULL VALUE\n         B     FOP1           /GO AGAIN TO FIND \"=\"\n         SPACE 1\nTRTEX    TRT   0(0,R8),VECT  /EXECUTE TRT ON QSTRING\n         SPACE 3\n         CHECK AD\n         CHECK CE\n         CHECK CH\n         CHECK DO\n         CHECK FNS\n         CHECK LIN\n         CHECK NU\n         CHECK PA,CHK=NO\n         CHECK PAS\n         CHECK RMS\n         CHECK SEQC\n         CHECK SRE\n         CHECK SRL\n         CHECK WO\n         CHECK DEV,CHK=NO         *FD 79.256\n         CHECK MSG,CHK=NO         *FD 79.256\n         SPACE 2\nRC0      XR    R15,R15\n         B     RET\n         SPACE 2\nERRTPUT  TPUT  (R2),(0)\n         SPACE 1\nRC8      LA    R15,8\n         B     RET\n         SPACE 3\nGENCK    LR    R15,R13\n         L     R13,USERWORD       /ADD. OF WORK AREA\n         ST    R15,KEEPR          /SAVE R13\n         L     R10,PDEADR\n         USING QST,R10\n         CH    R9,QSTLNGT\n         BLR   R6             ERROR IF GREATER THAN MAX\n         L     R8,QSTSTRP     /ADD. OF NUMBER\n         LH    R1,QSTLNGT     LENGTH OF USER VALUE\n         DROP R10\n         BCTR  R1,0           FOR EXECUTE\n         EX    R1,CLCEX       COMPARE WITH MAXIMUM VALUE\n         BHR   R6             ERROR IF VALUE GREATER THAN MAX\n         CLC   0(1,R5),0(R8)  COMPARE TO LOWER LIMIT\n         BNH   RC0            BRANCH IF LOWER LIMIT IS VALID\n         BR    R6             /RETURN TO CALLER (ERROR)\n         SPACE 1\nCLCEX   CLC   0(0,R8),0(R7)   /FOR LIMIT COMPARISON\n         SPACE 5\n*\n***>  RETURN SEQUENCE FOR VALIDITY CHECK ROUTINES .\n***>  R15 CONTAINS RETURN CODE , KEEPR   CONTAINS\n*   R13 TO POINT TO THE SAVE AREA .\n*\n         DROP  R1\nRET      EQU   *\n         L     R13,KEEPR      /RESTORE R13\n         ST    R15,16(R13)    /SAVE RETURN CODE\n         LM    R14,R12,12(R13)\n         BR    R14            /RETURN\n*\n         STITL 'ATTENTION HANDLING  (STAX)'\nATTEN    STM   R14,R12,12(R13)\n         USING ATTEN,R15\n         L     R12,=A(&MCSECT)\n         L     R11,=A(VDCHECK)\n         DROP  R15\n         USING ATTPARM,R1        /DSECT FOR ATT. PARM LIST\n         L     R3,ATTIBUF        /PTR. TO INPUT BUFFER\n         L     R5,ATTUSERP       /PTR. TO TCB FOR SUBTASK<9\n         DROP  R1\n         SPACE 1\nATTLOOP  EQU   *\n         SPACE 1\n*   ANALYZE THE INPUT FROM THE USER\n         CLI   0(R3),ATT#Q       /QUESTION MARK ?\n         BE    SECATTN           /SECOND LEVEL MESSAGE\n         SPACE 1\n         OI    0(R3),BLANK       /TRANSLATE TO UPPERCASE\n         CLI   0(R3),ATT#A       /ABEND REQUEST ?\n         BE    ATTABND\n         SPACE 1\n         CLI   0(R3),ATT#C       /CONTINUE ?\n         BE    ATTCONT\n         SPACE 1\n         CLI   0(R3),ATT#F       /FREE REQUEST ?\n         BNE   NWANSATT          /BAD REPLY , GET NEW ANSWER\n         SPACE 3\n*  FREE/ABEND REQUEST\n         SPACE 1\nATTABND  EQU   *\n* BUFFER CONTAINS CODE FOR PARENT TASK TO REACT\n         SPACE 1\n         LR    R1,R5          /PTR. TO ADD. OF SUBTASK'S TCB\n         SVC   62             /ISSUE DETACH SVC\n         B     ATTRET         /RETURN\n         SPACE 2\n*  CONTINUE REQUEST\n         SPACE 1\nATTCONT  EQU   *\n         TPUT  ER16,L'ER16     /WARN FOR MISSING LINES\n         SPACE 1\nATTRET   EQU   *\n         LM    R14,R12,12(R13)\n         BR    R14             /RETURN TO ORIGIN\n         SPACE 3\n*  SECOND LEVEL MESSAGE AND REQUEST FOR NEW ANSWER\n         SPACE 1\nSECATTN  EQU   *\n         TPUT  ER141,L'ER141\n         TPUT  ER142,L'ER142\n         TPUT  ER143,L'ER143\n         SPACE 1\n*  GET NEW ANSWER\n         SPACE 1\nNWANSATT EQU   *\n         SPACE 1\n*  FIRST , PRINT OUT REQUEST ; THEN GET NEW INPUT\n         SPACE 1\n         TPUT  ER15,L'ER15\n         SPACE 1\n         TGET  (R3),1\n         SPACE 1\n         B     ATTLOOP          /GO ANALYZE ANSWER\n         SPACE 5\nSTAEROUT EQU   *\n*\n**>  ABEND INTERCEPTING ROUTINE FOR ATTACHED \"NSCRIPT\"\n*\n         SPACE 1\n         STM   R14,R12,12(R13)\n         USING STAEROUT,R15\n         L     R12,=A(&MCSECT)\n         L     R11,=A(VDCHECK)\n         DROP  R15\n         USING STAEPLST,R1         /PARM. LIST GOTTEN\n         L     R2,STAEPARP         /ADD. OF CODES' BUFFER\n         MVC   0(3,R2),STAECODE    /MOVE CODES\n         DROP  R1\n         LA    R15,16\n         ST    R15,16(R13)         /RETURN CODE\n         LM    R14,R12,12(R13)\n         BR    R14\n         SPACE 3\n         LTORG\n         SPACE 1\n         DROP  R11\n         STITL 'PARAMETER BUILDING (BUILDPRM CSECT)'\n*\n*  ROUTINE WHICH ANALYSES THE OUTPUT FROM \"PARSE\" AND\n* BUILDS THE PARAMETER TO BE PASSED TO \"NSCRIPT\" .\n*\n*  AT ENTRY :\n*           R14 - RETURN ADDRESS\n*           R15 - ENTRY ADDRESS\n*           R1  - ADDRESS OF PARSE RESULT DSECT\n*\n*  NOTHING RETURNED AT EXIT FROM CSECT . ALL RESULTS STORED IN\n* COMMON WORK AREA POINTED AT BY \"OLD\" R13 .\n*\n         SPACE 2\nBUILDPRM CSECT\n         DS    0H\n         USING BUILDPRM,R11\n         STM   R14,R12,12(R13)\n         LR    R11,R15\n         USING IKJPARMD,R10      /ADDRESSABILITY FOR PDL\n         SPACE 2\n*\n***>  ALLOCATE SPACE FOR PARAMETER STRING TO BE PASSED\n*\n         SPACE 2\n         LH    R4,EQUS+4     /LENGTH OF EQUS' STRING\n         LA    R4,MAXLEN(R4) /ADD MAX. LENGTH OF THE REST + 2(LENGTH)\n         LR    R0,R4         /KEEP LENGTH\n         SPACE 1\n         GETMAIN R,LV=(0)\n         SPACE 1\n         ST    R1,PRMSCR     /TO PARAM. LIST\n         XC    PRMSCR(1),PRMSCR  /ZERO FIRST BYTE\n         LR    R7,R1\n         LA    R7,2(R7)      /START FOR PARAMETERS\n         SPACE 1\n         MVI   0(R7),BLANK   /CLEAN BUFFER\n         SH    R4,HALF3      /SUBTRACT LENGTH FIELD AND 1 FOR \"EX\"\n         EX    R4,CLEANBUF\n         SPACE 1\n         MOVEP1 CO\n         MOVEP1 UN\n         MOVEP1 NOMA\n         MOVEP1 ON\n         FLAG  ON,SWITCH,ONLINE FLAG SWITCH IF ONLINE OUTPUT\n         FLAG  OF,SWITCH,OFFLINE  FLAG SWITCH IF OFFLINE OUTPUT\n         MOVEP1 TWOP\n         MOVEP1 QU\n         MOVEP1 SCR\n         MOVEP1 SI\n         MOVEP1 STAT\n         MOVEP1 ST\n         MOVEP1 TR\n         MOVEP1 NOUP\n         MOVEP1 NOWA\n         MOVEP3 AD\n         MOVEP3 CE\n         MOVEP3 CH\n         MOVEP3 DO\n         MOVEP3 FNS\n         MOVEP3 LIN\n         MOVEP3 NU\n         MOVEP3 PAS\n         MOVEP3 RMS\n         MOVEP3 SRE\n         MOVEP3 SRL\n         MOVEP3 WO\n         MOVEP5 PA\n         MOVEP1 SPLCHK    *FD 79.260\n         MOVEP1 UP        *FD 79.260\n         MOVEP3 MSG       *FD 79.260\n         MOVEP3 DEV       *FD 79.260\n***\n***      RESOLVE ONLINE, OFFLINE.\n***\n         TM    SWITCH,ONLINE  IS OUTPUT ONLINE?\n         BZ    NONLINE        BRANCH IF NOT ONLINE\n         MOVEP2 ON            TELL SCRIPT OUTPUT IS ONLINE\nNONLINE  DS    0H\n         TM    SWITCH,OFFLINE IS OUTPUT OFFLINE?\n         BZ    NOFFLINE       BRANCH IF NOT OFFLINE\n         MOVEP2 OF            TELL SCRIPT OUTPUT IS OFFLINE\nNOFFLINE DS    0H\n         LR    R6,R7\n         MOVEP2 SEQC,SIGN=EQUAL\n         TM    ##SEQC+6,PRESENT\n         BZ    SEQC1             /ABSENT,CHECK FOR RECFM=V\n         L     R5,##SEQC         /PTR. TO VALUE\n         CLI   0(R5),ASTERISK    /IS IT \"*\" ?\n         BE    BPSEQC1\n         MOVEP4 SEQC\n         B     BPSEQC\n         SPACE 1\nSEQC1    EQU   *\n*\n***>    CHECK FOR RECFM \"V\"\n*\n         SPACE 1\n         TM    RECFM,RECFMV     /IS IT \"V\" ?\n         BZ    BPSEQC1          /NO\n         MVI   0(R7),ONE        /PUT VALUE \"1\"\n         LA    R7,2(R7)         /UPDATE OFFSET\n         B     BPSEQC           /ENDED\n         SPACE 1\nBPSEQC1  LR    R7,R6\n         SPACE 1\nBPSEQC   EQU   *\n         SPACE 1\n*\n***> ADD \"EQUS\" AND CALCULATE THE ACTUAL LENGTH OF STRING\n*\n         SPACE 1\n         L     R1,PRMSCR             /ADD. OF START OF STRING\n         TM    EQUS+6,PRESENT\n         BZ    FINALEN         /NO EQUS, GO ON\n         LH    R4,EQUS+4       /LENGTH OF \"QSTRING\"\n         L     R5,EQUS         /PTR. TO \"QSTRING\"\n         BCTR  R4,0            /-1 FOR \"EX\"\n         EX    R4,MOVEPR4      /MOVE \"EQUS\" TO PLACE\n         LA    R7,2(R4,R7)     /UPDATE OFFSET\nFINALEN  SR    R7,R1           /END - START (-2)\n         SH    R7,HALF3        /LENGTH OF STRING\n         STH   R7,0(R1)        /STORE IN PLACE\n         SPACE 3\n         LM    R14,R12,12(R13)\n         BR    R14            /RETURN TO MAIN\n         SPACE 3\n         SPACE 1\n         DROP  R11\n         SPACE 2\n&MCSECT  CSECT\n         STITL 'PARAMETER CONTROL LIST FOR PARSE'\n         PRINT NOGEN\nPARSE    IKJPARM\n         SPACE 1\nDSN      IKJPOSIT DSTHING,LIST,PROMPT='DATA SET NAME'\n         SPACE 1\nEQUS     IKJPOSIT QSTRING,ASIS,VALIDCK=EQUSCK,                         *\n               HELP=('VALUES TO CREATE \".SR\" CONTROL LINES EXTERNALLY')\n*        IKJPOSIT STRING,SQSTRING,ASIS,VALIDCK=EQUSCK,\n*              HELP=('VALUES TO CREATE \".SR\" CONTROL LINES EXTERNALLY')\n         SPACE 1\nLIB      IKJKEYWD DEFAULT='NOLIBRARY'\n         IKJNAME 'LIBRARY',SUBFLD=SLIB\n         IKJNAME 'NOLIBRARY'\n         SPACE 1\n         SPACE 1\nFILE     IKJKEYWD\n         IKJNAME  'FILE',INSERT='PRINT',SUBFLD=SPRINT\nPRINT    IKJKEYWD DEFAULT='PRINT'\n         IKJNAME  'PRINT',SUBFLD=SPRINT\nCO       KEY   (CO,CONTINUE)\nUN       KEY   (UN,UNFORMATTED)\nNOMA     KEY   (NOMA,NOMARK)\nON       KEY   (ON,ONLINE,TE,TERMINAL)\nTWOP     KEY   (TWOP,TWOPASS)\nQU       KEY   (QU,QUIET)\nSCR      KEY   (SCRE,SCREEN)\nSI       KEY   (SI,SINGLE)\nSTAT     KEY   (STAT,STATISTICS)\nST       KEY   (ST,STOP)\nTR       KEY   (TR,TRANSLATE)\nNOUP     KEY   (NOUP,NOUPPER)\nNOWA     KEY   (NOWA,NOWAIT)\nSPLCHK   KEY   (SPLCHK,SPELLCHK)            * FD 79.256\nUP       KEY   (UP,UPCASE,UPPER)            * FD 79.256\n*****\n*****    DEFAULT KEYWORDS\n*****\nNOCO     KEY   (NOCO,NOCONTINUE)\nFO       KEY   (FO,FORMATTED)\nMA       KEY   (MA,MARK)\nOF       KEY   (OF,OFFLINE)\nONEP     KEY   (ONEP,ONEPASS)\nNOQU     KEY   (NOQU,NOQUIET)\nNOSCRE   KEY   (NOSCRE,NOSCREEN)\nNOSI     KEY   (NOSI,NOSINGLE)\nNOSTAT   KEY   (NOSTAT,NOSTATISTICS)\nNOST     KEY   (NOST,NOSTOP)\nNOTR     KEY   (NOTR,NOTRANSLATE)\nWA       KEY   (WA,WAIT)\nNOAD     KEY   (NOAD,NOADJUST)\nNOCE     KEY   (NOCE,NOCENTRE,NOCENTE,NOCENTER)\nNONU     KEY   (NONU,NONUMBER)\n*****\n*****    KEYWORDS WITH SUBFIELDS\n*****\nAD       KEY   (AD,ADJUST),SUB=YES\nCE       KEY   (CE,CENTRE,CENTE,CENTER),SUB=YES\nCH       KEY   (CH,CHANNEL),SUB=YES\nDO       KEY   (DO,DOWN),SUB=YES\nFNS      KEY   (FNS,FNSIZE),SUB=YES\nLIN      KEY   (LIN,LINENUMBER),SUB=YES\nNU       KEY   (NU,NUMBER),SUB=YES\nPA       KEY   (PA,PAGE),SUB=YES\nPAS      KEY   (PAS,PASSES),SUB=YES\nRMS      KEY   (RMS,RMSIZE),SUB=YES\nSEQC     KEY   (SEQC,SEQCOLUMN),SUB=YES\nSRE      KEY   (SRE,SREFERENCE),SUB=YES\nSRL      KEY   (SRL,SRLENGTH),SUB=YES\nWO       KEY   (WO,WORKSIZE),SUB=YES\nMSG      KEY   (MSG,MESSAGE),SUB=YES           *FD 79.256\nDEV      KEY   (DEV,DEVICE),SUB=YES            *FD 79.256\nAD       SUBF  'ADJUST OFFSET',2,'MAX ADJUST'\nCE       SUBF  'ADJUST OFFSET',2,'MAX ADJUST'\nCH       SUBF  'CHANNEL NUMBER',1,'MUST BE 1 TO 9'\nDO       SUBF  'DOWN NUMBER',3,'MUST BE 1 TO 130'\nFNS      SUBF  'FOOT NOTE SIZE',4,'MAX FOOT NOTE SIZE'\nLIN      SUBF  'LINE NUMBER',3,'LINE'\nNU       SUBF  'LINE NUMBER, FILE NAME',3,'NUMBER'\nPA       SUBF  'FIRST PAGE NUMBER',6,'PAGE NUMBERS',RANGE=YES\nPAS      SUBF  'NUMBER OF PASSES',2,'NUMBER OF PASSES'\nRMS      SUBF  'MAX RECORDS PER REMOTE',4,'MAX REMOTE SIZE'\nSEQC     SUBF  'SEQUENCE NUMBER COLUMN',3,'SEQUENCE COLUMN'\nSRE      SUBF  'NUMBER OF SET REFERENCES',4,'MAX SET REFERENCES'\nSRL      SUBF  'LENGTH OF SET REFERENCE NAME',3,'MAX SET REF NAME'\nWO       SUBF  'WORK SIZE',5,'MAX WORK SIZE'\nMSG      SUBF  'MESSAGE DISPOSITION',14,'DESTYPE OF SYSTERM'\nDEV      SUBF  'OFFLINE DEVICE TYPE',4,'DEFAULT IS 1403'\nSLIB     IKJSUBF\nLIBB     IKJPOSIT DSNAME,LIST\n         SPACE 1\nSPRINT   IKJSUBF\nPRINTT1  IKJPOSIT DSTHING,DEFAULT='*'\nPRINTT2  IKJKEYWD\n         IKJNAME  'T'\n         IKJNAME  'PC'\n         IKJNAME  'PS'\n         SPACE 3\n         IKJENDP\n         PRINT GEN\n         STITL 'CONSTANTS'\nTRTABLE  DC    256X'40'      /TR'S VECTOR\n         ORG   TRTABLE+X'F0'\n         DC    C'0123456789'\n         DC    C'ABCDEF'\n         ORG\n         SPACE 3\nVECT     DC    256X'00'      /TRT'S VECTOR\n         ORG   VECT+X'4E'\n         DC    X'04'         /SIGNAL \"+\"\n         ORG   VECT+X'50'\n         DC    X'04'         /SIGNAL \"&\"\n         ORG   VECT+X'7E'\n         DC    X'08'         /SIGNAL \"=\"\n         ORG\n         SPACE 1\n*   LIMITS FOR VALIDITY CHECK ROUTINES\n         SPACE 1\n***\n***      FORMAT OF LIMIT VALUES IS:\n***\n***      C'U...U'             UPPER LIMIT.\n***            THIS GIVES BOTH THE LENGTH AND VALUE OF THE LIMIT.\n***\nADSTR    DC    C'30',C'0'\nCESTR    DC    C'30',C'0'\nCHSTR    DC    C'9',C'1'\nDOSTR    DC    C'130',C'1'\nFNSSTR   DC    C'1024',C'1'\nLINSTR   DC    C'125',C'0'\nNUSTR    DC    C'100',C'0'\nPASTR    DC    C'32767',C'1'\nPASSTR   DC    C'10',C'1'\nRMSSTR   DC    C'1024',C'1'\nSEQCSTR  DC    C'240',C'0'\nSRESTR   DC    C'4096',C'1'\nSRLSTR   DC    C'240',C'4'\nWOSTR    DC    C'65536',C'1024'\n         EJECT\n*   ERROR MESSAGES\n         SPACE 1\nER1      DC    C'**>VALID FORMAT IS ''+K=V'' OR ''&&K=V'''\nERAD     DC    C'** ERROR ** VALID RANGE FOR ADJUST IS 0-30'\nERCE     DC    C'** ERROR ** VALID RANGE FOR CENTRE IS 0-30'\nERCH     DC    C'** ERROR ** VALID RANGE FOR CHANNEL IS 1-9'\nERDO     DC    C'** ERROR ** VALID RANGE FOR DOWN IS 1-130'\nERFNS    DC    C'** ERROR ** VALID RANGE FOR FNSIZE IS 1-1024'\nERLIN    DC    C'** ERROR ** VALID RANGE FOR LINENUMBER IS 0-125'\nERNU     DC    C'** ERROR ** VALID RANGE FOR NUMBER IS 0-100'\nERPA     DC    C'** ERROR ** VALID RANGE FOR PAGE IS 1-32767'\nERPAS    DC    C'** ERROR ** VALID RANGE FOR PASSES IS 1-10'\nERRMS    DC    C'** ERROR ** VALID RANGE FOR RMSIZE IS 1-1024'\nERSEQC   DC    C'** ERROR ** VALID RANGE FOR SEQCOLUMN IS 0-240'\nERSRE    DC    C'** ERROR ** VALID RANGE FOR SREFERENCE IS 1-4096'\nERSRL    DC    C'** ERROR ** VALID RANGE FOR SRLENGTH IS 4-240'\nERWO     DC    C'** ERROR ** VALID RANGE FOR WORKSIZE IS 1024-65536'\nER9      DC    C'**>PROBLEMS IN PARSE,NOTIFY THE SYSTEM''S GROUP'\nER10     DC    C'**> \"NSCRIPT\" ENDED DUE TO ERROR .'\nER11     DC    C' ERROR CODE  '\nER12     DC    C'**>OBTAIN'\nER13     DC    C'**>LOCATE'\nER142    DC    C'2) CONTINUE MEANS IGNORE ATTN.'\nER143    DC    C'3) ABEND    MEANS EXIT IMMEDIATELY'\nER141    DC    C'1) FREE     MEANS FREE DATA SETS AND EXIT'\nER15     DC    C'****> ENTER \"F\" , \"C\" OR \"A\" .'\nER16     DC    C'**> WARNING : LINES MAY BE MISSING FROM OUTPUT'\nER18     DC    C'COMPLETION CODES : SYSTEM -     , USER -     '\n         SPACE 1\nATTOUT   DC    C'**> ENTER \"F\"(FREE) ,\"C\"(CONTINUE) OR \"A\"(ABEND) +'\n         EJECT\n*\n***>   \"LIST\" FORMS FOR DAIR CODES 18 , 0C , 1C , 08 AND ATTACH\n*\n         SPACE 2\n         DS    0F\n         SPACE 1\nDA18CONS DC    X'0018'\n         DC    3H'0'\n         DC    F'0'\n         DC    2CL8' '\n         DC    CL2' '\n         DC    X'08'\n         DC    X'10'\n         DC    CL8' '\nDA18END  EQU   *\n         SPACE 2\nCNCONS   DC    X'000C'\n         DC    3H'0'\nCNCEND   EQU   *\n         SPACE 2\nDA1CONS  DC    X'001C'\n         DC    2H'0'\n         DC    X'00'\n         DC    X'08'\n         DC    2CL8' '\nDA1CEND  EQU   *\n         SPACE 2\nDA08CNST DC    X'0008'\n         DC    3H'0'\n         DS    A\n         DC    3CL8' '\n         DC    4F'0'\n         DC    2CL8' '\n         DC    3X'08'\n         DS    C\n         DC    AL3(0)\n         DS    C\nBLANKS8  DC    CL8' '\n         ATTACH SF=L,SHSPV=78\n         DC    F'0'         /ADD. OF MESSAGE WRITER\nHALFONE  DC    H'1'         /I.D. FOR C.P.\nLFORMS   EQU   *\n         SPACE 2\nALICONS  DC    H'4'\n         DC    CL16'SYSIN'\n         DC    CL16'SYSTERM'\n         DC    CL16'SYSCONS'\n         DC    CL16'SYSPRINT'\n         DC    CL16'SYSLIB'\nALIEND   EQU   *\nHALF3    DC    H'3'\n         SPACE 2\n*  TEST CONSTANTS FOR DATA SET TO BE ALLOCATED AS \"NEW\" .\n         SPACE 1\nOLDDS1   DC    H'8'\nOLDDS2   DC    X'17080008'\n         SPACE 1\n*   CONSTANTS FOR DAIR \"08\" (NEW DATA SET)\n         SPACE 1\nDAIRNEW  DC    F'6160'      /AVERAGE BLOCK SIZE\n         DC    F'5'         /NUMBER OF PRIMARY TRACKS\n         DC    F'5'         /  \"    \"  SECONDARY TRACKS\n         DC    F'25'        /NUMBER OF DIRECTORY BLOCKS (OPTIONAL)\n         SPACE 2\n*\n***>  FLAGS FOR CAMLST\n*\n         SPACE 1\n         DS    0F\nCAMLSTL  DC    AL1(68)\n         DC    AL1(0)\n         DC    AL1(0)\n         DC    AL1(0)\n         STITL 'EQUATES'\nZERO     EQU   X'00'\nPREFIX   EQU   X'20'\nBLANK    EQU   C' '\nQUOTES   EQU   X'40'\nPRESENT  EQU   X'80'\nDSNLAST  EQU   X'FF'\nMAXLEN   EQU   120    /MAXIMUM PARAMETER LENGTH\nEQUAL    EQU   C'='\nASTERISK EQU   C'*'\nONE      EQU   C'1'\nRECFMV   EQU   X'40'\nRECFMU   EQU   X'80'\nOBTFLAG  EQU   X'C1'     /FLAGS FOR OBTAIN\nPERIOD   EQU   C'.'\nDSNEW    EQU   X'04'\nDSCAT    EQU   X'02'        *FD 79.260\nUNITSTRK EQU   X'80'\nATT#A    EQU   C'A'\nATT#C    EQU   C'C'\nATT#F    EQU   C'F'\nATT#Q    EQU   C'?'\nCOMPF    EQU   X'03'\n         STITL 'INSTRUCTIONS FOR EX(ECUTE)'\nMOVEDSN  MVC   DSNAMEP+2(0),0(R8)\nMOVEMNM  MVC   DA08MNM(0),0(R8)\nMOVEPSWD MVC   DA08PSWD(0),0(R8)\nMOVEPR4  MVC   0(0,R7),0(R5)\nMOVEDSNW MVC   DA08BLK(0),DAIRNEW\nCLEANBUF MVC   1(0,R7),0(R7)\n         LTORG\n         STITL 'STORAGE AREAS AND DSECTS'\n         IKJPPL\n*\n***>   DAPL\n*\n         SPACE 2\nDAPLUPT  EQU   PPLUPT\nDAPLECT  EQU   PPLECT\nDAPLECB  EQU   PPLECB\nDAPLPSCB EQU   PPLPCL\nDAPLDAPB EQU   PPLANS\n         SPACE 3\nECB      DS    F\nANS      DS    F\nKEEPR    DS    F\nTCBAD    DS    F          /ADD. OF TCB FOR ATTACH-DETACH\n         SPACE 5\n*\n***>  LIST FORMS FOR DAIR CODE 08 AND ATTACH\n*\n         SPACE 2\nDA08CD   DS    CL2     /DAIR ENTRY CODE\nDA08FLG  DS    X       /FUNCTIOS TO BE PERFORMED WHEN RC=0\n         DS    X\nDA08DARC DS    H       /DYN ALLOC R.C.\nDA08CTRC DS    H       /CATALOG R.C.\nDA08PDSN DS    A       /PTR TO DSNAME\nDA08DDN  DS    CL8     /DDNAME\nDA08UNIT DS    CL8     /UNIT NAME\nDA08SER  DS    CL8     /VOLUME SERIAL\nDA08BLK  DS    F       /AVERAGE BLOCK LENGTH\nDA08PQTY DS    F       /PRIMARY SPACE QUANTITY\nDA08SQTY DS    F       /SECONDARY SPACE QUANTITY\nDA08DQTY DS    F       /DIRECTORY BLOCK QUANTITY\nDA08MNM  DS    CL8     /MEMBER NAME\nDA08PSWD DS    CL8     /PASSWORD\nDA08DSP1 DS    X       /DATA SET STATUS\nDA08DPS2 DS    X       /DATA SET DISPOSITION\nDA08DPS3 DS    X       /DATA SET CONDITIONAL DISPOSITION\nDA08CTL  DS    X       /FLAGS FOR DAIR\n         DS    CL3     /RESERVED\nDA08DSO  DS    CL1     /DSORG\nDA08ALN  DS    CL8     /ATTR-LIST-NAME\n         SPACE 2\nLATT     ATTACH SF=L\n         SPACE 2\nDAIRMSWR DS    F          /ADD. OF MESSAGE WRITER(IKJEFF02)\nDAIRID   DS    H          /I.D. FOR DAIRFAIL\n         SPACE 3\nDSNAMEP  DS    H,CL44     /BUFFER FOR DSNAME TO BE ALLOCATED\n         SPACE 1\nDAIRRC   DS    F         /DAIR RETURN CODE (R15)\n         SPACE 2\n*\n***>  DAIRFAIL PARAMETER LIST\n*\n         SPACE 1\nFAILDAPL DS    A         /PTR TO DAPL\nFAILRC   DS    A         /PTR TO R.C. (R15)\nFAILMSWR DS    A         /PTR TO ADD. OF MESSAGE WRITER\nFAILID   DS    A         /PTR TO I.D. OF C.P.\n         SPACE 2\n*\n***> DAIR CODE \"1C\" (ALLOCATE TERMINAL)\n*\n         SPACE 1\n         ORG   DSNAMEP+2     /OVERLAY ON DSNAME BUFFER (FWRD. BOUND)\nDA1CCD   DS    CL2           /ENTRY CODE \"1C\"\nDA1CFLG  DS    H             /RESERVED FIELD=0\nDA1CDARC DS    H             /R.C. FROM DYNAMIC ALLOC.\n         DS    X             /RESERVED=0\nDA1CCTL  DS    X             /CONTROL BYTE (PERMANENT ALLOC.)\nDA1CDDN  DS    CL8           /DDNAME\nDA1CALN  DS    CL8           /ATTR.-LIST NAME\n         ORG\n         SPACE 2\n*\n***> DAIR CODE \"18\" (FREE)\n*\n         SPACE 1\n         ORG   DA08CD         /OVERLAY DAIR CODE \"08\" (ALLOC.)\nDA18CD   DS    CL2            /ENTRY CODE \"18\"\nDA18FLG  DS    H              /FLAGS FOR DAIR TO SET\nDA18DARC DS    H              /DYNAMIC ALLOC. RETURN CODE\nDA18CTRC DS    H              /CATALOG RETURN CODE\nDA18PDSN DS    A              /PTR. TO DSNAME BUFFER\nDA18DDN  DS    CL8            /DDNAME\nDA18MNM  DS    CL8            /MEMBER NAME\nDA18SCLS DS    CL2            /SYSOUT CLASS (BLANK)\nDA18DPS2 DS    X              /NORMAL DISP. -> KEEP\nDA18CTL  DS    X              /UNALLOCATE PERM. ALLOC.\nDA18JBNM DS    CL8            /JOB NAME (BLANK)\n         ORG\n         SPACE 2\nCNCTLNGT DS    F                  /FOR LENGTH OF AREA FOR CONCAT.\n         SPACE 1\nCNCTLNG1 DS    F                  /SECOND LEVEL LENGTH FOR CONCAT\n         SPACE 1\nCNCTADD  DS    A                  /SECOND LEVEL ADD. OF CONCAT AREA\n         SPACE 1\nCNCT1    DS    A    /PTR. TO FIRST PDE FOR CONCAT\n         SPACE 1\nPRMSCR   DS    2A   /PARM. LIST FOR \"NSCRIPT\"\n         SPACE 1\nALIASES  DS    H    /# OF DDNAMES WITH ALIASES FOLLOWING\nSYSIN    DS    2CL8           PRIMARY INPUT FILE\nSYSTERM  DS    2CL8           SCRIPT ERROR MESSAGES\nSYSCONS  DS    2CL8           CONTROL FOR IMBEDS\nSYSPRINT DS    2CL8           SCRIPT OUTPUT\nSYSLIB   DS    2CL8  /LIBRARY (IES)\n         SPACE 1\nSTWAIT   DS    X      /\"STOP\" + \"WAIT\" FLAG\n         SPACE 1\nPRTETR   EQU   STWAIT   /\"TE\" + \"TR\" FLAG\n         SPACE 1\nRECFM    DS    X     /FLAG FOR RECFM\nSWITCH   DC    X'00'          SWITCHES\nONLINE   EQU   X'01'          ONLINE OUTPUT - IMPLICIT OR EXPLICIT\nOFFLINE  EQU   X'02'          OFFLINE OUTPUT - IMPLICIT OR EXPLICIT\n         SPACE 2\n***>   LIST FORM OF \"STAX\" + VARIABLES FOR IT\n         SPACE 1\nSTXLST   STAX  ATTEN,MF=L\n         SPACE 1\n         SPACE 1\nATTIN    DS    C              /INPUT BUFFER FOR ATTENTION\nABENDC   DS    CL3            /BUFFER FOR ABEND CODES\nDWORK    DS    D              /WORK AREA FOR CVD + UNPK\nABNDMSG  DS    CL45           /AREA FOR ABEND MESSAGE\n         SPACE 2\nPPLEND   EQU   *\n         EJECT\n         IKJCPPL\n         EJECT\nVALPAR   DSECT  ,       /DSECT FOR PARAMETERS PASSED TO VALIDCK\nPDEADR   DS    A\nUSERWORD DS    A\nVALMSG   DS    A        /ADD. FOR A SECOND LEVEL MESSAGE\n         EJECT\nATTPARM  DSECT   ,       /DSECT FOR PARM. LIST AT ATTENTION INT.\nATTTAIE  DS    A         /ADD. OF TAIE\nATTIBUF  DS    A         /ADD. OF INPUT BUFFER\nATTUSERP DS    A         /ADD. OF USER PTR.\n         EJECT\nQST      DSECT   ,      /DSECT FOR QSTRING PDE\nQSTSTRP  DS    A        /POINTER TO STRING\nQSTLNGT  DS    H        /LENGTH OF STRING\nQSTFLG   DS    X        /FLAGS\nQSTRSVD  DS    X        /RESERVED\n         EJECT\n         IKJDAP0C\nDA0CDDN  EQU   *\n         EJECT\nDSNDSECT DSECT    ,    /DSECT FOR DSTHING PDE (INCLUDING \"LIST\")\nDSNPTRN  DS    A      /POINTER TO DSNAME\nDSNLEN1  DS    H      /LENGTH OF DSNAME\nDSNFLG1  DS    C      /FLAGS\nDSNRSV1  DS    C      /RESERVED\nDSNPTRM  DS    A      /POINTER TO MEMBER NAME\nDSNLEN2  DS    H      /LENGTH OF MEMBER NAME\nDSNFLG2  DS    C      /FLAGS\nDSNRSV2  DS    C      /RESERVED\nDSNPTRP  DS    A      /POINTER TO PASSWORD\nDSNLEN3  DS    H      /LENGTH OF PASSWORD\nDSNFLG3  DS    C      /FLAGS\nDSNRSV3  DS    C      /RESERVED\nDSNNEXT  DS    A      /POINTER TO NEXT ENTRY IN THE LIST\n*                     /  IF LAST THEN X'FF' IN UPPER BYTE\n         EJECT\nDSCBF1   DSECT   ,        /DSECT FOR FORMAT 1 DSCB & LOCATE\nLOCWORK  DS    265C       /WORK AREA FOR LOCATE\n         ORG   LOCWORK+6\nVOLSER   DS    CL6        /VOLUME SERIAL (FROM LOCATE)\n         ORG\n         DS    CL7        /FILLER (FOR DOUBLE-WORD BOUNDARY)\n         SPACE 1\n*\n***>   \"LIST\" FORM FOR CAMLST\n*\n         SPACE 1\nDSCBL    EQU   *\n         DS    AL1         /FLAGS (3 BYTES)\n         DS    AL1\n         DS    AL1\n         DS    AL1         /NO OPTION THREE (0)\nDSNPTR   DS    A           /PTRS. TO PARAMETERS\nVOLPTR   DS    A\nWORKPTR  DS    A\nDSNVAL   DS    CL44        /BUFFER FOR PREFIXING USERID TO DSNAME\n         SPACE 1\n         ORG   LOCWORK\n         IECSDSL1 (1)\n         ORG\nOBTERR   EQU   DS1DSNAM     /WORK AREA FOR ERROR MESSAGE\nPDWORK   EQU   VOLPTR       /WORK AREA FOR \"CVD\"\nDSCBLEND EQU   *\n         EJECT\n         IKJPSCB\n         EJECT\nSTAEPLST DSECT   ,     /PARM. LIST PASSED TO STAI EXIT\nSTAEPARP DS    A       /ADD. OF PARM. LIST\nSTAEFLGS DS    C       /FLAGS\nSTAECODE DS    CL3     /COMPLETION CODES\nSTAEPSW  DS    D       /PSW AT ABEND\nSTAELPSW DS    D       /LAST PSW BEFORE ABEND\nSTAEREGS DS    16F     /REGS. 0-15 AT ABEND\nSTAEVARS DS    CL16    /P.P <=> SV.P.\n         SPACE 3\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT288/FILE288.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT288", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}