{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011808000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE337.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE337.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\r'", "DS1TRBAL": "b'k\\x0c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\x85\\x00\\n\\x02\\x85\\x00\\x0c\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$INFO": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x98\\x14o\\x01\\x00$?\\x19\\x06\\x00-\\x00-\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-05-26T00:00:00", "modifydate": "2000-08-30T19:06:00", "lines": 45, "newlines": 45, "modlines": 0, "user": "WSBG"}, "text": "Subj:  *** CBT Tape ***\nDate: 98-02-20 14:08:14 EST\nFrom: atalay@hotmail.com (atalay gul)\nTo: sbgolob@aol.com\n\nHi,\n\nI dont know exactly if there is something like that, but I have a\nutility which can find all datasets having same member. (Im not sure how\nI should call it, actually depending on the input which is a member\nname, the utility can say which datasets in which volumes have the same\nmember as input). For instance if you enter;  \" readme\"\nas a member name in a panel, the results would look like;\n\ndset                volume\n====                ======\nSYS1.xyx            mvspr1\nsdiagas.user.jcl    tsot01\nepdm.reports        prod02    In this case those 3 dsets have the\n                              member whose name is \"readme\"\n\nI hope I can contribute to CBT tape just a little bit. ust let me know\nif it would be helpful...\n\nMy address is the following;\n\nAtalay GUL\nThe Central Bank of Turkey\nBilgi islem, 2B\n06100-Ulus-ANKARA/TURKEY\n\n ----------------------------------------------------------------\n\nI think it will not be as good as those on the CBT tape. But actually\nit could have been better by using ISPF panels. better yet with Assembly\nlang.    (In my opinion, it's very good as is.    S. Golob 5/98)\n\nAtalay GUL\nMVS system programmer\nCentral Bank of Turkey\nIstiklal cad. No:10\n06100-Ulus-ANKARA/TURKEY\ne_mail: a.gul@stdim.tcmb.gov.tr\n        atalay@hotmail.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JOBM": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x98\\x12\\x7f\\x00\\x98\\x13_\\x14$\\x00\\x98\\x00\\xe0\\x00!\\xe2\\xc4\\xc9\\xc1\\xc7\\xc1\\xe2@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1998-05-07T00:00:00", "modifydate": "1998-05-15T14:24:00", "lines": 152, "newlines": 224, "modlines": 33, "user": "SDIAGAS"}, "text": "//EDIAGA1B  JOB (EDIBKUP),USER=EDIBKUP,\n// MSGCLASS=X,MSGLEVEL=(1,1),CLASS=E,\n//*********************************************************************\n//** Jcl to build Vsam dsets..\n//*********************************************************************\n//*\n//STEP1     EXEC   PGM=IDCAMS\n//SYSPRINT  DD     SYSOUT=*\n       DELETE  EDID.MEMBER.LISTV CLUSTER PURGE\n       DEFINE  CLUSTER                              -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV)           -\n                 INDEXED                            -\n                 SHAREOPTIONS (1 3)                 -\n                 FREESPACE(0 0)                     -\n                 RECORDSIZE (58 58)                 -\n                 KEYS (52 6)                        -\n                 NOREUSE                            -\n                 )                                  -\n               DATA                                 -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV.DATA)      -\n                 VOLUMES (EDID02)                   -\n                 CYLINDERS ( 27 3 )                 -\n                 CISZ(4096)                         -\n                 SPEED                              -\n                 )                                  -\n               INDEX                                -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV.INDEX)     -\n                 TRACKS (1 1)                       -\n                 CISZ(3584)                         -\n                 VOLUMES (EDID02)                   -\n                 )\n//*\n//STEP2     EXEC PLIXCLG\n//SYSPRINT  DD   SYSOUT=*\n//PLI.SYSIN DD   *\n ATOS1:PROC OPTIONS(MAIN)                                            ;\n DCL FMEMBER  FILE RECORD SEQL OUTPUT KEYED ENV(VSAM)                ,\n     FDSET    FILE RECORD SEQL INPUT                                 ,\n       1 OUTREC                                                      ,\n         2 VOLSER  CHAR(6)                                           ,\n         2 MEMBER  CHAR(8)                                           ,\n         2 DSNAME  CHAR(44)                                          ,\n\n       1 INREC                                                       ,\n         2 MEMBER  CHAR(8)                                           ,\n         2 CILLER  CHAR(2)                                           ,\n         2 VOLSER  CHAR(6)                                           ,\n         2 DSNAME  CHAR(44)                                          ,\n SYSPRINT SYSTEM OUTPUT                                              ,\n MEMBERF_KEY CHAR(52)                                                ,\n A BIT(1) INIT('1'B)                                                 ,\n RETURN_CODE FIXED BIN(31,0)                                         ,\n (PLIRETC,PLISRTA,ONCODE) BUILTIN                                    ;\n /******************************************************************/\n /**        Sort processing.                                      **/\n /******************************************************************/\n\n CALL PLISRTA(' SORT FIELDS=(1,8,CH,A,17,44,CH,A) ',\n              ' RECORD TYPE=F,LENGTH=(60) ',\n              256000,\n              RETURN_CODE)                                           ;\n\n SELECT(RETURN_CODE)                                                 ;\n  WHEN( 0) PUT SKIP EDIT('Sort complete. RC = 0                 ')(A);\n  WHEN(16) PUT SKIP EDIT('Sort failed  . RC = 16                ')(A);\n  WHEN(20) PUT SKIP EDIT('Sort message data set missing. RC = 16')(A);\n  OTHERWISE PUT SKIP EDIT('Invalid sort. RC = ',RETURN_CODE)(A,F(2)) ;\n END                                                                 ;\n\n ON ENDFILE(FDSET ) A = '0'B                                         ;\n OPEN FILE(FMEMBER) OUTPUT                                           ;\n OPEN FILE(FDSET )  INPUT                                            ;\n READ FILE(FDSET )  INTO(INREC)                                      ;\n DO WHILE(A)                                                         ;\n    OUTREC.MEMBER = INREC.MEMBER                                     ;\n    OUTREC.DSNAME = INREC.DSNAME                                     ;\n    OUTREC.VOLSER = INREC.VOLSER                                     ;\n    MEMBERF_KEY   = INREC.MEMBER||INREC.DSNAME                       ;\n    WRITE FILE(FMEMBER) FROM(OUTREC) KEYFROM(MEMBERF_KEY)            ;\n READ FILE(FDSET) INTO(INREC)                                        ;\n END                                                                 ;\n        CLOSE FILE(FMEMBER)                                          ;\n        CLOSE FILE(FDSET  )                                          ;\n END ATOS1                                                           ;\n//GO.FMEMBER   DD   DISP=SHR,DSN=EDID.MEMBER.LISTV\n//GO.FDSET     DD   DISP=SHR,DSN=EDID.MEMBER.LIST\n//*\n//GO.SORTIN    DD   DISP=OLD,DSN=EDID.MEMBER.LIST\n//GO.SORTOUT   DD   DISP=SHR,DSN=EDID.MEMBER.LIST\n//GO.SORTWK01  DD   UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE)\n//GO.SORTWK02  DD   UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE)\n//GO.SORTWK03  DD   UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE)\n//GO.SYSPRINT  DD   SYSOUT=*\n//GO.SYSOUT    DD   SYSOUT=*\n/*\n//*\n//STEP3     EXEC PGM=IDCAMS\n//SYSPRINT  DD   SYSOUT=*\n       DEFINE  ALTERNATEINDEX                       -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV.AIX)      -\n                 RELATE(EDID.MEMBER.LISTV)         -\n                 SHAREOPTIONS(1 3)                  -\n                 FREESPACE(0 0)                     -\n                 RECORDSIZE(4086 32600)             -\n                 KEYS (8 6)                         -\n                 NOUPGRADE                          -\n                 NOREUSE                            -\n                 NONUNIQUEKEY                       -\n                 )                                  -\n                 DATA                               -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV.AIX.D) -\n                 VOLUMES (EDID02)                   -\n                 CYLINDERS(30 2)                    -\n                 CISZ(4096)                         -\n                 RECOVERY                           -\n                 )                                  -\n                 INDEX                              -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV.AIX.I) -\n                 VOLUMES (EDID02)                   -\n                 TRACKS(4 1)                        -\n                 CISZ(4096)                         -\n                 )\n/*\n//*\n//STEP4     EXEC PGM=IDCAMS\n//SYSPRINT  DD   SYSOUT=*\n//DD1       DD   DISP=OLD,DSN=EDID.MEMBER.LISTV\n//DD2       DD   DISP=OLD,DSN=EDID.MEMBER.LISTV.AIX\n//SORTMSG   DD   DISP=SHR,DSN=SYS1.ICEISPM\n//IDCUT1    DD   DISP=(,DELETE),AMP='AMORG',UNIT=SYSDA,SPACE=(CYL,12)\n//IDCUT2    DD   DISP=(,DELETE),AMP='AMORG',UNIT=SYSDA,SPACE=(CYL,12)\n//SYSIN     DD   *\n               BLDINDEX                             -\n                 SORTMESSAGEDD(SORTMSG)             -\n                 EXTERNALSORT                       -\n                 INFILE(DD1) OUTFILE(DD2)\n  IF LASTCC = 0                                     -\n   THEN DO\n       DEFINE  PATH                                 -\n                 (                                  -\n                 NAME (EDID.MEMBER.LISTV.PATH)     -\n                 PATHENTRY(EDID.MEMBER.LISTV.AIX) -\n                 NOUPDATE                           -\n                 )\n        END\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PLIM": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x00\\x98\\x12o\\x00\\x98\\x12\\x8f\\x15%\\x00\\x1f\\x00W\\x00\\x00\\xe2\\xc4\\xc9\\xc1\\xc7\\xc1\\xe2@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1998-05-06T00:00:00", "modifydate": "1998-05-08T15:25:00", "lines": 31, "newlines": 87, "modlines": 0, "user": "SDIAGAS"}, "text": "//EDIAGAS1     JOB  (EDIAGAS),MSGCLASS=X,MSGLEVEL=(1,1),CLASS=A\n//BIR          EXEC PLIXCLG\n//SYSPRINT     DD   SYSOUT=*\n//GO.PATH      DD   DISP=SHR,DSN=EDID.MEMBER.LISTV.PATH\n//PLI.SYSIN    DD   *\n ATOS:PROC OPTIONS(MAIN);\n DCL PATH  FILE RECORD KEYED SEQUENTIAL ENV(VSAM);\n DCL EOFPATH BIT(1) INIT('0'B);\n DCL UYE CHAR(8);\n DCL   1 INREC,\n         2 VOLSER  CHAR(6),\n         2 MEMBER  CHAR(8) INIT(' '),\n         2 DSNAME  CHAR(44);\n ON KEY(PATH) EOFPATH='0'B;\n UYE = 'SIL';\n OPEN FILE(PATH);\n READ FILE(PATH) INTO(INREC) KEY(UYE);\n IF MEMBER =' ' THEN DO;\n                       PUT EDIT('The member    ',UYE,'couldnt be  ',\n                       'found........')(COL(1),A,A(8),A,A);\n                      RETURN;\n                    END;\n PUT  SKIP LIST('MEMBER      VOLSER      DSNAME');\n PUT  SKIP LIST('======      ======      ======');\n DO WHILE(\u00acEOFPATH);\n     PUT  FILE(SYSPRINT) SKIP EDIT(MEMBER,VOLSER,DSNAME)\n      (COL(1),A(8),X(4),A(6),X(4),A(44));\n     IF  \u00acSAMEKEY(PATH) THEN LEAVE;\n                         ELSE  READ FILE(PATH) INTO(INREC);\n END;\n END ATOS;\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TEXT": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x98\\x12\\x7f\\x00\\x98\\x13_\\x14%\\x00 \\x00\\x00\\x00\\x00\\xe2\\xc4\\xc9\\xc1\\xc7\\xc1\\xe2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1998-05-07T00:00:00", "modifydate": "1998-05-15T14:25:00", "lines": 32, "newlines": 0, "modlines": 0, "user": "SDIAGAS"}, "text": "\n1 Firstly, a seql. data set consisting of all-members in system\n  must be created (Edid.Member.List). Format of it is shown as:\n\n  Col  1 - 8  member\n  Col 11 - 16 volser\n  Col 17 - 60 dataset name\n\n* After step 2 is completed, this dset can be deleted.\n\n2 Then the job JOBM must be executed. This will prepare the VSAM data\n  sets.\n\n3 The PL/I program PLIM finds the member you want by using this VSAM\n  path file.\n\n4 Sample job result :\n   input  : SIL member..\n   output : like the folllowing..\n\n\n   MEMBER      VOLSER    DSNAME\n   ======      ======    ======\n   SIL         V00001    SAPAAAS.BATCH.PLI\n   SIL         VDID01    SADAAAS.SAMPLE2.ASM\n   SIL         V00002    PRFAGAS.SIL.SIL1\n   SIL         SYST0A    PRFAGAS.USER.JCL\n   SIL         TSOP01    EMVD.NAT.JCLLIB\n   SIL         TSOP01    KMUD.NET.VTAMLST\n   SIL         MVSTRA    UGIDBA1.DB2.JCL\n   SIL         MVSPR2    UDIGAAS.BATCH.JCLLIB\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT337/FILE337.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT337", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}