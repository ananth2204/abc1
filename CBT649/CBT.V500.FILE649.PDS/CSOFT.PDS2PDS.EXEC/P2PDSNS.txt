/* REXX */
/*===================================================================*\
|Program Name: P2PDSNS                                                |
|Date Written: May 31, 1999                                           |
|      Author: Michael A. Newell                                      |
|              Austin, TX                                             |
|              http://wb4huc.home.texas.net                           |
|              http://wb4huc.home.texas.net/pds2pds                   |
|                                                                     |
| Description: This program uses the LISTDSI and SYSDSN functions to  |
|              verify that datasets exist and are available, and that |
|              the specified datasets are partitioned.                |
|                                                                     |
|   Called By: P2PDSNP                                                |
|                                                                     |
|       Calls: LISTDSI                                                |
|              SYSDSN                                                 |
|                                                                     |
\*===================================================================*/
PARSE ARG dsn,volid                         /* get args from caller   */
CALL Initialize_Variables                   /* initialize variables   */
CALL Check_Dsn_Status                       /* get dataset status     */
EXIT ldsi_reason                            /* exit program           */

Check_Dsn_Status:
   IF volid = '' THEN                       /*if volid blank          */
      ldsi_arg = dsn                        /*   arg = dsn            */
   ELSE                                     /*else                    */
      ldsi_arg = dsn 'VOLUME('volid')'      /*   arg = dsn & volid    */
   ldsi_arg = ldsi_arg 'RECALL'             /*always recall if archivd*/
   ldsi_rc = LISTDSI(ldsi_arg)              /*get dataset status      */
   IF ldsi_rc = 0 | ldsi_rc = 4 THEN        /*   if dataset ok        */
      IF SYSDSORG /= 'PO' THEN              /*      if dataset not pds*/
         DO                                 /*         do             */
           zedsmsg = dsn_not_pds_s          /*           set short msg*/
           zedlmsg = dsn_not_pds_l          /*           set long msg */
           ldsi_reason=4                    /*           set ret code */
           "ISPEXEC SETMSG MSG(ISRZ001)"    /*           displ msg    */
           RETURN                           /*           return       */
         END                                /*         end            */
   IF ldsi_rc = 16 THEN                     /*if bad return code      */
      ldsi_reason = RIGHT(SYSREASON,2)      /*   get reason code      */
   IF ldsi_reason > 0 THEN                  /*if reason code gt zero  */
      SELECT                                /* start select           */
        WHEN ldsi_reason = 1 THEN           /*   dsn or volid invalid */
          DO                                /*     do                 */
            zedsmsg = inv_dsn_s             /*       set short message*/
            zedlmsg = inv_dsn_l             /*       set long message */
          END                               /*     end                */
        WHEN ldsi_reason = 5 THEN           /*   dataset not found    */
          DO                                /*     do                 */
            zedsmsg = dsn_notfnd_s          /*       set short message*/
            zedlmsg = dsn_notfnd_l          /*       set long message */
          END                               /*     end                */
        WHEN ldsi_reason = 22 THEN          /*   dasd volume not found*/
          DO                                /*     do                 */
            zedsmsg = vol_notfnd_s          /*       set short message*/
            zedlmsg = vol_notfnd_l          /*       set long message */
          END                               /*     end                */
        WHEN ldsi_reason = 24 THEN          /*   dataset not found    */
          DO                                /*     do                 */
            zedsmsg = dsn_notfnd_s          /*       set short message*/
            zedlmsg = dsn_notfnd_l          /*       set long message */
          END                               /*     end                */
      OTHERWISE                             /* otherwise              */
        CALL Unknown_Error                  /*   do                   */
      END                                   /* end select             */
   IF ldsi_rc > 0 THEN                      /* if an error occurred   */
      "ISPEXEC SETMSG MSG(ISRZ001)"         /*    display err msg     */
RETURN


Unknown_Error:
   term_width = SYSVAR(SYSWTERM)            /*get term width          */
   zedsmsg = 'Error - Press PF1       '     /*set short message       */
   zedlmsg = 'Error: REXX Exec P2PDSNS'  ,  /*set long message        */
     ' - Procedure Check_Dsn:'              /*set long message        */
   zedlmsg = LEFT(zedlmsg,term_width)       /*set to term width       */
   msg2 = 'Error Processing Dataset:' dsn   /*msg 2                   */
   msg2 = LEFT(msg2,term_width)             /*set to term width       */
   zedlmsg = zedlmsg msg2                   /*add to long messge      */
   msg3 = 'LISTDSI Return Code:' ldsi_rc    /*msg 3                   */
   msg3 = LEFT(msg3,term_width)             /*set to term width       */
   zedlmsg = zedlmsg msg3                   /*add to long message     */
   msg4 = SYSMSGLVL2                        /*msg 4                   */
   msg4 = LEFT(msg4,term_width)             /*set to term width       */
   zedlmsg = zedlmsg msg4                   /*add to long messge      */
RETURN

Initialize_Variables:
   msg_stat = MSG('OFF')
   dummy = OUTTRAP("xyz.")
   ldsi_reason   = 0
   zedsmsg       = ''
   zedlmsg       = ''
   dsn_notfnd_s  = 'Dataset Not Found       '
   dsn_notfnd_l  =  dsn 'could not be found'
   vol_notfnd_s  =  volid 'Not Found'
   vol_notfnd_l  =  'DASD Volume' volid 'could not be found'
   inv_dsn_s     = 'Invalid DSN or VOLSER   '
   inv_dsn_l     =  'Either the dataset name or the volser is invalid'
   dsn_not_pds_s = 'Dataset is not a PDS    '
   dsn_not_pds_l =  dsn 'is not a partitioned dataset'
   dataset_error = 'Dataset Error-Press PF1  '
RETURN
