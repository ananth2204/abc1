/* REXX */
/*===================================================================*\
|Program Name: P2PLDEL                                                |
|Date Written: May 31, 1999                                           |
|      Author: Michael A. Newell                                      |
|              Austin, TX                                             |
|              http://wb4huc.home.texas.net                           |
|              http://wb4huc.home.texas.net/pds2pds                   |
|                                                                     |
| Description: This exec processes the Delete Member Command for the  |
|              PDS2PDS utility                                        |
|                                                                     |
|   Called By: P2PMBRL                                                |
|                                                                     |
|       Calls:                                                        |
|                                                                     |
\*===================================================================*/
ADDRESS ISPEXEC                             /*commands dflt to ispf   */
ARG lr_sw,tblname,dsnl,dsnr,p2pverno,    ,  /*get args from caller    */
    memlo,memro,mbrl,mbrr,cnfrml,cnfrmr, ,  /*                        */
    volidl,volidr,nbr_of_mbrs               /*                        */
"TBTOP" tblname                             /*go to top of table      */
INTERPRET 'pnldsn = dsn'lr_sw               /*set dsname for panel    */
INTERPRET 'volid = volid'lr_sw              /*set volser              */
INTERPRET 'mbrm = mbr'lr_sw                 /*set mbr name for panel  */
INTERPRET                           ,       /*find member             */
  '"TBSCAN"' tblname                ,       /*                        */
           '"ARGLIST(mbr'lr_sw')'   ,       /*                        */
           'CONDLIST(EQ)'           ,       /*                        */
           'PREVIOUS'               ,       /*                        */
           'POSITION(crpn)'         ,       /*                        */
           'ROWID(currow)"'                 /*                        */
tbscan_rc = rc                              /*set return code         */
IF tbscan_rc = 8 THEN                       /*if mbr not found        */
   DO                                       /*   do                   */
     QUEUE 'MSG(PTPM007)'                   /*     set message id     */
     RETURN 8                               /*     return to caller   */
   END                                      /*   end                  */
IF tbscan_rc > 8 THEN                       /*if other error          */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */
IF volid /= '' THEN                         /*if volid entered        */
   volid = 'VOLUME('volid')'                /*   use it               */
"LMINIT DATAID("ddvar")"     ,              /*get dataid for dataset  */
       "DATASET("pnldsn")"   ,              /*                        */
       volid                 ,              /*                        */
       "ENQ(SHRW)"                          /*                        */
lminit_rc = rc                              /*set return code         */
IF lminit_rc \= 0 THEN                      /*if bad return code      */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return             */
   END                                      /*   end                  */
"LMOPEN DATAID("ddvar")"     ,              /*open dataset            */
       "OPTION(OUTPUT)"                     /*                        */
lmopen_rc = rc                              /*set return code         */
IF lmopen_rc \= 0 THEN                      /*if bad return code      */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return             */
   END                                      /*   end                  */
"TBTOP" tblname                             /*go to top of table      */
lmmdel_rc = 0                               /*init return code        */
"TBSKIP" tblname "ROW("currow")"            /*skip to next row        */
"TBGET" tblname                             /*get a row               */
INTERPRET 'mbro = mbr'lr_sw                 /*set member name         */
panel_rc = 0                                /*initialize panel rc     */
IF (lr_sw = 'L' & cnfrml = 'Y') | ,         /*if confirm line cmd     */
   (lr_sw = 'R' & cnfrmr = 'Y') THEN        /*                        */
   DO                                       /*   do                   */
     "ADDPOP ROW(0) COLUMN(0)"              /*     show popup win     */
     "DISPLAY PANEL(P2PLDEL)"               /*     display panel      */
     panel_rc = rc                          /*     set panel rc       */
     "REMPOP"                               /*     remove popup       */
   END                                      /*   end                  */
IF panel_rc = 8 THEN                        /*if pf3 or pf4 pressed   */
   DO                                       /*   do                   */
     CALL Close_File                        /*     close file         */
     RETURN 0                               /*     return to caller   */
   END                                      /*   end                  */
IF panel_rc /= 0 THEN                       /*if bad panel rc         */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     set return code    */
   END                                      /*   end                  */
"LMMDEL DATAID("ddvar")"     ,              /*   delete member        */
       "MEMBER("mbro")"                     /*                        */
lmmdel_rc = rc                              /*set return code         */
IF lmmdel_rc \= 0 THEN                      /*if bad return code      */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */
INTERPRET 'mem'lr_sw'o = mem'lr_sw'o - 1'   /*sub 1 from nbr mbrs     */
"TBDELETE" tblname                          /*delete table row        */
INTERPRET 'res'lr_sw '= "D"'                /*set results field       */
INTERPRET 'mbr'lr_sw '= " "'                /*blank mbr name          */
INTERPRET 'stat1'lr_sw '= " "'              /*blank stats line 1      */
INTERPRET 'stat2'lr_sw '= " "'              /*blank stats line 2      */
INTERPRET 'stat3'lr_sw '= " "'              /*blank stats line 3      */
INTERPRET 'stat4'lr_sw '= " "'              /*blank stats line 4      */
INTERPRET 'stat5'lr_sw '= " "'              /*blank stats line 5      */
INTERPRET 'stat6'lr_sw '= " "'              /*blank stats line 6      */
INTERPRET 'stat7'lr_sw '= " "'              /*blank stats line 7      */
"TBADD" tblname "MULT("nbr_of_mbrs")"       /*re-add row to table     */
tbadd_rc = rc                               /*set return code         */
IF tbadd_rc > 8 THEN                        /*if other error          */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */

QUEUE memlo                                 /*put memlo in stack      */
QUEUE memro                                 /*put memro in stack      */
CALL Close_File                             /*close file              */

Exit 10

System_Error:
   QUEUE zerrsm                             /*put short msg in stack  */
   QUEUE zerrlm                             /*put long msg in stack   */
   CALL Close_File                          /*close filee             */
RETURN

CLOSE_File:
   "LMCLOSE DATAID("ddvar")"                /*close dataset           */
   "LMFREE DATAID("ddvar")"                 /*free dataset            */
RETURN
