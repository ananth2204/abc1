/* REXX */
/*===================================================================*\
|Program Name: P2PLREN                                                |
|Date Written: May 31, 1999                                           |
|      Author: Michael A. Newell                                      |
|              Austin, TX                                             |
|              http://wb4huc.home.texas.net                           |
|              http://wb4huc.home.texas.net/pds2pds                   |
|                                                                     |
| Description: This exec processes the Rename Member Command for the  |
|              PDS2PDS utility                                        |
|                                                                     |
|   Called By: P2PMBRL                                                |
|                                                                     |
|       Calls:                                                        |
|                                                                     |
\*===================================================================*/
ADDRESS ISPEXEC                             /*commands dflt to ispf   */
ARG lr_sw,tblname,dsnl,dsnr,p2pverno, ,     /*get args from caller    */
    mbrl,mbrr,volidl,volidr,nbr_of_mbrs     /*                        */
"TBTOP" tblname                             /*go to top of table      */
INTERPRET 'pnldsn = dsn'lr_sw               /*set dsname for panel    */
INTERPRET 'volid = volid'lr_sw              /*set volser              */
INTERPRET 'mbrm = mbr'lr_sw                 /*set mbr name for panel  */
INTERPRET                           ,       /*find member             */
  '"TBSCAN"' tblname                ,       /*                        */
           '"ARGLIST(mbr'lr_sw')'   ,       /*                        */
           'CONDLIST(EQ)'           ,       /*                        */
           'PREVIOUS'               ,       /*                        */
           'POSITION(crpn)'         ,       /*                        */
           'ROWID(currow)"'                 /*                        */
tbscan_rc = rc                              /*set return code         */
IF tbscan_rc = 8 THEN                       /*if mbr not found        */
   DO                                       /*   do                   */
     QUEUE 'MSG(PTPM007)'                   /*     set short message  */
     RETURN 8                               /*     return to caller   */
   END                                      /*   end                  */
IF tbscan_rc > 8 THEN                       /*if other error          */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */
IF volid /= '' THEN                         /*if volid entered        */
   volid = 'VOLUME('volid')'                /*   use it               */
"LMINIT DATAID("ddvar")"            ,       /*get dataid for dataset  */
       "DATASET("pnldsn")"          ,       /*                        */
       volid                        ,       /*                        */
       "ENQ(SHRW)"                          /*                        */
lminit_rc = rc                              /*set return code         */
IF lminit_rc \= 0 THEN                      /*if bad return code      */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return             */
   END                                      /*   end                  */
"LMOPEN DATAID("ddvar")"            ,       /*open dataset            */
       "OPTION(OUTPUT)"                     /*                        */
lmopen_rc = rc                              /*set return code         */
IF lmopen_rc \= 0 THEN                      /*if bad return code      */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return             */
   END                                      /*   end                  */
"TBTOP" tblname                             /*go to top of table      */
lmmren_rc = 0                               /*init return code        */
"TBSKIP" tblname "ROW("currow")"            /*skip to next row        */
"TBGET" tblname                             /*retrieve row            */
INTERPRET 'mbro = mbr'lr_sw                 /*set member name         */
mbr_err = 1                                 /*set switch              */
DO WHILE mbr_err = 1                        /*do while error          */
   "ADDPOP ROW(0) COLUMN(0)"                /*   show popup window    */
   "DISPLAY PANEL(P2PLREN) CURSOR(MBRN)"    /*   display panel        */
   panel_rc = rc                            /*   set panel rc         */
   "REMPOP"                                 /*   remove pop-up window */
   mbr_err = 0                              /*   reset switch         */
   lmmren_rc = 0                            /*   reset return code    */
   IF panel_rc = 8 THEN                     /*   if pf3 or pf4 pressed*/
      DO                                    /*      do                */
        CALL Close_File                     /*        close file      */
        RETURN 0                            /*        return to caller*/
      END                                   /*      end               */
   IF panel_rc /= 0 THEN                    /*   if bad panel rc      */
      DO                                    /*      do                */
        CALL System_Error                   /*        put msgs in stak*/
        RETURN 4                            /*        return to caller*/
      END                                   /*      end               */
   IF mbrn = mbro THEN                      /*   if mbr names are same*/
      DO                                    /*      do                */
        "SETMSG MSG(PTPM006)"               /*        display message */
        mbr_err = 1                         /*        set error sw    */
        ITERATE                             /*        do again        */
      END                                   /*      end               */
   "LMMREN DATAID("ddvar")"            ,    /*   rename member        */
         "MEMBER("mbro")"              ,    /*                        */
         "NEWNAME("mbrn")"                  /*                        */
   lmmren_rc = rc                           /*   set return code      */
   IF lmmren_rc \= 0 THEN                   /*   if bad return code   */
      DO                                    /*      do                */
        "SETMSG MSG(ISRZ002)"               /*        display message */
        mbr_err = 1                         /*        set error sw    */
        ITERATE                             /*        do again        */
      END                                   /*      end               */
   "TBDELETE" tblname                       /*   delete table row     */
   INTERPRET 'res'lr_sw '= R'               /*   set results fld      */
   INTERPRET 'mbr'lr_sw '= mbrn'            /*   set member name      */
   "TBADD" tblname "MULT("nbr_of_mbrs")"    /*   re-add row to table  */
   tbadd_rc = rc                            /*   set return code      */
   IF tbadd_rc > 8 THEN                     /*   if bad return code   */
      DO                                    /*      do                */
        CALL System_Error                   /*        put msgs in stak*/
        RETURN 4                            /*        return to caller*/
      END                                   /*      end               */
END                                         /*end                     */
CALL Close_File                             /*close file              */
EXIT 0

System_Error:
   QUEUE zerrsm                             /*put short msg in stack  */
   QUEUE zerrlm                             /*put long msg in stack   */
   CALL Close_File                          /*close filee             */
RETURN

Close_File:
   "LMCLOSE DATAID("ddvar")"                /*close dataset           */
   "LMFREE DATAID("ddvar")"                 /*free dataset            */
RETURN
