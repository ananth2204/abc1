/* REXX */
/*===================================================================*\
|Program Name: P2PLEDT                                                |
|Date Written: May 31, 1999                                           |
|      Author: Michael A. Newell                                      |
|              Austin, TX                                             |
|              http://wb4huc.home.texas.net                           |
|              http://wb4huc.home.texas.net/pds2pds                   |
|                                                                     |
| Description: This exec processes the Edit Member Command for the    |
|              PDS2PDS utility                                        |
|                                                                     |
|   Called By: P2PMBRL                                                |
|                                                                     |
|       Calls:                                                        |
|                                                                     |
\*===================================================================*/
ADDRESS ISPEXEC                             /*commands dflt to ispf   */
ARG lr_sw,tblname,dsnl,dsnr,p2pverno,    ,  /*get args from caller    */
    mbrl,mbrr,volidl,volidr,nbr_of_mbrs     /*                        */
"TBTOP" tblname                             /*go to top of table      */
INTERPRET 'pnldsn = dsn'lr_sw               /*set dsname for panel    */
INTERPRET 'volid = volid'lr_sw              /*set volser name         */
INTERPRET 'mbrm = mbr'lr_sw                 /*set mbr name for panel  */
IF volid /= '' THEN                         /*if volid entered        */
   volid = 'VOLUME('volid')'                /*   use it               */
INTERPRET                           ,       /*find member             */
  '"TBSCAN"' tblname                ,       /*                        */
           '"ARGLIST(mbr'lr_sw')'   ,       /*                        */
           'CONDLIST(EQ)'           ,       /*                        */
           'PREVIOUS'               ,       /*                        */
           'POSITION(crpn)'         ,       /*                        */
           'ROWID(currow)"'                 /*                        */
tbscan_rc = rc                              /*set return code         */
IF tbscan_rc = 8 THEN                       /*if mbr not found        */
   DO                                       /*   do                   */
     QUEUE 'MSG(PTPM007)'                   /*     set message id     */
     RETURN 8                               /*     return to caller   */
   END                                      /*   end                  */
IF tbscan_rc >8 THEN                       /*if other error          */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */
edit_rc = 0                                 /*init return code        */
"TBSKIP" tblname "ROW("currow")"            /*skip to next row        */
"TBGET" tblname                             /*retrieve row            */
INTERPRET 'mbro = mbr'lr_sw                 /*set mbr name to edit    */
"CONTROL DISPLAY SAVE"                      /*save current display    */
IF lr_sw = 'L' THEN                         /*If edit left            */
   "EDIT DATASET"                 ,         /*   edit left member     */
         "("                      ,         /*                        */
         Build_Dsn(dsnl,mbrl)     ,         /*                        */
         ")"                      ,         /*                        */
         volid                              /*                        */
ELSE                                        /*else                    */
   "EDIT DATASET"                 ,         /*   edit right member    */
         "("                      ,         /*                        */
         Build_Dsn(dsnr,mbrr)     ,         /*                        */
         ")"                      ,         /*                        */
         volid                              /*                        */
edit_rc = rc                                /*set return code         */
"CONTROL DISPLAY RESTORE"                   /*restore current displ   */
IF edit_rc = 4 THEN                         /*if data not saved       */
   DO                                       /*   do                   */
     INTERPRET 'res'lr_sw '= "E"'           /*     set results field  */
     "TBDELETE" tblname                     /*     delete row         */
     "TBADD" tblname    ,                   /*     re-add row         */
             "MULT("nbr_of_mbrs")"          /*                        */
     tbadd_rc = rc                          /*     set return code    */
     IF tbadd_rc > 8 THEN                   /*     if error adding row*/
        DO                                  /*        do              */
          CALL System_Error                 /*          stack msgs    */
          RETURN 4                          /*          return        */
        END                                 /*        end             */
     RETURN 0                               /*                        */
   END                                      /*                        */
IF edit_rc \= 0 THEN                        /*if bad return code      */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */
IF Get_New_Stats() > 0 THEN                 /*if err getting stats    */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */
"TBDELETE" tblname                          /*delete row              */
"TBADD" tblname "MULT("nbr_of_mbrs")"       /*re-add row              */
tbadd_rc = 0                                /*set return code         */
IF tbadd_rc >8 THEN                         /*if error adding tbl row */
   DO                                       /*   do                   */
     CALL System_Error                      /*     put msgs in stack  */
     RETURN 4                               /*     return to caller   */
   END                                      /*   end                  */

EXIT 0

Build_Dsn:
   ARG dsn,mbrname                          /*get dsn & mbrname       */
   mbrname = STRIP(mbrname)                 /*drop spaces from mbrname*/
   dsn_length = LENGTH(dsn) - 1             /*get dsn length          */
   dsn = LEFT(dsn,dsn_length)               /*drop right quote        */
   dsn = dsn || "(" || mbrname || ")'"      /*add mbrname/right paren */
RETURN dsn                                  /*                        */

Get_New_Stats:
   INTERPRET 'edit_dsn = dsn'lr_sw          /*set dsname to edit      */
   "LMINIT DATAID("ddvar")"     ,           /*get dataset dataid      */
          "DATASET("edit_dsn")" ,           /*                        */
          volid                 ,           /*                        */
          "ENQ(SHRW)"                       /*                        */
   lminit_rc = rc                           /*set return code         */
   IF lminit_rc \= 0 THEN                   /*if bad return code      */
      RETURN 4                              /*   return to caller     */
   "LMOPEN DATAID("ddvar")"     ,           /*open dataset            */
          "OPTION(INPUT)"                   /*                        */
   lmopen_rc = rc                           /*set return code         */
   IF lmopen_rc \= 0 THEN                   /*if bad return code      */
      RETURN 4                              /*   return to caller     */
   INTERPRET 'mbrname = mbr'lr_sw           /*set mbrname             */
   "LMMLIST DATAID("ddvar")"    ,           /*list mbr stats          */
           "OPTION(LIST)"       ,           /*                        */
           "MEMBER(MBRNAME)"    ,           /*                        */
           "STATS(YES)"                     /*                        */
   lmmlist_rc = rc                          /*set return code         */
   IF lmmlist_rc \= 0 THEN                  /*if bad return code      */
      RETURN 4                              /*   return to caller     */
   CALL Set_Stats                           /*get new mbr stats       */
   CALL Close_File                          /*close file              */
RETURN 0

System_Error:
   QUEUE zerrsm                             /*put short msg in stack  */
   QUEUE zerrlm                             /*put long msg in stack   */
   CALL Close_File                          /*close filee             */
RETURN

Close_File:
   "LMCLOSE DATAID("ddvar")"                /*close target dataset    */
   "LMFREE DATAID("ddvar")"                 /*free target dataset     */
RETURN

Set_Stats:
   INTERPRET 'stat1'lr_sw '= " "'           /*blank stats line 1      */
   INTERPRET 'stat2'lr_sw '= " "'           /*blank stats line 2      */
   INTERPRET 'stat3'lr_sw '= " "'           /*blank stats line 3      */
   INTERPRET 'stat4'lr_sw '= " "'           /*blank stats line 4      */
   INTERPRET 'stat5'lr_sw '= " "'           /*blank stats line 5      */
   INTERPRET 'stat6'lr_sw '= " "'           /*blank stats line 6      */
   INTERPRET 'stat7'lr_sw '= " "'           /*blank stats line 7      */
   IF zlvers = '' THEN                      /*if stats flds are blank */
      RETURN                                /*   return               */
   PARSE VAR zlmtime hh ':' mm              /*fix time display format */
   zlmtime = hh || mm || ':' || zlmsec      /*fix time display format */
   INTERPRET ,                              /*new stats line 1        */
     'stat1'lr_sw '= zlvers || "." || ' ,   /*                        */
                    'zlmod zlcdate zlmdate' /*                        */
   INTERPRET ,                              /*new stats line 2        */
     'stat2'lr_sw '= zlcdate zlmdate '  ,   /*                        */
                    'zlmtime'               /*                        */
   INTERPRET ,                              /*new stats line 3        */
     'stat3'lr_sw '= zlmdate zlmtime '  ,   /*                        */
                    'RIGHT(zlcnorc,5)'      /*                        */
   INTERPRET ,                              /*new stats line 4        */
     'stat4'lr_sw '= zlmtime '          ,   /*                        */
                    'RIGHT(zlcnorc,5) ' ,   /*                        */
                    'RIGHT(zlinorc,5)'      /*                        */
   INTERPRET ,                              /*new stats line 5        */
     'stat5'lr_sw '= RIGHT(zlcnorc,5) ' ,   /*                        */
                    'RIGHT(zlinorc,5) ' ,   /*                        */
                    'RIGHT(zlmnorc,5)'      /*                        */
   INTERPRET ,                              /*new stats line 6        */
     'stat6'lr_sw '= RIGHT(zlinorc,5) ' ,   /*                        */
                    'RIGHT(zlmnorc,5) ' ,   /*                        */
                    'LEFT(zluser,8)'        /*                        */
   INTERPRET ,                              /*new stats line 7        */
     'stat7'lr_sw '= RIGHT(zlmnorc,5) ' ,   /*                        */
                    'LEFT(zluser,8) '   ,   /*                        */
                    'RIGHT(stat7'lr_sw',3)' /*                        */
   INTERPRET 'res'lr_sw '= "E"'             /*                        */
RETURN
