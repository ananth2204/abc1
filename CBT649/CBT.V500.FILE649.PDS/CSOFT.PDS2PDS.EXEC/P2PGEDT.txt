/* REXX */
/*===================================================================*\
|Program Name: P2PGEDT                                                |
|Date Written: May 31, 1999                                           |
|      Author: Michael A. Newell                                      |
|              Austin, TX                                             |
|              http://wb4huc.home.texas.net                           |
|              http://wb4huc.home.texas.net/pds2pds                   |
|                                                                     |
| Description: This exec processes the Global Edit Command for the    |
|              PDS2PDS utility                                        |
|                                                                     |
|   Called By: P2PMBRL                                                |
|                                                                     |
|       Calls:                                                        |
|                                                                     |
\*===================================================================*/
ADDRESS ISPEXEC                             /*commands dflt to ispf   */
ARG lr_sw,tblname,dsnl,dsnr,volidl,volidr,, /*get args from caller  */
    p2pverno,nbr_of_mbrs                    /*                        */
INTERPRET 'pnldsn = dsn'lr_sw               /*set panel dsname        */
INTERPRET 'volid = volid'lr_sw              /*set volser name         */
IF volid /= '' THEN                         /*if volid entered        */
   volid = 'VOLUME('volid')'                /*   use it               */
"TBTOP" tblname                             /*go to top of table      */
"TBQUERY" tblname "ROWNUM(TBLROWS)"         /*nbr of rows in table    */
edit_rc = 0                                 /*init return code        */
cnfrmoff = ' '                              /*set line cmd cnfrm off  */
DO tblrows                                  /*do once for each row    */
   "TBSKIP" tblname "NUMBER(1)"             /*   skip to next row     */
   "TBGET" tblname                          /*   get a row            */
   INTERPRET 'mbr = mbr'lr_sw               /*   set mbr name         */
   IF mbr = '' THEN                         /*   if mbr name blank    */
      IF i = tblrows THEN                   /*      if last mbr       */
         LEAVE                              /*         quit           */
      ELSE                                  /*      else              */
         ITERATE                            /*         get next mbr   */
   IF cnfrmoff = ' ' THEN                   /*   if cmd confirm off   */
      DO                                    /*      do                */
        "ADDPOP ROW(0) COLUMN(0)"           /*        show popup win  */
        "DISPLAY PANEL(P2PGEDT)"            /*        display panel   */
        panel_rc = rc                       /*        set panel rc    */
        "REMPOP"                            /*        remove popup win*/
        IF panel_rc = 8 THEN                /*        if pf3/pf4      */
           ITERATE                          /*           get next mbr */
        IF panel_rc /= 0 THEN               /*        if bad panel rc */
           DO                               /*           do           */
             CALL System_Error              /*             error msg  */
             LEAVE                          /*             leave      */
           END                              /*           end          */
      END                                   /*      end               */
   IF cancelop \= ' ' THEN                  /*   if command cancelled */
      LEAVE                                 /*      quit              */
   "CONTROL DISPLAY SAVE"                   /*   save current display */
   IF lr_sw = 'L' THEN                      /*   if edit left         */
      "EDIT DATASET"                 ,      /*      edit left member  */
            "("                      ,      /*                        */
            Build_Dsn(dsnl,mbrl)     ,      /*                        */
            ")"                      ,      /*                        */
            volid                           /*                        */
   ELSE                                     /*   else                 */
      "EDIT DATASET"                 ,      /*      edit right member */
            "("                      ,      /*                        */
            Build_Dsn(dsnr,mbrr)     ,      /*                        */
            ")"                      ,      /*                        */
            volid                           /*                        */
   edit_rc = rc                             /*   set return code      */
   "CONTROL DISPLAY RESTORE"                /*   restore current displ*/
   IF edit_rc = 4 THEN                      /*   if data not saved    */
      DO                                    /*     do                 */
        INTERPRET 'res'lr_sw '= "E"'        /*       set results field*/
        "TBDELETE" tblname                  /*       delete row       */
        "TBADD" tblname    ,                /*       re-add row       */
                "MULT("nbr_of_mbrs")"       /*                        */
        tbadd_rc = rc                       /*   set return code      */
        IF tbadd_rc > 8 THEN                /*   if bad return code   */
           DO                               /*      do                */
             CALL System_Error              /*        put msgs in stak*/
             LEAVE                          /*        exit loop       */
           END                              /*      end               */
        edit_rc = 0                         /*       reset ret code   */
        ITERATE                             /*       get next member  */
      END                                   /*     end                */
   IF edit_rc \= 0 THEN                     /*   if bad return code   */
      DO                                    /*      do                */
        CALL System_Error                   /*        queue msgs      */
        LEAVE                               /*        quit            */
      END                                   /*      end               */
   IF Get_New_Stats() > 0 THEN              /*   if bad rc from stats */
      DO                                    /*      do                */
        CALL System_Error                   /*        queue msgs      */
        LEAVE                               /*        quit            */
      END                                   /*      end               */
   "TBDELETE" tblname                       /*   delete table row     */
   "TBADD" tblname "MULT("nbr_of_mbrs")"    /*   re-add table row     */
   tbadd_rc = rc                            /*   set return code      */
   IF tbadd_rc > 8 THEN                     /*   if bad return code   */
      DO                                    /*      do                */
        CALL System_Error                   /*        put msgs in stak*/
        LEAVE                               /*        exit loop       */
      END                                   /*      end               */
END                                         /*end                     */

EXIT edit_rc

Build_Dsn:
   ARG dsn,mbrname                          /*get dsn & mbrname       */
   mbrname = STRIP(mbrname)                 /*drop spaces from mbrname*/
   dsn_length = LENGTH(dsn) - 1             /*get dsn length          */
   dsn = LEFT(dsn,dsn_length)               /*drop right quote        */
   dsn = dsn || "(" || mbrname || ")'"      /*add mbrname/right paren */
RETURN dsn                                  /*                        */

Get_New_Stats:
   INTERPRET 'edit_dsn = dsn'lr_sw          /*set dsname to edit      */
   "LMINIT DATAID("ddvar")"     ,           /*   get dataset dataid   */
          "DATASET("edit_dsn")" ,           /*                        */
          volid                 ,           /*                        */
          "ENQ(SHRW)"                       /*                        */
   lminit_rc = rc                           /*   set return code      */
   IF lminit_rc \= 0 THEN                   /*   if bad return code   */
      RETURN 4                              /*      return to caller  */
   "LMOPEN DATAID("ddvar")"     ,           /*   open dataset         */
          "OPTION(INPUT)"                   /*                        */
   lmopen_rc = rc                           /*   set return code      */
   IF lmopen_rc \= 0 THEN                   /*   if bad return code   */
      RETURN 4                              /*      return to caller  */
   INTERPRET 'mbrname = mbr'lr_sw           /*                        */
   "LMMLIST DATAID("ddvar")"    ,           /*   get member stats     */
           "OPTION(LIST)"       ,           /*                        */
           "MEMBER(MBRNAME)"    ,           /*                        */
           "STATS(YES)"                     /*                        */
   lmmlist_rc = rc                          /*   set return code      */
   IF lmmlist_rc \= 0 THEN                  /*   if bad return code   */
      RETURN 4                              /*      return to caller  */
   CALL Set_Stats                           /*   get new mbr stats    */
   CALL Close_File                          /*   close file           */
RETURN 0

System_Error:
   QUEUE zerrsm                             /*put short msg in stack  */
   QUEUE zerrlm                             /*put long msg in stack   */
   CALL Close_File                          /*close file              */
   edit_rc = 4                              /*set return code         */
RETURN

Close_File:
   "LMCLOSE DATAID("ddvar")"                /*close dataset           */
   "LMFREE DATAID("ddvar")"                 /*free dataset            */
   DROP DDVAR                               /*drop data id            */
RETURN

Set_Stats:
   INTERPRET 'stat1'lr_sw '= " "'           /*blank stats line 1      */
   INTERPRET 'stat2'lr_sw '= " "'           /*blank stats line 2      */
   INTERPRET 'stat3'lr_sw '= " "'           /*blank stats line 3      */
   INTERPRET 'stat4'lr_sw '= " "'           /*blank stats line 4      */
   INTERPRET 'stat5'lr_sw '= " "'           /*blank stats line 5      */
   INTERPRET 'stat6'lr_sw '= " "'           /*blank stats line 6      */
   INTERPRET 'stat7'lr_sw '= " "'           /*blank stats line 7      */
   IF zlvers = '' THEN                      /*if stats flds are blank */
      RETURN                                /*   return               */
   PARSE VAR zlmtime hh ':' mm              /*fix time display format */
   zlmtime = hh || mm || ':' || zlmsec      /*fix time display format */
   INTERPRET ,                              /*new stats line 1        */
     'stat1'lr_sw '= zlvers || "." || ' ,   /*                        */
                    'zlmod zlcdate zlmdate' /*                        */
   INTERPRET ,                              /*new stats line 2        */
     'stat2'lr_sw '= zlcdate zlmdate '  ,   /*                        */
                    'zlmtime'               /*                        */
   INTERPRET ,                              /*new stats line 3        */
     'stat3'lr_sw '= zlmdate zlmtime '  ,   /*                        */
                    'RIGHT(zlcnorc,5)'      /*                        */
   INTERPRET ,                              /*new stats line 4        */
     'stat4'lr_sw '= zlmtime '          ,   /*                        */
                    'RIGHT(zlcnorc,5) ' ,   /*                        */
                    'RIGHT(zlinorc,5)'      /*                        */
   INTERPRET ,                              /*new stats line 5        */
     'stat5'lr_sw '= RIGHT(zlcnorc,5) ' ,   /*                        */
                    'RIGHT(zlinorc,5) ' ,   /*                        */
                    'RIGHT(zlmnorc,5)'      /*                        */
   INTERPRET ,                              /*new stats line 6        */
     'stat6'lr_sw '= RIGHT(zlinorc,5) ' ,   /*                        */
                    'RIGHT(zlmnorc,5) ' ,   /*                        */
                    'LEFT(zluser,8)'        /*                        */
   INTERPRET ,                              /*new stats line 7        */
     'stat7'lr_sw '= RIGHT(zlmnorc,5) ' ,   /*                        */
                    'LEFT(zluser,8) '   ,   /*                        */
                    'RIGHT(stat7'lr_sw',3)' /*                        */
   INTERPRET 'res'lr_sw '= "E"'             /*                        */
RETURN
