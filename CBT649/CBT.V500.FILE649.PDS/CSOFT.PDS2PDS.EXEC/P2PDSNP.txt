/* REXX */
/*===================================================================*\
|Program Name: P2PDSNP                                                |
|Date Written: May 31, 1999                                           |
|      Author: Michael A. Newell                                      |
|              Austin, TX                                             |
|              http://wb4huc.home.texas.net                           |
|              http://wb4huc.home.texas.net/pds2pds                   |
|                                                                     |
| Description: This program is used in the PDS2PDS application and    |
|              displays and processes the Dataset Name Entry Panel    |
|                                                                     |
|   Called By: PDS2PDS                                                |
|                                                                     |
|       Calls: P2PDSNS                                                |
|                                                                     |
\*===================================================================*/
ADDRESS ISPEXEC                             /*cmds default to ISPF    */
Call Get_Stored_Variables                   /*get scrn vars from pool */
CALL Initialize_Variables                   /*init program variables  */
loop_exit_flag = ' '                        /*initialize return code  */
DO WHILE loop_exit_flag = ' '               /*loop until pf3/pf4      */
   CALL Display_Dsn_Entry_Panel             /*  dspl dsn entry panel  */
   IF entry_panel_rc = 8 THEN               /*  if pf3/pf4 pressed    */
      DO                                    /*     do                 */
        loop_exit_flag = pfkpresd           /*       set exit flag    */
        ITERATE                             /*       loop again       */
      END                                   /*     end                */
   IF VALIDDSN(dsnl, dsnr) > 0 THEN         /*  if dsn was invalid    */
      ITERATE                               /*     loop again         */
   IF Validate_Mbr_Disp_Opts() > 0 THEN     /*  if bad proc options   */
      ITERATE                               /*     loop again         */
   loop_exit_flag = 'ENTER'                 /*  set loop exit flag    */
END                                         /*end                     */
Call Put_Stored_Variables                   /*put screen vars in pool */
RETURN loop_exit_flag                       /*EXIT PDS2PDS            */

Get_Stored_Variables:
   "VGET (dsnl"      ,                      /*dataset name - left     */
         "dsnr"      ,                      /*dataset name - right    */
         "mbrleft"   ,                      /*same name sel proc opt  */
         "mbrrite"   ,                      /*same name sel proc opt  */
         "volidl"    ,                      /*volser name - left      */
         "volidr"    ,                      /*volser name - right     */
         "namesame"  ,                      /*same name sel proc opt  */
         "statsame"  ,                      /*name/stats sel proc opt */
         "statdiff"  ,                      /*diff stats sel proc opt */
         "namediff"  ,                      /*diff name sel proc opt  */
         "uniqleft"  ,                      /*only left side proc opt */
         "uniqrite"  ,                      /*only right side proc opt*/
         "oldrleft"  ,                      /*show l mbrs older than r*/
         "oldrrite"  ,                      /*show r mbrs older than l*/
         "mask"      ,                      /*mbr name pattern mask   */
         "maskoptl"  ,                      /*inc/exc masked fields   */
         "maskoptr"  ,                      /*inc/exc masked fields   */
         "p2pverno)" ,                      /*pds2pds version number  */
         "PROFILE"                          /*user's profile pool     */
RETURN

Put_Stored_Variables:
   "VPUT (dsnl"      ,                      /*dataset name - left     */
         "dsnr"      ,                      /*dataset name - right    */
         "mbrleft"   ,                      /*same name sel proc opt  */
         "mbrrite"   ,                      /*same name sel proc opt  */
         "volidl"    ,                      /*volser name - left      */
         "volidr"    ,                      /*volser name - right     */
         "namesame"  ,                      /*same name sel proc opt  */
         "statsame"  ,                      /*name/stats sel proc opt */
         "statdiff"  ,                      /*diff stats sel proc opt */
         "namediff"  ,                      /*diff name sel proc opt  */
         "uniqleft"  ,                      /*only left side proc opt */
         "uniqrite"  ,                      /*only right side proc opt*/
         "oldrleft"  ,                      /*show l mbrs older than r*/
         "oldrrite"  ,                      /*show r mbrs older than l*/
         "mask"      ,                      /*mbr name pattern mask   */
         "maskoptl"  ,                      /*inc/exc masked fields   */
         "maskoptr"  ,                      /*inc/exc masked fields   */
         "p2pverno)" ,                      /*pds2pds version number  */
         "PROFILE"                          /*user's profile pool     */
RETURN

Display_Dsn_Entry_Panel:
   entry_panel_rc = 0                       /*initialize return code  */
   "DISPLAY PANEL(P2PDSNP)" pnl_msg csr_pos /*display panel PDSMATP1  */
   csr_pos = csr_dsnl                       /*put csr on left-side dsn*/
   pnl_msg = no_pnl_msg                     /*blank out panel message */
   entry_panel_rc = rc                      /*set panel dspl ret code */
   IF entry_panel_rc /= 8 THEN              /*if not pf3/pf4          */
      IF entry_panel_rc /= 0 THEN           /*   if not rtn code 0    */
         DO                                 /*      do                */
           "SETMSG MSG(ISRZ002)"            /*        set msg display */
            csr_pos = 'CURSOR()'            /*        set cursor pos  */
            EXIT 12                         /*        exit pds2pds    */
         END                                /*      end do            */
RETURN entry_panel_rc

Validate_Mbr_Disp_Opts:
   disp_opt_count = 0                       /*reset option counter    */
   disp_opt_rc = 0                          /*reset return code       */
   mbr_displopt = LEFT(namesame,1)  || ,    /*bld display options     */
                  LEFT(statsame,1)  || ,    /*  check field           */
                  LEFT(statdiff,1)  || ,    /*                        */
                  LEFT(namediff,1)  || ,    /*                        */
                  LEFT(uniqleft,1)  || ,    /*                        */
                  LEFT(uniqrite,1)  || ,    /*                        */
                  LEFT(oldrleft,1)  || ,    /*                        */
                  LEFT(oldrrite,1)          /*                        */
   mbr_displopt = STRIP(mbr_displopt)       /*strip excess spaces     */
   IF LENGTH(mbr_displopt) > 1 THEN         /*if more than 1 entered  */
      DO                                    /*   do                   */
        disp_opt_rc = 12                    /*     set return code    */
        csr_pos = csr_namesame              /*     set cursor pos     */
        "SETMSG MSG(PTPM001C)"              /*     show message       */
      END                                   /*   end do               */
RETURN disp_opt_rc

VALIDDSN:
   PARSE ARG dsnl, dsnr                     /*get data from caller    */
   CALL Parse_Dsnames                       /*check dsns for quotes   */
   IF Dsn_Validation(dsnl,'L') > 0 THEN     /*if bad dataset name     */
     RETURN return_code                     /*   return bad dsnl info */
   IF Dsn_Validation(dsnr,'R') > 0 THEN     /*if bad dataset name     */
     RETURN return_code                     /*   return bad dsnr info */
RETURN rc                                   /*return good rc          */

Dsn_Validation:
   ARG dsn,lr_flag                          /*get dsn from caller     */
   INTERPRET "volid = volid"lr_flag         /*get volser id           */
   return_code = P2PDSNS(dsn,volid)         /*get dataset status      */
   IF return_code = 22 THEN                 /*                        */
      INTERPRET 'csr_pos = csr_volid'lr_flag/*set panel cursor pos    */
   ELSE                                     /*                        */
      INTERPRET 'csr_pos = csr_dsn'lr_flag  /*set panel cursor pos    */
   INTERPRET 'dsn'lr_flag '= dsn'           /*set panel dsname        */
RETURN return_code

Parse_Dsnames:
   return_code = 0                          /*set return code         */
   dsnlq = dsnl                             /*initialize dsnlq        */
   dsnrq = dsnr                             /*initialize dsnrq        */
   "VGET zprefix SHARED"                    /*get tso dataset prefix  */
   IF LEFT(dsnlq,1) /= "'" & ,              /*if no left quote and    */
      right(dsnlq,1) /= "'" THEN            /*   no right quote       */
      IF zprefix /= '' THEN                 /*   if prefix exists     */
         dsnlq = "'"zprefix'.'dsnlq"'"      /*      add to dsname     */
      ELSE                                  /*   else                 */
         dsnlq = "'"dsnlq"'"                /*      use dsname as is  */
   IF LEFT(dsnlq,1) /= "'" & ,              /*if left dsn has r quote */
      RIGHT(dsnlq,1) = "'" THEN             /*   but not l quote      */
      dsnlq = "'"dsnlq                      /*   add left quote       */
   IF LEFT(dsnlq,1)  = "'" & ,              /*if left dsn has l quote */
      RIGHT(dsnlq,1) /= "'" THEN            /*   but not r quote      */
      dsnlq = dsnlq"'"                      /*   add right quote      */
   IF LEFT(dsnrq,1) /= "'" & ,              /*if no left quote and    */
      right(dsnrq,1) /= "'" THEN            /*   no right quote       */
      IF zprefix /= '' THEN                 /*   if prefix exists     */
         dsnrq = "'"zprefix'.'dsnrq"'"      /*      add to dsname     */
      ELSE                                  /*   else                 */
         dsnrq = "'"dsnrq"'"                /*      us dsname as is   */
   IF LEFT(dsnrq,1) /= "'" & ,              /*if right dsn has r quote*/
      RIGHT(dsnrq,1) = "'" THEN             /*   but not left quote   */
      dsnrq = "'"dsnrq                      /*   add left quote       */
   IF LEFT(dsnrq,1)  = "'" & ,              /*if right dsn has l quote*/
      RIGHT(dsnrq,1) /= "'" THEN            /*   but not right quote  */
      dsnrq = dsnrq"'"                      /*   add right quote      */
   dsnl = dsnlq                             /*set qualified dsname    */
   dsnr = dsnrq                             /*set qualified dsname    */
RETURN

Initialize_Variables:
   p2pverno = 'PDS2PDS 3.02'
   msg_stat = MSG('OFF')
   dummy = OUTTRAP("termout.")
   "CONTROL ERRORS RETURN"
   csr_dsnl = 'CURSOR(DSNL)'
   csr_dsnr = 'CURSOR(DSNR)'
   csr_volidl = 'CURSOR(VOLIDL)'
   csr_volidr = 'CURSOR(VOLIDR)'
   csr_pos = csr_dsnl
   no_pnl_msg = 'MSG()'
   pnl_msg = no_pnl_msg
   gather_msg = 'PDS2PDS is reading the member list for'
   validate_dsn_msg = 'PDS2PDS is validating datasets - Please Wait'
    "ISPEXEC VGET ("zprefix") SHARED"
   msg_stat = MSG('OFF')
   disp_opt_count = 0
   disp_opt_rc = 0
   csr_namesame = 'CURSOR(NAMESAME)'
RETURN
