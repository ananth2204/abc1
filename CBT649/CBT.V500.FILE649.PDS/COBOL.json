{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "SYSDHC", "INMTNODE": "BBX", "INMTUID": "MMSMAK", "INMFTIME": "20030915115913000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 23440, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CSOFT.PDS2PDS.COBOL", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CSOFT.PDS2PDS.COBOL": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 23440, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 128, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "030255", "DS1SCEXT": "b'\\x80[\\x90'", "DS1SCALO": "b'P\\x00\\x00\\x03'", "DS1LSTAR": "b'\\x00\\x03\\x02'", "DS1TRBAL": "b'\\xa2*'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xc0\\x00\\x04\\x87\\xa0@'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xc0\\x00\\x04\\x87\\xa0@'", "b'X\\xf3\\x9a\\x08\\x00\\x00\\x00L\\x00\\x05\\x00L\\x00\\x08\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"P2PBTBL": {"ttr": 260, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\t\\x00\\x99\\x16_\\x00\\x99\\x19o\\x11H\\x041\\x03\\xc9\\x00\\x00\\xd5\\xc5\\xe6\\xc5\\xd3\\xd3\\xf2@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1999-06-14T00:00:00", "modifydate": "1999-07-15T11:48:09", "lines": 1073, "newlines": 969, "modlines": 0, "user": "NEWELL2"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. P2PBTBL.\n      *DATE-WRITTEN.  06/07/99.\n       DATE-COMPILED.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.\n           IBM-370.\n       OBJECT-COMPUTER.\n           IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT MEMBER-LIST-LEFT\n               ASSIGN TO MBRLISTL.\n           SELECT MEMBER-LIST-RIGHT\n               ASSIGN TO MBRLISTR.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  MEMBER-LIST-LEFT\n           RECORDING MODE IS F\n           DATA RECORD IS LEFT-MEMBER-REC.\n       01  LEFT-MEMBER-REC             PIC X(80).\n       FD  MEMBER-LIST-RIGHT\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           DATA RECORD IS RIGHT-MEMBER-REC.\n       01  RIGHT-MEMBER-REC            PIC X(80).\n       WORKING-STORAGE SECTION.\n\n      ******************************************************************\n      *                                                                *\n      *                        PROGRAM CONSTANTS                       *\n      *                                                                *\n      ******************************************************************\n\n       01  WS-HEADER                   PIC X(35)           VALUE\n           'P2PBTBL WORKING-STORAGE BEGINS HERE'.\n\n      *                                                                *\n      *              CONSTANT VALUES FOR ISPLINK PARAMETERS            *\n      *                                                                *\n\n       01  WS-CONTROL                  PIC X(08)           VALUE\n           'CONTROL '.\n       01  WS-ERRORS                   PIC X(08)           VALUE\n           'ERRORS  '.\n       01  WS-RETURN                   PIC X(08)           VALUE\n           'RETURN  '.\n       01  WS-SETMSG                   PIC X(08)           VALUE\n           'SETMSG  '.\n       01  WS-ISRZ002                  PIC X(08)           VALUE\n           'ISRZ002 '.\n       01  WS-TBL-LIMIT-MSG            PIC X(08)           VALUE\n           'PTPM001B'.\n       01  WS-VDEFINE                  PIC X(08)           VALUE\n           'VDEFINE '.\n       01  WS-VRESET                   PIC X(08)           VALUE\n           'VRESET  '.\n       01  WS-TBCREATE                 PIC X(08)           VALUE\n           'TBCREATE'.\n       01  WS-NOWRITE                  PIC X(08)           VALUE\n           'NOWRITE '.\n       01  WS-TBADD                    PIC X(08)           VALUE\n           'TBADD   '.\n       01  WS-TBTOP                    PIC X(08)           VALUE\n           'TBTOP   '.\n       01  WS-CHAR                     PIC X(08)           VALUE\n           'CHAR    '.\n\n      *                                                                *\n      *  ISPF MEMBER LIST TABLE FIELD NAMES FOR 'TBCREATE' COMMAND     *\n      *                                                                *\n\n       01  WS-TBCREATE-KEYNAME-LIST    PIC X(01)           VALUE\n           ' '.\n       01  WS-TBCREATE-NAMELIST.\n           05 FILLER                   PIC X(06)           VALUE\n              '(RESL '.\n           05 FILLER                   PIC X(05)           VALUE\n              'MBRL '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT1L '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT2L '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT3L '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT4L '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT5L '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT6L '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT7L '.\n           05 FILLER                   PIC X(05)           VALUE\n              'RESR '.\n           05 FILLER                   PIC X(05)           VALUE\n              'MBRR '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT1R '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT2R '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT3R '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT4R '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT5R '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT6R '.\n           05 FILLER                   PIC X(07)           VALUE\n              'STAT7R)'.\n\n      *                                                                *\n      *       NUMBER OF PDS2PDS TABLES THAT MAY BE ACTIVE AT ONCE      *\n      *                                                                *\n\n       01  WS-TABLE-LIMIT              PIC 9(03)           VALUE 99.\n\n      ******************************************************************\n      *                                                                *\n      *                    VDEFINE PARAMETER VALUES                    *\n      *                                                                *\n      ******************************************************************\n\n      *                                                                *\n      *                  MEMBER LIST TABLE FIELD NAMES                 *\n      *                                                                *\n\n       01  WS-RESL-NAME                PIC X(06)           VALUE\n           '(RESL)'.\n       01  WS-MBRL-NAME                PIC X(06)           VALUE\n           '(MBRL)'.\n       01  WS-STAT1L-NAME              PIC X(08)           VALUE\n           '(STAT1L)'.\n       01  WS-STAT2L-NAME              PIC X(08)           VALUE\n           '(STAT2L)'.\n       01  WS-STAT3L-NAME              PIC X(08)           VALUE\n           '(STAT3L)'.\n       01  WS-STAT4L-NAME              PIC X(08)           VALUE\n           '(STAT4L)'.\n       01  WS-STAT5L-NAME              PIC X(08)           VALUE\n           '(STAT5L)'.\n       01  WS-STAT6L-NAME              PIC X(08)           VALUE\n           '(STAT6L)'.\n       01  WS-STAT7L-NAME              PIC X(08)           VALUE\n           '(STAT7L)'.\n       01  WS-RESR-NAME                PIC X(06)           VALUE\n           '(RESR)'.\n       01  WS-MBRR-NAME                PIC X(06)           VALUE\n           '(MBRR)'.\n       01  WS-STAT1R-NAME              PIC X(08)           VALUE\n           '(STAT1R)'.\n       01  WS-STAT2R-NAME              PIC X(08)           VALUE\n           '(STAT2R)'.\n       01  WS-STAT3R-NAME              PIC X(08)           VALUE\n           '(STAT3R)'.\n       01  WS-STAT4R-NAME              PIC X(08)           VALUE\n           '(STAT4R)'.\n       01  WS-STAT5R-NAME              PIC X(08)           VALUE\n           '(STAT5R)'.\n       01  WS-STAT6R-NAME              PIC X(08)           VALUE\n           '(STAT6R)'.\n       01  WS-STAT7R-NAME              PIC X(08)           VALUE\n           '(STAT7R)'.\n\n      *                                                                *\n      *                    TERMINAL ALARM FIELD NAME                   *\n      *                                                                *\n\n       01  WS-ZERRALRM-NAME            PIC X(10)           VALUE\n           '(ZERRALRM)'.\n\n      *                                                                *\n      *                 MEMBER LIST TABLE FIELD LENGTHS                *\n      *                                                                *\n\n       01  WS-RESL-LENGTH              PIC 9(06)      COMP VALUE 1.\n       01  WS-MBRL-LENGTH              PIC 9(06)      COMP VALUE 8.\n       01  WS-STAT1L-LENGTH            PIC 9(06)      COMP VALUE 23.\n       01  WS-STAT2L-LENGTH            PIC 9(06)      COMP VALUE 25.\n       01  WS-STAT3L-LENGTH            PIC 9(06)      COMP VALUE 22.\n       01  WS-STAT4L-LENGTH            PIC 9(06)      COMP VALUE 19.\n       01  WS-STAT5L-LENGTH            PIC 9(06)      COMP VALUE 17.\n       01  WS-STAT6L-LENGTH            PIC 9(06)      COMP VALUE 20.\n       01  WS-STAT7L-LENGTH            PIC 9(06)      COMP VALUE 18.\n       01  WS-RESR-LENGTH              PIC 9(06)      COMP VALUE 1.\n       01  WS-MBRR-LENGTH              PIC 9(06)      COMP VALUE 8.\n       01  WS-STAT1R-LENGTH            PIC 9(06)      COMP VALUE 23.\n       01  WS-STAT2R-LENGTH            PIC 9(06)      COMP VALUE 25.\n       01  WS-STAT3R-LENGTH            PIC 9(06)      COMP VALUE 22.\n       01  WS-STAT4R-LENGTH            PIC 9(06)      COMP VALUE 19.\n       01  WS-STAT5R-LENGTH            PIC 9(06)      COMP VALUE 17.\n       01  WS-STAT6R-LENGTH            PIC 9(06)      COMP VALUE 20.\n       01  WS-STAT7R-LENGTH            PIC 9(06)      COMP VALUE 18.\n\n      *                                                                *\n      *                   TERMINAL ALARM FIELD LENGTH                  *\n      *                                                                *\n\n       01  WS-ZERRALRM-LENGTH          PIC 9(06)      COMP VALUE 03.\n\n      *                                                                *\n      *                  MEMBER LIST TABLE FIELD DATA                  *\n      *                                                                *\n\n       01  WS-RESL                     PIC X(01)           VALUE SPACE.\n       01  WS-MBRL                     PIC X(08)           VALUE SPACES.\n       01  WS-STAT1L                   PIC X(23)           VALUE SPACES.\n       01  WS-STAT2L                   PIC X(25)           VALUE SPACES.\n       01  WS-STAT3L                   PIC X(22)           VALUE SPACES.\n       01  WS-STAT4L                   PIC X(19)           VALUE SPACES.\n       01  WS-STAT5L                   PIC X(17)           VALUE SPACES.\n       01  WS-STAT6L                   PIC X(20)           VALUE SPACES.\n       01  WS-STAT7L                   PIC X(18)           VALUE SPACES.\n       01  WS-RESR                     PIC X(01)           VALUE SPACE.\n       01  WS-MBRR                     PIC X(08)           VALUE SPACES.\n       01  WS-STAT1R                   PIC X(23)           VALUE SPACES.\n       01  WS-STAT2R                   PIC X(25)           VALUE SPACES.\n       01  WS-STAT3R                   PIC X(22)           VALUE SPACES.\n       01  WS-STAT4R                   PIC X(19)           VALUE SPACES.\n       01  WS-STAT5R                   PIC X(17)           VALUE SPACES.\n       01  WS-STAT6R                   PIC X(20)           VALUE SPACES.\n       01  WS-STAT7R                   PIC X(18)           VALUE SPACES.\n\n      *                                                                *\n      *                    TERMINAL ALARM FIELD DATA                   *\n      *                                                                *\n\n       01  WS-ZERRALRM                 PIC X(03)           VALUE 'YES'.\n\n      *                                                                *\n      *  CREATE TABLE FIELD DATA HERE THEN MOVE IT TO THE TABLE FIELDS *\n      *                                                                *\n\n       01  WS-S1L.\n           05  WS-S1L-VVMM             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S1L-CREATED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S1L-CHANGED          PIC X(08)           VALUE SPACES.\n       01  WS-S2L.\n           05  WS-S2L-CREATED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S2L-CHANGED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S2L-TIME             PIC X(07)           VALUE SPACES.\n       01  WS-S3L.\n           05  WS-S3L-CHANGED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S3L-TIME             PIC X(07)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S3L-SIZE             PIC X(05)           VALUE SPACES.\n       01  WS-S4L.\n           05  WS-S4L-TIME             PIC X(07)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S4L-SIZE             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S4L-INIT             PIC X(05)           VALUE SPACES.\n       01  WS-S5L.\n           05  WS-S5L-SIZE             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S5L-INIT             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S5L-MOD              PIC X(05)           VALUE SPACES.\n       01  WS-S6L.\n           05  WS-S6L-INIT             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S6L-MOD              PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S6L-USER             PIC X(08)           VALUE SPACES.\n       01  WS-S7L.\n           05  WS-S7L-MOD              PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S7L-USER             PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S7L-ALIAS            PIC X(03)           VALUE SPACES.\n       01  WS-S1R.\n           05  WS-S1R-VVMM             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S1R-CREATED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S1R-CHANGED          PIC X(08)           VALUE SPACES.\n       01  WS-S2R.\n           05  WS-S2R-CREATED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S2R-CHANGED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S2R-TIME             PIC X(07)           VALUE SPACES.\n       01  WS-S3R.\n           05  WS-S3R-CHANGED          PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S3R-TIME             PIC X(07)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S3R-SIZE             PIC X(05)           VALUE SPACES.\n       01  WS-S4R.\n           05  WS-S4R-TIME             PIC X(07)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S4R-SIZE             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S4R-INIT             PIC X(05)           VALUE SPACES.\n       01  WS-S5R.\n           05  WS-S5R-SIZE             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S5R-INIT             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S5R-MOD              PIC X(05)           VALUE SPACES.\n       01  WS-S6R.\n           05  WS-S6R-INIT             PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S6R-MOD              PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S6R-USER             PIC X(08)           VALUE SPACES.\n       01  WS-S7R.\n           05  WS-S7R-MOD              PIC X(05)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S7R-USER             PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-S7R-ALIAS            PIC X(03)           VALUE SPACES.\n\n      ******************************************************************\n      *                                                                *\n      *            REXX/COBOL SHARED VARIABLE PARMS AND DATA           *\n      *                                                                *\n      ******************************************************************\n\n      *                                                                *\n      *            REXX PROGRAM SHARED VARIABLE LINKAGE                *\n      *                                                                *\n\n       01  DUMMY-PARM                  PIC X(04)           VALUE SPACE.\n       01  SHVBLOCK.\n           05  SHVNEXT                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVUSER                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVCODE                 PIC X(01)           VALUE SPACE.\n           05  SHVRET                  PIC X(01)           VALUE SPACE.\n           05  FILLER                  PIC X(02)           VALUE SPACE.\n           05  SHVBUFL                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVNAMA                 POINTER.\n           05  SHVNAML                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVVALA                 POINTER.\n           05  SHVVALL                 PIC S9(09)     COMP VALUE ZERO.\n\n      *                                                                *\n      *                  REXX PROGRAM VARIABLE NAMES                   *\n      *                                                                *\n\n       01  WS-VARNAME-RTNNAME          PIC X(10)           VALUE\n           'RTN_TBLNAM'.\n       01  WS-RTNNAME-LENGTH           PIC S9(09)     COMP VALUE +10.\n       01  WS-VARNAME-DISPLOPT         PIC X(08)           VALUE\n           'DISPLOPT'.\n\n      *                                                                *\n      *                  NAME OF ISPF TABLE TO BUILD                   *\n      *                                                                *\n\n       01  WS-TBLNAME.\n           05  FILLER                  PIC X(05)           VALUE\n               'P2PTB'.\n           05  WS-TBLNBR               PIC 9(03)           VALUE 001.\n\n      *                                                                *\n      *   MEMBER DISPLAY OPTION SELECTED BY USER ON DATASET NAME PANEL *\n      *                                                                *\n      *     THE MEMBER DISPLAY OPTION IS PASSED TO THIS PROGRAM AS A   *\n      *     NUMBER THAT CORRESPONDS TO THE OPTION CHOSEN. VALID NUMBERS*\n      *     ARE:                                                       *\n      *                                                                *\n      *     1 = NAMESAME     5 = UNIQLEFT                              *\n      *     2 = STATSAME     6 = UNIQRITE                              *\n      *     3 = STATDIFF     7 = OLDRLEFT                              *\n      *     4 = NAMEDIFF     8 = OLDRRITE                              *\n      *                                                                *\n\n       01  WS-DISPLOPT                 PIC 9(01)           VALUE ZERO.\n           88 WS-NAMESAME                                  VALUE 1.\n           88 WS-STATSAME                                  VALUE 2.\n           88 WS-STATDIFF                                  VALUE 3.\n           88 WS-NAMEDIFF                                  VALUE 4.\n           88 WS-UNIQLEFT                                  VALUE 5.\n           88 WS-UNIQRITE                                  VALUE 6.\n           88 WS-OLDRLEFT                                  VALUE 7.\n           88 WS-OLDRRITE                                  VALUE 8.\n           88 WS-DONT-PROCESS-LEFT                         VALUES ARE\n                                                           1 2 3 6 7 8.\n           88 WS-DONT-PROCESS-RIGHT                        VALUES ARE\n                                                           1 2 3 5 7 8.\n           88 WS-DONT-PROCESS-EITHER                       VALUES ARE\n                                                           4 5 6.\n\n      *                                                                *\n      *                  DATA RETURNED TO REXX PROGRAM                 *\n      *                                                                *\n\n       01  WS-RETURN-TEXT.\n           05  WS-RETURN-MSGTYPE       PIC X(01)           VALUE '1'.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-TBLNAME-RETURN       PIC X(08)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-NBR-MBRS-LEFT-Z      PIC ZZZZ9           VALUE ZERO.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-NBR-MBRS-RIGHT-Z     PIC ZZZZ9           VALUE ZERO.\n           05  FILLER                  PIC X(01)           VALUE SPACE.\n           05  WS-NBR-OF-MBRS-Z        PIC ZZZZ9           VALUE ZERO.\n\n      ******************************************************************\n      *                                                                *\n      *             RIGHT- AND LEFT-SIDE PDS MEMBER RECORDS            *\n      *                                                                *\n      ******************************************************************\n\n      *                                                                *\n      *LEFT-SIDE MEMBER RECORD                                         *\n      *                                                                *\n\n       01  WS-MBR-REC-LEFT.\n           05  WS-MBR-NAME-LEFT        PIC X(08)           VALUE SPACES.\n           05  WS-STATS-FLDS-LEFT.\n               10  WS-VVMM-LEFT        PIC X(05)           VALUE SPACES.\n               10  WS-CREATED-LEFT     PIC X(10)           VALUE SPACES.\n               10  WS-CHANGED-LEFT     PIC X(10)           VALUE SPACES.\n               10  WS-TIME-LEFT        PIC X(08)           VALUE SPACES.\n               10  WS-SIZE-LEFT        PIC X(05)           VALUE SPACES.\n               10  WS-INIT-LEFT        PIC X(05)           VALUE SPACES.\n               10  WS-MOD-LEFT         PIC X(05)           VALUE SPACES.\n               10  WS-USER-LEFT        PIC X(08)           VALUE SPACES.\n               10  WS-ALIAS-LEFT       PIC X(03)           VALUE SPACES.\n           05  FILLER                  PIC X(13)           VALUE SPACES.\n\n      *                                                                *\n      *RIGHT-SIDE MEMBER RECORD                                        *\n      *                                                                *\n\n       01  WS-MBR-REC-RIGHT.\n           05  WS-MBR-NAME-RIGHT       PIC X(08)           VALUE SPACES.\n           05  WS-STATS-FLDS-RIGHT.\n               10  WS-VVMM-RIGHT       PIC X(05)           VALUE SPACES.\n               10  WS-CREATED-RIGHT    PIC X(10)           VALUE SPACES.\n               10  WS-CHANGED-RIGHT    PIC X(10)           VALUE SPACES.\n               10  WS-TIME-RIGHT       PIC X(08)           VALUE SPACES.\n               10  WS-SIZE-RIGHT       PIC X(05)           VALUE SPACES.\n               10  WS-INIT-RIGHT       PIC X(05)           VALUE SPACES.\n               10  WS-MOD-RIGHT        PIC X(05)           VALUE SPACES.\n               10  WS-USER-RIGHT       PIC X(08)           VALUE SPACES.\n               10  WS-ALIAS-RIGHT      PIC X(03)           VALUE SPACES.\n           05  FILLER                  PIC X(13)           VALUE SPACES.\n\n      ******************************************************************\n      *                                                                *\n      *                    MEMBER COUNT WORK FIELDS                    *\n      *                                                                *\n      ******************************************************************\n\n       01  WS-NBR-MBRS-LEFT            PIC 9(05)           VALUE ZERO.\n       01  WS-NBR-MBRS-RIGHT           PIC 9(05)           VALUE ZERO.\n       01  WS-NBR-OF-MBRS              PIC 9(05)           VALUE ZERO.\n\n      ******************************************************************\n      *                                                                *\n      *                    DATE AND TIME WORK FIELDS                   *\n      *                                                                *\n      ******************************************************************\n\n       01  WS-DATE-WORK.\n           05  FILLER                  PIC X(02)           VALUE SPACES.\n           05  WS-DW-YMD               PIC X(08)           VALUE SPACES.\n\n       01  WS-TIME-WORK.\n           05  WS-TW-HH                PIC X(02)           VALUE SPACES.\n           05  FILLER                  PIC X(01)           VALUE SPACES.\n           05  WS-TW-MMSS              PIC X(05)           VALUE SPACES.\n\n       01  WS-TIME-WORK-2.\n           05  WS-TW2-HH               PIC X(02)           VALUE SPACES.\n           05  WS-TW2-MMSS             PIC X(05)           VALUE SPACES.\n\n      ******************************************************************\n      *                                                                *\n      *                  PROGRAM PROCESSING SWITCHES                   *\n      *                                                                *\n      ******************************************************************\n\n       01  WS-EOF-LEFT-LIST-SW         PIC 9(01)           VALUE ZERO.\n           88  WS-EOF-LEFT-LIST                            VALUE 1.\n       01  WS-EOF-RIGHT-LIST-SW        PIC 9(01)           VALUE ZERO.\n           88  WS-EOF-RIGHT-LIST                           VALUE 1.\n       01  WS-EOF-BOTH-LISTS-SW        PIC 9(01)           VALUE ZERO.\n           88  WS-EOF-BOTH-LISTS                           VALUE 1.\n       01  WS-SYSTEM-MSG-SW            PIC 9(01)           VALUE ZERO.\n           88  WS-SYSTEM-MSG                               VALUE 1.\n       01  WS-PGM-MSG-SW               PIC 9(01)           VALUE ZERO.\n           88  WS-PGM-MSG                                  VALUE 1.\n       01  WS-TABLE-CREATED-SW         PIC 9(01)           VALUE ZERO.\n           88  WS-TABLE-CREATED                            VALUE 1.\n       01  WS-MATCHING-STATS-SW        PIC 9(01)           VALUE ZERO.\n           88  WS-NO-MATCHING-STATS                        VALUE 0.\n           88  WS-MATCHING-STATS                           VALUE 1.\n       01  WS-OLDER-FLAG               PIC X(01)           VALUE SPACE.\n           88  WS-LEFT-OLDER                               VALUE 'L'.\n           88  WS-RIGHT-OLDER                              VALUE 'R'.\n\n        LINKAGE SECTION.\n\n      ******************************************************************\n      *                                                                *\n      *               REXX EXTERNAL FUNCTION CALL LINKAGE              *\n      *                                                                *\n      ******************************************************************\n\n        01  EFPLCOM                    PIC X(04).\n        01  EFPLBARG                   PIC X(04).\n        01  EFPLEARG                   PIC X(04).\n        01  EFPLFB                     PIC X(04).\n        01  EFPLARG.\n            05  ARG-TBL-ENT            OCCURS 5 TIMES.\n                10  ARG-ADDR           POINTER.\n                10  ARG-LEN            PIC S9(09)     COMP.\n        01  EFPLEVAL                   POINTER.\n        01  ARG-STRING                 PIC X(250).\n        01  EVALBLOCK.\n            05  EVALBLOCK-EVPAD1       PIC X(04).\n            05  EVALBLOCK-EVSIZE       PIC S9(09)     COMP.\n            05  EVALBLOCK-EVLEN        PIC S9(09)     COMP.\n            05  EVALBLOCK-EVPAD2       PIC X(04).\n            05  EVALBLOCK-EVDATA.\n                10  EVALBLOCK-RETTYPE  PIC X(01).\n                10  FILLER             PIC X(01).\n                10  EVALBLOCK-RETCODE  PIC 9(02).\n                10  FILLER             PIC X(246).\n      *\n       PROCEDURE DIVISION USING EFPLCOM\n                                EFPLBARG\n                                EFPLEARG\n                                EFPLFB\n                                EFPLARG\n                                EFPLEVAL.\n       0100-MAIN.\n\n      ******************************************************************\n      *                                                                *\n      *    GET CONTENTS OF VARIABLE 'DISPLOPT' FROM THE REXX PROGRAM   *\n      *                                                                *\n      ******************************************************************\n\n           MOVE 'F' TO SHVCODE.\n           MOVE 8 TO SHVNAML.\n           SET SHVVALA TO ADDRESS OF EVALBLOCK-EVDATA.\n           CALL 'SETPTR' USING WS-VARNAME-DISPLOPT\n                               SHVNAMA.\n           MOVE 1 TO SHVBUFL.\n           CALL 'SETPTR' USING WS-DISPLOPT\n                               SHVVALA.\n           CALL 'IRXEXCOM' USING BY CONTENT   'IRXEXCOM'\n                                 BY REFERENCE DUMMY-PARM\n                                              DUMMY-PARM\n                                              SHVBLOCK.\n\n      ******************************************************************\n      *                                                                *\n      *            RETURN TO DIALOG MANAGER AFTER ANY ERRORS           *\n      *                                                                *\n      ******************************************************************\n\n           CALL 'ISPLINK' USING WS-CONTROL WS-ERRORS WS-RETURN.\n\n      ******************************************************************\n      *                                                                *\n      *           OPEN HAILING FREQUENCIES TO REXX VARIABLES           *\n      *                                                                *\n      ******************************************************************\n\n           CALL 'ISPLINK' USING WS-VDEFINE WS-RESL-NAME WS-RESL\n                                WS-CHAR WS-RESL-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-MBRL-NAME WS-MBRL\n                                WS-CHAR WS-MBRL-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT1L-NAME WS-STAT1L\n                                WS-CHAR WS-STAT1L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT2L-NAME WS-STAT2L\n                                WS-CHAR WS-STAT2L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT3L-NAME WS-STAT3L\n                                WS-CHAR WS-STAT3L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT4L-NAME WS-STAT4L\n                                WS-CHAR WS-STAT4L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT5L-NAME WS-STAT5L\n                                WS-CHAR WS-STAT5L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT6L-NAME WS-STAT6L\n                                WS-CHAR WS-STAT6L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT7L-NAME WS-STAT7L\n                                WS-CHAR WS-STAT7L-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-RESR-NAME WS-RESR\n                                WS-CHAR WS-RESR-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-MBRR-NAME WS-MBRR\n                                WS-CHAR WS-MBRR-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT1R-NAME WS-STAT1R\n                                WS-CHAR WS-STAT1R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT2R-NAME WS-STAT2R\n                                WS-CHAR WS-STAT2R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT3R-NAME WS-STAT3R\n                                WS-CHAR WS-STAT3R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT4R-NAME WS-STAT4R\n                                WS-CHAR WS-STAT4R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT5R-NAME WS-STAT5R\n                                WS-CHAR WS-STAT5R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT6R-NAME WS-STAT6R\n                                WS-CHAR WS-STAT6R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-STAT7R-NAME WS-STAT7R\n                                WS-CHAR WS-STAT7R-LENGTH.\n           CALL 'ISPLINK' USING WS-VDEFINE WS-ZERRALRM-NAME WS-ZERRALRM\n                                WS-CHAR WS-ZERRALRM-LENGTH.\n\n      ******************************************************************\n      *                                                                *\n      *                 OPEN THE TWO MEMBER LIST FILES                 *\n      *                                                                *\n      ******************************************************************\n\n           OPEN INPUT MEMBER-LIST-LEFT\n                      MEMBER-LIST-RIGHT.\n\n      ******************************************************************\n      *                                                                *\n      *                  CREATE THE MEMBER LIST TABLE                  *\n      *                                                                *\n      ******************************************************************\n\n           PERFORM UNTIL WS-TABLE-CREATED\n              CALL 'ISPLINK' USING WS-TBCREATE\n                                   WS-TBLNAME\n                                   WS-TBCREATE-KEYNAME-LIST\n                                   WS-TBCREATE-NAMELIST\n                                   WS-NOWRITE\n              IF RETURN-CODE = 8\n                 ADD 1 TO WS-TBLNBR\n                 IF WS-TBLNBR GREATER THAN WS-TABLE-LIMIT\n                    MOVE 12 TO RETURN-CODE\n                    CALL 'ISPLINK' USING WS-SETMSG WS-TBL-LIMIT-MSG\n                    MOVE 1 TO WS-PGM-MSG-SW\n                    GO TO 0190-MAIN\n                 END-IF\n              END-IF\n              IF RETURN-CODE GREATER THAN 4 AND\n                 RETURN-CODE NOT EQUAL 8\n                 MOVE 1 TO WS-SYSTEM-MSG-SW\n                 GO TO 0190-MAIN\n              END-IF\n              IF RETURN-CODE EQUAL ZERO\n                 MOVE 1 TO WS-TABLE-CREATED-SW\n              END-IF\n           END-PERFORM.\n\n      ******************************************************************\n      *                                                                *\n      *       MATCH THE LEFT AND RIGHT MEMBER LISTS TO EACH OTHER      *\n      *                                                                *\n      ******************************************************************\n\n           PERFORM 0800-READ-LEFT-MEMBER THRU\n                   0899-READ-LEFT-MEMBER-EXIT.\n           PERFORM 0900-READ-RIGHT-MEMBER THRU\n                   0999-READ-RIGHT-MEMBER-EXIT.\n           IF WS-EOF-LEFT-LIST AND\n              WS-EOF-RIGHT-LIST\n              MOVE 1 TO WS-EOF-BOTH-LISTS-SW.\n           PERFORM UNTIL WS-EOF-BOTH-LISTS\n              PERFORM 1000-BLANK-LEFT-STATS THRU\n                      1099-BLANK-LEFT-STATS-EXIT\n              PERFORM 1100-BLANK-RIGHT-STATS THRU\n                      1199-BLANK-RIGHT-STATS-EXIT\n              EVALUATE TRUE\n                WHEN WS-EOF-LEFT-LIST AND\n                     WS-EOF-RIGHT-LIST\n                     MOVE 1 TO WS-EOF-BOTH-LISTS-SW\n                WHEN NOT WS-EOF-LEFT-LIST AND\n                     NOT WS-EOF-RIGHT-LIST\n                     PERFORM 0200-PROCESS-BOTH-MEMBERS THRU\n                             0299-PROCESS-BOTH-MEMBERS-EXIT\n                WHEN WS-EOF-LEFT-LIST AND NOT\n                     WS-EOF-RIGHT-LIST\n                     PERFORM 0300-PROCESS-RIGHT-MEMBER THRU\n                             0399-PROCESS-RIGHT-MEMBER-EXIT\n                WHEN NOT WS-EOF-LEFT-LIST AND\n                         WS-EOF-RIGHT-LIST\n                     PERFORM 0400-PROCESS-LEFT-MEMBER THRU\n                             0499-PROCESS-LEFT-MEMBER-EXIT\n              END-EVALUATE\n              IF WS-SYSTEM-MSG\n                 GO TO 0190-MAIN\n              END-IF\n           END-PERFORM.\n\n      ******************************************************************\n      *                                                                *\n      *          POSITION TO THE TOP OF THE MEMBER LIST TABLE          *\n      *                                                                *\n      ******************************************************************\n\n           CALL 'ISPLINK' USING WS-TBTOP WS-TBLNAME.\n\n      ******************************************************************\n      *                                                                *\n      *         SET UP THE RETURN TO THE REXX CALLING PROGRAM          *\n      *                                                                *\n      ******************************************************************\n\n       0190-MAIN.\n           CLOSE MEMBER-LIST-LEFT\n                 MEMBER-LIST-RIGHT.\n           CALL 'ISPLINK' USING WS-VRESET.\n           SET ADDRESS OF EVALBLOCK TO EFPLEVAL.\n           EVALUATE TRUE\n             WHEN WS-SYSTEM-MSG\n               MOVE 'E' TO EVALBLOCK-RETTYPE\n               MOVE 12 TO EVALBLOCK-RETCODE\n               MOVE +4 TO EVALBLOCK-EVLEN\n               CALL 'ISPLINK' USING WS-SETMSG WS-ISRZ002\n             WHEN WS-PGM-MSG\n               MOVE 'E' TO EVALBLOCK-RETTYPE\n               MOVE 12 TO EVALBLOCK-RETCODE\n               MOVE +4 TO EVALBLOCK-EVLEN\n             WHEN OTHER\n                MOVE WS-NBR-MBRS-LEFT TO WS-NBR-MBRS-LEFT-Z\n                MOVE WS-NBR-MBRS-RIGHT TO WS-NBR-MBRS-RIGHT-Z\n                MOVE WS-NBR-OF-MBRS TO WS-NBR-OF-MBRS-Z\n                MOVE WS-TBLNAME TO WS-TBLNAME-RETURN\n                MOVE WS-RETURN-TEXT TO EVALBLOCK-EVDATA\n                MOVE +28 TO EVALBLOCK-EVLEN\n           END-EVALUATE.\n           MOVE 'S' TO SHVCODE.\n           CALL 'SETPTR' USING WS-VARNAME-RTNNAME\n                               SHVNAMA.\n           MOVE WS-RTNNAME-LENGTH TO SHVNAML.\n           SET SHVVALA TO ADDRESS OF EVALBLOCK-EVDATA.\n           MOVE EVALBLOCK-EVLEN TO SHVVALL.\n           CALL 'IRXEXCOM' USING BY CONTENT   'IRXEXCOM'\n                                 BY REFERENCE DUMMY-PARM\n                                              DUMMY-PARM\n                                              SHVBLOCK.\n       0199-MAIN.\n           GOBACK.\n\n      ******************************************************************\n      *                                                                *\n      *               PROCESS MEMBERS FROM BOTH DATASETS               *\n      *                                                                *\n      ******************************************************************\n\n       0200-PROCESS-BOTH-MEMBERS.\n           EVALUATE TRUE\n             WHEN WS-MBR-NAME-LEFT LESS THAN\n                  WS-MBR-NAME-RIGHT\n                  PERFORM 0400-PROCESS-LEFT-MEMBER THRU\n                          0499-PROCESS-LEFT-MEMBER-EXIT\n             WHEN WS-MBR-NAME-RIGHT LESS THAN\n                  WS-MBR-NAME-LEFT\n                  PERFORM 0300-PROCESS-RIGHT-MEMBER THRU\n                          0399-PROCESS-RIGHT-MEMBER-EXIT\n             WHEN WS-MBR-NAME-LEFT EQUAL\n                  WS-MBR-NAME-RIGHT\n                  PERFORM 0500-ADD-BOTH-MEMBERS THRU\n                          0599-ADD-BOTH-MEMBERS-EXIT\n           END-EVALUATE.\n       0299-PROCESS-BOTH-MEMBERS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *               PROCESS RIGHT-SIDE DATASET MEMBER                *\n      *                                                                *\n      ******************************************************************\n\n       0300-PROCESS-RIGHT-MEMBER.\n           IF WS-DONT-PROCESS-RIGHT\n              GO TO 0390-PROCESS-RIGHT-MEMBER.\n           PERFORM 1300-FILL-RIGHT-STATS THRU\n                   1399-FILL-RIGHT-STATS-EXIT.\n           PERFORM 0700-ADD-TO-TABLE THRU\n                   0799-ADD-TO-TABLE-EXIT.\n       0390-PROCESS-RIGHT-MEMBER.\n           PERFORM 0900-READ-RIGHT-MEMBER THRU\n                   0999-READ-RIGHT-MEMBER-EXIT.\n       0399-PROCESS-RIGHT-MEMBER-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *                PROCESS LEFT-SIDE DATASET MEMBER                *\n      *                                                                *\n      ******************************************************************\n\n       0400-PROCESS-LEFT-MEMBER.\n           IF WS-DONT-PROCESS-LEFT\n              GO TO 0490-PROCESS-LEFT-MEMBER.\n           PERFORM 1200-FILL-LEFT-STATS THRU\n                   1299-FILL-LEFT-STATS-EXIT.\n           PERFORM 0700-ADD-TO-TABLE THRU\n                   0799-ADD-TO-TABLE-EXIT.\n       0490-PROCESS-LEFT-MEMBER.\n           PERFORM 0800-READ-LEFT-MEMBER THRU\n                   0899-READ-LEFT-MEMBER-EXIT.\n       0499-PROCESS-LEFT-MEMBER-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *               ADD BOTH MEMBERS TO THE ISPF TABLE               *\n      *                                                                *\n      ******************************************************************\n\n       0500-ADD-BOTH-MEMBERS.\n           PERFORM 0600-MATCH-STATS THRU\n                   0699-MATCH-STATS-EXIT.\n           IF WS-DONT-PROCESS-EITHER\n              GO TO 0590-ADD-BOTH-MEMBERS.\n           IF WS-STATSAME AND WS-NO-MATCHING-STATS\n              GO TO 0590-ADD-BOTH-MEMBERS.\n           IF WS-STATDIFF AND WS-MATCHING-STATS\n              GO TO 0590-ADD-BOTH-MEMBERS.\n           IF WS-OLDRLEFT AND NOT WS-LEFT-OLDER\n              GO TO 0590-ADD-BOTH-MEMBERS.\n           IF WS-OLDRRITE AND NOT WS-RIGHT-OLDER\n              GO TO 0590-ADD-BOTH-MEMBERS.\n           PERFORM 1200-FILL-LEFT-STATS THRU\n                   1299-FILL-LEFT-STATS-EXIT.\n           PERFORM 1300-FILL-RIGHT-STATS THRU\n                   1399-FILL-RIGHT-STATS-EXIT.\n           PERFORM 0700-ADD-TO-TABLE THRU\n                   0799-ADD-TO-TABLE-EXIT.\n       0590-ADD-BOTH-MEMBERS.\n           PERFORM 0900-READ-RIGHT-MEMBER THRU\n                   0999-READ-RIGHT-MEMBER-EXIT.\n           PERFORM 0800-READ-LEFT-MEMBER THRU\n                   0899-READ-LEFT-MEMBER-EXIT.\n       0599-ADD-BOTH-MEMBERS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *               MATCH RIGHT- AND LEFT-MEMBER STATS               *\n      *                                                                *\n      ******************************************************************\n\n       0600-MATCH-STATS.\n           MOVE ZERO  TO WS-MATCHING-STATS-SW.\n           MOVE SPACE TO WS-OLDER-FLAG.\n           IF WS-STATS-FLDS-LEFT  EQUAL SPACES  AND\n              WS-STATS-FLDS-RIGHT EQUAL SPACES\n              MOVE 1 TO WS-MATCHING-STATS-SW\n              GO TO 0699-MATCH-STATS-EXIT.\n           IF WS-OLDRLEFT\n              IF WS-CHANGED-LEFT  EQUAL SPACES OR\n                 WS-CHANGED-RIGHT EQUAL SPACES\n                 GO TO 0699-MATCH-STATS-EXIT\n              ELSE\n                 IF WS-CHANGED-LEFT LESS THAN WS-CHANGED-RIGHT\n                    MOVE 'L' TO WS-OLDER-FLAG\n                    GO TO 0699-MATCH-STATS-EXIT.\n           IF WS-OLDRLEFT\n              IF WS-CHANGED-LEFT EQUAL WS-CHANGED-RIGHT\n                 IF WS-TIME-LEFT LESS THAN WS-TIME-RIGHT\n                    MOVE 'L' TO WS-OLDER-FLAG\n                    GO TO 0699-MATCH-STATS-EXIT.\n           IF WS-OLDRRITE\n              IF WS-CHANGED-LEFT  EQUAL SPACES OR\n                 WS-CHANGED-RIGHT EQUAL SPACES\n                 GO TO 0699-MATCH-STATS-EXIT\n              ELSE\n                 IF WS-CHANGED-RIGHT LESS THAN WS-CHANGED-LEFT\n                    MOVE 'R' TO WS-OLDER-FLAG\n                    GO TO 0699-MATCH-STATS-EXIT.\n           IF WS-OLDRRITE\n              IF WS-CHANGED-RIGHT EQUAL WS-CHANGED-LEFT\n                 IF WS-TIME-RIGHT LESS THAN WS-TIME-LEFT\n                    MOVE 'R' TO WS-OLDER-FLAG\n                    GO TO 0699-MATCH-STATS-EXIT.\n           EVALUATE TRUE\n             WHEN (WS-STATS-FLDS-LEFT = WS-STATS-FLDS-RIGHT) AND\n                  (WS-STATS-FLDS-LEFT  NOT EQUAL SPACES      AND\n                   WS-STATS-FLDS-RIGHT NOT EQUAL SPACES)\n                  MOVE 1 TO WS-MATCHING-STATS-SW\n             WHEN (WS-STATS-FLDS-LEFT NOT = WS-STATS-FLDS-RIGHT)\n                  MOVE 0 TO WS-MATCHING-STATS-SW\n           END-EVALUATE.\n       0699-MATCH-STATS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *                  ADD ROW TO MEMBER LIST TABLE                  *\n      *                                                                *\n      ******************************************************************\n\n       0700-ADD-TO-TABLE.\n           CALL 'ISPLINK' USING WS-TBADD WS-TBLNAME.\n           IF RETURN-CODE GREATER THAN ZERO\n              MOVE 1 TO WS-SYSTEM-MSG-SW.\n           ADD 1 TO WS-NBR-OF-MBRS.\n       0799-ADD-TO-TABLE-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *                  READ LEFT-SIDE MEMBER RECORD                  *\n      *                                                                *\n      ******************************************************************\n\n       0800-READ-LEFT-MEMBER.\n           READ MEMBER-LIST-LEFT INTO\n                WS-MBR-REC-LEFT\n                AT END\n                   MOVE 1 TO WS-EOF-LEFT-LIST-SW.\n       0899-READ-LEFT-MEMBER-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *                 READ RIGHT-SIDE MEMBER RECORD                  *\n      *                                                                *\n      ******************************************************************\n\n       0900-READ-RIGHT-MEMBER.\n           READ MEMBER-LIST-RIGHT INTO\n                WS-MBR-REC-RIGHT\n                AT END\n                   MOVE 1 TO WS-EOF-RIGHT-LIST-SW.\n       0999-READ-RIGHT-MEMBER-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *            BLANK THE LEFT-SIDE MEMBER STATS FIELDS             *\n      *                                                                *\n      ******************************************************************\n\n       1000-BLANK-LEFT-STATS.\n           MOVE SPACES TO WS-MBRL\n                          WS-STAT1L\n                          WS-STAT2L\n                          WS-STAT3L\n                          WS-STAT4L\n                          WS-STAT5L\n                          WS-STAT6L\n                          WS-STAT7L.\n       1099-BLANK-LEFT-STATS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *            BLANK THE RIGHT-SIDE MEMBER STATS FIELDS            *\n      *                                                                *\n      ******************************************************************\n\n       1100-BLANK-RIGHT-STATS.\n           MOVE SPACES TO WS-MBRR\n                          WS-STAT1R\n                          WS-STAT2R\n                          WS-STAT3R\n                          WS-STAT4R\n                          WS-STAT5R\n                          WS-STAT6R\n                          WS-STAT7R.\n       1199-BLANK-RIGHT-STATS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *            FILL THE RIGHT-SIDE MEMBER STATS FIELDS             *\n      *                                                                *\n      ******************************************************************\n\n       1200-FILL-LEFT-STATS.\n           MOVE WS-MBR-NAME-LEFT  TO WS-MBRL.\n           MOVE WS-VVMM-LEFT      TO WS-S1L-VVMM.\n           MOVE WS-CREATED-LEFT   TO WS-DATE-WORK.\n           MOVE WS-DW-YMD         TO WS-S1L-CREATED\n                                     WS-S2L-CREATED.\n           MOVE WS-CHANGED-LEFT   TO WS-DATE-WORK.\n           MOVE WS-DW-YMD         TO WS-S1L-CHANGED\n                                     WS-S2L-CHANGED\n                                     WS-S3L-CHANGED.\n           MOVE WS-TIME-LEFT      TO WS-TIME-WORK.\n           MOVE WS-TW-HH          TO WS-TW2-HH.\n           MOVE WS-TW-MMSS        TO WS-TW2-MMSS\n           MOVE WS-TIME-WORK-2    TO WS-S2L-TIME\n                                     WS-S3L-TIME\n                                     WS-S4L-TIME.\n           MOVE WS-SIZE-LEFT      TO WS-S3L-SIZE\n                                     WS-S4L-SIZE\n                                     WS-S5L-SIZE.\n           MOVE WS-INIT-LEFT      TO WS-S4L-INIT\n                                     WS-S5L-INIT\n                                     WS-S6L-INIT.\n           MOVE WS-MOD-LEFT       TO WS-S5L-MOD\n                                     WS-S6L-MOD\n                                     WS-S7L-MOD.\n           MOVE WS-USER-LEFT      TO WS-S6L-USER\n                                     WS-S7L-USER.\n           MOVE WS-ALIAS-LEFT     TO WS-S7L-ALIAS.\n           MOVE WS-S1L TO WS-STAT1L.\n           MOVE WS-S2L TO WS-STAT2L.\n           MOVE WS-S3L TO WS-STAT3L.\n           MOVE WS-S4L TO WS-STAT4L.\n           MOVE WS-S5L TO WS-STAT5L.\n           MOVE WS-S6L TO WS-STAT6L.\n           MOVE WS-S7L TO WS-STAT7L.\n           ADD 1 TO WS-NBR-MBRS-LEFT.\n       1299-FILL-LEFT-STATS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *             FILL THE LEFT-SIDE MEMBER STATS FIELDS             *\n      *                                                                *\n      ******************************************************************\n\n       1300-FILL-RIGHT-STATS.\n           MOVE WS-MBR-NAME-RIGHT  TO WS-MBRR.\n           MOVE WS-VVMM-RIGHT      TO WS-S1R-VVMM.\n           MOVE WS-CREATED-RIGHT   TO WS-DATE-WORK.\n           MOVE WS-DW-YMD          TO WS-S1R-CREATED\n                                      WS-S2R-CREATED.\n           MOVE WS-CHANGED-RIGHT   TO WS-DATE-WORK.\n           MOVE WS-DW-YMD          TO WS-S1R-CHANGED\n                                      WS-S2R-CHANGED\n                                      WS-S3R-CHANGED.\n           MOVE WS-TIME-RIGHT      TO WS-TIME-WORK.\n           MOVE WS-TW-HH           TO WS-TW2-HH.\n           MOVE WS-TW-MMSS         TO WS-TW2-MMSS\n           MOVE WS-TIME-WORK-2     TO WS-S2R-TIME\n                                      WS-S3R-TIME\n                                      WS-S4R-TIME.\n           MOVE WS-SIZE-RIGHT      TO WS-S3R-SIZE\n                                      WS-S4R-SIZE\n                                      WS-S5R-SIZE.\n           MOVE WS-INIT-RIGHT      TO WS-S4R-INIT\n                                      WS-S5R-INIT\n                                      WS-S6R-INIT.\n           MOVE WS-MOD-RIGHT       TO WS-S5R-MOD\n                                      WS-S6R-MOD\n                                      WS-S7R-MOD.\n           MOVE WS-USER-RIGHT      TO WS-S6R-USER\n                                      WS-S7R-USER.\n           MOVE WS-ALIAS-RIGHT     TO WS-S7R-ALIAS.\n           MOVE WS-S1R TO WS-STAT1R.\n           MOVE WS-S2R TO WS-STAT2R.\n           MOVE WS-S3R TO WS-STAT3R.\n           MOVE WS-S4R TO WS-STAT4R.\n           MOVE WS-S5R TO WS-STAT5R.\n           MOVE WS-S6R TO WS-STAT6R.\n           MOVE WS-S7R TO WS-STAT7R.\n           ADD 1 TO WS-NBR-MBRS-RIGHT.\n       1399-FILL-RIGHT-STATS-EXIT.\n           EXIT.\n\n      ******************************************************************\n      *                                                                *\n      *                      NESTED PROGRAM SETPTR                     *\n      *                                                                *\n      ******************************************************************\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SETPTR.\n       DATA DIVISION.\n       LINKAGE SECTION.\n       01  VAR-DATA                      PIC X(250).\n       01  VAR-PTR                       POINTER.\n       PROCEDURE DIVISION\n                 USING VAR-DATA\n                       VAR-PTR.\n           SET VAR-PTR TO ADDRESS OF VAR-DATA.\n           GOBACK.\n       END PROGRAM SETPTR.\n       END PROGRAM P2PBTBL.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "READDIR": {"ttr": 8, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00S\\x00\\x98\\x13\\x1f\\x00\\x99\\x13\\x8f\\x14\\x17\\x03\\xc2\\x02\\xdf\\x00\\x00\\xd5\\xc5\\xe6\\xc5\\xd3\\xd3@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1998-05-11T00:00:00", "modifydate": "1999-05-18T14:17:53", "lines": 962, "newlines": 735, "modlines": 0, "user": "NEWELL"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. READDIR.\n      *\n      * THIS COBOL II PROGRAM IS MEANT TO BE CALLED FROM A REXX EXEC.\n      *\n      * THIS PROGRAM WILL READ THE DIRECTORY OF A PARTITIONED DATASET\n      * AND CREATE A FILE CONTAINING THE MEMBER STATS FOR THE PDS\n      * DIRECTORY. THE REXX PROGRAM WILL THEN USE EXECIO TO READ THE\n      * FILE CREATED BY THIS PROGRAM.\n      *\n       AUTHOR.     MICHAEL A. NEWELL.  (READDIR)\n      *\n      *            ARNOLD STONE        (MATCHPAT)\n      *\n      *\n      * LEGAL STUFF:\n      *\n      *   THIS PROGRAM IS SUPPLIED FREE OF CHARGE AND WITHOUT\n      *   WARRANTY OF ANY KIND.\n      *\n      *   THE AUTHOR HAS TESTED THIS PROGRAM AS FULLY AS POSSIBLE\n      *   USING THE COMPUTER SYSTEMS AND FACILITIES AVAILABLE.\n      *\n      *   HOWEVER, THE AUTHOR TAKES NO RESPONSIBILITY FOR ANY DAMAGE\n      *   DONE TO ANY COMPUTER FILES OR OTHER RESOURCES BY THIS PROGRAM.\n      *\n      *   CHANGES: 05/18/1998 - MOVED SPACES TO THE FIELD 'WS-MS-ALIAS'\n      *                         WHEN MEMBER IS NOT AN ALIAS. THIS\n      *                         PREVENTS THE FIELD FROM BEING OCCUPIED\n      *                         BY RANDOM OR UNKNOWN CHARACTERS.\n      *\n      *            05/26/1998 - IF MEMBER HAD NO STATS, BUT WAS AN ALIAS,\n      *                         THE FACT THAT IT WAS AN ALIAS WAS NOT REPORTED\n      *                         ON THE MEMBER LIST DISPLAY. IF THE MEMBER HAD\n      *                         STATS AND WAS AN ALIAS, ALIAS INFO WAS O.K.\n      *\n      *DATE-WRITTEN.  02/20/98.\n       DATE-COMPILED.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SOURCE-COMPUTER.\n           IBM-370.\n       OBJECT-COMPUTER.\n           IBM-370.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PDS-DIRECTORY\n               ASSIGN TO PDSIN.\n           SELECT PDS-MEMBERS\n               ASSIGN TO PDSOUT.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PDS-DIRECTORY\n           RECORDING MODE IS U\n           DATA RECORD IS PDS-DIR-BLOCK.\n       01  PDS-DIR-BLOCK.\n           05  FILLER                    PIC X(256).\n       FD  PDS-MEMBERS\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           DATA RECORD IS PDS-MEMBER-RECORD.\n       01  PDS-MEMBER-RECORD             PIC X(80).\n       WORKING-STORAGE SECTION.\n      *\n      *PROGRAM CONSTANTS\n      *\n       01  WS-HEADER                     PIC X(35)         VALUE\n           'READDIR WORKING-STORAGE BEGINS HERE'.\n       01  WS-ALIAS-MSG                  PIC X(05)         VALUE\n           'ALIAS'.\n       01  WS-MBR-STATIC-BYTES           PIC 9(02)         VALUE 12.\n      *\n      *REXX FUNCTION CALL VARIABLES\n      *\n       01  WS-VARIABLE-LENGTH          PIC S9(09)     COMP VALUE +10.\n       01  VARNAME                     PIC X(10)           VALUE\n           'READDIR_RC'.\n       01  VARNAME-MASK                PIC X(10)           VALUE\n           'MASKDATA'.\n       01  DUMMY-PARM                  PIC X(04)           VALUE SPACE.\n       01  SHVBLOCK.\n           05  SHVNEXT                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVUSER                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVCODE                 PIC X(01)           VALUE SPACE.\n           05  SHVRET                  PIC X(01)           VALUE SPACE.\n           05  FILLER                  PIC X(02)           VALUE SPACE.\n           05  SHVBUFL                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVNAMA                 POINTER.\n           05  SHVNAML                 PIC S9(09)     COMP VALUE ZERO.\n           05  SHVVALA                 POINTER.\n           05  SHVVALL                 PIC S9(09)     COMP VALUE ZERO.\n      *\n      *PROGRAM VARIABLES\n      *\n       01  WS-DIR-BLOCK-COUNTER          PIC 9(05)         VALUE ZERO.\n       01  WS-ENTRY-LEN                  PIC 9(05)         VALUE ZERO.\n       01  WS-ENTRY-BEG-POS              PIC 9(03)         VALUE 1.\n       01  WS-BYTES-IN-BLOCK             PIC 9(04)         VALUE ZERO.\n       01  WS-BYTES-REM                  PIC 9(03)         VALUE ZERO.\n       01  WS-1BYTE-COMP                 PIC 9(02)\n                                   COMP.\n       01  WS-1BYTE-REDEF          REDEFINES\n           WS-1BYTE-COMP.\n           05  WS-1BYTE-LEFT             PIC X(01).\n           05  WS-1BYTE-RIGHT            PIC X(01).\n       01  WS-C-DEC                      PIC 9(04).\n       01  WS-NBR-DIV                    PIC 9(01).\n       01  WS-NBR-REM                    PIC 9(01).\n       01  WS-NBR-DEC                    PIC 9(03).\n       01  WS-VV-MM-WORK.\n           05 WS-VV-WORK                 PIC 9(02).\n           05 FILLER                     PIC X(01)         VALUE '.'.\n           05 WS-MM-WORK                 PIC 9(02).\n       01  WS-TIME-WORK.\n           05  WS-HR-LEFT-WORK           PIC 9(01).\n           05  WS-HR-RIGHT-WORK          PIC 9(01).\n           05  FILLER                    PIC X(01)         VALUE ':'.\n           05  WS-MIN-LEFT-WORK          PIC 9(01).\n           05  WS-MIN-RIGHT-WORK         PIC 9(01).\n           05  FILLER                    PIC X(01)         VALUE ':'.\n           05  WS-SEC-LEFT-WORK          PIC 9(01).\n           05  WS-SEC-RIGHT-WORK         PIC 9(01).\n       01  WS-SIZE-WORK                  PIC 9(05).\n       01  WS-INIT-WORK                  PIC 9(05).\n       01  WS-MOD-WORK                   PIC 9(05).\n       01  WS-CENTURY-CREATED            PIC 9(01).\n       01  WS-CENTURY-CHANGED            PIC 9(01).\n       01  WS-YEAR-4DIGITS               PIC 9(04).\n       01  WS-YEAR-WORK.\n           05  WS-YEAR-LEFT-WORK         PIC 9(01).\n           05  WS-YEAR-RIGHT-WORK        PIC 9(01).\n       01  WS-YEAR-WORK-PIC9       REDEFINES\n           WS-YEAR-WORK                  PIC 9(02).\n       01  WS-DAY-WORK.\n           05  WS-DAY-LEFT-WORK          PIC 9(01).\n           05  WS-DAY-RIGHT-WORK         PIC 9(01).\n       01  WS-DAY-WORK-ACCUM             PIC 9(03).\n       01  WS-LEAPYEAR-DIV               PIC 9(04).\n       01  WS-LEAPYEAR-REM               PIC 9(04).\n       01  WS-MONTH-SUB                  PIC 9(02).\n       01  WS-DAYS-LEFT                  PIC 9(03).\n       01  WS-DATE-WORK.\n           05  WS-MMDDYY-YEAR            PIC 9(04).\n           05  FILLER                    PIC X(01)        VALUE '/'.\n           05  WS-MMDDYY-MONTH           PIC 9(02).\n           05  FILLER                    PIC X(01)        VALUE '/'.\n           05  WS-MMDDYY-DAY             PIC 9(02).\n      *\n      *PROGRAM SWITCHES\n      *\n       01  WS-PDS-EOF-SW                 PIC 9(01)         VALUE ZERO.\n           88 WS-PDS-EOF                                   VALUE 1.\n       01  WS-END-OF-DIR-BLOCK-SW        PIC 9(01)         VALUE ZERO.\n           88 WS-END-OF-DIR-BLOCK                          VALUE 1.\n      *\n      *DATA STORAGE AREAS\n      *\n       01  WS-MONTH-DATA.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n           05  WS-FEBRUARY-ENTRY         PIC 9(02)         VALUE 28.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n           05  FILLER                    PIC 9(02)         VALUE 30.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n           05  FILLER                    PIC 9(02)         VALUE 30.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n           05  FILLER                    PIC 9(02)         VALUE 30.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n           05  FILLER                    PIC 9(02)         VALUE 30.\n           05  FILLER                    PIC 9(02)         VALUE 31.\n       01  WS-MONTH-TABLE            REDEFINES\n           WS-MONTH-DATA.\n           05  WS-MONTH-ELEMENT          PIC 9(02)\n                                     OCCURS 12 TIMES.\n      *\n      * THIS 01-LEVEL ITEM HOLDS THE ENTIRE DIRECTORY BLOCK\n      *\n       01  WS-PDS-DIR-BLOCK.\n           10  WS-BYTES-USED-L           PIC X(01).\n           10  WS-BYTES-USED-R           PIC X(01).\n           10  WS-DIR-ENTRIES            PIC X(254).\n      *\n      * THIS 01-LEVEL ITEM HOLDS ONE DIRECTORY ENTRY FROM THE ABOVE\n      * DIRECTORY BLOCK\n      *\n       01  WS-DIR-ENTRY.\n           05  WS-ENTRY-NAME             PIC X(08).\n           05  WS-TTR                    PIC X(03).\n           05  WS-C                      PIC X(01).\n           05  WS-USER-INFO              PIC X(30).\n           05  WS-USER-INFO-EXPANDED     REDEFINES\n               WS-USER-INFO.\n               10  WS-VV                 PIC X(01).\n               10  WS-MM                 PIC X(01).\n               10  FILLER                PIC X(01).\n               10  WS-SEC-MOD            PIC X(01).\n               10  WS-CREATED.\n                   15 WS-CR-YR-LEFT      PIC X(01).\n                   15 WS-CR-YR-RIGHT     PIC X(01).\n                   15 WS-CR-DY-LEFT      PIC X(01).\n                   15 WS-CR-DY-RIGHT     PIC S9(01)\n                                     COMP-3.\n               10  WS-CHANGED.\n                   15 WS-CH-YR-LEFT      PIC X(01).\n                   15 WS-CH-YR-RIGHT     PIC X(01).\n                   15 WS-CH-DY-LEFT      PIC X(01).\n                   15 WS-CH-DY-RIGHT     PIC S9(01)\n                                     COMP-3.\n               10  WS-HR                 PIC X(01).\n               10  WS-MIN                PIC X(01).\n               10  WS-SIZEL              PIC X(01).\n               10  WS-SIZER              PIC X(01).\n               10  WS-INITL              PIC X(01).\n               10  WS-INITR              PIC X(01).\n               10  WS-MODL               PIC X(01).\n               10  WS-MODR               PIC X(01).\n               10  WS-USER               PIC X(08).\n               10  FILLER                PIC X(02).\n      *\n      * THIS 01-LEVEL ITEM HOLDS THE MEMBER NAME AND STATS THAT ARE\n      * WRITTEN TO THE OUTPUT FILE AND READ BY THE REXX PROGRAM\n      *\n       01  WS-MEMBER-STATS.\n           05  WS-MS-ENTRY-NAME          PIC X(08).\n           05  WS-MS-USER-INFO.\n               10  WS-MS-VV-MM           PIC X(05).\n               10  WS-MS-DATE-CREATED    PIC X(10).\n               10  WS-MS-DATE-CHANGED    PIC X(10).\n               10  WS-MS-TIME            PIC X(08).\n               10  WS-MS-SIZE            PIC ZZZZ9.\n               10  WS-MS-INIT            PIC ZZZZ9.\n               10  WS-MS-MOD             PIC ZZZZ9.\n               10  WS-MS-USER            PIC X(08).\n               10  WS-MS-ALIAS           PIC X(03).\n               10  FILLER                PIC X(13).\n      *\n      * BREAK DOWN OF MASKDATA VARIABLE FROM REXX\n      *\n       01   COB-DATA.\n            03  MASK                     PIC X(8).\n            03  MASKOPT                  PIC X.\n\n       LINKAGE SECTION.\n      *\n      * REXX FUNCTION CALL STUFF\n      *\n       01  EFPLCOM                     PIC X(04).\n       01  EFPLBARG                    PIC X(04).\n       01  EFPLEARG                    PIC X(04).\n       01  EFPLFB                      PIC X(04).\n       01  EFPLARG.\n           05  ARG-TBL-ENT             OCCURS 5 TIMES.\n               10  ARG-ADDR            POINTER.\n               10  ARG-LEN             PIC S9(09)     COMP.\n       01  EFPLEVAL                    POINTER.\n       01  ARG-STRING                  PIC X(250).\n       01  EVALBLOCK.\n           05  EVALBLOCK-EVPAD1        PIC X(04).\n           05  EVALBLOCK-EVSIZE        PIC S9(09)     COMP.\n           05  EVALBLOCK-EVLEN         PIC S9(09)     COMP.\n           05  EVALBLOCK-EVPAD2        PIC X(04).\n           05  EVALBLOCK-EVDATA.\n               10  EVALBLOCK-RETCODE   PIC 9(02).\n               10  FILLER              PIC X(248).\n        PROCEDURE DIVISION\n                 USING EFPLCOM\n                       EFPLBARG\n                       EFPLEARG\n                       EFPLFB\n                       EFPLARG\n                       EFPLEVAL.\n       0000-MAIN.\n      *\n      *    RETRIEVE THE MASK VALUE AND MASK OPTION\n      *\n           MOVE 'F' TO SHVCODE.\n           MOVE 8 TO SHVNAML.\n           SET SHVVALA TO ADDRESS OF EVALBLOCK-EVDATA.\n           CALL 'SETPTR' USING VARNAME-MASK\n                               SHVNAMA.\n           MOVE 9 TO SHVBUFL.\n           CALL 'SETPTR' USING COB-DATA\n                               SHVVALA.\n           CALL 'IRXEXCOM' USING BY CONTENT   'IRXEXCOM'\n                                 BY REFERENCE DUMMY-PARM\n                                              DUMMY-PARM\n\n                                              SHVBLOCK.\n           OPEN INPUT  PDS-DIRECTORY.\n           OPEN OUTPUT PDS-MEMBERS.\n           PERFORM 0100-PROCESS-PDS-DIRECTORY THRU\n                   0199-PROCESS-PDS-EXIT\n             UNTIL WS-PDS-EOF.\n\n           CLOSE PDS-DIRECTORY\n                 PDS-MEMBERS.\n      *\n      *    SET UP THE RETURN TO THE REXX PROGRAM\n      *\n           SET ADDRESS OF EVALBLOCK TO EFPLEVAL.\n      *\n      *    MOVE RETURN CODE OF ZERO TO REXX VARIABLE\n      *\n           MOVE ZERO TO  EVALBLOCK-RETCODE.\n           MOVE +2  TO EVALBLOCK-EVLEN.\n      *\n      *    SET UP REXX PROGRAM ADDRESSABILITY TO VARIABLE AND VAR DATA\n      *\n           MOVE 'S' TO SHVCODE.\n           CALL 'SETPTR' USING VARNAME\n                               SHVNAMA.\n           MOVE WS-VARIABLE-LENGTH TO SHVNAML.\n           SET SHVVALA TO ADDRESS OF EVALBLOCK-EVDATA.\n           MOVE EVALBLOCK-EVLEN TO SHVVALL.\n           CALL 'IRXEXCOM' USING BY CONTENT   'IRXEXCOM'\n                                 BY REFERENCE DUMMY-PARM\n                                              DUMMY-PARM\n                                              SHVBLOCK.\n           GOBACK.\n\n      * READ A DIRECTORY BLOCK AND PROCESS ALL MEMBERS.\n      *\n      * OUTER LOOP:  0100-PROCESS-PDS-DIRECTORY\n      * INNER LOOP:  0200-PROCESS-DIR-ENTRY\n      *\n      * 0100-PROCESS-PDS-DIRECTORY IS CALLED ONCE FOR EACH DIRECTORY\n      * BLOCK.\n      *\n      * WITHIN 0100-PROCESS-PDS-DIRECTORY, 0200-PROCESS-DIR-ENTRY IS\n      * CALLED ONCE FOR EACH MEMBER CONTAINED IN THE CURRENT DIRECTORY\n      * BLOCK\n      *\n       0100-PROCESS-PDS-DIRECTORY.\n           READ PDS-DIRECTORY INTO WS-PDS-DIR-BLOCK\n             AT END\n                MOVE 1 TO WS-PDS-EOF-SW\n                GO TO 0199-PROCESS-PDS-EXIT.\n      *\n      *    CALCULATE NUMBER OF BYTES USED IN BLOCK.\n      *\n      *    MOVE HIGH-ORDER BYTE OF BYTES USED\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-BYTES-USED-L TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-BYTES-IN-BLOCK.\n           COMPUTE WS-BYTES-IN-BLOCK = WS-BYTES-IN-BLOCK * 256.\n      *\n      *    MOVE LOW-ORDER BYTE OF BYTES USED\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-BYTES-USED-R TO WS-1BYTE-RIGHT.\n           ADD  WS-1BYTE-COMP TO WS-BYTES-IN-BLOCK.\n      *\n      *    IF THIS BLOCK UNUSED WE MUST BE AT END OF PDS DIRECTORY\n      *\n           IF WS-BYTES-IN-BLOCK EQUAL ZERO THEN\n              MOVE 1 TO WS-PDS-EOF-SW\n              GO TO 0199-PROCESS-PDS-EXIT.\n      *\n      *    ADD 1 TO NUMBER OF DIR BLOCKS AND RESET SWITCHES AND\n      *    COUNTERS\n      *\n           ADD 1 TO WS-DIR-BLOCK-COUNTER.\n           MOVE ZERO TO WS-END-OF-DIR-BLOCK-SW.\n           MOVE 1    TO WS-ENTRY-BEG-POS.\n      *\n      *    PROCESS INDIVIDUAL DIRECTORY ENTRIES UNTIL END OF CURRENT\n      *    DIRECTORY BLOCK\n      *\n           PERFORM 0200-PROCESS-DIR-ENTRY THRU\n                   0299-PROCESS-DIR-EXIT\n             UNTIL WS-END-OF-DIR-BLOCK.\n       0199-PROCESS-PDS-EXIT.\n           EXIT.\n      *\n      * PROCESS A SINGLE DIRECTORY ENTRY.\n      *\n       0200-PROCESS-DIR-ENTRY.\n      *\n      *    MOVE STATIC MEMBER INFO FROM DIRECTORY BLOCK TO SINGLE\n      *    ENTRY DATA AREA\n      *\n           MOVE WS-DIR-ENTRIES(WS-ENTRY-BEG-POS:WS-MBR-STATIC-BYTES)\n             TO WS-DIR-ENTRY.\n      *\n      *    IF MEMBER NAME IS EQUAL TO HIGH-VALUES (ALL X'FF'S)\n      *    WE HAVE REACHED THE LAST MEMBER OF THE LAST USED DIR BLOCK\n      *    OF THE DATASET\n      *\n           IF WS-ENTRY-NAME EQUAL HIGH-VALUES\n              MOVE 1 TO WS-END-OF-DIR-BLOCK-SW\n                        WS-PDS-EOF-SW\n              GO TO 0299-PROCESS-DIR-EXIT.\n      *\n      *    MOVE MEMBER NAME TO PRINT LINE\n      *\n           MOVE WS-ENTRY-NAME TO WS-MS-ENTRY-NAME.\n      *\n      *    GET NUMBER OF BYTES OF USER DATA FOR THIS ENTRY.\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-C TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-C-DEC.\n      *\n      *    LOP OFF LEFTMOST BIT OF FIELD (1XXXXXXX)\n      *\n      *    THIS BIT INDICATES THE MEMBER IS AN ALIAS\n      *\n           IF WS-C-DEC GREATER THAN 128 OR\n              WS-C-DEC EQUAL TO 128\n              COMPUTE WS-C-DEC = WS-C-DEC - 128\n              MOVE 'YES' TO WS-MS-ALIAS\n051898     ELSE\n051898        MOVE SPACES TO WS-MS-ALIAS.\n      *\n      *    LOP OFF 2ND LEFTMOST BIT OF FIELD (X1XXXXXX)\n      *\n      *    THIS BIT IS THE LEFT BIT OF THE MEMBER'S TTR\n      *\n           IF WS-C-DEC GREATER THAN 64 OR\n              WS-C-DEC EQUAL TO 64\n              COMPUTE WS-C-DEC = WS-C-DEC - 64.\n      *\n      *    LOP OFF 3RD LEFTMOST BIT OF FIELD (XX1XXXXX)\n      *\n      *    THIS BIT IS THE RIGHT BIT OF THE MEMBER'S TTR\n      *\n           IF WS-C-DEC GREATER THAN 32 OR\n              WS-C-DEC EQUAL TO 32\n              COMPUTE WS-C-DEC = WS-C-DEC - 32.\n      *\n      *    DETERMINE IF THIS MEMBER IS WANTED |\n      *\n           IF MASK NOT = SPACES\n              CALL 'MATCHPAT' USING MASK WS-MS-ENTRY-NAME\n              IF (RETURN-CODE = 4 AND MASKOPT = 'I') OR\n                 (RETURN-CODE = 0 AND MASKOPT = 'X')\n                 IF WS-C-DEC EQUAL ZERO\n                    COMPUTE WS-ENTRY-BEG-POS = WS-ENTRY-BEG-POS +\n                            WS-MBR-STATIC-BYTES\n                 ELSE\n                    COMPUTE WS-C-DEC = WS-C-DEC * 2\n                    COMPUTE WS-ENTRY-LEN = WS-C-DEC +\n                            WS-MBR-STATIC-BYTES\n                    COMPUTE WS-ENTRY-BEG-POS = WS-ENTRY-BEG-POS +\n                            WS-ENTRY-LEN\n                 END-IF\n                 COMPUTE WS-BYTES-REM =\n                         WS-BYTES-IN-BLOCK - WS-ENTRY-BEG-POS\n                 IF WS-BYTES-REM  LESS THAN WS-MBR-STATIC-BYTES OR\n                    WS-ENTRY-BEG-POS > WS-BYTES-IN-BLOCK\n                     MOVE 1 TO WS-END-OF-DIR-BLOCK-SW\n                 END-IF\n                 GO TO 0299-PROCESS-DIR-EXIT\n              END-IF\n           END-IF\n      *\n      *    WHAT'S LEFT AFTER LOPPING OFF THE THREE LEFTMOST BITS IS\n      *    THE NUMBER OF HALFWORDS OF USER DATA IN THE DIRECTORY\n      *    ENTRY. IF THIS NUMBER IS ZERO, THERE IS NO USER DATA FOR\n      *    THIS MEMBER.\n      *\n           IF WS-C-DEC EQUAL ZERO\n              PERFORM 0300-PROCESS-NO-MEMBER-STATS THRU\n                      0399-PROCESS-NO-MEMBER-EXIT\n           ELSE\n              PERFORM 0400-PROCESS-MEMBER-STATS THRU\n                      0499-PROCESS-MEMBER-EXIT.\n      *\n      *    COMPUTE NUMBER OF BYTES REMAINING IN THE DIRECTORY BLOCK\n      *\n           COMPUTE WS-BYTES-REM =\n                   WS-BYTES-IN-BLOCK - WS-ENTRY-BEG-POS.\n      *\n      *    IF THE NUMBER OF BYTES REMAINING IS LESS THAN THE NUMBER\n      *    OF BYTES USED FOR THE STATIC INFORMATION FOR A MEMBER,\n      *    THEN WE DON'T HAVE ANY MORE MEMBERS IN THIS DIRECTORY\n      *    BLOCK SO WE SET THE END OF BLOCK SWITCH AND RETURN\n      *\n           IF WS-BYTES-REM LESS THAN WS-MBR-STATIC-BYTES\n              MOVE 1 TO WS-END-OF-DIR-BLOCK-SW\n              GO TO 0299-PROCESS-DIR-EXIT.\n      *\n      *    IF OUR NEXT BEGINNING POSITION (CALCULATED IN 0300-PROCESS...\n      *    OR 0400-PROCESS...) IS PAST THE END OF THE DIRECTORY BLOCK\n      *    THEN WE DON'T HAVE ANY MORE MEMBERS IN THIS BLOCK SO WE SET\n      *    THE END OF BLOCK SWITCH AND RETURN\n      *\n           IF WS-ENTRY-BEG-POS GREATER THAN WS-BYTES-IN-BLOCK\n              MOVE 1 TO WS-END-OF-DIR-BLOCK-SW.\n       0299-PROCESS-DIR-EXIT.\n           EXIT.\n\n       0300-PROCESS-NO-MEMBER-STATS.\n      *\n      *    WE'VE ALREADY MOVED THE MEMBER NAME TO THE OUTPUT RECORD SO\n      *    ALL WE NEED TO DO HERE IS WRITE THE OUTPUT RECORD, CALCULATE\n      *    THE BEGINNING POSITION IN THE BLOCK OF THE NEXT DIR ENTRY,\n      *    AND RETURN\n      *\n052698     IF WS-MS-ALIAS = 'YES'\n052698        MOVE SPACES TO WS-MS-USER-INFO\n052698        MOVE 'YES' TO WS-MS-ALIAS\n052698     ELSE\n052698        MOVE SPACES TO WS-MS-USER-INFO.\n           WRITE PDS-MEMBER-RECORD FROM WS-MEMBER-STATS.\n           MOVE SPACES TO WS-MEMBER-STATS.\n           COMPUTE WS-ENTRY-BEG-POS = WS-ENTRY-BEG-POS +\n                   WS-MBR-STATIC-BYTES.\n       0399-PROCESS-NO-MEMBER-EXIT.\n           EXIT.\n      *\n      * PROCESS A DIRECTORY ENTRY THAT HAS MEMBER STATISTICS\n      *\n       0400-PROCESS-MEMBER-STATS.\n      *\n      *    COMPUTE LENGTH OF DIRECTORY ENTRY\n      *\n      *    THE FIELD WS-C-DEC IS THE NUMBER OF HALFWORDS OF USER\n      *    INFORMATION FOR THIS DIRECTORY ENTRY. WE MULTIPLY IT BY 2\n      *    TO GET THE NUMBER OF BYTES OF USER INFORMATION FOR THIS\n      *    ENTRY\n      *\n           COMPUTE WS-C-DEC = WS-C-DEC * 2.\n           COMPUTE WS-ENTRY-LEN = WS-C-DEC + WS-MBR-STATIC-BYTES.\n           MOVE WS-DIR-ENTRIES(WS-ENTRY-BEG-POS:WS-ENTRY-LEN) TO\n                WS-DIR-ENTRY.\n      *\n      *    IF USER INFO DOESN'T SEEM TO BE FOR SOME SORT OF SOURCE\n      *    PROGRAM LIBRARY DON'T TRY TO READ THE USER DATA.\n      *\n           IF WS-C-DEC NOT EQUAL TO 30\n              MOVE SPACES TO WS-MS-USER-INFO\n              WRITE PDS-MEMBER-RECORD FROM WS-MEMBER-STATS\n              MOVE SPACES TO WS-MEMBER-STATS\n              COMPUTE WS-ENTRY-BEG-POS = WS-ENTRY-BEG-POS +\n                      WS-ENTRY-LEN\n              GO TO 0499-PROCESS-MEMBER-EXIT.\n      *\n      *    EXTRACT ENTRY VERSION NUMBER\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-VV TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-VV-WORK.\n      *\n      *    EXTRACT ENTRY MAINTENANCE LEVEL\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-MM TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-MM-WORK.\n\n           MOVE WS-VV-MM-WORK TO WS-MS-VV-MM.\n      *\n      *    EXTRACT CENTURY FROM DATE CREATED FIELD\n      *\n      *    IF THIS BYTE IS EQUAL TO 1 IT INDICATES THAT\n      *    THE YEAR IS IN THE 21ST CENTURY. IF THIS BYTE IS\n      *    EQUAL TO 0 THE YEAR IS IN THE 20TH CENTURY\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CR-YR-LEFT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-CENTURY-CREATED.\n      *\n      *    EXTRACT THE YEAR FROM DATE CREATED FIELD\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CR-YR-RIGHT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-YEAR-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-YEAR-RIGHT-WORK.\n           MOVE WS-YEAR-WORK-PIC9 TO WS-YEAR-4DIGITS.\n           IF WS-CENTURY-CREATED EQUAL ZERO\n              ADD 1900 TO WS-YEAR-4DIGITS\n           ELSE\n              ADD 2000 TO WS-YEAR-4DIGITS.\n      *\n      *    EXTRACT THE DATE FROM DATE CREATED FIELD\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CR-DY-LEFT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-DAY-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-DAY-RIGHT-WORK.\n           MOVE WS-DAY-WORK TO WS-DAY-WORK-ACCUM.\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CR-DY-RIGHT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           ADD  WS-NBR-REM TO WS-DAY-WORK-ACCUM.\n      *\n      *    CONVERT YYYYDDD TO MM/DD/YYYY\n      *\n           PERFORM 0500-CONVERT-DATE THRU\n                   0599-CONVERT-EXIT.\n\n           MOVE WS-DATE-WORK TO WS-MS-DATE-CREATED.\n      *\n      *    EXTRACT CENTURY FROM DATE CHANGED FIELD\n      *\n      *    IF THIS BYTE IS EQUAL TO 1 IT INDICATES THAT\n      *    THE YEAR IS IN THE 21ST CENTURY. IF THIS BYTE IS\n      *    EQUAL TO 0 THE YEAR IS IN THE 20TH CENTURY\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CH-YR-LEFT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-CENTURY-CHANGED.\n      *\n      *    EXTRACT THE YEAR THAT THE MEMBER WAS LAST CHANGED\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CH-YR-RIGHT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-YEAR-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-YEAR-RIGHT-WORK.\n           MOVE WS-YEAR-WORK-PIC9 TO WS-YEAR-4DIGITS.\n           IF WS-CENTURY-CHANGED EQUAL ZERO\n              ADD 1900 TO WS-YEAR-4DIGITS\n           ELSE\n              ADD 2000 TO WS-YEAR-4DIGITS.\n      *\n      *    EXTRACT THE DAY THAT THE MEMBER WAS LAST CHANGED\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CH-DY-LEFT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-DAY-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-DAY-RIGHT-WORK.\n           MOVE WS-DAY-WORK TO WS-DAY-WORK-ACCUM.\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-CH-DY-RIGHT TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           ADD  WS-NBR-REM TO WS-DAY-WORK-ACCUM.\n      *\n      *    CONVERT YYYYDDD TO MM/DD/YYYY\n      *\n           PERFORM 0500-CONVERT-DATE THRU\n                   0599-CONVERT-EXIT.\n\n           MOVE WS-DATE-WORK TO WS-MS-DATE-CHANGED.\n      *\n      *    EXTRACT HOUR PORTION OF TIME FIELD\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-HR TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-HR-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-HR-RIGHT-WORK.\n      *\n      *    EXTRACT MINUTE PORTION OF TIME FIELD\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-MIN TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-MIN-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-MIN-RIGHT-WORK.\n      *\n      *    EXTRACT SECONDS PORTION OF TIME FIELD\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-SEC-MOD TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-NBR-DEC.\n           DIVIDE WS-NBR-DEC BY 16 GIVING WS-NBR-DIV\n                  REMAINDER WS-NBR-REM.\n           MOVE WS-NBR-DIV TO WS-SEC-LEFT-WORK.\n           MOVE WS-NBR-REM TO WS-SEC-RIGHT-WORK.\n\n           MOVE WS-TIME-WORK TO WS-MS-TIME.\n      *\n      *    EXTRACT CURRENT SIZE OF ENTRY\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-SIZEL TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-SIZE-WORK.\n           COMPUTE WS-SIZE-WORK = WS-SIZE-WORK * 256.\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-SIZER TO WS-1BYTE-RIGHT.\n           ADD  WS-1BYTE-COMP TO WS-SIZE-WORK.\n\n           MOVE WS-SIZE-WORK TO WS-MS-SIZE.\n      *\n      *    EXTRACT INITIAL SIZE OF ENTRY\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-INITL TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-INIT-WORK.\n           COMPUTE WS-INIT-WORK = WS-INIT-WORK * 256.\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-INITR TO WS-1BYTE-RIGHT.\n           ADD  WS-1BYTE-COMP TO WS-INIT-WORK.\n\n           MOVE WS-INIT-WORK TO WS-MS-INIT.\n      *\n      *    EXTRACT MODIFICATION LEVEL\n      *\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-MODL TO WS-1BYTE-RIGHT.\n           MOVE WS-1BYTE-COMP TO WS-MOD-WORK.\n           COMPUTE WS-MOD-WORK = WS-MOD-WORK * 256.\n           MOVE ZEROES TO WS-1BYTE-COMP.\n           MOVE WS-MODR TO WS-1BYTE-RIGHT.\n           ADD  WS-1BYTE-COMP TO WS-MOD-WORK.\n\n           MOVE WS-MOD-WORK TO WS-MS-MOD.\n      *\n      *    MOVE USER ID OF LAST CHANGE TO OUTPUT RECORD\n      *\n           MOVE WS-USER TO WS-MS-USER.\n      *\n      *    COMPUTE NEXT DIR ENTRY POSITION WITHIN DIRECTORY BLOCK\n      *\n           COMPUTE WS-ENTRY-BEG-POS = WS-ENTRY-BEG-POS +\n                   WS-ENTRY-LEN.\n\n           WRITE PDS-MEMBER-RECORD FROM WS-MEMBER-STATS.\n           MOVE SPACES TO WS-MEMBER-STATS.\n       0499-PROCESS-MEMBER-EXIT.\n           EXIT.\n      *\n      * CONVERT DATE FROM YYYYDDD TO MM/DD/YYYY\n      *\n       0500-CONVERT-DATE.\n      *\n      *    DETERMINE IF THE YEAR IS A LEAP YEAR\n      *\n           MOVE 28 TO WS-FEBRUARY-ENTRY.\n           DIVIDE WS-YEAR-4DIGITS BY 4 GIVING WS-LEAPYEAR-DIV\n                  REMAINDER WS-LEAPYEAR-REM.\n           COMPUTE WS-LEAPYEAR-DIV = WS-LEAPYEAR-DIV * 4.\n           IF WS-LEAPYEAR-DIV NOT EQUAL WS-YEAR-4DIGITS\n              GO TO 0510-CONVERT-DATE.\n           DIVIDE WS-YEAR-4DIGITS BY 100 GIVING WS-LEAPYEAR-DIV\n                  REMAINDER WS-LEAPYEAR-REM.\n           COMPUTE WS-LEAPYEAR-DIV = WS-LEAPYEAR-DIV * 100.\n           IF WS-LEAPYEAR-DIV NOT EQUAL WS-YEAR-4DIGITS\n              MOVE 29 TO WS-FEBRUARY-ENTRY\n              GO TO 0510-CONVERT-DATE.\n           DIVIDE WS-YEAR-4DIGITS BY 400 GIVING WS-LEAPYEAR-DIV\n                  REMAINDER WS-LEAPYEAR-REM.\n           COMPUTE WS-LEAPYEAR-DIV = WS-LEAPYEAR-DIV * 400.\n           IF WS-LEAPYEAR-DIV = WS-YEAR-4DIGITS\n              MOVE 29 TO WS-FEBRUARY-ENTRY.\n      *\n      *    DETERMINE MM/DD FROM YYY\n      *\n       0510-CONVERT-DATE.\n           IF WS-DAY-WORK-ACCUM GREATER THAN 366\n              MOVE ZEROES TO WS-MMDDYY-YEAR\n                             WS-MMDDYY-DAY\n                             WS-MMDDYY-MONTH\n              GO TO 0599-CONVERT-EXIT.\n           MOVE 1 TO WS-MONTH-SUB.\n           MOVE WS-DAY-WORK-ACCUM TO WS-DAYS-LEFT.\n           IF WS-DAYS-LEFT LESS THAN 32\n              NEXT SENTENCE\n           ELSE\n              PERFORM UNTIL WS-DAYS-LEFT IS LESS THAN\n                            WS-MONTH-ELEMENT(WS-MONTH-SUB) OR\n                            WS-DAYS-LEFT IS EQUAL TO\n                            WS-MONTH-ELEMENT(WS-MONTH-SUB)\n                 SUBTRACT WS-MONTH-ELEMENT(WS-MONTH-SUB)\n                     FROM WS-DAYS-LEFT GIVING WS-DAYS-LEFT\n                 ADD 1 TO WS-MONTH-SUB\n              END-PERFORM.\n           MOVE WS-MONTH-SUB TO WS-MMDDYY-MONTH.\n           MOVE WS-DAYS-LEFT TO WS-MMDDYY-DAY.\n           MOVE WS-YEAR-4DIGITS TO WS-MMDDYY-YEAR.\n       0599-CONVERT-EXIT.\n           EXIT.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SETPTR.\n       DATA DIVISION.\n       LINKAGE SECTION.\n       01  VAR-DATA                      PIC X(250).\n       01  VAR-PTR                       POINTER.\n       PROCEDURE DIVISION\n                 USING VAR-DATA\n                       VAR-PTR.\n           SET VAR-PTR TO ADDRESS OF VAR-DATA.\n           GOBACK.\n       END PROGRAM SETPTR.\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCHPAT.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  NAME-IN                       PIC X(8).\n       01  NAME-INR REDEFINES NAME-IN.\n           03  NAME-P                    PIC X\n               OCCURS 8 INDEXED BY NAME-I.\n       01  NAME-END                      PIC S9(4) COMP.\n\n       01  MATCH-PAT                     PIC X(8).\n       01  MATCH-PATR REDEFINES MATCH-PAT.\n           03  MATCH-P                   PIC X\n               OCCURS 8 INDEXED BY MATCH-I.\n       01  MATCH-END                     PIC S9(4) COMP.\n\n       01  SWITCHES.\n           03  DROP-OUT                  PIC S9(4) COMP.\n           03  MATCHED                   PIC S9(4) COMP.\n\n       01  PATTERN-STACK.\n           03  PS-NUM                    PIC S9(4) COMP.\n           03  PS OCCURS 10 INDEXED BY PS-I.\n               05  PS-P-POS              PIC S9(4) COMP.\n               05  PS-N-POS              PIC S9(4) COMP.\n       LINKAGE SECTION.\n       01  MATCH-PAT-P                   PIC X(8).\n       01  NAME-IN-P                     PIC X(8).\n       PROCEDURE DIVISION USING MATCH-PAT-P NAME-IN-P.\n       100-MAIN SECTION.\n           MOVE NAME-IN-P TO NAME-IN.\n           MOVE MATCH-PAT-P TO MATCH-PAT.\n\n       110-MAIN.\n      *\n      *    ESTABLISH END OF NAME AND MATCH STRINGS\n      *\n           MOVE 0 TO NAME-END\n           INSPECT NAME-IN TALLYING NAME-END FOR CHARACTERS\n                   BEFORE INITIAL SPACE.\n           ADD 1 TO NAME-END.\n\n           MOVE 0 TO MATCH-END\n           INSPECT MATCH-PAT TALLYING MATCH-END FOR CHARACTERS\n                   BEFORE INITIAL SPACE.\n           ADD 1 TO MATCH-END.\n      *\n      *    INITIALIZE STACK\n      *\n           MOVE 0 TO PS-NUM.\n           MOVE 0 TO MATCHED.\n           SET MATCH-I TO 1.\n           SET NAME-I TO 1.\n\n           PERFORM WITH TEST AFTER\n                   UNTIL PS-NUM < 1 OR MATCHED = 1\n             IF PS-NUM > 0\n                SET MATCH-I TO PS-P-POS (PS-NUM)\n                ADD 1 TO PS-N-POS (PS-NUM)\n                SET NAME-I TO PS-N-POS (PS-NUM)\n             END-IF\n\n             MOVE 0 TO DROP-OUT\n             PERFORM UNTIL NAME-I = NAME-END\n                      OR   MATCH-I = MATCH-END\n                      OR   DROP-OUT = 1\n               PERFORM 200-CHECK-MATCH\n             END-PERFORM\n      *\n      *      DETERMINE IF SUCCESSFULLY MATCHED\n      *\n             EVALUATE TRUE\n               WHEN DROP-OUT = 1 AND PS-NUM > 0\n                  CONTINUE\n               WHEN NAME-I = NAME-END\n                  IF MATCH-I = MATCH-END OR\n                     (MATCH-I = MATCH-END - 1 AND\n                      MATCH-P (MATCH-I) = '*')\n                      MOVE 1 TO MATCHED\n                  ELSE\n                      SUBTRACT 1 FROM PS-NUM\n                  END-IF\n               WHEN MATCH-I = MATCH-END\n                  IF MATCH-P (MATCH-END - 1) = '*'\n                      MOVE 1 TO MATCHED\n                  END-IF\n               WHEN OTHER\n                  SUBTRACT 1 FROM PS-NUM\n             END-EVALUATE\n           END-PERFORM.\n\n           IF MATCHED = 1\n              MOVE 0 TO RETURN-CODE\n           ELSE\n              MOVE 4 TO RETURN-CODE.\n\n           GOBACK.\n\n       200-CHECK-MATCH SECTION.\n       210-CHECK-MATCH.\n      *\n      *    PLACE * ON STACK\n      *\n           IF MATCH-P (MATCH-I) = '*'\n              ADD 1 TO PS-NUM\n              SET PS-N-POS (PS-NUM) TO NAME-I\n              SET PS-P-POS (PS-NUM) TO MATCH-I\n              ADD 1 TO  PS-P-POS (PS-NUM)\n      *\n      *       IGNORE CONSECUTIVE *'S\n      *\n              PERFORM UNTIL MATCH-I = MATCH-END OR\n                            MATCH-P (MATCH-I) NOT = '*'\n                SET MATCH-I UP BY 1\n              END-PERFORM\n              GO TO 299-EXIT\n           END-IF.\n      *\n      *    INCREMENT BOTH INDEXES IF ANY CHAR OK\n      *\n           IF MATCH-P (MATCH-I) = '%'\n              SET MATCH-I UP BY 1\n              SET NAME-I UP BY 1\n              GO TO 299-EXIT\n           END-IF.\n      *\n      *    CHECK FOR NUMERIC\n      *\n           IF MATCH-P (MATCH-I) = '.'\n              IF NAME-P (NAME-I) NUMERIC\n                 SET MATCH-I UP BY 1\n                 SET NAME-I UP BY 1\n                 GO TO 299-EXIT\n              ELSE\n                 MOVE 1 TO DROP-OUT\n                 GO TO 299-EXIT\n              END-IF\n           END-IF\n      *\n      *    CHECK FOR ALPHABETIC\n      *\n           IF MATCH-P (MATCH-I) = '!'\n              IF NAME-P (NAME-I) ALPHABETIC\n                 SET MATCH-I UP BY 1\n                 SET NAME-I UP BY 1\n                 GO TO 299-EXIT\n              ELSE\n                 MOVE 1 TO DROP-OUT\n                 GO TO 299-EXIT\n              END-IF\n           END-IF\n\n           IF NAME-P (NAME-I) = MATCH-P (MATCH-I)\n              SET MATCH-I UP BY 1\n              SET NAME-I UP BY 1\n              GO TO 299-EXIT\n           ELSE\n              MOVE 1 TO DROP-OUT\n              GO TO 299-EXIT\n           END-IF.\n\n       299-EXIT.\n           EXIT.\n       END PROGRAM MATCHPAT.\n       END PROGRAM READDIR.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT649/CBT.V500.FILE649.PDS/COBOL.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT649/CBT.V500.FILE649.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}