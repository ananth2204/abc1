{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013740000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2998086, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE997.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2998086, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2998086, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE997.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00/\\x07'", "DS1TRBAL": "b'\\x81\\\\'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xd0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xd0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\n\\xb8\\x00\\r\\n\\xbc\\x00\\x00\\x000'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00\\x10\\x01 &/\\x01 &/\\x15D\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-09-18T00:00:00", "modifydate": "2020-09-18T15:44:10", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-500"}, "text": "REGULAR CBT TAPE - VERSION 500    FILE:  997\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT500.FILE997\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 9 MEMBERS COUNTED; CUMULATIVE SIZE IS 28,418 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/18/20    15:44:10    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$INSTALL": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x005\\x01 \\x03O\\x01 \\x04\\x8f\\x04Q\\x00k\\x00r\\x00\\x00[\\xd9\\xe4\\xd5\\xd4\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-02-03T00:00:00", "modifydate": "2020-02-17T04:51:35", "lines": 107, "newlines": 114, "modlines": 0, "user": "$RUNME"}, "text": "/* this rexx exec is expected to be invoked by the EXEC command\n   thus:\n\n   EXec 'dsname($INSTAL)'\n\n   Prompting will occur for hlq and optional volser.\n\n   and it will then issue the TSO RECEIVE command for the\n   the following members to create these new data sets:\n\n   Member       Dataset\n   EXEC         hlq.EXEC\n   PANELS       hlq.PANELS\n\n   You will then need to copy these datasets/members into\n   datasets for production use.\n\n   After these data sets are created several of the members\n   of this install data set will be browsed.\n   */\n\n  parse source x1 x2 x3 x4 dsn .\n  x = PROMPT(\"ON\") /* enable prompting */\n\n  say \"Enter desired hlq for target data sets\",\n    \"(default is\" sysvar(\"syspref\")\".ZIGI.NEW):\"\n  pull hlq\n  hlq = strip(hlq)\n\n  if hlq = \"\" then hlq = sysvar(\"syspref\")\".ZIGI.NEW\"\n  hlq = translate(hlq)\n\n  say \"Enter optional volser for target data sets\",\n    \"default is to allow standard allocation to\",\n    \"find a volume.\"\n  pull volser\n  volser = strip(volser)\n\n  say \"Enter optional SYSOUT class for RECEIVE messages,\" ,\n      \"a null SYSOUT class is recommended.\"\n  pull sysout\n  sysout = strip(sysout)\n  if sysout <> \"\" then sys = \"sysout(\"sysout\")\"\n  else sys = \"\"\n\n  if volser <> \"\" then vol = \"vol(\"volser\")\"\n  else vol = \"\"\n\n  Say \"Using HLQ:\" hlq\n  if vol <> \"\" then\n  Say \"Using Volser:\" volser\n\n/* ----------------------------------------------- *\n * Check for an ISPF environment and then check to *\n * see if the receive target datasets exist. If so *\n * then compress  them before the receive.         *\n * ----------------------------------------------- */\n  if sysvar('sysispf') = \"ACTIVE\" then do\n    Address ISPEXEC\n    call do_comp   \"'\"hlq\".exec'\"\n    call do_comp   \"'\"hlq\".panels'\"\n    Address TSO\n  end\n\n/* ------------------------------------------------------------ *\n * Process the TSO RECEIVE command on all the pertinent members *\n * ------------------------------------------------------------ */\n  queue \"dsn('\"hlq\".exec')\" vol sys\n  \"Receive inds('\"dsn\"(exec)')\"\n  queue \"dsn('\"hlq\".panels')\" vol sys\n  \"Receive inds('\"dsn\"(panels)')\"\n\n/* -------------------------------------------- *\n * If ISPF is active show key members in Browse *\n * -------------------------------------------- */\n  if sysvar('sysispf') <> \"ACTIVE\" then exit\n  Address ISPEXEC\n  say 'Do you want to browse important documenation members' ,\n    '- Y or N?'\n  pull reply\n  if left(reply,1) = 'Y' then do\n    \"Browse dataset('\"dsn\"($readme)')\"\n    \"Browse dataset('\"dsn\"(gpllic)')\"\n  end\n    \"Edit dataset('\"dsn\"(stub)')\"\n\n/* ------------------------------------------------- *\n * Now display a list of the received datasets using *\n * ISPF LMM services (ISPF 3.4)                      *\n * ------------------------------------------------- */\n  if vol <> \"\" then lmvol = \"VOLUME(\"vol\")\"\n  else lmvol = \"\"\n  \"LMDINIT LISTID(LISTID) LEVEL(\"hlq\")\" lmvol\n  \"LMDDISP LISTID(\"ListId\") Confirm(Yes)\",\n    \"View(Volume)\"\n  \"LMDFREE LISTID(\"ListId\")\"\n\n  Exit\n\nDo_Comp: procedure\n  arg compdsn\n  if sysdsn(compdsn) /= 'OK' then return\n  say \"Compressing:\"  compdsn\n  \"LMInit dataid(compress) enq(exclu) dataset(\"compdsn\")\"\n  \"LMComp Dataid(\"compress\")\"\n  \"LMFree Dataid(\"compress\")\"\n  return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$README": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01  \\x8f\\x01  \\x8f\\x172\\x00)\\x00)\\x00\\x00\\xd9\\xc5\\xc1\\xc4\\xd4\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-26T00:00:00", "modifydate": "2020-07-26T17:32:15", "lines": 41, "newlines": 41, "modlines": 0, "user": "README"}, "text": "========================= RELEASE INFORMATION =============================\n\n\nzIGI is the open source z/OS ISPF Git Interface application that enables\nthe traditional ISPF user to utilize many of the facilities of Git without\nhaving to \"fully\" learn Git while avoiding the need to use the OMVS\nenvironment.\n\nTo get started with this package:\n\n1. Install Git for OMVS via the great folks at Rocket Software\n1a. Go to this url for Git and the pre-requisite tools (bash, gzip,\n    and perl):\n    https://www.rocketsoftware.com/product-categories/mainframe/git-for-zos\n1b. Go to this url to get a simplified installer for Git and the\n    pre-requisite tools:\n    https://gist.github.com/wizardofzos/897b243d4cbe9fbc471ec1396fbbe174\n1c. Now install Git using the installer\n2. Make sure Git-related setups (PATH/LIB etc.) is set via\n   /etc/profile\n3. Create an account at github.com and add your SSH public key to it.\n4. From OMVS-shell invoke: git clone git@github.com/wizardofzos/zigi.git\n5. cd zigi\n6. ./install.sh (su and MVS HLQ access might be required)\n7. ISPF,3.4. Go to ZIGI.EXEC and exec ZIGI\n\nMore information in the wiki: https://github.com/wizardofzos/zigi/wiki\n\nThis file is part of zIGI.\n\nzIGI is free software: you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation version 3 of the License.\n\nzIGI is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\nFOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\ndetails.\n\nYou should have received a copy of the GNU General Public License along\nwith zIGI. See ZIGI.GPLLIC, if not, see https://www.gnu.org/licenses/.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE997": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00\\x06\\x01 &/\\x01 &/\\x15D\\x00\\x18\\x00\\x18\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-09-18T00:00:00", "modifydate": "2020-09-18T15:44:06", "lines": 24, "newlines": 24, "modlines": 0, "user": "CBT-500"}, "text": "//***FILE 997 is from Henri Kuiper and Lionel Dyck and contains     *   FILE 997\n//*           the z/OS ISPF Git Interface (ZIGI) application.       *   FILE 997\n//*                                                                 *   FILE 997\n//*  ZIGI is the open source z/OS ISPF Git Interface application    *   FILE 997\n//*  that enables the traditional ISPF user to utilize many of the  *   FILE 997\n//*  facilities of Git without having to \"fully\" learn Git while    *   FILE 997\n//*  avoiding the need to use the OMVS environment.                 *   FILE 997\n//*                                                                 *   FILE 997\n//*  Go to https://zigi.rocks for more information                  *   FILE 997\n//*                                                                 *   FILE 997\n//*           Version 3.02  -  Sept 06, 2020                        *   FILE 997\n//*                                                                 *   FILE 997\n//*           email:  lbdyck@gmail.com                              *   FILE 997\n//*                   henrikuiper@zdevops.com                       *   FILE 997\n//*                                                                 *   FILE 997\n//*       NAME       VER.MOD   LAST MODIFIED     SIZE   ID          *   FILE 997\n//*       $INSTALL    01.02   2020/02/17 04:51    107 $RUNME        *   FILE 997\n//*       $README     01.00   2020/09/06 14:28     41 README        *   FILE 997\n//*       EXEC        01.00   2020/09/06 14:28  17723 XMIT          *   FILE 997\n//*       GPLLIC      01.00   2020/09/06 14:28    677 GPL           *   FILE 997\n//*       PANELS      01.00   2020/09/06 14:28   9159 XMIT          *   FILE 997\n//*       RELEASE     01.00   2020/09/06 14:28    658 README        *   FILE 997\n//*       STUB        01.01   2020/05/16 12:35     17 SAMPLE        *   FILE 997\n//*                                                                 *   FILE 997\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXEC": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01 %\\x0f\\x01 %\\x0f\\x14(E;E;\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-09-06T00:00:00", "modifydate": "2020-09-06T14:28:29", "lines": 17723, "newlines": 17723, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "GPLLIC": {"ttr": 7688, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x00\\x00\\x00\\x01 \\x03O\\x01 \\x03O\\x07G\\x02\\xa5\\x02\\xa5\\x00\\x00\\xc7\\xd7\\xd3@@@@@@@'", "ispf": {"version": "02.00", "flags": 0, "createdate": "2020-02-03T00:00:00", "modifydate": "2020-02-03T07:47:00", "lines": 677, "newlines": 677, "modlines": 0, "user": "GPL"}, "text": "zigi\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PANELS": {"ttr": 7945, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01 %\\x0f\\x01 %\\x0f\\x14(#\\xc7#\\xc7\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-09-06T00:00:00", "modifydate": "2020-09-06T14:28:30", "lines": 9159, "newlines": 9159, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "RELEASE": {"ttr": 11781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01 %\\x0f\\x01 %\\x0f\\x14(\\x02\\x92\\x02\\x92\\x00\\x00\\xd9\\xc5\\xc1\\xc4\\xd4\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-09-06T00:00:00", "modifydate": "2020-09-06T14:28:29", "lines": 658, "newlines": 658, "modlines": 0, "user": "README"}, "text": " *-------------------------------------------------------------------*\n |  The User Guide and Cheat Sheet can be found at:                  |\n |  https://github.com/wizardofzos/zigi/wiki/6.-Documentation        |\n *-------------------------------------------------------------------*\n\n=============================================================================\n                             ZIGI Release Notes\n                               Version 3.02\n\n                         New Features and Functions\n                         --------------------------\n\nSupport a Read Only Repository. These must be Created and Cloning is not\nrecommended. Only operations that copy from z/OS to OMVS are supported with\nno updates to the z/OS datasets allowed from within ZIGI. Thus Branch,\nReplace, Merge, Stash, Flow, Edit, History Recover, Rename, and Remove are\nprevented.\n\nAnytime a z/OS dataset will be replaced there will be prompt to inform the\nuser of this and allow the user to (a) change the HLQ, (b) the # of\nqualifiers to ignore, or both before proceeding. Or to cancel the operation.\nThis is to prevent the replacement of any dataset without overt permission.\nThis will only occur during a Clone or Replace operation.\n\nUpdate the Delete/Remove Repository from ZIGI more user friendly and thus\neasier to use and understand.\n\nSupport multiple prefixes (HLQs) on the dataset add panel.\n\n                          Bug Fixes and Other Updates:\n                          ----------------------------\n\n1. On the Add Dataset Panel do NOT allow the ignore qualifiers to be\n   changed from 0.\n2. After Stash Pop leave the Stash List display.\n3. On a Clone of a non-ZIGI repository do not create .gitattributes or\n   .zigi/dsn\n4. Allow changing Prefix (HLQ) in AddDSN table if ignore is 0\n5. If ignore is 0 correctly detect added datasets\n6. Remove calls to call work_with_repo_file and call update_repo_metadata\n   after updating a PDS member within ZIGI as not needed and speeds things\n   up a tad.\n\n=============================================================================\n\n                             ZIGI Release Notes\n                               Version 3.01\n\n                         New Features and Functions\n                         --------------------------\n\nAdd _EDC_ZERO_RECLEN=Y to the OMVS environment variables to address\ndatasets/members with variable length records (RECFM=VB) with blank\nrecords.  This will preserve those records.\n\nAllow a qualifier ignore value of zero to allow datasets from different\nHLQ's to be in the same repository. Not a great idea but doable. The full\ndataset name (e.g. SYS1.PARMLIB) will now be stored in the repository.\nWhen doing this care is required to prevent updating the z/OS dataset from\nthe OMVS filesystem. When cloning such a repository an HLQ would still be\nrequired (thus SYS1.PARMLIB would clone into hlq.SYS1.PARMLIB).\n\n                          Bug Fixes and Other Updates:\n                          ----------------------------\n\n1. Remove duplicate code for repository delete that resulting in an\n   an incorrect message that the OMVS files had not been deleted when\n   they had.\n2. Issue 378 - add call to pfshow routine to turn off and then turn back\n   on the display of PFKeys around all pop-ups. Was missing from some.\n3. When changing branches, or pulling an update, if a OMVS file was\n   removed then the z/OS dataset that maps to it is not removed. If the\n   z/OS dataset was a PDS then the members were deleted. The member\n   deletes will no longer happen.\n4. Updated the add dataset popup panel to add a command entry field. This\n   allows a file extension (which was the 1st entry field) to have values\n   that may map to a ISPF command table entry.\n5. After a Merge the current repository display needed to be updated to\n   reflect added/removed datasets/files.\n6. Generalize binary file detection in case someone modifies .gitattributes\n   manually and doesn't follow the ZIGI convention.\n\n=============================================================================\n\n                             ZIGI Release Notes\n                               Version 3.00\n\n                         New Features and Functions\n\nWhen performing a branch change to an existing branch, instead of\ncompletely replacing all the z/OS datasets, only replace (or delete) the\nchanged elements.\n\nUpdate the zginstall.rex with to check if any z/OS datasets will be replaced\nduring the install and provide an option to retry with a different HLQ.\n\nAdded Dataset Allocation (ENQ) checking prior to performing a copy from the\nOMVS Git repository to a z/OS dataset with an option to Retry or Abort. This\nis to prevent a catastrophic failure with the OMVS cp (copy) command if the\ntarget z/OS dataset is allocated.\n\nAdd Feedback command and action bar (under Help) to display a popup\nwith a link to a feedback website.\n\nAdd a Find option to the History table display to make it easier to\nfind the commit of interest.\n\nAllow MV as an alias of RN (rename).\n\nWhen performing a merge, instead of completely replacing all the z/OS\ndatasets, only replace (or delete) the changed elements.\n\nWhen removing a repository from ZIGI added an option to keep the Git files\nif the OMVS files are not deleted.\n\nImprove cursor positioning on the Commit Panel for a more intelligent and\nlogical placement.\n\nIn many situation where PDS members are copied, from PDS to OMVS or OMVS\nto PDS, the copy operation will now copy all members in one cp command.\nThis means the progress popup with member name will not be available in\nthis situation. In some cases where only a few of the PDS members are\nbeing copied then the member progress popup will remain.\n\nEnhance the element copy progress popup on a change detection to include\nthe type of copy (text, binary, lmod).\n\nNew ZGBATCH to provide the ability to run ZIGI in batch to add and\ncommit/push updates (changes and new) elements. Must be run using a\nSYSEXEC/SYSPROC that uses the ZIGI EXEC library. Sample JCL included in\nthe comments of the EXEC.\n\nAdd the git command as a message in the View of the GITCMD results.\n\nAdd a new value for Repository Name that is different from the Git\nrepository name. This will allow the cloning of the same Git repository\nmultiple times under different names - providing the PREFIX and OMVS\ndirectories are different.\n\nImprove checking on Repository Create, Clone, or Extract on the use of\nthe provided HLQ's and OMVS directories.\n\nAdd GITCMD to the Current Repository options popup menu.\n\nReplaced ROLLBACK dialog with EXTRACT dialog. This is the same as ROLLBACK\nwith the addition of an eXtract option to create a set of z/OS datasets\nand OMVS files for the selected (one or more) commits. These are not Git\nmanaged and are intended to be used to create a delta package (aka PTF)\nwith the changed elements only. The Extract and the TAGList Extract use\nthe same ZIGIEXTR routine, one uses the Commit hash and the other uses\nthe tag.\n\nNew installer - a generic ZIGI installer. It is being used for ZIGI and\nthere is an option to prime an existing ZIGI managed repository with it.\nThe new installer, zginstall.rex, is in the root of the repositories OMVS\ndirectory. It copies the OMVS files that map to z/OS datasets into new\nz/OS datasets. Then it generates a z/OS REXX Exec, hlq.ZGSTAT.EXEC, which\nwill apply the ISPF statistics to each z/OS Partitioned dataset member.\n\nUpdate to the Current Repository SET dialog with an option to add\nzginstall.rex, and a zginstall.readme, to the current repository.\n\nOn the primary repository table display enhance the FIND to report\nwhen a Repeat Find wraps the table. Also for Find/RFind in the\nrepoistory dataset display.\n\nAdded a prompt to confirm/prevent deletions when checking for updates.\nCurrently when a PDS member is missing but the OMVS version of it still\nexists, the PDS member is just deleted. This occurs during a Pull,\nMerge, or just entering the repository when all datasets are checked for\nupdates. An option is provided to Browse/Edit the OMVS file along with\nan option to recover the member from the OMVS file.\n\n             -----------------------------------------------\n\nBug Fixes and Other Updates:\n\n 1. Expand URL field for longer URLs (Clone and Remote) and make\n    the field a scrollable field in other panels\n 2. Expand title field for version (2.x to 2.xx)\n 3. Correct row selection warning after a branch (residual variable)\n 4. RM of untracked corrected\n 5. Add error message if Browse (B) fails\n 6. Improved file status checking for Partitioned Data Sets\n 7. Correct bug in ZIGICKOT on cd if file name had $\n 8. Correct binary file detection in ZIGI (remove usssafe)\n 9. Correct ADDDSN PDS member copy counter x of y (x was off)\n10. Correct binary detection if a file extension in use\n11. Correct bug in binary test routine - added procedure expose binfiles.\n12. For many of the exec's add to bpxwunix the environment stem so that\n    SHAREAS=YES is honored to speed things up (no spawning)\n13. Correct TagList Extract issues\n    - TBDispl Failure after extract (added control display save/restore)\n    - Correct support for multiple extract tag selection\n14. Bypass Edit/View hilite if lrecl > 255\n15. Several coding bugs found with REXX compiler :(\n16. Correct member list sort to support members created/updated in 19xx\n17. Set the default permissions to 755 in the MKDIR popup\n18. Fix invalid selection in PDS member list after some commands\n19. Fix setting the default userid on commit\n20. Use the Default (commit) userid when opening a repo if a PDS member\n    does not have any ISPF statistics instead of using the users userid\n21. During repository check for updates, if a PDS member is missing the it\n    is deleted from OMVS and Git. Swapped the deletes so git rm is before\n    omvs rm.\n22. In the Network display the _ was being colored and shouldn't have been\n    if it is part of the prose and not the network diagram - fixed\n23. Ignore LMOD aliases as the cp command will handle those.\n24. Converted many bpxwunix calls to call docmd for consistency.\n25. In ZIGIDSNA correct cursor positioning if no prefix ignore.\n26. Improve target directory check for cloning and creation.\n27. Correct bug when pulling where member deletes are included.\n28. Improve process when F3 (cancel) on Rollback prompt popup\n29. Correct default userid reset if member has file extension\n30. Correct member status after a rename\n31. Resolve issue with ZG command failure on TBOpen (removed NoWrite)\n32. Change Clone and Create to test for home/.git instead of home/.zigi\n    for a non-git directory.\n33. Change the DSCB reference file directory from home/.zigi to\n    home/.zigirefd\n34. Make sure ZIGI checks for updates on entry\n35. Correct dataset check on branch delta to bypass z/OS copy of OMVS files\n36. If removing a Repository from ZIGI but retaining OMVS do not remove the\n    .git or .gitattributes files\n37. Speed up the History process of finding applicable commits for an\n    element significantly and replace author with subject in the display\n38. After Merge Conflicts resolved support selective z/OS replace instead\n    of full replace\n39. Correct STASH processing\n\n=============================================================================\n\n                             ZIGI Release Notes\n                                Version 2.9\n\n                         New Features and Functions\n\nAdd progress information on startup (checkout) and dataset add.\n\nBug Fixes and Other Updates:\n\n 1. Enable GITHELP to be open in multiple screens or stacked\n 2. Fix merge resolution ISPF stats update error\n 3. Fix failure after selecting multiple files/datasets in the Current\n    Repository display\n\n=============================================================================\n\n                             ZIGI Release Notes\n                                Version 2.8\n\n                         New Features and Functions\n                         --------------------------\n\nNew support for z/OS load modules, and associated aliases, to be managed by\nZIGI and Git. This is transparent to the user. If a PDS is RECFM=U then it\nis treated as a load library. Be aware that when copying a load module from\nUSS to a z/OS load library that the binder is invoked which may change the\nblocking of the load module but will retain all entry points, aliases,\nattributes, etc.\n\n   * ------------------------------------------------------------------ *\n   | NOTE: If your z/OS is not on z/OS 2.4 and you wish to utilize the  |\n   |       ability to have ZIGI and Git manage load modules then        |\n   |       install UJ01358 for z/OS 2.2 and UJ01356 for z/OS 2.3.       |\n   * ------------------------------------------------------------------ *\n\nNew ZG command that is used outside of ZIGI to add/commit/push a updated PDS\nmember from either the ISPF command line or from an enhanced member list.\nNOTE: The ZG exec is self-contained with inline ISPF panels. It must be\ninstalled in a library in the SYSEXEC or SYSPROC default allocation for use.\n\nNOTE: For the 'Open ZIGI' command in the new ZG it's required you have\n      the ZIGI-startup exec present in your SYSEXEC or SYSPROC library.\n\nThe Local Repository table is updated to easily identify the column(s)\nthat are sorted. The sorted column(s) will be white and non-sorted in\nturquoise.\n\nColorize the Git Log Graph (Network command).\n\nValidate during Clone processing to prevent HTTP/HTTPS usage since ZIGI\nonly supports SSH.\n\nNew Import command on the Commit panel to import commit text from a dataset.\n\nUpdate SNAPSHOT and TagList Extract to bypass copy of OMVS directories/files\nif path is null.\n\nWhen removing (RM) a z/OS dataset or OMVS file provide the option to just\nremove it from git and not delete the dataset or file. If a z/OS dataset\nthen provide an option to not delete the dataset or file but to remove it\nfrom git management. The options provided are Z delete z/OS dataset, O\ndelete OMVS file, B to delete both, or N for No delete (only remove from\nGit). **NOTE** this does NOT apply to performing an RM on a PDS member due\nto the way PDS members are managed - performing an RM *will* delete the PDS\nmember and the OMVS copy of the member.\n\nBug Fixes and Other Updates:\n\n  1. Check z/OS dataset exists before attempting to copy to OMVS\n  2. Better parsing of remote repo URL in clone and adding remote panel.\n  3. Correct multiple row delete on row selection D in commit panel.\n  4. Correct Locate in PDS member list.\n  5. Update majority of tutorial panels for grammer/spelling/format.\n  6. Validate the OMVS directory for TagList Extract.\n  7. Correct the sortdate field - was not being consistently set the same\n  8. Correct bug with taglist create to prevent recursion into the repo\n     processing routine\n  9. Fix duplicate dataset add by commenting the prior dataset in .zigi/dsn\n 10. Update test for commit insert command (I###)\n 11. On repository delete remove the last reference date file\n 12. Fix check for last reference date is the repository is not in the users\n     home directory\n 13. PDS members starting with # break cp going to z/OS\n 14. Add a progress indicator to the OMVS->z/OS Copy (ZIGICKOT)\n\n=============================================================================\n\n                             ZIGI Release Notes\n                                Version 2.7\n\n                         New Features and Functions\n                         --------------------------\n\nSupport file extensions for PDS members when copied to OMVS. The extension\nis defined when the PDS is added to ZIGI for management and only one extension\nis allowed per PDS, and it may NOT be changed. The extension is then removed\nwhen the file is copied to the PDS.\n\nRedo the Current Repository Action Bar Menu. Split out General and Repository\ninto General, Maintenance, and Repository.\n\nNew Check command to be used by the user to check the state of the z/OS\ndatasets on demand. The check will occur when the repository is opened and\nthen only when the user requests. The state of the OMVS files will continue\nto be checked frequently as the user interacts wtih the repository.\n\nReduce processing overhead by only checking z/OS datasets for changes if\nthey have changed since the last date that ZIGI checked them. The test\nwill be to check the dataset if the last reference date (from listdsi)\nis the same as the current day or if it is greater than the last\nreference date as saved by ZIGI in the users home directory under\n.zigi/filename where filename is the OMVS file copy of the z/OS dataset.\n\nEnable multiple row selection in many instances (not all).\n\nImproved detection of deleted, or renamed, PDS members during PULL\nprocessing.\n\nImproved detection of deleted, or renamed, PDS members at ZIGI repository\nstartup.\n\nBug Fixes and Other Updates:\n\n  1. Check z/OS dataset exists before attempting to copy to OMVS\n  2. Table panel updates to use zgsr instead of zscr for scrolling field\n  3. Small cosmetic updates to some panels\n  4. Change ZIGICKOT\n       - check for .zigi/dsn before reading it - in case non-ZIGI repos\n       - if not there then set recfm/lrecl/blksize defaults\n       - continue to do selective dataset/member restores but do a full\n         ISPF stats reapply\n  5. Remove check for hyphen for 1st char of dsname\n  6. Remove tbquery that is not required\n  7. Remove version from default installation datasets\n\n\n=============================================================================\n                             ZIGI Release Notes\n                                Version 2.6\n\n                         New Features and Functions\n                         --------------------------\n\n\nAdd the Info command to the Current Repositories set of commands to display\na summary about the repository.\n\nAdd Change History as an option on the Help action bar to view the change\nhistory, which is a copy of the Release Notes dataset.\n\nOn the Current Repository table allow multiple rows to be selected (S) for\nserial processing.\n\nOn the TagList Extract save the tag information in an OMVS file for\nhistorical purposes.\n\nImproved progress status messages on dataset/file rename.\n\nSupport the use of a hypen (-) in a z/OS dataset name.\n\nOn the Current Repository SET command panel add the option to change the\ndataset prefix. The new prefix must have the same number of qualifiers and\nwill result in all the z/OS datasets being renamed along with any OMVS files\nbased on the prefix qualifier ignore value.\n\n=============================================================================\n                             ZIGI Release Notes\n                                Version 2.5\n\n                         New Features and Functions\n                         --------------------------\n\n  /--------------------- From ZIGI 2.0 ------------------------\\\n  | The former use of -M with CP to convert the @#$ special    |\n  | characters to/from z/OS for unix has been replaced by      |\n  | escaping those characters where required to preserve them. |\n  \\------------------------------------------------------------/\n\nImplement new feature 'zigiflow' to help the user make controlled\nchanges.  The ZIGI Flow feature will assist with making updates to\nrepositories.  The general use case for using ZIGI flow is as follows:\n\n    - Step 1: Start a new ZIGI flow\n    - Step 2: Make all your changes, commit\n    - Step 3: Finish your ZIGI flow\n\nImplemented a basic conversion capability to convert a cloned non-ZIGI\nconfigured git repository into a ZIGI repository. For this to work the\nrepository must have been cloned by ZIGI so that ZIGI 'knows' about it\nand the following requirements of the repository must be met:\n\n   - Each PDS is mapped to a subdirectory under the repository root\n   - Each PDS member is a file in the appropriate sub-directory\n       (e.g. main.asm in the asm directory)\n   - Binary files must end in .bin\n   - Only files, either sequential or PDS members, within the repository\n      must conform to z/OS dataset naming conventions or they are\n      treated as OMVS files.\n\nAfter creating a new local repository open the Add Dataset instead of\nrequiring the user to do that (saves a step).\n\nProvide the option to specify the codeset for character encoding during\nClone and Create repository processing. The default is IBM-1047 if not\nspecified.\n\nReplace the intrusive menus on the table display panels with an Action\nBar set of menus. Also added on those panels an F3 under the scroll\namount to facilitate point-and-shoot. The O option is still available\nto bring up a context sensitive command options menu and the / row\nselection will bring up a context sensitive row selection options menu.\n\nImplement new commands STASH to Stash Push to save the current workspace\nand revert to the most recent Commit level.  And STASHL to list all\nsaved Stashes with these options:\n\n    - Branch to create a new branch from a saved stash\n    - Remove to drop a saved stash\n    - Show to show the stash summary\n    - Diff to show the summary and diffs\n    - Pop to restore a saved stash\n\nProvided an option to enhance point-and-shoot in the ZIGI Config panel.\nOption S will leave things as they are. Option P will enable\npoint-and-shoot so that a double click outside the table will bring up\nthe Options command selection popup, and a double click inside the table\nwill bring up the row selection popup.\n\nChange REFRESH command to REPLACE and add FETCH command for Current\nRepository. Only Fetch when a repository is selected or on demand.\n\nFor Removes (deletes) add option to turn off prompting.\n\nNew ZIGI Cheat Sheet (pdf) and ZIGI User's Guide (pdf, azw3, mobi, epub)\nhave been created and are new with v2.5 which can be found at the ZIGI\nwiki:\n\n   https://github.com/wizardofzos/zigi/wiki/6.-Documentation\n\nUpdate to the Current Repository commands menu to add ADDALL. This\ncommand will do a git add for all Untracked or Modified datasets or\nfiles.\n\nUpdate to the PDS Member commands menu to add ADDALL. This command will\ndo a git add for all Untracked or Modified members.\n\nAdd a check to all ISPF panels asking for a userid to verify if the user\nenters an 8 character userid that the system supports the 8 character\nuserid.\n\nOn the PDS Member table a new line option of AB to add the member in\nbinary format.\n\nOn the ADDDSN table an option for a PDS of AB to add the dataset as a\nbinary dataset. If a partitioned dataset will contain both text and\nbinary members then add the dataset as text (option S or A) and the from\nthe Current Repository menu select the dataset and then use the AB (add\nbinary) row selection for the binary members.\n\nFix for Bitbucket users where the clone clipboard copy contains 'git\nclone' before the SSH info. The 'git clone' will now be automatically\nremoved to allow the Bitbucket user to just copy from Bitbucket and\npaste into ZIGI for clone or remote add.\n\nAdd new TAG command on the Current Repository menu to add a git tag to\nthe current repository. Both the lightweight tags, without comments, and\nannotated tags, with a short comment.\n\nAdd new TAGLIST command on the Current Repository menu to display a list\nof all tags with an option to show the full tag details, or to create a\nnew branch from the tag level.\n\nAdd SORT option for the Local Repository display to sort the repository\nlist by Repository name, Prefix, or the Last used Date. One or two\ncolumns may be sorted and the sort order is remembered when ZIGI ends\nand is used at the next ZIGI start. The sort popup panel now supports\nboth the primary and secondary sort columns.\n\nAdded an optional tag field to the commit panel. Now a tag can be added\nalong with the commit.\n\nAdded a new Category field to the repository summary that is displayed\non the Local Repository table display. It is a sort column like the\nother columns on the display.\n\nNew option to hide the splash screen if desired, and to restore it.\n\nAdditional validation on the Clone and Create panels to validate the\nOMVS directory that is specified actually exists.\n\n=============================================================================\n                             ZIGI Release Notes\n                                Version 2.0\n\n                         New Features and Functions\n                         --------------------------\n\n  /------------------------------------------------------------\\\n  | The former use of -M with CP to convert the @#$ special    |\n  | characters to/from z/OS for unix has been replaced by      |\n  | escaping those characters where required to preserve them. |\n  \\------------------------------------------------------------/\n\nUpdate to the GITLOG prompt to include, or exclude, diff's in the\nreport.\n\nA new GITCMD dialog that enables the execution of any valid Git command\nwithin the active Git repository. A command history is maintained so\nthat commands may be reused. The command results are then browsed or\nviewed.  If the command table grows beyond the point the user is\ncomfortable with it then a CLEAR command is available to start over.\n\nGrep processing has been enhanced with an option to view the results in\na report mode using the raw grep results or in a Dataset/File view where\nthe results are presented summarized by dataset or file. The display\nallows selecting the individual dataset, or file, for Edit, Browse, or\nView.\n\nHistory is a dataset, PDS member, or file selection option that will\ndisplay a list of all commits for that element. From the table display\nthe user can select using C to view the commit entry, including the\ndiffs.  Selecting using S will view the historical version of the\nelement. While in ISPF View the user has access to all ISPF Edit\ncommands, including  Compare, Copy, and Create.\n\nMerge supports merging another local branch into the current branch.\nMerge conflicts can be resolved using ISPF Edit Compare or using a\ncustomized Edit display that highlights the merge conflicts using the\nGit provided conflict markers. At this time a merge performs a full\nrefresh of ALL datasets (this is planned to become a selective refresh\nin a future release).\n\nOMVS subdirectories with files are now supported. These directories and\nfiles must be added outside of ZIGI at this time and when ZIGI starts it\nwill recognize those as untracked. The untracked directories, and/or\nfiles, must then be added to the Git staging index for management by\nGit.\n\nRename an element will rename the z/OS dataset, z/OS PDS member, OMVS\nfile, and any ISPF statistics file. It will also perform a git mv\n(rename) so all Git information about the original will be retained with\nthe new name.\n\nRemove an element will delete the z/OS dataset, z/OS PDS member, OMVS\nfile, and any ISPF statistics file. It will also perform a git rm\n(remove) so all git information about the element will be deleted.\n\nAdded new row selection option of / to tables where it made sense. The /\nwill bring up a popup menu for the available section options. These\npopups include an entry field and point-and-shoot capabilities.\n\nAdded new menu toggle to Basic and Pro that will remove ALL menus.\n\nA new command option on those panels is O which will display a popup\ncommand selection panel that support both an entry field and\npoint-and-shoot.\n\nWhen the git log is viewed the git diff's will not be colorized with\nblue for inserts and red for deletions. This only works when viewing and\nnot with browsing.\n\nUpdate Pull processing to only refresh the z/OS datasets that are\nupdated during the pull process, and only the PDS members that were\nupdated. If more than 25% of the PDS members are updated then the full\nPDS is refreshed.  Before ALL z/OS datasets were refreshed.\n\nOn the Local Repository panel the option to use 'S repo' to select a\nrepository from the command line. The 'repo' is case sensitive. This\nallows for faster access to a repository.\n\nChanged the debug logging when the ZIGIDEBG DD is present to log to a\nfile in the users home directory named zigidebug.d(julian\ndate).t(hhmmss). On exit from ZIGI a USS directory list (3.17) will be\npresented to the user with just these files from which the user can\nbrowse/edit/delete.\n\nUpdate the Config panel to prompt the user for the default number of\ngenerations to use when allocating every Partitioned Dataset during\nClone, Pull, or Refresh processing.\n\nUpdate the Repository Delete dialog to enable the deletions of the\nrepositories z/OS datasets and add an additional entry field to confirm\nthe repository delete is really wanted.\n\nChange the Current Repository ADD command to ADDDSN since that is what\nit does to differentiate it from the Add selection option which performs\na git add.\n\nImplement a new SNAPSHOT option for the Current Repository that creates\nan Escrow version of the repository - the z/OS datasets and the OMVS\nfiles. This is outside of ZIGI and git. It also generates a tag at the\ntime of the snapshot to enable easy access to the git repository for\nreviewing information.\n\nImplemented binary support. On the 'Add Dataset' panel ZIGI now supports\nthe 'AB' command. This will do the same as the trusted 'A' command (add\na dataset) to ZIGI, however this file will be treated as binary. This\nallows you to have ZIGI manage your XMIT files, or OBJECT files. Load\nmodules obviously not supported. Take note, for a PDS this means ALL the\nmembers in the PDS will be treated as binary. (this also updates and\ncommits the\n.gitattributes file)\n\nIn the element History view a new option to Recover the historical\nsource is now available. It only works for z/OS datasets. Both PDS\nmembers and PS datasets may be recovered. OMVS historical recovery is\nnot supported at this time. A PDS member must be recovered to a PDS\nmember, even if the recovery dataset is being allocated new.\n\nUpdate Rollback with two new commands. ONLY (O) will limit the display\nof commits to those with the provided string in the title (e.g. O roll)\nin a case insensitive compare. REFRESH (R) will refresh the table back\nto all entries.\n\nNew Undo (U) selection for datasets, OMVS files, and PDS members. This\nwill undo any changes made prior to a commit. After a commit the\nRollback option or the History Recover option will be required.\n\nSpeeded up the ADDDSN dialog initialization by replacing the use of\nLISTC with IBM's sample IGGCSIRX code that was modified to return only\nthe dataset names.\n\nAdded to the ADDDSN dialog a Find/RFind capability to easily find the\ndataset names to be added. Find works with a string that is searched\nanywhere in the dataset name (e.g. F PDS will find the 1st occurrence of\na dataset with PDS in the name and repeat find (F5) find the next).\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "STUB": {"ttr": 12038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x01 \\x04\\x8f\\x01 \\x13\\x7f\\x125\\x00\\x11\\x00\\x11\\x00\\x00\\xe2\\xc1\\xd4\\xd7\\xd3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-02-17T00:00:00", "modifydate": "2020-05-16T12:35:25", "lines": 17, "newlines": 17, "modlines": 0, "user": "SAMPLE"}, "text": "  /* --------------------- REXX -------------------------------- *\n  | This is a REXX exec that may be copied into a system level, |\n  | group level, or personal SYSEXEC or SYSPROC library for the |\n  | purpose of making it easy to invoke ZIGI.                   |\n  |                                                             |\n  | To use customize the exec and panels variables.             |\n  * ----------------------------------------------------------- */\n  arg opt\n  exec   = \"'hlq.exec'\"                 /* <=== update */\n  panels = \"'hlq.panels'\"               /*  <=== update */\n\n  Address TSO 'altlib act application(exec) dataset('exec')'\n  Address ISPexec\n  'libdef ispplib dataset id('panels') stack'\n  \"Select CMD(%zigi\" opt\") Newappl(ZIGI) Passlib Scrname(zigi)\"\n  'libdef ispplib'\n  Address TSO 'altlib deact application(exec)'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT997/FILE997.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT997", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}