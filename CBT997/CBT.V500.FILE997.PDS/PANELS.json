{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SLBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20200906192820000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1421721, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 1, "INMDSNAM": "SLBD.ZIGING.ZIGI.PANELS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1421721, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1421721, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SLBD.ZIGING.ZIGI.PANELS": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x11\\xc8H\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x11\\xc8H\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x11\\xc8H\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$CHANGES": {"ttr": 887, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01 %\\x0f\\x01 %\\x0f\\x10 \\x02\\x92\\x02\\x92\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-09-06T00:00:00", "modifydate": "2020-09-06T10:20:14", "lines": 658, "newlines": 658, "modlines": 0, "user": "ZIGI301"}, "text": " *-------------------------------------------------------------------*\n |  The User Guide and Cheat Sheet can be found at:                  |\n |  https://github.com/wizardofzos/zigi/wiki/6.-Documentation        |\n *-------------------------------------------------------------------*\n\n=============================================================================\n                             ZIGI Release Notes\n                               Version 3.02\n\n                         New Features and Functions\n                         --------------------------\n\nSupport a Read Only Repository. These must be Created and Cloning is not\nrecommended. Only operations that copy from z/OS to OMVS are supported with\nno updates to the z/OS datasets allowed from within ZIGI. Thus Branch,\nReplace, Merge, Stash, Flow, Edit, History Recover, Rename, and Remove are\nprevented.\n\nAnytime a z/OS dataset will be replaced there will be prompt to inform the\nuser of this and allow the user to (a) change the HLQ, (b) the # of\nqualifiers to ignore, or both before proceeding. Or to cancel the operation.\nThis is to prevent the replacement of any dataset without overt permission.\nThis will only occur during a Clone or Replace operation.\n\nUpdate the Delete/Remove Repository from ZIGI more user friendly and thus\neasier to use and understand.\n\nSupport multiple prefixes (HLQs) on the dataset add panel.\n\n                          Bug Fixes and Other Updates:\n                          ----------------------------\n\n1. On the Add Dataset Panel do NOT allow the ignore qualifiers to be\n   changed from 0.\n2. After Stash Pop leave the Stash List display.\n3. On a Clone of a non-ZIGI repository do not create .gitattributes or\n   .zigi/dsn\n4. Allow changing Prefix (HLQ) in AddDSN table if ignore is 0\n5. If ignore is 0 correctly detect added datasets\n6. Remove calls to call work_with_repo_file and call update_repo_metadata\n   after updating a PDS member within ZIGI as not needed and speeds things\n   up a tad.\n\n=============================================================================\n\n                             ZIGI Release Notes\n                               Version 3.01\n\n                         New Features and Functions\n                         --------------------------\n\nAdd _EDC_ZERO_RECLEN=Y to the OMVS environment variables to address\ndatasets/members with variable length records (RECFM=VB) with blank\nrecords.  This will preserve those records.\n\nAllow a qualifier ignore value of zero to allow datasets from different\nHLQ's to be in the same repository. Not a great idea but doable. The full\ndataset name (e.g. SYS1.PARMLIB) will now be stored in the repository.\nWhen doing this care is required to prevent updating the z/OS dataset from\nthe OMVS filesystem. When cloning such a repository an HLQ would still be\nrequired (thus SYS1.PARMLIB would clone into hlq.SYS1.PARMLIB).\n\n                          Bug Fixes and Other Updates:\n                          ----------------------------\n\n1. Remove duplicate code for repository delete that resulting in an\n   an incorrect message that the OMVS files had not been deleted when\n   they had.\n2. Issue 378 - add call to pfshow routine to turn off and then turn back\n   on the display of PFKeys around all pop-ups. Was missing from some.\n3. When changing branches, or pulling an update, if a OMVS file was\n   removed then the z/OS dataset that maps to it is not removed. If the\n   z/OS dataset was a PDS then the members were deleted. The member\n   deletes will no longer happen.\n4. Updated the add dataset popup panel to add a command entry field. This\n   allows a file extension (which was the 1st entry field) to have values\n   that may map to a ISPF command table entry.\n5. After a Merge the current repository display needed to be updated to\n   reflect added/removed datasets/files.\n6. Generalize binary file detection in case someone modifies .gitattributes\n   manually and doesn't follow the ZIGI convention.\n\n=============================================================================\n\n                             ZIGI Release Notes\n                               Version 3.00\n\n                         New Features and Functions\n\nWhen performing a branch change to an existing branch, instead of\ncompletely replacing all the z/OS datasets, only replace (or delete) the\nchanged elements.\n\nUpdate the zginstall.rex with to check if any z/OS datasets will be replaced\nduring the install and provide an option to retry with a different HLQ.\n\nAdded Dataset Allocation (ENQ) checking prior to performing a copy from the\nOMVS Git repository to a z/OS dataset with an option to Retry or Abort. This\nis to prevent a catastrophic failure with the OMVS cp (copy) command if the\ntarget z/OS dataset is allocated.\n\nAdd Feedback command and action bar (under Help) to display a popup\nwith a link to a feedback website.\n\nAdd a Find option to the History table display to make it easier to\nfind the commit of interest.\n\nAllow MV as an alias of RN (rename).\n\nWhen performing a merge, instead of completely replacing all the z/OS\ndatasets, only replace (or delete) the changed elements.\n\nWhen removing a repository from ZIGI added an option to keep the Git files\nif the OMVS files are not deleted.\n\nImprove cursor positioning on the Commit Panel for a more intelligent and\nlogical placement.\n\nIn many situation where PDS members are copied, from PDS to OMVS or OMVS\nto PDS, the copy operation will now copy all members in one cp command.\nThis means the progress popup with member name will not be available in\nthis situation. In some cases where only a few of the PDS members are\nbeing copied then the member progress popup will remain.\n\nEnhance the element copy progress popup on a change detection to include\nthe type of copy (text, binary, lmod).\n\nNew ZGBATCH to provide the ability to run ZIGI in batch to add and\ncommit/push updates (changes and new) elements. Must be run using a\nSYSEXEC/SYSPROC that uses the ZIGI EXEC library. Sample JCL included in\nthe comments of the EXEC.\n\nAdd the git command as a message in the View of the GITCMD results.\n\nAdd a new value for Repository Name that is different from the Git\nrepository name. This will allow the cloning of the same Git repository\nmultiple times under different names - providing the PREFIX and OMVS\ndirectories are different.\n\nImprove checking on Repository Create, Clone, or Extract on the use of\nthe provided HLQ's and OMVS directories.\n\nAdd GITCMD to the Current Repository options popup menu.\n\nReplaced ROLLBACK dialog with EXTRACT dialog. This is the same as ROLLBACK\nwith the addition of an eXtract option to create a set of z/OS datasets\nand OMVS files for the selected (one or more) commits. These are not Git\nmanaged and are intended to be used to create a delta package (aka PTF)\nwith the changed elements only. The Extract and the TAGList Extract use\nthe same ZIGIEXTR routine, one uses the Commit hash and the other uses\nthe tag.\n\nNew installer - a generic ZIGI installer. It is being used for ZIGI and\nthere is an option to prime an existing ZIGI managed repository with it.\nThe new installer, zginstall.rex, is in the root of the repositories OMVS\ndirectory. It copies the OMVS files that map to z/OS datasets into new\nz/OS datasets. Then it generates a z/OS REXX Exec, hlq.ZGSTAT.EXEC, which\nwill apply the ISPF statistics to each z/OS Partitioned dataset member.\n\nUpdate to the Current Repository SET dialog with an option to add\nzginstall.rex, and a zginstall.readme, to the current repository.\n\nOn the primary repository table display enhance the FIND to report\nwhen a Repeat Find wraps the table. Also for Find/RFind in the\nrepoistory dataset display.\n\nAdded a prompt to confirm/prevent deletions when checking for updates.\nCurrently when a PDS member is missing but the OMVS version of it still\nexists, the PDS member is just deleted. This occurs during a Pull,\nMerge, or just entering the repository when all datasets are checked for\nupdates. An option is provided to Browse/Edit the OMVS file along with\nan option to recover the member from the OMVS file.\n\n             -----------------------------------------------\n\nBug Fixes and Other Updates:\n\n 1. Expand URL field for longer URLs (Clone and Remote) and make\n    the field a scrollable field in other panels\n 2. Expand title field for version (2.x to 2.xx)\n 3. Correct row selection warning after a branch (residual variable)\n 4. RM of untracked corrected\n 5. Add error message if Browse (B) fails\n 6. Improved file status checking for Partitioned Data Sets\n 7. Correct bug in ZIGICKOT on cd if file name had $\n 8. Correct binary file detection in ZIGI (remove usssafe)\n 9. Correct ADDDSN PDS member copy counter x of y (x was off)\n10. Correct binary detection if a file extension in use\n11. Correct bug in binary test routine - added procedure expose binfiles.\n12. For many of the exec's add to bpxwunix the environment stem so that\n    SHAREAS=YES is honored to speed things up (no spawning)\n13. Correct TagList Extract issues\n    - TBDispl Failure after extract (added control display save/restore)\n    - Correct support for multiple extract tag selection\n14. Bypass Edit/View hilite if lrecl > 255\n15. Several coding bugs found with REXX compiler :(\n16. Correct member list sort to support members created/updated in 19xx\n17. Set the default permissions to 755 in the MKDIR popup\n18. Fix invalid selection in PDS member list after some commands\n19. Fix setting the default userid on commit\n20. Use the Default (commit) userid when opening a repo if a PDS member\n    does not have any ISPF statistics instead of using the users userid\n21. During repository check for updates, if a PDS member is missing the it\n    is deleted from OMVS and Git. Swapped the deletes so git rm is before\n    omvs rm.\n22. In the Network display the _ was being colored and shouldn't have been\n    if it is part of the prose and not the network diagram - fixed\n23. Ignore LMOD aliases as the cp command will handle those.\n24. Converted many bpxwunix calls to call docmd for consistency.\n25. In ZIGIDSNA correct cursor positioning if no prefix ignore.\n26. Improve target directory check for cloning and creation.\n27. Correct bug when pulling where member deletes are included.\n28. Improve process when F3 (cancel) on Rollback prompt popup\n29. Correct default userid reset if member has file extension\n30. Correct member status after a rename\n31. Resolve issue with ZG command failure on TBOpen (removed NoWrite)\n32. Change Clone and Create to test for home/.git instead of home/.zigi\n    for a non-git directory.\n33. Change the DSCB reference file directory from home/.zigi to\n    home/.zigirefd\n34. Make sure ZIGI checks for updates on entry\n35. Correct dataset check on branch delta to bypass z/OS copy of OMVS files\n36. If removing a Repository from ZIGI but retaining OMVS do not remove the\n    .git or .gitattributes files\n37. Speed up the History process of finding applicable commits for an\n    element significantly and replace author with subject in the display\n38. After Merge Conflicts resolved support selective z/OS replace instead\n    of full replace\n39. Correct STASH processing\n\n=============================================================================\n\n                             ZIGI Release Notes\n                                Version 2.9\n\n                         New Features and Functions\n\nAdd progress information on startup (checkout) and dataset add.\n\nBug Fixes and Other Updates:\n\n 1. Enable GITHELP to be open in multiple screens or stacked\n 2. Fix merge resolution ISPF stats update error\n 3. Fix failure after selecting multiple files/datasets in the Current\n    Repository display\n\n=============================================================================\n\n                             ZIGI Release Notes\n                                Version 2.8\n\n                         New Features and Functions\n                         --------------------------\n\nNew support for z/OS load modules, and associated aliases, to be managed by\nZIGI and Git. This is transparent to the user. If a PDS is RECFM=U then it\nis treated as a load library. Be aware that when copying a load module from\nUSS to a z/OS load library that the binder is invoked which may change the\nblocking of the load module but will retain all entry points, aliases,\nattributes, etc.\n\n   * ------------------------------------------------------------------ *\n   | NOTE: If your z/OS is not on z/OS 2.4 and you wish to utilize the  |\n   |       ability to have ZIGI and Git manage load modules then        |\n   |       install UJ01358 for z/OS 2.2 and UJ01356 for z/OS 2.3.       |\n   * ------------------------------------------------------------------ *\n\nNew ZG command that is used outside of ZIGI to add/commit/push a updated PDS\nmember from either the ISPF command line or from an enhanced member list.\nNOTE: The ZG exec is self-contained with inline ISPF panels. It must be\ninstalled in a library in the SYSEXEC or SYSPROC default allocation for use.\n\nNOTE: For the 'Open ZIGI' command in the new ZG it's required you have\n      the ZIGI-startup exec present in your SYSEXEC or SYSPROC library.\n\nThe Local Repository table is updated to easily identify the column(s)\nthat are sorted. The sorted column(s) will be white and non-sorted in\nturquoise.\n\nColorize the Git Log Graph (Network command).\n\nValidate during Clone processing to prevent HTTP/HTTPS usage since ZIGI\nonly supports SSH.\n\nNew Import command on the Commit panel to import commit text from a dataset.\n\nUpdate SNAPSHOT and TagList Extract to bypass copy of OMVS directories/files\nif path is null.\n\nWhen removing (RM) a z/OS dataset or OMVS file provide the option to just\nremove it from git and not delete the dataset or file. If a z/OS dataset\nthen provide an option to not delete the dataset or file but to remove it\nfrom git management. The options provided are Z delete z/OS dataset, O\ndelete OMVS file, B to delete both, or N for No delete (only remove from\nGit). **NOTE** this does NOT apply to performing an RM on a PDS member due\nto the way PDS members are managed - performing an RM *will* delete the PDS\nmember and the OMVS copy of the member.\n\nBug Fixes and Other Updates:\n\n  1. Check z/OS dataset exists before attempting to copy to OMVS\n  2. Better parsing of remote repo URL in clone and adding remote panel.\n  3. Correct multiple row delete on row selection D in commit panel.\n  4. Correct Locate in PDS member list.\n  5. Update majority of tutorial panels for grammer/spelling/format.\n  6. Validate the OMVS directory for TagList Extract.\n  7. Correct the sortdate field - was not being consistently set the same\n  8. Correct bug with taglist create to prevent recursion into the repo\n     processing routine\n  9. Fix duplicate dataset add by commenting the prior dataset in .zigi/dsn\n 10. Update test for commit insert command (I###)\n 11. On repository delete remove the last reference date file\n 12. Fix check for last reference date is the repository is not in the users\n     home directory\n 13. PDS members starting with # break cp going to z/OS\n 14. Add a progress indicator to the OMVS->z/OS Copy (ZIGICKOT)\n\n=============================================================================\n\n                             ZIGI Release Notes\n                                Version 2.7\n\n                         New Features and Functions\n                         --------------------------\n\nSupport file extensions for PDS members when copied to OMVS. The extension\nis defined when the PDS is added to ZIGI for management and only one extension\nis allowed per PDS, and it may NOT be changed. The extension is then removed\nwhen the file is copied to the PDS.\n\nRedo the Current Repository Action Bar Menu. Split out General and Repository\ninto General, Maintenance, and Repository.\n\nNew Check command to be used by the user to check the state of the z/OS\ndatasets on demand. The check will occur when the repository is opened and\nthen only when the user requests. The state of the OMVS files will continue\nto be checked frequently as the user interacts wtih the repository.\n\nReduce processing overhead by only checking z/OS datasets for changes if\nthey have changed since the last date that ZIGI checked them. The test\nwill be to check the dataset if the last reference date (from listdsi)\nis the same as the current day or if it is greater than the last\nreference date as saved by ZIGI in the users home directory under\n.zigi/filename where filename is the OMVS file copy of the z/OS dataset.\n\nEnable multiple row selection in many instances (not all).\n\nImproved detection of deleted, or renamed, PDS members during PULL\nprocessing.\n\nImproved detection of deleted, or renamed, PDS members at ZIGI repository\nstartup.\n\nBug Fixes and Other Updates:\n\n  1. Check z/OS dataset exists before attempting to copy to OMVS\n  2. Table panel updates to use zgsr instead of zscr for scrolling field\n  3. Small cosmetic updates to some panels\n  4. Change ZIGICKOT\n       - check for .zigi/dsn before reading it - in case non-ZIGI repos\n       - if not there then set recfm/lrecl/blksize defaults\n       - continue to do selective dataset/member restores but do a full\n         ISPF stats reapply\n  5. Remove check for hyphen for 1st char of dsname\n  6. Remove tbquery that is not required\n  7. Remove version from default installation datasets\n\n\n=============================================================================\n                             ZIGI Release Notes\n                                Version 2.6\n\n                         New Features and Functions\n                         --------------------------\n\n\nAdd the Info command to the Current Repositories set of commands to display\na summary about the repository.\n\nAdd Change History as an option on the Help action bar to view the change\nhistory, which is a copy of the Release Notes dataset.\n\nOn the Current Repository table allow multiple rows to be selected (S) for\nserial processing.\n\nOn the TagList Extract save the tag information in an OMVS file for\nhistorical purposes.\n\nImproved progress status messages on dataset/file rename.\n\nSupport the use of a hypen (-) in a z/OS dataset name.\n\nOn the Current Repository SET command panel add the option to change the\ndataset prefix. The new prefix must have the same number of qualifiers and\nwill result in all the z/OS datasets being renamed along with any OMVS files\nbased on the prefix qualifier ignore value.\n\n=============================================================================\n                             ZIGI Release Notes\n                                Version 2.5\n\n                         New Features and Functions\n                         --------------------------\n\n  /--------------------- From ZIGI 2.0 ------------------------\\\n  | The former use of -M with CP to convert the @#$ special    |\n  | characters to/from z/OS for unix has been replaced by      |\n  | escaping those characters where required to preserve them. |\n  \\------------------------------------------------------------/\n\nImplement new feature 'zigiflow' to help the user make controlled\nchanges.  The ZIGI Flow feature will assist with making updates to\nrepositories.  The general use case for using ZIGI flow is as follows:\n\n    - Step 1: Start a new ZIGI flow\n    - Step 2: Make all your changes, commit\n    - Step 3: Finish your ZIGI flow\n\nImplemented a basic conversion capability to convert a cloned non-ZIGI\nconfigured git repository into a ZIGI repository. For this to work the\nrepository must have been cloned by ZIGI so that ZIGI 'knows' about it\nand the following requirements of the repository must be met:\n\n   - Each PDS is mapped to a subdirectory under the repository root\n   - Each PDS member is a file in the appropriate sub-directory\n       (e.g. main.asm in the asm directory)\n   - Binary files must end in .bin\n   - Only files, either sequential or PDS members, within the repository\n      must conform to z/OS dataset naming conventions or they are\n      treated as OMVS files.\n\nAfter creating a new local repository open the Add Dataset instead of\nrequiring the user to do that (saves a step).\n\nProvide the option to specify the codeset for character encoding during\nClone and Create repository processing. The default is IBM-1047 if not\nspecified.\n\nReplace the intrusive menus on the table display panels with an Action\nBar set of menus. Also added on those panels an F3 under the scroll\namount to facilitate point-and-shoot. The O option is still available\nto bring up a context sensitive command options menu and the / row\nselection will bring up a context sensitive row selection options menu.\n\nImplement new commands STASH to Stash Push to save the current workspace\nand revert to the most recent Commit level.  And STASHL to list all\nsaved Stashes with these options:\n\n    - Branch to create a new branch from a saved stash\n    - Remove to drop a saved stash\n    - Show to show the stash summary\n    - Diff to show the summary and diffs\n    - Pop to restore a saved stash\n\nProvided an option to enhance point-and-shoot in the ZIGI Config panel.\nOption S will leave things as they are. Option P will enable\npoint-and-shoot so that a double click outside the table will bring up\nthe Options command selection popup, and a double click inside the table\nwill bring up the row selection popup.\n\nChange REFRESH command to REPLACE and add FETCH command for Current\nRepository. Only Fetch when a repository is selected or on demand.\n\nFor Removes (deletes) add option to turn off prompting.\n\nNew ZIGI Cheat Sheet (pdf) and ZIGI User's Guide (pdf, azw3, mobi, epub)\nhave been created and are new with v2.5 which can be found at the ZIGI\nwiki:\n\n   https://github.com/wizardofzos/zigi/wiki/6.-Documentation\n\nUpdate to the Current Repository commands menu to add ADDALL. This\ncommand will do a git add for all Untracked or Modified datasets or\nfiles.\n\nUpdate to the PDS Member commands menu to add ADDALL. This command will\ndo a git add for all Untracked or Modified members.\n\nAdd a check to all ISPF panels asking for a userid to verify if the user\nenters an 8 character userid that the system supports the 8 character\nuserid.\n\nOn the PDS Member table a new line option of AB to add the member in\nbinary format.\n\nOn the ADDDSN table an option for a PDS of AB to add the dataset as a\nbinary dataset. If a partitioned dataset will contain both text and\nbinary members then add the dataset as text (option S or A) and the from\nthe Current Repository menu select the dataset and then use the AB (add\nbinary) row selection for the binary members.\n\nFix for Bitbucket users where the clone clipboard copy contains 'git\nclone' before the SSH info. The 'git clone' will now be automatically\nremoved to allow the Bitbucket user to just copy from Bitbucket and\npaste into ZIGI for clone or remote add.\n\nAdd new TAG command on the Current Repository menu to add a git tag to\nthe current repository. Both the lightweight tags, without comments, and\nannotated tags, with a short comment.\n\nAdd new TAGLIST command on the Current Repository menu to display a list\nof all tags with an option to show the full tag details, or to create a\nnew branch from the tag level.\n\nAdd SORT option for the Local Repository display to sort the repository\nlist by Repository name, Prefix, or the Last used Date. One or two\ncolumns may be sorted and the sort order is remembered when ZIGI ends\nand is used at the next ZIGI start. The sort popup panel now supports\nboth the primary and secondary sort columns.\n\nAdded an optional tag field to the commit panel. Now a tag can be added\nalong with the commit.\n\nAdded a new Category field to the repository summary that is displayed\non the Local Repository table display. It is a sort column like the\nother columns on the display.\n\nNew option to hide the splash screen if desired, and to restore it.\n\nAdditional validation on the Clone and Create panels to validate the\nOMVS directory that is specified actually exists.\n\n=============================================================================\n                             ZIGI Release Notes\n                                Version 2.0\n\n                         New Features and Functions\n                         --------------------------\n\n  /------------------------------------------------------------\\\n  | The former use of -M with CP to convert the @#$ special    |\n  | characters to/from z/OS for unix has been replaced by      |\n  | escaping those characters where required to preserve them. |\n  \\------------------------------------------------------------/\n\nUpdate to the GITLOG prompt to include, or exclude, diff's in the\nreport.\n\nA new GITCMD dialog that enables the execution of any valid Git command\nwithin the active Git repository. A command history is maintained so\nthat commands may be reused. The command results are then browsed or\nviewed.  If the command table grows beyond the point the user is\ncomfortable with it then a CLEAR command is available to start over.\n\nGrep processing has been enhanced with an option to view the results in\na report mode using the raw grep results or in a Dataset/File view where\nthe results are presented summarized by dataset or file. The display\nallows selecting the individual dataset, or file, for Edit, Browse, or\nView.\n\nHistory is a dataset, PDS member, or file selection option that will\ndisplay a list of all commits for that element. From the table display\nthe user can select using C to view the commit entry, including the\ndiffs.  Selecting using S will view the historical version of the\nelement. While in ISPF View the user has access to all ISPF Edit\ncommands, including  Compare, Copy, and Create.\n\nMerge supports merging another local branch into the current branch.\nMerge conflicts can be resolved using ISPF Edit Compare or using a\ncustomized Edit display that highlights the merge conflicts using the\nGit provided conflict markers. At this time a merge performs a full\nrefresh of ALL datasets (this is planned to become a selective refresh\nin a future release).\n\nOMVS subdirectories with files are now supported. These directories and\nfiles must be added outside of ZIGI at this time and when ZIGI starts it\nwill recognize those as untracked. The untracked directories, and/or\nfiles, must then be added to the Git staging index for management by\nGit.\n\nRename an element will rename the z/OS dataset, z/OS PDS member, OMVS\nfile, and any ISPF statistics file. It will also perform a git mv\n(rename) so all Git information about the original will be retained with\nthe new name.\n\nRemove an element will delete the z/OS dataset, z/OS PDS member, OMVS\nfile, and any ISPF statistics file. It will also perform a git rm\n(remove) so all git information about the element will be deleted.\n\nAdded new row selection option of / to tables where it made sense. The /\nwill bring up a popup menu for the available section options. These\npopups include an entry field and point-and-shoot capabilities.\n\nAdded new menu toggle to Basic and Pro that will remove ALL menus.\n\nA new command option on those panels is O which will display a popup\ncommand selection panel that support both an entry field and\npoint-and-shoot.\n\nWhen the git log is viewed the git diff's will not be colorized with\nblue for inserts and red for deletions. This only works when viewing and\nnot with browsing.\n\nUpdate Pull processing to only refresh the z/OS datasets that are\nupdated during the pull process, and only the PDS members that were\nupdated. If more than 25% of the PDS members are updated then the full\nPDS is refreshed.  Before ALL z/OS datasets were refreshed.\n\nOn the Local Repository panel the option to use 'S repo' to select a\nrepository from the command line. The 'repo' is case sensitive. This\nallows for faster access to a repository.\n\nChanged the debug logging when the ZIGIDEBG DD is present to log to a\nfile in the users home directory named zigidebug.d(julian\ndate).t(hhmmss). On exit from ZIGI a USS directory list (3.17) will be\npresented to the user with just these files from which the user can\nbrowse/edit/delete.\n\nUpdate the Config panel to prompt the user for the default number of\ngenerations to use when allocating every Partitioned Dataset during\nClone, Pull, or Refresh processing.\n\nUpdate the Repository Delete dialog to enable the deletions of the\nrepositories z/OS datasets and add an additional entry field to confirm\nthe repository delete is really wanted.\n\nChange the Current Repository ADD command to ADDDSN since that is what\nit does to differentiate it from the Add selection option which performs\na git add.\n\nImplement a new SNAPSHOT option for the Current Repository that creates\nan Escrow version of the repository - the z/OS datasets and the OMVS\nfiles. This is outside of ZIGI and git. It also generates a tag at the\ntime of the snapshot to enable easy access to the git repository for\nreviewing information.\n\nImplemented binary support. On the 'Add Dataset' panel ZIGI now supports\nthe 'AB' command. This will do the same as the trusted 'A' command (add\na dataset) to ZIGI, however this file will be treated as binary. This\nallows you to have ZIGI manage your XMIT files, or OBJECT files. Load\nmodules obviously not supported. Take note, for a PDS this means ALL the\nmembers in the PDS will be treated as binary. (this also updates and\ncommits the\n.gitattributes file)\n\nIn the element History view a new option to Recover the historical\nsource is now available. It only works for z/OS datasets. Both PDS\nmembers and PS datasets may be recovered. OMVS historical recovery is\nnot supported at this time. A PDS member must be recovered to a PDS\nmember, even if the recovery dataset is being allocated new.\n\nUpdate Rollback with two new commands. ONLY (O) will limit the display\nof commits to those with the provided string in the title (e.g. O roll)\nin a case insensitive compare. REFRESH (R) will refresh the table back\nto all entries.\n\nNew Undo (U) selection for datasets, OMVS files, and PDS members. This\nwill undo any changes made prior to a commit. After a commit the\nRollback option or the History Recover option will be required.\n\nSpeeded up the ADDDSN dialog initialization by replacing the use of\nLISTC with IBM's sample IGGCSIRX code that was modified to return only\nthe dataset names.\n\nAdded to the ADDDSN dialog a Find/RFind capability to easily find the\ndataset names to be added. Find works with a string that is searched\nanywhere in the dataset name (e.g. F PDS will find the 1st occurrence of\na dataset with PDS in the name and repeat find (F5) find the next).\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIADDE": {"ttr": 807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00(\\x01 \\x01\\x1f\\x01 \"\\x1f\\x03P\\x00\\x1d\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-08-08T03:50:28", "lines": 29, "newlines": 13, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr\n $ type(input) caps(off) hilite(uscore) intens(low)\n _ type(input) caps(on ) hilite(uscore) intens(low)\n @ type(output) caps(on)\n)Body Window(57,8)\n+Command ===>$zcmd\n+\n+Dataset:@dsna                                          +\n+Enter optional file extension for PDS members:$ext     +\n+\n  +Press%Enter+to Continue, or%F3+to Cancel Extension.\n+\n        +Disable extension prompting:_z+(Y or N)\n)Init\n &zwinttl = 'ZIGI PDS Optional Member Extension'\n .zvars = '(extans)'\n .help = zigih610\n)Proc\n*REXX(*)\n  ext = strip(ext)\n  if left(ext,1) = '.' then\n     ext = substr(ext,2)\n*ENDREXX\n ver (&extans,list,Y,N)\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIBRA": {"ttr": 669, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x02\\x00\\x01\\x192\\x1f\\x01 \\x15\\x9f\\x08\\'\\x00%\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 2, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 37, "newlines": 34, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+-\\-\\#zigtitle    +\\-\\\n%Command ===>_zcmd   \\ \\ %Scroll ===>_zgsr+\n+Current Repository : $zigirep                         \\ \\%F3  +\n+Current HLQ        : $pdshlq\n+Current Branch     : $branch\n%\n+Type%C+to checkout an existing branch\n+Type%D+to locally delete a branch\n+Press%F3+to exit\n+\n+Or create a new branch: _newb                                     +\n+\n+\n+S  Branch                                      Status\n)Model\n@z+$z                                         +$z\n)Init\n  .zvars = '(zsel bname brstatus)'\n  &newb=''\n  .cursor = &zcmd\n  .help = zigih220\n  &zgsr = CSR\n)Proc\n ver (&zsel,list,C,D)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIBRDQ": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01 \\x01\\x1f\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 13, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(41,3)\n+Confirm deletion of the request branch:\n+ $bname\n+Answer:_z+(Y or N)\n)Init\n &zwinttl = 'ZIGI Prompt Popup'\n .zvars = '(ans)'\n)Proc\n ver (&ans,nb,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIBROW": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01\\x192\\x1f\\x01 \\x11\\x8f\\x06\\t\\x00\\x1a\\x00\\x16\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 26, "newlines": 22, "modlines": 0, "user": "ZIGI28"}, "text": ")ATTR\n   _ type(input) caps(off) intens(low )\n   ` type(text) intens(high) caps(off) just(asis) color(turq)\n   | area(dynamic) extend(on) scroll(on)\n   } type(output) intens(high) just(asis) caps(off)\n)BODY Width(&zscreenw) EXPAND(//)\n%Browse+                     }title          / /%Lines }zlinex    +\n%Command ===>_zcmd                 / /                        %Scroll ===>_Z   +\n|ZDATA ----------------------------/-/-----------------------------------------|\n|                                  / /                                         |\n| ---------------------------------/-/-----------------------------------------|\n)INIT\n  .HELP = ZIGIHMSG\n  .ZVARS = 'ZSCBR'\n  &Title = 'ZIGI Git Messages'\n)Reinit\n  Refresh(ZCMD,ZSCBR,ZDATA,zlinex)\n)PROC\n  &ZCURSOR = .CURSOR\n  &ZCSROFF = .CSRPOS\n  &ZLVLINE = LVLINE(ZDATA)\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICC": {"ttr": 811, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x03\\x01 \\x02_\\x01 \"\\x7f\\x08Y\\x00x\\x00%\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-08-14T08:59:03", "lines": 120, "newlines": 37, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr\n @ type(input ) caps(off) hilite(uscore) intens(low)\n $ type(input ) caps(on ) hilite(uscore) intens(low)\n _ type( input) intens(low ) just(left ) hilite(uscore)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\)\n+Clone Repository+---------------#zigtitle    +---------------------------------\n%Command ===>_zcmd                                                            +\n+\n%Remote Repository: + Git Repository URL\n@remote\n                                                                         +\n+\n+Branch Name:       +Specific branch to clone (default is master)\n@remotebr                                   +Read Only:$z+(Y or blank)\n+\n%PREFIX for datasets:    $pdshlq                  + (no quotes)\n%Default Push on Commit: $z+                        (Y or N)\n+\n%Repository Root Directory:   +? to browse OMVS folder structure\n@localrep                                                                    +\n+\n+Repository Name:        @reponame           +      (optional)\n+Category for Repository:@zigicat      +            (optional)\n+Default Userid set prior to Commit:$defruid +      (or blank)\n+\n+\n                  +Press%Enter+to continue, or%F3+to cancel\n)Init\n .help = zigih110\n .zvars = '(readonly defcpush)'\n)Reinit\n REFRESH(REMOTE LOCALREP)\n)Proc\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp csr)\n  zedsmsg = ''\n  if resp = 'END' then exit\n\n  if pos(' ',reponame) > 0 then do\n    zedsmsg = 'Error'\n    zedlmsg = 'The Repository Name may not have blanks. Use a - or _',\n              'in place of a blank.'\n    csr = 'reponame'\n  end\n\n  if zedsmsg = '' then\n  if translate(substr(remote,1,4)) = 'HTTP' then do\n    zedsmsg = 'Error'\n    zedlmsg = 'Only ssh is supported for cloning, using full syntax',\n      'ssh://\u00dduser@\u00a8host.xz\u00dd:port\u00a8/path/to/repo.git/ or',\n      'scp-like syntax \u00dduser@\u00a8host.xz:path/to/repo.git/'\n    csr = 'remote'\n  end\n  if word(remote,1) = 'git' then\n  if word(remote,2) = 'clone' then\n  remote = subword(remote,3)\n\n  if zedsmsg = '' then\n  if localrep /= '' then\n  if localrep /= '?' then do\n    x = bpxwunix('ls -la' localrep,,so.,se.)\n    if so.0 = 0 then do\n      zedsmsg = 'Error.'\n      zedlmsg = localrep 'does not exist. Create it and try again.'\n      csr = 'LOCALREP'\n    end\n    if so.0 > 3 then do\n      x = bpxwunix('ls -la' localrep'/.git',,so.,se.)\n      if so.0 > 0 then do\n        zedsmsg = 'Error.'\n        zedlmsg = localrep 'is currently a Git repository and thus' ,\n           'not valid for cloning.' ,\n          'Change to an empty directory and try again.'\n        csr = 'LOCALREP'\n      end\n    end\n  end\n\n  if zedsmsg = '' then\n  if localrep /= '' then\n  if reponame /= '' then do\n      x = bpxwunix('ls -la' localrep'/'reponame,,so.,se.)\n      if so.0 > 0 then do\n        zedsmsg = 'Error.'\n        zedlmsg = localrep'/'reponame 'currently exists and is' ,\n           'not valid for cloning.'\n        csr = 'REPONAME'\n    end\n  end\n\n  if zedsmsg = '' then\n  if length(defruid) = 8 then do\n    CVT      = C2D(Storage(10,4))\n    TVT      = C2D(Storage(D2X(CVT + 156),4))   /* cvt + 9c */\n    TSVTUMXL = C2D(Storage(D2X(tvt  + 6),1))  /* tvt + 6 */\n    if tsvtumxl < 8 then do\n      zedsmsg = 'Error'\n      zedlmsg = defruid 'is 8 characters and this system does not' ,\n        'support 8 character TSO userids at this time.'\n      csr = 'DEFRUID'\n    end\n  end\n\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .MSG = ISRZ001\n    .CURSOR = &CSR\n if (&zedsmsg EQ &Z)\n  ver (&remote,nb)\n  ver (&localrep,nb)\n  ver (&readonly,list,Y)\n  ver (&pdshlq,nb,dsname)\n  ver (&defcpush,nb,list,Y,N)\n  ver (&defruid,dsname)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICDM": {"ttr": 849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x004\\x01\\x192\\x1f\\x01 #?\\x08\\x19\\x00&\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-08-20T08:19:34", "lines": 38, "newlines": 34, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  \u00dd type(output) intens(high) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+-\\-\\#zigtitle    +\\-\\\n%Command ===>_zcmd   \\ \\ %Scroll ===>_zgsr+\n+\n+The following members were not found in the z/OS PDS but were found in the\n+Git Repository (OMVS Directory). This happens when the members are deleted\n+from the z/OS PDS outside of ZIGI. The Git Repository will now be updated\n+to reflect the deletions.\n+\n+Use%R+to recovery any members that should not be deleted. Then press%F3+\n+to continue. Any members%not+recovered will be deleted.\n+\n+Dataset:\u00ddfulldsn\n+\n+S  Member                    +Selections:%B+Browse%E+Edit%R+Recover\n)Model\n@z+\u00dddmrow      $dmstate\n)Init\n &delconf = &z\n  .zvars = '(dsel)'\n  .cursor = &zcmd\n  .help = zigihcdm\n  &zgsr = CSR\n)Proc\n ver (&dsel,list,E,B,R)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICIMP": {"ttr": 735, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x02\\x00\\x01 \\x01\\x1f\\x01 \\x19/\\x03I\\x00(\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.11", "flags": 2, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-07-10T03:49:00", "lines": 40, "newlines": 13, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(input) caps(on) hilite(uscore) intens(low)\n)Body Window(58,4)\n+Enter a dataset to import Git Commit comments:\n+=>$comimprt                                             +\n+\n+Press%Enter+to continue or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Comment Import'\n  .cursor = comimprt\n .help = zigih230\n)Proc\n ver (&comimprt,nb,dsname)\n &resp = .resp\n  *REXX(* zerrsm zerrlm resp)\n  parse value '' with zerrsm zerrlm\n  zerrhm   = 'zigih00'\n  zerralrm = 'NO'\n  zerrtp   = 'NOTIFY'\n  x = sysdsn(comimprt)\n  if x /= 'OK' then do\n    zerrsm = 'Error.'\n    zerrlm = left(comimprt,76) x\n  end\n  if zerrsm = '' then\n  if pos('(',comimprt) = 0 then do\n    x = listdsi(comimprt)\n    if sysdsorg = 'PO' then do\n      zerrsm = 'Error.'\n      zerrlm = left(comimprt,76) 'is a PDS and a member name is required.'\n    end\n  end\n *Endrexx\n IF (&zerrsm NE &Z)\n     .msg = isrz003\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICOM": {"ttr": 675, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x11\\x02\\x00\\x01\\x196_\\x01 \\x18O\\x03P\\x005\\x00'\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@\"", "ispf": {"version": "01.17", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-07-02T03:50:00", "lines": 53, "newlines": 39, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(output) caps(off)\n } type(output) hilite(reverse) color(turq) caps(off)\n _ type(input) caps(off) hilite(uscore) intens(low)\n + type(text ) intens(low) skip(on)\n @ type(input) caps(on ) hilite(uscore) intens(low)\n)Body Expand(\\\\)\n+Git Commit+----------------------}zigtitle    +--------------------------------\n%Command ===>_zcmd       \\ \\ %Scroll ===>_ccsr+\n+ \\ \\ %F3  +\n%Commit Title:_msg1                                             +\n+Optional Tag:_tagid                                       +%Push+after:@z+(Y/N)\n+\n+Command:%Insert+or%Insert #+   +Line:%I+insert%I#+insert #%D+delete%D#+delete\n+\n%S  %Commit Message Text\n)Model\n@z +_cmsg                                                                      +\n)Init\n  .zvars = '(zpush zsel)'\n  &ccsr = 'CSR'\n  if (&MSG1 EQ &Z)\n     .cursor = msg1\n  if (&MSG1 NE &Z)\n     if (&cmsg EQ &Z)\n        .cursor = cmsg\n  if (&zpush EQ &Z)\n      &zpush = 'N'\n  .help = zigih230\n)Reinit\n  REFRESH(tagid)\n)Proc\n if (&zcmd EQ &Z)\n    if (&zsel EQ &Z)\n      ver (&msg1,nb)\n      ver (&zpush,list,Y,N,&Z)\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp)\n  if resp = 'END' then exit\n  zedsmsg = ''\n  if words(tagid) > 1 then do\n    zedsmsg = 'Error.'\n    zedlmsg = 'The Tag may not have blanks.'\n  end\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .cursor = TAGID\n    .msg = isrz001\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICOMC": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x02\\x00\\x01\\x192\\x7f\\x01 \\x16?\\x063\\x00,\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.21", "flags": 2, "createdate": "2019-11-23T00:00:00", "modifydate": "2020-06-11T06:33:00", "lines": 44, "newlines": 40, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(35,6)\n+\n+Enter Selection:_z          +\n+\n+\u00a8Only+    Filter:_fw             +\n+\u00a8Replace+ Replace the table\n         +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Extract Commands'\n .zvars = '(zcmd)'\n .cursor = zcmd\n &zcmd  = &z\n &only   = 'Only'\n &Replace = 'Replace'\n)Proc\n*REXX(* zcmd zsel fw zedsmsg zedlmsg)\n  zedsmsg = ''\n  if fw /= '' then zcmd = 'O' fw\n  if zcmd = 'O' then do\n     if fw = '' then do\n        zedsmsg = 'Error.'\n        zedlmsg = 'Only requires a filter.'\n        end\n  else zcmd = zcmd fw\n  end\n  Call ISPPRXVP 'T'\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .msg = isrz001\n)PNTS\n  Field(Replace) var(zcmd) val('R')\n  Field(only  ) var(zcmd) val('O')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICOMO": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x02\\x00\\x01\\x196_\\x01 \\x16?\\x06@\\x00#\\x000\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-11T06:40:00", "lines": 35, "newlines": 48, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(38,7)\n+\n+Enter Selection:_z +\n+\n+\u00a8Select+  (S)+Display the Commit Info\n+\u00a8Rollback+(R)+Rollback\n+\u00a8Extract+ (X)+Extract for Packaging\n          +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Extract Line Options'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &select   = 'Select'\n &Extract  = 'Extract'\n &Rollback = 'Rollback'\n)Proc\n ver (&zsel,list,S,X)\n)PNTS\n  Field(select )   var(zsel) val('S')\n  Field(Extract )  var(zsel) val('X')\n  Field(Rollback)  var(zsel) val('R')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICOMX": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x02\\x00\\x01\\x196_\\x01 \\x16?\\x06A\\x001\\x00+\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-11T06:41:00", "lines": 49, "newlines": 43, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Repository Extract+----\\-\\------#zigtitle     +-----\\-\\------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Commits to Review:_z   +(1 to 9999)\n+\n+Commands%Only+limit table%Refresh+table\n+Options:%S+Display%X+Extract%R+Rollback\n+\n+Sel Date/Time            Tag\n     Title\n+\n)Model\n_z+ $z                   $z\n    @z\n)Init\n  .ZVARS = '(crcnt zsel cdatetim ctag ctitle)'\n  &zgsr = CSR\n  .help = zigih2d0\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&crcnt,nb,range,1,9999)\n ver (&zsel,list,S,R,X)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGICRDS": {"ttr": 833, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00E\\x01\\x192\\x1f\\x01 \"\\x7f\\x16\\x16\\x00;\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-08-14T16:16:45", "lines": 59, "newlines": 34, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+-\\-\\#zigtitle    +\\-\\\n%Command ===>_zcmd   \\ \\ %Scroll ===>_zgsr+\n+\n+The following Datasets are about to be replaced. Use%F3+to cancel the\n+replacement. Press the%Enter+key with, or without changes, to proceed.\n+\n+HLQ:    $ckothlqx                +Ignore Qualifiers:    $z+\n+New HLQ:@newhlq                  +New Qualifiers Ignore:@z+\n+\n)Model\n$cfile\n)Init\n  .zvars = '(ckotqual iqn)'\n  &saveiqnr = &ckotqual\n  .cursor = &zcmd\n  .help = zigihcrd\n  &zgsr = 'CSR'\n  *REXX(* ckothlqx ckothlq)\n    if length(ckothlq) > 2 then\n    ckothlqx = left(ckothlq,length(ckothlq)-1) /* drop . */\n  *Endrexx\n)ReInit\n  Refresh(ckotqual iqn)\n)Proc\n&resp = .resp\n*Rexx(* resp saveiqnr ckotqual zedsmsg zedlmsg)\nzedlmsg = ''\nif resp = 'END' then exit\nif iqn = 0 then\n   if saveiqnr > 0 then do\n      iqn = saveiqnr\n      zedsmsg = ''\n      zedlmsg = 'The Iqnore Qualifier may not be changed to 0.'\n      end\nif saveiqnr = 0 then\n   if iqn > 0 then do\n      iqn = 0\n      zedsmsg = ''\n      zedlmsg = 'The Iqnore Qualifier was 0 and may NOT be changed.'\n      end\n*Endrexx\n if (&zedlmsg EQ &Z)\n   ver (&newhlq,dsname)\n   ver (&iqn,range,0,4)\n if (&zedlmsg NE &Z)\n    .msg = isrz001\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIDELC": {"ttr": 873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01 \\x00W\\x01\\x192\\x1f\\x01 #\\x8f\\x08$\\x00/\\x00\\x0b\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.32", "flags": 0, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-08-25T08:24:57", "lines": 47, "newlines": 11, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr\n $ type(output) caps(off)\n @ type(input ) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(53,8)\n+Repository:$zigirep\n+\n+Keep the OMVS files    @z+%Y+to keep, or%N+to delete\n+Keep the z/OS Datasets @z+%Y+to keep, or%N+to delete\n+\n+Confirm Removal from ZIGI@z+%Y+or%N+\n+\n      +Press%Enter+to continue or%F3+to cancel.\n)Init\n .zvars = '(delco delzd delcf)'\n &zwinttl = 'ZIGI Delete Confirmation'\n .help = zigihdel\n)Proc\n*REXX(* readonly zerrsm zerrlm zerrhm zerralrm zerrtp)\n  parse value '' with zerrsm zerrlm\n  if delcf = 'N' then do\n    delco = 'N'\n    delzd = 'N'\n  end\n  if delzd = 'N' then\n    if readonly = 1 then do\n    zerrlm = 'Repository is Read Only thus the z/OS' ,\n      'datasets may NOT be deleted. Change to Y to proceed.'\n    zerrhm   = 'zigih00'\n    zerralrm = 'NO'\n    zerrtp   = 'NOTIFY'\n    delzd = 'N'\n  end\n*ENDREXX\n if (&zerrlm NE &Z)\n     &delzd = N\n    .msg = isrz003\n    .cursor = delzd\n if (&zerrlm EQ &Z)\n   ver (&delco,nb,list,Y,N)\n   ver (&delzd,nb,list,Y,N)\n   ver (&delcf,nb,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIDSNA": {"ttr": 863, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00@\\x01\\x196_\\x01 #_\\x08)\\x00X\\x002\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-08-22T08:29:40", "lines": 88, "newlines": 50, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Add Datasets+--------------------#zigtitle    +--------------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Fixed Dataset Prefix:             @dsnapfx                               +\n+Ignore 1st n qualifiers in prefix:@z+(0 to 8)\n+\n+Enter a prefix to add datasets under that prefix to the repo via the list\n+below. Optionally change the number of qualifiers to ignore in the prefix\n+for the OMVS file name or directory.\n+\n+Command:%Find+\n+Line:%S+Add+%A+Add+%AB+Add binary+%B+Browse\n+\n%S   Dataset Name                                Volser  Status\n)Model\n@z +$z                                          $z      $z\n)Init\n .zvars = '(qualignr zsel dsna dsnvol dastat)'\n .help = zigih210\n &zgsr = CSR\n &saveignr = &qualignr\n if (&dsnapfx EQ &Z)\n    .CURSOR = DSNAPFX\n if (&qualignr EQ &Z)\n    .CURSOR = QUALIGNR\n if (&qualignr NE &Z)\n    .CURSOR = ZCMD\n)ReInit\n Refresh (qualignr)\n)Proc\n *REXX(* zedsmsg zedlmsg saveignr qualignr pfxw)\n   zedsmsg = ''\n   if saveignr = 0 then\n      if qualignr > 0 then do\n      zedsmsg = 'Error.'\n      zedlmsg = 'Ignore qualifiers was 0 and may not be changed.'\n      qualignr = 0\n      end\n   if zedsmsg = '' then do\n   pfx = words(dsnapfx)\n   tpfx = translate(dsnapfx,' ','.')\n   if qualignr > words(tpfx) then do\n      zedsmsg = 'Error.'\n      zedlmsg = 'Ignore qualifiers may not be larger than the number of' ,\n               'qualifiers in the Dataset Prefix - current value is' ,\n               qualignr 'and may not be greater than' words(tpfx)\n      end\n      end\n *ENDREXX\n if (&zedsmsg NE &Z)\n    .msg = isrz001\n    .cursor = qualignr\n if (&zedsmsg EQ &Z)\n    &row = &z\n    if (&ZCMD = &Z)\n        if (&ztdsels = 0000)\n           &row = .csrrow\n           if (&row \u00ac= &z)\n               if (&zsel = &z)\n                   &zsel = S\n        if (&ztdsels \u00ac= 0000)\n            &row = &z\n        if (&ZSEL \u00ac= &Z)\n          if (&Zsel = '=')\n              &Zsel = &osel\n        &osel = &zsel\n    if (&row = 0)\n        &zsel = &z\n    if (&pfx = 1)\n       ver (&dsnapfx,nb,dsname)\n    if (&zigisor EQ 'N')\n         ver (&qualignr,nb,range,1,8)\n    if (&zigisor EQ 'Y')\n         ver (&qualignr,nb,range,0,8)\n    ver (&zsel,list,S,B,A,AB)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIDSNB": {"ttr": 679, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x12\\x02\\x00\\x01\\x196_\\x01 \\x15\\x9f\\x08'\\x00/\\x00/\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.18", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 47, "newlines": 47, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left)\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Add Datasets+--------------------#zigtitle    +--------------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Fixed Dataset Prefix:             $dsnapfx                               +\n+Ignore 1st n qualifiers in prefix:$z+\n+\n+Command:%Find+\n+Line:%S+Add+%A+Add+%AB+Add binary+%B+Browse\n+\n%S   Dataset Name                                Volser  Status\n)Model\n@z +$z                                          $z      $z\n)Init\n .zvars = '(qualignr zsel dsna dsnvol dastat)'\n .help = zigih210\n &zgsr = CSR\n .CURSOR = ZCMD\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&zsel,list,S,B,A,AB)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIEDIT": {"ttr": 683, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x02\\x00\\x01\\x196_\\x01 \\x17\\x1f\\x13C\\x00\\xa1\\x00\\x85\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.14", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-19T13:43:00", "lines": 161, "newlines": 133, "modlines": 0, "user": "ZIGI30"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ZIGIENQK": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x18\\x9f\\x12\"\\x00!\\x00H\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.18", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-07T12:22:00", "lines": 33, "newlines": 72, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n @ type(output) intens(low) color(turq)\n } type(output) intens(low) color(blue)\n \u00a8 type(text) intens(low) color(blue)\n + type(text) intens(low) color(turq)\n { type(input) caps(off) hilite(uscore) intens(low)\n _ type( input) intens(low ) caps(on) just(left ) hilite(uscore)\n)Body Window(75,14) expand(\\\\)\n%Command ===>_zcmd\n+\n\u00a8These allocations will prevent a successful pull operation.\n\u00a8Free these allocations and then either Retry or Abort.\n+\n%Action ===>_z+   %R\u00a8Retry or %A\u00a8Abort\n+\n+QName     Job      Disp     Dataset\n\u00a8   Scope      Step      Global    System    Reserve\n%-------------------------------------------------------------------------\n)Model\n@zenqname @zenjob  @zendisp @zenrname\n   }zedscope  }zenstep  }zenglobl }zensyst  }zenresv\n)Init\n .zvars = '(enqact)'\n &xscr = 'CSR'\n &zwinttl = 'ZIGI Outstanding ENQs'\n .help = zigihenq\n)Proc\n ver (&enqact,nb,list,R,A)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIEXTQ": {"ttr": 43, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x16\\x00\\x17\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 22, "newlines": 23, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output)  caps(off)\n + type(text) skip(on) caps(off) intens(low)\n)Body Window(58,6)\n+z/OS HLQ: $tagxhlq                      +\n+OMVS Path:$tagxpath                                     +\n+\n+Confirm the above:_z+(Y or N)\n+\n+Press%Enter+to proceed, or%F3+to cancel.\n)Init\n &zwinttl = ' TagList-Extract Confirmation'\n .zvars = '(sans)'\n .help = zigih2i1\n)Proc\n ver (&sans,nb,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIFDBK": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n@\\x00\\x01 \\x01\\x1f\\x01 \\x18o\\x074\\x00\\x14\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.10", "flags": 64, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-07-04T07:34:00", "lines": 20, "newlines": 13, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n)Body Window(70,9)\n+If you would like to provide the ZIGI developers with feedback copy\n+the following URL and paste it into your browser.\n+\n                    %https://zigi.rocks/feedback\n+\n+To report bugs copy the following URL and paste it into your browser.\n+\n+                   %https://zigi.rocks/issues\n+\n)Init\n &zwinttl = 'ZIGI Feedback'\n)Proc\n.help = zigih000\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIFEND": {"ttr": 45, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x1a\\x00\\x19\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 26, "newlines": 25, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on) just(asis)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(63,8)\n+\n    Finalizing the flow will merge the current status into\n      the feature branch. This will be done in one commit\n       (squashed). The commit message will be prefilled\n         with the commit messages you used. The local\n                 work-branch will be deleted.\n\n                    +Or press%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Finish Current zigiflow.'\n)Proc\n)PNTS\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIFGO": {"ttr": 47, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x13\\x0f\\x10!\\x00-\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-05-09T10:21:00", "lines": 45, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(64,15)\n+This will start a new 'zigiflow'.\n+Two branches will be created :%zigiflow-<flowname>+and\n%<flowname>+.\n+\n+You can create new flows at any time, just remember they\n+will all be based off of the 'master'-branch.\n+\n+Once you're ready, end the flow and all commits from work\n+will be squashed into the feature-branch.\n+\n+\n+Flowname: _flowname                           + (no spaces)\n+          (the flowname is used as branch name)\n+\n              +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Starting new flow on repository'\n)Proc\n ver (&flowname,NB)\n &resp = .resp\n *Rexx(* zedsmsg zedlmsg resp)\n parse value '' with null zedsmsg zedlmsg\n if resp = 'END' then exit\n flowname = strip(flowname)\n if pos(' ',flowname) > 0 then do\n    zedsmsg = 'Invalid.'\n    zedlmsg = flowname 'may not have blanks. Try again.'\n    end\n *EndRexx\n if (&zedsmsg NE &Z)\n     .msg = isrz001\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIFIND": {"ttr": 49, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x12\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 18, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(41,5)\n+Command:_zcmd\n+\n+Enter the Find String:_find\n+\n+Press%Enter+to Continue, or%F3+to cancel\n)Init\n &zwinttl = 'ZIGI Find Prompt'\n)Proc\n ver (&find,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIFLOW": {"ttr": 51, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00(\\x00#\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 35, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00dd type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(35,7)\n+Enter Selection:_z+\n+\n  \u00ddz+ Start New Flow\n  \u00ddz+ Finish Current Flow\n  \u00ddz+ Select Unfinished Flow\n+\n   +Or%F3+to cancel.\n)Init\n &l1 = '1'\n &l2 = '2'\n &l3 = '3'\n &zwinttl = 'ZIGI Flow Menu'\n .zvars = '(zcmd l1 l2 l3)'\n &zcmd  = &z\n .cursor = zcmd\n .help = zigih2k0\n)Proc\n*REXX(*)\n if zcmd = 1 then zcmd = 'FLOWGO'\n if zcmd = 2 then zcmd = 'FLOWEND'\n if zcmd = 3 then zcmd = 'FLOWSEL'\n*ENDREXX\n)PNTS\n FIELD(L1    )  VAR(ZCMD) VAL('FLOWGO')\n FIELD(L2    )  VAR(ZCMD) VAL('FLOWEND')\n FIELD(L3    )  VAR(ZCMD) VAL('FLOWSEL')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIFSEL": {"ttr": 685, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04@\\x00\\x01 \\x05\\x9f\\x01 \\x15\\x9f\\x08'\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.04", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+-\\-\\#zigtitle    +\\-\\\n%Command ===>_zcmd   \\ \\ %Scroll ===>_zgsr+\n+Current Repository : $zigirep                         \\ \\%F3  +\n+Current HLQ        : $pdshlq\n+Current Branch     : $branch\n%\n+Type%S+to work on selected flow\n+Press%F3+to exit\n+\n+\n+\n+\n+S  Flow                                        Status\n)Model\n@z+$z                                         +$z\n)Init\n  .zvars = '(zsel bname brstatus)'\n  &newb=''\n  .cursor = &zcmd\n  .help = zigih220\n  &zgsr = CSR\n)Proc\n ver (&zsel,list,S)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGCMD": {"ttr": 687, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x02\\x00\\x01\\x196_\\x01 \\x19/\\x03Q\\x004\\x00/\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.07", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-07-10T03:51:00", "lines": 52, "newlines": 47, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n _ type( input) intens(low ) just(left ) hilite(uscore)\n @ type(input ) caps(off) hilite(uscore) intens(low)\n $ type(input ) caps(on ) hilite(uscore) intens(low)\n \u00dd type(output) caps(off) intens(low) skip(on)\n # type(output) hilite(reverse) color(turq) caps(off)\n + type(text) intens(low) skip(on)\n)Body Expand(\\\\) Width(&zscreenw)\n+Git Commands+-----\\-\\------------#zigtitle   +\\-\\------------------------------\n+Command ===>_zcmd                             \\ \\+Scroll ===>_gscr+\n  \\ \\ %F3  +\n+Git repo dir:\u00ddlocaldir\n+\n+Enter any Git command (without git):    Browse/View:$z+(B or V)\n%git@gitcmd\n\n\n+\n+Hint: Use the GitHelp command to review the available Git commands and syntax.\n+\n+S+Command history (%D+delete%S+Select for edit and use%X+eXecute now)\n)Model\n$z+\u00ddgitcmde              \\ \\ \u00ddgs\n)Init\n .zvars = '(gopt gsel)'\n .help = zigih240\n &gscr = CSR\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&gsel = &z)\n                &gsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&gsel \u00ac= &Z)\n       if (&gsel = '=')\n           &gsel = &osel\n     &osel = &gsel\n if (&row = 0)\n     &gsel = &z\n ver (&gopt,list,B,V)\n ver (&gsel,list,D,S,X)\n)Field\n Field(gitcmde) ind(gs,'<>') len(255)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGENI": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x02\\x00\\x01 \\x16?\\x01 \\x16o\\x12#\\x00\\x16\\x00\\x16\\x00\\x00\\xe9\\xc4\\xd6\\xd3\\xc4@@@@@'", "ispf": {"version": "01.01", "flags": 2, "createdate": "2020-06-11T00:00:00", "modifydate": "2020-06-14T12:23:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "ZDOLD"}, "text": "ZIGI Managed Repository Generalized Installation Tool\n\nThe zginstall.rex is the ZIGI generalized installation tool and it is\nused by this repository, when the ZIGI ISPF dialog is not used, to\ninstall the repositories z/OS datasets from the Git OMVS repository.\n\nTo use zginstall.rex:\n\n    1. Enter OMVS\n    2. At the OMVS prompt change to the OMVS directory where the Git\n       repository is located\n    3. Enter at the OMVS prompt ./zginstall.rex\n    4. Enter when prompted the z/OS dataset high level qualifier to be\n       used for the z/OS datasets to be created from this Git repository\n    5. When zginstall.rex completes all of the z/OS datasets that are\n       part of the Git repository will have been copied into newly\n       allocated z/OS datasets.\n    6. Next return to TSO/ISPF and execute the ZGSTAT command that is\n       documented by the zginstall.rex installation report. This will\n       apply the ISPF statistics to all of the partitioned datasets,\n       something that ZIGI supports because neither Git or OMVS\n       understand what ISPF statistics are.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGIT": {"ttr": 689, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0e\\x02\\x00\\x01\\x192\\x9f\\x01 \\x19/\\x03R\\x00'\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@\"", "ispf": {"version": "01.14", "flags": 2, "createdate": "2019-11-25T00:00:00", "modifydate": "2020-07-10T03:52:00", "lines": 39, "newlines": 36, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n @ type(input ) caps(off) hilite(uscore) intens(low)\n \u00dd type(input ) caps(on ) hilite(uscore) intens(low)\n _ type( input) intens(low ) just(left ) hilite(uscore)\n # type(output) hilite(reverse) color(turq) caps(off)\n ! type(output) color(red) caps(off)\n)Body Expand(\\\\)\n+-\\-\\#zigtitle    +\\-\\\n%Command ===>_zcmd\n+\n%     GIT ENVIRONMENT SETTINGS NOT FOUND IN DEFAULT LOCATIONS\n+\n+\n+\n+ Location of env-file: @gitenv                                             +\n+\n+\n+ Your Git installation should have an env-file located somewhere on your\n+ system. This file contains things like:\n+\n+ export PATH=/zdo/rocket/bin:$PATH\n+ export MANPATH=$MANPATH:/zdo/rocket/man\n+ export PERL5LIB=/zdo/rocket/lib/perl5:$PERL5LIB\n+ export LIBPATH=/zdo/rocket/lib/perl5/5.24.0/os390/CORE:$LIBPATH\n+\n+\n+\n+\n+\n                  +Press%Enter+to continue, or%F3+to cancel\n)Init\n .help = zigihint\n)Proc\n  ver (&gitenv,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGPL": {"ttr": 61, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01 \\x02\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2020-01-27T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %License+\n+\n+      ZIGI - the z/OS ISPF Git Interface\n+      Copyright (C) 2020 - Henri Kuiper and Lionel Dyck\n+\n+      This program is free software: you can redistribute it and/or\n+      modify it under the terms of the GNU General Public License as\n+      published by the Free Software Foundation, either version 3 of\n+      the License, or (at your option) any later version.\n+\n+      This program is distributed in the hope that it will be useful,\n+      but WITHOUT ANY WARRANTY; without even the implied warranty of\n+      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+      General Public License for more details.\n+\n+      You should have received a copy of the GNU General Public License\n+      along with this program. If not, see <https://www.gnu.org/licenses/>.\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigihint\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGPRM": {"ttr": 63, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\rB\\x00\\x01\\x192\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00\"\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.13", "flags": 66, "createdate": "2019-11-23T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 34, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body  window(36,7)\n+\n+Enter Selection:_z+\n+\n+\u00a8Browse+(B)+Browse the dataset/file\n+\u00a8Edit+  (E)+Edit the dataset/file\n+\u00a8View+  (V)+View the dataset/file\n+\n)Init\n &zwinttl = 'ZIGI Grep Selection Options'\n .zvars = '(zsel)'\n &zsel  = &z\n &edit   = 'Edit'\n &browse = 'Browse'\n &view   = 'View'\n)Proc\n ver (&zsel,list,B,E,V)\n)PNTS\n  Field(browse) var(zsel) val('B')\n  Field(edit  ) var(zsel) val('E')\n  Field(view  ) var(zsel) val('V')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGRDS": {"ttr": 691, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07@\\x00\\x01\\x196_\\x01 \\x15\\x9f\\x08'\\x00,\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.07", "flags": 64, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 44, "newlines": 40, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Grep Datasets/Files+-------------#zigtitle    +--------------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Grep Command:@grepstr\n+\n+Options:%S+Edit%E+Edit%B+Browse%V+View\n+\n+Sel      Status    $gds                                        +Count\n+\n)Model\n_z+      $z         $z                                          $z\n)Init\n  .ZVARS = '(zsel gstat gdsn gcount)'\n  &zgsr = CSR\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&zsel,list,S,B,E,V,/)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIGREP": {"ttr": 693, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x02\\x00\\x01\\x196_\\x01 \\x15\\x9f\\x08\\'\\x00&\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 38, "newlines": 34, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input) caps(off) hilite(uscore) intens(low)\n @ type(input) caps(on ) hilite(uscore) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\)\n+Grep Command Entry+--------------#zigtitle    +--------------------------------\n%Command ===>_zcmd                                                            +\n+\n+\n+Git grep: _grepstr                                                   +\n+\n+Dataset/File or Report View:@z+(D or R)\n+\n+Note: The grep is NOT case sensitive.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\\ \\Press%F3+to exit grep prompt \\ \\\n)Init\n .zvars = '(grepopt)'\n)Proc\n ver (&grepstr,nb)\n ver (&grepopt,nb,list,D,R)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHABT": {"ttr": 801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x003\\x01 \\x05\\x9f\\x01 !\\x9f\\x13\\x18\\x00\\x19\\x00\\x18\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-08-06T13:18:33", "lines": 25, "newlines": 24, "modlines": 0, "user": "ZIGI30"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) color(white)\n    hilite(uscore)\n)Body Window(60,11) Expand(\\\\)\n%About -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- About\n+\n%ZIGI+is the z/OS ISPF Git Interface designed to provide the\n+z/OS community with an easy to use interface to the Git\n+source code management system (SCM) to manage\n+traditional%z/OS datasets+and%OMVS files.\n+\n+Principle Authors:%Henri Kuiper+and%Lionel B. Dyck+\n+\n+ \\ \\+Website:%https://zigi.rocks\\ \\\n+ \\ \\+YouTube:%https://zigi.rocks/video\\ \\%F3\n)Init\n)PROC\n &zcont = zigihabt\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHAU": {"ttr": 225, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00-\\x00,\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 45, "newlines": 44, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(@+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) color(white)\n  } area(SCRL) Extend(ON)\n)Body Expand(\\\\)\n@Tutorial -\\-\\~The z ISPF Git Interface (zigi)@\\-\\- Tutorial\n+Command ===>_ZCMD                    \\ \\+Scroll ===>_zgsr\n+\n                        @ZIGI Authors and Contributors+\n+\n}help -----------------------------------------------------------------------}\n)Area Help\n@Authors+\n+\n@Henri Kuiper+of zDevOps (www.zdevops.com, www.zigi.rocks and\n+github.com/wizardofzos)\n+\n+Henri is the instigator and initial developer of zigi. Without his epiphany\n+there wouldn't be a ZIGI as you see it. He provided the insights, logic, and\n+code for 99% of the Git processing.\n+\n@Lionel B. Dyck+0f+21st Century Software (www.21stcenturysoftware.com)\n+\n+Lionel nudged Henri to get the project rolling beyond Henri's initial efforts\n+and is the impetus for the ISPF elements and other features. Lionel is\n+a prolific tool creator who has been blessed with management allowing him to\n+share his creations, which can be found at www.lbdsoftware.com.\n+\n@Special Thanks To our Contributors:\n+\n  +Davide Girardi      +Erik Janssen    +Kadima           +William Schoen\n  +David Crayford      +Jim Taylor      +Lee Bochicchio   +Kate Domenichella\n\n+\n)Init\n .cursor = &zcmd\n &zgsr = CSR\n)PROC\n &ZUP = ZIGIHINT\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHCDM": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15@\\x00\\x01\\x193?\\x01 \\x16\\x7f\\x04S\\x00$\\x006\\x00\\x00\\xe2\\xd3\\xc2\\xc4@@@@@@'", "ispf": {"version": "01.21", "flags": 64, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-06-15T04:53:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "SLBD"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                         %Delete Member Confirmation\n+\n+A Partitioned Dataset Member is missing, probably deleted, while the OMVS\n+copy of the member still exists.\n+\n+You have two options:\n     %1+Enter%STOP+to prevent the deletions\n     %2+Press%F3+to proceed with the deletes\n+\n+The row selection options:\n    %B+Browse the OMVS version of the member\n    %E+Edit the OMVS version of the member\n    %R+Recover the member by copying from OMVS back to the PDS\n+\n+\n        +\"Overconfidence is the most dangerous form of carelessness.\"\n            +\" -- Clone Wars quote\"\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigihcdm\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIHCRD": {"ttr": 829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x009\\x01\\x193?\\x01 \"\\x7f\\x14\\x08\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-08-14T14:08:39", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI301"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                       %Dataset Replacement Confirmation\n+\n+The datasets displayed in the table have been identified as currently existing\n+and will be completely replaced when the%Enter+key is pressed.\n+\n+Optionally change the High Level Qualifier and/or the number of qualifier\n+to be ignored. Then press the%Enter+key to proceed.\n+\n+\n+\n+\n+\n+\n                    \"success isn't final, failure isn't fatal\"\n                      -- Sir Winston Churchill\n+\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigihcrd\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIHDEL": {"ttr": 229, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12B\\x00\\x01\\x192\\x1f\\x01 \\x11\\x8f\\x06\\t\\x00\\x1b\\x00\\x0b\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.18", "flags": 66, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 27, "newlines": 11, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n @ type(input ) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(48,14)\n+\n+Deleting a repository from ZIGI management will\n+remove the repo from ZIGI and delete the .git,\n+.gitattributes, and .ZIGI from the repo-folder\n+in OMVS. It will not+delete the OMVS files or\n+the z/OS datasets.\n+\n+Deleting the OMVS files will delete the OMVS\n+directory and%all+OMVS files in the repository.\n+\n+Deleting the z/OS datasets will delete%all+the\n+z/OS datasets used in the repository.\n+\n                +Press%F3+to continue.\n)Init\n &zwinttl = 'ZIGI Delete Confirmation Tutorial'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHENQ": {"ttr": 787, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t@\\x00\\x01 \\x02_\\x01 \\x18\\x9f\\x12(\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.09", "flags": 64, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-07-07T12:28:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI30"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %ENQ Display\n+\n+When this table display appears that means that the listed datasets are\n+currently allocated and may cause a problem when ZIGI copies the updates in\n+the Git Repository from the OMVS filesystem to one, or more, of the listed\n+z/OS datasets.\n+\n+The solution is to do an ISPF Swap to a new screen and release the dataset\n+allocations.%Hint+use TSO ISRDDN to find them and use the F (free)\n+selection.\n+\n+Or%A+(abort) the update and try again later.\n+\n+\n+           \"Success isn't Final, Failure isn't Fatal\"\n+             -- Sir Winston Churchill\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih100\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIHHST": {"ttr": 713, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x02\\x00\\x01\\x193?\\x01  \\x0f\\x08A\\x00#\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.25", "flags": 2, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-07-18T08:41:00", "lines": 35, "newlines": 54, "modlines": 0, "user": "ZIGI30"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %History+\n+\n%H+row selection will display a list of all commits for the selected element.\n+\n%Find+will find the specified string in the subject and reposition the table.\n+\n+Select%S+the specific historical version to View from the table of commits.\n+Or select using%C+to browse the commit record.%R+can be used to recover the\n+historical version to a new, or existing dataset (OMVS files are not\n+supported for recovery at this time).\n+\n+When in%View+any ISPF Edit command may be used:\n+\n+   %Compare+to compare with the current active element\n+   %Create+to create a new dataset, member, or file from the current element\n+\n+Because it is%View+no permanent changes may be made in it.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHINT": {"ttr": 879, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x01 \\x05\\x9f\\x01 #\\x9f\\x062\\x00R\\x00L\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-08-26T06:32:00", "lines": 82, "newlines": 76, "modlines": 0, "user": "ZIGI301"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) color(white)\n    hilite(uscore)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n%ZIGI+is the z/OS ISPF Git Interface designed to provide the z/OS community\n+with an easy-to-use interface to the Git source code management (SCM)\n+system to manage traditional%z/OS datasets+and%OMVS files.\n+\n+This tutorial covers the following topics, presented in sequence or by\n+selecting a number, or selected using point and shoot:\n+\n  \u00ddz+Introduction (Getting Started)  \u00ddz+Convert non-ZIGI Repo\n  \u00ddz+Local Repositories Panel        \u00ddz+Common Scenarios  (tbd)\n  \u00ddz+Current Repository Panel        \u00ddz+ZIGI Repository Layout\n  \u00ddz+PDS Member List Panel           \u00ddz+Registering SSH Keys\n  \u00ddz+ZG stand-alone Command          \u00ddz+ZIGI Authors and Contributing *\n  \u00ddz+Read Only Repositories          \u00ddz+GPL License\n+\n+ \u00ddz+Feedback and Issues\n+\n%Note:+the panels with command menus have an option of%O+for a pop-up menu\n+\n           +Press the%Enter+key to begin your ZIGI tutorial journey.\n)Init\n  .ZVARS = '(L0 L6 L1 L7 L2 L8 L3 L9 L4 LA L5 LG LFI)'\n   &L0 = '0'\n   &L1 = '1'\n   &L2 = '2'\n   &L3 = '3'\n   &L4 = '4'\n   &L5 = '5'\n   &L6 = '6'\n   &L7 = '7'\n   &L8 = '8'\n   &L9 = '9'\n   &LA = 'A'\n   &LG = 'L'\n   &LFI = 'F'\n .cursor = &zcmd\n &ztut = 'HINT'\n vput (ztut)\n)PROC\n &ZSEL = TRANS( &ZCMD\n           0,zigih000   /* Introduction (Getting Started) */\n           1,zigih100   /* Primary Menu                   */\n           2,zigih200   /* Repository Panel               */\n           3,zigih300   /* Member List Panel              */\n           4,zigihs00   /* ZG stand-alone command         */\n           5,zigih400   /* Read Only Repos   (tbd)        */\n           6,zigih800   /* non-ZIGI conversion            */\n           7,zigih500   /* Common Scenarios  (tbd)        */\n           8,zigih600   /* Repository Layout              */\n           9,zigih700   /* SSH Key Registration           */\n           A,*zigihau   /* ZIGI Authors and Contributing  */\n           L,*zigigpl   /* GPL License                    */\n           F,zigifdbk   /* Feedback and Issues            */\n           *,'?'\n           )\n)PNTS\n Field(l0) var(zcmd) val(0)\n Field(l1) var(zcmd) val(1)\n Field(l2) var(zcmd) val(2)\n Field(l3) var(zcmd) val(3)\n Field(l4) var(zcmd) val(4)\n Field(l5) var(zcmd) val(5)\n Field(l6) var(zcmd) val(6)\n Field(l7) var(zcmd) val(7)\n Field(l8) var(zcmd) val(8)\n Field(l9) var(zcmd) val(9)\n Field(lA) var(zcmd) val(A)\n Field(lL) var(zcmd) val(L)\n Field(lFI) var(zcmd) val(F)\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHIST": {"ttr": 695, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x19\\x9f\\x058\\x006\\x004\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.07", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-17T05:38:00", "lines": 54, "newlines": 52, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n | TYPE(AB)           /* Action bar                */\n < TYPE(ABSL) GE(ON)  /* Action bar separator line */\n)ABC DESC(Help)\n PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')\n PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')\n PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')\n PDC DESC('Help')  ACTION RUN(TUTOR) PARM('zigihhst')\n)ABCINIT\n  .ZVARS = HELPX\n)Body  Expand(\\\\)\n+| Help +\n<-----------\\-\\--------------------------------+\n+-\\-\\#zigtitle    +\\-\\\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Dataset/File:@delement\n+\n+Sel Date/Time of Commit  Subject\n+\n)Model\n_z+ $z                   $z\n)Init\n  .ZVARS = '(zsel hdate hsubject)'\n  &zgsr = CSR\n  .help = zigihhst\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&zsel,list,R,S,C,/)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHMSG": {"ttr": 237, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01\\x193O\\x01 \\x11\\x8f\\x06\\t\\x00#\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 35, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Messages+\n+\n+The message browse display uses standard ISPF Browse with a customzied\n+Browse panel. All ISPF Browse commands are available for use.\n+\n+This panel is used for many purposes within ZIGI as it is generalized.\n+\n+\n%\n+\n+\n+\n+\n+\n          +\"Just try to be the best you can be; never cease trying to\n          +be the best you can be. That's in your power.\"   John Wooden\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIHRLN": {"ttr": 239, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\x12\\x005\\x001\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:12:00", "lines": 53, "newlines": 49, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n { type(input ) caps(off) hilite(uscore)\n $ type(input ) caps(on ) hilite(uscore)\n @ type(output) caps(off)\n ! type(text)  color(yellow)\n  } area(SCRL) Extend(ON)\n)Body Expand(\\\\)\n}ZIGI -------------------------------------------------------------------------}\n)Area ZIGI\n+\n+\n+                                             .zZ.     Zz\n+                        ZZZZZZZZ           ZZZZZZZ\n+            ZZZZZZZZZZZZZZZZZZZZZZ   ZZ   ZZZ         zZ\n+   ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ      ZZZ    .zZZ   ZZ\n+ ZZZZZZZZZZZZZZZZZZZZZZ    ZZZZZZZ   ZZ   ZZZ  ..zZZZ  Zz\nzZZZZZZZZZZZZZZZZZ,       ZZZZZZZZZ   ZZZ  ZzZ      ZZ  ZZ         ZZZZZZZ\nZZZZZZZZZZZZ             ZZZZZZZZ     ZZZ   ZZZZZZZZZZZ      ZZZZZZZZZZZ\nZZZZZZZg               ZZZZZZZZ       ZZZZ    ZZZZZZ      ZZZZZZZZZg\n+                     ZZZZZZZZ        ZZZ            ZZZZZZZZZ\n+                    ZZZZZZZ              zZZZZZZZZZZZZZZ\n+                  ZZZZZZZ           ZZZZZZZZZZZZZZ\n+                .ZZZZZZZ      ZZZZZZZZZZZZZZ\n+               ZZZZZZZZZZZZZZZZZZZZZZ\n+               ZZZZZZZZZZZZZZZZZ\n+              ZZZZZZZZZZZZ                         !F3+to exit\n+             ZZZZZZZZZg\n+            ZZZZZZig\n+           ZZZZZZi\n+\n+\n+\n+This is ZIGI@ver . Made with love by Henri Kuiper and Lionel B. Dyck.\n+If you like to contribute to zigi, head on over to github at\n!https://github.com/wizardofzos/zigi+and fork the repository to start adding\n+your features to zigi. To keep up to date, follow ZIGI on twitter%@ispfgit\n+\n+The Mainframe is alive and kicking.\n+And we now have an ISPF-native Git interface too.\n+Version 1 Release 0 was been released at GSE-UK on November 7 2019\n+\n%https://zigi.rocks\n+Henri & Lionel\n+2019 and onwards\n+\n)Init\n  &zcont = zigihint\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHSNP": {"ttr": 243, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %Snapshot+\n+\n%Snapshot+is intended to be used when a project milestone is reached, such as a\n+when the current branch is ready to release (patch, release, version, escrow).\n+\n+Initiating the Snapshot requires:\n+   %*+a tag (see githelp for tag)\n+   %*+a never used z/OS HLQ (e.g. HLQ.PRODUCT.VRM where HLQ.PRODUCT exists but\n+      the VRM qualifier does not).\n+   %*+an OMVS path the does not exist (e.g. /products/product/vrm where\n+      /products/product/ exists but vrm does not)  %<+or blank to bypass%>+\n+\n+The z/OS datasets are created from the git repository and the OMVS path\n+is created (mkdir) and copied (cp) from the git repository.\n+\n+A gitlog.txt file with git log information for the tag level is placed\n+into the new path for reference as the Snapshot is not accessible with git.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2j0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIHS00": {"ttr": 241, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01 \\t_\\x01 \\x11\\x8f\\x06\\t\\x00&\\x00\\x18\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2020-04-04T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 38, "newlines": 24, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n { type(output) hilite(reverse) color(turq) caps(off)\n _ type(input) caps(off) hilite(uscore) intens(low)\n + type(text ) intens(low) skip(on)\n @ type(input) caps(on ) hilite(uscore) intens(low)\n)Body Expand(\\\\)\n+Tutorial\\-\\{zigtitle                           +-\\-\\Tutorial\n%Command ===>_zcmd                                                             +\n+\n                      %ZG - Stand-Alone ZIGI Interface\n+\n%ZG+is designed to be used from an ISPF Enhanced Member List (9 character\n+line selection field) as a fast path interface to zigi.\n+\n+It may only be used of datasets that are part of a ZIGI managed repository.\n+\n+One 1st use in a dataset the user is prompted to select the ZIGI managed\n+repository. At that point the selected dataset is verified that it is part\n+of the repository and that information is then saved to bypass the prompt\n+in the future. The member is then copied into the OMVS file system within\n+the repository.\n+\n+Three options are provided at this point:\n+  %A  +- Git Add the member to the repository\n+  %AC +- Git Add and Commit the member\n+  %ACP+- Git Add, Commit, and Push the member\n+\n+      +Press%Enter+to continue reading about the ZIGI repository layout\n)Init\n &zigtitle = '(ZG - Stand-Alone ZIGI Interface)'\n)Proc\n &zcont = zigih600\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH000": {"ttr": 69, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\x10\\x00'\\x00#\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@\"", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:10:00", "lines": 39, "newlines": 35, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) color(white)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                            %Introduction to ZIGI+\n+\n%Getting Started:+\n+\n%ZIGI+is designed to make working with%Git+very easy for the ISPF developer, but\n+you should still have a basic understanding of%Git+and how your organization\n+uses it. While you can use it solely with open source tools found on GitHub\n+and other%Git+sites, the most cost effective use is to use it as a free\n+distributed version control system (VCS) for source code management (SCM).\n+\n+The%ZIGI+Local Repositories Panel is where you find a table of all%Git+\n+repositories that you have cloned or created. It is also the place where you\n+can easily Clone an existing repository or Create a new repository.\n+\n+\n+ \"Though a program be but three lines long, someday it will have to be\n+  maintained\" -- The Tao of programming\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n &ztut = '000'\n vput (ztut)\n)PROC\n &ZUP = ZIGIHINT\n &zcont = zigih004\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH004": {"ttr": 71, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\x10\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:10:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %Basic ZIGI Usage\n+\n%ZIGI+is designed provide an easy to use ISPF interface to local and\n+remote Git repositories. It is%not+designed to be a full application\n+development environment - there are better tools for that available in native\n+ISPF, open source ISPF tools, and vendor tools.\n+\n%ZIGI+is; however designed to make it easy to be the easy interface to Git for\n+source code version control for your application development team.\n+\n+It is recommended that each team working with%ZIGI+develop a plan on how to\n+use it. This is no different from the plan on how teams are to use any SCM.\n+\n%Note+each developer should work with their own local repository and then\n+commit and push updates to the remote repository.\n+\n  +\"By failing to prepare, you are preparing to fail.\" --  Benjamin Franklin\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH005\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH005": {"ttr": 73, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\x10\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:10:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %Starting ZIGI\n+\n+Starting%ZIGI+is easy. If the sample startup stub has been installed then all\n+that is required is to issue the command%TSO ZIGI+from any ISPF panel.\n+\n+If the bypass option on the splash panel has been enabled (using Y) and you\n+wish to see the splash panel again, then the command would be %TSO ZIGI S+to\n%start zigi.\n+\n+If you know the name of a specific repository you want to start with then\n+the command would be%TSO ZIGI repository-name+and ZIGI opens that\n+repository and bypasses the Local Repository table.\n+\n+\n+\n+   \"Don't hurry your code. Make sure it works well and is well designed.\n     Don't worry about timing\"  -- Linus Torvalds\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH010\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH010": {"ttr": 75, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                      %What is a ZIGI Managed Repository\n+\n+A Git repository that can be managed by ZIGI has the following characteristics:\n+\n   %*+There must be a .ZIGI directory in the root directory of the\n+     repository.\n+  %*+There must be a dsn file in the .ZIGI directory that has the basic\n+     DCB information for the managed z/OS datasets.\n+  %*+A directory for each z/OS partitioned dataset in which each of the\n+     PDS members have been stored, without any extension.\n+     Members with a $,# or @ in them should be renamed according to 'cp -M'.\n+     Both the directory name and the member file names must be in uppercase.\n+  %*+The easy way to do this is to use ZIGI to create the repository, then\n+     add the datasets to it. The created repository can then be connected to\n+     a remote repository and pushed.\n+\n+\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH020\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH020": {"ttr": 77, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                        %Keyboard and Mouse Navigation\n+\n+The ZIGI application has been designed to support the traditional\n+ISPF Panel navigation by entering the desired commands and table row\n+selections. It has also been designed to support%point-and-shoot+fields\n+for use by those more comfortable with that approach. All point-and-shoot\n+fields are underlined for easy identification.\n+\n+Enabling%Tab to Point-and-Shoot fields+in the ISPF Settings (option 0 on\n+the ISPF Primary Menu) makes these fields easier to use with both the\n+keyboard and mouse.\n+\n+Use the keyboard Tab key, or newline key, to move to the point-and-shoot fields\n+and then just press the%Enter+key to execute that command or table row\n+selection.\n+\n+\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &zcont = zigih021\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH021": {"ttr": 79, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                          %Menus and the Action Bar\n+\n+Using point-and-shoot capabilities works well with zigi. Double-click anywhere\n+outside the table and a pop-up menu appears with point-and-shoot selections.\n+Double-click within the table and a popup appears for row selection options for\n+that specific row.\n+\n+The F3 below the Scroll field may be used as a point-and-shoot field to invoke\n+the F3 (End) command.\n+\n+The action bar is also available for command selections.\n+\n+\n+\n+ \"If no mistake you have made, losing you are. A different game\n+     you should play.\"    -- Master Yoda\n+\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &zcont = zigih030\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH030": {"ttr": 81, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+`)\n  ` type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(}})\n%Tutorial -}-}~The z ISPF Git Interface (zigi)%}-}- Tutorial\n%Selection ===>`ZCMD                                                          +\n+\n                             %Special Characters+\n+\n+Special characters in z/OS datasets and member names are escaped for\n+OMVS processes using the \\ escape character.\n+\n+The characters that are challenges are the%@#$+charactes:\n+\n                  OMVS   z/OS\n                 %  _+<->%@\n                 %  .+<->%#\n                 %  -+<->%$\n+\n+\n+\n+\n     \"The best competition I have is against myself to become better.\"\n        -- John Wooden\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &zcont = zigih100\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH100": {"ttr": 83, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\tB\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00Q\\x00H\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 81, "newlines": 72, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n    hilite(uscore)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Local Repositories+\n+\n%Commands available+(select one for more information or press%Enter+to see all)\n+\n  \u00ddClone+  Make a local copy of a remote repository\n  \u00ddConfig+ Review/Update your name and e-mail for%Git+\n  \u00ddCreate+ Create a new local repository\n  \u00ddFind+   Find/RFind a string in either the repository name or the prefix\n  \u00ddGithelp+Navigate the Git help output via ISPF panels\n  \u00ddSelect+ Select a repository by name\n  \u00ddSOrt+   Sort the table\n  \u00ddSSH+    Review your SSH public key\n+\n+Use%O+to display a command popup selection menu if the menu has been hidden.\n+\n+\n+               \"Nothing will work unless you do.\" -- John Wooden\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &clone   = 'Clone'\n &create  = 'Create'\n &ssh     = 'SSH'\n &config  = 'Config'\n &githelp = 'GitHelp'\n &find    = 'Find'\n &sort    = 'Sort'\n &select  = 'Select'\n &ztut = '100'\n vput (ztut)\n)PROC\n &zup = zigihint\n*REXX(* zcmd zsel)\n  Select\n    When abbrev('CLONE',zcmd,2) = 1 then zcmd = 1\n    When abbrev('CREATE',zcmd,2) = 1 then zcmd = 2\n    When abbrev('SSH',zcmd,2) = 1 then zcmd = 3\n    When abbrev('CONFIG',zcmd,2) = 1 then zcmd = 4\n    When abbrev('GITHELP',zcmd,2) = 1 then zcmd = 5\n    When abbrev('FIND',zcmd,2) = 1 then zcmd = 6\n    When abbrev('SELECT',zcmd,2) = 1 then zcmd = 7\n    When abbrev('SORT',zcmd,2) = 1 then zcmd = 8\n    Otherwise nop\n  end\n*Endrexx\n &ZSEL = TRANS( &ZCMD\n           0,zigih101    /*  Row Selections      */\n           1,zigih110    /*  CLONE               */\n           2,zigih120    /*  CREATE              */\n           3,zigih130    /*  SSH                 */\n           4,zigih140    /*  CONFIG              */\n           5,zigih160    /*  GITHELP             */\n           6,zigih170    /*  Find                */\n           7,zigih180    /*  Select              */\n           8,zigih190    /*  Sort                */\n           *,'?'\n           )\n)PNTS\n Field(clone)   var(zcmd) val('1')\n Field(create)  var(zcmd) val('2')\n Field(ssh   )  var(zcmd) val('3')\n Field(config)  var(zcmd) val('4')\n Field(githelp) var(zcmd) val('5')\n Field(find   ) var(zcmd) val('6')\n Field(select ) var(zcmd) val('7')\n Field(sort   ) var(zcmd) val('8')\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH101": {"ttr": 85, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Local Repositories+\n+\n%Row selections:\n+\n  %S+Select a repository to open and work with\n+    - The repository is opened with a list of managed z/OS datasets\n+      and/or OMVS files.\n  %I+Info on the repository\n  %V+View the OMVS file system for the local repository\n+    - Open the ISPF 3.17 (UDList) to allow viewing of the local repository\n  %D+Delete the repository on the local file system with prompts for:\n     - Removal of OMVS files\n+    - Deletion of z/OS datasets\n+ %/+Display a popup for row selection options.\n+\n+    \"Some things are so unexpected that no one is prepared for them.\"\n+       -- Leo Rosten\n+\n+Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zcont = zigih110\n)PROC\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH110": {"ttr": 87, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Clone+\n+\n%Clone+as a command clones a%Remote Repository+and then creates a set of\n+z/OS Datasets based on the%files+and%folders+from the remote repository\n+(optionally prefixed with your%PREFIX+qualifier). For the remote repository,\n+the 'clone with ssh' url should be used. This requires access to the remote\n+repository via public key.\n+\n%Optional:+is the name of a specific branch to clone. The default is master.\n+\n%Local Repository+is the location where the%Clone+creates a directory or\n+where%Create+initializes the Git repo.\n+\n%PREFIX+is a set of high-level qualifiers (0,n) that are prefixed\n+to the Datasets from the remote repository. This%does not+change the names\n+of the files and folders in OMVS.\n+\n%Note+each PDS is allocated as a PDSE with the user-configured generations.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih111\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH111": {"ttr": 89, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Clone+\n+\n+Notes:\n+\n%*+Your SSH Key%must+have been added to an account with access to the repo.\n%*+Clone fails if the local repo already exists.\n%*+A successful clone results in a copy of the repo in the local directory\n%*+All 'z/OS-datasets' from this repo is copied to real z/OS datasets\n+  (prefixed if a PREFIX has been added).\n%*+This%overwrites+any members if the dataset already exists.\n+\n+The Clone operation creates the instance of the repository. It\n+not only checks out the working copy, but it also mirrors the complete\n+repository. Users can perform many operations with this local repository.\n+The only time networking gets involved is when the repository instances are\n+being synchronized.\n+\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih120\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH120": {"ttr": 815, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x18\\x01 \\x02_\\x01 \"\\x7f\\x11W\\x00%\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-08-14T11:57:18", "lines": 37, "newlines": 33, "modlines": 0, "user": "ZIGI301"}, "text": ")attr default(%+_)\n  @ type(input ) caps(off) hilite(uscore)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %Create+\n+\n%Create+executes a 'git init' in the specified path creating a Local\n+Repository. A basic .gitattributes is committed to this repository.\n+\n%Name+is the name for the new local repository to be created. It is\n+created as a directory within the%Local Repository+defined next.\n+\n%Local Repository+is the location where the%Clone+creates a directory or\n+where%Create+initializes the Git repo.\n+\n%Read Only Repository+is a repository where the z/OS datasets are never\n+updated. All updates to the z/OS datasets are copied and managed by ZIGI.\n+\n%Notes:%*+Don't use spaces in the name field.\n       %*+Repository is named (and stored) in OMVS as /localdirectory/name\n       %*+Fails if /localdirectory/name is present - Override with%Y+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &ZCONT = ZIGIH121\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH121": {"ttr": 93, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01\\x193O\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                         %Local Directory Select Panel\n%Commands:\n%  CANCEL+Cancel and return to main panel\n%  CD    +Change to directory      (e.g. ..$z+/etc/)\n%  F     +Find word in file name   (e.g. F xxx)\n%  L     +Locate a file            (e.g. L .profile)\n%  MKDIR +Make a new directory     (e.g. MKDIR new)\n%  SU    +Change to/from SuperUser mode\n%\n%Selection options:\n%  B    -+Browse the file\n%  I    -+Display the file info\n%  L    -+List the selected directories files (use%F3+to move up)\n%  S    -+Select the file or directory and return for processing\n+\n  +Only files with a%T+(type) of%blank+are allowed with%B+or%S+\n  +Only files with a%T+(type) of%d+works with%L+or%S+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &ZCONT = ZIGIH122\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH122": {"ttr": 699, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07@\\x00\\x01\\x193O\\x01 \\x19?\\x04\\x18\\x00+\\x00'\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@\"", "ispf": {"version": "01.07", "flags": 64, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-07-11T04:18:00", "lines": 43, "newlines": 39, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  % type(text) intens(high) skip(on) color(&omschigh)\n  + type(text) intens(low) skip(on) color(&omsclow)\n  $ type(output) intens(high) caps(off) just(left )\n  @ type(output) hilite(reverse) color(turq) caps(off)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n)Body  Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n%\n%CD+Examples within ZIGIOSEL\n%\n%  cd$z                  +Change to users home directory\n%  cd ..                 +Change to the next higher directory\n%  cd ./xyz              +Change to users subdirectory xyz\n%  cd$z                  +Change to users subdirectory xyz\n%  cd /                  +Change to the root directory\n%  cd /usr/lpp/          +Change to /usr/lpp/ directory\n%\n+The%CD+command remembers the prior directories during the session\n+so that using%F3+moves back up the directory 'chain'. Enter%CANCEL+\n+to immediately return.\n%\n%\n%\n+\n+\n+\n+\n\\ \\Press%Enter+to continue or%F3+to return to the dialog\\ \\\n)Init\n   .cursor = zcmd\n   .zvars = '(til tilx)'\n   &til  = '~'\n   &tilx = '~/'\n)Proc\n   &zcont = zigih130\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH130": {"ttr": 97, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\x10\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.21", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:10:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %SSH+\n+\n%SSH+displays your personal Public SSH Key location and key contents. The\n+key contents may be copied and pasted into your account security settings\n+at the remote%Git+repository that you are be working with.\n%\n+This is your personal key that was created by you prior to using the%ZIGI+\n+application, or during your first execution of the%ZIGI+application.\n%\n+\n+\n+\n+\n+      \"Never interrupt someone doing what you said couldn't be done.\"\n+             -- Amelia Earhart\n+\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &ZCONT = ZIGIH140\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH140": {"ttr": 99, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01 B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.32", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %Config+\n+\n+The%Config+command displays, and then allows changing key information used\n+by ZIGI and Git.\n+\n+Both user.name and user.email are required. These are used by Git commit.\n+\n+Also required is the number of generations to be enabled for the Partitioned\n+Datasets. Anything from 0 to the system limit (default=0).\n+\n+The Point-and-Shoot defaults control what happens if a double-click or Enter\n+occurs outside the table or on a table row.%P+displays the Options popup\n+if outside the table or the Row Options popup if within the table.%S+\n+does nothing if outside the table or default to select if within the table.\n+\n+If you plan to use file extensions for PDS member names then set the value\n+to N, otherwise set to Y to bypass the prompt when adding datasets.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &ZCONT = ZIGIH141\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH141": {"ttr": 101, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1eB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.30", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Member Generations\n+\n+The use of PDSE Member Generations can provide additional recovery\n+capabilities as it allows access to previous versions, up to the generation\n+limit defined for the PDSE. However, to access a generation requires the use\n+of a generations-enabled application.\n+\n+Notes:\n+  %*+Generations may not be accessed from JCL or Dynamic Allocation, or\n+     from the majority of IBM and ISV ISPF applications.\n+  %*+Member Removes (delete) and Renames should be done within a\n+     generation-enabled application if the member has generations.\n+     Otherwise orphan members will remain as only the base is deleted or\n+     renamed, but they are hidden to all but generation-enabled tools.\n+\n+\"Programming isn't about what you know; it's about what you can figure out.\"\n+      -- Chris Pine\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &ZCONT = ZIGIH142\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH142": {"ttr": 103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01 B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00'\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@\"", "ispf": {"version": "01.32", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 39, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Member Generations\n+\n+To utilize PDS Member Generations use one of the following applications:\n+\n+   - PDSEGEN (free - www.lbdsoftware.com)\n+   - PGLite  (free - www.cbttape.org File 182)\n+   - Review  (free - www.cbttape.org File 134)\n+   - Data Set Commander (IBM)\n+   - EzyEdit (Broadcom)\n+   - File Manager (IBM)\n+   - File-Aid (Compuware)\n+   - PDSMAN  (Broadcom)\n+   - SimpList (MacKinney Systems)\n+   - More each year\n+\n+ \"Like car accidents, most hardware problems are due to driver error.\"\n+    -- unknown\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n if (&setcont EQ &Z)\n     &ZCONT = ZIGIH143\n if (&setcont NE &Z)\n     &ZCONT = ZIGIH140\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH143": {"ttr": 105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03B\\x00\\x01 \\x08\\x8f\\x01 \\x11\\x8f\\x06\\t\\x00'\\x00'\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@\"", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-03-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                         %PDS Member File Extensions\n+\n+PDS member file extensions may be defined with only one extension allowed\n+per PDS. The extension is appended to the member name when the member\n+is copied to the repository's OMVS filesystem. The member name and extension\n+are in lower case.\n+\n+This may be helpful if there are git users who are not using z/OS ISPF but\n+are using a git client on their workstation. Many workstation editors and\n+GUI git clients recognize a file based on its file extension.\n+\n+By default ZIGI does not append any file extension when a PDS member is\n+copied to the OMVS filesystem for Git management.\n+\n+\n+\n+            \"A good beginning makes a good end\" -- Louis L'Amour\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n if (&setcont EQ &Z)\n     &ZCONT = ZIGIH160\n if (&setcont NE &Z)\n     &ZCONT = ZIGIH140\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH160": {"ttr": 107, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00(\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.38", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %GITHELP+\n+\n%GITHELP+displays all the available%Git+commands, along with other%Git+pages\n+with more information. This helps the Git novice, and%Git+guru to better use\n%Git+and%zigi.\n%\n%Syntax: GITHelp optional-git-command +(e.g. gith commit)\n%\n%Commands:+\n+   %Only+removes all rows that do not have the provided string:\n+         e.g.  o git\n+   %Replace+is used after Only to rebuild the table\n+\n%Selection:+\n+   %S+Display the manpage for the selected row.\n+   (may also put cursor on the row and press enter or double click)\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n if (&ztut = 100)\n     &zcont = ZIGIH170\n if (&ztut = 200)\n     &zcont = ZIGIH250\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH170": {"ttr": 109, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00(\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                     %FIND+\n+\n%Find+and%Repeat Find+search for the provided string in all fields in\n+the row. The table is then positioned so that row is the top row.\n+\n+The find string is case insensitive.\n+\n+Syntax:%Find+string\n+    or %F5+for repeat find\n+\n+\n%\n+\n+\n+  \"The whole point of getting things done is knowing what to leave undone.\"\n+       - Oswald Chambers\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n if (&ztut = 100)\n     &zcont = ZIGIH180\n if (&ztut = 200)\n     &zcont = ZIGIH2K0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH180": {"ttr": 111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01'B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@\"", "ispf": {"version": "01.39", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                     %SELECT+\n+\n%Select+as a command selects the repository passed as the parameter.\n+\n+\n%Syntax:+Select repository-name\n+    or:+S repository-name\n+\n+Note: the repository-name search is case insensitive, thus a search for\n+      abc or AbC or ABC all selects a repository named abc.\n+\n%\n+\n+\n              +\"The greatest teacher, failure is.\"  -- Master Yoda\n+\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n &zcont = ZIGIH190\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH190": {"ttr": 113, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07B\\x00\\x01 \\x04\\x0f\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 66, "createdate": "2020-02-09T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                     %SORT+\n+\n%Sort+as a command sorts the fields in the Local Repository table:\n+\n+Syntax:% Sort field1 order1 field2 order2\n%\n%Fields:+ Repository (R) or Prefix (P) or Last (L) or Category (C) or Date (D)\n+\n%Order:+  Ascending (A) or  Descending (D)\n+\n+Note:the last sort order is remembered and used the next time ZIGI is started.\n+\n+\n+\n+              \"Programming isn't about what you know;\n+                     it's about what you can figure out.\"\n+                                - Chris Pine\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n &zcont = ZIGIH300\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2A0": {"ttr": 159, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.17", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Push+\n+\n%Push+updates the remote repository with all the locally committed updates.\n+\n+That means that only updates processed by the Commit command are pushed\n+to the remote repository.\n+\n%Git+only pushes the discrete updates, which saves time and bandwidth.\n+\n%\n+\n+\n           +\"Don't measure yourself by what you have accomplished,\n            +but by what you should have accomplished with your\n            +ability.\" -- John Wooden\n+\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2b0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2B0": {"ttr": 161, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Replace+\n+\n%Replace+recreates ALL of the z/OS datasets in the local repository using\n+the files in the OMVS filesystem.\n+\n+ALL updates that have NOT been committed and pushed are lost.\n+\n%\n+\n%\n+\n+\n+\n                  +\"It's what you learn after you know it all\n                  +that counts.\" -- John Wooden\n+\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2c0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2C0": {"ttr": 707, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10@\\x00\\x01\\x193?\\x01 \\x16?\\x06$\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.16", "flags": 64, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-06-11T06:24:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI210"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Remote+\n+\n%Remote+adds a remote repository to the current local repository.\n+\n+This executes a%git remote add origin+followed by a\n%git push -u origin master+.\n+\n%Make sure the remote repository exists and you're authorized to\n+push to master.\n%\n%Note:+this is best done on a%brand-new+repository.\n+\n%\n+\n+\n                  \"The best confidence builder is experience.\"\n+                      -- Clone Wars (Rookies)\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2e0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2D0": {"ttr": 709, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x02\\x00\\x01 \\x02_\\x01 \\x18\\x9f\\x087\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.08", "flags": 2, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-07-07T08:37:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI30"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Extract\n+\n%Extract+ALL changes to a specific Commit point into a new branch or to new\n+datasets for packaging.\n+\n+The command brings up a list of the last 1000 commits to select from. The\n+number of commits to review can be changed on the prompting panel.\n+\n+Commands:%Only+will limit the table to the specified string in the title\n+         %Replace+will return the table to all entries\n+\n+Options:%S+Display the details of the selected commit.\n+        %X+Extract the elements changed in the selected commits to new\n+           datasets for packaging with ability to select multiple and all\n+           the commits/tags between the oldest and newest will be extracted.\n+        %R+Rollback creates a new branch from the commit level.\n%\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih170\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH2E0": {"ttr": 711, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x02\\x00\\x01\\x193?\\x01 \\x16o\\x11I\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf9@@@@'", "ispf": {"version": "01.20", "flags": 2, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-06-14T11:49:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI29"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %SET+\n+\n%SET+configures default values for the current respository:\n+\n%*+Configure the default push option on a Commit.\n+\n%*+Configure a userid to be set for all PDS Members that have been Added and\n+  are ready to be Committed. The userid is changed prior to the Commit\n+  process and updates the ISPF statistics file that is part of the repository.\n+\n+The repository's z/OS dataset HLQ may be changed with the requirement that\n+the number of qualifiers remain the same as the previous HLQ.\n+\n+Turn off, or on, prompting for file extensions when adding a partitioned\n+datasets.\n+\n+Add the zginstall.rex generic installation script to the repository.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigihsnp\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH2F0": {"ttr": 169, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00(\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.24", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Status+\n+\n%Status+displays the current%git status+information. This reports\n+the status of the local repository, any files that are new (untracked), any\n+files that have been modified but not added to the index (not ready to be\n+Committed), and files that have been added and are ready to be Committed.\n+\n%\n+\n%\n+\n+\n%\n+\n                +\"Do not let what you cannot do interfere with\n                +what you can do.\" -- John Wooden\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n if (&ztut EQ '200')\n    &zcont = ZIGIH2H0\n if (&ztut EQ '300')\n    &zcont = ZIGIH340\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2G0": {"ttr": 171, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %View+\n+\n%View+will opens up the ISPF OMVS (USS) Data List (UDLIST) application\n+(ISPF 3.17) on the current local repository.\n+\n+\n+\n%\n+\n%\n+\n+\n%\n+\n+\n    +\"Failure is not fatal, but failure to change might be.\" -- John Wooden\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2h0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2H0": {"ttr": 173, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1aB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.26", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Tag+\n+\n%Tag+prompts for a tag identifier and an optional tag description\n+and then applies the tag to the current repository. The tag is also\n+pushed to the remote repository.\n+\n+Tag assigns a meaningful name with a specific version in the repository.\n+Tags are very similar to branches, but the difference is that tags are\n+immutable. This means that a tag is a branch, which nobody intends to modify.\n+Once a tag is created for a particular commit, even if you create a new\n+commit, it is not be updated. Usually, developers create tags for\n+product releases.\n+\n+\n+\n+ \"There is no elevator to success, you have to take the stairs.\" -- Zig Ziglar\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2i0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2I0": {"ttr": 175, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %TagList\n+\n%TagList+is similar to Rollback. It displays a list of all defined tags,\n+including for annotated tags the date,, time, and description.\n+\n+Commands:   %Only+to filter the table\n             %Replace+to rebuild the table\n+\n+Row options:%S+View the full tag information\n+            %C+Create a new branch based on the tag level\n+            %X+Extract just the delta elements from the select tag level\n+               to a new HLQ and directory\n%\n+The create option prompts for a new branch name before proceeding.\n+\n+\n           \"Nothing worth having comes easy.\" -- Theodore Roosevelt\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2i1\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2I1": {"ttr": 747, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07@\\x00\\x01 \\x05\\x9f\\x01 \\x16?\\x07\\x07\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-11T07:07:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI210"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                %eXtract\n+\n%eXtract+will prompt for a high-level-qualifier (HLQ) and a new OMVS directory\n+to copy all of the z/OS and OMVS elements that were updated by the selected\n+Tag or Commit.\n+\n+The OMVS directory may be blank to bypass extracting the OMVS files.\n+\n+This can be useful for creating an APAR or PTF with just the updated elements.\n+\n+Note: The copy is%not+Git managed.\n+\n+Multiple commits/tags may be selected at one time.\n+\n+\n               \"The most effective way of doing it, is to do it.\"\n                  -- Amelia Earhart\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih300\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH2J0": {"ttr": 179, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %STASH+and%STASHL+\n+\n%Shash+saves (push) your current git workspace and restores the workspace\n+to the last commit level. This allows you to quickly switch what you're working\n+on and work on something else without forcing a commit.\n+\n+Stash asks for a short description since you may have multiple stashes\n+with your project.\n+\n+Use the command%STASHL+to list all active stashes with the following options:\n+\n   %Branch +Create a new branch from stash\n   %Diff   +Show the diff's along with the stash summary\n   %Pop    +Restore a stash - see the next Tutorial page for more info on%pop+\n   %Remove +Remove (Drop) the stash stack\n   %Show   +Show stash summary\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2j1\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH2J1": {"ttr": 181, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00#\\x00#\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %STASH+and%STASHL+\n+\n+On the Stash List display, the%Clear+command removes%all+stashes.\n+\n%Shash Pop+restores the saved stash and removes it from the stash stack.\n+\n+Pop may%ONLY+be used on a clean git workspace. That means that when you do\n+a Status, the report should be clean. If there are any datasets/files\n+that are listed then the following commands clean up your workspace:\n+\n+  %*+Add all untracked datasets/files (command ADDALL)\n+  %*+Commit the added changes (command Commit)\n+or\n+  %*+Do a new Stash - then retry Pop\n+\n+At this time, Stash Apply is not supported directly by ZIGI but you can use\n+the Git Command dialog to issue it if desired.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2f0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH2K0": {"ttr": 183, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %ZIGIFLOW+\n+\n+The%Zigi Flow+feature assists with making updates to repositories.\n+The general use case for using ZIGI flow is as follows:\n+\n+  %*+Start a new ZIGI flow (FLOWGO or via Action Bar)\n+  %*+Make all your changes, and then commit (as often as you like)\n+  %*+Finish your ZIGI flow (FLOWEND or via Action Bar)\n+\n %FLOWGO +Creates a new branch based on%master+named zigiflow-%your-flow-name.\n         +You can do this whenever your workingspace is 'clean'.\n         +(it also creates an identical branch named%your-flow-name+)\n %FLOWEND+Squashes all commits from zigiflow-%your-flow-name+into the +\n         %your-flow-name+branch. And prepopulates a commit panel.\n %FLOWSEL+Enables you to select another flow to work on (efixes?)\n+\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih240\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH200": {"ttr": 701, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05@\\x00\\x01 \\x05\\x9f\\x01 \\x16?\\x06\"\\x00\\x9c\\x00\\x97\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-11T06:22:00", "lines": 156, "newlines": 151, "modlines": 0, "user": "ZIGI210"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n    hilite(uscore)\n  { type(text) color(yellow) intens(low)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Current Repository\n+\n%Commands available+(select one more information or press%Enter+to see all):\n+\n\u00ddAdd   + Add dataset{*   \u00ddGithelp+Git Help          \u00ddRow+     Options\n\u00ddAddAll+ Add all to Git  \u00ddGitLog+ Show git log      \u00ddSet+     Set Defaults\n\u00ddBr    + Change Branch{* \u00ddGrep+   Find Strings      \u00ddSnapshot+Escrow\n\u00ddCheck+  Check z/OS DSNs \u00ddMerge+  Merge Branches{*  \u00ddStash+   Stash Save\n\u00ddCommit+ Record Changes  \u00ddNetwork+Network Report    \u00ddStashL+  Stash List\n\u00ddExtract+Package{*       \u00ddPull+   Pull from origin  \u00ddStatus+  Git Status\n\u00ddFind+   Find in table   \u00ddPush+   Push to origin    \u00ddTag+     Git Tag\n\u00ddFlow+   ZIGI Flow       \u00ddReplace+Replace Datasets{*\u00ddTagList+ List Tags\n\u00ddGitCMD +Git Commands    \u00ddRemote+ Add remote        \u00ddView+    OMVS Dir\n+\n{*+not supported within subdirectories.\n+\n+Use%O+to display a popup for commands if the menu has been hidden.\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &Add     = 'AddDsn'\n &AddAll  = 'AddAll'\n &Br      = 'Branch'\n &Check   = 'Check'\n &Commit  = 'Commit'\n &Find    = 'Find'\n &Flow    = 'Flow'\n &Gitcmd  = 'GitCmd'\n &Githelp = 'Githelp'\n &GitLog  = 'Gitlog'\n &Grep    = 'Grep'\n &Merge   = 'Merge'\n &Network = 'Network'\n &Pull    = 'Pull'\n &Push    = 'Push'\n &Replace = 'Replace'\n &Remote  = 'Remote'\n &Extract  = 'Extract'\n &Snapshot  = 'SnapShot'\n &Row     = 'Row'\n &Set     = 'Set'\n &Stash   = 'Stash'\n &StashL  = 'StashL'\n &Status  = 'Status'\n &Tag     = 'Tag'\n &TagList = 'TagList'\n &View    = 'View'\n &ztut = '200'\n vput (ztut)\n)PROC\n*REXX(* zcmd zsel)\n  Select\n    When abbrev('ROW',zcmd,3)     = 1 then zcmd = 0\n    When abbrev('ADD',zcmd,2)     = 1 then zcmd = 1\n    When abbrev('ADDALL',zcmd,4)  = 1 then zcmd = 2\n    When abbrev('BRANCH',zcmd,2)  = 1 then zcmd = 3\n    When abbrev('CHECK',zcmd,2)   = 1 then zcmd = 4\n    When abbrev('COMMIT',zcmd,2)  = 1 then zcmd = 5\n    When abbrev('Extract',zcmd,2) = 1 then zcmd = 6\n    When abbrev('FIND',zcmd,2)    = 1 then zcmd = 7\n    When abbrev('FLOW',zcmd,2)    = 1 then zcmd = 8\n    When abbrev('GITCMD',zcmd,4)  = 1 then zcmd = 9\n    When abbrev('GITHELP',zcmd,4) = 1 then zcmd = 10\n    When abbrev('GITLOG',zcmd,4)  = 1 then zcmd = 11\n    When abbrev('GREP',zcmd,2)    = 1 then zcmd = 12\n    When abbrev('MERGE',zcmd,2)   = 1 then zcmd = 13\n    When abbrev('NETWORK',zcmd,2) = 1 then zcmd = 14\n    When abbrev('PULL',zcmd,3)    = 1 then zcmd = 15\n    When abbrev('PUSH',zcmd,3)    = 1 then zcmd = 16\n    When abbrev('REPLACE',zcmd,3) = 1 then zcmd = 17\n    When abbrev('REMOTE',zcmd,3)  = 1 then zcmd = 18\n    When abbrev('SET',zcmd,2)     = 1 then zcmd = 19\n    When abbrev('SNAPSHOT',zcmd,2) = 1 then zcmd = 20\n    When abbrev('STASH',zcmd,2)   = 1 then zcmd =21\n    When abbrev('STASHL',zcmd,2)  = 1 then zcmd = 21\n    When abbrev('STATUS',zcmd,2)  = 1 then zcmd = 22\n    When abbrev('VIEW',zcmd,1)    = 1 then zcmd = 23\n    When abbrev('TAG',zcmd,1)    = 1  then zcmd = 24\n    When abbrev('TAGLIST',zcmd,4)  = 1 then zcmd = 25\n    Otherwise nop\n  end\n*Endrexx\n &ZSEL = TRANS( &ZCMD\n           0,zigih201  /* Row Select     */\n           1,zigih210  /* ADDDSN         */\n           2,zigih218  /* ADDALL         */\n           3,zigih220  /* BRANCH         */\n           4,zigih225  /* CHECK          */\n           5,zigih230  /* COMMIT         */\n           6,zigih2D0  /* Extract        */\n           7,zigih170  /* FIND           */\n           8,zigih2k0  /* FLOW           */\n           9,zigih240  /* GITCMD         */\n          10,zigih160  /* GITHELP        */\n          11,zigih250  /* GITLOG         */\n          12,zigih260  /* GREP           */\n          13,zigih270  /* MERGE          */\n          14,zigih280  /* NETWORK        */\n          15,zigih290  /* PULL           */\n          16,zigih2A0  /* PUSH           */\n          17,zigih2B0  /* Replace        */\n          18,zigih2C0  /* REMOTE         */\n          19,zigih2E0  /* SET            */\n          20,zigihsnp  /* Snapshot       */\n          21,zigih2j0  /* Stash/Stashl   */\n          22,zigih2F0  /* STATUS         */\n          23,zigih2G0  /* VIEW           */\n          24,zigih2H0  /* Tag            */\n          25,zigih2I0  /* TagList        */\n           *,'?'\n           )\n)PNTS\n FIELD(ROW   )  VAR(ZCMD)  VAL('0')\n FIELD(ADD   )  VAR(ZCMD)  VAL('1')\n FIELD(ADDALL)  VAR(ZCMD)  VAL('2')\n FIELD(BR    )  VAR(ZCMD)  VAL('3')\n FIELD(CHECK )  VAR(ZCMD)  VAL('4')\n FIELD(COMMIT)  VAR(ZCMD)  VAL('5')\n FIELD(EXTRACT)  VAR(ZCMD) VAL('6')\n FIELD(FIND  )  VAR(ZCMD)  VAL('7')\n FIELD(FLOW  )  VAR(ZCMD)  VAL('8')\n FIELD(GITCMD)  VAR(ZCMD)  VAL('9')\n FIELD(GITHELP) VAR(ZCMD)  VAL('10')\n FIELD(GITLOG)  VAR(ZCMD)  VAL('11')\n FIELD(GREP  )  VAR(ZCMD)  VAL('12')\n FIELD(MERGE)   VAR(ZCMD)  VAL('13')\n FIELD(NETWORK) VAR(ZCMD)  VAL('14')\n FIELD(PULL  )  VAR(ZCMD)  VAL('15')\n FIELD(PUSH  )  VAR(ZCMD)  VAL('16')\n FIELD(REPLACE) VAR(ZCMD)  VAL('17')\n FIELD(REMOTE)  VAR(ZCMD)  VAL('18')\n FIELD(SET   )  VAR(ZCMD)  VAL('19')\n FIELD(SNAPSHOT) VAR(ZCMD) VAL('20')\n FIELD(STASH )  VAR(ZCMD)  VAL('21')\n FIELD(STASHL)  VAR(ZCMD)  VAL('21')\n FIELD(STATUS)  VAR(ZCMD)  VAL('22')\n FIELD(TAG   )  VAR(ZCMD)  VAL('23')\n FIELD(TAGLIST) VAR(ZCMD)  VAL('24')\n FIELD(VIEW  )  VAR(ZCMD)  VAL('25')\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH201": {"ttr": 117, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.38", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                              %Row Selections\n+\n  %A+Add the dataset/file for Commit\n+    - Inform Git that this dataset/file is to be updated or added to the repo\n  %B+Browse the dataset or file%*+\n  %D+Diff the dataset or file (not directory or PDS)\n  %H+History to view a previous version of the selected dataset or file\n+    - For a PDS the member must be selected\n  %RM+Remove the dataset/file from the repository and from Git management\n+     - Deletes both z/OS datasets and OMVS files\n  %RN+Rename the dataset/file\n  %S+Edit the dataset or file%*+\n  %U+Undo a non-Committed change\n  %V+View the dataset or file%*+\n  %/+Display a popup selection menu\n+\n  %*+If the selection is a directory then convert%B%S%V+to display files.\n+\n+Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zcont = zigih210\n)PROC\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH210": {"ttr": 865, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\x14\\x01\\x193?\\x01 #_\\x08B\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-08-22T08:42:14", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI301"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                    %AddDsn+\n+\n%AddDsn+is used to add z/OS datasets to the repository.\n+\n+When a dataset is added, a copy of it is made to the OMVS filesystem\n+where the local repository is located. If the dataset is a PDS, then the ISPF\n+statistics are collected and stored in the .ZIGI location. A%git add+is\n+performed for the dataset and the ISPF statistics file, making them ready to\n+be committed.\n+\n+The Add Panel prompts for two values (see the next tutorial page for #2):\n+\n%Fixed Dataset Prefix+is used to generate a list of z/OS datasets under\n+the provided prefix, or prefixes, from which to select datasets to add\n+to the repository.\n+\n+\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih211\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH211": {"ttr": 867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x08\\x01\\x193O\\x01 #_\\x08F\\x00&\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-08-22T08:46:08", "lines": 38, "newlines": 46, "modlines": 0, "user": "ZIGI301"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                 %AddDsn+\n+\n%Ignore 1st n qualifiers in prefix+defines how many qualifiers are ignored\n+when generating the OMVS file names, or directory names, of the z/OS datasets\n+in the repository.\n+\n+For example, a prefix of GITUSER.DEV with an ignore value of 2, will defines a\n+dataset with a name of GITUSER.DEV.BOGUS.COBOL in the repository as\n+BOGUS.COBOL.  This is very useful as other users are cloning the\n+repository and they do not want to have the file names with some other HLQ.\n+\n+Command:%FIND+to find a string in any dataset name and position the table.\n+\n+Line selection options:%S+Add+%A+Add+%AB+Add binary+%B+Browse\n+\n+\n+      The most effective way of doing it, is to do it.\n+                   -- Amelia Earhart\n+\n          +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih212\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH212": {"ttr": 123, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10B\\x00\\x01\\x193O\\x01 \\x12\\x8f\\x07U\\x00%\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-05-07T07:55:00", "lines": 37, "newlines": 46, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                %AddDsn+\n+\n+Adding a dataset to the current repository requires the following\n+considerations:\n+\n+ %*+All datasets must be under the same High-Level Qualifier (HLQ)\n+ %*+Datasets with RECFM=U will be added as -X (executable)\n+ %*+Partitioned datasets (PDS) may contain a mix of text and binary\n+    - use the SA line command to selectively add members in binary\n+\n+Enter a valid HLQ and press Enter to view the datasets available under\n+that HLQ. Then select the individual datasets to add to the repository.\n+\n+If the dataset does not match the above criteria, then it is rejected.\n+\n+The Ignore n qualifiers value is used to remove the 1st n qualifiers from\n+the HLQ (prefix) to define the OMVS file name or directory.\n\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih213\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH213": {"ttr": 125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11B\\x00\\x01\\x193O\\x01 \\x12\\x9f\\x07H\\x00%\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.17", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-05-08T07:48:00", "lines": 37, "newlines": 46, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                %AddDsn+\n+\n+If there are binary members in the partitioned dataset along with text\n+members, use the %A+option to add the entire PDS to Git. Then, from the\n+Current Repository menu, select the PDS and in the PDS Member display use\n+the%AB+line selection to add the member in binary format.\n+\n+The members selected as binary are copied in binary format to the\n+OMVS filesystem, they are entered into the .gitattributes file with a\n+binary designation, and they are tagged in OMVS as binary files.\n+\n+Datasets with RECFM=U are Load Libraries and will be added using (A or AB)\n+as type X (executable) elements using -I to retain Aliases.\n+\n+\n            +  \"When your work speaks for itself, don't interrupt.\"\n+                     -- Henry J. Kaiser\n\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih214\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH214": {"ttr": 127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11B\\x00\\x01\\x193O\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.17", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 46, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                %AddDsn+\n+\n+Adding an OMVS file or directory requires the following considerations:\n+\n+ %*+The OMVS file or directory must be copied into the ZIGI managed +\n+    repository directory.\n+ %*+File names that are uppercase in the repository root are considered\n+    z/OS datasets and are copied to z/OS upon a Replace or Clone.\n  %*+If the files are not to be copied to z/OS the file, or directory,\n+    names must be mixed or lower case.\n  %*+After the copy, use ZIGI to add the now un-tracked file, or directory,\n+    to Git management.\n+\n+\n          +  \"It's the little details that are vital.\n          +   Little things make big things happen.\"  -- John Wooden\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih215\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH215": {"ttr": 129, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0fB\\x00\\x01\\x193O\\x01 \\x11\\x8f\\x06\\x10\\x00%\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.15", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-04-27T06:10:00", "lines": 37, "newlines": 46, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                 %Add+\n+\n+Sample ZIGI managed Git directory:\n+\n% .git\n+ --- Git generated files and directories\n% .gitattributes+        (a ZIGI generated file for Git)\n% .ZIGI+                 (a directory for key ZIGI files)\n+ ---%dsn+               (a ZIGI required file)\n+ ---%xxx+               (a ZIGI generated file for each PDS directory)\n+%Documentation+         (a directory)\n+ ---%Users Guide.html+  (a file)\n+%APP.C+                 (a directory as this is a z/OS PDS)\n+ ---%KEYAPP+            (a PDS member)\n+%README.ZOS+            (a sequential dataset)\n+\n+        \"Today is the only day. Yesterday is gone.\" -- John Wooden\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih218\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH218": {"ttr": 131, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10B\\x00\\x01\\x193O\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 46, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                  %AddAll\n+\n%ADDALL+adds all Untracked or Modified datasets and files to the Git\n+staging area so they are eligible to be Committed.\n+\n+\n%\n%\n+\n+\n+\n+\n+\n+\n+             \"Kites rise highest against the wind - not with it.\"\n+                          -- Winston Churchill\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih220\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH220": {"ttr": 133, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.18", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Branch+\n+\n%Branch+enables the user to create a new branch or to switch (checkout) an\n+existing branch.\n+\n+If the user enters the name of a new branch then that branch is created from\n+the current branch, pushed to remote (if present) and checked-out.\n+\n+The row selection options are:\n+\n+ %C+to checkout, or switch to the selected branch.\n+    This replaces all existing repository and z/OS datasets, with\n+    the current state of the selected branch. The current branch is\n+    untouched.\n+\n+ %D+to delete from the local system any branch that is no longer needed.\n+    The remote branch is untouched.\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih225\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH225": {"ttr": 135, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.19", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Check+\n+\n%Check+performs a check of all z/OS datasets to determine if there have\n+been updates to the dataset. This includes both sequential and partitioned\n+datasets.\n+\n+By default, this occurs when the repository is opened and then only upon\n+demand using the%Check+command.\n+\n+The z/OS dataset check consists of the following actions:\n+\n+%*+Check the last reference date for the dataset\n+%*+If it is more recent than the ZIGI last reference file info then:\n+   - For sequential datasets: copy them to OMVS where Git checks for updates\n+   - For partitioned datasets: check the ISPF stats and if different,\n+     then copy the member to OMVS where GIT checks for updates\n+ Note: if updating a dataset within ZIGI the copy occurs upon exit from Edit.\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih230\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH230": {"ttr": 137, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1fB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.31", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Commit+\n+\n%Commit+processing takes the changes that have been made in the managed\n+datasets and adds them to Git management.\n+\n+Commit allows for, and it is encouraged to provide, a short summary of the\n+changes to be captured in the git log for historical tracking. The summary\n+typically consists of up to a 50-character title, followed by up to 72\n+character lines of explanation. This dialog allows up to 16 lines of text.\n+\n+If there is an issue or ticket number, it is suggested that it be included in\n+the title (e.g. Ticket: title text).\n+\n+Cancel the%Commit+process by entering%F3+with an empty Commit Title.\n+\n+The%Import+command may be used to import text from a dataset into the\n+commit prose. If entered without a dataset then the dataset is prompted.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n  &zcont = zigih231\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH231": {"ttr": 703, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07@\\x00\\x01 \\x04\\x1f\\x01 \\x16?\\x06$\\x00(\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 64, "createdate": "2020-02-10T00:00:00", "modifydate": "2020-06-11T06:24:00", "lines": 40, "newlines": 36, "modlines": 0, "user": "ZIGI210"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Commit+\n+\n+During Commit processing, two additional options are available:\n+\n+The Optional Tag field may contain a lightweight git tag. The tag may not\n+have any blanks within it. After the commit, a%git tag+is performed.\n+\n+The other option is after the commit, a%git push+can be automatically\n+initiated by entering a%Y+in the Push after field.\n+\n+On the table, the following commands are available:\n+\n    +Command:%Insert+or%Insert #+\n    +Line:   %I+insert %I#+insert #%D+delete%D#+delete #\n+\n+        \"Code is like humor. When you have to explain it, it's bad.\"\n+               -- Cory House\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n if (&ztut = 200)\n     &zcont = zigih2d0\n if (&ztut = 300)\n     &zcont = zigih250\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH240": {"ttr": 141, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.22", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default($+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n$Tutorial -\\-\\~The z ISPF Git Interface (zigi)$\\-\\- Tutorial\n$Selection ===>_ZCMD                                                          +\n+\n                                 $GitCMD+\n+\n+The Git command panel supports entering any Git command to be executed with\n+the results displayed using ISPF Browse. All commands are executed in the\n+directory of the local Git repository.\n+\n+The first command does not require$Git+to be specified. Additional commands\n+may be entered using$&&+as a separator and requires$git+to be coded. Thus:\n+\n   $git@log --cc -m -n 10 && git status\n+\n+All git commands are saved in a push-down stack except for duplicates.\n+\n+See the next tutorial panel for command and selection options.\n+\n+  \"Life is 10% what happens to you and 90% how you react to it.\"\n+        -- Charles R. Swindoll\n+\n+Press$Enter+to execute the command after entering or editing it.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont    = ZIGIH241\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH241": {"ttr": 143, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01 \\x01/\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2020-01-12T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %GitCMD+\n+\n+Available Commands: CLEAR to empty the table completely.\n+\n+Use these line commands with the table rows:\n+\n   %S+to select and place it in the Git command field for editing\n   %D+to delete a command from the table. Multiple rows may be selected for%D+\n   %X+to execute the command and place it into the command entry field\n+\n+The%Githelp+command, available on most of the ZIGI panels, is very helpful\n+in finding which command to use and its syntax.\n+\n+\n    +  \"I'm a greater believer in luck, and I find the harder I work\n     +  the more I have of it.\"   -- Thomas Jefferson\n+\n+\n      +Press%Enter+to execute the command after entering or editing it.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont    = ZIGIH160\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH250": {"ttr": 145, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00(\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.19", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %GITLOG+\n+\n%GITLOG+as a command browses or views the git log.\n+\n+There are 6 filtering options provided:\n+\n+%Number of Commits:+is the number of commits to list\n+%        From Date:+a date in the format yyyy/mm/dd\n+%       Until Date:+a date in the format yyyy/mm/dd\n+%           Filter:+any text to filter on\n+%    Include diffs:+Y to include diffs or N to exclude them\n+%   Browse or View:+B to browse or V to View\n+\n+\n       +\"If you're not making mistakes, then you're not doing anything.\n           +I'm positive that a doer makes mistakes.\" -- John Wooden\n+\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n if (&ztut = '200')\n     &zcont = ZIGIH260\n if (&ztut = '300')\n     &zcont = ZIGIH260\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH260": {"ttr": 147, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00(\\x00$\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 36, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Grep+\n+\n%Grep+as a command searches all files in the repository in a case insensitve\n+search.\n+\n+Result options:\n+\n%D+displays a selection list of datasets and files with the following options:\n+\n+  %S+or%E+to edit the dataset or file\n+  %B+to Browse the dataset or file\n+  %V+to View the dataset or file\n+\n%R+browses the grep report.\n+\n+\n    +\"It's what you learn after you know it all that counts.\" -- John Wooden\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n if (&ztut = 200)\n     &zcont = ZIGIH270\n if (&ztut = 300)\n     &zcont = ZIGIH310\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH270": {"ttr": 705, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06@\\x00\\x01 \\x02_\\x01 \\x19?\\x12W\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.06", "flags": 64, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-07-11T12:57:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI30"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Merge+\n+\n%Merge+as a command merges a (local) branch into the current branch.  When\n+the two branches are the same, nothing happens.\n+\n+Select the branch to merge into the current branch from a list of available\n+branches using the%M+row selection.\n+\n+If the merge is successful, it is committed to the current branch and %ALL\n+z/OS datasets are replaced from the updated OMVS files.\n+\n+If the merge is not successful a popup with four options will be presented:\n+\n+   %*+View the Merge Report\n+   %*+Continue and attempt to resolve using ISPF Compare\n+   %*+Continue and attempt to resolve using ISPF Edit\n    %*+Abort the Merge\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih271\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH271": {"ttr": 151, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1bB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.27", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %Merge Conflicts+\n+\n%Merge+processing, when a conflict occurs, results in the current branch\n+repository file having Git messages along with records from both the current\n+branch and the merge branch. This makes it easy to identify the areas of\n+conflict to resolve.\n+\n+For the ISPF user, the ISPF Edit Compare command is used to easily identify\n+the new and old records along with conflicts. This allows the ISPF Edit user\n+to resolve the conflicts and save the file so that the merge process can be\n+completed.\n+\n+If the file is a PDS member then after the merge is resolved, the ISPF\n+statistics file is recreated using the updated information.\n+\n+\n         +\"Never mistake activity for achievement.\" -- John Wooden\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zup   = zigih270\n &zcont = zigih272\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH272": {"ttr": 153, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00)\\x00%\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 41, "newlines": 37, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                 %Merge+\n+\n%Merge+resolution using the native Git conflict records is performed using\n+ISPF Edit. The Git records are highlighted in%white+for easy identification.\n+\n+The%<<<<<<<+marker begins the current branch set of records.\n+The%=======+marker separates the current branch from the merge branch records.\n+The%>>>>>>>+marker ends the merge branch records.\n+\n+To resolve the conflict:\n+\n+ %*+Remove the records that should NOT be in the merged file.\n+ %*+Remove the Git marker records.\n+ %*+Save and exit Edit.\n+\n+Using%F3+or not updating ALL the conflict files results in a\n%git merge --abort+being processed.\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n vget (ztut)\n)PROC\n &zup   = zigih271\n if (&ztut EQ 'mrg')\n     &zcont = zigih270\n if (&ztut NE 'mrg')\n     &zcont = zigih280\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH280": {"ttr": 155, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01 \\x02_\\x01 \\x12_\\x068\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-05-04T06:38:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(@+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(!!)\n@Tutorial -!-!~The z ISPF Git Interface (zigi)@!-!- Tutorial\n@Selection ===>_ZCMD                                                          +\n+\n                                 @Network+\n+\n@Network+draws a text-based graphical representation of the commit and\n+branch/merge history for the current branch using the following command:\n+\n   @git log --graph --oneline --format=\"%h %<(50,trunc)%f\"\n+\n+\n+Notes:@*+The top is the most recent commit, the bottom is the oldest\n+      @*+Branches are vertical lines\n+      @*+Asterisk identifies which branch the current commit references\n+      @*+The \\ is where 2 branches converge/merge\n+      @*+The / is where 2 branches split\n+\n+\n               +\"Success is never final, failure is never fatal.\n                   +It's courage that counts.\" -- John Wooden\n+\n         +Press the@Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih290\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH290": {"ttr": 157, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.17", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(}+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n}Tutorial -\\-\\~The z ISPF Git Interface (zigi)}\\-\\- Tutorial\n}Selection ===>_ZCMD                                                          +\n+\n                                 }Pull+\n+\n}Pull+as a command pulls the current version of the repository from the\n+remote site and updates all the z/OS datasets and OMVS files to match the\n+level of the remote repository.\n+\n+More specifically,}Pull+incorporates changes from a remote repository into\n+the current branch.\n+\n+Note: if a PDS is updated with more than 25% of the members it is\n+re-allocated as a PDSE Version 2 with MAXGEN of 0.  If a PDSE, then it is\n+not re-allocated.\n+\n+\n        +\"Be more concerned with your character than your reputation,\n         +because your character is what you really are, while your\n         +reputation is merely what others think you are.\" -- John Wooden\n+\n         +Press the}Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n)PROC\n &zcont = zigih2a0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH300": {"ttr": 185, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00R\\x00J\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 82, "newlines": 74, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n    hilite(uscore)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %PDS Member List+\n+\n%Commands available+(select one more information or press%Enter+to see all):\n+\n  \u00ddAddall+   git add all untracked members\n  \u00ddCommit+   git Commit all elements that have been added\n  \u00ddGitlog+   view the git log with filtering options\n  \u00ddGrep+     search all repository elements for a string\n  \u00ddLocate+   locate a member in the member list\n  \u00ddReset    +change the userid for all members\n  \u00ddSort+     sort the member table - prompting if no parms given\n  \u00ddStatus+   display the git status for the repository\n  \u00ddRow+      line selection commands\n+\n+\n+   \"Don't measure yourself by what you have accomplished, but by what\n+    you should have accomplished with your ability.\" -- John Wooden\n+\n         +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &addall  = 'AddAll'\n &commit  = 'Commit'\n &gitlog  = 'Gitlog'\n &grep    = 'Grep'\n &locate  = 'Locate'\n &reset   = 'Reset-IDs'\n &sort    = 'Sort'\n &status  = 'Status'\n &row     = 'Row'\n &ztut = '300'\n vput (ztut)\n)PROC\n*REXX(* zcmd zsel)\n  Select\n    When abbrev('ADDALL',zcmd,2) = 1 then zcmd = 0\n    When abbrev('COMMIT',zcmd,2) = 1 then zcmd = 1\n    When abbrev('GITLOG',zcmd,4) = 1 then zcmd = 2\n    When abbrev('GREP',zcmd,2) = 1 then zcmd = 3\n    When abbrev('LOCATE',zcmd,1) = 1 then zcmd = 4\n    When abbrev('RESET',zcmd,2) = 1 then zcmd = 5\n    When abbrev('SORT',zcmd,2) = 1 then zcmd = 6\n    When abbrev('STATUS',zcmd,2) = 1 then zcmd = 7\n    Otherwise nop\n  end\n*Endrexx\n &ZSEL = TRANS( &ZCMD\n           0,zigih305  /*   ADDALL            */\n           1,zigih230  /*   COMMIT            */\n           2,zigih250  /*   GITLOG            */\n           3,zigih260  /*   GREP              */\n           4,zigih310  /*   LOCATE            */\n           5,zigih320  /*   RESET             */\n           6,zigih330  /*   SORT              */\n           7,zigih2f0  /*   STATUS            */\n           8,zigih340  /*   Row options       */\n           *,'?'\n           )\n)PNTS\n Field(ADDALL)  var(zcmd) val('0')\n Field(COMMIT)  var(zcmd) val('1')\n Field(GITLOG)  var(zcmd) val('2')\n Field(GREP  )  var(zcmd) val('3')\n Field(LOCATE)  var(zcmd) val('4')\n Field(RESET )  var(zcmd) val('5')\n Field(SORT  )  var(zcmd) val('6')\n Field(STATUS)  var(zcmd) val('7')\n Field(ROW   )  var(zcmd) val('8')\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH305": {"ttr": 187, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %AddAll+\n+\n%ADDALL+git adds all Untracked or Modified members to the Git\n+staging area so they are eligible to be committed.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n            +\"The effort required to correct an error\n            + increases exponentially with time.\"  -- Unknown\n+\n+\n           +Press the%Enter+key to begin your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH310\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH310": {"ttr": 189, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %Locate+\n+\n%Locate+scrolls the table to the member that closely matches the member\n+name provided. The member name can be a partial member name (no wild cards).\n+\n%Syntax:+   Locate member\n+           L member\n+\n+\n+\n+\n+\n+\n+\n            +\"If you don't have time to do it right,\n            + when will you have time to do it over?\" -- John Wooden\n+\n+\n           +Press the%Enter+key to begin your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH320\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH320": {"ttr": 191, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0bB\\x00\\x01\\x193O\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.11", "flags": 66, "createdate": "2019-11-30T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %RESET+\n+\n%Reset+changes the ISPF statistics userid for all members to the userid\n+that is provided on the prompting panel.\n+\n+After the reset, the ISPF statistics file is updated and added to the Git index\n+so it is ready for the next Commit to make it a permanent part of the local\n+repository.\n+\n+\n+\n+\n+\n+\n            +\"Talent is God given. Be humble. Fame is man-given.\n            +Be grateful. Conceit is self-given. Be careful.\"\n                 -- John Wooden\n+\n           +Press the%Enter+key to begin your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH330\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH330": {"ttr": 193, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00$\\x00 \\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 32, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                                   %SORT+\n+\n%SORT+as a command sorts the member list panel using the provided parameters\n+or displays a popup with a prompting panel if no parameters are provided on\n+the command.\n+\n+The available Sort Fields are: %MEMBER    %DATE    %STATUS\n                                %SIZE      %TIME    %USERID\n+\n+The available sort order options are%A+(ascending) and%D+(descending)\n+The default sort order is A (ascending).\n+\n+\n+       +\"Whatever you do in life, surround yourself with smart\n+       +people who'll argue with you.\"  --  John Wooden\n+\n+\n+\n           +Press the%Enter+key to begin your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &ZCONT = ZIGIH2F0\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH340": {"ttr": 195, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1bB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.27", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                               %Row Selections+\n+\n+The following row selection options are available:\n+\n  %A+ Add the member to the%Git index+so that it can be Committed\n  %D+ Compares the current uncommited version of the element to the committed\n      version (uses git diff)\n  %H+ History - view previous version of the PDS member\n  %RM+Remove the member from the PDS and the repository\n  %RN+reName the member\n  %S+ Select the member and Edit it\n  %U+ Undo a non-Committed change\n+\n+\n     \"The best competition I have is against myself to become better.\"\n      -- John Wooden\n+\n+\n           +Press the%Enter+key to begin your ZIGI tutorial journey.\n)Init\n .cursor = &zcmd\n)PROC\n &zcont = zigihs00\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH400": {"ttr": 881, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18\\x00U\\x01\\x193?\\x01 #\\x9f\\x07\\x08\\x00*\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.24", "flags": 0, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-08-26T07:08:55", "lines": 42, "newlines": 54, "modlines": 0, "user": "ZIGI301"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n    hilite(uscore)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                           %Read Only Repositories\n+\n+A%Read Only+repository is a repository where the z/OS datasets are never\n+changed, updated, or replaced by ZIGI. They are only monitored with any\n+changes copied to the OMVS files for Git management. These may only be\n+defined at with the%Create+command and are effectively a local only repo.\n+\n+All%ZIGI+operations that typically affect the z/OS datasets are disabled.\n+Some of these are: Branch, Merge, Stash, Flow, Remove, and Rename.\n+\n+The use of a qualifier ignore of 0 may be used to allow multiple dataset\n+prefixes from which to select datasets to add to the repository.\n+\n%Cloning+a%Read Only+repository will create z/OS datasets under the Prefix\n+specified during the clone operation that should not conflict with the\n+existing z/OS datasets. A warning will pop-up if there is a potential to\n+overlay/replace an existing z/OS dataset.\n+\n+Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &ztut = '400'\n vput (ztut)\n)PROC\n &ZSEL = TRANS( &ZCMD\n           1,zigih500\n           *,'?'\n           )\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH500": {"ttr": 199, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1cB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00*\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.28", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 42, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on) color(white)\n    hilite(uscore)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                          %Common Scenarios+\n+\n+tbd\n+   tbd\n+      tbd\n+         tbd\n+            tbd\n+               tbd\n+                  tbd\n+                     tbd\n+                        tbd\n+\n+\n+\n+\n+\n+\n+\n+Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &ztut = '500'\n vput (ztut)\n)PROC\n &ZSEL = TRANS( &ZCMD\n           1,zigih600\n           *,'?'\n           )\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH600": {"ttr": 201, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0bB\\x00\\x01\\x192\\x9f\\x01 \\x11\\x8f\\x06\\x10\\x00&\\x00\\x10\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.11", "flags": 66, "createdate": "2019-11-25T00:00:00", "modifydate": "2020-04-27T06:10:00", "lines": 38, "newlines": 16, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n { type(output) hilite(reverse) color(turq) caps(off)\n _ type(input) caps(off) hilite(uscore) intens(low)\n + type(text ) intens(low) skip(on)\n @ type(input) caps(on ) hilite(uscore) intens(low)\n)Body Expand(\\\\)\n+Tutorial\\-\\{zigtitle                                      +-\\-\\Tutorial\n%Command ===>_zcmd                                                             +\n+\n+A ZIGI managed repository consists of the following characteristics:\n+\n   %*+A%.ZIGI+directory in the repository root directory\n   %*+A file with the name of%dsn+in the .ZIGI directory with\n      information on the z/OS datasets managed by zigi:\n+     # Default DSORG and DCB info\n+     * PO FB 80 32720\n+     SAMPLE.REXX PO VB 255 32760 rexx\n+     SAMPLE.PDS PO FB 80 32760\n+     SAMPLE.TEXT PS FB 121 27951\n+  %*+Each z/OS sequential datasets requires a copy in the repository root.\n+  %*+Each z/OS partitioned dataset requires a directory in the repository root.\n+  %*+Each PDS member requires  a copy in the directory associated with the\n+     full PDS. An optional file extension (after the DCB) may be defined.\n+\n+\n+     See the next tutorial page for OMVS naming standards for z/OS datasets.\n+\n       +Press%Enter+to continue reading about the ZIGI repository layout.\n)Init\n &zigtitle = '(Characteristics of a ZIGI Managed Repository)'\n)Proc\n &zcont = zigih610\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH610": {"ttr": 203, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+`)\n { type(output) hilite(reverse) color(turq) caps(off)\n ` type( input) intens(low ) just(left ) hilite(uscore)\n + type(text ) intens(low) skip(on)\n)Body Expand(}})\n+Tutorial}-}{zigtitle                                      +-}-}Tutorial\n%Command ===>`zcmd                                                             +\n+\n+ Another format for the ZIGI managed repository is to have file extensions\n+ for the PDS members that are copied to the OMVS filesystem. This feature\n+ was implemented to enable the repository to be easily updated from both\n+ ISPF on z/OS and from distributed git enabled clients.\n+\n+ When the z/OS dataset is added to ZIGI using the ADDDSN dialog, if the\n+ dataset is a PDS then a prompt for a file extension will popup. The file\n+ extension is optional and if it is blank when the Enter key is pressed then\n+ the PDS members will be copied to the OMVS filesystem as before.\n+\n+ Only one file extension is allowed per PDS. This is to prevent a collision\n+ where multiple files have the same name but different extensions.\n+\n+ Note that the file extension, once defined, may never be changed as it is\n+ now an integral part of the ZIGI managed repository.\n+\n+\n+\n       +Press%Enter+to continue reading about the ZIGI repository layout.\n)Init\n &zigtitle = '(Characteristics of a ZIGI Managed Repository)'\n)Proc\n &zup   = zigih600\n &zcont = zigih611\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH611": {"ttr": 205, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\nB\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.10", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+`)\n { type(output) hilite(reverse) color(turq) caps(off)\n ` type( input) intens(low ) just(left ) hilite(uscore)\n + type(text ) intens(low) skip(on)\n)Body Expand(}})\n+Tutorial}-}{zigtitle                                      +-}-}Tutorial\n%Command ===>`zcmd                                                             +\n+\n                 +%Disable+or%Enable+File Extension Prompting\n+\n+ To enable, or disable, prompting for a file extension when adding a\n+ partitioned dataset use the%CONFIG+command on the Local Repository\n+ panel, or the%SET+command on the Current Repository panel. It can\n+ also be disabled during the prompt when adding a partitioned dataset\n+ to the Current Repository.\n+\n+\n+\n+\n+\n+\n+ \"Code is like humor. When you have to explain it, it's bad.\"\n+      -- Cory House\n+\n+\n+\n       +Press%Enter+to continue reading about the ZIGI repository layout.\n)Init\n &zigtitle = '(Characteristics of a ZIGI Managed Repository)'\n)Proc\n &zup   = zigih610\n &zcont = zigih620\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH620": {"ttr": 207, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00&\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 38, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+`)\n { type(output) hilite(reverse) color(turq) caps(off)\n ` type( input) intens(low ) just(left ) hilite(uscore)\n + type(text ) intens(low) skip(on)\n)Body Expand(}})\n+Tutorial}-}{zigtitle                                      +-}-}Tutorial\n%Command ===>`zcmd                                                             +\n+\n+ To convert a non-ZIGI repository into a ZIGI aware repository where the\n+ PDS members are copied by ZIGI from the OMVS filesystem to z/OS partitioned\n+ datasets the repositories filesystem needs to conform to one that ZIGI can\n+ manage.\n+\n+ 1. Clone the repository\n+ 2. Create subdirectories in the repository root with the name of each\n+    PDS, leaving off the prefix\n+ 3. Move into each subdirectory the files that are the PDS members\n+ 4. Each PDS member file should be upper case with no file extensions\n+    or lowercase with the same file extension for all member files\n+ 5. Update the .zigi/dsn file with the directory name (2) and DCB\n+    - if a file extension is used then it is defined after the BLKSIZE\n+ 6. After manually confirming the above open ZIGI on the repository\n+    and then use the REPLace command to create the z/OS datasets from\n+    the repository.\n+ 7. The git repository will need to be updated to reflect the file\n+    moves. This is a manual process - use 'git status' and make notes.\n+\n       +Press%Enter+to continue reading about the ZIGI repository layout.\n)Init\n &zigtitle = '(Characteristics of a ZIGI Managed Repository)'\n)Proc\n &zup   = zigih611\n &zcont = zigih630\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH630": {"ttr": 209, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01 \\x02_\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00!\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2020-01-25T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 33, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+`)\n { type(output) hilite(reverse) color(turq) caps(off)\n ` type( input) intens(low ) just(left ) hilite(uscore)\n + type(text ) intens(low) skip(on)\n)Body Expand(}})\n+Tutorial}-}{zigtitle                                      +-}-}Tutorial\n%Command ===>`zcmd                                                             +\n+\n+ To translate a z/OS dataset to an OMVS directory or file name:\n+\n+ 1. Remove from the dataset name any qualifiers that are to be ignored.\n+    e.g. For APP.DEV.PRODUCTX.C remove the 1st two qualifiers\n+         so the OMVS directory would be PRODUCTX.C\n+ 2. Some special characters can present problems in OMVS that are acceptable\n+    in z/OS:\n+      The characters that are         OMVS   z/OS\n+      challenges are the%@#$+        %  _+<->%@\n+      and are escaped using a \\      %  .+<->%#\n+      when found.                    %  -+<->%$\n+  3. A .gitattributes file must also exist in the root directory for the\n+     Repository. To make it easy just create a dummy repository using ZIGI\n+     and copy the .gitattributes from there - then delete the dummy repo.\n+  4. In the users home directory is a .ZIGI directory that will be created\n+     on first use. It will contain files for each ZIGI managed repository\n+     that contain z/OS dataset names and the julian date it was last accessed.\n+\n       +Press%Enter+to continue reading about the ZIGI repository layout.\n)Init\n &zigtitle = '(Characteristics of a ZIGI Managed Repository)'\n)Proc\n &zup   = zigih620\n &zcont = zigih700\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH700": {"ttr": 211, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0bB\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x004\\x00H\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.11", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 52, "newlines": 72, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore) caps(on)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on)\n    skip(on) color(white) hilite(uscore)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD                                                          +\n+\n                        %Connecting with a Git Server\n+\n+Working with Git requires a Git Server and that means registering with the\n+server and provoding your SSH Public Key when you register. Click on%SSH+\n+below to find where to get your SSH Public Key.\n+\n+These are some of the Git Servers that we have information on. Select one\n+to view that information, or press%Enter+to view all.\n+\n  \u00ddSSH+        How to find your SSH Public Key\n  \u00ddBitbuc   +  Bitbucket.org\n  \u00ddGitHub+     GitHub.com\n  \u00ddGitLab+     GitLab.com\n+\n+  \"Knowing is not enough; we must apply.\n+         Willing is not enough; we must do.\"\n+                 -- Johann Wolfgang von Goetheou\n+\n+Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &ssh       = 'SSH'\n &bitbuc    = 'Bitbucket'\n &github    = 'GitHub'\n &gitlab    = 'GitLab'\n)PROC\n &ZSEL = TRANS( &ZCMD\n           1,zigih705    /*  SSH Key             */\n           2,zigih710    /*  BITBUCKET           */\n           3,zigih720    /*  GITHUB              */\n           4,zigih730    /*  GITLAB              */\n           *,'?'\n           )\n)PNTS\n Field(SSH   ) var(zcmd)  val('1')\n Field(BITBUC) var(zcmd)  val('2')\n Field(GITHUB)  var(zcmd) val('3')\n Field(GITLAB ) var(zcmd) val('4')\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH705": {"ttr": 213, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1aB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00$\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.26", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 36, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+$)\n  $ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>$ZCMD\n+\n                          %Finding your SSH Public Key\n+\n%*+From within ZIGI on the Local Repositories Panel enter the%SSH+command\n%*+Select your SSH Public Key using your TN3270 emulator and copy it\n+  to your workstation's clipboard.\n   %*+It is now ready to be pasted into the Git server of your choice.\n+\n                             %Alternate approach\n+\n%*+Download the%.ssh/id_rsa.pub+file to your workstation from your home\n+  directory. It should NOT be downloaded in binary as it is a text file.\n%*+Open the file in Notepad or similar text editor.\n%*+Use Control-A (in Windows) to select all to copy the key to the\n+  workstation's clipboard.\n  %*+It is now ready to be pasted into the Git server of your choice.\n+\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih710\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIH710": {"ttr": 215, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.24", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                  %Bitbucket\n+\n  %*+Open https://bitbucket.org\n  %*+Click Log in\n  %*+Log in with your account information\n  +  or click Sign up for an account\n  %*+Click the icon in the lower left with your initials (or picture)\n  %*+Click Bitbucket settings\n  %*+Click SSH keys\n  %*+Click Add key\n  %*+Enter a title for the key and then paste your Public key into the box\n  %*+Click Add key to complete adding the key\n+\n+\n+  \"Any fool can write code that a computer can understand.\n+     Good programmers write code that humans can understand.\"\n+          -- Martin Fowler\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih720\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH720": {"ttr": 217, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19B\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.25", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                  %GitHub\n+\n  %*+Open https://GitHub.com\n  %*+Click Sign in or Sign up\n  %*+Click the icon in the upper right with your initials (or picture)\n  %*+Click Settings\n  %*+Click SSH and GPG keys\n  %*+Click New SSH key\n  %*+Enter a title and then paste your Public key into the box\n  %*+Click Add SSH key to complete adding the key\n+\n+\n+\n+\n+       \"Walking on water and developing software from a specification\n+            are easy if both are frozen.\"\n+                 --  Edward V. Berard\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigih730\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH730": {"ttr": 219, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1bB\\x00\\x01\\x193?\\x01 \\x11\\x8f\\x06\\t\\x00%\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.27", "flags": 66, "createdate": "2019-11-29T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 54, "modlines": 0, "user": "ZIGI28"}, "text": ")attr default(%+_)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n  ~ type(text) intens(high) caps(off) just(asis ) hilite(reverse) color(turq)\n  \u00dd type(output) intens(high) caps(off) just(left) pas(on) skip(on)\n)Body Expand(\\\\)\n%Tutorial -\\-\\~The z ISPF Git Interface (zigi)%\\-\\- Tutorial\n%Selection ===>_ZCMD\n+\n                                  %GitLab\n+\n%*+Open https://GitLab.com\n%*+Click Sign in or Register\n+  if Register then complete the registration and continue\n%*+Click the icon in the upper right with a strange avatar\n%*+Click Settings\n%*+Click SSH keys\n%*+Click Add an SSH key\n%*+Enter a title and then paste your Public key into the box\n%*+Click Add key to complete adding the key\n+\n+\n+\n+ \"The most important property of a program is whether it accomplishes\n+          the intention of its user.\"\n+                 -- C.A.R. Hoare\n+\n+        +Press the%Enter+key to continue your ZIGI tutorial journey.\n)Init\n .cursor  = &zcmd\n &zgsr = CSR\n)PROC\n &zcont = zigihint\n)END\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIH800": {"ttr": 221, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\tB\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00&\\x00&\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n { type(output) hilite(reverse) color(turq) caps(off)\n _ type(input) caps(off) hilite(uscore) intens(low)\n + type(text ) intens(low) skip(on)\n @ type(input) caps(on ) hilite(uscore) intens(low)\n)Body Expand(\\\\)\n+Tutorial\\-\\{zigtitle                           +-\\-\\Tutorial\n%Command ===>_zcmd                                                             +\n+\n+Converting a non-ZIGI managed repository for use by ZIGI is a manual process\n+since every repository is different:\n+\n+  1. Get into OMVS.\n+  2. Change to a new branch so that master remains untouched (for now)\n+  3. Create subdirectories for each respective z/OS PDS.\n+  4. Append a .bin to any file that should be treated as binary\n+  5. Move all files into their respective directories and remove any\n+     file suffix (e.g. for file main.c remove the .c)\n+  6. Rename any sequential files in the repository root that are z/OS\n+     datasets to upper case using standard z/OS naming conventions\n+     - the file name should not include any high-level-qualifier.\n+  7. Execute the%CONVREPO+command to convert the repo which will:\n+     - change to a new%zigi-master+branch if the current branch is master\n+     - create a .ZIGI directory with a .zigi/dsn file\n+     - turn off default push on commit\n+     - convert the repository and create the z/OS datasets\n+\n       +Press%Enter+to continue reading about the ZIGI repository layout\n)Init\n &zigtitle = '(Converting a non-ZIGI Repository)'\n)Proc\n &zcont = zigih600\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIINFO": {"ttr": 667, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05@\\x00\\x01 \\x05\\x9f\\x01 \\x18\\x7f\\x14\\x01\\x00%\\x00\\x1f\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.05", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-05T14:01:00", "lines": 37, "newlines": 31, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body Window(75,14)\n\n+Name          : $reponame\n+Repository    : $zigirep\n+Branch        : $branch\n+Remote        : $remotex\n+                $remotex2\n+Home Directory: $home\n+Category      : $zigicat\n+z/OS HLQ      : $pdshlq\n+Ignore Qual   : $qualignr\n+Last Access   : $zigidate\n+Default Userid: $defruid\n+Default Push  : $defcpush\n%\n)Init\n &zwinttl = 'ZIGI Local Repository Summary Info'\n*REXX(* localrep remotex remote1 remotex2)\n home = localrep'/'zigirep\n remotex = subword(remote1,2)\n remotex2 = ''\n if length(remotex) > 57 then\n    parse value remotex with remotex 57 remotex2\n*ENDREXX\n)Proc\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGILIST": {"ttr": 717, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x19/\\x075\\x00[\\x00R\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.13", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-10T07:35:00", "lines": 91, "newlines": 82, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  \u00dd type(output) intens(low ) caps(off) just(right)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n | TYPE(AB)           /* Action bar                */\n < TYPE(ABSL) GE(ON)  /* Action bar separator line */\n)ABC DESC(Menu)\n PDC DESC('AddAll')          ACTION RUN(ADDALL)\n PDC DESC('Commit')                      ACTION RUN(COMMIT)\n PDC DESC('GIT Commands') ACTION RUN(zigigcmd)\n PDC DESC('GitLog')                              ACTION RUN(GITLOG)\n PDC DESC('Grep')            ACTION RUN(GREP)\n PDC DESC('Locate')                     ACTION RUN(LOCATE)\n PDC DESC('Sort')                      ACTION RUN(SORT)\n PDC DESC('Status')            ACTION RUN(STATUS)\n PDC DESC('Reset Userids')                       ACTION RUN(RESET)\n PDC DESC('End') Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUX'\n)ABC DESC(Help)\n PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')\n PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')\n PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')\n PDC DESC('GIT Help') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%GITHELP)')\n PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigih300')\n)ABCINIT\n  .ZVARS = HELPX\n)Body  Expand(\\\\)\n+| Menu | Help +\n<-----------\\-\\--------------------------------+\n+PDS Member List+-----------------#zigtitle    +--------------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+Current Dataset   :$fulldsn                     \\ \\%F3  +\n+Current Repository:$localdir\n+Current Branch    :$branch                                \u00ddext\n%\n%S  \u00a8tmem  +  \u00a8tstat +             %Type+\u00a8tsiz+  \u00a8tdate   +\u00a8ttime   +\u00a8tuser +\n)Model\n@z +$z       +$z                    \u00ddz+\u00ddz     +  \u00ddz       +\u00ddz       +$z\n)Init\n  .zvars = '(zsel mem memstat mtype zlcnorc zlmdate zlmtime zluser)'\n  .cursor = &zcmd\n  .help = zigih300\n  &zgsr = CSR\n  &tmem   = 'Member'\n  &tstat  = 'Status'\n  &tsiz   = 'Size'\n  &tdate  = 'Mod-Date'\n  &ttime  = 'Mod-Time'\n  &tuser  = 'Userid'\n*REXX(* extens)\n  if extens = ''\n     then ext = ''\n     else ext = 'Extension: .'extens\n*ENDREXX\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n    &zsel = &z\n if (&zsel = 'MV')\n     &zsel = 'RN'\n ver (&zsel,list,A,AB,B,E,D,H,RM,RN,S,U,V,/,Z)\n)PNTS\n FIELD(TMEM )  VAR(ZCMD) VAL('SORT MEMBER')\n FIELD(TSTAT)  VAR(ZCMD) VAL('SORT STATUS')\n FIELD(TSIZ )  VAR(ZCMD) VAL('SORT SIZE')\n FIELD(TDATE)  VAR(ZCMD) VAL('SORT DATE')\n FIELD(TTIME)  VAR(ZCMD) VAL('SORT TIME')\n FIELD(TUSER)  VAR(ZCMD) VAL('SORT USERID')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGILOCQ": {"ttr": 249, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01 \\x04\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2020-02-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 13, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n @ type(input ) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(41,4)\n+\n+Enter the Locate Filter:@filter     +\n+\n+Press%Enter+to continue or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Locate Prompt'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGILOG": {"ttr": 251, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00%\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.25", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 37, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(input)  caps(on ) hilite(uscore) intens(low)\n @ type(input)  caps(off) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(53,9)\n+\n+Enter/Review Log Filter:  (use any, all, or none)\n+   Number of Commits:$lcnt+       1 to 9999\n+           From Date:$logdfrom   +yyyy/mm/dd\n+          Until Date:$logdto     +yyyy/mm/dd\n+              Filter:@greplog    +in commit message\n+       Include diffs:$z+         +Y or N\n+      Browse or View:$z+         +B or V\n)Init\n &zwinttl = 'ZIGI Log Filter'\n .zvars = '(incldiff lbv)'\n)Proc\n*REXX(logdfrom,logdto)\n logdfrom = translate(logdfrom,'/','-') /* convert hyphens to slashes */\n logdto   = translate(logdto  ,'/','-')\n Call ISPPRXVP 'T'\n*ENDREXX\n  ver (&lcnt,range,1,9999)\n  ver (&logdfrom,stddate)\n  ver (&logdto,stddate)\n  ver (&incldiff,nb,list,Y,N)\n  ver (&lbv,nb,list,B,V)\n*REXX(logdfrom,logdto)\n logdfrom = translate(logdfrom,'-','/') /* convert slashes to hyphens */\n logdto   = translate(logdto  ,'-','/')\n Call ISPPRXVP 'T'\n*ENDREXX\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGILSRT": {"ttr": 253, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0bB\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00 \\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.11", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 32, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(input)  caps(on ) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(65,5)\n+\n+Enter the field to sort:$z+  1 - Member+2 - Status+3 - Size+\n+                             4 - Date+  5 - Time+  6 - Userid+\n+Enter the sort order:   $z+  A+(ascending) D+(descending)\n+\n)Init\n .zvars = '(sfx sc)'\n &zwinttl = 'ZIGI Sort Selections'\n)Proc\n ver (&sfx,nb,range,1,6)\n ver (&sc,nb,list,A,D)\n if (&sfx EQ 1)\n     &sf = 'MEMBER'\n if (&sfx EQ 2)\n     &sf = 'STATUS'\n if (&sfx EQ 3)\n     &sf = 'SIZE'\n if (&sfx EQ 4)\n     &sf = 'DATE'\n if (&sfx EQ 5)\n     &sf = 'TIME'\n if (&sfx EQ 6)\n     &sf = 'USERID'\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIMDIR": {"ttr": 719, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e@\\x00\\x01\\x192/\\x01 \\x16\\x8f\\x08\\x10\\x00<\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.14", "flags": 64, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-06-16T08:10:00", "lines": 60, "newlines": 34, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n)Body  Expand(\\\\) Window(46,9)\n+Command ===>_zcmd   \\ \\ +\n%\n+Review/Update New Directory Info\n%\n+New Directory:_mkdir                        +\n+\n+Permissions:_mp + (755 is the default)\n+\n%ENTER+to continue, or%F3+to Cancel.\n)Init\n&zwinttl = 'ZIGI Make Directory (MKDIR)'\nif (&mp EQ &Z)\n    &mp = 755\nif (&mkdir = &Z)\n   .CURSOR = MKDIR\nif (&mkdir NE &Z)\n   .CURSOR = MP\n)Proc\n ver (&mkdir,nb)\n ver (&mp,nb,num)\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp)\nif resp = 'END' then exit\nparse value '' with zedsmsg zedlmsg\nbad = 0\n cmd = 'ls -la' mkdir\n x = bpxwunix(cmd,,so.,se.)\n if se.0 = 0 then do\n    zedsmsg = 'Error.'\n    zedlmsg = mkdir 'exists and it must not exist for MKDIR to work.'\n    bad = 2\n    end\n if bad = 0 then\n if mp /= 755 then\n Select\n   when datatype(mp) /= 'NUM' then bad = 1\n   when length(mp) > 3 then bad = 1\n   when mp /= 755 then do\n      if left(mp,1) > 7 then bad = 1\n      if substr(mp,2,1) > 7 then bad = 1\n      if right(mp,1) > 7 then bad = 1\n      end\n  otherwise nop\n  end\nif bad = 1 then do\n   zedsmsg = 'Invalid.'\n   zedlmsg = mp 'is not a valid file permission. Suggest using 755.'\n   end\n*ENDREXX\n IF (&zedsmsg NE &Z)\n    .MSG = ISRZ001\n    .CURSOR = MP\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIMER": {"ttr": 721, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x02\\x00\\x01\\x196_\\x01 \\x15\\x9f\\x08'\\x00#\\x00\\x1f\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.06", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 35, "newlines": 31, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  \u00dd type(output) intens(high) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Git Merge Processing+------------#zigtitle    +--------------------------------\n%Command ===>_zcmd   \\ \\  %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Current Repository : $zigirep\n+Current HLQ        : $pdshlq\n%\n+Type%M+to merge that branch into\u00ddbranch\n+Press%F3+to exit\n+\n+\n+S  Branch                                      Status\n)Model\n@z+$z                                         +$z\n)Init\n  .zvars = '(zsel bname brstatus)'\n  &newb=''\n  .cursor = &zcmd\n  .help = zigih270\n  &zgsr = CSR\n)Proc\n ver (&zsel,list,M)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIMRDS": {"ttr": 723, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x02\\x00\\x01\\x196_\\x01 \\x15\\x9f\\x08'\\x00-\\x00)\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.06", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 45, "newlines": 41, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Conflict Resolution+-------------#zigtitle    +--------------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Merge Conflict Resolution - Fix what's broke and Merge will Retry\n+\n+Options:%S+Edit%E+Edit%B+Browse%V+View\n+\n+Sel      Status     Dataset/File\n+\n)Model\n_z+      $z         $z\n)Init\n  .ZVARS = '(zsel mstat mdsn)'\n  &zgsr = CSR\n  .help = zigih270\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&zsel,list,S,B,E,V)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIMRGQ": {"ttr": 725, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x02\\x00\\x01\\x196_\\x01 \\x19?\\x12W\\x00\\x1c\\x00\\x17\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.03", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-07-11T12:57:00", "lines": 28, "newlines": 23, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input) caps(off) hilite(uscore) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\) Window(57,11)\n%Command ===>_zcmd\n+\n+Merge conflicts were encountered.\n+\n    %0+View Merge Report\n+   %1+Continue and attempt to resolve using ISPF Compare\n+   %2+Continue and attempt to resolve using ISPF Edit\n    %3+Abort the Merge\n+\n           +Select an option or%F3+to cancel\n+\n)Init\n&zwinttl = 'Git Merge Conflict Resolution'\n &ztut = 'mrg'\n vput (ztut)\n .help = zigih270\n)Proc\n ver (&zcmd,nb,list,0,1,2,3)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGINEW": {"ttr": 869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00U\\x01 \\x05\\x9f\\x01 #_\\x083\\x00[\\x00H\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-08-22T08:33:55", "lines": 91, "newlines": 72, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr\n @ type(input ) caps(off) hilite(uscore) intens(low)\n $ type(input ) caps(on ) hilite(uscore) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n  _ type( input) intens(low ) just(left ) hilite(uscore)\n)Body Expand(\\\\)\n+Create New Repository+-----------#zigtitle    +--------------------------------\n%Command ===>_zcmd\n+\n%Name:@zigirep                         +\n+\n%Local Directory:   +? to browse OMVS folder structure\n @localrep                                                                    +\n+\n%PREFIX for datasets:   $pdshlq                  +     no quotes\n%Default Push on Commit:$z+                            Y or N\n%Read Only:             $z+                            Y or blank\n+\n%Category for Repository:              @zigicat      + optional\n%Default Userid to set prior to Commit:$defruid +      or blank for no change\n%Specify zos-workingtree-encoding:     $encoding+      ibm-1047 if blank\n+\n+\n+\n+\n+\n+\n                  +Press%Enter+to continue, or%F3+to cancel\n)Init\n .help = zigih120\n .zvars = '(defcpush readonly)'\n)Reinit\n  REFRESH(LOCALREP)\n)Proc\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp csr pfxw)\n  zedsmsg = ''\n  if resp = 'END' then exit\n\n  pfxw = words(pdshlq)\n\n  if zedsmsg = '' then\n  if localrep /= '' then\n  if localrep /= '?' then do\n    x = bpxwunix('ls -la' localrep,,so.,se.)\n    if so.0 = 0 then do\n      zedsmsg = 'Error.'\n      zedlmsg = localrep 'does not exist. Create it and try again.'\n      csr = 'LOCALREP'\n    end\n    if so.0 > 3 then do\n      x = bpxwunix('ls -la' localrep'/.git',,so.,se.)\n      if so.0 > 0 then do\n        zedsmsg = 'Error.'\n        zedlmsg = localrep 'is currently a Git repository and thus' ,\n           'not valid for cloning.' ,\n          'Change to an empty directory and try again.'\n        csr = 'LOCALREP'\n      end\n    end\n  end\n\n    if zedsmsg = '' then\n    if length(defruid) = 8 then do\n      CVT      = C2D(Storage(10,4))\n      TVT      = C2D(Storage(D2X(CVT + 156),4))   /* cvt + 9c */\n      TSVTUMXL = C2D(Storage(D2X(tvt  + 6),1))  /* tvt + 6 */\n      if tsvtumxl < 8 then do\n        zedsmsg = 'Error'\n        zedlmsg = defruid 'is 8 characters and this system does not' ,\n          'support 8 character TSO userids at this time.'\n        csr = 'DEFRUID'\n      end\n    end\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .MSG = ISRZ001\n    .CURSOR = &CSR\n if (&zedsmsg EQ &Z)\n  ver (&zigirep,nb)\n  ver (&localrep,nb)\n  if (&pfxw = 1)\n      ver (&pdshlq,nb,dsname)\n  ver (&readonly,list,Y,N)\n  ver (&defcpush,nb,list,Y,N)\n  ver (&defruid,dsname)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIOLST": {"ttr": 729, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x02\\x00\\x01\\x196_\\x01 \\x17O\\x06Q\\x008\\x001\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.08", "flags": 2, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-22T06:51:00", "lines": 56, "newlines": 49, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(46,13)\n+\n+Enter Selection:_z                        +\n+\n+\u00a8Addall+   Add all Untracked to Git\n+\u00a8Commit+   Register all changes with Git\n+\u00a8GitCmd+   Issue Git Commands\n+\u00a8Gitlog+   Review the Git log\n+\u00a8Grep+     Search the repository for a string\n+\u00a8Locate+  _lstloc  +Locate a member\n+\u00a8Reset    +Reset all userids\n+\u00a8Sort+     Sort the member list\n+\u00a8Status+   Get current Git status\n              +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI PDS Member Commands'\n .zvars = '(zcmd)'\n .cursor = zcmd\n  &Addall = 'AddAll'\n  &Locate = 'Locate'\n  &Commit = 'Commit'\n  &gitcmd = 'GitCmd'\n  &gitlog = 'Gitlog'\n  &grep   = 'Grep'\n  &sort   = 'Sort'\n  &status = 'Status'\n  &reset  = 'Reset-IDs'\n  .help = zigih300\n)Proc\n*REXX(*)\n if abbrev('LOCATE',zcmd,1) = 1 then\n    zcmd = 'LOCATE' lstloc\n*ENDREXX\n if (&zcmd EQ 'LOCATE')\n    ver (&lstloc,nb)\n)PNTS\n FIELD(COMMIT) VAR(ZCMD) VAL('COMMIT')\n FIELD(GITCMD) VAR(ZCMD) VAL('GITCMD')\n FIELD(GITLOG) VAR(ZCMD) VAL('GITLOG')\n FIELD(GREP )  VAR(ZCMD) VAL('GREP')\n FIELD(RESET ) VAR(ZCMD) VAL('RESET')\n FIELD(SORT )  VAR(ZCMD) VAL('SORT')\n FIELD(STATUS) VAR(ZCMD) VAL('STATUS')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIONLY": {"ttr": 267, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x04\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 13, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n @ type(input ) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(41,4)\n+\n+Enter the Only Filter:@filter       +\n+\n+Press%Enter+to continue or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Only Prompt'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIOPRM": {"ttr": 731, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03@\\x00\\x01 \\x05\\x9f\\x01 \\x19?\\x04 \\x006\\x006\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.03", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-11T04:20:00", "lines": 54, "newlines": 54, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  } type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body  window(44,11)\n+Enter Selection:_z        +\n+\n \u00a8Clone+   Remote repository\n \u00a8Config+  View Git configuration\n \u00a8Create+  Local repo from scratch\n \u00a8Find+    String in table fields:_findstr +\n \u00a8Githelp+ Display menu of Git Help pages\n \u00a8SElect+  Select a Repository:}selfind +\n \u00a8SOrt+    Sort the table\n \u00a8SSH+     View your SSH public key\n             +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Local Repository Commands'\n .zvars = '(zcmd)'\n .cursor = zcmd\n &zcmd  = &z\n &clone   = 'Clone'\n &create  = 'Create'\n &ssh     = 'SSH'\n &find    = 'FIND'\n &select  = 'Select'\n &sort    = 'Sort'\n &config  = 'Config'\n &githelp = 'GitHelp'\n .help = zigih100\n)Proc\n*REXX(*)\n if abbrev('FIND',zcmd,1) = 1 then zcmd = 'FIND'\n*ENDREXX\n if (&zcmd EQ 'FIND')\n    ver (&findstr,nb)\n)PNTS\n FIELD(CLONE   ) VAR(ZCMD) VAL('CLONE')\n FIELD(CREATE  ) VAR(ZCMD) VAL('CREATE')\n FIELD(SELECT  ) VAR(ZCMD) VAL('SELECT')\n FIELD(SORT    ) VAR(ZCMD) VAL('SORT')\n FIELD(SSH     ) VAR(ZCMD) VAL('SSH')\n FIELD(CONFIG  ) VAR(ZCMD) VAL('CONFIG')\n FIELD(GITHELP ) VAR(ZCMD) VAL('GITHELP')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIOREP": {"ttr": 733, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x17/\\x10D\\x00^\\x00\\\\\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.10", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-20T10:44:00", "lines": 94, "newlines": 92, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00dd type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(76,14)\n+Enter Selection:_z        +\n+\n\u00ddAdd   +  Add dataset     \u00ddGitCMD + Git Commands    \u00ddSet+     Set Defaults\n\u00ddAddAll+  Add all to Git  \u00ddGitLog+  Query git log   \u00ddSnapshot+Create Escrow\n\u00ddBr    +  Change Branch   \u00ddGrep+    Find Strings    \u00ddStash+   Save Workspace\n\u00ddCheck+   Check z/OS DSNs \u00ddinfo+    Info on Repo    \u00ddStashL+  List Stashes\n\u00ddCommit+  Record Changes  \u00ddMerge+   Merge Branches  \u00ddStatus+  Git Status\n\u00ddConvrepo+Convert non-zigi\u00ddNetwork+ Network Report  \u00ddTag+     Git Tag\n\u00ddExtract+ Packaging       \u00ddPull+    Pull from origin\u00ddTagList+ List all Tags\n\u00ddFind+    Find in table   \u00ddPush+    Push to origin  \u00ddView+    OMVS Dir\n\u00ddFlow+    Flow Menu       \u00ddReplace+ Replace Datasets\n\u00ddGithelp+ Git Help        \u00ddRemote+  Add remote\n\n                           +Or%F3+to cancel\n)Init\n &zwinttl = 'ZIGI Current Repository Commands'\n .zvars = '(zcmd)'\n &zcmd  = &z\n .cursor = zcmd\n &Add     = 'AddDsn'\n &Addall  = 'AddAll'\n &Br      = 'Branch'\n &Check   = 'Check'\n &Commit  = 'Commit'\n &Convrepo = 'COnvrepo'\n &Find    = 'Find'\n &Flow    = 'Flow'\n &Gitcmd  = 'GitCmd'\n &Githelp = 'Githelp'\n &GitLog  = 'Gitlog'\n &Grep    = 'Grep'\n &Info    = 'Info'\n &Merge   = 'Merge'\n &Network = 'Network'\n &Pull    = 'Pull'\n &Push    = 'Push'\n &Replace = 'Replace'\n &Remote  = 'Remote'\n &Extract   = 'Extract'\n &Snapshot  = 'SnapShot'\n &Set     = 'Set'\n &Stash   = 'Stash'\n &StashL  = 'StashL'\n &Status  = 'Status'\n &Tag     = 'Tag'\n &TagList = 'TagList'\n &View    = 'View'\n  .help = zigih200\n)Proc\n if (&zcmd EQ 'LOCATE')\n    ver (&lstloc,nb)\n)PNTS\n FIELD(ADD   )  VAR(ZCMD) VAL('ADD')\n FIELD(ADDALL)  VAR(ZCMD) VAL('ADDALL')\n FIELD(BR    )  VAR(ZCMD) VAL('BRANCH')\n FIELD(CHECK )  VAR(ZCMD) VAL('CHECK')\n FIELD(COMMIT)  VAR(ZCMD) VAL('COMMIT')\n FIELD(CONVREPO)  VAR(ZCMD) VAL('CONVREPO')\n FIELD(GITCMD)  VAR(ZCMD) VAL('GITCMD')\n FIELD(FIND  )  VAR(ZCMD) VAL('FIND')\n FIELD(FLOW  )  VAR(ZCMD) VAL('FLOW')\n FIELD(GITHELP) VAR(ZCMD) VAL('GITHELP')\n FIELD(GITLOG)  VAR(ZCMD) VAL('GITLOG')\n FIELD(GREP  )  VAR(ZCMD) VAL('GREP')\n FIELD(INFO  )  VAR(ZCMD) VAL('INFO')\n FIELD(MERGE)   VAR(ZCMD) VAL('MERGE')\n FIELD(NETWORK) VAR(ZCMD) VAL('NETWORK')\n FIELD(PULL  )  VAR(ZCMD) VAL('PULL')\n FIELD(PUSH  )  VAR(ZCMD) VAL('PUSH')\n FIELD(REPLACE) VAR(ZCMD) VAL('REPLACE')\n FIELD(REMOTE)  VAR(ZCMD) VAL('REMOTE')\n FIELD(EXTRACT) VAR(ZCMD) VAL('EXTRACT')\n FIELD(SNAPSHOT) VAR(ZCMD) VAL('SNAPSHOT')\n FIELD(SET   )  VAR(ZCMD) VAL('SET')\n FIELD(STASH )  VAR(ZCMD) VAL('STASH')\n FIELD(STASHL)  VAR(ZCMD) VAL('STASHL')\n FIELD(STATUS)  VAR(ZCMD) VAL('STATUS')\n FIELD(TAG   )  VAR(ZCMD) VAL('TAG')\n FIELD(TAGLIST) VAR(ZCMD) VAL('TAGLIST')\n FIELD(VIEW  )  VAR(ZCMD) VAL('VIEW')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIOTAG": {"ttr": 273, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00.\\x00.\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(35,5)\n+Enter Selection:_z        +\n+\n+\u00a8Only+    Filter:_fw             +\n+\u00a8Replace+ Replace the table\n         +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI TagList Commands'\n .zvars = '(zcmd)'\n .cursor = zcmd\n &zcmd  = &z\n &fw = &z\n &only   = 'Only'\n &Replace = 'Replace'\n)Proc\n*REXX(* zcmd zsel fw zedsmsg zedlmsg)\n  zedsmsg = ''\n  if fw /= '' then zcmd = 'O' fw\n  if zcmd = '' then exit\n  if zcmd = 'R' then exit\n  if zcmd = 'O' then do\n     if fw = '' then do\n        zedsmsg = 'Error.'\n        zedlmsg = 'Only requires a filter.'\n        end\n  else zcmd = zcmd fw\n  end\n  Call ISPPRXVP 'T'\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .msg = isrz001\n)PNTS\n  Field(Replace) var(zcmd) val('Replace')\n  Field(only  ) var(zcmd) val('O')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIOTBL": {"ttr": 275, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04B\\x00\\x01\\x196_\\x01 \\x13\\x0f\\x14F\\x00\\x1b\\x00\\x17\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-05-09T14:46:00", "lines": 27, "newlines": 23, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  @ type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+OMVS Selection+------------------@zigtitle   +---------------------------------\n%Command ===>_zcmd\n+ \\ \\%F3  +\n+Directory: $fromdir\n%\n%S  T OMVS File                                               Date         Perm\n)Model\n_z+$z$z                                                      $z           $z  +\n)Init\n  .zvars = '(ocsel otype ofile odate operm)'\n  .cursor = &zcmd\n  .help = zigih121\n)Proc\n if (&zcmd EQ &z)\n    ver (&ocsel,list,B,I,S,L,b,i,s,l,&z)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOP": {"ttr": 277, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01\\x192\\x1f\\x01 \\x13_\\x04\\x15\\x00\\x0f\\x00\\x0b\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-05-14T04:15:00", "lines": 15, "newlines": 11, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n)Body Window(60,4)\n+\n  $zs1\n  $zs2\n\n)Init\n &zwinttl = 'ZIGI Status Popup'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOPC": {"ttr": 283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\tB\\x00\\x01\\x192/\\x01 \\x13_\\x11$\\x00\\x18\\x00\\x13\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-05-14T11:24:00", "lines": 24, "newlines": 19, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n)Body Window(68,13)\n+\n $zs1\n $zs2\n $zs3\n $zs4\n $zs5\n $zs6\n $zs7\n $zs8\n+\n $zs9\n+\n $zs10\n)Init\n &zwinttl = 'ZIGI Check Out Processing'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOPH": {"ttr": 285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0cB\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x14\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.12", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 20, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(47,7)\n+Confirm you really want to perform a rollback\n+to the selected Commit level?\n+\n%New Branch Name:_newbr                      +\n+The new branch will be at the rollback level.\n+\n      %ENTER+to continue, or%F3+to cancel\n)Init\n &zwinttl = 'ZIGI Prompt Popup'\n)Proc\n ver (&newbr,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOPN": {"ttr": 737, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02@\\x00\\x01 \\x05\\x9f\\x01 \\x16?\\x06B\\x00\\x12\\x00\\x15\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-11T06:42:00", "lines": 18, "newlines": 21, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(55,6)\n+The Git repository that you requested is not eligible\n+to be managed by ZIGI but it has been retained and\n+may be converted.\n+\n+Press%F3+to close this window and display the tutorial\n+on how to make a repository eligible for zigi.\n)Init\n &zwinttl = 'ZIGI Prompt Popup'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOPQ": {"ttr": 289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x10\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 16, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(41,4)\n+\n  $zs1\n  $zs2\n  +Answer:_answer                     +\n)Init\n &zwinttl = 'ZIGI Prompt Popup'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOPR": {"ttr": 291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(48,3)\n  +Confirm you really want to perform a full\n  +Replace (replacement) of your z/OS datasets:\n  +===>_z  +(YES or NO or F3)\n)Init\n .zvars = '(refa)'\n &zwinttl = 'ZIGI Prompt Popup'\n)Proc\n ver (&refa,nb,list,YES,NO)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOP3": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08@\\x00\\x01\\x192\\x1f\\x01 \\x17\\x8f\\x03C\\x00\\x10\\x00\\x0b\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.08", "flags": 64, "createdate": "2019-11-17T00:00:00", "modifydate": "2020-06-26T03:43:00", "lines": 16, "newlines": 11, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(output) caps(off)\n)Body Window(73,5)\n+\n $zs1                                                                   +\n $zs2\n $zs3\n\n)Init\n &zwinttl = 'ZIGI Status Popup'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPOP4": {"ttr": 281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 13, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n)Body Window(62,6)\n+\n  $zs1\n  $zs2\n  $zs3\n  $zs4\n\n)Init\n &zwinttl = 'ZIGI Status Popup'\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPRIM": {"ttr": 819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00%\\x01 \\x05\\x9f\\x01 \"\\x7f\\t\\x11\\x00J\\x00H\\x00\\x00\\xe2\\xd3\\xc2\\xc4@@@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-08-14T09:11:25", "lines": 74, "newlines": 72, "modlines": 0, "user": "SLBD"}, "text": ")Attr\n $ type(output) caps(off) color(&srr)\n \u00a8 type(output) caps(off) intens(low) color(&srp)\n \u00dd type(output) caps(off) intens(low) color(&src)\n } type(output) caps(off) intens(low) just(right) color(&srl)\n { type(input) caps(off) hilite(uscore) intens(low)\n _ type(input) caps(on ) hilite(uscore) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n @ type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n | TYPE(AB)           /* Action bar                */\n < TYPE(ABSL) GE(ON)  /* Action bar separator line */\n)ABC DESC('Commands')\n PDC DESC('Clone Remote repository')             ACTION RUN(CLONE)\n PDC DESC('Config View/Update Configuration')    ACTION RUN(CONFIG)\n PDC DESC('Create Local repository')             ACTION RUN(CREATE)\n PDC DESC('Find text in table')                  ACTION RUN(FIND)\n PDC DESC('Select a Repo to work with')          ACTION RUN(SELECT)\n PDC DESC('Sort the Table')                      ACTION RUN(SORT)\n PDC DESC('View your SSH public key')            ACTION RUN(SSH)\n PDC DESC('End') Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUX'\n)ABC DESC(Help)\n PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')\n PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')\n PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')\n PDC DESC('GIT Help') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%GITHELP)')\n PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigihint')\n)ABCINIT\n  .ZVARS = HELPX\n)Body Expand(\\\\)\n+| Commands | Help +\n<-----------\\-\\--------------------------------+\n+Local Repositories+--------------#zigtitle    +--------------------------------\n%Command ===>{zcmd       \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n%    @repo      +           @pref  +               @cat     +      @last       +\n)Model\n_z+  $z                    +\u00a8z                    +\u00ddz             +}z          +\n)Init\n &cat     = 'Category'\n &last    = 'Last Access'\n &pref    = 'Prefix'\n &repo    = 'Repository'\n &zgsr = CSR\n .zvars = '(zsel reponame pdshlq zigicat zigidate)'\n .help = zigihint\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&zsel,list,I,S,D,V,/)\n)PNTS\n FIELD(CAT     ) VAR(ZCMD) VAL('SORT CATEGORY')\n FIELD(LAST    ) VAR(ZCMD) VAL('SORT LAST')\n FIELD(PREF    ) VAR(ZCMD) VAL('SORT PREFIX')\n FIELD(REPO    ) VAR(ZCMD) VAL('SORT REPOSITORY')\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIPSRT": {"ttr": 295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x18\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 24, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n + type(text) skip(on) intens(low)\n)Body Window(52,7)\n+\n+Enter Primary Sort Key:  _z+   Order:_z+\n+Enter Secondary Sort Key:_z+   Order:_z+\n\n+Sort Keys: %C+Category%D+Date%P+Prefix%R+Repository\n+Sort Order:%A+(ascending)%D+(descending)\n+\n)Init\n .zvars = '(skey sopt skey2 sopt2)'\n &zwinttl = 'ZIGI Sort Selections'\n)Proc\n ver (&skey,nb,list,R,C,P,D,L)\n ver (&sopt,nb,list,A,D)\n ver (&skey2,list,R,C,P,D,L)\n ver (&sopt2,list,A,D)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIREMO": {"ttr": 741, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t@\\x00\\x01\\x196_\\x01 \\x19/\\x04\\x00\\x00>\\x00\\x18\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.09", "flags": 64, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-07-10T04:00:00", "lines": 62, "newlines": 24, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(input ) caps(on ) hilite(uscore) intens(low)\n _ type(input) caps(off) hilite(uscore) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\)\n+Add Remote+----------------------#zigtitle    +--------------------------------\n%Command ===>_zcmd\n+\n+Add remote _origin\n                                                                         +\n+\n+Default Push on Commit:$z+(Y or N)\n+\n+Default Userid to set prior to Commit:$defruid + or blank\n+\n+This will execute a 'git remote add origin' followed by a\n+'git push -u origin master'.\n+\n+Make sure the remote repository exists and you're authorized to\n+push to master.\n+\n%Note:+This is best done on a 'brand new' repository :-)\n+\n+\n+\n+\n                     +Press%Enter+to continue%F3+to cancel\n)Init\n .zvars = '(defcpush)'\n)Reinit\n REFRESH(origin)\n)Proc\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp csr)\n  zedsmsg = ''\n  if word(origin,1) = 'git' then\n     if word(origin,2) = 'clone' then\n     origin = subword(origin,3)\n  if length(defruid) = 8 then do\n    CVT      = C2D(Storage(10,4))\n    TVT      = C2D(Storage(D2X(CVT + 156),4))   /* cvt + 9c */\n    TSVTUMXL = C2D(Storage(D2X(tvt  + 6),1))  /* tvt + 6 */\n    if tsvtumxl < 8 then do\n      zedsmsg = 'Error'\n      zedlmsg = defruid 'is 8 characters and this system does not' ,\n        'support 8 character TSO userids at this time.'\n      csr = 'DEFRUID'\n    end\n  end\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .MSG = ISRZ001\n    .CURSOR = &CSR\n if (&zedsmsg EQ &Z)\n  ver (&origin,nb)\n  ver (&defcpush,nb,list,Y,N)\n  ver (&defruid,dsname)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIREMQ": {"ttr": 299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\nB\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x16\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.10", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 22, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(66,7)\n+Confirm you really want to%remove+the dataset and/or file\n+from the repository%and delete+from z/OS and OMVS:\n+\n+Requested removal:$rxdsn                                        +\n+\n+Confirm removal:      _z  +(YES or NO or F3)\n+Turn Confirmation off:_z  +(YES or NO)\n)Init\n .zvars = '(rema remc)'\n &zwinttl = 'ZIGI Remove Prompt'\n)Proc\n ver (&rema,nb,list,YES,NO)\n ver (&remc,nb,list,YES,NO)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRENA": {"ttr": 301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07B\\x00\\x01\\x193\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\x19\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 66, "createdate": "2019-12-03T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 25, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(on )\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(58,4)\n+Rename:  $fulldsnq\n+New Name:_newdsn                                        +\n+\n             %Enter+to continue%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Dataset/File Rename'\n)Proc\n  ver (&newdsn,nb,dsnameq)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRENM": {"ttr": 303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01\\x193\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\x19\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2019-12-03T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 25, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(on )\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(32,4)\n+Current Member:$mem\n+New Member:    _newmem  +\n+\n%Enter+to continue%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI PDS Member Rename'\n)Proc\n  ver (&newmem,nb,dsname)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRENO": {"ttr": 305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\tB\\x00\\x01\\x193\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00\\x11\\x00\\x19\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 66, "createdate": "2019-12-03T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 17, "newlines": 25, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(on )\n _ type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(76,4)\n+Rename:  $fulldsnq\n+New Name:_newdsn                                                          +\n+\n             %Enter+to continue%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI OVMVS File Rename'\n)Proc\n  ver (&newdsn,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIREPO": {"ttr": 821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00%\\x01 \\x05\\x9f\\x01 \"\\x7f\\x11 \\x00u\\x00c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0\\xf1@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-08-14T11:20:25", "lines": 117, "newlines": 99, "modlines": 0, "user": "ZIGI301"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  \u00a8 type(output) intens(low ) caps(off) just(left ) color(green)\n  ! type(output) intens(high) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00dd type(output) caps(off) pas(on) intens(high) color(white)\n | TYPE(AB)           /* Action bar                */\n < TYPE(ABSL) GE(ON)  /* Action bar separator line */\n)ABC DESC('General') MNEM(1)\n PDC DESC('Find in table')                      ACTION RUN(Find    )\n PDC DESC('Repository Info')                    ACTION RUN(Info    )\n PDC DESC('View OMVS Filesystem')               ACTION RUN(View    )\n PDC DESC('Git Log Query')                      ACTION RUN(GitLog  )\n PDC DESC('Git Command Interface')              ACTION RUN(gitcmd)\n PDC DESC('Refresh Status')                     ACTION RUN(Check   )\n PDC DESC('Replace z/OS Datasets from Repo')    ACTION RUN(Replace )\n PDC DESC('Set Defaults')                       ACTION RUN(Set     )\n PDC DESC('End')                                Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUG'\n)ABC DESC('Local Repo') MNEM(1)\n PDC DESC('Add dataset(s)')                     ACTION RUN(Add     )\n PDC DESC('Add All Modified/Untracked')         ACTION RUN(AddAll  )\n PDC DESC('Commit Changes')                     ACTION RUN(Commit  )\n PDC DESC('Stash')                              ACTION RUN(Stash   )\n PDC DESC('Stash List' )                        ACTION RUN(StashL  )\n PDC DESC('Extract or Rollback')                ACTION RUN(Extract)\n PDC DESC('Tag')                                ACTION RUN(Tag     )\n PDC DESC('Tag List')                           ACTION RUN(TagList )\n PDC DESC('Create / Checkout Branch')           ACTION RUN(Br      )\n PDC DESC('Merge Branches')                     ACTION RUN(Merge   )\n PDC DESC('End')                                Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUM'\n)ABC DESC('Remote Repo') MNEM(1)\n PDC DESC('Add Remote to Repo')                 ACTION RUN(Remote  )\n PDC DESC('Pull from Remote Repository')        ACTION RUN(Pull    )\n PDC DESC('Push to Remote Repository' )         ACTION RUN(Push    )\n PDC DESC('Fetch Updated Repo Data')            ACTION RUN(Fetch   )\n PDC DESC('End')                                Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUY'\n)ABC DESC('Handy Functions') MNEM(1)\n PDC DESC('Find String in Repo Files')          ACTION RUN(Grep    )\n PDC DESC('Git Status')                         ACTION RUN(Status  )\n PDC DESC('Start ZIGIFLOW')                     ACTION RUN(FLOWGO)\n PDC DESC('Finish ZIGIFLOW')                    ACTION RUN(FLOWEND)\n PDC DESC('Select Unfinished ZIGIFLOW')         ACTION RUN(FLOWSEL)\n PDC DESC('Git Network Report')                 ACTION RUN(Network )\n PDC DESC('Create Escrow Copy')                 ACTION RUN(Snapshot)\n PDC DESC('Convert non-ZIGI Repository')        ACTION RUN(Convrepo)\n PDC DESC('End')                                Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUH'\n)ABC DESC(Help) MNEM(1)\n PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')\n PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')\n PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')\n PDC DESC('Git Help') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%GITHELP)')\n PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigih200')\n PDC DESC('End')                                Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUZ'\n)Body  Expand(\\\\)\n+| General | Local Repo | Remote Repo | Handy Functions | Help +\n<-----------\\-\\--------------------------------+\n+Current Repository+--------------#zigtitle    +--------------------------------\n%Command ===>_zcmd            \\ \\  %Scroll ===>_zgsr+\n+Local dir     :$localdir                                                 %F3  +\n+Remote path   :$remote1                                                    $z\n+Current Branch:$branch                                      +\n%               !bstat                                                     +\n!ro             $baction                                                   +\n+\n%S  Status                    Dataset/File Name\n)Model\n@z +$z                       $z                                            \u00a8z\n)Init\n .zvars = '(sind zsel dsnstat fulldsn filetype)'\n .cursor = &zcmd\n .help = zigih200\n &zgsr = CSR\n vget (readonly) shared\n *REXX(readonly ro)\n  if readonly = 0 then ro = ''\n  else ro = 'ReadOnly'\n *EndRexx\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n if (&zsel = 'MV')\n     &zsel = 'RN'\n/*  ver (&zsel,list,S,A,U,B,V,RM,RN,H,D,/) */\n)Field\n Field(remote1) ind(sind,'<>') len(255)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRESQ": {"ttr": 745, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x02\\x00\\x01 \\x01\\x1f\\x01 \\x19?\\x04\"\\x00n\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.20", "flags": 2, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-07-11T04:22:00", "lines": 110, "newlines": 13, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n # type(input)  caps(on) hilite(uscore) intens(low)\n)Body Window(61,12)\n+\n+Recover a historical level of:\n$relement\n+\n+Enter the recovery dataset:\n_rdsn                                                      +\n+\n+Allocate Recovery dataset if it does not exist:#z+(Y or N)\n+\n+Confirm Recovery:#z+(Y or N)\n+\n+Press%Enter+to continue or%F3+to Cancel.\n)Init\n &zwinttl = 'ZIGI History Recovery'\n .zvars = '(ralc rans)'\n .CURSOR = RDSN\n &rover = &Z\n)Proc\n &resp = .resp\n*rexx(* rdsn zedsmsg zedlmsg resp rover csr rans ralc)\n  if resp = 'END' then exit\n  parse value '' with zedsmsg zedlmsg csr null\n  msgvalue = msg()              /* Save the current TSO Message State */\n  call msg 'off'                /* Turn off TSO Messages */\n\n  if left(rdsn,1) /= \"'\" then do\n     if sysvar('syspref') = null\n        then pref = sysvar('sysuid')\n        else pref = sysvar('syspref')\n     rdsn = \"'\"pref\".\"rdsn\"'\"\n     end\n\n  teste = strip(relement,'B',\"'\")\n  testr = strip(rdsn,'B',\"'\")\n  parse value teste with teste'('.\n  parse value testr with testr'('.\n\n  if zedsmsg = null then\n  if rover /= 1 then\n  if teste = testr then do\n    rans = null\n    rover = 1\n    zedsmsg = 'Warning.'\n    zedlmsg = 'You are about to overlay the active element. You must confirm' ,\n      'a second time if you wish to proceed.'\n    csr = 'RDSN'\n  end\n  if zedsmsg = null then do\n    if left(rdsn,1) = '/' then do\n      zedsmsg = 'Error.'\n      zedlmsg = 'Recovery of history OMVS files is not supported at this time.'\n      csr = 'RDSN'\n    end\n  end\n  if zedsmsg = null then\n  if ralc = 'Y' then do\n    x = listdsi(relement)\n    if sysdsorg = 'PO' then\n    if pos('(',rdsn) = 0 then do\n      zedsmsg = 'Error.'\n      zedlmsg = 'The source dataset is a PDS and thus the recovery' ,\n        'dataset must be a PDS. A member name is required. Try again.'\n      csr = 'RDSN'\n    end\n  end\n  if zedsmsg = null then\n  if ralc = 'N' then do\n    x = listdsi(rdsn)\n    if x > 0 then do\n      zedsmsg = 'Error.'\n      zedlmsg = SYSMSGLVL2\n      csr = 'RDSN'\n    end\n  end\n  else\n  if sysdsorg = 'PO' then if pos('(',rdsn) = 0 then do\n    zedsmsg = 'Error.'\n    zedlmsg = 'The recovery dataset is a PDS and NO member name' ,\n      'was specified - try again.'\n    csr = 'RDSN'\n  end\n  if zedsmsg = null then do\n    if pos(rans,'YN') = 0 then do\n      zedsmsg = 'Required.'\n      zedlmsg = 'Confirm enter Y for Yes or N for No.'\n      csr = 'RANS'\n    end\n    if pos(ralc,'YN') = 0 then do\n      zedsmsg = 'Required.'\n      zedlmsg = 'Allocate enter Y for Yes or N for No.'\n      csr = 'RALC'\n    end\n  end\n  call msg msgvalue             /* Restore TSO Message State */\n*Endrexx\n if (&zedsmsg NE &Z)\n    .msg = isrz001\n   .CURSOR = &csr\n if (&csr NE &Z)\n   .CURSOR = &csr\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIRGRP": {"ttr": 311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10B\\x00\\x01\\x192\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00&\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 66, "createdate": "2019-11-23T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 38, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body  window(36,8)\n+\n+Enter Selection:_z+\n+\n+\u00a8Browse+(B)+Browse the dataset/file\n+\u00a8Edit+  (E)+Edit the dataset/file\n+\u00a8Select+(S)+Edit the dataset/file\n+\u00a8View+  (V)+View the dataset/file\n         +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Grep Selection Options'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &edit   = 'Edit'\n &browse = 'Browse'\n &select = 'Select'\n &view   = 'View'\n)Proc\n ver (&zsel,list,B,E,V)\n)PNTS\n  Field(browse) var(zsel) val('B')\n  Field(edit  ) var(zsel) val('E')\n  Field(select) var(zsel) val('E')\n  Field(view  ) var(zsel) val('V')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRHST": {"ttr": 313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15B\\x00\\x01\\x192\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00#\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.21", "flags": 66, "createdate": "2019-11-23T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 35, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(42,7)\n+\n+Enter Selection:_z+\n+\n+\u00a8Commit+ (C) View Commit history\n+\u00a8Recover+(R) Recover the historical Level\n+\u00a8Select+ (S) View the dataset/file\n            +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI History Selection Options'\n .zvars = '(zsel)'\n .cursor  = zsel\n &zsel    = &z\n &select  = 'Select'\n &commit  = 'Commit'\n &recover = 'Recover'\n)Proc\n ver (&zsel,list,R,S,C)\n)PNTS\n  Field(commit ) var(zsel) val('C')\n  Field(select ) var(zsel) val('S')\n  Field(recover) var(zsel) val('R')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRLST": {"ttr": 315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0eB\\x00\\x01\\x196_\\x01 \\x12\\x8f\\x07W\\x00J\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.14", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-05-07T07:57:00", "lines": 74, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(56,16)\n+Member:@mem             $exth      @extf\n+\n+Enter Selection:_z +\n+\n+\u00a8Add+    (A)+ Add the member as Text to the Git Index\n+\u00a8AddBin+ (AB)+Add the member as Binary to the Git Index\n+\u00a8Browse+ (B)+ Browse the dataset/file\n+\u00a8Edit+   (E)+ Edit the dataset/file\n+\u00a8Diff+   (D)+ Show the Diff's\n+\u00a8History+(H)+ Display Commit History\n+\u00a8Remove+ (RM)+Remove the element\n+\u00a8Rename+ (RN)+Rename the element\n+\u00a8Select+ (S)+ Edit the dataset/file\n+\u00a8Undo+   (U)+ Undo an UnCommitted Change\n+\u00a8View+   (V)+ View the dataset/file\n                   +Or%F3+to cancel.\n)Init\n*REXX(* exth extf extens)\n parse value '' with exth extf null\n if extens /= null then do\n    exth = 'OMVS File:'\n    extf = lower(mem)'.'extens\n    end\nif xx = 1 then do\nlower:\n parse arg input\n out = translate(input,\"abcdefghijklmnopqrstuvwxyz\",,\n                       \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n return out\n end\n*ENDREXX\n &zwinttl = 'ZIGI PDS Member Selection Options'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &edit    = 'Edit'\n &view    = 'View'\n &add     = 'Add'\n &addbin  = 'AddBin'\n &browse  = 'Browse'\n &diff    = 'Diff'\n &history = 'History'\n &remove  = 'Remove'\n &rename  = 'Rename'\n &select  = 'Select'\n &undo    = 'Undo'\n)Proc\n ver (&zsel,list,A,AB,B,E,D,H,RM,RN,S,U,V)\n)PNTS\n  Field(add    ) var(zsel) val('A')\n  Field(addbin ) var(zsel) val('AB')\n  Field(browse ) var(zsel) val('B')\n  Field(diff   ) var(zsel) val('D')\n  Field(edit   ) var(zsel) val('S')\n  Field(select ) var(zsel) val('S')\n  Field(history) var(zsel) val('H')\n  Field(remove ) var(zsel) val('RM')\n  Field(rename ) var(zsel) val('RN')\n  Field(undo   ) var(zsel) val('U')\n  Field(view   ) var(zsel) val('V')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/x-pascal", "datatype": "ebcdic", "extension": ".p"}, "ZIGIRMRG": {"ttr": 317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10B\\x00\\x01\\x192\\x7f\\x01 \\x11\\x8f\\x06\\t\\x00&\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 66, "createdate": "2019-11-23T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 38, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body  Window(36,8)\n+\n+Enter Selection:_z+\n+\n+\u00a8Browse+(B)+Browse the dataset/file\n+\u00a8Edit+  (E)+Edit the dataset/file\n+\u00a8Select+(S)+Edit the dataset/file\n+\u00a8View+  (V)+View the dataset/file\n         +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Merge Selection Options'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &edit   = 'Edit'\n &browse = 'Browse'\n &select = 'Select'\n &view   = 'View'\n)Proc\n ver (&zsel,list,B,E,V)\n)PNTS\n  Field(browse) var(zsel) val('B')\n  Field(edit  ) var(zsel) val('E')\n  Field(select) var(zsel) val('E')\n  Field(view  ) var(zsel) val('V')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRMSQ": {"ttr": 319, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\rB\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x18\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.13", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 24, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(76,8)\n+Confirm removal of sequential dataset and/or OMVS file\n+from the repository and git:\n+\n+Requested removal:$rxdsn                                        +\n+\n+Confirm Git removal:  _z  +(YES or NO or%F3+to cancel)\n+Confirm delete:       _z+  (Z for z/OS, O for OMVS, B for both, N for none)\n+Turn Confirmation off:_z  +(YES or NO)\n)Init\n .zvars = '(rema remq remc)'\n &zwinttl = 'ZIGI Remove Prompt'\n)Proc\n ver (&rema,nb,list,YES,NO)\n ver (&remq,nb,list,Z,O,B,N)\n ver (&remc,nb,list,YES,NO)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRPRM": {"ttr": 321, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00(\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 40, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(37,10)\n+\n+Repository:@zigirep\n+\n+Enter Selection:_z+\n+\n+\u00a8Select+(S)+Work with Repository\n+\u00a8Info+  (I)+Info on the Repository\n+\u00a8View+  (V)+View the OMVS filesystem\n+\u00a8Delete+(D)+Delete the Repository\n          +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Local Repository Selections'\n .zvars = '(zsel)'\n &zsel  = &z\n .cursor = zsel\n &select = 'Select'\n &delete = 'Delete'\n &view   = 'View'\n &Info   = 'Info'\n)Proc\n ver (&zsel,list,S,V,D,I)\n)PNTS\n  Field(select) var(zsel) val('S')\n  Field(delete) var(zsel) val('D')\n  Field(view  ) var(zsel) val('V')\n  Field(info  ) var(zsel) val('I')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRREP": {"ttr": 323, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08B\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00;\\x000\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 59, "newlines": 48, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(58,15)\n+DSN/File:@fulldsn                                       +\n+\n+Enter Selection:_z +\n+\n+\u00a8Add+    (A)+ Add the dataset/file to the git Index\n+\u00a8Browse+ (B)+ Browse the dataset/file\n+\u00a8Edit+   (E)+ Edit the dataset/file\n+\u00a8Diff+   (D)+ Show the Diff's\n+\u00a8History+(H)+ Display Commit History\n+\u00a8Remove+ (RM)+Remove the dataset/file\n+\u00a8Rename+ (RN)+Rename the dataset/file\n+\u00a8Select+ (S)+ Edit the dataset/file\n+\u00a8Undo+   (U)+ Undo an UnCommitted change\n+\u00a8View+   (V)+ View the dataset/file\n              +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Current Repository Selections'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &add     = 'Add'\n &browse  = 'Browse'\n &diff    = 'Diff'\n &edit    = 'Edit'\n &history = 'History'\n &remove  = 'Remove'\n &rename  = 'Rename'\n &select  = 'Select'\n &undo    = 'Undo'\n &view    = 'View'\n)Proc\n if (&zsel = 'E')\n     &zsel = 'S'\n ver (&zsel,list,A,B,D,E,H,RM,RN,V,S,U)\n)PNTS\n  Field(add    ) var(zsel) val('A')\n  Field(browse ) var(zsel) val('B')\n  Field(diff   ) var(zsel) val('D')\n  Field(edit   ) var(zsel) val('S')\n  Field(history) var(zsel) val('H')\n  Field(select ) var(zsel) val('S')\n  Field(remove ) var(zsel) val('RM')\n  Field(rename ) var(zsel) val('RN')\n  Field(undo   ) var(zsel) val('U')\n  Field(view   ) var(zsel) val('V')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRSET": {"ttr": 751, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14@\\x00\\x01\\x192/\\x01 \\x18\\x7f\\x14\\x00\\x00V\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.20", "flags": 64, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-07-05T14:00:00", "lines": 86, "newlines": 34, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n)Body Window(65,13) Expand(\\\\)\n+Command ===>_zcmd   \\ \\ +\n%\n+Review/Update Repository Settings:\n%\n+Name of the Repository: _reponame           +\n+Category for Repository:_zigicat      + (optional)\n+PREFIX for datasets:    @pdshlqn                 + (no quotes)\n+Default Push on Commit: @z+(Y or N)\n+Default Userid to set prior to Commit:       @defruid + or blank\n+Disable File Extension Prompt on Dataset Add:@z+(Y or N)\n+Prime Respository with zginstall.rex:        @z+(Y or N)\n+\n%ENTER+to register updates and%F3+to Cancel or Leave the panel.\n)Init\n&zwinttl = 'ZIGI Set Defaults for Repository'\n .zvars = '(defcpush extans zginst)'\n if (&pdshlqn = &Z)\n    .cursor = PDSHLQN\n if (&defcpush = &Z)\n    .cursor = DEFCPUSH\n if (&defruid = &Z)\n    .cursor = DEFRUID\n if (&extans = &Z)\n    &extans = 'N'\n    .cursor = EXTANS\n if (&zginst = &Z)\n    &zginst = 'N'\n    .cursor = ZGINST\n .help = zigih2e0\n &zgsr = CSR\n)Proc\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp csr pdshlq pdshlqn)\n  zedsmsg = ''\n  if pos(' ',reponame) > 0 then do\n    zedsmsg = 'Error'\n    zedlmsg = 'The Repository Name may not have blanks. Use a - or _',\n              'in place of a blank.'\n    csr = 'reponame'\n  end\n\n  if zedsmsg = '' then\n  if pdshlq /= pdshlqn then do\n     hn = translate(pdshlqn,' ','.')\n     ho = translate(pdshlq,' ','.')\n     if words(hn) /= words(ho) then do\n        zedsmsg = 'Error'\n        zedlmsg = pdshlqn 'must have only' words(ho) 'qualifiers and' ,\n                 'it has' words(hn) 'qualifiers. Correct this and try' ,\n                 'again.'\n        end\n     end\n  if zedsmsg = '' then\n  if length(defruid) = 8 then do\n    CVT      = C2D(Storage(10,4))\n    TVT      = C2D(Storage(D2X(CVT + 156),4))   /* cvt + 9c */\n    TSVTUMXL = C2D(Storage(D2X(tvt  + 6),1))  /* tvt + 6 */\n    if tsvtumxl < 8 then do\n      zedsmsg = 'Error'\n      zedlmsg = defruid 'is 8 characters and this system does not' ,\n        'support 8 character TSO userids at this time.'\n      csr = 'DEFRUID'\n    end\n  end\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .MSG = ISRZ001\n    .CURSOR = &CSR\n if (&zedsmsg EQ &Z)\n ver (&pdshlqn,dsname)\n ver (&defcpush,nb,list,Y,N)\n ver (&extans,nb,list,Y,N)\n ver (&zginst,nb,list,Y,N)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRSID": {"ttr": 327, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00#\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 35, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(input)  caps(on ) hilite(uscore) intens(low)\n)Body Window(45,4)\n+\n+Enter the userid to be set for all members:\n+Userid:$resetid +\n+\n)Init\n &zwinttl = 'ZIGI Reset ID Prompt'\n)Proc\n &resp = .resp\n*REXX(* zedsmsg zedlmsg resp csr)\n  zedsmsg = ''\n  if length(resetid) = 8 then do\n    CVT      = C2D(Storage(10,4))\n    TVT      = C2D(Storage(D2X(CVT + 156),4))   /* cvt + 9c */\n    TSVTUMXL = C2D(Storage(D2X(tvt  + 6),1))  /* tvt + 6 */\n    if tsvtumxl < 8 then do\n      zedsmsg = 'Error'\n      zedlmsg = resetid 'is 8 characters and this system does not' ,\n        'support 8 character TSO userids at this time.'\n      csr = 'resetid'\n    end\n  end\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .MSG = ISRZ001\n    .CURSOR = &CSR\n if (&zedsmsg EQ &Z)\n  ver (&resetid,nb,dsname)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRSTH": {"ttr": 329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\nB\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00)\\x00(\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.10", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 41, "newlines": 40, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(45,9)\n+\n+Enter Selection:_z+\n+\n+\u00a8BRanch+ (B)+ Create a new branch from stash\n+\u00a8Diff+   (D)+ Show the diff's for the stash\n+\u00a8Pop+    (P)+ Restore a stash\n+\u00a8Remove+ (R)+ Remove (Drop) the stash\n+\u00a8Show+   (S)+ Show stash summary\n             +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Stash Row Selection Options'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &branch  = 'Branch'\n &diff    = 'Diff'\n &pop     = 'Pop'\n &remove  = 'Remove'\n &show    = 'Show'\n)Proc\n ver (&zsel,list,B,D,R,P,S)\n)PNTS\n  Field(branch ) var(zsel) val('B')\n  Field(diff   ) var(zsel) val('D')\n  Field(remove ) var(zsel) val('R')\n  Field(pop    ) var(zsel) val('P')\n  Field(show   ) var(zsel) val('S')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGIRTAG": {"ttr": 331, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0cB\\x00\\x01\\x196_\\x01 \\x11\\x8f\\x06\\t\\x00#\\x000\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.12", "flags": 66, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 35, "newlines": 48, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body Window(40,6)\n+Enter Selection:_z+\n+\n+\u00a8Select+ (S)+ Display the Tag Info\n+\u00a8Create+ (C)+ Create a new Branch\n+\u00a8eXtract+(X)+ Extract updates for Patch\n          +Or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI TagList Line Options'\n .zvars = '(zsel)'\n .cursor = zsel\n &zsel  = &z\n &extract = 'eXtract'\n &select  = 'Select'\n &create  = 'Create'\n .help = zigih2I0\n)Proc\n ver (&zsel,list,S,C,X)\n)PNTS\n  Field(select ) var(zsel) val('S')\n  Field(create ) var(zsel) val('C')\n  Field(extract) var(zsel) val('X')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISEL": {"ttr": 333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\nB\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00\\x13\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.10", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 19, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n { type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(41,5)\n+Command:_zcmd\n+\n+Enter the Repo to Select:{fstring +\n+\n+Press%Enter+to Continue, or%F3+to cancel\n)Init\n &zwinttl = 'ZIGI Select Prompt'\n)Proc\n ver (&find,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISET": {"ttr": 753, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0f@\\x00\\x01\\x196_\\x01 \\x15\\x9f\\x08'\\x003\\x00\\x1f\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.15", "flags": 64, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 51, "newlines": 31, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr\n @ type(input ) hilite(uscore) caps(off) intens(low)\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output) hilite(uscore) caps(off)\n { type(output) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\)\n+Set Defaults +-------------------#zigtitle    +--------------------------------\n%Command ===>_zcmd                                                             +\n+\n%Git Defaults (used at Commit time):\n+  user.name  :@zigiuid                                                        +\n+  user.email :@zigimail                                                       +\n+\n%PDSE Member Generations :_z  +(0 to 999)  System Limit:{sl\n+Note: Specify%0+unless using a tool that supports generations.\n+\n%Display Options Popup or Select on Point-and-Shoot:_z+(P or S)\n+\n%Bypass File Extension Prompt:_z+(Y or N)\n+Set to%Y+if you do not plan to use file extension for PDS members to bypass\n+being asked when adding partitioned datasets.\n+\n+\n%Update+using the%Config+command on the Local Repository Menu.\n+\n%See:+https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup\n+\n                     +Press%Enter+to save, or%F3+to cancel.\n)Init\n if (&mgen = &Z)\n     &mgen = 0\n .zvars = '(mgen pnsdef extfile)'\n &setcont = 'Y'\n if (&pnsdef EQ &Z)\n     &pnsdef = 'S'\n if (&extfile EQ &Z)\n     &extfile = 'Y'\n .help = zigih140\n)Proc\n  ver (&zigiuid,nb)\n  ver (&zigimail,nb)\n  ver (&mgen,nb,range,0,&sl)\n  &setcont = &Z\n  ver (&pnsdef,nb,list,P,S)\n  ver (&extfile,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISNAP": {"ttr": 755, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x15\\x9f\\x08'\\x00V\\x00W\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.04", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 86, "newlines": 87, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr\n @ type(input ) hilite(uscore) caps(off) intens(low)\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output) hilite(uscore) caps(off)\n { type(output) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\)\n+SnapShot+------------------------#zigtitle    +--------------------------------\n%Command ===>_zcmd                                                             +\n+\n+Enter a git tag to identify this milestone:@gtag                            +\n+\n+Enter New HLQ for the Snapshot datasets:   _snaphlq                      +\n+                                           (no quotes required)\n+Enter New Path for OMVS Files:@path                                        +\n+                               (if blank then OMVS files are ignored)\n+\n+Tag the current level of the repository as a milestone for easy future\n+reference.\n+\n+Create a snapshot of the entire repository consisting of all z/OS datasets and\n+OMVS files. The HLQ must not exist and the path should not exist (it will be\n+created).\n+\n+This snapshot may be considered an Escrow copy or a Locked Archive as it is\n+not manageable by git. Use this when a milestone has been reached such as a\n+version, release, maintenance level, or patch.\n+\n                  +Press%Enter+to proceed, or%F3+to cancel.\n)Init\n .help = zigihsnp\n)Proc\n &zerrhm   = 'zigihsnp'\n &zerralrm = 'NO'\n &zerrtp   = 'Notify'\n &zerrsm = &z\n &cloc = ZCMD\n &resp = .resp\n*REXX(* zerrsm zerrlm cloc resp gtag)\n  /* check for END or CANCEl */\n  if wordpos(resp,'END CANCEL') > 0 then exit\n  parse value '' with zerrsm zerrlm null\n  if pos(' ',gtag) > 0 then do\n    zerrsm = 'Error.'\n    zerrlm = 'The tag may not have any blanks.'\n    cloc = 'gtag'\n  end\n  /* Validate that the provided hlq does NOT exist */\n  if zerrsm = null then do\n  if left(snaphlq,1) = \"'\"\n     then snaphlq = strip(snaphlq,'B',\"'\")\n  call outtrap 'x.'\n  Address tso \"listc level('\"snaphlq\"')\"\n  call outtrap 'off'\n  if pos('NOT FOUND',x.1) = 0 then do\n    zerrsm = 'Error.'\n    zerrlm = 'The HLQ' snaphlq 'currently exists which is not' ,\n      'allowed. Select a new HLQ and try again.'\n    cloc = 'snaphlq'\n  end\n  end\n  /* Validate that the provided path does NOT exist */\n  if zerrsm = null then do\n    if path /= null then do\n      if right(path,1) /= '/'\n         then path = path'/'\n      address syscall readdir path d.\n      if d.0 > 0 then do\n        zerrsm = 'Error.'\n        zerrlm = 'The Path' path 'currently exists which is not' ,\n          'allowed. Select a new path and try again.'\n        cloc = 'path'\n      end\n    end\n  end\n*ENDREXX\n ver (&gtag,nb)\n ver (&snaphlq,nb,dsname)\n .cursor = &cloc\n if (&zerrsm NE &Z)\n    .msg = isrz003\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGISNPQ": {"ttr": 339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x17\\x00\\x17\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output)  caps(off)\n + type(text) skip(on) caps(off) intens(low)\n)Body Window(57,7)\n+Git Tag:  $gtag                            +\n+z/OS HLQ: $snaphlq                      +\n+OMVS Path:$path                                        +\n+\n+Confirm the above:_z+(Y or N)\n+\n+Press%Enter+to proceed, or%F3+to cancel.\n)Init\n &zwinttl = ' SnapShot Confirmation'\n .zvars = '(sans)'\n .help = zigihsnp\n)Proc\n ver (&sans,nb,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISNPR": {"ttr": 341, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x15\\x00\\x15\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output)  caps(off)\n + type(text) skip(on) caps(off) intens(low)\n)Body Window(50,5)\n+\n+Enter%Y+to Review the Snapshot datasets and files\n+Review:_z+(Y or N)\n+\n+Press%Enter+to proceed or%F3+to Cancel.\n)Init\n &zwinttl = ' SnapShot Review'\n .zvars = '(sans)'\n .help = zigihsnp\n)Proc\n ver (&sans,nb,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISPBD": {"ttr": 343, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01B\\x00\\x01 \\x05\\x9f\\x01 \\x11\\x8f\\x06\\t\\x00\\x19\\x00\\x19\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 66, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output)  caps(off)\n + type(text) skip(on) caps(off) intens(low)\n)Body Window(64,11)\n    %Alert: Stash Pop was unable to complete successfully.\n+\n+Stash Pop may not be used in a git workspace that is%not+clean.\n+\n+To clean the workspace:\n+    1. Add all untracked datasets/files (command ADDA)\n+    2. Commit the added changes (command Commit)\n+ or 1. Create a new Stash\n+ Then Retry Stash Pop\n+\n             +Press%Enter+or%F3+to return to zigi.\n)Init\n &zwinttl = 'ZIGI Stash Pop ALert'\n .help = zigih2j0\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISPLS": {"ttr": 345, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05B\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00+\\x00#\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 43, "newlines": 35, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n @ type(output) caps(off) hilite(blink) color(red) intens(high)\n $ type(input ) caps(on ) hilite(uscore)\n _ type(text)  color(green)\n ! type(text)  color(yellow)\n \u00dd type(text) hilite(blink) color(red) intens(high)\n \u00a8 type(text) hilite(blink) color(green) intens(high)\n } type(text) hilite(blink) color(blue) intens(high)\n)Body Expand(\\\\)\n+                                              .ZZ.     ZZ\n+                         ZZZZZZZZ           ZZZZZZZ\n+             ZZZZZZZZZZZZZZZZZZZZZZ   ZZ   ZZZ         ZZ\n+    ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ      ZZZ    .ZZZ   ZZ\n+  ZZZZZZZZZZZZZZZZZZZZZZ    ZZZZZZZ   ZZ   ZZZ  ..ZZZZ  ZZ\n+ZZZZZZZZZZZZZZZZZZZ       ZZZZZZZZZ   ZZZ  ZzZ      ZZ  ZZ         ZZZZZZZ\n+ZZZZZZZZZZZZ             ZZZZZZZZ     ZZZ   ZZZZZZZZZZZ      ZZZZZZZZZZZ\n+ZZZZZZZZ               ZZZZZZZZ       ZZZZ    ZZZZZZ      ZZZZZZZZZZ\n+                      ZZZZZZZZ        ZZZ            ZZZZZZZZZ\n+                     ZZZZZZZ              ZZZZZZZZZZZZZZZ      @ver\n+                   ZZZZZZZ           ZZZZZZZZZZZZZZ\n+                 .ZZZZZZZ      ZZZZZZZZZZZZZZ\n+                ZZZZZZZZZZZZZZZZZZZZZZ\n+                ZZZZZZZZZZZZZZZZZ     _        z/OS ISPF Git Interface    +\n+               ZZZZZZZZZZZZ           _                                    +\n+              ZZZZZZZZZZ              \u00ddThe git interface for the rest of us+\n+             ZZZZZZZZ                 _                                    +\n+            ZZZZZZZ                   _    !Henri Kuiper+&!Lionel B. Dyck  +\n+\n+                    _ Copyright 2020 under GPL Version 3\n+\n+    !ENTER+to continue!F1+for Release Information          +Bypass:$z+\n)Init\n .zvars = '(bypass)'\n .help = zigihrln\n if (&bypass = &Z)\n     &bypass = 'N'\n)Proc\n ver (&bypass,list,N,Y)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISSHK": {"ttr": 757, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05@\\x00\\x01\\x196_\\x01 \\x19/\\x04\\x04\\x00(\\x00\"\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.05", "flags": 64, "createdate": "2019-12-31T00:00:00", "modifydate": "2020-07-10T04:04:00", "lines": 40, "newlines": 34, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(output) hilite(uscore) caps(off) intens(low) color(white)\n @ type(output) caps(off)\n _ type(input ) hilite(uscore) caps(on) intens(low )\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Expand(\\\\)\n+SSH Key Review+------------------#zigtitle    +--------------------------------\n%Command ===>_zcmd\n+\n+SSH Key File: @keyfile\n+\n$sshkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n+\n+Press%F3+when ready to continue.\n)Init\n*rexx(* zigissh sshkey)\n sshkey = left('Copy the records below and paste into' ,\n               'your Git Account SSH Key:',78) zigissh\n*endrexx\n.help = zigih130\n)Proc\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISTAB": {"ttr": 759, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x18o\\x07\\x13\\x00)\\x00'\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@\"", "ispf": {"version": "01.06", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-04T07:13:00", "lines": 41, "newlines": 39, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n | TYPE(AB)           /* Action bar                */\n < TYPE(ABSL) GE(ON)  /* Action bar separator line */\n)ABC DESC('Commands')\n PDC DESC('Clear- Remove ALL stashes')   ACTION RUN(CLEAR)\n PDC DESC('End') Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUX'\n)ABC DESC(Help)\n PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')\n PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')\n PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')\n PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigih2j0')\n)ABCINIT\n  .ZVARS = HELPX\n)Body  Expand(\\\\)\n+| Commands | Help +\n<-----------\\-\\--------------------------------+\n+Stash Summary +-----------\\-\\------#zigtitle +------\\-\\------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Sel Stash-ID    Comments\n+\n)Model\n_z+ $z          $z\n)Init\n  .ZVARS = '(zsel stashid stashcmt)'\n  &zgsr = CSR\n  .help = ZIGIH2J0\n)Proc\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISTAQ": {"ttr": 761, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x02\\x00\\x01 \\x01\\x1f\\x01 \\x19/\\x04\\x04\\x00\\x0f\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.07", "flags": 2, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-07-10T04:04:00", "lines": 15, "newlines": 13, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(input) caps(off) hilite(uscore) intens(low)\n)Body Window(60,3)\n+Enter a comment for the stash:\n+=>$stashmsg\n)Init\n &zwinttl = 'ZIGI Prompt Popup'\n  .cursor = stashmsg\n)Proc\n ver (&stashmsg,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGISTBQ": {"ttr": 763, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x02\\x00\\x01 \\x01\\x1f\\x01 \\x19/\\x04\\x05\\x00\\x0f\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.06", "flags": 2, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-07-10T04:05:00", "lines": 15, "newlines": 13, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n $ type(input ) caps(off) hilite(uscore) intens(low)\n)Body Window(41,3)\n+Enter the name of a new branch:\n+=>$bname\n)Init\n &zwinttl = 'ZIGI Prompt Popup'\n  .cursor = bname\n)Proc\n ver (&bname,nb)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGITAG": {"ttr": 355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07B\\x00\\x01 \\x01\\x1f\\x01 \\x11\\x8f\\x06\\t\\x00!\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 66, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 33, "newlines": 13, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(41,5)\n+\n+Enter Tag ID:_tagid                   +\n+Optional Text:_tagmsg\n+\n+Press%Enter+to continue or%F3+to Cancel.\n)Init\n &zwinttl = 'ZIGI Tag Repository'\n .help = zigih2h0\n)Reinit\n Refresh(tagid tagmsg)\n)Proc\n &resp = .resp\n ver (&tagid,nb)\n*REXX(* zedsmsg zedlmsg resp)\n if resp = 'END' then exit\n zedsmsg = ''\n if words(tagid) > 1 then do\n    zedsmsg = 'Error.'\n    zedlmsg = 'The Tag ID may not have blanks.'\n    end\n*ENDREXX\n if (&zedsmsg NE &Z)\n    .cursor = TAGID\n    .msg = isrz001\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGITAGQ": {"ttr": 357, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0eB\\x00\\x01\\x192/\\x01 \\x11\\x8f\\x06\\t\\x00!\\x00\\x0c\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.14", "flags": 66, "createdate": "2019-11-18T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 33, "newlines": 12, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(off) hilite(uscore) intens(low)\n)Body Window(47,7)\n+Confirm you really want to create a new branch\n+from the selected Tag level?\n+\n%New Branch Name:_newbr                      +\n+The new branch will be at the Tag level.\n+\n      %ENTER+to continue, or%F3+to cancel\n)Init\n &zwinttl = 'ZIGI Tag Recovery Prompt'\n)Proc\n ver (&newbr,nb)\n &resp = .resp\n *REXX(* zedsmsg zedlmsg resp)\n parse value '' with zedsmsg zedlmsg\n if resp = 'END' then exit\n newbr = strip(newbr)\n if newbr = '' then exit\n if pos(' ',newbr) > 0 then do\n    zedsmsg = 'Error.'\n    zedlmsg = 'No blanks allowed in the branch name.'\n    end\n *ENDREXX\n if (&zedsmsg NE &Z)\n     .msg = isrz001\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGITAGT": {"ttr": 765, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t@\\x00\\x01 \\x05\\x9f\\x01 \\x18o\\x07\\x12\\x00>\\x00<\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.09", "flags": 64, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-07-04T07:12:00", "lines": 62, "newlines": 60, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n | TYPE(AB)           /* Action bar                */\n < TYPE(ABSL) GE(ON)  /* Action bar separator line */\n)ABC DESC('Commands')\n PDC DESC('Only - filter the table')   ACTION RUN(ONLY)\n PDC DESC('Replace the table')         ACTION RUN(REPLACE)\n PDC DESC('GIT Commands') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%ZIGIGCMD)')\n PDC DESC('End') Action Run(END)\n)ABCINIT\n  .ZVARS = 'MENUX'\n)ABC DESC(Help)\n PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')\n PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')\n PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')\n PDC DESC('GIT Help') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%GITHELP)')\n PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigih210')\n)ABCINIT\n  .ZVARS = HELPX\n)Body  Expand(\\\\)\n+| Commands | Help +\n<-----------\\-\\--------------------------------+\n+Tag Summary +-----------\\-\\------#zigtitle    +-----\\-\\------------------------\n%Command ===>_zcmd        \\ \\ %Scroll ===>_zgsr+\n+ \\ \\%F3  +\n+Sel Date/Time            Tag\n     Title\n+\n)Model\n_z+ $z                   $z\n    @z\n)Init\n  .ZVARS = '(zsel cdatetim ctag ctitle)'\n  &zgsr = CSR\n  .help = zigih2i0\n)Proc\n &row = &z\n if (&ZCMD = &Z)\n     if (&ztdsels = 0000)\n        &row = .csrrow\n        if (&row \u00ac= &z)\n            if (&zsel = &z)\n                &zsel = S\n     if (&ztdsels \u00ac= 0000)\n         &row = &z\n     if (&ZSEL \u00ac= &Z)\n       if (&Zsel = '=')\n           &Zsel = &osel\n     &osel = &zsel\n if (&row = 0)\n     &zsel = &z\n ver (&zsel,list,S,C,/,X)\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGITAGX": {"ttr": 767, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x02\\x00\\x01 \\x05\\x9f\\x01 \\x17O\\x070\\x00E\\x00W\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf3\\xf0@@@@'", "ispf": {"version": "01.08", "flags": 2, "createdate": "2020-02-28T00:00:00", "modifydate": "2020-06-22T07:30:00", "lines": 69, "newlines": 87, "modlines": 0, "user": "ZIGI30"}, "text": ")Attr\n @ type(input ) hilite(uscore) caps(off) intens(low)\n _ type(input ) hilite(uscore) caps(on) intens(low )\n $ type(output) hilite(uscore) caps(off)\n { type(output) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body Window(69,8)\n+\n+Enter%New HLQ+for the Extract:\n_tagxhlq                         +(no quotes allowed)\n+\n+Enter%New Path+for OMVS Files: (? to be prompted or blank to bypass)\n@tagxpath                                             +\n\n      +Press%Enter+to proceed, or%F3+to cancel.\n)Init\n &zwinttl = 'ZIGI Extract Prompt'\n .help = zigih2i1\n)Proc\n &zerrhm   = 'zigih2i1'\n &zerralrm = 'NO'\n &zerrtp   = 'Notify'\n &zerrsm = &z\n &resp = .resp\n &cloc = tagxhlq\n*REXX(* zerrsm zerrlm cloc resp)\n  /* check for END or CANCEl */\n  if wordpos(resp,'END CANCEL') > 0 then exit\n  parse value '' with zerrsm zerrlm null\n\n  /* Validate that the provided hlq does NOT exist */\n  if zerrsm = null then do\n    if left(tagxhlq,1) = \"'\"\n    then tagxhlq = strip(tagxhlq,'B',\"'\")\n    call outtrap 'x.'\n    Address tso \"listc level('\"tagxhlq\"')\"\n    call outtrap 'off'\n    if pos('NOT FOUND',x.1) = 0 then do\n      zerrsm = 'Error.'\n      zerrlm = 'The HLQ' tagxhlq 'currently exists which is not' ,\n        'allowed. Select a new HLQ and try again.'\n      cloc = 'tagxhlq'\n    end\n  end\n  /* Validate that the provided tagxpath does NOT exist */\n  if zerrsm = null then do\n    if tagxpath /= null then do\n      if right(tagxpath,1) /= '/'\n      then tagxpath = tagxpath'/'\n      address syscall readdir tagxpath d.\n      if d.0 > 0 then do\n        zerrsm = 'Error.'\n        zerrlm = 'The path' tagxpath 'currently exists which is not' ,\n          'allowed. Enter a new path and try again.'\n        cloc = 'tagxpath'\n      end\n    end\n  end\n  if tagxpath = '?/' then tagxpath = '?'\n*ENDREXX\n ver (&tagxhlq,nb,dsname)\n .cursor = &cloc\n if (&zerrsm NE &Z)\n    .msg = isrz003\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZIGIVCNV": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0b\\x02\\x00\\x01 \\x01\\x1f\\x01 \\x15\\x9f\\x08'\\x00$\\x00\\r\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf1\\xf0@@@\"", "ispf": {"version": "01.11", "flags": 2, "createdate": "2020-01-11T00:00:00", "modifydate": "2020-06-07T08:27:00", "lines": 36, "newlines": 13, "modlines": 0, "user": "ZIGI210"}, "text": ")Attr\n $ type(output) caps(off)\n _ type(input)  caps(on ) hilite(uscore) intens(low)\n # type(output) hilite(reverse) color(turq) caps(off)\n)Body  Expand(\\\\)\n+Convert Confirmation+------------#zigtitle    +--------------------------------\n%Command ===>_zcmd\n+\n  +Confirm conversion of repository$zigirep\n  +Proceed:_z%Y+or%N+    \\ \\or press%F3+to cancel\n+\n+  By confirming the conversion the current repository will be:\n+\n+  1. If the current branch is master then change to a new branch of\n+     %zigi-master+\n+  2. Any file with a .bin suffix will be processed as binary.\n+  3. All files in the branch root, that when translated pass\n+     z/OS dataset naming conventions, will be converted to upper case\n+     and copied to z/OS datasets.\n+  4. All directories in the branch root, that when translated pass\n+     z/OS dataset naming conventions, will be converted to upper case.\n+  5. All files within (3) that have 1 or 2 parts separated by a period\n+     will have the suffix removed and if that passes the z/OS PDS member\n+     naming conventions it will be converted to upper case without the\n+     suffix and copied to a z/OS PDS.\n+  6. Default Push at Commit will be turned off.\n+\n)Init\n .zvars = '(ans)'\n)Proc\n ver (&ans,nb,list,Y,N)\n)end\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIGI1ST": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01B\\x00\\x01 \\x06\\x1f\\x01 \\x11\\x8f\\x06\\t\\x00,\\x00,\\x00\\x00\\xe9\\xc9\\xc7\\xc9\\xf2\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 66, "createdate": "2020-03-01T00:00:00", "modifydate": "2020-04-27T06:09:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "ZIGI28"}, "text": ")Attr Default(%+_)\n  _ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)\n  } type( input) intens(low ) caps(off) just(left ) hilite(uscore)\n  @ type(output) intens(high) caps(off) just(left )\n  $ type(output) intens(low ) caps(off) just(left )\n  + type(text) intens(low) skip(on)\n  % type(text) intens(high) skip(on)\n  # type(output) hilite(reverse) color(turq) caps(off)\n  \u00a8 type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)\n)Body  window(44,12)\n+\n+Enter Selection:_z     +\n+\n You currently are not managing any\n repositories with zigi. You can create\n or clone a repository by typing the command\n above or use point-and-shoot below.\n\n \u00a8Clone+   remote repository\n \u00a8Create+  a local repo from scratch\n\n             +Or%F3+to cancel.\n)Init\n &zwinttl = 'No Repositories for current profile'\n .zvars = '(SZCMD)'\n .cursor = SZCMD\n &SZCMD = &z\n &clone   = 'Clone'\n &create  = 'Create'\n .help = zigih100\n)Proc\n*REXX(*)\n if abbrev('FIND',SZCMD,1) = 1 then SZCMD = 'FIND'\n*ENDREXX\n if (&SZCMD EQ 'FIND')\n    ver (&findstr,nb)\n)PNTS\n FIELD(CLONE   ) VAR(SZCMD) VAL('CLONE')\n FIELD(CREATE  ) VAR(SZCMD) VAL('CREATE')\n)End\n/* -------------------------------------------------------- */\n/* ZIGI - the z/OS ISPF Git Interface                       */\n/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */\n/* -------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT997/CBT.V500.FILE997.PDS/PANELS.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT997/CBT.V500.FILE997.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}