 Chapter : $12The

 12.1 <sec:Introduction3>Introduction

 Although TXT2XML and XML2COB are not GUI tools (see
 chapter ¢cha:Introduction!), it's perfectly understandable that some
 people don't like the command line. That's why a GUI
 front-end was written for non-mainframe platforms.
 There is a lot of programming techniques for GUI
 applications available on the Internet and choosing one
 of them was not simple. Some requirements were
 established : the GUI front-end had to :

 * be portable,

 * be easy to write,

 * use known standards and software.

 ¢http://thinlet.sourceforge.net/]]Thinlet! was chosen. It's a GUI toolkit, a single Java class
 that parses the hierarchy and properties of the GUI,
 handles user interaction, and calls business logic. It
 separates the graphic presentation (described in an XML
 file) and the application methods (written as Java
 code). Thinlet usesXUL (XML User Interface Language)
 which is a markup language for describing user
 interfaces. With XUL you can create rich, sophisticated
 cross-platform applications easily. Here is an example
 of an XUL file :

 XUL sample file.

 <?xml version="1.0"?>

 <panel columns="1">

   <menubar>

   <menu text="File" mnemonic="0">

     <menuitem text="Exit" action="exit"/>

   </menu>

   </menubar>

   <panel columns="3" gap="10" top="10" left="10"

   bottom="10" right="10">

     <label text="Text file :" mnemonic="0"
     for="TextFile"/>

     <textfield name="TextFile" columns="50"

     tooltip="Enter here the text file name"/>

     <button text="Select..."

     action="openTextFileDialog(thinlet,TextFile)"

     tooltip="Click here to select the text file"/>

     <checkbox name="format" text="XML" group="format"

     tooltip="Click here to convert from text to XML"

     selected="true" colspan="2"

     action="SetFormat(this.text)"/>

     <label/>

     <checkbox text="text" group="format"

     tooltip="Click here to convert from XML to text"

     colspan="2" action="SetFormat(this.text)"/>

     <separator colspan="3" />

     <label text="Prefix :" mnemonic="0" for="Prefix"/>

     <textfield name="Prefix" columns="25"

     tooltip="Enter here the prefix"/>

     <label/>

     <button text="Convert"

     action="CallTXT2XML(TextFile.text,COBOLFile.text,

     XMLFile.text,DTDFile.text,Prefix.text)"

     tooltip="Click here to start the conversion"
     mnemonic="2"/>

   </panel>

 </panel>



 Of course, if you are a shell or a "DOS command prompt'
 fanatic, you can still continue to use TXT2XML and
 XML2COB Rexx scripts on a command line.

 12.2 <sec:Installation3>Installation

 To use the GUI front-end, you need to download and
 install the Java Software Developer Kit (Java SDK) :

 http://java.sun.com

 The GUI front-end was tested successfully on Windows
 and Linux Mandrake 10.1 with J2EE 1.4. Make sure that
 your path includes the directory where you have
 installed the Java SDK.

 12.3 Syntax<sec:Syntax3>

 To launch the GUI front-end, you can :

 * Type on a command line :

 java -jar txt2xml.jar

 or

 java -jar xml2cob.jar

 according to which Rexx script you want to execute.

 * or simply execute txt2xml.rexx or xml2cob.rexx
   without parameters.

 12.4 Example<sec:Example3>

 Here is an example when starting TXT2XML without
 parameters :

 The GUI front-end

 <Fichier graphique : image/gui_01.jpg>


 and the result of the conversion :

 Browsing the results with the GUI front-end

 <Fichier graphique : image/gui_02.jpg>


