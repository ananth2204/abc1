{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "P390", "INMTNODE": "NO", "INMTUID": "WHERE", "INMFTIME": "20030411181945000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6080, "INMRECFM": "FB", "INMDIR": 12, "INMDSNAM": "DIST.MATRIX.V2.API.MACLIB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"DIST.MATRIX.V2.API.MACLIB": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6080, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "030101", "DS1SCEXT": "b'\\x80\\x17\\xc0'", "DS1SCALO": "b'P\\x00\\x00\\x0f'", "DS1LSTAR": "b'\\x00\\x17\\x06'", "DS1TRBAL": "b'\\x8fN'"}, "COPYR2": {"deb": "b'\\t\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0bP\\x00\\x04\\x8a\\x1bH'", "extents": ["b'\\t\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0bP\\x00\\x04\\x8a\\x1bH'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05\\x1b\\x00\\x00\\x05\\x1b\\x00\\x08\\x00\\t'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05\\x1e\\x00\\x00\\x05\\x1e\\x00\\x01\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05\\x17\\x00\\x06\\x05\\x17\\x00\\x07\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05\\x17\\x00\\x08\\x05\\x17\\x00\\t\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05\\x1e\\x00\\x08\\x05\\x1e\\x00\\t\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05Q\\x00\\x08\\x05Q\\x00\\t\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05l\\x00\\x08\\x05l\\x00\\t\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05s\\x00\\x03\\x05s\\x00\\x04\\x00\\x02'", "b'X\\xf3\\xe6\\xb8\\x00\\x00\\x05u\\x00\\x0c\\x05u\\x00\\r\\x00\\x02'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"@@": {"ttr": 5892, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\n\\x00'\\x00\\x98\\x18_\\x01\\x03\\x10\\x1f\\x056\\x00\\x86\\x00\\x8e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.10", "flags": 0, "createdate": "1998-07-04T00:00:00", "modifydate": "2003-04-11T05:36:27", "lines": 134, "newlines": 142, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n         @@ &ADDR=,&REG=R1\n.* ****************************************************************** *\n.* COPYRIGHT (C) SIMON SPANCHAK 1991                                  *\n.* ****************************************************************** *\n         COPY SSGLOBAL\n         LCLC  &TXT,&RG,&TXT2\n         LCLA  &LEN\n&LEN     SETA K'&REG\n         AIF   ('&REG'(1,1) NE 'R').INVREG\n         AIF   (&LEN LT 2 OR &LEN GT 3).INVREG\n&RG      SETC  '&REG'(2,&LEN-1)\n.*\n         AIF ('&ADDR' EQ '').NOADDR\n&LEN     SETA K'&ADDR\n&TXT     SETC  '&ADDR'\n&TXT2    SETC  T'&ADDR\n         AIF   (&LEN EQ 1).LENONE\n         AIF   ('&ADDR'(&LEN,1) EQ '''').ADDRLIT\n         AIF   ('&ADDR'(1,1) EQ '(').ADDRREG\n         AIF   ('&ADDR'(2,1) EQ '(').ADDRCON\n.*\n.LENONE  ANOP\n         AIF   (T'&ADDR EQ 'N').LANUM\n         AGO   .LARADR\n.ADDRLIT ANOP\n         AIF   ('&ADDR'(1,1) EQ '''').GENLIT1\n         AIF   ('&ADDR'(1,1) EQ 'C').GENLIT\n         AIF   ('&ADDR'(1,1) EQ 'X').GENLIT\n         AIF   ('&ADDR'(2,1) EQ 'L').GENLIT\n         AIF   ('&ADDR'(1,1) EQ 'F').GENFWD\n         AIF   ('&ADDR'(1,1) EQ 'H').GENHWD\n         AGO   .GENLIT\n.*\n.ADDRCON ANOP\n         AIF   ('&ADDR'(1,1) EQ 'A').AVCON\n         AIF   ('&ADDR'(1,1) EQ 'V').AVCON\n         AGO   .LARADR\n.AVCON   ANOP\n         AIF   ('&ADDR'(&LEN,1) NE ')').ADRNBRK\n         AGO   .LRACON\n.*\n.GENFWD  ANOP\n         AIF   ('&ADDR'(2,1) EQ '''').LRACON\n         AGO   .LARADR\n.*\n.GENHWD  ANOP\n         AIF   ('&ADDR'(2,1) EQ '''').LHWD\n         AGO   .LARADR\n.*\n.ADDRREG ANOP\n         AIF   ('&ADDR'(&LEN,1) NE ')').ADRNBRK\n&LEN     SETA  &LEN-2\n&TXT     SETC  '&ADDR'(2,&LEN)\n         AIF   ('&TXT'(1,1) EQ 'R').ADDRRG\n         AIF   ('&TXT'(1,1) EQ 'H').ADRHWD\n         AIF   ('&TXT' EQ '&RG').LOCGEN\n         AGO   .ADDRVAR\n.*\n.ADRHWD  ANOP\n         AIF   (&LEN LT 3).ADDRVAR\n         AIF   ('&TXT'(2,1) NE ',').ADDRVAR\n&LEN     SETA  &LEN-2\n&TXT2    SETC  '&TXT'(3,&LEN)\n         AGO   .LHTXT\n.*\n.ADDRRG  ANOP\n         AIF   (&LEN GT 3).ADDRVAR\n         AIF   ('&TXT' EQ '&REG').LOCGEN\n&LEN     SETA  K'&TXT\n&TXT2    SETC  '&TXT'(2,&LEN-1)\n         AIF   (T'&TXT2 EQ 'N').LR\n         AGO   .ADDRVAR\n.*\n.LR      ANOP\n&G@ATYP  SETC 'R'\n         AIF ('&REG' EQ '&TXT').LOCGEN\n         LR    &REG,&TXT\n         AGO   .LOCGEN\n.ADDRVAR ANOP\n&G@ATYP  SETC 'V'\n         L     &REG,&TXT\n         AGO   .LOCGEN\n.LARADR  ANOP\n&G@ATYP  SETC 'A'\n         LA    &REG,&ADDR\n         AGO   .LOCGEN\n.LANUM   ANOP\n&G@ATYP  SETC 'N'\n         AIF   (&ADDR GT 4095).LFNUM\n         LA    &REG,&ADDR\n         AGO   .LOCGEN\n.LFNUM   ANOP\n&G@ATYP  SETC 'N'\n         L     &REG,=F'&ADDR'\n         AGO   .LOCGEN\n.LHWD    ANOP\n&G@ATYP  SETC 'H'\n         LH    &REG,=&ADDR\n         AGO   .LOCGEN\n.LHTXT   ANOP\n&G@ATYP  SETC 'H'\n         LH    &REG,&TXT2\n         AGO   .LOCGEN\n.GENLIT1 ANOP\n&G@ATYP  SETC 'L'\n         LA    &REG,=C&ADDR\n         AGO   .LOCGEN\n.GENLIT  ANOP\n&G@ATYP  SETC 'L'\n         LA    &REG,=&ADDR\n         AGO   .LOCGEN\n.LRACON ANOP\n&G@ATYP  SETC 'C'\n         L     &REG,=&ADDR\n         AGO   .LOCGEN\n.LOCGEN  ANOP\n         MEXIT\n.ADRNBRK ANOP\n         MNOTE 8,'ADDR MUST HAVE CLOSING BRACKET'\n         MEXIT\n.ADRNLIT ANOP\n         MNOTE 8,'ADDR MUST HAVE TERMINATING QUOTE'\n         MEXIT\n.NOADDR  ANOP\n         MNOTE 8,'ADDR MUST BE SPECIFIED'\n         MEXIT\n.INVREG  ANOP\n         MNOTE 8,'REG MUST SPECIFY VALID REGISTER (RN)'\n         MEXIT\n.INVHWD  ANOP\n         MNOTE 8,'INVALID HALFWORD SPECIFICATION'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@@#": {"ttr": 5642, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x11\\x00\\x98\\x18O\\x01\\x03\\x10\\x1f\\x05 \\x00t\\x00p\\x00B\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1998-07-03T00:00:00", "modifydate": "2003-04-11T05:20:11", "lines": 116, "newlines": 112, "modlines": 66, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   @@# &INDEX,                                                   +\n               &BR1,&BR2,&BR3,&BR4,&BR5,&BR6,&BR7,&BR8,                +\n               &BR9,&BR10,&BR11,&BR12,&BR13,&BR14,&BR15,&BR16,         +\n               &BR17,&BR18,&BR19,&BR20,&BR21,&BR22,&BR23,&BR24,        +\n               &INCR=4,&FIRST=0,&MAX=,&ERROR=,&CHECK=NO\n.* ****************************************************************** *\n.* COPYRIGHT (C) SIMON SPANCHAK 1990                                  *\n.* ****************************************************************** *\n         COPY SSGLOBAL\n         LCLA  &ARG\n         LCLC  &N,&ERR,&TIMES,&PF,&TLAB,&BLAB,&PARM\n         LCLB  &CHKVAL\n         AIF (&G@TEST).SETCHK1\n         AIF ('&CHECK' EQ 'NO').SETCHK0\n         AIF ('&CHECK' EQ 'YES').SETCHK1\n         AGO .INVCHK\n.SETCHK1 ANOP\n&CHKVAL  SETB  1\n         AGO .CHKSET\n.SETCHK0 ANOP\n&CHKVAL  SETB  0\n.CHKSET  ANOP\n&PF      SETC  '&G@PRFX'\n&N       SETC  '&SYSNDX'\n&TLAB    SETC  '&PF'.'B@'.'&N'\n&BLAB    SETC  '&PF'.'B#'.'&N'\n&PARM    SETC  '&INDEX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS   0H\n.NOLAB   ANOP\n&ERR     SETC  '&ERROR'\n         AIF ('&ERR' NE '').GOTERR\n&ERR     SETC  '&BLAB'\n.GOTERR  ANOP\n         @@ REG=R15,ADDR=&PARM\n         AIF ('&FIRST' EQ '0').STRT0\n         AIF (NOT &CHKVAL).NODIAG1\n         CH  R15,=AL2(&FIRST)\n         @@@ LBL=&ERR\n         BL&G@LREG &G@LABL\n.NODIAG1 ANOP\n         SH  R15,=AL2(&FIRST)\n.STRT0   ANOP\n&TIMES   SETC  ''\n         AIF ('&INCR' EQ '4').INCROK\n         AIF ('&INCR' NE '1').INCRERR\n&TIMES   SETC  '*4'\n         SLL   R15,2\n.INCROK  ANOP\n         AIF (NOT &CHKVAL).NODIAG2\n         C     R15,=A(&BLAB-&TLAB-4)\n         @@@ LBL=&ERR\n         BH&G@LREG &G@LABL\n.NODIAG2 ANOP\n         AIF ('&MAX' NE '').ORGX\n         L     R15,&TLAB.(R15)\n         BR    R15\n&TLAB    DS    0F\n&ARG     SETA  2\n.MOREBRS ANOP\n         AIF ('&SYSLIST(&ARG)' NE '').GOTLBL\n         AIF (NOT &CHKVAL).GENTST1\n         @@@ LBL=&ERR\n         AIF ('&G@LREG' NE '').NOREGAD\n         DC    A(&G@LABL)\n         AGO   .INCRM\n.GENTST1 ANOP\n         DC    XL4'00'\n         AGO   .INCRM\n.GOTLBL  ANOP\n         @@@ LBL=&SYSLIST(&ARG)\n         AIF ('&G@LREG' NE '').NOREGAD\n         DC    A(&G@LABL)\n.INCRM   ANOP\n&ARG     SETA  &ARG+1\n         AIF (&ARG LE N'&SYSLIST).MOREBRS\n&BLAB    DS    0H\n         MEXIT\n.ORGX    ANOP\n         L     R15,&TLAB.(R15)\n         AIF (NOT &CHKVAL).NODIAG3\n         LTR   R15,R15\n         @@@ LBL=&ERR\n         BZ&G@LREG  &G@LABL\n.NODIAG3 ANOP\n         BR    R15\n&TLAB    DS    0F\n         DC    (&MAX-&FIRST+1)XL4'00'\n&BLAB    DS    0H\n&ARG     SETA  2\n.ORG300  ANOP\n         AIF   ('&SYSLIST(&ARG)' EQ '').ORG340\n         AIF   ('&SYSLIST(&ARG,2)' EQ '').INVFMT\n         ORG   &TLAB+(&SYSLIST(&ARG,2)-&FIRST)&TIMES\n         @@@ LBL=&SYSLIST(&ARG,1)\n         AIF ('&G@LREG' NE '').NOREGAD\n         DC    A(&G@LABL)\n.ORG340  ANOP\n&ARG     SETA  &ARG+1\n         AIF (&ARG LE N'&SYSLIST).ORG300\n         ORG  ,\n         MEXIT\n.INVCHK  ANOP\n         MNOTE 8,'CHECK MUST SPECIFY YES OR NO'\n         MEXIT\n.INCRERR ANOP\n         MNOTE 8,'INCREMENT MUST BE 1 OR 4'\n         MEXIT\n.INVFMT  ANOP\n         MNOTE 8,'VALUE REQUIRED FOR EACH LABEL WITH MAX'\n         MEXIT\n.NOREGAD ANOP\n         MNOTE 8,'REGISTER NOTATION NOT ALLOWED'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@@@": {"ttr": 5645, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x98\\x18O\\x01\\x03\\x10\\x1f\\x05!\\x00f\\x00c\\x00G\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1998-07-03T00:00:00", "modifydate": "2003-04-11T05:21:00", "lines": 102, "newlines": 99, "modlines": 71, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   @@@  &LBL=\n.* ****************************************************************** *\n.* COPYRIGHT (C) SIMON SPANCHAK 1990                                  *\n.* ****************************************************************** *\n         COPY SSGLOBAL\n         LCLC  &PF\n         LCLC  &TXT1,&TXT2,&RN\n         LCLA  &LEN\n         LCLA  &NUM,&N,&I\n.*\n&G@LREG  SETC ''\n         AIF ('&LBL' EQ '').NOLBL\n&PF      SETC '&G@PRFX'\n&LEN     SETA K'&LBL\n&G@LABL  SETC  '&LBL'\n         AIF   ('&LBL'(1,1) EQ '(').LBLSPEC\n         AIF   ('&LBL'(1,1) EQ '''').INVLBL\n         MEXIT\n.*\n.LBLSPEC ANOP\n         AIF   ('&LBL'(&LEN,1) NE ')').INVLBL\n&LEN     SETA  &LEN-2\n&TXT1    SETC  '&LBL'(2,&LEN)\n         AIF   (&LEN LT 2).INVLBL\n         AIF   ('&TXT1'(1,1) NE 'R').NOTRG\n&RN      SETC  '&TXT1'(2,1)\n         AIF   (T'&RN NE 'N').NOTRG\n         AIF   (&LEN EQ 2).ISREG\n         AIF   (&LEN GT 3).NOTRG\n&RN      SETC  '&TXT1'(3,1)\n         AIF   (T'&RN NE 'N').NOTRG\n.ISREG   ANOP\n&G@LABL  SETC  '&TXT1'\n&G@LREG  SETC  'R'\n         MEXIT\n.NOTRG   ANOP\n         AIF   (&LEN LT 3).INVLBL\n         AIF   ('&TXT1'(1,3) EQ 'RC=').RETCD\n         AIF   ('&TXT1'(1,3) EQ 'BUG').CHKBUG\n         AGO .INVLBL\n.CHKBUG  ANOP\n         AIF   (&LEN EQ 3).NEWBGN\n         AIF   ('&TXT1'(4,1) NE '=').INVLBL\n.*\n.* USER HAS SPECIFIED A BUG NUMBER\n.*\n         AIF   (&LEN LT 5).INVLBL\n&TXT2    SETC  '&TXT1'(5,&LEN-4)\n         AIF   (T'&TXT2 NE 'N').INVLBL\n&NUM     SETA  &TXT2\n         AIF   (&NUM GT &G@DBCT).SAVBUG\n         AGO   .OLDDBM\n.*\n.*\n.*\n.NEWBGN  ANOP\n&NUM     SETA  &G@DBCT+1\n.SAVBUG  ANOP\n&G@DBCT  SETA  &NUM\n.*\n.OLDDBM  ANOP\n&G@LABL  SETC  '&PF.BUG&NUM'\n&G@DBUG  SETB  1\n         AIF (&G@SHRT).SHRTP\n         MEXIT\n.SHRTP   ANOP\n&G@LABL  SETC  '&PF.##AB02'\n&G@SDBG  SETB  1\n         MNOTE 2,'ABEND 002 INSERTED IN PLACE OF BUG'\n         MEXIT\n.*\n.*\n.*\n.RETCD   ANOP\n         AIF   (&LEN LT 4).INVLBL\n&TXT2    SETC  '&TXT1'(4,&LEN-3)\n         AIF   (T'&TXT2 NE 'N').INVLBL\n&NUM     SETA  &TXT2\n&N       SETA  &NUM\n&I       SETA  ((&N/4)*4)\n&I       SETA  &N-&I\n         AIF (&I NE 0).INVRC\n         AIF   (&NUM GT &G@RCMX).NEWRCM\n         AGO   .OLDRCM\n.NEWRCM  ANOP\n&G@RCMX  SETA  &NUM\n.OLDRCM  ANOP\n&G@LABL  SETC  '&PF.RET&NUM'\n&G@RETL  SETB  1\n         MEXIT\n.*\n.INVLBL  ANOP\n         MNOTE 8,'LABEL INVALID FORMAT'\n         MEXIT\n.NOLBL   ANOP\n         MNOTE 8,'LABEL IS REQUIRED'\n         MEXIT\n.INVRC   ANOP\n         MNOTE 8,'RETURN CODE MUST BE MULTIPLE OF 4'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXAC": {"ttr": 5889, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00U\\x00\\x99(\\x7f\\x01\\x03\\x10\\x1f\\x055\\x00V\\x00W\\x00\\x1a\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1999-10-14T00:00:00", "modifydate": "2003-04-11T05:35:55", "lines": 86, "newlines": 87, "modlines": 26, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXAC &PREFIX=,&PARM=,&TOKEN=,                           +++\n               &ADDR=,                                               +++\n               &CELLSIZE=,                                           +++\n               &RETOK=,&ATOK=,                                       +++\n               &SYSNAME=,                                            +++\n               &SYNC=YES,                                            +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXAC CALL MATRIX TO ALLOCATE A VARIABLE TABLE ENTRY\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.TBCA) REQUEST ALLOCATE CELL\n         MVI   &LABL.NFFL,&LABL.NFCL     SET CALL DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&CELLSIZE' EQ '').NOCELZ\n         @@ REG=R1,ADDR=&CELLSIZE\n         ST    R1,&LABX.TCSZ            CELL SIZE\n         AIF ('&ADDR' EQ '').NOADDR\n         @@ REG=R1,ADDR=&ADDR\n         MVC   &LABX.TCAD,0(R1)         ADDRESS OF CELL\n.NOADDR  ANOP\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R1,ADDR=&TOKEN\n         ST    R1,&LABX.TCTK\n*\n         CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                    ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOCELZ  ANOP\n         MNOTE 8,'CALLMXAC CELLSIZE REQUIRED'\n         MEXIT\n.NOTOKN  ANOP\n         MNOTE 8,'CALLMXAC TOKEN REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXCC": {"ttr": 3850, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x05\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x08\\x00n\\x00t\\x00!\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:08:05", "lines": 110, "newlines": 116, "modlines": 33, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXCC &PREFIX=,&PARM=,&SYNC=NO,&ATOK=,                    ++\n               &SYSNAME=,                                             ++\n               &FROMNAME=,                                            ++\n               &FROMADDR=,                                            ++\n               &TONAME=,                                              ++\n               &TOADDR=,                                              ++\n               &LENGTH=,                                              ++\n               &RETOK=,                                              +++\n               &REQFAIL=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &DSPTCHD=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXCC CALL MATRIX TO COPY DATA FROM ONE SPACE TO ANOTHER        *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RLAB              LABEL\n.*\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXCC                               *\n* COPYRIGHT EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998        *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RCPY) REQUEST COPY\n         MVI   &LABL.NFFL,&LABL.NFCL     SET CALL DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&FROMNAME' EQ '').NOFNAMN\n         AIF ('&FROMADDR' EQ '').NOFRAD\n         AIF ('&TONAME  ' EQ '').NOTONAM\n         AIF ('&TOADDR  ' EQ '').NOTOAD\n         AIF ('&LENGTH' EQ '').NORLEN\n.SPCDET  ANOP\n         @@ REG=R1,ADDR=&FROMNAME        FROM NAME\n         MVC   &LABX.PFNM,0(R1)\n         @@ REG=R1,ADDR=&FROMADDR        ADDRESS TO READ FROM\n         MVC   &LABX.PFAD,0(R1)          READ FROM ADDRESS\n.*\n         @@ REG=R1,ADDR=&TOADDR          WRITE TO ADDRESS\n         MVC   &LABX.PTAD,0(R1)          WRITE TO ADDR\n         @@ REG=R1,ADDR=&TONAME          TO NAME\n         MVC   &LABX.PTNM,0(R1)\n.*\n         @@ REG=R1,ADDR=&LENGTH          LENGTH TO COPY\n         MVC   &LABX.PLEN,0(R1)          READ LENGTH\n.*\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOTONAM ANOP\n         MNOTE 8,'CALLMXCC TO WORK AREA NAME REQUIRED'\n         MEXIT\n.NOFNAMN ANOP\n         MNOTE 8,'CALLMXCC FROM WORK AREA NAME REQUIRED'\n         MEXIT\n.NOTOAD  ANOP\n         MNOTE 8,'CALLMXCC TO ADDRESS REQUIRED'\n         MEXIT\n.NORLEN  ANOP\n         MNOTE 8,'CALLMXCC LENGTH IS REQUIRED'\n         MEXIT\n.NOFRAD  ANOP\n         MNOTE 8,'CALLMXCC FROMADDR REQUIRED'\n         MEXIT\n.*\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXCN": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00V\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x12\\x00\\x97\\x00}\\x00[\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:12:56", "lines": 151, "newlines": 125, "modlines": 91, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXCN &TYPE=,&PREFIX=,&PARM=,&WANAME=,&SYNC=YES,         +++\n               &RETOK=,&TOKEN=,&ATOK=,&SYSNAME=,                     +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &DSPTCHD=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXCN CALL MATRIX TO CONNECT TO WORK AREA\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n.*\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXCN                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         AIF ('&TYPE' EQ 'CONNECT').CONNCT\n         AIF ('&TYPE' EQ 'DISCONN').DISCNT\n         AGO .INVTYP\n.*\n.CONNCT  ANOP\n         AIF ('&SYNC' EQ '').CONSYN\n         AIF ('&SYNC' EQ 'YES').CONSYN\n         MNOTE 3,'CALLMXCN: SYNC=YES ONLY FOR CONNECT'\n.CONSYN  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RCON) REQUEST CONNECT\n         MVI   &LABL.NFFL,&LABL.NFSN+&LABL.NFCL+&LABL.NFAF\n         AIF ('&WANAME' EQ '').NOWANAM\n         @@ REG=R1,ADDR=&WANAME          WORK AREA NAME\n         MVC   &LABX.NWA1,0(R1)          NAME OF WORK AREA\n         CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,SYSNAME=&SYSNAME\n         AIF ('&TOKEN' EQ '').NOTOKEN\n         @@ REG=R1,ADDR=&TOKEN           ADDRESS TO PLACE TOKEN\n         MVC   0(L'&LABX.COTK,R1),&LABX.COTK\n.*\n         AIF ('&NOTSUP'  NE '').GBRTBL\n         AIF ('&NOTFND'  NE '').GBRTBL\n         AIF ('&QUIESC'  NE '').GBRTBL\n         AIF ('&REQFAIL' NE '').GBRTBL\n         AIF ('&SOS'     NE '').GBRTBL\n         AIF ('&LOCKED'  NE '').GBRTBL\n         AIF ('&NOTINIT' NE '').GBRTBL\n.*\n         AIF ('&RETOK'   EQ '').CHKERR\n         LTR  R15,R15\n         BZ   &RETOK\n         AIF ('&ERROR'   EQ '').MEXIT\n         B    &ERROR\n.MEXIT   ANOP\n         MEXIT\n.CHKERR  ANOP\n         AIF ('&ERROR'   EQ '').MEXIT\n         LTR  R15,R15\n         BNZ  &ERROR\n         MEXIT\n.*\n.GBRTBL  ANOP\n         AIF ('&RETOK'   EQ '').MSNGLBL\n         AIF ('&NOTSUP'  EQ '').MSNGLBL\n         AIF ('&NOTFND'  EQ '').MSNGLBL\n         AIF ('&QUIESC'  EQ '').MSNGLBL\n         AIF ('&REQFAIL' EQ '').MSNGLBL\n         AIF ('&SOS'     EQ '').MSNGLBL\n         AIF ('&LOCKED'  EQ '').MSNGLBL\n         AIF ('&NOTINIT' EQ '').MSNGLBL\n         AIF ('&ERROR'   EQ '').MSNGLBL\n         @@# (R15),                                                   ++\n               &RETOK,                                                ++\n               &REQFAIL,                                              ++\n               &QUIESC,                                               ++\n               &NOTFND,                                               ++\n               &SOS,                                                  ++\n               &NOTSUP,                                               ++\n               &LOCKED,                                               ++\n               &NOTINIT,                                              ++\n               &ERROR,                                                ++\n               &ERROR\n         MEXIT\n.*\n.DISCNT  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RDCN) REQUEST DISCONNECT\n         MVI   &LABL.NFFL,&LABL.NFCL+&LABL.NFAF\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&TOKEN' EQ '').NOTOKEN\n         @@ REG=R1,ADDR=&TOKEN           TOKEN OF SPACE\n         XC    &PARM,&PARM\n         MVC   &LABX.DSCT(L'&LABX.DSCT),0(R1)\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.*\n.INVTYP  ANOP\n         MNOTE 8,'CALLMXCN TYPE MUST BE CONNECT/DISCONN'\n         MEXIT\n.*\n.NOWANAM ANOP\n         MNOTE 8,'CALLMXCN WORK AREA NAME REQUIRED'\n         MEXIT\n.*\n.NOTOKEN ANOP\n         MNOTE 8,'CALLMXCN TOKEN REQUIRED'\n         MEXIT\n.*\n.MSNGLBL ANOP\n         MNOTE 8,'CALLMX MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXCT": {"ttr": 4099, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x15\\x00\\x99&_\\x01\\x03\\x10\\x1f\\x05\\x08\\x00w\\x00\\x80\\x002\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1999-09-22T00:00:00", "modifydate": "2003-04-11T05:08:15", "lines": 119, "newlines": 128, "modlines": 50, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXCT &PREFIX=,&PARM=,&NAME=,                            +++\n               &SYSNAME=,                                            +++\n               &INDEXWA=,                                            +++\n               &DATAWA=,                                             +++\n               &NUMDIMS=,                                            +++\n               &CELLSIZE=,                                           +++\n               &DIMS=,                                               +++\n               &RETOK=,&ATOK=,                                       +++\n               &SYNC=,                                               +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXCT CALL MATRIX TO CREATE A TABLE ENTRY\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.TBLC)     REQUEST CREATE TABLE\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFAF  TASK DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&NAME' EQ '').NONAME\n         @@ REG=R1,ADDR=&NAME            TABLE    NAME\n         MVC   &LABX.TNAM,0(R1)          MOVE NAME IN\n.*\n         AIF ('&INDEXWA' EQ '').NOIWAD\n         @@ REG=R1,ADDR=&INDEXWA\n         MVC   &LABX.TIWA,0(R1)         INDEX WA NAME\n         AGO   .IWADSET\n.NOIWAD  ANOP\n         XC    &LABX.TIWA,&LABX.TIWA    INDEX WA\n.IWADSET ANOP\n         AIF ('&DATAWA' EQ '').NODWAD\n         @@ REG=R1,ADDR=&DATAWA\n         MVC   &LABX.TDWA,0(R1)         DATA WA\n         AGO   .DWADSET\n.NODWAD  ANOP\n         XC    &LABX.TDWA,&LABX.TDWA    DATA WA\n.DWADSET ANOP\n         AIF ('&NUMDIMS' EQ '').NONDIMS\n         @@ REG=R14,ADDR=&NUMDIMS\n         ST    R14,&LABX.T#DI           NUMBER OF DIMENSIONS\n         AIF ('&CELLSIZE' EQ '').VRBLREC\n         @@ REG=R1,ADDR=&CELLSIZE\n         AGO   .CLENSET\n.VRBLREC ANOP\n         SR    R1,R1                    VARIABLE LENGTH\n.CLENSET ANOP\n         ST    R1,&LABX.TCLN            CELL SIZE\n         AIF ('&DIMS' EQ '').NODIMS\n         @@ REG=R1,ADDR=&DIMS\n         LA    R15,&LABX.TDIM           START INSERTING DIMENSIONS\n&LBL.1   DS    0H\n         L     R0,0(,R1)                DIMENSIONS\n         ST    R0,0(,R15)\n         LA    R15,4(,R15)\n         LA    R1,4(,R1)\n         BCT   R14,&LBL.1\n*\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NONAME  ANOP\n         MNOTE 8,'CALLMXCT TABLE NAME IS REQUIRED'\n         MEXIT\n.*\n.NONDIMS ANOP\n         MNOTE 8,'CALLMXCT NUMDIMS REQUIRED'\n         MEXIT\n.INVOWNR ANOP\n         MNOTE 8,'CALLMXCT OWNER MUST BE PRIVATE OR SHARED'\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXCW": {"ttr": 4102, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00&\\x00\\x98!_\\x01\\x03\\x10\\x1f\\x05\\x08\\x00j\\x00i\\x00B\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "1998-08-03T00:00:00", "modifydate": "2003-04-11T05:08:26", "lines": 106, "newlines": 105, "modlines": 66, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXCW &SIZE=,&SYNC=NO,&PREFIX=,&PARM=,&NAME=,            +++\n               &OWNER=,                                              +++\n               &MIRROR=,                                             +++\n               &SYSNAME=,                                            +++\n               &RETOK=,&ATOK=,                                       +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXCW CALL MATRIX TO CREATE A WORK AREA\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&SIZE' EQ '').NOSIZE\n         AIF ('&NAME' EQ '').NONAME\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RCWA)         CREATE WORK AREA\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFAF   TASK DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&MIRROR' EQ '').MINO\n         AIF ('&MIRROR' EQ 'YES').MIYES\n         AIF ('&MIRROR' EQ 'NO').MINO\n         @@ REG=R0,ADDR=&MIRROR\n         LTR   R0,R0                     MIRRORED?\n         BZ    &LBL.MI                   NO\n         MVI &LABX.WWFL,&LABX.WWFM       MIRRORED\n         B     &LBL.MI2\n&LBL.MI  DS   0H\n         MVI &LABX.WWFL,0                NOT MIRRORED\n&LBL.MI2 DS   0H\n         AGO .MIRDUN\n.MIYES   ANOP\n         MVI &LABX.WWFL,&LABX.WWFM       MIRRORED\n         AGO .MIRDUN\n.MINO    ANOP\n         MVI &LABX.WWFL,0                NOT MIRRORED\n.MIRDUN  ANOP\n.*\n         @@ REG=R1,ADDR=&NAME            WORKAREA NAME\n         MVC   &LABX.WWA1,0(R1)          MOVE NAME IN\n         @@ REG=R1,ADDR=&SIZE            SPACE SIZE\n         MVC   &LABX.WSIZ,0(R1)          SPACE SIZE\n         AIF   ('&OWNER' EQ '').NOOWNR\n         @@ REG=R1,ADDR=&OWNER           SYSTEM OWNER\n         MVC   &LABX.SOWN,0(R1)          OWNER\n         AGO   .CALLIT\n.NOOWNR  ANOP\n         XC    &LABX.SOWN,&LABX.SOWN     OWNER\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOSIZE  ANOP\n         MNOTE 8,'CALLMXCW SIZE IS REQUIRED'\n         MEXIT\n.NONAME  ANOP\n         MNOTE 8,'CALLMXCW WORK AREA NAME IS REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXDT": {"ttr": 4105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x001\\x00\\x99)\\x1f\\x01\\x03\\x10\\x1f\\x05\\x08\\x00^\\x00X\\x00/\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1999-10-18T00:00:00", "modifydate": "2003-04-11T05:08:31", "lines": 94, "newlines": 88, "modlines": 47, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXDT &PREFIX=,&PARM=,                                   +++\n               &SYSNAME=,                                            +++\n               &NAME=,&FORCE=NO,                                     +++\n               &RETOK=,&ATOK=,                                       +++\n               &SYNC=,                                               +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXDT CALL MATRIX TO DELETE A TABLE\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.TBLD) REQUEST DELETE TABLE\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFAF TASK FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&FORCE' EQ '').FRNO\n         AIF ('&FORCE' EQ 'YES').FRYES\n         AIF ('&FORCE' EQ 'NO').FRNO\n         @@ REG=R0,ADDR=&FORCE\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.FR                   ASYNC\n         MVI &LABX.TDFR,&LABX.NOFR      X'F0'\n         B     &LBL.FR2\n&LBL.FR  DS    0H\n         MVI &LABX.TDFR,&LABX.FORC      X'F1'\n&LBL.FR2 DS    0H\n         AGO .SETREQ\n.FRYES   ANOP\n         MVI &LABX.TDFR,&LABX.FORC      X'F1'\n         AGO .SETREQ\n.FRNO    ANOP\n         MVI &LABX.TDFR,&LABX.NOFR      X'F0'\n.SETREQ  ANOP\n.*\n         AIF ('&NAME' EQ '').NONAME\n         @@ REG=R1,ADDR=&NAME\n         MVC   &LABX.TDNM,0(R1)         NAME OF TABLE\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               RETOK=&RETOK,                                          ++\n               SYSNAME=&SYSNAME,                                      ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NONAME  ANOP\n         MNOTE 8,'CALLMXDT NAME IS REQUIRED'\n         MEXIT\n.*\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXDW": {"ttr": 4108, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x005\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x08\\x00b\\x00e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:08:35", "lines": 98, "newlines": 101, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXDW &SYNC=,&PREFIX=,&PARM=,&NAME=,&ATOK=,              +++\n               &SYSNAME=,                                            +++\n               &RETOK=,&FORCE=NO,                                    +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXDW CALL MATRIX TO DELETE A WORK AREA\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXDW                               *\n* COPYRIGHT EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998        *\n* ----------------------------------------------------------- *\n.*\n.*\n         AIF ('&NAME' EQ '').NONAME\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RDWA)         DELETE WORK AREA\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFB4   TASK DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n.*\n         AIF ('&FORCE' EQ '').FRNO\n         AIF ('&FORCE' EQ 'YES').FRYES\n         AIF ('&FORCE' EQ 'NO').FRNO\n         @@ REG=R0,ADDR=&FORCE\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.FR                   ASYNC\n         MVI &LABX.DWFC,&LABX.NOFR      X'F0'\n         B     &LBL.FR2\n&LBL.FR  DS    0H\n         MVI &LABX.DWFC,&LABX.FORC      X'F1'\n&LBL.FR2 DS    0H\n         AGO .SETREQ\n.FRYES   ANOP\n         MVI &LABX.DWFC,&LABX.FORC      X'F1'\n         AGO .SETREQ\n.FRNO    ANOP\n         MVI &LABX.DWFC,&LABX.NOFR      X'F0'\n.*\n.SETREQ  ANOP\n         @@ REG=R1,ADDR=&NAME            WORKAREA NAME\n         MVC   &LABX.DWA1,0(R1)          MOVE NAME IN\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NONAME  ANOP\n         MNOTE 8,'CALLMXDW WORK AREA NAME IS REQUIRED'\n         MEXIT\n.*\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXEV": {"ttr": 4111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x009\\x00\\x99\\t\\x7f\\x01\\x03\\x10\\x1f\\x05\\x08\\x00x\\x00t\\x00&\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1999-04-07T00:00:00", "modifydate": "2003-04-11T05:08:39", "lines": 120, "newlines": 116, "modlines": 38, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXEV &TYPE=,&PREFIX=,&PARM=,&ATOK=,                     +++\n               &SYSNAME=,                                            +++\n               &EVENT=,                                              +++\n               &SYNC=,                                               +++\n               &RETOK=,                                              +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXEV CALL MATRIX TO PERFORM EVENT WAIT POST AND DELETE\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n.*\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXEV                               *\n* COPYRIGHT EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998        *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&EVENT' EQ '').NONAME\n.*\n         AIF ('&TYPE' EQ 'WAIT').DOWAIT\n         AIF ('&TYPE' EQ 'POST').DOPOST\n         AIF ('&TYPE' EQ 'DELETE').DODELT\n         AIF ('&TYPE' EQ 'RESET').DORSET\n         AGO .INVTYP\n.*\n.DOPOST  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.POST) REQUEST POST\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFAF\n         AGO   .EVNAME\n.*\n.DOWAIT  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.WAIT) REQUEST WAIT\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFSN+&LABL.NFB4\n         @@ REG=R1,ADDR=&EVENT           EVENT NAME\n         MVC   &LABX.ENAM,0(R1)          MOVE NAME IN\n         AIF ('&SYNC' EQ '').WAITSY\n         MNOTE 1,'CALLMXEV SYNC IGNORED AND SET ON'\n.WAITSY  ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCH\n         AGO   .MXCAL\n.*\n.DORSET  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.ESET) REQUEST RESET\n         MVI   &LABL.NFFL,&LABL.NFCL+&LABL.NFAF\n         AGO   .EVNAME\n.*\n.DODELT  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.EDEL) REQUEST DELETE\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFAF\n.EVNAME  ANOP\n         @@ REG=R1,ADDR=&EVENT           EVENT NAME\n         MVC   &LABX.ENAM,0(R1)          MOVE NAME IN\n.*\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n.*\n.*\n.MXCAL   ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.INVTYP  ANOP\n         MNOTE 8,'CALLMXEV TYPE INVALID'\n         MEXIT\n.NONAME  ANOP\n         MNOTE 8,'CALLMXEV EVENT NAME IS REQUIRED'\n         MEXIT\n.*\n.MSNGLBL ANOP\n         MNOTE 8,'CALLMXEV MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXFI": {"ttr": 4355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00E\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x08\\x00\\x86\\x00\\x82\\x00,\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:08:45", "lines": 134, "newlines": 130, "modlines": 44, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXFI &TYPE=,&PREFIX=,&PARM=,&ATOK=,                     +++\n               &SYSNAME=,                                            +++\n               &DSN=,&SYNC=,&WANAME=,                                +++\n               &RETOK=,                                              +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXFI CALL MATRIX TO PERFORM FILE ACTIONS LOAD AND SAVE\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n.*\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXFI                               *\n* COPYRIGHT EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998        *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&WANAME' EQ '').NONAME\n.*\n         XC    &LABL.NFFL,&LABL.NFFL\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n.*\n         AIF ('&TYPE' EQ 'LOAD').DOLOAD\n         AIF ('&TYPE' EQ 'SAVE').DOSAVE\n         AIF ('&TYPE' EQ 'ASSOC').DOASSO\n         AIF ('&TYPE' EQ 'DISASSOC').DODISA\n         AGO .INVTYP\n.*\n.DOLOAD  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RLOD) REQUEST LOAD WORKAREA\n         OI    &LABL.NFFL,&LABL.NFCL+&LABL.NFTK+&LABL.NFLN\n         @@ REG=R1,ADDR=&WANAME          WORKAREA NAME\n         MVC   &LABX.LDWN,0(R1)          MOVE NAME IN\n         AIF ('&DSN' EQ '').NODSN\n         @@ REG=R1,ADDR=&DSN             DSNAME\n         MVC   &LABX.LDSN,0(R1)          DSNAME\n         AGO   .MXCAL\n.*\n.DOSAVE  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RSAV) REQUEST SAVE WORKAREA\n         OI    &LABL.NFFL,&LABL.NFCL+&LABL.NFTK+&LABL.NFLN\n         @@ REG=R1,ADDR=&WANAME          WORKAREA NAME\n         MVC   &LABX.SVWN,0(R1)          MOVE NAME IN\n         AIF ('&DSN' EQ '').NODSN\n         @@ REG=R1,ADDR=&DSN             DSNAME\n         MVC   &LABX.SVSN,0(R1)          DSNAME\n         AGO   .MXCAL\n.*\n.DOASSO  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RASO) REQUEST ASSOCIATE\n         OI    &LABL.NFFL,&LABL.NFCL+&LABL.NFTK+&LABL.NFLN\n         @@ REG=R1,ADDR=&WANAME          WORKAREA NAME\n         XC    &LABX.ASRQ,&LABX.ASRQ\n         MVC   &LABX.ASWA,0(R1)          MOVE NAME IN\n         AIF ('&DSN' EQ '').NODSN\n         @@ REG=R1,ADDR=&DSN             DSNAME\n         MVC   &LABX.ASDN,0(R1)          DSNAME\n         AGO   .MXCAL\n.*\n.DODISA  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RASO) REQUEST DISASSOCIATE\n         OI    &LABL.NFFL,&LABL.NFCL+&LABL.NFTK+&LABL.NFLN\n         MVC   &LABX.ASRQ,=F'4'\n         @@ REG=R1,ADDR=&WANAME          WORKAREA NAME\n         MVC   &LABX.ASWA,0(R1)          MOVE NAME IN\n         AGO   .MXCAL\n.*\n.MXCAL   ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.INVTYP  ANOP\n         MNOTE 8,'CALLMXFI TYPE INVALID'\n         MEXIT\n.NONAME  ANOP\n         MNOTE 8,'CALLMXFI WORK AREA NAME IS REQUIRED'\n         MEXIT\n.NODSN   ANOP\n         MNOTE 8,'CALLMXFI DSN IS REQUIRED'\n         MEXIT\n.*\n.*\n.MSNGLBL ANOP\n         MNOTE 8,'CALLMXFI MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXLK": {"ttr": 5380, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x15\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x13\\x00\\x99\\x00r\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:13:15", "lines": 153, "newlines": 114, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXLK &TYPE=,&PREFIX=,&PARM=,&TOKEN=,&SYNC=YES,&KEY=,    +++\n               &SYSNAME=,                                            +++\n               &RETOK=,&ATOK=,                                       +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXLK CALL MATRIX TO LOCK OR UNLOCK A VWA\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RLAB,&RG          LABEL\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&RLAB    SETC  '&PF.RC'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         AIF ('&TYPE' EQ 'LOCK').LOCKIT\n         AIF ('&TYPE' EQ 'UNLOCK').UNLOCK\n         AGO .INVTYP\n.LOCKIT  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RLCK) REQUEST LOCK\n         MVI   &LABL.NFFL,&LABL.NFSN+&LABL.NFCL\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R1,ADDR=&TOKEN           TOKEN\n         MVC   &LABX.LTOK,0(R1)          MOVE IN TOKEN\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,SYSNAME=&SYSNAME\n         L     R1,&RLAB.KEY            RETURN KEY\n         AIF ('&KEY' EQ '').NOKY\n         @@ REG=R14,ADDR=&KEY          KEY ADDRESS\n         ST    R1,0(,R14)\n.NOKY    ANOP\n         AIF ('&NOTSUP'  NE '').GBRTBL\n         AIF ('&NOTFND'  NE '').GBRTBL\n         AIF ('&QUIESC'  NE '').GBRTBL\n         AIF ('&REQFAIL' NE '').GBRTBL\n         AIF ('&SOS'     NE '').GBRTBL\n         AIF ('&LOCKED'  NE '').GBRTBL\n         AIF ('&NOTINIT' NE '').GBRTBL\n         AIF ('&DSPTCHD' NE '').GBRTBL\n.*\n         AIF ('&RETOK'   EQ '').CHKERR\n         LTR  R15,R15\n         BZ   &RETOK\n         AIF ('&ERROR'   EQ '').MEXIT\n         B    &ERROR\n.MEXIT   ANOP\n         MEXIT\n.CHKERR  ANOP\n         AIF ('&ERROR'   EQ '').MEXIT\n         LTR  R15,R15\n         BNZ  &ERROR\n         MEXIT\n.*\n.GBRTBL  ANOP\n         AIF ('&RETOK'   EQ '').MSNGLBL\n         AIF ('&NOTSUP'  EQ '').MSNGLBL\n         AIF ('&NOTFND'  EQ '').MSNGLBL\n         AIF ('&QUIESC'  EQ '').MSNGLBL\n         AIF ('&REQFAIL' EQ '').MSNGLBL\n         AIF ('&SOS'     EQ '').MSNGLBL\n         AIF ('&LOCKED'  EQ '').MSNGLBL\n         AIF ('&NOTINIT' EQ '').MSNGLBL\n         AIF ('&DSPTCHD' EQ '').MSNGLBL\n         AIF ('&ERROR'   EQ '').MSNGLBL\n         @@# (R15),                                                   ++\n               &RETOK,                                                ++\n               &REQFAIL,                                              ++\n               &QUIESC,                                               ++\n               &NOTFND,                                               ++\n               &SOS,                                                  ++\n               &NOTSUP,                                               ++\n               &LOCKED,                                               ++\n               &NOTINIT,                                              ++\n               &ERROR,                                                ++\n               &DSPTCHD\n         MEXIT\n.*\n.* UNLOCK A WORK AREA\n.*\n.UNLOCK  ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RULK) REQUEST UNLOCK\n.*\n         MVI   &LABL.NFFL,&LABL.NFCL     SET CALL DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n.*\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R1,ADDR=&TOKEN           TOKEN\n         MVC   &LABX.LTOK,0(R1)          MOVE IN TOKEN\n         AIF ('&KEY' EQ '').NOKEY\n         @@ REG=R1,ADDR=&KEY             KEY\n         ST    R1,&LABX.LKEY             KEY TO UNLOCK WITH\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.INVTYP  ANOP\n         MNOTE 8,'CALLMXLK TYPE MUST BE LOCK OR UNLOCK'\n         MEXIT\n.*\n.NOTOKN  ANOP\n         MNOTE 8,'CALLMXLK TOKEN PARM REQUIRED'\n         MEXIT\n.*\n.NOKEY   ANOP\n         MNOTE 8,'CALLMXLK KEY IS REQUIRED'\n         MEXIT\n.*\n.MSNGLBL ANOP\n         MNOTE 8,'CALLMXLK MISSING BRANCH LABEL'\n         MEXIT\n.*\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXRD": {"ttr": 4362, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00S\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x08\\x00c\\x00^\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:08:53", "lines": 99, "newlines": 94, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXRD &PREFIX=,&PARM=,&ATOK=,                             ++\n               &SYSNAME=,          SYSTEM NAME                        ++\n               &TOKEN=,            CONNECTION TOKEN                   ++\n               &DEST=,             DESTINATION OF DATA                ++\n               &READLEN=,          LENGTH TO READ                     ++\n               &FROMADDR=,         START READING FROM ADDR            ++\n               &RETOK=,                                              +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &DSPTCHD=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXRD CALL MATRIX TO READ SPACE INTO USER AREA                  *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RLAB              LABEL\n         LCLC  &DSPT              DISPATCHED\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXRD                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n&RLAB    SETC  '&PF.RC'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         AIF ('&PARM' EQ '').PARMREQ\n         MVC   &LABL.REQ,=AL2(&LABL.RRED) REQUEST READ\n         MVI   &LABL.NFFL,&LABL.NFCL+&LABL.NFSN CALL DESCRIPTOR FLAGS\n.*\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&DEST' EQ '').NODEST\n         AIF ('&READLEN' EQ '').NORLEN\n         AIF ('&FROMADDR' EQ '').NOFRAD\n.SPCDET  ANOP\n         @@ REG=R1,ADDR=&TOKEN           TOKEN\n         MVC   &LABX.RTOK(L'&LABX.RTOK),0(R1) MOVE IN TOKEN\n         XC    &PARM,&PARM               CLEAR SECOND PARM\n         @@ REG=R1,ADDR=&DEST            DESTINATION ADDRESS\n         ST    R1,&LABX.RDTO             DESTINATION ADDRESS\n         @@ REG=R1,ADDR=&READLEN         READ LENGTH\n         ST    R1,&LABX.RWLN             READ LENGTH\n         @@ REG=R1,ADDR=&FROMADDR        ADDRESS TO READ FROM\n         MVC   &LABX.RWAD,0(R1)          READ FROM ADDRESS\n.*\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOTOKN  ANOP\n         MNOTE 8,'CALLMXRD TOKEN REQUIRED'\n         MEXIT\n.NODEST  ANOP\n         MNOTE 8,'CALLMXRD DEST ADDRESS REQUIRED'\n         MEXIT\n.NORLEN  ANOP\n         MNOTE 8,'CALLMXRD READ LENGTH IS REQUIRED'\n         MEXIT\n.NOFRAD  ANOP\n         MNOTE 8,'CALLMXRD FROMADDR REQUIRED'\n         MEXIT\n.PARMREQ ANOP\n         MNOTE 8,'CALLMXRD PARM REQUIRED'\n         MEXIT\n.*\n.MSNGLBL ANOP\n         MNOTE 8,'CALLMXRD MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXRZ": {"ttr": 4365, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00W\\x01\\x00\\x17O\\x01\\x03\\x10\\x1f\\x05\\x08\\x00^\\x00U\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2000-06-22T00:00:00", "modifydate": "2003-04-11T05:08:57", "lines": 94, "newlines": 85, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXRZ &PREFIX=,&PARM=,&ATOK=,                             ++\n               &SYSNAME=,          CONNECTION TOKEN                   ++\n               &TOKEN=,            VWA TO ADJUST                      ++\n               &RECSIZE=,          NEW REC SIZE                       ++\n               &SYNC=,                                                ++\n               &RETOK=,                                              +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &DSPTCHD=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXRZ CALL MATRIX TO SET WORK AREA RECORD SIZE                  *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 2000           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &DSPT              DISPATCHED\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXRD                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         AIF ('&PARM' EQ '').PARMREQ\n         MVC   &LABL.REQ,=AL2(&LABL.RVSZ) SET RECORD SIZE\n         MVI   &LABL.NFFL,&LABL.NFCL     SET CALL DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n.*\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&RECSIZE' EQ '').NOSIZE\n.SPCDET  ANOP\n         XC    &PARM,&PARM               CLEAR SECOND PARM\n         @@ REG=R0,ADDR=&RECSIZE         RECORD SIZE\n         ST    R0,&LABX.RZSZ             MOVE IN SIZE\n         @@ REG=R1,ADDR=&TOKEN           TOKEN\n         MVC   &LABX.RZTK(L'&LABX.RZTK),0(R1) MOVE IN TOKEN\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOTOKN  ANOP\n         MNOTE 8,'CALLMXRZ TOKEN REQUIRED'\n         MEXIT\n.NOWANM  ANOP\n         MNOTE 8,'CALLMXRZ WANAME IS REQUIRED'\n         MEXIT\n.NOSIZE  ANOP\n         MNOTE 8,'CALLMXRZ RECORD SIZE IS REQUIRED'\n         MEXIT\n.PARMREQ ANOP\n         MNOTE 8,'CALLMXRZ PARM REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXSR": {"ttr": 4609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x02\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\t\\x00l\\x00n\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:09:02", "lines": 108, "newlines": 110, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXSR &WANAME=,&PREFIX=,&PARM=,&TOKEN=,&ATOK=,           +++\n               &SYSNAME=,                                            +++\n               &DATA=,&STARTAT=,&SCANLEN=,&ARGLEN=,                  +++\n               &DSPTCHD=,                                            +++\n               &RETOK=,                                              +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXSR CALL MATRIX TO SEARCH A WORK AREA                         *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&RLAB,&LABX,&LBL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXSR                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&DATA' EQ '').NODATA\n         AIF ('&ARGLEN' EQ '').NOARGL\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n&RLAB    SETC  '&PF.RC'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RSRC) REQUEST SEARCH VWA\n         MVI   &LABL.NFFL,&LABL.NFSN+&LABL.NFCL+&LABL.NFLN\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&WANAME' NE '').WANTKN\n         @@ REG=R1,ADDR=&TOKEN           TOKEN\n         XC    &PARM,&PARM               NO 2ND PRM\n         MVC   &LABX.HTOK(L'&LABX.HTOK),0(R1) MOVE IN TOKEN\n         XC    &LABX.HWNM,&LABX.HWNM     NO WORK AREA NAME\n         AGO   .SETDATA\n.NOTOKN  ANOP\n         AIF ('&WANAME' EQ '').NOWA\n         @@ REG=R1,ADDR=&WANAME          WORK AREA NAME\n         MVC   &LABX.HWNM,0(R1)          WORK AREA NAME\n         XC    &LABX.HTOK,&LABX.HTOK     NO TOKEN\n.SETDATA ANOP\n         @@ REG=R1,ADDR=&DATA            DATA TO SEARCH FOR\n         MVC   &LABX.HSTR,0(R1)          DATA TO SEARCH FOR\n.*\n         @@ REG=R1,ADDR=&ARGLEN          LENGTH OF ARGUMENT\n         ST    R1,&LABX.HCLN             LENGTH OF ARGUMENT\n.*\n         AIF ('&STARTAT' EQ '').NOSOFF\n         @@ REG=R1,ADDR=&STARTAT         STARTING OFFSET\n         MVC   &LABX.HOFF,0(R1)          OFFSET\n         AGO   .CHKSCN\n.NOSOFF  ANOP\n         XC    &LABX.HOFF,&LABX.HOFF     NO OFFSET\n.*\n.CHKSCN  ANOP\n         AIF ('&SCANLEN' EQ '').NOSCANL\n         @@ REG=R1,ADDR=&SCANLEN         LENGTH TO SCAN\n         MVC   &LABX.HLEN,0(R1)          SCAN LENGTH\n         AGO  .CALLIT\n.NOSCANL ANOP\n         XC    &LABX.HLEN,&LABX.HLEN     NO LENGTH\n.*\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOARGL  ANOP\n         MNOTE 8,'CALLMXSR ARGLEN IS REQUIRED'\n         MEXIT\n.NODATA  ANOP\n         MNOTE 8,'CALLMXSR DATA TO LOCATE IS REQUIRED'\n         MEXIT\n.NOWA    ANOP\n         MNOTE 8,'CALLMXSR WORK AREA NAME IS REQUIRED'\n         MEXIT\n.WANTKN  ANOP\n         MNOTE 8,'CALLMXSR WANAME IS INVALID WITH TOKEN'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXST": {"ttr": 5384, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00%\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\x13\\x01\\t\\x00\\x92\\x00\\xe7\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:13:25", "lines": 265, "newlines": 146, "modlines": 231, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXST &STAT=,&PREFIX=,&PARM=,&SPACE=,&NAME=,&WANUM=,     +++\n               &SYSNAME=,                                            +++\n               &TOKEN=,&ATOK=,&FIRST=,                               +++\n               &SEGNUM=,                                             +++\n               &RETOK=,                                              +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXST CALL MATRIX TO GET STATISTICS                             *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RLAB              LABEL\n.*\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXST                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&RLAB    SETC  '&PF.RC'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RSTS) REQUEST STATS\n         MVI   &LABL.NFFL,&LABL.NFSN+&LABL.NFCL SYNC CALL\n         AIF ('&STAT' EQ 'NUMSPC').NUMSP\n         AIF ('&STAT' EQ 'SPACEDET').SPCDET\n         AIF ('&STAT' EQ 'SPSEGDET').SSEGDET\n         AIF ('&STAT' EQ 'WASEGDET').WSEGDET\n         AIF ('&STAT' EQ 'WADET').WADET\n         AIF ('&STAT' EQ 'NUMWA').NUMWA\n         AIF ('&STAT' EQ 'NUMTBL').NUMTBL\n         AIF ('&STAT' EQ 'TBLDET').TBLDET\n         AIF ('&STAT' EQ 'TBLDIM').TBLDIM\n         AIF ('&STAT' EQ 'EVENT').EVENT\n         AGO .INVSTAT\n.NUMSP   ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STNS)\n         AGO   .CALLIT\n.SPCDET  ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STSD)\n         AIF ('&SPACE' EQ '').NOSPAC\n         @@ REG=R1,ADDR=&SPACE           SPACE NUMBER\n         ST    R1,&LABX.STS#             SPACE NUMBER\n         AGO   .CALLIT\n.*\n.* GET SPACEMAP SEGMENT DETAILS\n.*\n.SSEGDET  ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STSG)\n         AIF ('&SPACE' EQ '').NOSPAC\n         @@ REG=R1,ADDR=&SPACE           SPACE NUMBER\n         ST    R1,&LABX.STS#             SPACE NUMBER\n         AIF   ('&SEGNUM' EQ '').NOSEG\n         @@ REG=R1,ADDR=&SEGNUM          SEGMENT NUMBER\n         ST    R1,&LABX.STW#\n         AGO   .CALLIT\n.*\n.* GET NUMBER OF WORK AREAS\n.*\n.NUMWA   ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STNW)\n         AGO   .CALLIT\n.*\n.* GET NUMBER OF TABLES\n.*\n.NUMTBL  ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STT#)\n         AGO   .CALLIT\n.*\n.* GET TABLE DETAILS\n.*\n.TBLDET  ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STTD)\n         AIF ('&NAME' EQ '').TBLBYN\n         @@ REG=R1,ADDR=&NAME            TABLE NAME\n         MVC   &LABX.STWN,0(R1)          NAME OF TABLE\n         AIF ('&TOKEN' EQ '').NOTOK1\n         @@ REG=R1,ADDR=&TOKEN           TABLE TOKEN\n         ST    R1,&LABX.STW#             TBL TOKEN\n         AGO   .CALLIT\n.*\n.NOTOK1  ANOP\n         XC    &LABX.STW#,&LABX.STW#     TBL NUMBER\n         AGO   .CALLIT\n.*\n.TBLBYN  ANOP\n         AIF ('&TOKEN' EQ '').NOTTOK\n         @@ REG=R1,ADDR=&TOKEN           TABLE  NUMBER\n         ST    R1,&LABX.STW#             TBL NUMBER\n         XC    &LABX.STWN,&LABX.STWN     TBL NAME\n         AGO   .CALLIT\n.*\n.* GET TABLE DIMENSIONS\n.*\n.TBLDIM  ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STDM)\n.*\n         AIF ('&FIRST' EQ '').NOFRST\n         @@ REG=R1,ADDR=&FIRST           FIRST ONE TO RETURN\n         ST    R1,&LABX.STT1\n         AGO   .SVFRST\n.NOFRST  ANOP\n         SR    R1,R1\n.SVFRST  ANOP\n         ST    R1,&LABX.STT1\n.*\n         AIF ('&NAME' EQ '').TBLBYND\n         @@ REG=R1,ADDR=&NAME            TABLE NAME\n         MVC   &LABX.STTN,0(R1)          NAME OF TABLE\n.*\n         AIF ('&TOKEN' NE '').NOTTOK\n         SR    R1,R1\n         ST    R1,&LABX.STTK\n         AGO   .CALLIT\n.*\n.TBLBYND ANOP\n         AIF ('&TOKEN' EQ '').NOTTOK\n         @@ REG=R1,ADDR=&TOKEN           TABLE  NUMBER\n         ST    R1,&LABX.STTK             TBL NUMBER\n         XC    &LABX.STTN,&LABX.STTN     TBL NAME\n         AGO   .CALLIT\n.*\n.* GET WORK AREA SEGMENT DETAILS\n.*\n.WSEGDET  ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STWV)\n         AIF ('&NAME' EQ '').NOWAN\n         @@ REG=R1,ADDR=&NAME            WORK AREA NUMBER\n         MVC   &LABX.STWN,0(R1)          NAME OF SPACE\n         AIF   ('&SEGNUM' EQ '').NOSEG\n         @@ REG=R1,ADDR=&SEGNUM          SEGMENT NUMBER\n         ST    R1,&LABX.STW#\n         AGO   .CALLIT\n.WADET   ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STWD)\n         AIF ('&NAME' EQ '').USENUM\n         @@ REG=R1,ADDR=&NAME            WORK AREA NAME\n         MVC   &LABX.STWN,0(R1)          NAME OF SPACE\n         XC    &LABX.STW#,&LABX.STW#     WA NUMBER\n         AGO   .CALLIT\n.USENUM  ANOP\n         AIF ('&WANUM' EQ '').NOWA\n         @@ REG=R1,ADDR=&WANUM           WORK AREA NUMBER\n         ST    R1,&LABX.STW#             WA NUMBER\n         XC    &LABX.STWN,&LABX.STWN     WA NAME\n         AGO   .CALLIT\n.*\n.* GET EVENT INFORMATION\n.*\n.EVENT   ANOP\n         MVC   &LABX.STRQ,=A(&LABX.STEV)\n         AIF ('&NAME' EQ '').NOENAM\n         @@ REG=R1,ADDR=&NAME            EVENT NAME\n         MVC   &LABX.SENM,0(R1)          EVENT NAME\n         AGO   .CHKETOK\n.NOENAM  ANOP\n         XC    &LABX.SENM,&LABX.SENM     NO EVENT NAME\n.CHKETOK ANOP\n         AIF ('&TOKEN' EQ '').NOETOK     EVENT TOKEN\n         @@ REG=R1,ADDR=&TOKEN           EVENT TOKEN\n         MVC   &LABX.SETK,0(R1)          EVENT TOKEN\n         AGO   .CALLIT\n.NOETOK  ANOP\n         XC    &LABX.SETK,&LABX.SETK     EVENT TOKEN\n         AGO   .CALLIT\n.*\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,SYSNAME=&SYSNAME\n         AIF ('&STAT' EQ 'NUMWA').SAVENUM\n         AIF ('&STAT' NE 'NUMSPC').RETDET\n.SAVENUM ANOP\n         L     R1,&RLAB.RST#           RETURN NUMBER OF SPACES\n.RETDET  ANOP\n         AIF ('&NOTSUP'  NE '').GBRTBL\n         AIF ('&NOTFND'  NE '').GBRTBL\n         AIF ('&QUIESC'  NE '').GBRTBL\n         AIF ('&REQFAIL' NE '').GBRTBL\n         AIF ('&SOS'     NE '').GBRTBL\n         AIF ('&LOCKED'  NE '').GBRTBL\n         AIF ('&NOTINIT' NE '').GBRTBL\n*\n         AIF ('&RETOK'   EQ '').CHKERR\n         LTR  R15,R15\n         BZ   &RETOK\n         AIF ('&ERROR'   EQ '').MEXIT\n         B    &ERROR\n.MEXIT   ANOP\n         MEXIT\n.CHKERR  ANOP\n         AIF ('&ERROR'   EQ '').MEXIT\n         LTR  R15,R15\n         BNZ  &ERROR\n         MEXIT\n.*\n.GBRTBL  ANOP\n         AIF ('&RETOK'   EQ '').MSNGLBL\n         AIF ('&NOTSUP'  EQ '').MSNGLBL\n         AIF ('&NOTFND'  EQ '').MSNGLBL\n         AIF ('&QUIESC'  EQ '').MSNGLBL\n         AIF ('&REQFAIL' EQ '').MSNGLBL\n         AIF ('&SOS'     EQ '').MSNGLBL\n         AIF ('&LOCKED'  EQ '').MSNGLBL\n         AIF ('&NOTINIT' EQ '').MSNGLBL\n         AIF ('&ERROR'   EQ '').MSNGLBL\n         @@# (R15),                                                   ++\n               &RETOK,                                                ++\n               &REQFAIL,                                              ++\n               &QUIESC,                                               ++\n               &NOTFND,                                               ++\n               &SOS,                                                  ++\n               &NOTSUP,                                               ++\n               &LOCKED,                                               ++\n               &NOTINIT,                                              ++\n               &ERROR,                                                ++\n               &ERROR\n         MEXIT\n.*\n.INVSTAT ANOP\n         MNOTE 8,'CALLMXST STATS FIELD IS INVALID'\n         MEXIT\n.*\n.NOSPAC  ANOP\n         MNOTE 8,'CALLMXST SPACE PARM REQUIRED'\n         MEXIT\n.*\n.NOWA    ANOP\n         MNOTE 8,'CALLMXST WORK AREA NAME OR NUMBER REQUIRED'\n         MEXIT\n.*\n.NOWAN   ANOP\n         MNOTE 8,'CALLMXST WORK AREA NAME REQUIRED'\n         MEXIT\n.*\n.NOSEG   ANOP\n         MNOTE 8,'CALLMXST SEGMENT NUMBER REQUIRED'\n         MEXIT\n.*\n.NOTTOK  ANOP\n         MNOTE 8,'CALLMXST EITHER NAME OR TOKEN OF TABLE REQUIRED'\n         MEXIT\n.*\n.MSNGLBL ANOP\n         MNOTE 8,'CALLMXST MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXSZ": {"ttr": 4617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x16\\x01\\x00\\x17/\\x01\\x03\\x10\\x1f\\x05\\t\\x00d\\x00R\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2000-06-20T00:00:00", "modifydate": "2003-04-11T05:09:16", "lines": 100, "newlines": 82, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXSZ &PREFIX=,&PARM=,&ATOK=,                             ++\n               &SYSNAME=,          CONNECTION TOKEN                   ++\n               &WANAME=,           VWA TO ADJUST                      ++\n               &KEY=,              KEY IF LOCKED                      ++\n               &SIZE=,             NEW SIZE                           ++\n               &SYNC=YES,          DESTINATION OF DATA                ++\n               &RETOK=,                                              +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &DSPTCHD=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXSZ CALL MATRIX TO SET SIZE OF WORK AREA                      *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 2000           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &DSPT              DISPATCHED\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXSZ                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         AIF ('&PARM' EQ '').PARMREQ\n         MVC   &LABL.REQ,=AL2(&LABL.SVSZ) SET VWA SIZE\n         MVI   &LABL.NFFL,&LABL.NFCL+&LABL.NFTK+&LABL.NFAF\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&WANAME' EQ '').NOWANM\n         AIF ('&SIZE' EQ '').NOSIZE\n.SPCDET  ANOP\n         @@ REG=R1,ADDR=&WANAME          WA NAME\n         MVC   &LABX.SZNM(L'&LABX.SZNM),0(R1) MOVE IN NAME\n         XC    &PARM,&PARM               CLEAR SECOND PARM\n         @@ REG=R1,ADDR=&SIZE            NEW SIZE\n         MVC   &LABX.SZSZ(L'&LABX.SZSZ),0(R1) MOVE IN SIZE\n         AIF ('&KEY' EQ '').NOKEY\n         @@ REG=R0,ADDR=&KEY             KEY\n         AGO  .CALLIT\n.NOKEY   ANOP\n         SR    R0,R0\n.CALLIT  ANOP\n         ST    R0,&LABX.SZKY             KEY\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOTOKN  ANOP\n         MNOTE 8,'CALLMXSZ TOKEN REQUIRED'\n         MEXIT\n.NOWANM  ANOP\n         MNOTE 8,'CALLMXSZ WANAME IS REQUIRED'\n         MEXIT\n.NOSIZE  ANOP\n         MNOTE 8,'CALLMXSZ NEW SIZE IS REQUIRED'\n         MEXIT\n.PARMREQ ANOP\n         MNOTE 8,'CALLMXSZ PARM REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXTL": {"ttr": 4620, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x19\\x01\\x00\\x07\\x0f\\x01\\x03\\x10\\x1f\\x05\\t\\x00R\\x00U\\x00\\x18\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2000-03-10T00:00:00", "modifydate": "2003-04-11T05:09:19", "lines": 82, "newlines": 85, "modlines": 24, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXTL &PREFIX=,&PARM=,                                   +++\n               &SYSNAME=,                                            +++\n               &DSNPRFX=,                                            +++\n               &NAME=,                                               +++\n               &RETOK=,&ATOK=,                                       +++\n               &SYNC=,                                               +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXDT CALL MATRIX TO LOAD A TABLE\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.TLOA) REQUEST LOAD TABLE\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFLN TASK DESCRIPTOR FLAGS\n.*\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&DSNPRFX' EQ '').NODSNP\n         @@ REG=R1,ADDR=&DSNPRFX\n         MVC   &LABX.TLPF,0(R1)\n         AIF ('&NAME' EQ '').NONAME\n         @@ REG=R1,ADDR=&NAME\n         MVC   &LABX.TLNM,0(R1)         NAME OF TABLE\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               RETOK=&RETOK,                                          ++\n               SYSNAME=&SYSNAME,                                      ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NODSNP  ANOP\n         MNOTE 8,'CALLMXTL DSNPRFX IS REQUIRED'\n         MEXIT\n.NONAME  ANOP\n         MNOTE 8,'CALLMXTL NAME OF TABLE TO LOAD IS REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXTS": {"ttr": 4865, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00#\\x01\\x00\\x07\\x0f\\x01\\x03\\x10\\x1f\\x05\\t\\x00R\\x00U\\x00\\x16\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2000-03-10T00:00:00", "modifydate": "2003-04-11T05:09:23", "lines": 82, "newlines": 85, "modlines": 22, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXTS &PREFIX=,&PARM=,                                   +++\n               &SYSNAME=,                                            +++\n               &DSNPRFX=,                                            +++\n               &NAME=,                                               +++\n               &RETOK=,&ATOK=,                                       +++\n               &SYNC=YES,                                            +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXDT CALL MATRIX TO SAVE A TABLE\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.TSAV) REQUEST SAVE TABLE\n         MVI   &LABL.NFFL,&LABL.NFTK+&LABL.NFLN TASK DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&DSNPRFX' EQ '').NODSNP\n         @@ REG=R1,ADDR=&DSNPRFX\n         MVC   &LABX.TLPF,0(R1)\n         AIF ('&NAME' EQ '').NONAME\n         @@ REG=R1,ADDR=&NAME\n         MVC   &LABX.TLNM,0(R1)         NAME OF TABLE\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               RETOK=&RETOK,                                          ++\n               SYSNAME=&SYSNAME,                                      ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NODSNP  ANOP\n         MNOTE 8,'CALLMXTS DSNPRFX IS REQUIRED'\n         MEXIT\n.NONAME  ANOP\n         MNOTE 8,'CALLMXTS NAME OF TABLE TO DELETE IS REQUIRED'\n         MEXIT\n.*\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXWR": {"ttr": 4868, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\r\\x00'\\x00\\x99\\x06\\x0f\\x01\\x03\\x10\\x1f\\x05\\t\\x00e\\x00Z\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.13", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-04-11T05:09:27", "lines": 101, "newlines": 90, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXWR &PREFIX=,&PARM=,&ATOK=,                             ++\n               &SYSNAME=,          CONNECTION TOKEN                   ++\n               &TOKEN=,            CONNECTION TOKEN                   ++\n               &DEST=,             DESTINATION OF DATA                ++\n               &SYNC=YES,          DESTINATION OF DATA                ++\n               &WRTLEN=,           LENGTH TO WRITE                    ++\n               &FROMADDR=,         START WRITING FROM ADDR            ++\n               &RETOK=,                                              +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXWR CALL MATRIX TO WRITE SPACE FROM USER AREA                 *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LBL,&LABX   LABEL\n.*\n* ----------------------------------------------------------- *\n* MATRIX CLIENT API    CALLMXWR                               *\n* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998    *\n* ----------------------------------------------------------- *\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RWRT) REQUEST WRITE\n         MVI   &LABL.NFFL,&LABL.NFCL\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&DEST' EQ '').NODEST\n         AIF ('&WRTLEN' EQ '').NORLEN\n         AIF ('&FROMADDR' EQ '').NOFRAD\n.SPCDET  ANOP\n         @@ REG=R1,ADDR=&TOKEN           TOKEN\n         MVC   &LABX.ITOK(L'&LABX.ITOK),0(R1) MOVE IN TOKEN\n         XC    &PARM,&PARM\n         @@ REG=R1,ADDR=&DEST            DESTINATION ADDRESS\n         MVC   &LABX.IWAD,0(R1)          DESTINATION ADDRESS\n         @@ REG=R1,ADDR=&WRTLEN          WRITE LENGTH\n         ST    R1,&LABX.IWLN             WRITE LENGTH\n         @@ REG=R1,ADDR=&FROMADDR        ADDRESS TO WRITE FROM\n         ST    R1,&LABX.IFRM             WRITE FROM ADDRESS\n.*\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOTOKN  ANOP\n         MNOTE 8,'CALLMXWR TOKEN REQUIRED'\n         MEXIT\n.NODEST  ANOP\n         MNOTE 8,'CALLMXWR DEST ADDRESS REQUIRED'\n         MEXIT\n.NORLEN  ANOP\n         MNOTE 8,'CALLMXWR WRITE LENGTH IS REQUIRED'\n         MEXIT\n.NOFRAD  ANOP\n         MNOTE 8,'CALLMXWR FROMADDR REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLMXXC": {"ttr": 4871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x001\\x00\\x98(\\x9f\\x01\\x03\\x10\\x1f\\x05\\t\\x00a\\x00k\\x008\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1998-10-16T00:00:00", "modifydate": "2003-04-11T05:09:31", "lines": 97, "newlines": 107, "modlines": 56, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CALLMXXC &SOURCE=,&TARGET=,&PREFIX=,&PARM=,&ATOK=,          +++\n               &SYSNAME=,                                            +++\n               &EXINUSE=,                                            +++\n               &SYNC=,                                               +++\n               &RETOK=,                                              +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLMXXC CALL MATRIX TO EXCHANGE WORK AREAS                        *\n.* COPYRIGHT EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998               *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL,&LABX,&LBL   LABEL\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n.*\n         AIF ('&SOURCE' EQ '').NOSRCE\n         AIF ('&TARGET' EQ '').NOTARG\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'MX'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         MVC   &LABL.REQ,=AL2(&LABL.RXCH)       REQUEST EXCHANGE\n         MVI   &LABL.NFFL,&LABL.NFCL+&LABL.NFAF CALL DESCRIPTOR FLAGS\n.*\n         AIF ('&SYNC' EQ '').SYYES\n         AIF ('&SYNC' EQ 'YES').SYYES\n         AIF ('&SYNC' EQ 'NO').SYNO\n         @@ REG=R0,ADDR=&SYNC\n         LTR   R0,R0                     SYNC OR ASYNCH?\n         BNZ   &LBL.AS                   ASYNC\n.SYYES   ANOP\n         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS\n.SYNO    ANOP\n&LBL.AS  DS   0H\n.*\n         AIF ('&EXINUSE' EQ 'YES').EXYES\n         AIF ('&EXINUSE' EQ 'NO').EXNO\n         AIF ('&EXINUSE'(1,1) EQ '(').EXNR\n         AGO .INVEX\n.EXNR    ANOP\n         AIF ('&EXINUSE'(2,1) NE 'R').INVEX\n&LEN     SETA K'&EXINUSE\n&RG      SETC '&EXINUSE'(2,&LEN-2)\n         STC  &RG,&LABX.EXEX\n         AGO .SETX\n.EXYES   ANOP\n         MVI &LABX.EXEX,&LABX.EXYS       X'F0'\n         AGO .SETX\n.EXNO    ANOP\n         MVI &LABX.EXEX,&LABX.EXNO       X'F1'\n.SETX    ANOP\n         @@ REG=R1,ADDR=&SOURCE          SOURCE WORKAREA NAME\n         MVC   &LABX.XSWN,0(R1)          MOVE NAME IN\n         @@ REG=R1,ADDR=&TARGET          TARGET WORKAREA NAME\n         MVC   &LABX.XTWN,0(R1)          MOVE NAME IN\n.CALLIT  ANOP\n        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++\n               SYSNAME=&SYSNAME,                                      ++\n               RETOK=&RETOK,                                          ++\n               DSPTCHD=&DSPTCHD,                                      ++\n               NOTSUP=&NOTSUP,                                        ++\n               NOTFND=&NOTFND,                                        ++\n               QUIESC=&QUIESC,                                        ++\n               REQFAIL=&REQFAIL,                                      ++\n               SOS=&SOS,                                              ++\n               LOCKED=&LOCKED,                                        ++\n               NOTINIT=&NOTINIT,                                      ++\n               ERROR=&ERROR\n         MEXIT\n.*\n.NOSRCE  ANOP\n         MNOTE 8,'CALLMXXC SOURCE WORKAREA NAME IS REQUIRED'\n         MEXIT\n.NOTARG  ANOP\n         MNOTE 8,'CALLMXXC TARGET WORKAREA NAME IS REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLSRV": {"ttr": 5633, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00@\\x01\\x00(\\x9f\\x01\\x03\\x10\\x1f\\x05\\x13\\x00f\\x00f\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2000-10-15T00:00:00", "modifydate": "2003-04-11T05:13:40", "lines": 102, "newlines": 102, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n         CALLSRV &PARM=,&LABL=,&ATOK=,                               +++\n               &SYSNAME=,                                            +++\n               &RETOK=,                                              +++\n               &DSPTCHD=,                                            +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* CALLSRV CALL SRV                                                   *\n.* COPYRIGHT (C) SIMON SPANCHAK 1999                                  *\n.* ****************************************************************** *\n         GBLB  &G@ENTC                  SEQUENCE ENTRIES AND EXITS\n         LCLC  &PLBL\n&PLBL    SETC 'CX&SYSNDX'\n         XC    &LABL.PCR#,&LABL.PCR#\n         AIF   ('&PARM' EQ '').NOPARM\n         AIF   ('&ATOK' EQ '').NOATOK\n         @@ REG=R0,ADDR=&ATOK\n         ST    R0,&LABL.ATOK       ACCESS TOKEN\n         AIF ('&ATOK' NE '0').NOATOK\n         AIF   ('&SYSNAME' EQ '').NOSYSN\n.NOATOK  ANOP\n         AIF   ('&SYSNAME' EQ '').SKPSYSN\n         @@ REG=R1,ADDR=&SYSNAME\n         LTR   R1,R1\n         BZ    &PLBL\n         MVC   &LABL.SYSN,0(R1)\n.SKPSYSN ANOP\n&PLBL    LA    R1,&LABL.MSG\n         ST    R1,&PARM\n         LA    R1,&PARM\n         AIF (&G@ENTC).USEAPI       IF BETWEEN SSENTRY AND SSEXIT\n         L     R15,=V(SRSTUB)       OBTAINS STACK\n         AGO .BASIT\n.USEAPI  ANOP\n         L     R15,=V(SRSTUBA)      ASSUME STACK EXISTS\n.BASIT   ANOP\n         BASR  R14,R15\n         AIF ('&NOTSUP'  NE '').GBRTBL\n         AIF ('&NOTFND'  NE '').GBRTBL\n         AIF ('&QUIESC'  NE '').GBRTBL\n         AIF ('&REQFAIL' NE '').GBRTBL\n         AIF ('&SOS'     NE '').GBRTBL\n         AIF ('&LOCKED'  NE '').GBRTBL\n         AIF ('&NOTINIT' NE '').GBRTBL\n         AIF ('&DSPTCHD' NE '').GBRTBL\n*\n         AIF ('&RETOK'   EQ '').CHKERR\n         LTR  R15,R15\n         COND Z,LBL=&RETOK\n         AIF ('&ERROR'   EQ '').MEXIT     NORED WITH NO RETOK'\n         COND ,LBL=&ERROR\n.MEXIT   ANOP\n         MEXIT\n.CHKERR  ANOP\n         AIF ('&ERROR'   EQ '').MEXIT\n         LTR  R15,R15\n         COND NZ,LBL=&ERROR\n         MEXIT\n.*\n.GBRTBL  ANOP\n         AIF ('&RETOK'   EQ '').MSNGLBL\n         AIF ('&NOTSUP'  EQ '').MSNGLBL\n         AIF ('&NOTFND'  EQ '').MSNGLBL\n         AIF ('&QUIESC'  EQ '').MSNGLBL\n         AIF ('&REQFAIL' EQ '').MSNGLBL\n         AIF ('&SOS'     EQ '').MSNGLBL\n         AIF ('&LOCKED'  EQ '').MSNGLBL\n         AIF ('&NOTINIT' EQ '').MSNGLBL\n         AIF ('&DSPTCHD' EQ '').MSNGLBL\n         AIF ('&ERROR'   EQ '').MSNGLBL\n         @@# (R15),                                                   ++\n               &RETOK,                                                ++\n               &REQFAIL,                                              ++\n               &QUIESC,                                               ++\n               &NOTFND,                                               ++\n               &SOS,                                                  ++\n               &NOTSUP,                                               ++\n               &LOCKED,                                               ++\n               &NOTINIT,                                              ++\n               &ERROR,                                                ++\n               &DSPTCHD\n         MEXIT\n.*\n.NOPARM  ANOP\n         MNOTE 8,'CALLSRV PARM LIST IS REQUIRED'\n         MEXIT\n.NOSYSN  ANOP\n         MNOTE 8,'CALLSRV SYSNAME REQUIRED WHEN ATOK IS ZERO'\n         MEXIT\n.MSNGLBL ANOP\n         MNOTE 8,'CALLSRV MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOSEMX": {"ttr": 4877, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x009\\x01\\x00\\x16\\x8f\\x01\\x03\\x10\\x1f\\x05\\t\\x00\\x16\\x00\\x16\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-06-16T00:00:00", "modifydate": "2003-04-11T05:09:39", "lines": 22, "newlines": 22, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   CLOSEMX &DCB=\n.*\n.* ****************************************************************** *\n.* CLOSEMX  OPEN A MATRIX FILE                                        *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PLBL\n         AIF ('&LABEL' EQ '').NOLABL\n&LABEL   DS    0H\n.NOLABL  ANOP\n         AIF ('&DCB' EQ '').NODCB\n         @@ REG=R1,ADDR=&DCB\n         L     R15,=V(CLOSEMX)\n         BASR  R14,R15\n         MEXIT\n.*\n.NODCB   ANOP\n         MNOTE 8,'CLOSEMX DCB IS REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXMSGREC": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x009\\x00\\x98\\x19o\\x01\\x03\\t\\x1f\\x00C\\x013\\x00f\\x01\\x15\\xd7\\xf3\\xf9\\xf0@@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1998-07-15T00:00:00", "modifydate": "2003-04-01T00:43:39", "lines": 307, "newlines": 102, "modlines": 277, "user": "P390"}, "text": "         MACRO\n&LABEL   MXMSGREC &DSECT=YES,&PREFIX=\n.*\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* MATRIX USER INTERFACE PARAMETER DEFINITION. THE STORAGE DEFINED BY\n.* THIS MACRO IS COPIED INTO THE DEFINITION OF MXUSPLST AND MXPRREC\n.* THIS IS DONE TO SYNCRHONIZE THE CONTENTS OF THE PARAMETER BLOCKS.\n.* IF THIS BLOCK IS UPDATED ANY PROGRAM USING MXUSPLST OR MXPRREC\n.* MUST BE REASSEMBLED.\n.*\n         LCLC &PF,&ORG\n         LCLC &LB                    PREFIX\n.*\n         AIF ('&PREFIX' EQ '').NOPRFX\n&PF      SETC  '&PREFIX'             LOCAL PREFIX\n         AGO .SETLB\n.NOPRFX  ANOP\n&PF      SETC  'MX'                  DEFAULT PREFIX\n.SETLB   ANOP\n&LB      SETC  '&PF.MS'              LABEL FOR BLOCK\n.*\n.* DETERMINE TYPE OF LABEL TO GENERATE\n.*\n         AIF ('&DSECT' EQ 'NO').NODSCT\n         AIF ('&DSECT' EQ 'YES').DSECT\n         AGO .INVDSC\n.*\n.DSECT   ANOP\n         AIF ('&LABEL' EQ '').NOLAB1\n&LABEL   DSECT\n&LB.GREC DS  0F\n         AGO .GENPLS\n.*\n.NOLAB1  ANOP\n&LB.GREC DSECT\n         AGO .GENPLS\n.*\n.NODSCT  ANOP\n         AIF ('&LABEL' EQ '').NOLAB2\n&LABEL   DS  0F\n.NOLAB2  ANOP\n&LB.GREC DS  0F\n.GENPLS  ANOP\n&ORG     SETC '&LB.GREC'\n*\n* MESSAGE OVERLAYS\n*\n&LB.NOFR EQU  X'F0'            0=NO FORCE, 1=FORCE\n&LB.FORC EQU  X'F1'            0=NO FORCE, 1=FORCE\n*\n         ORG  &ORG\n&LB.GRET DS   CL40             RETURNED MESSAGE\n         ORG  &ORG\n*\n* CONNECT TO SYSTEM PARTNERS\n*\n&LB.CONS ORG  &ORG\n&LB.CONT DS   D                PARTNERS TOKEN\n&LB.CONA DS   CL16             PARTNERS NAME\n&LB.CONF DS   X                CONNECTION FLAG\n&LB.CONC EQU  X'80'            THIS IS CONNECT\n&LB.CONE EQU  X'40'            THIS IS CONNECT EVENT\n&LB.CONG DS   X                EVENT FLAG\n&LB.CONM DS   CL8              CONNECT EVENT NAME\n         ORG  ,\n*\n* DELETE WORK AREA MESSAGE OVERLAY\n*\n&LB.DELW ORG  &ORG\n&LB.DWA1 DS   CL4              NAME OF WA TO DELETE\n&LB.DWFC DS   X                0=NO FORCE, 1=FORCE\n         ORG  ,\n*\n* CREATE WORK AREA\n*\n&LB.CRTW ORG  &ORG\n&LB.WSIZ DS   D                SIZE OF WORKAREA\n&LB.WWA1 DS   CL4              NAME OF WA TO CREATE\n&LB.PWDL DS   F                VWAD TOKEN FOR NOTIFY\n&LB.SOWN DS   CL8              SYSTEM OWNER\n&LB.WWFL DS   X                FLAGS\n&LB.WWFM EQU  X'80'            MIRROR THIS\n&LB.WWIN EQU  X'40'            INITIALIZE THIS SPACE\n&LB.WWIP EQU  X'20'            INITIALIZATION PROGRESS\n         ORG  ,\n*\n&LB.ADJV ORG  &ORG\n&LB.ADNM DS   CL4              NAME OF VWA TO ADJUST\n&LB.ADLN DS   CL8              NEW LENGTH OF VWA\n         ORG  ,\n*\n&LB.COPY ORG  &ORG\n&LB.PLEN DS   D                LENGTH TO COPY\n&LB.PFAD DS   D                FROM ADDRESS\n&LB.PTAD DS   D                TO ADDRESS\n&LB.PFNM DS   CL4              FROM WORK AREA NAME\n&LB.PTNM DS   CL4              TO WORK AREA NAME\n         ORG  ,\n*\n&LB.CONN ORG  &ORG\n&LB.NWA1 DS   CL4              NAME OF WA TO CONNECT TO\n&LB.COTK MXTKTOKN DSECT=NO,PREFIX=&LB.RCTK SPACE CONNECTION TOKEN\n         ORG  ,\n*\n&LB.READ ORG  &ORG\n&LB.RTOK MXTKTOKN DSECT=NO,PREFIX=&LB.RTOK TOKEN TO READ FROM\n&LB.RWAD DS   D                ADDRESS TO READ FROM (IN DS)\n&LB.RDTO DS   F                ADDR TO READ INTO (IN USER SPACE)\n&LB.RDXB DS   F                ADDR OF MXSMBLNT FOR XCF\n&LB.RWLN DS   F                LEN TO READ\n&LB.RBLN DS   F                BLNT THAT DESCRIBES DATASPACE\n&LB.ROFF DS   F                OFFSET FROM START OF WA TO READ FROM\n&LB.RROF DS   F                OFFSET FROM START OF READ\n&LB.RDST DS   F                DESTINATION ADDRESS\n&LB.RIDX DS   F                READ INDEX\n&LB.RALN DS   F                LENGTH AVAILABLE TO READ\n&LB.RARD DS   F                ACTUAL LENGTH READ\n         ORG  ,\n*\n&LB.SRCH ORG  &ORG\n&LB.HTOK MXTKTOKN DSECT=NO,PREFIX=&LB.HTOK TOKEN TO SEARCH\n&LB.HOFF DS   D                OFFSET TO START AT\n&LB.HLEN DS   D                LEN TO SEARCH\n&LB.HCLN DS   F                LEN OF ARGUMENT\n&LB.HWNM DS   CL4              WORK AREA NAME\n&LB.HSTR DS   CL36             DATA TO SEARCH FOR\n         ORG  ,\n*\n&LB.WRIT ORG  &ORG\n&LB.ITOK MXTKTOKN DSECT=NO,PREFIX=&LB.ITOK TOKEN TO WRITE TO\n&LB.IFRM DS   F                ADDR TO WRITE FROM (IN USER SPACE)\n&LB.IFAL DS   F                WRITE ALET         (IN USER SPACE)\n&LB.IWAD DS   D                ADDRESS TO WRITE TO IN DS\n&LB.IWLN DS   F                LEN TO WRITE\n&LB.I@PT DS   F                PARTNER TOKEN\n&LB.IKEY DS   F                KEY\n         ORG  ,\n*\n&LB.DISC ORG  &ORG\n&LB.DSCT MXTKTOKN DSECT=NO,PREFIX=&LB.DSCT TOKEN TO DISCONNECT\n&LB.DNAM DS   CL4              NAME OF SPACE\n         ORG  ,\n*\n&LB.LOCK ORG  &ORG\n&LB.LTOK MXTKTOKN DSECT=NO,PREFIX=&LB.LOCK TOKEN FOR LOCK\n&LB.LKEY DS   F\n         ORG  ,\n*\n* LOAD WORK AREA FROM FILE\n*\n&LB.LOAD ORG  &ORG\n&LB.LDWN DS   CL4              NAME OF WA TO LOAD\n&LB.LDSN DS   CL44             DSNAME TO LOAD FROM\n         ORG  ,\n*\n* SAVE WORK AREA TO FILE\n*\n&LB.SAVE ORG  &ORG\n&LB.SVWN DS   CL4              NAME OF WA TO SAVE\n&LB.SVSN DS   CL44             DSNAME TO SAVE TO\n         ORG  ,\n*\n* GET STATISTICS\n*\n&LB.STAT ORG  &ORG\n&LB.STRQ DS   F                STAT REQUESTED\n&LB.STNS EQU  0                NUMBER OF SPACES\n&LB.STSD EQU  1                SPACE DETAILS\n&LB.STSG EQU  2                SPACE SEGMENT DETAIL\n&LB.STNW EQU  3                NUMBER OF WORK AREAS\n&LB.STWD EQU  4                WORK AREA DETAIL\n&LB.STWV EQU  5                WORK AREA SEGMENT DETAIL\n&LB.STEV EQU  6                EVENT INFORMATION\n&LB.STT# EQU  7                NUMBER OF TABLES\n&LB.STTD EQU  8                TABLE DETAILS\n&LB.STDM EQU  9                TABLE DIMENSIONS\n&LB.STMX EQU  9                MAX REQUEST\n&LB.ST00 DS   0F\n&LB.STS# DS   F                SPACE NUMBER TO GET STATS FOR\n&LB.STW# DS   F                WORK AREA NUMBER TO GET STATS FOR\n&LB.STWN DS   CL4              WORK AREA NAME TO GET STATS FOR\n         ORG  &LB.ST00\n&LB.SENM DS   CL8               EVENT NAME\n&LB.SETK DS   F                 TOKEN FOR NEXT\n         ORG  ,\n         ORG  &LB.ST00\n&LB.STTN DS   CL4               TABLE NAME\n&LB.STTK DS   F                 TABLE TOKEN\n&LB.STT1 DS   F                 FIRST ENTRY TO REPORT\n         ORG  ,\n*\n* EXCHANGE WORK AREAS\n*\n&LB.XCHN ORG  &ORG\n&LB.XSWN DS   CL4              SOURCE WA NAME\n&LB.XTWN DS   CL4              TARGET WA NAME\n&LB.EXEX DS   X\n&LB.EXNO EQU  X'F0'            DO NOT EXCHANGE WHILE IN USE\n&LB.EXYS EQU  X'F1'            EXCHANGE WHILE IN USE\n&LB.STOK DS   F                SOURCE TOKEN\n&LB.TTOK DS   F                TARGET TOKEN\n         ORG  ,\n*\n* EVENT CONTROL AREAS\n*\n&LB.EVNT ORG  &ORG\n&LB.ENAM DS    CL8              EVENT NAME\n&LB.ETOK DS    F                TOKEN FOR NEXT\n&LB.EFLG DS    X                EVENT FLAGS\n         ORG  ,\n*\n* CREATE TABLE\n*\n&LB.TCRT ORG  &ORG\n&LB.TIWA DS   F                INDEX WAD\n&LB.TDWA DS   F                DATA WAD\n&LB.TNAM DS   F                NAME OF TABLE\n&LB.T#DI DS   F                NUMBER OF DIMENSIONS\n&LB.TCLN DS   F                CELL SIZE\n&LB.TDIM DS   12F              START OF DIMENSION TABLE\n&LB.TDMX EQU  (*-&LB.TDIM)/4   NUMBER OF ENTRIES\n         ORG  ,\n*\n* ALLOCATE CELL\n*\n&LB.TCAL ORG  &ORG\n&LB.TCTK DS   F                TOKEN\n&LB.TCSZ DS   F                SIZE\n&LB.TCAD DS   CL8              ADDRESS\n         ORG  ,\n*\n* DELETE TABLE\n*\n&LB.TDEL ORG  &ORG\n&LB.TDTK DS   F                TOKEN\n&LB.TDNM DS   CL4              NAME\n&LB.TDFR DS   X                FORCE OR NOT\n         ORG  ,\n*\n* CONNECT TO TABLE\n*\n&LB.CNTB ORG  &ORG\n&LB.CNTN DS   F                TABLE NAME TO CONNECT TO\n         ORG  ,\n*\n* DISCONNECT FROM TABLE\n*\n&LB.DSTB ORG  &ORG\n&LB.DSTK DS   F                TABLE TOKEN TO DISCONNECT FROM\n         ORG  ,\n*\n* READ TABLE\n*\n&LB.TRED ORG  &ORG\n&LB.TRDS DS   F\n&LB.TRTK DS   F\n&LB.TRCO DS   F\n         ORG  ,\n*\n* WRITE TABLE\n*\n&LB.TWRT ORG  &ORG\n&LB.TWSR DS   F\n&LB.TWTK DS   F\n&LB.TWCO DS   F\n         ORG  ,\n*\n* LOAD AND SAVE TABLE\n*\n&LB.TLOD ORG  &ORG\n&LB.TLNM DS   CL4\n&LB.TLPF DS   CL44\n         ORG  ,\n*\n* ADJUST VWA SIZE\n*\n&LB.SZVW ORG  &ORG\n&LB.SZNM DS   CL4              NAME OF VWA TO ADJUST\n&LB.SZSZ DS   CL8              NEW SIZE\n&LB.SZKY DS   CL4              KEY\n         ORG  ,\n*\n* SET VWA RECORD SIZE\n*\n&LB.RZVW  ORG  &ORG\n&LB.RZTK DS   CL20             TOKEN OF VWA TO ADJUST\n&LB.RZSZ DS   CL4              NEW SIZE\n         ORG  ,\n*\n* ASSOCIATE FILE\n*\n&LB.ASSO ORG  &ORG\n&LB.ASWA DS   CL4              WA NAME\n&LB.ASRQ DS   F                0 = ASSOC 4 = UNASSOC\n&LB.ASDN DS   CL44             DSNAME\n         ORG  ,\n*\n         MXRETDEF ORG=&ORG,PREFIX=&PF\n*\n&LB.GLEN EQU  *-&ORG\n*\n         MEXIT\n*\n.INVDSC  ANOP\n         MNOTE 8,'MXUSPLST DSECT MUST BE YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXREQCOD": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x009\\x00\\x983?\\x01\\x01$\\x9f\\x16B\\x004\\x00#\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1998-11-29T00:00:00", "modifydate": "2001-09-06T16:42:39", "lines": 52, "newlines": 35, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   MXREQCOD &PREFIX=\n.*\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* MATRIX REQUEST VALUES\n.*\n         LCLC &LB                    PREFIX\n.*\n         AIF ('&PREFIX' EQ '').NOPRFX\n&LB      SETC  '&PREFIX'             LABEL FOR BLOCK\n.*\n.* GENERATE THE MATRIX USER REQUEST LIST\n.*\n&LB.RSP1 EQU  0                RESERVED\n*        EQU  1                SPARE\n&LB.RDWA EQU  2                MXDELWA\n&LB.RCWA EQU  3                MXCRTWA\n&LB.RLOD EQU  4                MXLOAD\n&LB.RSAV EQU  5                MXSAVE\n&LB.RCPY EQU  6                MXCOPY\n&LB.RCON EQU  7                MXCONECT\n&LB.RRED EQU  8                MXREAD\n&LB.RSRC EQU  9                MXSRCH\n&LB.RXCH EQU  10               MXSWAP\n&LB.RSTS EQU  11               MXSTATS\n&LB.RWRT EQU  12               MXWRITE\n&LB.RDCN EQU  13               MXDISCON\n&LB.RLCK EQU  14               LOCK\n&LB.RULK EQU  15               UNLOCK\n&LB.RASO EQU  16               ASSOCIATE\n*        EQU  17               SPARE\n*        EQU  18               SPARE\n&LB.TSAV EQU  19               TABLE SAVE\n&LB.TLOA EQU  20               TABLE LOAD\n&LB.TBLC EQU  21               CREATE TABLE\n&LB.TBLD EQU  22               DELETE TABLE\n&LB.TBCA EQU  23               CELL ALLOC\n&LB.SVSZ EQU  24               SET VWA SIZE\n&LB.RVSZ EQU  25               SET VWA RECORD SIZE\n*\n&LB.EDEL EQU  26               EVENT DELETE\n&LB.ESET EQU  27               EVENT RESET\n&LB.WAIT EQU  28               WAIT\n&LB.POST EQU  29               POST\n*LB.ENOT EQU  30               EVENT NOTIFICATION\n*\n         MEXIT\n*\n.NOPRFX  ANOP\n         MNOTE 8,'MXREQCOD PREFIX IS REQUIRED'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXRETDEF": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01/\\x008\\x00\\x98\\x19o\\x01\\x02\\x07O\\x006\\x00\\x97\\x000\\x00{\\xd7\\xf3\\xf9\\xf0\\xd9@@@@@'", "ispf": {"version": "01.47", "flags": 0, "createdate": "1998-07-15T00:00:00", "modifydate": "2002-03-15T00:36:38", "lines": 151, "newlines": 48, "modlines": 123, "user": "P390R"}, "text": "         MACRO\n&LABEL   MXRETDEF &ORG=,&PREFIX=\n.*\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* MATRIX USER INTERFACE PARAMETER DEFINITION. THIS MACRO DEFINES THE\n.* STORAGE OVERLAYS FOR INFORMATION RETURNED BY FUNCTION CALL\n.*\n         LCLC &PF\n         LCLC &LB                    PREFIX\n.*\n         AIF ('&PREFIX' EQ '').NOPRFX\n&PF      SETC  '&PREFIX'             LOCAL PREFIX\n         AGO .SETLB\n.NOPRFX  ANOP\n&PF      SETC  'MX'                  DEFAULT PREFIX\n.SETLB   ANOP\n&LB      SETC  '&PF.RC'              LABEL FOR BLOCK\n         AIF ('&LABEL' EQ '').SKLAB\n&LABEL   DS    0F\n.SKLAB   ANOP\n*\n* CREATE REPLY OVERLAY\n*\n         ORG  &ORG\n&LB.RETX DS   CL40              RETURNED TEXT\n         ORG  ,\n*\n* RETURNED BY GET STATS NUMSPC CALL AND NUMWA\n*\n         ORG   &ORG\n&LB.RST# DS    F                RETURNED NUMBER OF SPACES\n         ORG   ,\n*\n* RETURNED BY GET STATS SPACE DETAIL\n*\n         ORG   &ORG\n&LB.RSPL DS    F                LENGTH OF THE BLOCK\n&LB.R#WA DS    F                NUMBER OF WORK AREAS\n&LB.RUSE DS    F                USED AMOUNT\n&LB.RSMX DS    F                MAX NUMBER OF WORK AREAS\n&LB.RSTP DS    X                TYPE OF SPACE\n         ORG  ,\n*\n* RETURNED BY GET STATS SPACE SEGMENT DETAIL\n* AND GET WORK AREA SEGMENT DETAILS\n*\n         ORG   &ORG\n&LB.BLOF DS    F                OFFSET TO START OF THIS SPACE DIV\n&LB.BLLN DS    F                LENGTH OF SPACE DIV\n&LB.BLAL DS    F                SPACE TOKEN\n         ORG  ,\n*\n* RETURNED BY GET STATS WORKAREA DETAIL\n*\n         ORG   &ORG\n&LB.RLEN DS    D                 LENGTH OF SPACE\n&LB.RCNT DS    F                 NUMBER OF ENTRIES\n&LB.RWUC DS    F                 COUNT OF USERS ATTACHED\n&LB.RCSZ DS    F                 RECORD SIZE\n&LB.RWNM DS    CL4               NAME OF SPACE\n&LB.RDSN DS    CL44              ASSOCIATED DSN\n&LB.RWF1 DS    X                 SEE MXVDFLG1 FOR USAGE\n*LB.F1MR EQU   X'80'             WORK SPACE MIRRORED ON ALL SYSTEMS\n&LB.RWF2 DS    X                 SEE MXVDFLG2 FOR USAGE\n*LB.LCKD EQU   X'80'             THIS SPACE IS LOCKED\n*LB.RDON EQU   X'40'             THIS SPACE IS READ ONLY\n*LB.INFO EQU   X'20'             RECORD SIZE INFO IS VALID\n*\n         ORG  ,\n*\n* RETURNED BY GET EVENT RECORD\n*\n         ORG   &ORG\n&LB.EVNM DS    CL8               EVENT NAME\n&LB.EVNX DS    F                 TOKEN FOR NEXT\n&LB.EVCT DS    F                 COUNT OF TASKS WAITING\n&LB.EVFL DS    CL8               CONDITION\n*\n         ORG  ,\n*\n* RETURNED BY CONNECT MATRIX REQUEST\n*\n         ORG   &ORG\n&LB.RATK DS    F                 MATRIX CONNECTION TOKEN\n         ORG  ,\n*\n* RETURNED BY WRITE REQUEST\n*\n         ORG   &ORG\n&LB.WRIT DS    F                 NUMBER OF BYTES WRITTEN\n         ORG  ,\n*\n* RETURNED BY SEARCH REQUEST\n*\n         ORG   &ORG\n&LB.HOFF DS    D                 OFFSET TO FOUND DATA\n         ORG  ,\n*\n* RETURNED BY LOCK OPERATION\n*\n         ORG   &ORG\n&LB.KEY  DS    F                KEY TO UNLOCK\n         ORG   ,\n*\n* RETURNED BY TBLDET\n*\n         ORG   &ORG\n&LB.TNAM DS    CL4                NAME OF THIS TABLE\n&LB.TNXT DS    F                  ADDRESS OF NEXT RECORD\n&LB.TTOK DS    F                  TOKEN OF THIS RECORD\n&LB.TIVW DS    F                  INDEX VWAD\n&LB.TDVW DS    F                  DATA  VWAD\n*\n&LB.T#DI DS    F                  NUMBER OF DIMENSIONS\n*\n&LB.TCLN DS    H                  CELL LENGTH\n&LB.TTYP DS    X                  TYPE OF TABLE\n&LB.FIXD EQU   X'80'              1 = FIXED LENGTH 0 = VARIABLE\n&LB.SHRD EQU   X'10'              1 = SHARED 0 = PRIVATE\n&LB.DELP EQU   X'01'              1 = DELETE IN PROGRESS\n         DS    X                  FILLER\n*\n&LB.TSTR DS    0F                 START OF &LR.DIMS ENTRIES\n&LB.TDT1 DS    3F                 DIM ENTRY 1\n&LB.TDT2 DS    3F                 DIM ENTRY 2\n&LB.TDT3 DS    3F                 DIM ENTRY 3\n&LB.TSTL EQU   *-&LB.TSTR\n         ORG   ,\n*\n         ORG   &ORG\n&LB.TDX1 DS    3F                 DIM ENTRY 1\n&LB.TDX2 DS    3F                 DIM ENTRY 2\n&LB.TDX3 DS    3F                 DIM ENTRY 3\n&LB.TDX4 DS    3F                 DIM ENTRY 4\n&LB.TDX5 DS    3F                 DIM ENTRY 5\n&LB.TDXL EQU   *-&LB.TDX1\n         ORG   ,\n*\n* RETURNED BY TABLE READ\n*\n         ORG   &ORG\n&LB.TRLN DS    F                  LENGTH READ\n&LB.TRAD DS    F                  ADDR READ INTO\n         ORG   ,\n*\n         MEXIT\n*\n.INVDSC  ANOP\n         MNOTE 8,'MXUSPLST DSECT MUST BE YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXTABLES": {"ttr": 4879, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01U\\x00\\x03\\x00\\x99&_\\x01\\x03\\x10\\x1f\\x05\\x10\\x01\\xa1\\x00\\x91\\x01V\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.85", "flags": 0, "createdate": "1999-09-22T00:00:00", "modifydate": "2003-04-11T05:10:03", "lines": 417, "newlines": 145, "modlines": 342, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   MXTABLES &TYPE,&INDEXWA=,&NAME=,                              +\n               &SYSNAME=,&DSNPRFX=,                                    +\n               &PARM=,&ATOK=,&FORCE=,                                  +\n               &CELLSIZE=,&DATAWA=,                                    +\n               &FIELD=,                                                +\n               &PREFIX=,&OWNER=PRIVATE,                                +\n               &SYNC=,&TOKEN=,                                       +++\n               &DIMS=,&DEST=,&SOURCE=,                               +++\n               &NUMDIMS=,                                            +++\n               &COORDS=,                                              ++\n               &RESULT=,                                              ++\n               &SIZE=,                                               +++\n               &RETOK=,                                              +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* MXTABLES CALL MATRIX TO CREATE, DELETE, ACCESS TABLES              *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &RG                REGISTER\n         LCLA  &LEN               GENERAL PURPOSE LENGTH\n.*\n         LCLC &TB\n         LCLC &LABL,&LBL,&LABX,&LB\n         LCLA &F\n.*\n.* INIT SOME VARIABLES\n.*\n         AIF ('&PREFIX' EQ '').SKPRF\n&PF      SETC '&PREFIX'\n         AGO .SETLB\n.SKPRF   ANOP\n&PF      SETC 'MX'\n.SETLB   ANOP\n         AIF ('&LABEL' EQ '').SKLAB\n&LABEL   DS   0H\n.SKLAB   ANOP\n&LABL    SETC  '&PF.US'\n&LABX    SETC  '&PF.MS'\n&LBL     SETC  '&PF.&SYSNDX'\n         AIF ('&TYPE' EQ 'CREATE').CREAT\n         AIF ('&TYPE' EQ 'DELETE').DELET\n         AIF ('&TYPE' EQ 'READ').READ\n         AIF ('&TYPE' EQ 'WRITE').WRIT\n         AIF ('&TYPE' EQ 'CONNECT').CONN\n         AIF ('&TYPE' EQ 'DISCONNECT').DISCONN\n         AIF ('&TYPE' EQ 'CALCSIZE').CALCS\n         AIF ('&TYPE' EQ 'QUERY').QUERY\n         AIF ('&TYPE' EQ 'LOCCELL').LOCCELL\n         AIF ('&TYPE' EQ 'ALLOCCELL').ALLOCELL\n         AIF ('&TYPE' EQ 'SAVE').SAVE\n         AIF ('&TYPE' EQ 'LOAD').LOAD\n         AGO .INVTYP\n.*\n.* CREATE A TABLE\n.*\n.CREAT   ANOP\n         AIF ('&OWNER' EQ 'PRIVATE').CRTPRIV\n         AIF ('&PARM' EQ '').NOPARM\n         CALLMXCT PREFIX=&PF,                                         ++\n               SYSNAME=&SYSNAME,                                     +++\n               RETOK=&RETOK,                                         +++\n               ERROR=&ERROR,                                         +++\n               SYNC=&SYNC,                                           +++\n               NAME=&NAME,                                           +++\n               PARM=&PARM,                                           +++\n               INDEXWA=&INDEXWA,                                     +++\n               DATAWA=&DATAWA,                                       +++\n               NUMDIMS=&NUMDIMS,                                     +++\n               CELLSIZE=&CELLSIZE,                                   +++\n               DIMS=&DIMS,                                           +++\n               ATOK=&ATOK\n         MEXIT\n.*\n.CRTPRIV ANOP\n         AIF ('&INDEXWA' EQ '').NOIWAD\n         @@ REG=R1,ADDR=&INDEXWA\n         ST    R1,&LABX.TIWA      INDEX WAD\n         AGO   .IWADSET\n.NOIWAD  ANOP\n         XC    &LABX.TIWA,&LABX.TIWA    INDEX WAD\n.IWADSET ANOP\n         AIF ('&DATAWA' EQ '').NODWAD\n         @@ REG=R1,ADDR=&DATAWA\n         ST    R1,&LABX.TDWA      INDEX WAD\n         AGO   .DWADSET\n.NODWAD  ANOP\n         XC    &LABX.TDWA,&LABX.TDWA    INDEX WAD\n.DWADSET ANOP\n         AIF ('&NAME' EQ '').NONAME\n         @@ REG=R1,ADDR=&NAME\n         MVC   &LABX.TNAM,0(R1)         NAME OF TABLE\n         AIF ('&NUMDIMS' EQ '').NONDIMS\n         @@ REG=R1,ADDR=&NUMDIMS\n         ST    R1,&LABX.T#DI            NUMBER OF DIMENSIONS\n         AIF ('&CELLSIZE' EQ '').VRBLREC\n         @@ REG=R1,ADDR=&CELLSIZE\n         AGO   .CLENSET\n.VRBLREC ANOP\n         SR    R1,R1                    VARIABLE LENGTH\n.CLENSET ANOP\n         ST    R1,&LABX.TCLN            CELL SIZE\n         AIF ('&DIMS' EQ '').NODIMS\n         @@ REG=R1,ADDR=&DIMS\n         ST    R1,&LABX.TDIM            DIMENSIONS\n         LA    R1,&LABL.MSTX\n         L     R15,=V(MXTABLES)\n         BASR  R14,R15\n         AIF ('&TOKEN' EQ '').NOTBDEF\n         @@ REG=R14,ADDR=&TOKEN\n         ST    R1,0(,R14)               PLACE TO PUT TABLE DEF\n.NOTBDEF ANOP\n         AGO  .GENRET\n.*\n.* CALCULATE SIZE OF TABLE\n.*\n.CALCS   ANOP\n         AIF ('&NUMDIMS' EQ '').NONDIMS\n         AIF ('&CELLSIZE' EQ '').NOCELZ\n         AIF ('&DIMS' EQ '').NODIMS\n         AIF ('&RESULT' EQ '').NORSLT\n         LA    R1,&LABL.MSTX\n         @@ REG=R0,ADDR=&NUMDIMS NUMBER OF DIMENSIONS\n         ST    R0,0(,R1)\n         @@ REG=R0,ADDR=&CELLSIZE CELL LENGTH\n         ST    R0,4(,R1)\n         @@ REG=R0,ADDR=&DIMS DIMENSION TABLE\n         ST    R0,8(,R1)\n         @@ REG=R0,ADDR=&RESULT\n         ST    R0,12(,R1)\n         L     R15,=V(MXCALCTZ)\n         BASR  R14,R15\n         AGO   .GENRET\n*\n         MEXIT\n.*\n.* DELETE\n.*\n.DELET   ANOP\n         AIF ('&PARM' EQ '').NOPARM\n         CALLMXDT PREFIX=&PF,                                         ++\n               SYSNAME=&SYSNAME,                                     +++\n               RETOK=&RETOK,                                         +++\n               ERROR=&ERROR,                                         +++\n               SYNC=&SYNC,                                           +++\n               FORCE=&FORCE,                                         +++\n               NAME=&NAME,                                           +++\n               PARM=&PARM,                                            ++\n               ATOK=&ATOK\n         MEXIT\n.*\n.* READ\n.*\n.READ    ANOP\n         AIF ('&DEST' EQ '').NODEST\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&COORDS' EQ '').NOCOORD\n.*\n         XC    &LABL.REQ,&LABL.REQ     NO REQUEST\n         MVI   &LABL.NFFL,&LABL.NFSN+&LABL.NFCL REQUEST FLAGS\n         @@ REG=R0,ADDR=&DEST          DEST OF READ\n         ST    R0,&LABX.TRDS\n         @@ REG=R0,ADDR=&TOKEN         TOKEN OF TABLE\n         ST    R0,&LABX.TRTK\n         @@ REG=R0,ADDR=&COORDS        COORDS OF CELL TO READ\n         ST    R0,&LABX.TRCO\n         AIF ('&ATOK' EQ '').RDNOATK\n         @@ REG=R0,ADDR=&ATOK          MATRIX ACCESS TOKEN\n         AGO   .RDCALL\n.RDNOATK ANOP\n         SR    R0,R0\n.RDCALL  ANOP\n         LA    R1,&LABL.MSTX\n         L     R15,=V(MXRDCELL)\n         BASR  R14,R15\n         AGO   .GENRET\n         MEXIT\n.*\n.WRIT    ANOP\n         AIF ('&SOURCE' EQ '').NOSRCE\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&COORDS' EQ '').NOCOORD\n.*\n         XC    &LABL.REQ,&LABL.REQ         NO REQUEST\n         MVI   &LABL.NFFL,&LABL.NFCL+&LABL.NFSN REQUEST FLAGS\n         @@ REG=R0,ADDR=&SOURCE        SOURCE OF WRITE\n         ST    R0,&LABX.TWSR\n         @@ REG=R0,ADDR=&TOKEN         TOKEN OF TABLE\n         ST    R0,&LABX.TWTK\n         @@ REG=R0,ADDR=&COORDS        COORDS OF CELL TO READ\n         ST    R0,&LABX.TWCO\n         AIF ('&ATOK' EQ '').WTNOATK\n         @@ REG=R0,ADDR=&ATOK          MATRIX ACCESS TOKEN\n         AGO   .WTCALL\n.WTNOATK ANOP\n         SR    R0,R0\n.WTCALL  ANOP\n         LA    R1,&LABL.MSTX\n         L     R15,=V(MXWTCELL)\n         BASR  R14,R15\n         AGO   .GENRET\n         MEXIT\n.*\n.CONN    ANOP\n         AIF ('&SYSNAME' NE '').INVSYSN\n         AIF ('&ATOK' EQ '').NOATOK\n         @@ REG=R0,ADDR=&ATOK          MATRIX ACCESS TOKEN\n         AIF ('&NAME' EQ '').NONAME\n         @@ REG=R1,ADDR=&NAME\n         L     R15,=V(MXTBLCON)\n         BASR  R14,R15\n         AIF ('&TOKEN' EQ '').GENRET\n         @@ REG=R14,ADDR=&TOKEN\n         ST   R1,0(,R14)\n         AGO .GENRET\n         MEXIT\n.*\n.*\n.*\n.LOAD    ANOP\n         CALLMXTL PREFIX=&PF,                                         ++\n               SYSNAME=&SYSNAME,                                     +++\n               RETOK=&RETOK,                                         +++\n               ERROR=&ERROR,                                         +++\n               SYNC=&SYNC,                                           +++\n               NAME=&NAME,                                           +++\n               PARM=&PARM,                                           +++\n               DSNPRFX=&DSNPRFX,                                     +++\n               ATOK=&ATOK\n         MEXIT\n.*\n.*\n.*\n.SAVE    ANOP\n         CALLMXTS PREFIX=&PF,                                         ++\n               SYSNAME=&SYSNAME,                                     +++\n               RETOK=&RETOK,                                         +++\n               ERROR=&ERROR,                                         +++\n               SYNC=&SYNC,                                           +++\n               NAME=&NAME,                                           +++\n               PARM=&PARM,                                           +++\n               DSNPRFX=&DSNPRFX,                                     +++\n               ATOK=&ATOK\n         MEXIT\n.*\n.*\n.*\n.DISCONN ANOP\n         AIF ('&ATOK' EQ '').DCNOATK\n         @@ REG=R0,ADDR=&ATOK          MATRIX ACCESS TOKEN\n         AGO   .DCCALL\n.DCNOATK ANOP\n         SR    R0,R0\n.DCCALL  ANOP\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R1,ADDR=&TOKEN\n         L     R15,=V(MXTBLDSC)\n         BASR  R14,R15\n.GENRET  ANOP\n         AIF ('&RETOK' EQ '').NODSCOK\n         LTR  R15,R15\n         BZ   &RETOK\n         AIF ('&ERROR' EQ '').NODSCER\n         BNZ  &ERROR\n.NODSCER ANOP\n         MEXIT\n.NODSCOK ANOP\n         AIF ('&ERROR' EQ '').NODSCER\n         LTR  R15,R15\n         BNZ  &ERROR\n         MEXIT\n.*\n.*\n.*\n.QUERY   ANOP\n         AIF ('&FIELD' EQ 'CELLSIZE').QCELZ\n         AIF ('&FIELD' EQ 'NUMDIMS').QNDIM\n         AGO .INVQRY\n.*\n.QCELZ   ANOP\n&LB      SETC '&PF.TU'\n         PUSH USING\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R14,ADDR=&TOKEN\n         USING &LB.REC,R14\n         SR   R1,R1\n         TM   &LB.TYPE,&LB.FIXD\n         BNO  &LBL.A\n         ICM  R1,3,&LB.CLLN\n&LBL.A   DS   0H\n         DROP R14\n         POP  USING\n         MEXIT\n.*\n.QNDIM   ANOP\n&LB      SETC '&PF.TU'\n         PUSH USING\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R14,ADDR=&TOKEN\n         USING &LB.REC,R14\n         L    R1,&LB.#DIM\n         DROP R14\n         POP  USING\n         MEXIT\n.*\n.*\n.*\n.LOCCELL ANOP\n         LA    R1,&LABL.MSTX\n         AIF ('&TOKEN' EQ '').NOTOKN\n         @@ REG=R14,ADDR=&TOKEN\n         ST   R14,0(,R1)\n         AIF ('&RESULT' EQ '').NORSLT\n         @@ REG=R14,ADDR=&RESULT\n         ST   R14,4(,R1)\n         AIF ('&COORDS' EQ '').NOCOORD\n         @@ REG=R14,ADDR=&COORDS\n         ST   R14,8(,R1)\n         L    R15,=V(MXCELL)\n         BASR R14,R15\n         AGO  .GENRET\n         MEXIT\n.*\n.*\n.*\n.ALLOCELL ANOP\n         AIF ('&TOKEN' EQ '').NOTOKN\n         AIF ('&COORDS' EQ '').NOCOORD\n         AIF ('&CELLSIZE' EQ '').NOCELZ\n         AIF ('&PARM' EQ '').NOPARM\n.*\n         PUSH USING\n         MXTABLES LOCCELL,COORDS=&COORDS,                             ++\n               RESULT=&LABX.TCAD,                                     ++\n               PREFIX=&PF,                                            ++\n               TOKEN=&TOKEN\n         LTR   R15,R15                 CHECK RC\n         AIF   ('&ERROR' NE '').AUSERR\n         BNZ   &LBL.1\n         AGO   .AMYERR\n.AUSERR  ANOP\n         BNZ   &ERROR\n.AMYERR  ANOP\n&LB      SETC '&PF.TU'\n         @@ REG=R14,ADDR=&TOKEN\n         USING &LB.REC,R14\n.*\n         CALLMXAC PREFIX=&PF,          ALLOCATE A CELL                ++\n               TOKEN=(&LB.TTOK),                                      ++\n               SYSNAME=&SYSNAME,                                      ++\n               PARM=&PARM,                                            ++\n               CELLSIZE=&CELLSIZE,                                    ++\n               ATOK=&ATOK\n         DROP  R14\n&LBL.1   DS    0H\n         POP   USING\n         AGO   .GENRET\n         MEXIT\n.*\n.NOPARM  ANOP\n         MNOTE 8,'MXTABLES PARM REQUIRED'\n         MEXIT\n.INVTYP  ANOP\n         MNOTE 8,'MXTABLES TYPE INVALID'\n         MEXIT\n.NONDIMS ANOP\n         MNOTE 8,'MXTABLES NUMDIMS REQUIRED'\n         MEXIT\n.INVOWNR ANOP\n         MNOTE 8,'MXTABLES OWNER MUST BE PRIVATE OR SHARED'\n         MEXIT\n.NOERR   ANOP\n         MNOTE 8,'MXTABLES ERROR LABEL REQUIRED IF NO REQOK'\n         MEXIT\n.NOSIZE  ANOP\n         MNOTE 8,'MXTABLES SIZE IS REQUIRED'\n         MEXIT\n.NONAME  ANOP\n         MNOTE 8,'MXTABLES TABLE NAME IS REQUIRED'\n         MEXIT\n.NODSNP  ANOP\n         MNOTE 8,'MXTABLES DSNPRFX IS REQUIRED'\n         MEXIT\n.INVSY   ANOP\n         MNOTE 8,'MXTABLES SYNC MUST BE YES OR NO'\n         MEXIT\n.INVSYSN ANOP\n         MNOTE 8,'MXTABLES SYSNAME INVALID WITH THIS REQUEST'\n         MEXIT\n.NOCELZ  ANOP\n         MNOTE 8,'MXTABLES CELLSIZE IS REQUIRED'\n         MEXIT\n.NORSLT  ANOP\n         MNOTE 8,'MXTABLES RESULT IS REQUIRED'\n         MEXIT\n.INVQRY  ANOP\n         MNOTE 8,'MXTABLES QUERY TYPE IS INVALID'\n         MEXIT\n.NOSRCE  ANOP\n         MNOTE 8,'MXTABLES SOURCE IS REQUIRED'\n         MEXIT\n.NODEST  ANOP\n         MNOTE 8,'MXTABLES DEST IS REQUIRED'\n         MEXIT\n.NOTOKN  ANOP\n         MNOTE 8,'MXTABLES TOKEN IS REQUIRED'\n         MEXIT\n.NOATOK  ANOP\n         MNOTE 8,'MXTABLES ACCESS TOKEN IS REQUIRED'\n         MEXIT\n.NOCOORD ANOP\n         MNOTE 8,'MXTABLES COORDS REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXTKTOKN": {"ttr": 1804, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0e\\x001\\x00\\x98'O\\x01\\x02\\x07\\x1f\\x19R\\x00@\\x00:\\x00\\x00\\xd7\\xf3\\xf9\\xf0@@@@@@\"", "ispf": {"version": "01.14", "flags": 0, "createdate": "1998-10-01T00:00:00", "modifydate": "2002-03-12T19:52:31", "lines": 64, "newlines": 58, "modlines": 0, "user": "P390"}, "text": "         MACRO\n&LABEL   MXTKTOKN &DSECT=NO,&PREFIX=\n.*\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998\n.* MXTKTOKN GENERATES A MATRIX WORK AREA TOKEN\n.*\n         LCLC &PF\n         LCLC &LB                    PREFIX\n.*\n         AIF ('&PREFIX' EQ '').NOPRFX\n&PF      SETC  '&PREFIX'             LOCAL PREFIX\n         AGO .SETLB\n.NOPRFX  ANOP\n&PF      SETC  'MX'                  DEFAULT PREFIX\n.SETLB   ANOP\n&LB      SETC  '&PF.TK'              LABEL FOR BLOCK\n.*\n.* DETERMINE TYPE OF LABEL TO GENERATE\n.*\n         AIF ('&DSECT' EQ 'NO').NODSCT\n         AIF ('&DSECT' EQ 'YES').DSECT\n         AGO .INVDSC\n.*\n.DSECT   ANOP\n         AIF ('&LABEL' EQ '').NOLAB1\n&LABEL   DSECT\n         AGO .NOLAB2\n.*\n.NOLAB1  ANOP                                                           0000716\n&LB.TOKN DSECT\n         AGO .GENPLS\n.*\n.NODSCT  ANOP\n         AIF ('&LABEL' EQ '').NOLAB2\n&LABEL   DS  0CL20\n.*\n.NOLAB2  ANOP                                                           0000716\n&LB.TOKN DS  0CL20\n         AGO .GENPLS\n.*\n.* GENERATE THE MATRIX TOKEN.\n.*\n.GENPLS  ANOP\n&LB.ALET DS   F                ALET OF WORK AREA\n&LB.OFF  DS   F                OFFSET TO ACCESS FROM\n&LB.IND1 DS   X                INDICATOR 1\n&LB.I1MI EQU  X'80'            MIRRORED\n&LB.IND2 DS   X\n&LB.IND3 DS   X\n&LB.IND4 DS   X\n&LB.WLDP DS   F                ADDR OF WORK AREA DESCRIPTOR POINTER\n&LB.MXVD DS   F                ADDR OF PARTNER VWAD\n         AIF ('&LABEL' EQ '').NOLAB3\n&LB.BLKL EQU  *-&LABEL         LENGTH OF ENTRY\n         MEXIT\n*\n.NOLAB3  ANOP                                                           0000716\n&LB.BLKL EQU  *-&LB.TOKN       LENGTH OF ENTRY\n         MEXIT\n*\n.INVDSC  ANOP\n         MNOTE 8,'MXTKTOKN DSECT MUST BE YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXTOKEN": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00&\\x00\\x99\\x06\\x0f\\x01\\x03\\x08\\x7f\\x06U\\x00<\\x00+\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1999-03-01T00:00:00", "modifydate": "2003-03-28T06:55:26", "lines": 60, "newlines": 43, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   MXTOKEN &DSECT=NO,&PREFIX=\n.*\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998\n.* MATRIX API\n.*\n         LCLC &PF\n         LCLC &LB                    PREFIX\n.*\n         AIF ('&PREFIX' EQ '').NOPRFX\n&PF      SETC  '&PREFIX'             LOCAL PREFIX\n         AGO .SETLB\n.NOPRFX  ANOP\n&PF      SETC  'MX'                  DEFAULT PREFIX\n.SETLB   ANOP\n&LB      SETC  '&PF.TK'              LABEL FOR BLOCK\n.*\n.* DETERMINE TYPE OF LABEL TO GENERATE\n.*\n         AIF ('&DSECT' EQ 'NO').NODSCT\n         AIF ('&DSECT' EQ 'YES').DSECT\n         AGO .INVDSC\n.*\n.DSECT   ANOP\n         AIF ('&LABEL' EQ '').NOLAB1\n&LABEL   DSECT\n         AGO .NOLAB2\n.*\n.NOLAB1  ANOP                                                           0000716\n&LB.TOKN DSECT\n         AGO .GENPLS\n.*\n.NODSCT  ANOP\n         AIF ('&LABEL' EQ '').NOLAB2\n&LABEL   DS  0CL8\n.*\n.NOLAB2  ANOP                                                           0000716\n&LB.TOKN DS  0CL8\n         AGO .GENPLS\n.*\n.* GENERATE THE MATRIX TOKEN.\n.*\n.GENPLS  ANOP\n&LB.WRD1 DS   F\n&LB.WRD2 DS   F\n&LB.WRD3 DS   F\n&LB.WRD4 DS   F\n&LB.WRD5 DS   F\n         AIF ('&LABEL' EQ '').NOLAB3\n&LB.BLKL EQU  *-&LABEL         LENGTH OF ENTRY\n         MEXIT\n*\n.NOLAB3  ANOP                                                           0000716\n&LB.BLKL EQU  *-&LB.TOKN       LENGTH OF ENTRY\n         MEXIT\n*\n.INVDSC  ANOP\n         MNOTE 8,'MXTOKEN DSECT MUST BE YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXTUREC": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00@\\x01\\x00\\x01\\x8f\\x01\\x03\\x08\\x7f\\x130\\x00V\\x00V\\x00V\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-01-18T00:00:00", "modifydate": "2003-03-28T13:30:40", "lines": 86, "newlines": 86, "modlines": 86, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   MXTUREC  &DSECT=YES,&PREFIX=\n.* ****************************************************************** *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1999           *\n.* MXRUBLOK GENERATES THE TABLES CONTOL BLOCK DEFINITION\n.* ****************************************************************** *\n         LCLC &PF\n         LCLC &TB,&TXT1,&TXT2\n         LCLC &LB,&LX,&LR\n         LCLA &F\n.*\n.* INIT SOME VARIABLES\n.*\n         AIF ('&PREFIX' EQ '').SKPRF\n&PF      SETC '&PREFIX'\n         AGO .SETLB\n.SKPRF   ANOP\n&PF      SETC 'MX'\n.SETLB   ANOP\n&LB      SETC '&PF.TU'\n&LR      SETC '&PF.DU'\n         AIF ('&LABEL' EQ '').SKLAB\n&TXT1    SETC '&LABEL'\n         AGO .CHKTYP\n.SKLAB   ANOP\n&TXT1    SETC '&LB.REC'\n.*\n.* DETERMINE TYPE OF GENERATION\n.*\n.CHKTYP  ANOP\n         AIF ('&DSECT' EQ 'YES').DSECT\n         AIF ('&DSECT' EQ 'NO').CONST\n         AGO .INVDSC\n.*\n.* GENERATE THE STATIC DEFINITION\n.*\n.CONST   ANOP\n&TXT1    DS    0F\n         AGO .GENBLK\n.*\n.* GENERATE THE DSECT\n.*\n.DSECT   ANOP\n&TXT1    DSECT\n.*\n.GENBLK  ANOP\n*\n* TABLE DEFINITION RECORD\n*\n&LB.NAME DS    CL4                NAME OF THIS TABLE\n&LB.TTOK DS    F                  TOKEN OF OWNERS TABLE RECORD\n&LB.RECL DS    F                  LENGTH OF THIS RECORD\n&LB.IVWA DS    CL20               INDEX VWAD TOKEN\n&LB.DVWA DS    CL20               DATA  VWAD TOKEN\n*\n&LB.#DIM DS    F                  NUMBER OF DIMENSIONS\n*\n&LB.CLLN DS    H                  CELL LENGTH\n&LB.TYPE DS    X                  TYPE OF TABLE\n&LB.FIXD EQU   X'80'              1 = FIXED LENGTH 0 = VARIABLE\n&LB.SHRD EQU   X'10'              1 = SHARED 0 = PRIVATE\n&LB.DELP EQU   X'01'              1 = DELETE IN PROGRESS\n*\n         DS    X                  FILLER\n*\n&LB.STRT DS    0F                 START OF &LR.DIMS ENTRIES\n&LB.RLEN EQU   *-&LB.REC\n*\n         AIF ('&DSECT' EQ 'NO').CONSLN\n*\n&LR.DIMR DSECT                    DIMENSION ENTRY\n&LR.DOFF DS    2F                 OFFSET TO THIS DIM\n&LR.DIM# DS    F                  NUMBER OF CELLS IN THIS DIM\n&LR.DRLN EQU   *-&LR.DIMR\n         AGO  .ENDUP\n*\n.CONSLN  ANOP\n&LR.DRLN EQU   12                 LEN OF DIMENSION ENTRY\n.*\n.ENDUP   ANOP\n         MEXIT\n.*\n.INVDSC  ANOP\n         MNOTE 8,'MXTUREC DSECT MUST SPECIFY YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPENMX": {"ttr": 5126, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x14\\x01\\x00\\x16o\\x01\\x03\\x10\\x1f\\x05\\x10\\x00+\\x00(\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2000-06-14T00:00:00", "modifydate": "2003-04-11T05:10:14", "lines": 43, "newlines": 40, "modlines": 0, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   OPENMX &PLIST=,                                             +++\n               &SYSNAME=,                                            +++\n               &DCB=,                                                +++\n               &VWA=\n.*\n.* ****************************************************************** *\n.* OPENMX   OPEN A MATRIX FILE                                        *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* ****************************************************************** *\n         LCLC  &PLBL\n         AIF ('&LABEL' EQ '').NOLABL\n&LABEL   DS    0H\n.NOLABL  ANOP\n         AIF ('&PLIST' EQ '').NOPLIST\n         AIF ('&SYSNAME' EQ '').NOSYSNM\n         AIF ('&DCB' EQ '').NODCB\n         AIF ('&VWA' EQ '').NOVWA\n         @@ REG=R1,ADDR=&PLIST\n         @@ REG=R0,ADDR=&DCB\n         ST    R0,0(,R1)\n         @@ REG=R0,ADDR=&SYSNAME\n         ST    R0,4(,R1)\n         @@ REG=R0,ADDR=&VWA\n         ST    R0,8(,R1)\n         L     R15,=V(OPENMX)\n         BASR  R14,R15\n         MEXIT\n.*\n.NOPLIST ANOP\n         MNOTE 8,'OPENMX PLIST IS REQUIRED'\n         MEXIT\n.NOSYSNM ANOP\n         MNOTE 8,'OPENMX SYSNAME IS REQUIRED'\n         MEXIT\n.NODCB   ANOP\n         MNOTE 8,'OPENMX DCB IS REQUIRED'\n         MEXIT\n.NOVWA   ANOP\n         MNOTE 8,'OPENMX VWA IS REQUIRED'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMVCBLOK": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\t\\x00\\x99\\x12?\\x01\\x00\\x03\\x8f\\x16\\x05\\x00K\\x00H\\x00\\x06\\xd7\\xf3\\xf9\\xf0@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1999-05-03T00:00:00", "modifydate": "2000-02-07T16:05:09", "lines": 75, "newlines": 72, "modlines": 6, "user": "P390"}, "text": "         MACRO\n&LABEL   SMVCBLOK &DSECT=YES,&PREFIX=\n.* ****************************************************************** *\n.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *\n.* SMVCBLOK GENERATES THE TEST SERVICE PLIST\n.* ****************************************************************** *\n         LCLC &PF\n         LCLC &TB,&TXT1,&TXT2\n         LCLC &LB\n.*\n.* INIT SOME VARIABLES\n.*\n         AIF ('&PREFIX' EQ '').SKPRF\n&PF      SETC '&PREFIX'\n         AGO .SETLB\n.SKPRF   ANOP\n&PF      SETC 'SM'\n.SETLB   ANOP\n&LB      SETC '&PF.VC'\n         AIF ('&LABEL' EQ '').SKLAB\n&TXT1    SETC '&LABEL'\n         AGO .CHKTYP\n.SKLAB   ANOP\n&TXT1    SETC '&LB.BLOK'\n.*\n.* DETERMINE TYPE OF GENERATION\n.*\n.CHKTYP  ANOP\n         AIF ('&DSECT' EQ 'YES').DSECT\n         AIF ('&DSECT' EQ 'NO').CONST\n         AGO .INVDSC\n.*\n.* GENERATE THE STATIC DEFINITION\n.*\n.CONST   ANOP\n&TXT2    SETC  'DS    0F'\n         AGO .GENBLK\n.*\n.* GENERATE THE DSECT\n.*\n.DSECT   ANOP\n&TXT2    SETC  'DSECT'\n.*\n.GENBLK  ANOP\n*\n* SERVICE TASK LIST BLOCK HEADER FOR SMHIT01 EXAMPLE\n*\n&TXT1    &TXT2\n&LB.FINE DS   F              ECB TO SAY HE IS FINISHED\n&LB.USER DS   F              USER FIELD\n&LB.USR2 DS   F              USER FIELD 2\n&LB.PRNT DS   F              PRINT FILE ADDR\n&LB.TCB  DS   F              TCB OF THIS TASK\n&LB.TIME DS   F              TOTAL TIME\n&LB.#HIT DS   F              TOTAL HITS\n&LB.USR# DS   F              USER FIELD 1\n&LB.RC00 DS   F              TIMES RC=0\n&LB.RC04 DS   F              TIMES RC=4\n&LB.RC08 DS   F              TIMES RC=8\n&LB.RC12 DS   F              TIMES RC=12\n&LB.RC16 DS   F              TIMES RC=16\n&LB.RC20 DS   F              TIMES RC=20\n&LB.RC24 DS   F              TIMES RC=24\n&LB.RC28 DS   F              TIMES RC=28\n&LB.RC32 DS   F              TIMES RC=32\n&LB.MODN DS   CL8            MODULE NAME\n&LB.BLKL EQU   *-&TXT1            LENGTH OF HEADER\n*\n.ENDUP   ANOP\n         MEXIT\n.*\n.INVDSC  ANOP\n         MNOTE 8,'SMVCBLOK DSECT MUST SPECIFY YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SRUSPLST": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x017\\x00\\x02\\x00\\x98\\x19\\x7f\\x01\\x02\\x07\\x0f \\x12\\x00T\\x00G\\x00\\x00\\xd7\\xf3\\xf9\\xf0@@@@@@'", "ispf": {"version": "01.55", "flags": 0, "createdate": "1998-07-16T00:00:00", "modifydate": "2002-03-11T20:12:02", "lines": 84, "newlines": 71, "modlines": 0, "user": "P390"}, "text": "         MACRO\n&LABEL   SRUSPLST &DSECT=NO,&PREFIX=,&LEN=68\n.*\n.* COPYRIGHT (C) SIMON SPANCHAK 1998                                  *\n.* SERVER USER INTERFACE PLIST. THIS PARAMETER LIST IS CREATED BY THE\n.* USER PROGRAM WHEN IT CALLS A SERVER. THIS MESSAGE IS PASSED TO THE\n.* SERVER STUB WITH THE CALL. IT IS A HEADER FOR THE USER PARAMETER\n.* LIST.\n.*\n         LCLC &PF\n         LCLC &LB                    PREFIX\n.*\n         AIF ('&PREFIX' EQ '').NOPRFX\n&PF      SETC  '&PREFIX'             LOCAL PREFIX\n         AGO .SETLB\n.NOPRFX  ANOP\n&PF      SETC  'SR'                  DEFAULT PREFIX\n.SETLB   ANOP\n&LB      SETC  '&PF.US'              LABEL FOR BLOCK\n.*\n.* DETERMINE TYPE OF LABEL TO GENERATE\n.*\n         AIF ('&DSECT' EQ 'NO').NODSCT\n         AIF ('&DSECT' EQ 'YES').DSECT\n         AGO .INVDSC\n.*\n.DSECT   ANOP\n         AIF ('&LABEL' EQ '').NOLAB1\n&LABEL   DSECT\n&LB.MSG  DS  0D\n         AGO .GENPLS\n.*\n.NOLAB1  ANOP                                                           0000716\n&LB.MSG  DSECT\n         AGO .GENPLS\n.*\n.NODSCT  ANOP\n         AIF ('&LABEL' EQ '').NOLAB2\n&LABEL   DS  0D\n.*\n.NOLAB2  ANOP                                                           0000716\n&LB.MSG  DS  0D\n         AGO .GENPLS\n.*\n.* GENERATE THE SERVER USER INTERFACE PARAMETER\n.*\n.GENPLS  ANOP\n&LB.LEN  DS   H                LENGTH OF MESSAGE\n&LB.REQ  DS   H                REQUEST NUMBER\n*\n&LB.SYSN DS   CL4              SYSTEM NAME\n&LB.ATOK DS   F                ACCESS TOKEN\n&LB.ECBX DS   F                ECB\n&LB.ASCB DS   F                ASCB OF CLIENT\n&LB.PCR# DS   H                SERVER REQUEST NUMBER\n*\n&LB.NFFL DS   X                CALL DESCRIPTOR FLAGS\n&LB.NFSN EQU  X'80'            SYNCHRONOUS CALL\n&LB.NFCL EQU  X'40'            1 = CALL\n&LB.NFTK EQU  X'20'            1 = TASK\n&LB.NFB4 EQU  X'10'            NOTIFY BEFORE\n&LB.NFAF EQU  X'08'            NOTIFY AFTER\n&LB.NFLN EQU  X'04'            LONG RUNNING TASK\n&LB.NFST EQU  X'02'            STAE\n&LB.NFNS EQU  X'01'            NOT SELF\n&LB.OPFL DS   X                OPERATION FLAGS\n&LB.OPLK EQU  X'80'            LOCKED OPERATION\n         DS   0D               FILLER\n&LB.MSTX DS   (&LEN)X          OVERLAY MESSAGE TEXT ON HERE\n*\n&LB.USRL EQU  *-&LB.MSTX       LENGTH OF USER PART\n         AIF ('&LABEL' EQ '').NOLAB3\n&LB.MSGL EQU  *-&LABEL         LENGTH OF MESSAGE\n         MEXIT\n*\n.NOLAB3  ANOP                                                           0000716\n         ORG ,\n&LB.MSGL EQU  *-&LB.MSG        LENGTH OF MESSAGE\n         MEXIT\n*\n.INVDSC  ANOP\n         MNOTE 8,'SRUSPLST DSECT MUST BE YES OR NO'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SRVACCES": {"ttr": 5636, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x12\\x01\\x00(\\x9f\\x01\\x03\\x10\\x1f\\x05\\x14\\x00[\\x00^\\x00\\n\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2000-10-15T00:00:00", "modifydate": "2003-04-11T05:14:12", "lines": 91, "newlines": 94, "modlines": 10, "user": "IBMUSER"}, "text": "         MACRO\n&LABEL   SRVACCES &TYPE=,&PREFIX=,&PARM=,                            +++\n               &SYSNAME=,                                            +++\n               &RETOK=,                                              +++\n               &NOTSUP=,                                             +++\n               &NOTFND=,                                             +++\n               &QUIESC=,                                             +++\n               &REQFAIL=,                                            +++\n               &SOS=,                                                +++\n               &LOCKED=,                                             +++\n               &NOTINIT=,                                            +++\n               &ERROR=\n.*\n.* ****************************************************************** *\n.* SRVACCES CALL SERVER  GET FAST TOKEN\n.* COPYRIGHT (C) SIMON SPANCHAK 1998                                  *\n.* ****************************************************************** *\n         LCLC  &PF                PREFIX\n         LCLC  &LABL              LABEL\n.*\n         AIF ('&PREFIX' EQ '').NOPF\n&PF      SETC  '&PREFIX'\n         AGO .PFSET\n.NOPF    ANOP\n&PF      SETC  'SR'\n.PFSET   ANOP\n&LABL    SETC  '&PF.US'\n         AIF ('&LABEL' EQ '').NOLAB\n&LABEL   DS    0H\n.NOLAB   ANOP\n         XC    &LABL.REQ,&LABL.REQ\n         XC    &LABL.NFFL,&LABL.NFFL\n         OI    &LABL.NFFL,&LABL.NFSN+&LABL.NFCL\n         XC    &LABL.ATOK,&LABL.ATOK\n.*\n         AIF   ('&SYSNAME' EQ '').NOSYSN\n         CALLSRV PARM=&PARM,LABL=&LABL,SYSNAME=&SYSNAME\n         L     R1,&LABL.MSTX\n         ST    R1,&LABL.ATOK\n         AIF ('&NOTSUP'  NE '').GBRTBL\n         AIF ('&NOTFND'  NE '').GBRTBL\n         AIF ('&QUIESC'  NE '').GBRTBL\n         AIF ('&REQFAIL' NE '').GBRTBL\n         AIF ('&SOS'     NE '').GBRTBL\n         AIF ('&LOCKED'  NE '').GBRTBL\n         AIF ('&NOTINIT' NE '').GBRTBL\n.*\n         AIF ('&RETOK'   EQ '').CHKERR\n         LTR  R15,R15\n         BZ   &RETOK\n         AIF ('&ERROR'   EQ '').MEXIT\n         B    &ERROR\n.MEXIT   ANOP\n         MEXIT\n.CHKERR  ANOP\n         AIF ('&ERROR'   EQ '').MEXIT\n         LTR  R15,R15\n         BNZ  &ERROR\n         MEXIT\n.*\n.GBRTBL  ANOP\n         AIF ('&RETOK'   EQ '').MSNGLBL\n         AIF ('&NOTSUP'  EQ '').MSNGLBL\n         AIF ('&NOTFND'  EQ '').MSNGLBL\n         AIF ('&QUIESC'  EQ '').MSNGLBL\n         AIF ('&REQFAIL' EQ '').MSNGLBL\n         AIF ('&SOS'     EQ '').MSNGLBL\n         AIF ('&LOCKED'  EQ '').MSNGLBL\n         AIF ('&NOTINIT' EQ '').MSNGLBL\n         AIF ('&ERROR'   EQ '').MSNGLBL\n         @@# (R15),                                                   ++\n               &RETOK,                                                ++\n               &REQFAIL,                                              ++\n               &QUIESC,                                               ++\n               &NOTFND,                                               ++\n               &SOS,                                                  ++\n               &NOTSUP,                                               ++\n               &LOCKED,                                               ++\n               &NOTINIT,                                              ++\n               &ERROR,                                                ++\n               &ERROR\n         MEXIT\n.*\n.NOSYSN  ANOP\n         MNOTE 8,'SRVACCES SYSNAME IS REQUIRED'\n         MEXIT\n.MSNGLBL ANOP\n         MNOTE 8,'SRVACCES MISSING BRANCH LABEL'\n         MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SSGLOBAL": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x009\\x00\\x98\\x18O\\x01\\x03\\t\\x0f\\x06Y\\x00]\\x00P\\x00X\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1998-07-03T00:00:00", "modifydate": "2003-03-31T06:59:39", "lines": 93, "newlines": 80, "modlines": 88, "user": "IBMUSER"}, "text": ".* ****************************************************************** *\n.* GENERATE THE SYSTEM GENERATION GLOBAL VALUES                       *\n.* COPYRIGHT (C) SIMON SPANCHAK 1990                                  *\n.* ****************************************************************** *\n         GBLB  &G@TEST\n         GBLB  &G@SHRT\n         GBLB  &G@RETL\n         GBLB  &G@DBUG\n         GBLB  &G@SDBG\n         GBLB  &G@DBDM\n         GBLB  &G@ESTA\n         GBLB  &G@ESTW\n         GBLB  &G@TOKS\n         GBLB  &G@PRNT\n.*\n         GBLB  &G@ENTC\n         GBLB  &G@SSX\n         GBLB  &G@DSW\n.*\n         GBLB  &G@STCK\n         GBLB  &G@STKU\n         GBLB  &G@ASTK\n         GBLB  &G@SWKH\n         GBLB  &G@SWKL\n         GBLB  &G@GENR\n         GBLB  &G@GXIT\n         GBLB  &G@COMM\n         GBLB  &G@NCOM\n         GBLB  &G@CPRM\n         GBLB  &G@COMI\n         GBLB  &G@TRAC\n         GBLB  &G@DMPL\n         GBLB  &G@DIAG\n         GBLB  &G@HEXC\n         GBLB  &G@DALC\n         GBLB  &G@PARS\n         GBLB  &G@IPRM\n         GBLB  &G@SSTV\n         GBLB  &G@SSIT\n         GBLB  &G@SSTD\n         GBLB  &G@SSTM\n         GBLB  &G@PRLN\n         GBLB  &G@WRK2\n         GBLB  &G@SPRM\n         GBLB  &G@COMX\n         GBLB  &G@SSRP\n         GBLB  &G@SSFL\n         GBLB  &G@SRID\n         GBLB  &G@SRES\n         GBLB  &G@MULT\n         GBLB  &G@OPLS\n         GBLB  &G@PC\n         GBLB  &G@SSSM\n         GBLB  &G@SUBS\n         GBLB  &SSAPPL\n         GBLB  &G@SUBC\n         GBLB  &G@SSOB\n         GBLB  &G@PASO\n         GBLB  &G@PWRK\n         GBLB  &G@SSCN\n         GBLB  &G@SSAN\n         GBLB  &G@SSCT\n         GBLB  &G@SSFN\n         GBLB  &G@SSRV\n         GBLB  &G@SCTI\n         GBLB  &G@SERV\n         GBLB  &G@SRV1\n         GBLB  &G@SSNT\n.*  SUBSYSTEM SUPPORT ON POST MVS/ESA SP4 CHANGES\n         GBLB  &SP52                    USE SP5.2 GENERATION\n         GBLB  &G@IEFQ\n         GBLB  &G@INCS\n         GBLB  &G@INCO\n.*\n         GBLB  &G@WKDW\n         GBLB  &G@ATTX\n         GBLB  &G@LSTK\n         GBLB  &G@MAPG\n         GBLB  &G@STKX\n.*\n         GBLA  &G@DBCT\n         GBLA  &G@RCMX\n         GBLA  &G@WTOW\n.*\n         GBLC  &G@OPSY\n         GBLC  &G@PRFX\n         GBLC  &G@DYN\n         GBLC  &G@LABL\n         GBLC  &G@LREG\n         GBLC  &G@PNAM\n         GBLC  &G@PNAD\n         GBLC  &G@STAK\n         GBLC  &G@ATYP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT622/CBT.V500.FILE622.PDS/API.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT622/CBT.V500.FILE622.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}