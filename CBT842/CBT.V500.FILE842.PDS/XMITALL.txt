/*  REXX  */
/*TRACE R */
 X=0;Z=0;S1=0;S2=0;W=0;V=0;T=0;R=0;S3=0;S4=0;I=0;J=0;L=0;M=0;N=0
 SEP = '.'
 PARSE ARG USER
 Z=Z+1;H.Z="//IBMUSERN JOB ACCTING,'PROGRAMMER',CLASS=S,REGION=8M,"
 Z=Z+1;H.Z="//    MSGCLASS=U,NOTIFY=&SYSUID                        "
 V=V+1;K.V="//*****************************************************"
 V=V+1;K.V="//TSOBATCH EXEC PGM=IKJEFT01,DYNAMNBR=200"
 V=V+1;K.V="//SYSTSPRT DD SYSOUT=*"
 V=V+1;K.V="//SYSTSIN  DD *"
 M=M+1;N.M="//*****************************************************"
 M=M+1;N.M="//CLEANUP  EXEC PGM=IDCAMS"
 M=M+1;N.M="//SYSPRINT DD SYSOUT=*"
 M=M+1;N.M="//SYSIN    DD *"

DSNAME = ' '
VOLSER = ' '
"EXECIO * DISKR DSNLIST ( FINIS STEM D."
/**************************************************************/
/*                      START OF MAINLINE                     */
/**************************************************************/
DO A = 1 TO D.0
  RECORD = D.A                         /* PARSE OUT DATASET INFO  */
  DSNAME = SUBSTR(RECORD,1,44)
  VOLSER = SUBSTR(RECORD,46,6)
  DSORG  = SUBSTR(RECORD,53,4)
  RECFM  = SUBSTR(RECORD,58,3)
  LRECL  = SUBSTR(RECORD,62,5)
  BLKSZ  = SUBSTR(RECORD,68,5)
  TYPE   = SUBSTR(RECORD,74,6)
  SIZE   = SUBSTR(RECORD,82,5)
  UNIT   = SUBSTR(RECORD,90,10)

  DSN = STRIP(DSNAME,'T')              /* CLEAN UP DSNAME  */
  PARSE VAR DSN THL (SEP) REST
  IF USER = THL THEN                   /* BUILD SPECIAL NAME IF NOT */
    ODSN = DSN                         /* USERID HLQ   */
  ELSE
    ODSN = USER || ".@." || REST

  L = LENGTH(ODSN)                     /*CHECK LENGTH AND SHORTEN */
  IF L > 40 THEN DO                    /*IF NECESSARY  */
    SAY 'DSN TOO LONG - ' ODSN
    ODSN = SUBSTR(ODSN,1,40)
    SAY 'CHANGED TO   - ' ODSN
  END

  SELECT                               /*WHAT IS THE DSORG? */
    WHEN DSORG = 'PO' THEN DO          /* AND CALL APPROPIATE TASK */
      CALL BLDPDS
    END
    WHEN DSORG = 'PO-E' THEN DO
      CALL BLDPDSE
    END
    WHEN DSORG = 'PS' THEN DO
      CALL BLDSEQ
    END
    OTHERWISE DO
      QUEUE RECORD
      IF VOLSER = 'ARCIVE' | VOLSER = 'MIGRAT' THEN
        SAY 'DATASET MIGRATED - ' DSN
      ELSE
        SAY 'REVIEW NEEDS FOR - ' DSN
      S4=S4+1
    END
  END
END

 "EXECIO * DISKW DDN (STEM H. "       /* WRITE OUTPUT DATASETS  */
 "EXECIO * DISKW DDN (STEM K. "
 "EXECIO * DISKW DDN (STEM P. "       /* PDS - XMIT ONLY  */
 "EXECIO 0 DISKW DDN (FINIS)"

 "EXECIO * DISKW DDE (STEM H. "       /* PDSE AND VB   */
 "EXECIO * DISKW DDE (STEM O. "
 "EXECIO * DISKW DDE (STEM K. "       /* COPY TO FB PDS AND */
 "EXECIO * DISKW DDE (STEM Q. "       /* XMIT               */
 "EXECIO 0 DISKW DDE (FINIS)"

 "EXECIO * DISKW DDS (STEM H. "       /* COPY SEQ TO COMMON NAMES  */
 "EXECIO * DISKW DDS (STEM J. "
 "EXECIO 0 DISKW DDS (FINIS)"

 "EXECIO * DISKW DDC (STEM H. "       /* CLEAN UP IDCAMS STMTS  */
 "EXECIO * DISKW DDC (STEM N. "
 "EXECIO 0 DISKW DDC (FINIS)"

 TOT = S1+S2+S3+S4
 SAY '----------------------------------'
 SAY '                                  '
 SAY '       ***  COUNTS  ***           '
 SAY '                                  '
 SAY '----------------------------------'
 SAY 'DATASETS PROCESSED - PDS  = ' S1
 SAY 'DATASETS PROCESSED - PDSE = ' S2
 SAY 'DATASETS PROCESSED - PS   = ' S3
 SAY 'DATASETS TO REVIEW - ???? = ' S4
 SAY '----------------------------------'
 SAY 'TOTAL DATASETS            = ' TOT
 SAY '----------------------------------'
 SAY '                                  '
EXIT                    /* END OF MAINLINE  */

/**************************************************************/
/*                      CALLED ROUTINES                       */
/**************************************************************/

BLDPDS:                                  /*NORMAL PDS  */
 S1 = S1+1
 IF SUBSTR(RECFM,1,1) = 'V' THEN DO  /*VB DATASET NEEDS TO BE FB   */
   DSNFQ = "'"||DSN||"'"
   DSINFO=LISTDSI(DSNFQ DIRECTORY)         /* GET DETAILED PDSE INFO */
   IF DSINFO == 0 THEN DO
     CALL BLDSYMS
     IF US > 0 THEN                    /*CHECK FOR EMPTY DATASET */
       CALL BLDVJCL
     ELSE DO
       SAY 'EMPTY DATASET    - ' DSN
       S4=S4+1
     END
   END
   ELSE DO
     SAY 'CHECK ON  - ' DSN
     S4=S4+1
   END
 END
 ELSE DO                             /*NORMAL PDS - EASY BUILD     */
   W=W+1;P.W=" XMIT DAYTON."||USER||" DSN('"||DSN||"')      +"
   W=W+1;P.W="      OUTDSN('"||ODSN||".XMI')"
   M=M+1;N.M="      DELETE "||ODSN||".XMI - "
   M=M+1;N.M="             NONVSAM PURGE "
 END
RETURN

BLDPDSE:                                /* PDSE */
 DSNFQ = "'"||DSN||"'"
 DSINFO=LISTDSI(DSNFQ DIRECTORY)         /* GET DETAILED PDSE INFO */
 IF DSINFO == 0 & SYSUSED = 'N/A' THEN DO
   S2 = S2+1
   CALL BLDSYMS
   IF UP > 0 THEN DO                 /* CHECK FOR EMPTY DATASET   */
     IF SUBSTR(RECFM,1,1) = 'V' THEN /*VB DATASET NEEDS TO BE FB   */
       CALL BLDVJCL
     ELSE
       CALL BLDEJCL
   END
   ELSE DO
     SAY 'EMPTY DATASET    - ' DSN
     S4=S4+1
   END
 END
 ELSE DO                             /* NEED TO CHECK WHY          */
   SAY 'CHECK ON  - ' DSN
   S4=S4+1
 END
RETURN

BLDSEQ:                                /* SEQUENTIAL DATASET  */
 DSNFQ = "'"||DSN||"'"
 DSINFO=LISTDSI(DSNFQ)                 /* GET SEQUENTIAL DSN INFO  */
 IF DSINFO == 0 THEN DO
   S3=S3+1
   CALL BLDSYMS
   IF US > 0 THEN                    /* CHECK FOR EMPTY DATASET */
     CALL BLDSJCL
   ELSE DO
     SAY 'EMPTY DATASET    - ' DSN
     S4=S4+1
   END
 END
 ELSE DO                               /* NEED TO CHECK WHY    */
   SAY 'CHECK ON  - ' DSN
   S4=S4+1
 END
RETURN

BLDSYMS:                         /* SHORTEN SYMBOLIC NAMES AND  */
 T = RIGHT(A,3,0)                /* MODIFY AS NECESSARY  */
 LR = SYSLRECL
 BL = SYSBLKSIZE
 AL = SYSALLOC
 FM = SYSRECFM
 US = SYSUSED
 UP = SYSUSEDPAGES
 DB = SYSADIRBLK
 PR = SYSPRIMARY
 SC = SYSSECONDS
 IF DB = 'NO_LIM' THEN            /*IS IT A PDSE?               */
   DB = FORMAT(SYSMEMBERS/3,,0)   /* CALCULATE DIRECTORY BLOCKS */
 EX = SYSEXTENTS
 IF EX > 1 THEN
   PR = PR + (EX * SC)
 UN = SYSUNITS
 IF UN = 'CYLINDER' THEN
   UN = 'CYL'
 ELSE
   IF UN = 'TRACK' THEN
     UN = 'TRK'
   ELSE
     UN = BL
RETURN

/*****************************************************************/
/*   BUILD IEBCOPY FOR PDSE TO PDS FOR XMIT SO XMITMNGR CAN READ */
/*   FINAL OUTPUT                                                */
/*****************************************************************/
BLDEJCL:
 X=X+1;O.X="//*****************************************************"
 X=X+1;O.X="//DELT"||T||"  EXEC PGM=IEFBR14"
 X=X+1;O.X="//DD1      DD DSN="||ODSN||".TMP,"
 X=X+1;O.X="//            DISP=(MOD,DELETE),"
 X=X+1;O.X="//            UNIT=SYSDA,SPACE=(TRK,(1,1))"
 X=X+1;O.X="//COPY"||T||"  EXEC PGM=IEBCOPY"
 X=X+1;O.X="//SYSPRINT DD SYSOUT=*"
 X=X+1;O.X="//SYSIN    DD *"
 X=X+1;O.X="   COPY INDD=INDD,OUTDD=OUTDD,LIST=NO"
 X=X+1;O.X="//INDD     DD DISP=SHR,DSN="||DSN
 X=X+1;O.X="//OUTDD    DD DSN="||ODSN||".TMP,"
 X=X+1;O.X="//            DISP=(,CATLG,DELETE),UNIT=SYSDA,"
 X=X+1
 O.X="//            DCB=(RECFM="||FM||",LRECL="||LR||",BLKSIZE=0),"
 X=X+1;O.X="//            SPACE=("||UN||",("||PR||","||SC||","DB"))"
 R=R+1;Q.R=" XMIT DAYTON."||USER||" DSN('"||ODSN||".TMP')      +"
 R=R+1;Q.R="      OUTDSN('"||ODSN||".XMI')"
 M=M+1;N.M="      DELETE "||ODSN||".TMP - "
 M=M+1;N.M="             NONVSAM PURGE"
 M=M+1;N.M="      DELETE "||ODSN||".XMI - "
 M=M+1;N.M="             NONVSAM PURGE"
RETURN

/*****************************************************************/
/*   BUILD IEBCOPY FOR VB DATASETS TO FB DATASETS SO XMITMNGR    */
/*   CAN READ FINAL OUTPUT                                       */
/*****************************************************************/
BLDVJCL:
 FM = 'FB'
 UN = 'CYL'
 PR = 10
 SC = 10
 BL = 0
 X=X+1;O.X="//*****************************************************"
 X=X+1;O.X="//DELT"||T||"  EXEC PGM=IEFBR14"
 X=X+1;O.X="//DD1      DD DSN="||ODSN||".TMP,"
 X=X+1;O.X="//            DISP=(MOD,DELETE),"
 X=X+1;O.X="//            UNIT=SYSDA,SPACE=(TRK,(1,1))"
 X=X+1;O.X="//COPY"||T||"  EXEC PGM=IKJEFT01,DYNAMNBR=128"
 X=X+1;O.X="//ISPPLIB  DD DISP=SHR,DSN=SYS1.ISPF.SISPPENU"
 X=X+1;O.X="//ISPSLIB  DD DISP=SHR,DSN=SYS1.ISPF.SISPSLIB"
 X=X+1;O.X="//         DD DISP=SHR,DSN=SYS1.ISPF.SISPSENU"
 X=X+1;O.X="//ISPMLIB  DD DISP=SHR,DSN=SYS1.ISPF.SISPMENU"
 X=X+1;O.X="//ISPPROF  DD DSN=&&PROFILE,"
 X=X+1;O.X="//            DISP=(,DELETE,DELETE),UNIT=SYSDA,"
 X=X+1;O.X="//            SPACE=(TRK,(1,1,1),RLSE),"
 X=X+1;O.X="//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)"
 X=X+1;O.X="//ISPTLIB  DD DISP=SHR,DSN=SYS1.ISPF.SISPTENU"
 X=X+1;O.X="//ISPLOG   DD SYSOUT=*,"
 X=X+1;O.X="//            DCB=(LRECL=120,BLKSIZE=2400,DSORG=PS)"
 X=X+1;O.X="//ISPLIST  DD SYSOUT=*,"
 X=X+1;O.X="//            DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA)"
 X=X+1;O.X="//SYSEXEC  DD DISP=SHR,DSN=SYS1.ISPF.SISPEXEC"
 X=X+1;O.X="//SYSPROC  DD DSN=IBMUSER.REXX.EXEC,DISP=SHR"
 X=X+1;O.X="//SYSTSPRT DD SYSOUT=*"
 X=X+1;O.X="//INSET    DD DISP=SHR,DSN="||DSN
 X=X+1;O.X="//OUTSET   DD DSN="||ODSN||".TMP,"
 X=X+1;O.X="//            DISP=(,CATLG,DELETE),UNIT=SYSDA,"
 X=X+1;O.X="//            DCB=(RECFM=FB,LRECL="||LR||",BLKSIZE=0),"
 X=X+1;O.X="//            SPACE=("||UN||",("||PR||","||SC||","DB"))"
 X=X+1;O.X="//SYSTSIN  DD *"
 X=X+1;O.X=" PROFILE PREFIX(IBMUSER)"
 X=X+1;O.X=" ISPSTART CMD(%LMCOPY)"
 R=R+1;Q.R=" XMIT DAYTON."||USER||" DSN('"||ODSN||".TMP')      +"
 R=R+1;Q.R="      OUTDSN('"||ODSN||".XMI')"
 M=M+1;N.M="      DELETE "||ODSN||".TMP - "
 M=M+1;N.M="             NONVSAM PURGE"
 M=M+1;N.M="      DELETE "||ODSN||".XMI - "
 M=M+1;N.M="             NONVSAM PURGE"
RETURN

/*****************************************************************/
/*   BUILD IEBGNER FOR SEQUENTIAL DATASETS, JUST TO MAKE THE     */
/*   FTP TRANFERS EASIER                                         */
/*****************************************************************/
BLDSJCL:
 I=I+1;J.I="//*****************************************************"
 I=I+1;J.I="//DELT"||T||"  EXEC PGM=IEFBR14"
 I=I+1;J.I="//DD1      DD DSN="||ODSN||".SEQ,"
 I=I+1;J.I="//            DISP=(MOD,DELETE),"
 I=I+1;J.I="//            UNIT=SYSDA,SPACE=(TRK,(1,1))"
 I=I+1;J.I="//GENR"||T||"  EXEC PGM=IEBGENER"
 I=I+1;J.I="//SYSPRINT DD SYSOUT=*"
 I=I+1;J.I="//SYSIN    DD DUMMY"
 I=I+1;J.I="//SYSUT1   DD DISP=SHR,DSN="||DSN
 I=I+1;J.I="//SYSUT2   DD DSN="||ODSN||".SEQ,"
 I=I+1;J.I="//            DISP=(,CATLG,DELETE),UNIT=SYSDA,"
 I=I+1
 J.I="//          DCB=(RECFM="||FM||",LRECL="||LR||",BLKSIZE="||BL||"),"
 I=I+1;J.I="//            SPACE=("||UN||",("||PR||","||SC||"))"
 M=M+1;N.M="      DELETE "||ODSN||".SEQ - "
 M=M+1;N.M="             NONVSAM PURGE"
RETURN
