/*   REXX       */
ADDRESS ISPEXEC
"CONTROL ERRORS RETURN"
PARSE ARG HLQ PLUSL ONLY
"LMDINIT LISTID("LSTID") LEVEL("HLQ")"
IF RC <> 0 THEN DO
  SAY 'LMDINIT ERROR, RC='RC
  ZISPFRC = RC
  ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
  EXIT ZISPFRC
END
SEP = '.'
DSNAME=' '
/*******************************************************************/
/**    START OF MAINLINE                                          **/
/*******************************************************************/
DO WHILE (RC = 0)
  "LMDLIST LISTID("LSTID") OPTION(LIST) DATASET(DSNAME) STATS(YES)"
  SELECT
    WHEN RC = 0 THEN DO
      TNAME = DSNAME
      PARSE VAR TNAME LL (SEP) L2 (SEP) L3 (SEP) L4 (SEP) L5 (SEP),
                      L6 (SEP) L7 (SEP) REST
      PARSE VAR HLQ HL (SEP) H2 (SEP) H3 (SEP) H4 (SEP) H5 (SEP),
                    H6 (SEP) ENDH
      HNAME = TRANSLATE(HLQ,' ','.')
      HLCNT = WORDS(HNAME)
      IF HLCNT > 5 & PLUSL <> ' ' THEN DO
        SAY 'BASE LEVEL GREATER THAN 5 AND EXTRA LEVELS REQUESTED'
        ZISPFRC = 8
        ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
        EXIT ZISPFRC
      END
      IF PLUSL <> '' THEN DO
        SELECT
          WHEN PLUSL = 0 THEN
            CALL LEVEL0
          WHEN PLUSL = 1 THEN
            CALL LEVEL1
          WHEN PLUSL = 2 THEN
            CALL LEVEL2
          WHEN PLUSL = 3 THEN
            CALL LEVEL3
          WHEN PLUSL = 4 THEN
            CALL LEVEL4
          WHEN PLUSL = 5 THEN
            CALL LEVEL5
          OTHERWISE DO
            SAY 'REQUESTED EXTRA LEVEL PARM MUST BE 0 - 5'
            ZISPFRC = 8
            ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
            EXIT ZISPFRC
          END
        END
      END
      ELSE
        CALL QUEUEIT
    END
    WHEN RC = 8 THEN DO
      LEAVE
    END
    OTHERWISE DO
      SAY 'LMDLIST LIST ERROR, RC='RC
      ZISPFRC = RC
      ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
      EXIT ZISPFRC
    END
  END
END
"LMDLIST LISTID("LSTID") OPTION(FREE)"
IF RC <> 0 THEN DO
  SAY 'LMDLIST FREE ERROR, RC='RC
  ZISPFRC = RC
  ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
  EXIT ZISPFRC
END
ADDRESS TSO
"EXECIO * DISKW OUTFILE (FINIS"
ZISPFRC = 0
ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
EXIT ZISPFRC
/***************************************************************/
/**            CALLED ROUTINES                                **/
/***************************************************************/
LEVEL0:                   /* NO ADDITIONAL LEVELS   */
SELECT
  WHEN HLCNT = 1 THEN
    IF L2 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 2 THEN
    IF L3 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 3 THEN
    IF L4 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 4 THEN
    IF L5 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 5 THEN
    IF L6 = ' ' THEN
      CALL QUEUEIT
  OTHERWISE
    NOP
END
RETURN

LEVEL1:                   /*  1 ADDITIONAL LEVEL    */
SELECT
  WHEN HLCNT = 1 THEN
    IF L3 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 2 THEN
    IF L4 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 3 THEN
    IF L5 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 4 THEN
    IF L6 = ' ' THEN
      CALL QUEUEIT
  WHEN HLCNT = 5 THEN
    IF L7 = ' ' THEN
      CALL QUEUEIT
  OTHERWISE
    NOP
END
RETURN

LEVEL2:                   /*  2 ADDITIONAL LEVELS   */
SELECT
  WHEN HLCNT = 1 THEN
    CALL TESTL4
  WHEN HLCNT = 2 THEN
    CALL TESTL5
  WHEN HLCNT = 3 THEN
    CALL TESTL6
  WHEN HLCNT = 4 THEN
    CALL TESTL7
  WHEN HLCNT = 5 THEN
    CALL TESTREST
  OTHERWISE
    NOP
END
RETURN

LEVEL3:                   /*  3 ADDITIONAL LEVELS   */
SELECT
  WHEN HLCNT = 1 THEN
    CALL TESTL5
  WHEN HLCNT = 2 THEN
    CALL TESTL6
  WHEN HLCNT = 3 THEN
    CALL TESTL7
  WHEN HLCNT = 4 THEN
    CALL TESTREST
  OTHERWISE
    NOP
END
RETURN

LEVEL4:                   /*  4 ADDITIONAL LEVELS   */
SELECT
  WHEN HLCNT = 1 THEN
    CALL TESTL6
  WHEN HLCNT = 2 THEN
    CALL TESTL7
  WHEN HLCNT = 3 THEN
    CALL TESTREST
  OTHERWISE
    NOP
END
RETURN

LEVEL5:                   /*  5 ADDITIONAL LEVELS   */
SELECT
  WHEN HLCNT = 1 THEN
    CALL TESTL7
  WHEN HLCNT = 2 THEN
    CALL TESTREST
  OTHERWISE
    NOP
END
RETURN

TESTL4:
IF L4 = ' ' THEN DO
  IF ONLY = 'Y' THEN DO
    IF L3 <> ' ' THEN
      CALL QUEUEIT
    ELSE
      NOP
  END
  ELSE
    CALL QUEUEIT
END
RETURN

TESTL5:
IF L5 = ' ' THEN DO
  IF ONLY = 'Y' THEN DO
    IF L4 <> ' ' THEN
      CALL QUEUEIT
    ELSE
      NOP
  END
  ELSE
    CALL QUEUEIT
END
RETURN

TESTL6:
IF L6 = ' ' THEN DO
  IF ONLY = 'Y' THEN DO
    IF L5 <> ' ' THEN
      CALL QUEUEIT
    ELSE
      NOP
  END
  ELSE
    CALL QUEUEIT
END
RETURN

TESTL7:
IF L7 = ' ' THEN DO
  IF ONLY = 'Y' THEN DO
    IF L6 <> ' ' THEN
      CALL QUEUEIT
    ELSE
      NOP
  END
  ELSE
    CALL QUEUEIT
END

RETURN
TESTREST:
IF REST = ' ' THEN DO
  IF ONLY = 'Y' THEN DO
    IF L7 <> ' ' THEN
      CALL QUEUEIT
    ELSE
      NOP
  END
  ELSE
    CALL QUEUEIT
END
RETURN

QUEUEIT:
LINE = ' '
DSN = LEFT(DSNAME,45,' ')
VOL = LEFT(ZDLVOL,7,' ')
ORG = LEFT(ZDLDSORG,5,' ')
REC = LEFT(ZDLRECFM,4,' ')
LEN = LEFT(ZDLLRECL,6,' ')
BLK = LEFT(ZDLBLKSZ,6,' ')
TYP = LEFT(ZDLDSNTP,7,' ')
SIZ = LEFT(ZDLSIZE,9,' ')
SPC = LEFT(ZDLSPACU,10,' ')
IF VOL <> '*ALIAS' THEN DO
  LINE = DSN||VOL||ORG||REC||LEN||BLK||TYP||SIZ||SPC
  QUEUE LINE
END
RETURN
