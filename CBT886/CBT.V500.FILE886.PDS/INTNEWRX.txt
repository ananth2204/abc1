/* REXX EXEC */
TRACE E
/*-----------------------------------------------------------------*/
/* WRITTEN BY:  ED PETKA 12/08/27                                  */
/* LAST UPDATE: ED PETKA 12/10/22                                  */
/* TESTED BY:   ED PETKA 12/10/22                                  */
/*-----------------------------------------------------------------*/
/* --------------------------------------------------------------- */
/*                           << INIT REXX >>                       */
/*     PURPOSE:  BUILD INIT JOBS FOR NEW DASD PLACED ON FLOOR      */
/*                                                                 */
/*     CALLED BY: SUBMITTED THRU BATCH JOB - INTNEWBD              */
/* ----------------------------------------------------------------*/
START:
 PARSE ARG 'TYPE='TYPE 'VCT='VCT 'JCT='JCT 'VPFX='VPFX ,
           'FUCB='FUCB 'SMS='SMS
 JOBCNT = 0                                 /* STARTING JOB COUNT # */
 VOLCNT = 0                                 /* STARTING VOL COUNT # */
 TYPE   = ('3390-'||TYPE)                   /* SET 3390 TYPE        */
 TYPE   = STRIP(TYPE)                       /* STRIP SPACES         */
 DEVTYP = STRIP(TYPE)                       /* DEVICE TYPE          */
 VCT    = STRIP(VCT)                        /* VOLCT IN JOB PARM    */
 JCT    = STRIP(JCT)                        /* JOBCT IN JOB PARM    */
 VPFX   = STRIP(VPFX)                       /* VOL PFX IN JOB PARM  */
 FUCB   = STRIP(FUCB)                       /* 1ST UCB IN JOB PARM  */
 UCBSCN = SUBSTR(FUCB,1,2)                  /* GRAB 1ST 2 OF 1ST UCB*/
 HEXCNT = SUBSTR(FUCB,3,2)                  /* GRAB LAST 2 OF UCB   */
 HEXCNT = RIGHT(HEXCNT,2,0)                 /* KEEP LENGTH 2        */
 SMS    = STRIP(SMS)                        /* SMS IN JOB PARM      */
 FUCB1 = INSERT(UCBSCN,HEXCNT)              /* MERGE UCBSCN & HEXCNT*/
DO UNTIL JOBCNT = JCT                    /* START OF JOB LOOP         */
 JOBCNT = RIGHT(JOBCNT,2,0)
  INT.1 = "//SYPGEP"JOBCNT" JOB (660),'INIT VOLS ',CLASS=M,"
  INT.2 = "//      TYPRUN=HOLD,"
  INT.3 = "//      MSGCLASS=Q,NOTIFY=&SYSUID"
  INT.4 = "/*JOBPARM S=*"
  INT.5 = "//DSFINIT EXEC PGM=ICKDSF,REGION=4M,"
  INT.6 = "//        PARM='NOREPLYU'"
  INT.7 = "//SYSPRINT DD SYSOUT=*"
  INT.8 = "//SYSIN    DD *"
'EXECIO 8 DISKW OUTFILE (STEM INT.'        /* WRITE OUT JOBCARD       */
INT. = ''
 DO UNTIL VOLCNT = VCT                    /* START OF INIT CARD LOOP  */
   NEWVL = INSERT(VPFX,FUCB1)
      INT.1=" INIT NOVERIFY UNITADDRESS("FUCB1") VOLID("NEWVL") -"
     IF DEVTYP = '3390-X' THEN DO
      INT.2="    NOINDEX                      "
     END
     IF DEVTYP = '3390-1' THEN DO
      INT.2="    MAP VTOC(0,1,1) INDEX(0,2,1) NOCHECK PURGE" SMS
     END
     IF DEVTYP = '3390-3' THEN DO
      INT.2="    MAP VTOC(0,1,209) INDEX(14,0,70) NOCHECK PURGE" SMS
     END
     IF DEVTYP = '3390-9' THEN DO
      INT.2="    MAP VTOC(0,1,300) INDEX(20,1,150) NOCHECK PURGE" SMS
     END
     IF DEVTYP = '3390-27' THEN DO
      INT.2="    MAP VTOC(0,1,300) INDEX(20,1,150) NOCHECK PURGE" SMS
     END
       INT.3=" "
  'EXECIO 3 DISKW OUTFILE (STEM INT. '    /* WRITE OUT INIT CARDS     */
   FUCB1 = X2D(FUCB1)                       /* CONVERT HEX TO DEC   */
   FUCB1 = FUCB1 + 1                        /* BUMP BY 1            */
   VOLCNT = VOLCNT + 1                      /* BUMP BY 1            */
   FUCB1 = D2X(FUCB1)                       /* CONVERT DEC TO HEX   */
 END                                     /*  END OF INIT CARD LOOP    */
  JOBCNT = JOBCNT + 1                       /* BUMP BY 1            */
  UCBSCN = X2D(UCBSCN)                      /* CONVERT HEX TO DEC   */
  UCBSCN = UCBSCN + 1                       /* BUMP BY 1            */
  UCBSCN = D2X(UCBSCN)                      /* CONVERT DEC TO HEX   */
  HEXCNT = SUBSTR(FUCB,3,2)                 /* GRAB HEXCNT          */
  HEXCNT = RIGHT(HEXCNT,2,0)                /* RIGHT JUSTIFY, LENGHT2 */
  FUCB1  = INSERT(UCBSCN,HEXCNT)            /* MERGE                */
  VOLCNT = 0                                /* RESET COUNT          */
END                                      /*  END OF JOB LOOP          */
