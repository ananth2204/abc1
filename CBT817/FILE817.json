{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012852000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE817.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE817.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x07'", "DS1TRBAL": "b'\\xa5\\x16'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x9a\\x00\\x01\\x05\\x9a\\x00\\x05\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00Y\\x01 3\\x9f\\x01 3\\x9f\\t@\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-12-04T00:00:00", "modifydate": "2020-12-04T09:40:59", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-500"}, "text": "REGULAR CBT TAPE - VERSION 500    FILE:  817\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT500.FILE817\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 10 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,267 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/04/20    09:40:59    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE817": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00R\\x01 3\\x9f\\x01 3\\x9f\\t@\\x00?\\x00?\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-12-04T00:00:00", "modifydate": "2020-12-04T09:40:52", "lines": 63, "newlines": 63, "modlines": 0, "user": "CBT-500"}, "text": "//***FILE 817 is from Mike Wojtukiewicz and contains his program    *   FILE 817\n//*           called FIXCATLG to generate JCL that recatalogs       *   FILE 817\n//*           (without scratching) all datasets on certain volumes  *   FILE 817\n//*           in a new catalog.  This program also contains a       *   FILE 817\n//*           second output to create input to SMP/E that makes     *   FILE 817\n//*           DDDEF entries for all the mentioned datasets.         *   FILE 817\n//*                                                                 *   FILE 817\n//*           This program is meant to run as an assembly, link,    *   FILE 817\n//*           and go.  But it can be run as a load module.  The     *   FILE 817\n//*           requisite source for both methods of operation is     *   FILE 817\n//*           included in this file.                                *   FILE 817\n//*                                                                 *   FILE 817\n//*           Some more programs from Mike Wojtukiewicz are being   *   FILE 817\n//*           included here:                                        *   FILE 817\n//*                                                                 *   FILE 817\n//*       Q390TIOT - Program to determine if a DDname is present    *   FILE 817\n//*                  in a job step.                                 *   FILE 817\n//*                                                                 *   FILE 817\n//*  email:  Michael Wojtukiewicz <mwojtukiewicz@infinite-blue.com> *   FILE 817\n//*                                                                 *   FILE 817\n//*  Copyright by Mike Wojtukiewicz.                                *   FILE 817\n//*                                                                 *   FILE 817\n//*  Function of this code:                                         *   FILE 817\n//*                                                                 *   FILE 817\n//*  You supply 2 items:                                            *   FILE 817\n//*                                                                 *   FILE 817\n//*  1 - MASTERCatalog you wish to catalog datasets in (it is your) *   FILE 817\n//*      responsibility to IMPORT it if it doesn't exist on your    *   FILE 817\n//*      present system.                                            *   FILE 817\n//*                                                                 *   FILE 817\n//*  2 - A list volsers and symbols to use.                         *   FILE 817\n//*                                                                 *   FILE 817\n//*  What this program then does is list the datasets on all the    *   FILE 817\n//*  volumes and then deletes without scratching and defining the   *   FILE 817\n//*  datasets on those volumes with their corresponding symbolic    *   FILE 817\n//*  value using IDCAMS                                             *   FILE 817\n//*                                                                 *   FILE 817\n//*      and                                                        *   FILE 817\n//*                                                                 *   FILE 817\n//*  Creates DDDEF statements for UCLIN processing to connect a     *   FILE 817\n//*  Target/DLIB ddname to a dataset on a specific VOLSER.          *   FILE 817\n//*                                                                 *   FILE 817\n//*  2 datasets will be defined to run in their respective IDCAMS   *   FILE 817\n//*  and SMP/E batch jobs. See <<<=== at the bottom of what to      *   FILE 817\n//*  modify for your job to run.                                    *   FILE 817\n//*                                                                 *   FILE 817\n//*  Example of output:                                             *   FILE 817\n//*                                                                 *   FILE 817\n//*    CATALOG.DATA                                                 *   FILE 817\n//*                                                                 *   FILE 817\n//*   DELETE ADCD.ISPPLIB                        NVSAM NSCR -       *   FILE 817\n//*          CATALOG(CATALOG.ZOS10.MASTER              )            *   FILE 817\n//*   DEF    NVSAM(NAME(ADCD.ISPPLIB                     ) -        *   FILE 817\n//*          DEVT(0000) VOLUMES(******   )) -                       *   FILE 817\n//*          CATALOG(CATALOG.ZOS10.MASTER              )            *   FILE 817\n//*      * * * * *                                                  *   FILE 817\n//*                                                                 *   FILE 817\n//*    DDDEF.DATA                                                   *   FILE 817\n//*                                                                 *   FILE 817\n//*   REP DDDEF(ISPPLIB ) DATASET(ADCD.ISPPLIB     )                *   FILE 817\n//*       UNIT(3390)      VOLUME(ZOSRS1) SHR .                      *   FILE 817\n//*      * * * * *                                                  *   FILE 817\n//*                                                                 *   FILE 817\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMLK": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00F\\x00\\x965\\x7f\\x01\\t5\\x1f\\x01F\\x00\\x1c\\x00\\x1b\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1996-12-22T00:00:00", "modifydate": "2009-12-17T01:46:46", "lines": 28, "newlines": 27, "modlines": 0, "user": "IBMUSER"}, "text": "//IBMUSERU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=IBMUSER.CBT478.FILE817(FIXCATLG)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=IBMUSER.W$$.LINKLIB      <-CHANGE\n//SYSLMOD  DD  DISP=SHR,DSN=IBMUSER.W$$.LINKLIB      <-CHANGE\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB478817\n ENTRY   FIXCATLG\n NAME    FIXCATLG(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIXCATL#": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x000\\x01\\t5\\x0f\\x01\\t5\\x1f\\x016\\x01[\\x01W\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-12-16T00:00:00", "modifydate": "2009-12-17T01:36:30", "lines": 347, "newlines": 343, "modlines": 0, "user": "IBMUSER"}, "text": "//IBMUSERM JOB ,'IBMUSER',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//* ------------------------------------------------------------- *\n//*                                                               *\n//*        Assemble, Link, and Go  JCL  to run FIXCATLG           *\n//*                                                               *\n//* ------------------------------------------------------------- *\n//*****************************************************************\n//* Copyright by Mike Wojtukiewicz                                *\n//*                                                               *\n//* Function of this code                                         *\n//* You supply 2 items                                            *\n//* 1 - MASTERCatalog you wish to catalog datasets in (it is your)*\n//*     responsibility to IMPORT it if it doesnt exist on you     *\n//*     present system                                            *\n//* 2 - a list volsers and symbols to use                         *\n//* What this program then does is list the datasets on all the   *\n//* volumes and then deletes without scratching and defining the  *\n//* datasets on those volumes with their corresponding symbolic   *\n//* value using IDCAMS                                            *\n//*     AND                                                       *\n//* create DDDEF statements for UCLIN processing to connect a     *\n//* Target/DLIB ddname to a dataset on a specific VOLSER          *\n//* 2 datasets will be defined to run in their respective IDCAMS  *\n//* and SMPE batch jobs. See <<<=== at the bottom of what to      *\n//* modify for your job to run                                    *\n//*****************************************************************\n//ASMACLG  PROC\n//ASM      EXEC PGM=ASMA90\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(4096,(120,120)),UNIT=3390\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&&OBJ,SPACE=(3040,(40,40)),UNIT=3390,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS,BUFNO=1)\n//LKED     EXEC PGM=HEWLF064,PARM='MAP,LET,LIST',COND=(8,LT,ASM)\n//SYSLIN   DD  DSN=&&OBJ,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=3390,SPACE=(TRK,(4,2,1)),\n//             DSN=&&LL(FIXCATLG)\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(1024,(120,120)),UNIT=3390\n//SYSPRINT DD  SYSOUT=*\n// PEND\n//*\n//ALLOC  EXEC PGM=IEFBR14\n//SYSPRINT DD DISP=(,PASS),DSN=&&SYSPR,UNIT=3390,SPACE=(TRK,(90,90))\n//*\n//ASSEM2 EXEC ASMACLG\n//ASM.SYSIN  DD  *\nFIXCATLG CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nBASE     EQU   3\n         PRINT NOGEN\n         STM   14,12,12(13)\n         BALR  BASE,R0\n         USING *,BASE\n         LR    12,13\n         LA    13,S\n         ST    13,8(12)\n         ST    12,S+4\n         B     BYP\nMOVEMCAT MVC   DEFMCATN(1),2(R4)\nDW       DS    D\nOPT      DC    F'0'\nBYP      DS    0F\n         EJECT\n         L     R4,0(R1)                Extract MASTERCat name from PARM\n         LH    R5,0(R4)\n         BCTR  R5,0\n         EX    R5,MOVEMCAT\n*\n         OPEN  (SYSIN,(OUTPUT))        Open SYSIN for IEHLIST\n*\n         OPEN  (SYSRES,(INPUT))        Open Disk input file\n*\n         LA    R11,1                   Start ctr at one\n         LA    R8,RESES                Load start of VS:Symbol tbl\nSRLOOP   EQU   *\n*\n         GET   SYSRES,INAREA           Get PARM\n*\n         CVD   R11,DW                  Convert\n         MVC   DW(4),=X'40212020'        to a digit\n         ED    DW(4),DW+6\n         MVC   0(6,R8),INAREA          Extract volser\n         MVC   6(9,R8),INAREA+7        and symbol from card\n         MVC   VOLSTU3V,INAREA\n         MVC   VOLSTU1D+1(1),DW+3\n         MVC   IEHCARDV,INAREA\n*\n         PUT   SYSIN,IEHCARD           Put IEHLIST card\n*\n         LA    R1,ALLCVOLS             DYNALLOC that VOLSER\n*\n         DYNALLOC\n*                                      Dealing w SYSRES 1?\n         CLC   6(9,R8),=C'&&SYSR1      '\n         BNE   NSR1                    Nope - jump\n*                                      Yes - set VOL to ******\n         MVC   6(9,R8),=C'******      '\nNSR1     EQU   *\n         LA    R11,1(R11)              Increment volser count\n         LA    R8,15(R8)               Bump up in VS table\n         B     SRLOOP\nENDRES   EQU   *\n         CLOSE SYSRES                  All done, call IEHLIST\n         CLOSE SYSIN\n*\n         LINK  EP=IEHLIST,PARAM=(OPT),VL=1\n         EJECT\n***********************************************************************\n* Read through IEHLIST SYSPRINT and create IDCAMS and DDDEF cards     *\n***********************************************************************\n*\n         OPEN  (SYSPRINT,(INPUT))      Open SYSPRINT\n         OPEN  (IDCAMS,(OUTPUT))       Open IDCAMS control card file\n         OPEN  (DDDEF,(OUTPUT))        Open DDDEF UCLIN file\n*\n         LA    R8,RESES                Start at top of Volser table\nLOOP     EQU   *\n         MVC   INAREA,=CL255' '\n*\n         GET   SYSPRINT,INAREA         Get SYSPRINT record\n*                                      Dump title/listing records\n         CLC   INAREA+31(L'SSU),SSU\n         BE    LOOP\n         CLC   INAREA+1(L'DATE),DATE\n         BE    LOOP\n         CLC   INAREA+1(L'DASHES),DASHES\n         BE    LOOP\n         CLC   INAREA+17(L'CONTENTS),CONTENTS\n         BNE   NOTVOL\n*                                      Found record with VOLSER on it\n         MVC   DDDEF2V,INAREA+17+L'CONTENTS\n         MVC   DEFVOL,6(R8)            Move symbol to IDCAMS card\n         LA    R8,15(R8)               Bump up in table\n         B     LOOP\nNOTVOL   EQU   *\n         CLI   INAREA+1,C' '\n         BE    LOOP\n         MVC   DELDSN,INAREA+1         Extract dsn for IDCAMS\n         MVC   DEFDSN,INAREA+1         DEL DEF control cards\n         PUT   IDCAMS,DELCARD          Write\n         PUT   IDCAMS,DELCARD2           them\n         PUT   IDCAMS,DEFCARD            out\n         PUT   IDCAMS,DEFCARD2\n         PUT   IDCAMS,DEFCARD3\n         LA    R10,DEFDSN              See if dsn is one of those\n*                                      datasets with many levels\nDSNLOOP1 EQU   *\n         CLI   0(R10),C'.'\n         BE    GOTDOT1\n         LA    R10,1(R10)\n         B     DSNLOOP1\nGOTDOT1  EQU   *\n         EJECT\n         LA    R15,DSCVTS              Load start of irregular dsns\nCVTLOOP  EQU   *\n         CLI   0(R15),X'FF'            Hit end of list?\n         BE    NOCVT                   Yes - jump\n         CLC   1(15,R10),0(R15)\n         BE    DOCVT\n         LA    R15,23(R15)\n         B     CVTLOOP\nDOCVT    EQU   *\n         MVC   DDDEF1DD,=CL10' '\n         MVC   DDDEF1DD,15(R15)\n         B     GOTDOT2\nNOCVT    EQU   *\n         MVC   DDDEF1DD,=CL10' '\n         LA    R10,1(R10)\n         LA    R11,DDDEF1DD\nDSNLOOP2 EQU   *\n         CLI   0(R10),C'.'\n         BE    GOTDOT2\n         CLI   0(R10),C' '\n         BE    GOTDOT2\n         MVC   0(1,R11),0(R10)\n         LA    R10,1(R10)\n         LA    R11,1(R11)\n         B     DSNLOOP2\nGOTDOT2  EQU   *\n         MVC   DDDEF1DS,DEFDSN         Move dsn to DDDEF card\n         PUT   DDDEF,DDDEF1\n         PUT   DDDEF,DDDEF2\n         B     LOOP\n         EJECT\nEODAD    EQU   *\n*\n         CLOSE (SYSPRINT,,IDCAMS,,DDDEF)\n         L     13,S+4\n         LM    14,12,12(13)\n         SR    15,15\n         BR    14\n         PRINT OFF\n         LTORG *\n         PRINT ON\nS        DC    9D'0'\nINAREA   DC    CL255' '\nIEHCARD  DC    C' LISTVTOC VOL=3390='\nIEHCARDV DC    CL6' '\n         DC    CL(80-(*-IEHCARD))' '\n*\nDDDEF1   DS    0C\n         DC    C'  REP DDDEF('\nDDDEF1DD DC    CL8' '\n         DC    C') DATASET('\nDDDEF1DS DC    CL44' '\n         DC    CL(80-(*-DDDEF1))')'\n*\nDDDEF2   DC    C'      UNIT(3390)      VOLUME('\nDDDEF2V  DC    CL6' '\n         DC    CL(80-(*-DDDEF2))') SHR .'\n*\nDELCARD  DS    0CL80\n         DC    C'  DELETE '\nDELDSN   DC    CL44' '\n         DC    CL(80-(*-DELCARD))'  NVSAM NSCR -'\n*\nDEFCARD  DS    0CL80\n         DC    C'  DEF    NVSAM(NAME('\nDEFDSN   DC    CL44' '\n         DC    CL(80-(*-DEFCARD))') -'\n*\nDEFCARD2 DC    C'         DEVT(0000) VOLUMES('\nDEFVOL   DC    CL9' '\n         DC    CL(80-(*-DEFCARD2))')) -'\n*\nDELCARD2 DS    0CL80\nDEFCARD3 DC    C'         CATALOG('\nDEFMCATN DC    CL44' '\n         DC    CL(80-(*-DEFCARD3))')'\n*\nSSU      DC    C'SYSTEMS SUPPORT UTILITIES'\nDATE     DC    C'DATE:'\nCONTENTS DC    C'CONTENTS OF VTOC ON VOL '\nDASHES   DC    C'-------------'\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,EODAD=EODAD,MACRF=GM\n*\nIDCAMS   DCB   DDNAME=IDCAMS,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,      X\n               BLKSIZE=27920,BUFNO=2\n*\nDDDEF    DCB   DDNAME=DDDEF,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,       X\n               BLKSIZE=27920,BUFNO=2\n*\nSYSRES   DCB   DDNAME=SYSRES,EODAD=ENDRES,DSORG=PS,MACRF=GM\n*\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,LRECL=80,                X\n               RECFM=FB,BLKSIZE=800\n*\nDSCVTS   DC    CL15'SGOSH.H',CL8'SGOSH'\n         DC    CL15'SGOSHH.HH',CL8'SGOSHH'\n         DC    CL15'SGOSIDL.IDL',CL8'SGOSIDL'\n         DC    CL15'SGOSSH.STARS.H',CL8'SGOSSH'\n         DC    CL15'SGOSSMPC.C',CL8'SGOSSMPC'\n         DC    CL15'SGOSSMPD.DAT',CL8'SGOSSMPD'\n         DC    CL15'SGOSSMPH.H',CL8'SGOSSMPH'\n         DC    CL15'SGOSSMPI.IDL',CL8'SGOSSMPI'\n         DC    CL15'SGOSSMPI.IDL',CL8'SGOSSMPI'\n         DC    CL15'SGOSSMPX.CXX',CL8'SGOSSMPX'\n         DC    CL15'SGOSXH.XH',CL8'SGOSXH'\n         DC    CL15'SCEEH.ARPA.H',CL8'SCEEHARP'\n         DC    CL15'SCEEH.H     ',CL8'SCEEHH'\n         DC    CL15'SCEEH.NETINET.H',CL8'SCEEHNEI'\n         DC    CL15'SCEEH.NET.H',CL8'SCEEHNET'\n         DC    CL15'SCEEH.SYS.H',CL8'SCEEHSYS'\n         DC    CL15'SCLBH.H',CL8'SBLBHH'\n         DC    CL15'SCLBH.INL',CL8'SCLBHI'\n         DC    CL15'SCLBH.HPP',CL8'SCLBHPP'\n         DC    CL15'SCLBSAM.C',CL8'SCLBSAC'\n         DC    CL15'SCLBSAM.H',CL8'SCLBSAH'\n         DC    CL15'SCLBTUT.H',CL8'SCLBTUH'\n         DC    CL15'SCLBXL.HH',CL8'SCLBXHH'\n         DC    CL15'SCLBXL.H',CL8'SCLBXLH'\n         DC    CL15'SCLBXL.IDL',CL8'SCLBXLI'\n         DC    CL15'SCLBXSM.IDL',CL8'SCLBXSI'\n         DC    CL15'SCLDH.C',CL8'SCLDHC'\n         DC    CL15'SCLDH.CPP',CL8'SCLDHCPP'\n         DC    CL15'SCLDH.CXX',CL8'SCLDHCX'\n         DC    CL15'SCLDH.H',CL8'SCLDHH'\n         DC    CL15'SCLDH.INL',CL8'SCLDHI'\n         DC    CL15'SCLDH.HPP',CL8'SCLDHPP'\n         DC    CL15'SIEAHDR.H',CL8'SIEAHDR'\n         DC    CL15'SCRIPT.MACLIB',CL8'DCFGML'\n         DC    X'FF'\nRESES    DC    8CL15' '\n         EJECT\n***********************************************************************\n* Allocate //XX       DD DISP=SHR,DSN=???????                         *\n***********************************************************************\n*\nALLCVOLS DS    0D\n         DC    X'80',AL3(VOLSRB)\n*\nVOLSRB   DC    X'14010000'\nS99ERR2  DC    AL2(0)\nS99INF2  DC    AL2(0)\n         DC    A(VOLSTUS),A(0),A(0)\n*\nVOLSTUS  DC    A(VOLSTU1),A(VOLSTU2)\n         DC    X'80',AL3(VOLSTU3)\n*\nVOLSTU1  DC    AL2(DALDDNAM),AL2(1)\nVOLSTU1L DC    AL2(2)\nVOLSTU1D DC    CL2'X '\n*\nVOLSTU2  DC    AL2(DALSTATS),AL2(1),AL2(1),AL1(8)  disp=shr\n*\nVOLSTU3  DC    AL2(DALVLSER),AL2(1)\nVOLSTU3L DC    AL2(6)\nVOLSTU3V DC    CL6' '\n         PRINT OFF\n         IEFZB4D0\n         IEFZB4D2\n         PRINT ON\nFIXCATLG CSECT\n         END   FIXCATLG\n//RUN    EXEC PGM=FIXCATLG,COND=(0,LT),\n//  PARM='CATALOG.Z18S.MASTER'    <<<== new MASTERCAT\n//STEPLIB  DD DISP=SHR,DSN=&&LL\n//SYSRES   DD *,DCB=LRECL=80\nS8RES1=&SYSR1                     <<<=== volumes to scan\nS8RES2=&SYSR2                            VOLSER=SYMBOL\nS8SYS1=&SYSS1\n//IDCAMS   DD DSN=IBMUSER.CAT.DATA, <===== dsname for IDCAMS cards\n//            DISP=(,CATLG),SPACE=(TRK,(15,15),RLSE),UNIT=3390\n//DDDEF    DD DSN=IBMUSER.DDD.DATA, <===== dsname for UCLIN cards\n//            DISP=(,CATLG),SPACE=(TRK,(15,15),RLSE),UNIT=3390\n//SYSIN    DD DISP=NEW,DSN=&&SYSIN,UNIT=3390,SPACE=(TRK,1)\n//SYSPRINT DD DISP=(SHR,PASS),DSN=&&SYSPR\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FIXCATL@": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x01\\t5\\x0f\\x01\\t5\\x1f\\x017\\x01\\\\\\x01W\\x00\\x00\\xd4\\xe6\\xd6\\xd1\\xe3\\xe4@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-12-16T00:00:00", "modifydate": "2009-12-17T01:37:07", "lines": 348, "newlines": 343, "modlines": 0, "user": "MWOJTU"}, "text": "//MIKEX    JOB 1,'M WOJTUKIEWICZ',\n//             NOTIFY=&SYSUID,TIME=30,REGION=6M,\n//             CLASS=A,MSGCLASS=X\n//* ------------------------------------------------------------- *\n//*                                                               *\n//*        Assemble, Link, and Go  JCL  to run FIXCATLG           *\n//*                                                               *\n//* ------------------------------------------------------------- *\n//*****************************************************************\n//* Copyright by Mike Wojtukiewicz                                *\n//*                                                               *\n//* Function of this code                                         *\n//* You supply 2 items                                            *\n//* 1 - MASTERCatalog you wish to catalog datasets in (it is your)*\n//*     responsibility to IMPORT it if it doesnt exist on you     *\n//*     present system                                            *\n//* 2 - a list volsers and symbols to use                         *\n//* What this program then does is list the datasets on all the   *\n//* volumes and then deletes without scratching and defining the  *\n//* datasets on those volumes with their corresponding symbolic   *\n//* value using IDCAMS                                            *\n//*     AND                                                       *\n//* create DDDEF statements for UCLIN processing to connect a     *\n//* Target/DLIB ddname to a dataset on a specific VOLSER          *\n//* 2 datasets will be defined to run in their respective IDCAMS  *\n//* and SMPE batch jobs. See <<<=== at the bottom of what to      *\n//* modify for your job to run                                    *\n//*****************************************************************\n//ASMACLG  PROC\n//ASM      EXEC PGM=ASMA90\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(4096,(120,120)),UNIT=3390\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&&OBJ,SPACE=(3040,(40,40)),UNIT=3390,\n//             DISP=(MOD,PASS),\n//             DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS,BUFNO=1)\n//LKED     EXEC PGM=HEWLF064,PARM='MAP,LET,LIST',COND=(8,LT,ASM)\n//SYSLIN   DD  DSN=&&OBJ,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=3390,SPACE=(TRK,(4,2,1)),\n//             DSN=&&LL(FIXCATLG)\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(1024,(120,120)),UNIT=3390\n//SYSPRINT DD  SYSOUT=*\n// PEND\n//*\n//ALLOC  EXEC PGM=IEFBR14\n//SYSPRINT DD DISP=(,PASS),DSN=&&SYSPR,UNIT=3390,SPACE=(TRK,(90,90))\n//*\n//ASSEM2 EXEC ASMACLG\n//ASM.SYSIN  DD  *\nFIXCATLG CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nBASE     EQU   3\n         PRINT NOGEN\n         STM   14,12,12(13)\n         BALR  BASE,R0\n         USING *,BASE\n         LR    12,13\n         LA    13,S\n         ST    13,8(12)\n         ST    12,S+4\n         B     BYP\nMOVEMCAT MVC   DEFMCATN(1),2(R4)\nDW       DS    D\nOPT      DC    F'0'\nBYP      DS    0F\n         EJECT\n         L     R4,0(R1)                Extract MASTERCat name from PARM\n         LH    R5,0(R4)\n         BCTR  R5,0\n         EX    R5,MOVEMCAT\n*\n         OPEN  (SYSIN,(OUTPUT))        Open SYSIN for IEHLIST\n*\n         OPEN  (SYSRES,(INPUT))        Open Disk input file\n*\n         LA    R11,1                   Start ctr at one\n         LA    R8,RESES                Load start of VS:Symbol tbl\nSRLOOP   EQU   *\n*\n         GET   SYSRES,INAREA           Get PARM\n*\n         CVD   R11,DW                  Convert\n         MVC   DW(4),=X'40212020'        to a digit\n         ED    DW(4),DW+6\n         MVC   0(6,R8),INAREA          Extract volser\n         MVC   6(9,R8),INAREA+7        and symbol from card\n         MVC   VOLSTU3V,INAREA\n         MVC   VOLSTU1D+1(1),DW+3\n         MVC   IEHCARDV,INAREA\n*\n         PUT   SYSIN,IEHCARD           Put IEHLIST card\n*\n         LA    R1,ALLCVOLS             DYNALLOC that VOLSER\n*\n         DYNALLOC\n*                                      Dealing w SYSRES 1?\n         CLC   6(9,R8),=C'&&SYSR1      '\n         BNE   NSR1                    Nope - jump\n*                                      Yes - set VOL to ******\n         MVC   6(9,R8),=C'******      '\nNSR1     EQU   *\n         LA    R11,1(R11)              Increment volser count\n         LA    R8,15(R8)               Bump up in VS table\n         B     SRLOOP\nENDRES   EQU   *\n         CLOSE SYSRES                  All done, call IEHLIST\n         CLOSE SYSIN\n*\n         LINK  EP=IEHLIST,PARAM=(OPT),VL=1\n         EJECT\n***********************************************************************\n* Read through IEHLIST SYSPRINT and create IDCAMS and DDDEF cards     *\n***********************************************************************\n*\n         OPEN  (SYSPRINT,(INPUT))      Open SYSPRINT\n         OPEN  (IDCAMS,(OUTPUT))       Open IDCAMS control card file\n         OPEN  (DDDEF,(OUTPUT))        Open DDDEF UCLIN file\n*\n         LA    R8,RESES                Start at top of Volser table\nLOOP     EQU   *\n         MVC   INAREA,=CL255' '\n*\n         GET   SYSPRINT,INAREA         Get SYSPRINT record\n*                                      Dump title/listing records\n         CLC   INAREA+31(L'SSU),SSU\n         BE    LOOP\n         CLC   INAREA+1(L'DATE),DATE\n         BE    LOOP\n         CLC   INAREA+1(L'DASHES),DASHES\n         BE    LOOP\n         CLC   INAREA+17(L'CONTENTS),CONTENTS\n         BNE   NOTVOL\n*                                      Found record with VOLSER on it\n         MVC   DDDEF2V,INAREA+17+L'CONTENTS\n         MVC   DEFVOL,6(R8)            Move symbol to IDCAMS card\n         LA    R8,15(R8)               Bump up in table\n         B     LOOP\nNOTVOL   EQU   *\n         CLI   INAREA+1,C' '\n         BE    LOOP\n         MVC   DELDSN,INAREA+1         Extract dsn for IDCAMS\n         MVC   DEFDSN,INAREA+1         DEL DEF control cards\n         PUT   IDCAMS,DELCARD          Write\n         PUT   IDCAMS,DELCARD2           them\n         PUT   IDCAMS,DEFCARD            out\n         PUT   IDCAMS,DEFCARD2\n         PUT   IDCAMS,DEFCARD3\n         LA    R10,DEFDSN              See if dsn is one of those\n*                                      datasets with many levels\nDSNLOOP1 EQU   *\n         CLI   0(R10),C'.'\n         BE    GOTDOT1\n         LA    R10,1(R10)\n         B     DSNLOOP1\nGOTDOT1  EQU   *\n         EJECT\n         LA    R15,DSCVTS              Load start of irregular dsns\nCVTLOOP  EQU   *\n         CLI   0(R15),X'FF'            Hit end of list?\n         BE    NOCVT                   Yes - jump\n         CLC   1(15,R10),0(R15)\n         BE    DOCVT\n         LA    R15,23(R15)\n         B     CVTLOOP\nDOCVT    EQU   *\n         MVC   DDDEF1DD,=CL10' '\n         MVC   DDDEF1DD,15(R15)\n         B     GOTDOT2\nNOCVT    EQU   *\n         MVC   DDDEF1DD,=CL10' '\n         LA    R10,1(R10)\n         LA    R11,DDDEF1DD\nDSNLOOP2 EQU   *\n         CLI   0(R10),C'.'\n         BE    GOTDOT2\n         CLI   0(R10),C' '\n         BE    GOTDOT2\n         MVC   0(1,R11),0(R10)\n         LA    R10,1(R10)\n         LA    R11,1(R11)\n         B     DSNLOOP2\nGOTDOT2  EQU   *\n         MVC   DDDEF1DS,DEFDSN         Move dsn to DDDEF card\n         PUT   DDDEF,DDDEF1\n         PUT   DDDEF,DDDEF2\n         B     LOOP\n         EJECT\nEODAD    EQU   *\n*\n         CLOSE (SYSPRINT,,IDCAMS,,DDDEF)\n         L     13,S+4\n         LM    14,12,12(13)\n         SR    15,15\n         BR    14\n         PRINT OFF\n         LTORG *\n         PRINT ON\nS        DC    9D'0'\nINAREA   DC    CL255' '\nIEHCARD  DC    C' LISTVTOC VOL=3390='\nIEHCARDV DC    CL6' '\n         DC    CL(80-(*-IEHCARD))' '\n*\nDDDEF1   DS    0C\n         DC    C'  REP DDDEF('\nDDDEF1DD DC    CL8' '\n         DC    C') DATASET('\nDDDEF1DS DC    CL44' '\n         DC    CL(80-(*-DDDEF1))')'\n*\nDDDEF2   DC    C'      UNIT(3390)      VOLUME('\nDDDEF2V  DC    CL6' '\n         DC    CL(80-(*-DDDEF2))') SHR .'\n*\nDELCARD  DS    0CL80\n         DC    C'  DELETE '\nDELDSN   DC    CL44' '\n         DC    CL(80-(*-DELCARD))'  NVSAM NSCR -'\n*\nDEFCARD  DS    0CL80\n         DC    C'  DEF    NVSAM(NAME('\nDEFDSN   DC    CL44' '\n         DC    CL(80-(*-DEFCARD))') -'\n*\nDEFCARD2 DC    C'         DEVT(0000) VOLUMES('\nDEFVOL   DC    CL9' '\n         DC    CL(80-(*-DEFCARD2))')) -'\n*\nDELCARD2 DS    0CL80\nDEFCARD3 DC    C'         CATALOG('\nDEFMCATN DC    CL44' '\n         DC    CL(80-(*-DEFCARD3))')'\n*\nSSU      DC    C'SYSTEMS SUPPORT UTILITIES'\nDATE     DC    C'DATE:'\nCONTENTS DC    C'CONTENTS OF VTOC ON VOL '\nDASHES   DC    C'-------------'\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,EODAD=EODAD,MACRF=GM\n*\nIDCAMS   DCB   DDNAME=IDCAMS,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,      X\n               BLKSIZE=27920,BUFNO=2\n*\nDDDEF    DCB   DDNAME=DDDEF,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,       X\n               BLKSIZE=27920,BUFNO=2\n*\nSYSRES   DCB   DDNAME=SYSRES,EODAD=ENDRES,DSORG=PS,MACRF=GM\n*\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,LRECL=80,                X\n               RECFM=FB,BLKSIZE=800\n*\nDSCVTS   DC    CL15'SGOSH.H',CL8'SGOSH'\n         DC    CL15'SGOSHH.HH',CL8'SGOSHH'\n         DC    CL15'SGOSIDL.IDL',CL8'SGOSIDL'\n         DC    CL15'SGOSSH.STARS.H',CL8'SGOSSH'\n         DC    CL15'SGOSSMPC.C',CL8'SGOSSMPC'\n         DC    CL15'SGOSSMPD.DAT',CL8'SGOSSMPD'\n         DC    CL15'SGOSSMPH.H',CL8'SGOSSMPH'\n         DC    CL15'SGOSSMPI.IDL',CL8'SGOSSMPI'\n         DC    CL15'SGOSSMPI.IDL',CL8'SGOSSMPI'\n         DC    CL15'SGOSSMPX.CXX',CL8'SGOSSMPX'\n         DC    CL15'SGOSXH.XH',CL8'SGOSXH'\n         DC    CL15'SCEEH.ARPA.H',CL8'SCEEHARP'\n         DC    CL15'SCEEH.H     ',CL8'SCEEHH'\n         DC    CL15'SCEEH.NETINET.H',CL8'SCEEHNEI'\n         DC    CL15'SCEEH.NET.H',CL8'SCEEHNET'\n         DC    CL15'SCEEH.SYS.H',CL8'SCEEHSYS'\n         DC    CL15'SCLBH.H',CL8'SBLBHH'\n         DC    CL15'SCLBH.INL',CL8'SCLBHI'\n         DC    CL15'SCLBH.HPP',CL8'SCLBHPP'\n         DC    CL15'SCLBSAM.C',CL8'SCLBSAC'\n         DC    CL15'SCLBSAM.H',CL8'SCLBSAH'\n         DC    CL15'SCLBTUT.H',CL8'SCLBTUH'\n         DC    CL15'SCLBXL.HH',CL8'SCLBXHH'\n         DC    CL15'SCLBXL.H',CL8'SCLBXLH'\n         DC    CL15'SCLBXL.IDL',CL8'SCLBXLI'\n         DC    CL15'SCLBXSM.IDL',CL8'SCLBXSI'\n         DC    CL15'SCLDH.C',CL8'SCLDHC'\n         DC    CL15'SCLDH.CPP',CL8'SCLDHCPP'\n         DC    CL15'SCLDH.CXX',CL8'SCLDHCX'\n         DC    CL15'SCLDH.H',CL8'SCLDHH'\n         DC    CL15'SCLDH.INL',CL8'SCLDHI'\n         DC    CL15'SCLDH.HPP',CL8'SCLDHPP'\n         DC    CL15'SIEAHDR.H',CL8'SIEAHDR'\n         DC    CL15'SCRIPT.MACLIB',CL8'DCFGML'\n         DC    X'FF'\nRESES    DC    8CL15' '\n         EJECT\n***********************************************************************\n* Allocate //XX       DD DISP=SHR,DSN=???????                         *\n***********************************************************************\n*\nALLCVOLS DS    0D\n         DC    X'80',AL3(VOLSRB)\n*\nVOLSRB   DC    X'14010000'\nS99ERR2  DC    AL2(0)\nS99INF2  DC    AL2(0)\n         DC    A(VOLSTUS),A(0),A(0)\n*\nVOLSTUS  DC    A(VOLSTU1),A(VOLSTU2)\n         DC    X'80',AL3(VOLSTU3)\n*\nVOLSTU1  DC    AL2(DALDDNAM),AL2(1)\nVOLSTU1L DC    AL2(2)\nVOLSTU1D DC    CL2'X '\n*\nVOLSTU2  DC    AL2(DALSTATS),AL2(1),AL2(1),AL1(8)  disp=shr\n*\nVOLSTU3  DC    AL2(DALVLSER),AL2(1)\nVOLSTU3L DC    AL2(6)\nVOLSTU3V DC    CL6' '\n         PRINT OFF\n         IEFZB4D0\n         IEFZB4D2\n         PRINT ON\nFIXCATLG CSECT\n         END   FIXCATLG\n//RUN    EXEC PGM=FIXCATLG,COND=(0,LT),\n//  PARM='TEST.CATALOG'           <<<== new MASTERCAT\n//STEPLIB  DD DISP=SHR,DSN=&&LL\n//SYSRES   DD *,DCB=LRECL=80\nRDZR01=&SYSR1                     <<<=== volumes to scan\nRDZR02=&SYSR2                            VOLSER=SYMBOL\nRDZD01=&DLBV1\n//IDCAMS   DD DSN=xxx,   <===== dsname for IDCAMS cards\n//            DISP=(,CATLG),SPACE=(TRK,(15,15),RLSE),UNIT=3390\n//DDDEF    DD DSN=yyy,   <===== dsname for UCLIN cards\n//            DISP=(,CATLG),SPACE=(TRK,(15,15),RLSE),UNIT=3390\n//SYSIN    DD DISP=NEW,DSN=&&SYSIN,UNIT=3390,SPACE=(TRK,1)\n//SYSPRINT DD DISP=(SHR,PASS),DSN=&&SYSPR\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FIXCATLG": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\t5\\x1f\\x01\\t5\\x1f\\x01\\x07\\x010\\x010\\x00\\x00\\xd4\\xe6\\xd6\\xd1\\xe3\\xe4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-12-17T00:00:00", "modifydate": "2009-12-17T01:07:48", "lines": 304, "newlines": 304, "modlines": 0, "user": "MWOJTU"}, "text": "FIXCATLG CSECT\n*****************************************************************\n* Copyright by Mike Wojtukiewicz                                *\n*                                                               *\n* Function of this code                                         *\n* You supply 2 items                                            *\n* 1 - MASTERCatalog you wish to catalog datasets in (it is your)*\n*     responsibility to IMPORT it if it doesnt exist on you     *\n*     present system                                            *\n* 2 - a list volsers and symbols to use                         *\n* What this program then does is list the datasets on all the   *\n* volumes and then deletes without scratching and defining the  *\n* datasets on those volumes with their corresponding symbolic   *\n* value using IDCAMS                                            *\n*     AND                                                       *\n* create DDDEF statements for UCLIN processing to connect a     *\n* Target/DLIB ddname to a dataset on a specific VOLSER          *\n* 2 datasets will be defined to run in their respective IDCAMS  *\n* and SMPE batch jobs. See <<<=== at the bottom of what to      *\n* modify for your job to run                                    *\n*****************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nBASE     EQU   3\n         PRINT NOGEN\n         STM   14,12,12(13)\n         BALR  BASE,R0\n         USING *,BASE\n         LR    12,13\n         LA    13,S\n         ST    13,8(12)\n         ST    12,S+4\n         B     BYP\nMOVEMCAT MVC   DEFMCATN(1),2(R4)\nDW       DS    D\nOPT      DC    F'0'\nBYP      DS    0F\n         EJECT\n         L     R4,0(R1)                Extract MASTERCat name from PARM\n         LH    R5,0(R4)\n         BCTR  R5,0\n         EX    R5,MOVEMCAT\n*\n         OPEN  (SYSIN,(OUTPUT))        Open SYSIN for IEHLIST\n*\n         OPEN  (SYSRES,(INPUT))        Open Disk input file\n*\n         LA    R11,1                   Start ctr at one\n         LA    R8,RESES                Load start of VS:Symbol tbl\nSRLOOP   EQU   *\n*\n         GET   SYSRES,INAREA           Get PARM\n*\n         CVD   R11,DW                  Convert\n         MVC   DW(4),=X'40212020'        to a digit\n         ED    DW(4),DW+6\n         MVC   0(6,R8),INAREA          Extract volser\n         MVC   6(9,R8),INAREA+7        and symbol from card\n         MVC   VOLSTU3V,INAREA\n         MVC   VOLSTU1D+1(1),DW+3\n         MVC   IEHCARDV,INAREA\n*\n         PUT   SYSIN,IEHCARD           Put IEHLIST card\n*\n         LA    R1,ALLCVOLS             DYNALLOC that VOLSER\n*\n         DYNALLOC\n*                                      Dealing w SYSRES 1?\n         CLC   6(9,R8),=C'&&SYSR1      '\n         BNE   NSR1                    Nope - jump\n*                                      Yes - set VOL to ******\n         MVC   6(9,R8),=C'******      '\nNSR1     EQU   *\n         LA    R11,1(R11)              Increment volser count\n         LA    R8,15(R8)               Bump up in VS table\n         B     SRLOOP\nENDRES   EQU   *\n         CLOSE SYSRES                  All done, call IEHLIST\n         CLOSE SYSIN\n*\n         LINK  EP=IEHLIST,PARAM=(OPT),VL=1\n         EJECT\n***********************************************************************\n* Read through IEHLIST SYSPRINT and create IDCAMS and DDDEF cards     *\n***********************************************************************\n*\n         OPEN  (SYSPRINT,(INPUT))      Open SYSPRINT\n         OPEN  (IDCAMS,(OUTPUT))       Open IDCAMS control card file\n         OPEN  (DDDEF,(OUTPUT))        Open DDDEF UCLIN file\n*\n         LA    R8,RESES                Start at top of Volser table\nLOOP     EQU   *\n         MVC   INAREA,=CL255' '\n*\n         GET   SYSPRINT,INAREA         Get SYSPRINT record\n*                                      Dump title/listing records\n         CLC   INAREA+31(L'SSU),SSU\n         BE    LOOP\n         CLC   INAREA+1(L'DATE),DATE\n         BE    LOOP\n         CLC   INAREA+1(L'DASHES),DASHES\n         BE    LOOP\n         CLC   INAREA+17(L'CONTENTS),CONTENTS\n         BNE   NOTVOL\n*                                      Found record with VOLSER on it\n         MVC   DDDEF2V,INAREA+17+L'CONTENTS\n         MVC   DEFVOL,6(R8)            Move symbol to IDCAMS card\n         LA    R8,15(R8)               Bump up in table\n         B     LOOP\nNOTVOL   EQU   *\n         CLI   INAREA+1,C' '\n         BE    LOOP\n         MVC   DELDSN,INAREA+1         Extract dsn for IDCAMS\n         MVC   DEFDSN,INAREA+1         DEL DEF control cards\n         PUT   IDCAMS,DELCARD          Write\n         PUT   IDCAMS,DELCARD2           them\n         PUT   IDCAMS,DEFCARD            out\n         PUT   IDCAMS,DEFCARD2\n         PUT   IDCAMS,DEFCARD3\n         LA    R10,DEFDSN              See if dsn is one of those\n*                                      datasets with many levels\nDSNLOOP1 EQU   *\n         CLI   0(R10),C'.'\n         BE    GOTDOT1\n         LA    R10,1(R10)\n         B     DSNLOOP1\nGOTDOT1  EQU   *\n         EJECT\n         LA    R15,DSCVTS              Load start of irregular dsns\nCVTLOOP  EQU   *\n         CLI   0(R15),X'FF'            Hit end of list?\n         BE    NOCVT                   Yes - jump\n         CLC   1(15,R10),0(R15)\n         BE    DOCVT\n         LA    R15,23(R15)\n         B     CVTLOOP\nDOCVT    EQU   *\n         MVC   DDDEF1DD,=CL10' '\n         MVC   DDDEF1DD,15(R15)\n         B     GOTDOT2\nNOCVT    EQU   *\n         MVC   DDDEF1DD,=CL10' '\n         LA    R10,1(R10)\n         LA    R11,DDDEF1DD\nDSNLOOP2 EQU   *\n         CLI   0(R10),C'.'\n         BE    GOTDOT2\n         CLI   0(R10),C' '\n         BE    GOTDOT2\n         MVC   0(1,R11),0(R10)\n         LA    R10,1(R10)\n         LA    R11,1(R11)\n         B     DSNLOOP2\nGOTDOT2  EQU   *\n         MVC   DDDEF1DS,DEFDSN         Move dsn to DDDEF card\n         PUT   DDDEF,DDDEF1\n         PUT   DDDEF,DDDEF2\n         B     LOOP\n         EJECT\nEODAD    EQU   *\n*\n         CLOSE (SYSPRINT,,IDCAMS,,DDDEF)\n         L     13,S+4\n         LM    14,12,12(13)\n         SR    15,15\n         BR    14\n         PRINT OFF\n         LTORG *\n         PRINT ON\nS        DC    9D'0'\nINAREA   DC    CL255' '\nIEHCARD  DC    C' LISTVTOC VOL=3390='\nIEHCARDV DC    CL6' '\n         DC    CL(80-(*-IEHCARD))' '\n*\nDDDEF1   DS    0C\n         DC    C'  REP DDDEF('\nDDDEF1DD DC    CL8' '\n         DC    C') DATASET('\nDDDEF1DS DC    CL44' '\n         DC    CL(80-(*-DDDEF1))')'\n*\nDDDEF2   DC    C'      UNIT(3390)      VOLUME('\nDDDEF2V  DC    CL6' '\n         DC    CL(80-(*-DDDEF2))') SHR .'\n*\nDELCARD  DS    0CL80\n         DC    C'  DELETE '\nDELDSN   DC    CL44' '\n         DC    CL(80-(*-DELCARD))'  NVSAM NSCR -'\n*\nDEFCARD  DS    0CL80\n         DC    C'  DEF    NVSAM(NAME('\nDEFDSN   DC    CL44' '\n         DC    CL(80-(*-DEFCARD))') -'\n*\nDEFCARD2 DC    C'         DEVT(0000) VOLUMES('\nDEFVOL   DC    CL9' '\n         DC    CL(80-(*-DEFCARD2))')) -'\n*\nDELCARD2 DS    0CL80\nDEFCARD3 DC    C'         CATALOG('\nDEFMCATN DC    CL44' '\n         DC    CL(80-(*-DEFCARD3))')'\n*\nSSU      DC    C'SYSTEMS SUPPORT UTILITIES'\nDATE     DC    C'DATE:'\nCONTENTS DC    C'CONTENTS OF VTOC ON VOL '\nDASHES   DC    C'-------------'\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,EODAD=EODAD,MACRF=GM\n*\nIDCAMS   DCB   DDNAME=IDCAMS,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,      X\n               BLKSIZE=27920,BUFNO=2\n*\nDDDEF    DCB   DDNAME=DDDEF,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,       X\n               BLKSIZE=27920,BUFNO=2\n*\nSYSRES   DCB   DDNAME=SYSRES,EODAD=ENDRES,DSORG=PS,MACRF=GM\n*\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,LRECL=80,                X\n               RECFM=FB,BLKSIZE=800\n*\nDSCVTS   DC    CL15'SGOSH.H',CL8'SGOSH'\n         DC    CL15'SGOSHH.HH',CL8'SGOSHH'\n         DC    CL15'SGOSIDL.IDL',CL8'SGOSIDL'\n         DC    CL15'SGOSSH.STARS.H',CL8'SGOSSH'\n         DC    CL15'SGOSSMPC.C',CL8'SGOSSMPC'\n         DC    CL15'SGOSSMPD.DAT',CL8'SGOSSMPD'\n         DC    CL15'SGOSSMPH.H',CL8'SGOSSMPH'\n         DC    CL15'SGOSSMPI.IDL',CL8'SGOSSMPI'\n         DC    CL15'SGOSSMPI.IDL',CL8'SGOSSMPI'\n         DC    CL15'SGOSSMPX.CXX',CL8'SGOSSMPX'\n         DC    CL15'SGOSXH.XH',CL8'SGOSXH'\n         DC    CL15'SCEEH.ARPA.H',CL8'SCEEHARP'\n         DC    CL15'SCEEH.H     ',CL8'SCEEHH'\n         DC    CL15'SCEEH.NETINET.H',CL8'SCEEHNEI'\n         DC    CL15'SCEEH.NET.H',CL8'SCEEHNET'\n         DC    CL15'SCEEH.SYS.H',CL8'SCEEHSYS'\n         DC    CL15'SCLBH.H',CL8'SBLBHH'\n         DC    CL15'SCLBH.INL',CL8'SCLBHI'\n         DC    CL15'SCLBH.HPP',CL8'SCLBHPP'\n         DC    CL15'SCLBSAM.C',CL8'SCLBSAC'\n         DC    CL15'SCLBSAM.H',CL8'SCLBSAH'\n         DC    CL15'SCLBTUT.H',CL8'SCLBTUH'\n         DC    CL15'SCLBXL.HH',CL8'SCLBXHH'\n         DC    CL15'SCLBXL.H',CL8'SCLBXLH'\n         DC    CL15'SCLBXL.IDL',CL8'SCLBXLI'\n         DC    CL15'SCLBXSM.IDL',CL8'SCLBXSI'\n         DC    CL15'SCLDH.C',CL8'SCLDHC'\n         DC    CL15'SCLDH.CPP',CL8'SCLDHCPP'\n         DC    CL15'SCLDH.CXX',CL8'SCLDHCX'\n         DC    CL15'SCLDH.H',CL8'SCLDHH'\n         DC    CL15'SCLDH.INL',CL8'SCLDHI'\n         DC    CL15'SCLDH.HPP',CL8'SCLDHPP'\n         DC    CL15'SIEAHDR.H',CL8'SIEAHDR'\n         DC    CL15'SCRIPT.MACLIB',CL8'DCFGML'\n         DC    X'FF'\nRESES    DC    8CL15' '\n         EJECT\n***********************************************************************\n* Allocate //XX       DD DISP=SHR,DSN=???????                         *\n***********************************************************************\n*\nALLCVOLS DS    0D\n         DC    X'80',AL3(VOLSRB)\n*\nVOLSRB   DC    X'14010000'\nS99ERR2  DC    AL2(0)\nS99INF2  DC    AL2(0)\n         DC    A(VOLSTUS),A(0),A(0)\n*\nVOLSTUS  DC    A(VOLSTU1),A(VOLSTU2)\n         DC    X'80',AL3(VOLSTU3)\n*\nVOLSTU1  DC    AL2(DALDDNAM),AL2(1)\nVOLSTU1L DC    AL2(2)\nVOLSTU1D DC    CL2'X '\n*\nVOLSTU2  DC    AL2(DALSTATS),AL2(1),AL2(1),AL1(8)  disp=shr\n*\nVOLSTU3  DC    AL2(DALVLSER),AL2(1)\nVOLSTU3L DC    AL2(6)\nVOLSTU3V DC    CL6' '\n         PRINT OFF\n         IEFZB4D0\n         IEFZB4D2\n         PRINT ON\nFIXCATLG CSECT\n         END   FIXCATLG\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FIXCAT1$": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00V\\x01\\t5\\x0f\\x01\\t5\\x1f\\x019\\x00\\x15\\x01W\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-12-16T00:00:00", "modifydate": "2009-12-17T01:39:56", "lines": 21, "newlines": 343, "modlines": 0, "user": "IBMUSER"}, "text": "//IBMUSERM JOB ,'IBMUSER',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//* ---------------------------------------------------------------- *\n//*                                                                  *\n//* Run JCL if you have Assembled and Linkedited FIXCATLG previously *\n//*                                                                  *\n//* ---------------------------------------------------------------- *\n//RUN    EXEC PGM=FIXCATLG,COND=(0,LT),\n//  PARM='CATALOG.Z18S.MASTER'    <<<== new MASTERCAT\n//STEPLIB  DD DISP=SHR,DSN=IBMUSER.W$$.LINKLIB      <=== Change\n//SYSRES   DD *,DCB=LRECL=80\nS8RES1=S8RES1                     <<<=== VOLUMES TO SCAN\nS8RES2=S8RES2                            VOLSER=SYMBOL\nS8SYS1=S8SYS1\n//IDCAMS   DD DSN=IBMUSER.CAT3.DATA, <===== dsname for IDCAMS cards\n//            DISP=(,CATLG),SPACE=(TRK,(15,15),RLSE),UNIT=3390\n//DDDEF    DD DSN=IBMUSER.DDD3.DATA, <===== dsname for UCLIN cards\n//            DISP=(,CATLG),SPACE=(TRK,(15,15),RLSE),UNIT=3390\n//SYSIN    DD DISP=NEW,DSN=&&SYSIN,UNIT=3390,SPACE=(TRK,1)\n//SYSPRINT DD DISP=(,PASS),DSN=&&SYSPR,UNIT=3390,SPACE=(TRK,(90,90))\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "Q390TIO$": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\x10\\x01\\x01\\x05O\\x01 3\\x7f\\x18!\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf8\\xf1\\xf7@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2020-12-02T18:21:10", "lines": 28, "newlines": 28, "modlines": 0, "user": "FILE817"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(Q390TIOT)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n ENTRY   Q390TIOT\n INCLUDE OBJECT\n SETCODE AC(1)\n NAME    Q390TIOT(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "Q390TIOT": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x17\\x01\\x02 \\x1f\\x01 3\\x9f\\t0\\x00g\\x00r\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf8\\xf1\\xf7@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "2002-07-20T00:00:00", "modifydate": "2020-12-04T09:30:17", "lines": 103, "newlines": 114, "modlines": 0, "user": "FILE817"}, "text": "         TITLE 'Q390TIOT - CHECK IF DD NAME IS IN THE JCL'\n* ------------------------------------------------------------------ *\n*   PROGRAM:    Q390TIOT                                             *\n*                                                                    *\n*   AUTHOR :    MICHAEL WOJTUKIEWICZ                                 *\n*                                                                    *\n*   DATE WRITTEN:  JULY 20, 2002                                     *\n*                                                                    *\n*   JCL    :    // JOB CARD                                          *\n*               //*                                                  *\n*               //CHECKDD EXEC PGM=Q390TIOT,PARM='MYDDNM  '          *\n*               //STEPLIB  DD  DISP=SHR,DSN=MY.LOAD.LIBRARY          *\n*               //  (SOME DD NAMES)                                  *\n*               //MYDDNM   DD  DSN=XXXXX  (THERE OR NOT?)            *\n*               //  (MORE DD NAMES)                                  *\n*                                                                    *\n*        --->   (8 CHARACTERS ARE REQUIRED IN THE PARM)              *\n*                                                                    *\n*   RETURN :    RETURN CODE = 0 IF DDNAME IS PRESENT IN JOB STEP     *\n*               RETURN CODE = 4 IF DDNAME IS NOT IN JOB STEP         *\n*                                                                    *\n*                                                                    *\n*   CHANGES:    CLC FOR DD NAME DONE ON TWO 8-CHARACTER FIELDS.      *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nQ390TIOT CSECT\nQ390TIOT AMODE 31\nQ390TIOT RMODE 24\n         YREGS\nBASE     EQU   3\n         PRINT GEN\n         STM   R14,R12,12(R13)   Save caller's GPRs\n*\n         BALR BASE,R0            Prime base\n         USING *,BASE              register 3\n*\n         LR    R12,R13           Save caller's savearea address\n         LA    R13,S             Put my savearea address\n         ST    R13,8(,R12)       two fullwords into his\n         ST    R12,S+4           and save his in my savearea\n         B     BYP\n         DC    C'Q390TIOT'       Module name\n         DC    C'&SYSDATE'       Compile date\n         DC    C'&SYSTIME'       Compile time\nMD       DC    C'12/03/2020'     Modification date\nMT       DC    C'10:03'          Modification time\nS        DC    9D'0'             My savearea\nBYP      DS    0H                Begin program execution.\n         MVI   PARM8-1,X'40'\n         MVC   PARM8,PARM8-1     Blank 8-character staging area\n         L     R5,0(,R1)         Load parm address\n         SR    R2,R2             Clear work register\n         LH    R2,0(,R5)         Get parm length\n         C     R2,=F'8'          More than 8?\n         BNH   NOCHANGE          No. Just save it.\n         LA    R2,8              Cut it to 8\nNOCHANGE DS    0H\n         ST    R2,SAVELNGH       Save length, up to 8\n*\n         LA    R10,X'10'         GET\n         L     R10,0(,R10)       CVT ADDRESS\n         L     R10,0(,R10)       GET ADDRESS OF TCBS\n         LA    R10,4(,R10)       BUMP TO CURRENT TCB ADDRESS\n         L     R10,0(,R10)       GET TCBS ADDRESS\n         LA    R10,X'C'(,R10)    GET ADDRESS OF TIOT\n         L     R10,0(,R10)       TIOT ADDRESS\n*\n         USING TIOTDSCT,R10      ADDRESS TIOT DSECT\n*\n         LA    R15,4             DEFAULT RETURN CODE\nTIOTLOOP DS    0H\n         XR    R8,R8             ZERO REGISTER 8\n         IC    R8,TIOELNGH       GET LENGTH OF DDCARD\n         LTR   R8,R8             IF ZERO, END OF DDCARDS\n         BZ    NODISK            DID NOT FIND DDCARD\n         L     R2,SAVELNGH       RELOAD LENGTH OF PARM\n         BCTR  R2,0              ONE LESS FOR EXECUTE\n         EX    R2,MOVEPARM       ONLY MOVE PROPER NUMBER OF CHARS\n         CLC   TIOEDDNM,PARM8    DOES DDCARD COMPARE (8 CHARS)\n         BE    GOTDISKX          YES - GOT IT\n         AR    R10,R8            ELSE BUMP TO NEXT ENTRY\n         B     TIOTLOOP          TRY AGAIN\nGOTDISKX DS    0H\n*\n         LA    R15,0             RETURN CODE IF DD MATCHED\n*\nNODISK   DS    0H\n         L     R13,S+4           Load caller's save area address\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14               Go back\n         EJECT\n         LTORG *\nMOVEPARM MVC   PARM8(*-*),2(R5)        EXECUTED\n         DC    CL1' '\nPARM8    DC    CL8' '\nSAVELNGH DC    F'0'              Length of PARM\n*\nTIOTDSCT DSECT\n         IEFTIOT1\nQ390TIOT CSECT\n         END   Q390TIOT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "Q390TJOB": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00P\\x01 3\\x7f\\x01 3\\x9f\\t%\\x00\\r\\x00\\x07\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf8\\xf1\\xf7@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2020-12-02T00:00:00", "modifydate": "2020-12-04T09:25:50", "lines": 13, "newlines": 7, "modlines": 0, "user": "FILE817"}, "text": "//SBGOLOBT  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*    TEST THE Q390TIOT PROGRAM\n//*\n//CHECKDD EXEC PGM=Q390TIOT,PARM='RUDDER      '  NUMBER OF CHARACTERS\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.CBT.LINKLIB\n//FUDDER   DD  DUMMY\n//MUDDER   DD  DUMMY\n//RUDDE    DD  DUMMY\n//RUDDER   DD  DUMMY\n//RUDDERR  DD  DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT817/FILE817.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT817", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}