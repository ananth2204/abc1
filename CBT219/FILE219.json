{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011520000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE219.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE219.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0f'", "DS1TRBAL": "b'd\\xac'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x94\\x00\\x01\\x01\\x94\\x00\\x03\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$INDEX": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94$?\\x01\\x00)\\x9f\\x114\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-08-31T00:00:00", "modifydate": "2000-10-25T11:34:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "WSBG"}, "text": "Collection of REXX execs and CLISTS from the libraries of the late\n  Anthony Forte.\n\nPreface.  Tony Forte was a colleague of ours at the Department of\n          Information Technology and Telecommunications of New York\n          City (DoITT) who passed away recently at a young age.\n          I knew that he had written many useful REXX execs and\n          CLISTs, but in his lifetime, I did not take much time\n          to explore them.  After his recent untimely passing, I\n          took a look at his libraries to see what I could find.\n          The following list is a beginning to this collection.\n          I hope that I will be able to test more of his things\n          and add more later.\n                                   Sam Golob  (08/31/94)\n\n\n      APFLOOK   -  (For Non-Dynamic APF)  Displays APF libraries\n      FORTLOOK  -  Finds location of FORTRAN modules\n      JESLOOK   -  Finds location of PROCs in PROC00 concatenation\n      LNKLOOK   -  Finds modules in which Link List libraries\n      LPALOOK   -  Finds modules in which LPA List libraries\n\n                                  Sam Golob\n                                  P.O. Box 906\n                                  Tallman, NY 10982-0906\n\n                                  sbgolob@attglobal.net\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "APFLOOK": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x94\\x14O\\x00\\x94$?\\x15\\x07\\x00'\\x00&\\x00\\x01\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-05-24T00:00:00", "modifydate": "1994-08-31T15:07:00", "lines": 39, "newlines": 38, "modlines": 1, "user": "SBGCSC"}, "text": "/* REXX :     APFLOOK                                                */\n/* FUNCTION:  SEARCH APF FOR GIVEN LIBRARY                           */\n/*            (WORKS FOR NON-DYNAMIC APF LIST)                       */\n/*-------------------------------------------------------------------*/\nCLEAR                                     /* CLEAR SCREEN            */\nCVT     = STORAGE(10,4)                   /* DECIMAL 16 ==> CVT      */\nCCVT    = C2X(CVT)                        /* CHAR CVT ADDRESS        */\nDCVT    = C2D(CVT)                        /* DECIMAL CVT ADDRESS     */\nDAUTH   = DCVT + 484                      /* DECIMAL AUTH ADDRESS    */\nAUTH    = D2C(DAUTH,4)                    /* AUTH TAB ADDRESS        */\nCAUTH   = C2X(AUTH)                       /* CHAR AUTH TAB ADDRESS   */\nADDR1   = STORAGE(CAUTH,4)                /* ADDRESS OF AUTH TAB     */\nCADDR1  = C2X(ADDR1)                      /* CHAR ADDR OF AUTH       */\nDATA    = STORAGE(CADDR1,2)               /* GET LUMP OF DATA        */\nNUMENT  = SUBSTR(DATA,1,2)                /* NUMBER OF ENTRIES       */\nDNUMENT = C2D(NUMENT)                     /* CONVERT TO DECIMAL      */\nLEN     = (DNUMENT * 51) + 2              /* MAX STORAGE POSS        */\nDATA    = STORAGE(CADDR1,LEN)             /* GET LUMP OF DATA        */\nSTART   = 3                               /* START OF FIRST ENTRY    */\nPARSE UPPER ARG SDSN SVOL\nIF SVOL='' THEN DO\n  \"%QVARS \"SDSN\n  \"ISPEXEC VGET (QVOLUME)\"\n  SVOL = QVOLUME\n  END\nM1 = ''; M2 = ''\nDO I = 1 TO DNUMENT\n   LEN   = SUBSTR(DATA,START,1)\n   DLEN1 = C2D(LEN)\n   DLEN2 = DLEN1 - 6\n   VOL   = SUBSTR(DATA,START+1,6)\n   DSN   = SUBSTR(DATA,START+7,DLEN2)\n   START = START + 1 + DLEN1\n   IF SDSN=DSN THEN M1 = 'DSN MATCH'\n   IF SVOL=VOL THEN M2 ='VOL MATCH'\n   SAY VOL ' ' DSN M1 M2\nEND\nSAY\nSAY 'THE NUMBER OF APF LIST TABLE ENTRIES ARE ' DNUMENT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FORTLOOK": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x915?\\x00\\x915?\\tE\\x00/\\x00/\\x00\\t\\xe3\\xd6\\xd5\\xe8@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-19T00:00:00", "modifydate": "1991-12-19T09:45:00", "lines": 47, "newlines": 47, "modlines": 9, "user": "TONY"}, "text": "/* REXX :     FORTLOOK                                               */\n/* FUNCTION:  FINDS ALL OCCURRENCES OF THE SPECIFIED MODULE IN THE   */\n/*            FORTRAN VS2 LIBRARIES                                  */\n/*-------------------------------------------------------------------*/\nCLEAR\nARG MODULE\nDO FOREVER\n  SELECT\n    WHEN MODULE = '' THEN\n      SAY 'ENTER THE NAME OF THE MODULE TO SEARCH FOR'\n    WHEN LENGTH(MODULE) > 8 THEN\n      SAY 'MODULE MAY NOT BE GREATER THAN 8 CHARACTERS, RE-ENTER'\n    OTHERWISE LEAVE\n  END\nPULL MODULE\nEND\nDSN.1 = 'SYS1.ILXCCM'\nDSN.2 = 'SYS1.ILXCCS'\nDSN.3 = 'SYS1.AFBLBM'\nDSN.4 = 'SYS1.AFBLBS'\nDSN.5 = 'SYS1.AFFMOD'\nDSN.6 = 'SYS1.AFFSRC'\nDSN.7 = 'SYS1.AFFPLIB'\nDSN.8 = 'SYS1.AFFMLIB'\nDSN.9 = 'SYS1.AFFCLIB'\nDSN.10 = 'SYS1.VSF2COMP'\nDSN.11 = 'SYS1.VSF2FORT'\nDSN.12 = 'SYS1.VSF2LINK'\nDSN.13 = 'SYS1.VSF2LOAD'\nDSN.14 = 'SYS1.VSF2MATH'\nDSN.15 = 'SYS1.VSF2TLIB'\nDSN.16 = 'SYS1.VSF2PLIB'\nDSN.17 = 'SYS1.VSF2MLIB'\nDSN.18 = 'SYS1.VSF2CLIB'\nDO N = 1 TO 18\n  Y = SYSDSN(\"'\"DSN.N\"(\"MODULE\")'\")\n  X = LEFT(DSN.N,30)\n  IF Y = 'DATASET NOT FOUND' THEN Z = '      '\n  ELSE DO\n    WHATTHAT = OUTTRAP(\"LD.\")\n    \"LISTD '\"DSN.N\"'\"\n    Z = SUBSTR(LD.5,3,6)\n    OUT = OUTTRAP(OUT)\n    END\n  SAY X Z Y\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JESLOOK": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x94\\x03\\x9f\\x00\\x94\\x07?\\t0\\x009\\x007\\x00\\x07\\xe3\\xd6\\xd5\\xe8@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1994-02-08T00:00:00", "modifydate": "1994-03-14T09:30:00", "lines": 57, "newlines": 55, "modlines": 7, "user": "TONY"}, "text": "/* REXX :     JESLOOK                                                */\n/* FUNCTION:  FINDS ALL OCCURRENCES OF THE SPECIFIED MODULE IN THE   */\n/*                   PROC00 JES2 PROCLIB CONCATENATION               */\n/*-------------------------------------------------------------------*/\nTRACE 'OFF'\nSAY \"JES2 SEARCH ROUTINE\"\nSAY \"-----------------------\"\nARG MODULE .\nDSNMBR = 'SYS1.PROCLIB(JES2)'\n\"ALLOC FILE(INPUTDD) DATASET('\"DSNMBR\"') SHR\"\nRETURN = RC\nIF (RETURN \u00ac= 0) THEN DO\n  SAY 'ALLOC OF SYS1.PROCLIB FAILED RC='RETURN\n  EXIT 4\n  END\n\"EXECIO * DISKR INPUTDD (STEM DSN. FINIS\"\n\"FREE FILE(INPUTDD)\"\nPROC00 = 'NO'\nDO I = 1 TO DSN.0\n  IF PROC00 = 'YES' THEN DO\n   IF SUBSTR(DSN.I,3,1)\u00ac='*' THEN DO\n    IF SUBSTR(DSN.I,3,1) = ' ' THEN DO\n      N = N + 1\n      P = INDEX(DSN.I,'DSN=')\n      DSN.I = SUBSTR(DSN.I,P+4)\n      Q = INDEX(DSN.I,',')\n      PRO.N = SUBSTR(DSN.I,1,Q-1)\n      END\n    ELSE PROC00 = 'NO'\n    END\n   END\n  ELSE DO\n    IF SUBSTR(DSN.I,3,6) = 'PROC00' THEN DO\n      PROC00 = 'YES'\n      N = 1\n      P = INDEX(DSN.I,'DSN=')\n      DSN.I = SUBSTR(DSN.I,P+4)\n      Q = INDEX(DSN.I,',')\n      PRO.N = SUBSTR(DSN.I,1,Q-1)\n      END\n    END\n  END\nDO CTR = 1 TO N\n  IF MODULE \u00ac= '' THEN,\n    Y = SYSDSN(\"'\"PRO.CTR\"(\"MODULE\")'\")\n  ELSE Y = SYSDSN(\"'\"PRO.CTR\"'\")\n  X = LEFT(PRO.CTR,44)\n  IF Y = 'DATASET NOT FOUND' THEN Z = '      '\n  ELSE DO\n    WHATTHAT = OUTTRAP(\"LD.\")\n    \"LISTD '\"PRO.CTR\"'\"\n    Z = SUBSTR(LD.5,3,6)\n    OUT = OUTTRAP(OUT)\n    END\n  SAY X Z Y\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LNKLOOK": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x900o\\x00\\x921\\x1f\\x11\\x01\\x00(\\x00.\\x00(\\xe3\\xd6\\xd5\\xe8@@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1990-11-02T00:00:00", "modifydate": "1992-11-06T11:01:00", "lines": 40, "newlines": 46, "modlines": 40, "user": "TONY"}, "text": "/* REXX :     LNKLOOK                                                */\n/* FUNCTION:  FINDS ALL OCCURRENCES OF THE SPECIFIED MODULE IN THE   */\n/*            LINKLST CONCATENATION                                  */\n/*-------------------------------------------------------------------*/\nCLEAR\nARG MODULE\nCVT     = STORAGE(10,4)                   /* DECIMAL 16 ==> CVT      */\nCCVT    = C2X(CVT)                        /* CHAR CVT ADDRESS        */\nDCVT    = C2D(CVT)                        /* DECIMAL CVT ADDRESS     */\nDLLT    = DCVT + 1244                     /* DECIMAL LLT ADDRESS     */\nLLT     = D2C(DLLT,4)                     /* LLT TAB ADDRESS         */\nCLLT    = C2X(LLT)                        /* CHAR LLT ADDRESS        */\nADDR1   = STORAGE(CLLT,4)                 /* ADDRESS OF LLT          */\nCADDR1  = C2X(ADDR1)                      /* CHAR ADDR OF LLT        */\nDATA    = STORAGE(CADDR1,8)               /* GET LUMP OF DATA        */\nNUMENT  = SUBSTR(DATA,5,4)                /* NUMBER OF ENTRIES       */\nDNUMENT = C2D(NUMENT)                     /* CONVERT TO DECIMAL      */\nLEN     = (DNUMENT * 45) + 8              /* MAX SIZE REQUIRED       */\nDATA    = STORAGE(CADDR1,LEN)             /* GET LUMP OF DATA        */\nSTART   = 10                              /* START OF FIRST ENTRY    */\nIF MODULE \u00ac= '' THEN,\n  SAY \"LINKLIST SEARCH FOR \"MODULE\nELSE,\n  SAY \"    LINKLIST LIBRARIES \"\nSAY \"-----------------------------\"\nDO N = 1 TO DNUMENT\n   DSN.N = SUBSTR(DATA,START,44)\n   START = START + 45\n   CTR = INDEX(DSN.N,' ') - 1\n   DSN.N = SUBSTR(DSN.N,1,CTR)\n   IF MODULE \u00ac= '' THEN,\n     Y = SYSDSN(\"'\"DSN.N\"(\"MODULE\")'\")\n   ELSE Y = SYSDSN(\"'\"DSN.N\"'\")\n   W = LISTDSI(\"'\"DSN.N\"'\")\n   X = LEFT(DSN.N,40)\n   IF Y > 0 THEN Z = '      '\n   ELSE,\n     Z = SYSVOLUME\n   SAY X Z Y\n   END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LPALOOK": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x910_\\x00\\x94$?\\x16\\x04\\x005\\x00L\\x00,\\xe2\\xc7\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1991-11-01T00:00:00", "modifydate": "1994-08-31T16:04:00", "lines": 53, "newlines": 76, "modlines": 44, "user": "SGGCSC"}, "text": "/* REXX :     LPALOOK                                                */\n/* FUNCTION:  FINDS ALL OCCURRENCES OF THE SPECIFIED MODULE IN THE   */\n/*             LPALST CONCATENATION                                  */\n/*-------------------------------------------------------------------*/\nTRACE E\nSAY \"LPALST SEARCH ROUTINE\"\nSAY \"-----------------------\"\nARG MODULE .\nDSNMBR = 'SYS1.PARMLIB(LPALST00)'\n\"ALLOC FILE(INPUTDD) DATASET('\"DSNMBR\"') SHR\"\nRETURN = RC\nIF (RETURN \u00ac= 0) THEN DO\n  SAY 'ALLOC OF SYS1.PARMLIB FAILED RC='RETURN\n  EXIT 4\n  END\n\"EXECIO * DISKR INPUTDD (STEM DSN. FINIS\"\n\"FREE FILE(INPUTDD)\"\nDO I = 1 TO DSN.0\n  M = DSN.0 - I + 1\n  N = M + 2\n  DSN.N = STRIP(WORD(DSN.M,1),T,',')\n  END\nDSN.1 = 'SYS1.LPALIB'\nDSN.2 = 'SYS1.SVCLIB'\nN = DSN.0 + 1\nIF DSN.N \u00ac= '/*' THEN N = N + 1\nDO CTR = 1 TO N\n/* ----------------------------------------------------------- */\n/*   ADJUST THE FOLLOWING CODE IF THERE ARE COMMENTS IN YOUR   */\n/*              SYS1.PARMLIB(LPALSTXX) MEMBER.                 */\n/* ----------------------------------------------------------- */\nIF SUBSTR(DSN.CTR,1,2) = '//' THEN\nDO\n  EXIT\nEND\n/* ----------------------------------------------------------- */\n/*   ADJUST THE PREVIOUS  CODE IF THERE ARE COMMENTS IN YOUR   */\n/*              SYS1.PARMLIB(LPALSTXX) MEMBER.                 */\n/* ----------------------------------------------------------- */\n  IF MODULE \u00ac= '' THEN,\n    Y = SYSDSN(\"'\"DSN.CTR\"(\"MODULE\")'\")\n  ELSE Y = SYSDSN(\"'\"DSN.CTR\"'\")\n  X = LEFT(DSN.CTR,44)\n  IF Y = 'DATASET NOT FOUND' THEN Z = '      '\n  ELSE DO\n    WHATTHAT = OUTTRAP(\"LD.\")\n    \"LISTD '\"DSN.CTR\"'\"\n    Z = SUBSTR(LD.5,3,6)\n    OUT = OUTTRAP(OUT)\n    END\n  SAY X Z Y\nEND\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT219/FILE219.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT219", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}