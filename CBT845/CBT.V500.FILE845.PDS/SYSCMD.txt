*---------------------------------------------------------------------*
*                                                                     *
* Function:                                                           *
*        Execute an MVS console command passed as a parameter         *
*                                                                     *
* Syntax:                                                             *
*        // EXEC PGM=SYSCMD,PARM='command'                            *
*                                                                     *
*        from REXX running under TSO session (see usage note below):  *
*        CMD = 'd a,all'                                              *
*        PGM = 'SYSCMD'                                               *
*        address LINKMVS RUNAUTH 'PGM CMD'                            *
*                                                                     *
* Usage notes:                                                        *
*        - This program requires APF autorization;                    *
*        - Program accept one mandatory parameter                     *
*          +--------+     +--------+     +----+---------+             *
*          |   R1   |---->|   P1   |---->| L1 | command |             *
*          +--------+     +--------+     +----+---------+             *
*        - If responce buffer provided, responce of the host command  *
*          returned to caller.                                        *
*        - This program cannot be invoked from TSO session directly,  *
*          via call like "address LINKMVS 'SYSCMD CMD'" due to        *
*          missed authorization, abend 047 will be result.            *
*          To invoke HOSTCMD from TSO session program RUNAUTH may be  *
*          used. Please see RUNAUTH description for details.          *
*       -  To run SYSCMD via RUNAUTH program library where SYSCMD     *
*          resides must be included in LNKLSTnn concatenation; name   *
*          of the program should be listed in the section AUTHTSF of  *
*          IKJTSOnn PARMLIB member.                                   *
*        - In many cases TSO CONSOLE service can be used instead      *
*          of this program;                                           *
*                                                                     *
* Installation:                                                       *
*        - Copy delivered program source (SYSCMD.asm) to any source   *
*          library;                                                   *
*        - Use delivered job skeleton (SYSCMD.make) to assembly and   *
*          link-edit a load module. Update this job skeleton to pro-  *
*          vide valid JOB card, actual source library and desired     *
*          load library - change SET statements as required;          *
*        - The SYSCMD load module must reside on APF-authorised       *
*          library;                                                   *
*        - Don't forget to refresh LLA (F LLA,REFRESH) if necessary;  *
*        - Note: any authorized program added to the system potenti-  *
*          ally can be a security hole...                             *
*                                                                     *
* Return codes:                                                       *
*        0   - MVS command launched                                   *
*        102 - missed command (specified length is zero)              *
*        103 - too long command (length greater than 126)             *
*                                                                     *
* (C) 2006 Gregory Bliznets gbliznets@iba.by                          *
*                                                                     *
*---------------------------------------------------------------------*
         PRINT NOGEN
SYSCMD   CSECT
         USING SYSCMD,R12              Establish addressability
         USING WORKAREA,R13            Workarea addressability
         STM   R14,R12,SAVEREGS        Save registers 14,15,0-12
         LR    R12,R15                 Load base register
         L     R2,0(,R1)               Save parm pointer
         STORAGE OBTAIN,LENGTH=WORKSIZE Get workarea
         ST    R1,SAVEFPTR-SAVEAREA(,R13) Chain forward
         ST    R13,SAVEBPTR-SAVEAREA(,R1) Chain backward
         LR    R13,R1                  Set new savearea
         MVC   SAVEFPTR,=F'0'          Last area in chain
         XC    RETCODE,RETCODE         Clear error code
         MVI   RETCODE+3,ERROR2        Set error code if no parms
         LH    R3,0(,R2)               Length of parm
         LTR   R3,R3                   Missed parm?
         BZ    QUIT                    Error if so
         MVI   RETCODE+3,ERROR3        Set error code if too long
         C     R3,=F'126'              Too long?
         BH    QUIT                    Error if so
         BCTR  R3,0
         MVC   COMMAND+4(*-*),2(R2)    Executed move
         EX    R3,*-6                  Move command
         MVC   COMMAND(4),=F'0'
         LA    R3,5(R3)                +1 for BCTR +4 for prefix
         STH   R3,COMMAND
         MODESET KEY=ZERO,MODE=SUP
         LA    R1,COMMAND              SVC 34 parameter list
         XR    R0,R0
         SVC   34                      Run MVS command
         MVC   RETCODE,=F'0'           SVC 35 didn't set rc properly
         MODESET KEY=NZERO,MODE=PROB
QUIT     EQU   *
         LR    R1,R13                  Current savearea pointer
         L     R13,SAVEBPTR            Chain back pointer
         MVC   SAVEREGS+4,RETCODE-WORKAREA(R1) Return code to saved R15
         STORAGE RELEASE,ADDR=(R1),LENGTH=WORKSIZE
         LM    R14,R12,SAVEREGS        Restore registers 0-12,14,15
         BR    R14                     Back to caller
         SPACE 1
*---------------------------------------------------------------------*
*        Work area                                                    *
*---------------------------------------------------------------------*
WORKAREA DSECT
SAVEAREA DS    0F                      Save area must be first
SAVEID   DS    F                       Not used
SAVEBPTR DS    F                       Backward pointer
SAVEFPTR DS    F                       Forward pointer
SAVEREGS DS    15F                     Regs 14,15,0-12
RETCODE  DS    F                       Return code
COMMAND  DS    F
         DC    CL126' '
WORKSIZE EQU   *-WORKAREA
ERROR2   EQU   102                     - zero length command
ERROR3   EQU   103                     - too long command
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
