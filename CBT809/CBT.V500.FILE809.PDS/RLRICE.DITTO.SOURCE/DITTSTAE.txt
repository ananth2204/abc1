* ------------------------------------------------------------------- *
*                                                                     *
*              STAE EXIT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         MACRO
&NAME    MSG   &A,&B,&C,&D
         LCLC  &TEXT
         AIF   (T'&A EQ 'O').NOTEXT
&TEXT    SETC  '&A'
         AIF   (T'&B EQ 'O').M0010
&TEXT    SETC  '&TEXT.,&B'
         AIF   (T'&C EQ 'O').M0010
&TEXT    SETC  '&TEXT.,&C'
         AIF   (T'&D EQ 'O').M0010
&TEXT    SETC  '&TEXT.,&D'
.M0010   ANOP
&NAME    DC    AL2(&NAME.E-&NAME)
         DC    AL2(0)
         DC    &TEXT
&NAME.E  EQU   *
         MEXIT
.NOTEXT  MNOTE 12,'NO TEXT'
         MEND
DITTSTAE DITTPRFX STAESAVE,'STAE EXIT'
         L     R11,VCOMM                SET COMM AREA BASE
         USING DITTCOMM,R11             DEFINE COMM AREA BASE
         MVI   STAEFLAG,0               RESET ALL STAE FLAGS
* ------------------------------------------------------------------- *
*              DETERMINE ABEND CODE                                   *
* ------------------------------------------------------------------- *
         CH    R0,H12                   SDWA PROVIDED?
         BNE   STAE0010                 YES
         LR    R15,R1                   COPY ABEND CODE
         SRL   R1,12                    SHIFT OUT USER CODE IF PRESENT
         STCM  R1,3,STAESCDE            SAVE SYSTEM ABEND CODE
         STCM  R15,3,STAEUCDE           SAVE USER ABEND CODE
         NI    STAEUCDE,X'0F'           TURN OFF ANY SYSTEM CODE BITS
         B     STAE0020                 CHECK FOR DITTDUMP DD
STAE0010 DS    0H
         OI    STAEFLAG,$SDWA           SDWA IS PRESENT
         LR    R3,R1                    COPY SDWA ADDRESS
         USING SDWA,R3                  DEFINE SDWA ADDRESSABILITY
         SR    R15,R15                  CLEAR REGISTER
         ICM   R15,3,SDWACMPC           SYSTEM CODE
         SRL   R15,4                    SHIFT OUT USER BITS
         STCM  R15,3,STAESCDE           SAVE SYSTEM CODE
         MVC   STAEUCDE,SDWACMPC+1      COPY USER CODE
         NI    STAEUCDE,X'0F'           TURN OFF ANY SYSTEM CODE BITS
* ------------------------------------------------------------------- *
*              DETERMINE IF DITTDUMP DD STATEMENT IS PRESENT          *
* ------------------------------------------------------------------- *
STAE0020 DS    0H
         EXTRACT TIOTADDR,FIELDS=TIOT   REQUEST TIOT ADDRESS
         L     R2,TIOTADDR              OUR TIOT'S ADDRESS
         USING TIOT1,R2                 DEFINE TIOT ADDRESSABILITY
         SR    R1,R1                    CLEAR FOR TIOT ENTRY LENGTH
STAE0030 DS    0H
         ICM   R1,1,TIOELNGH            INSERT LENGTH OF THIS ENTRY
         BZ    STAE0050                 DITTDUMP DOES NOT EXIST
         CLC   TIOEDDNM,=CL8'DITTDUMP'  IS THIS THE DITTDUMP DD?
         BE    STAE0040                 YES
         AR    R2,R1                    ADDRESS OF NEXT TIOT ENTRY
         B     STAE0030                 CHECK AGAIN
STAE0040 DS    0H
         OI    STAEFLAG,$DUMPDD         DITTDUMP DD IS PRESENT
         OPEN  (DITTDUMP,OUTPUT)        OPEN STAE OUTPUT
         OI    STAEFLAG,$PRTOPEN        INDICATE PRINT IS OPEN
         BAL   R10,HEAD0000             PRINT STAE HEADING
STAE0050 DS    0H
         OC    STAEUCDE,STAEUCDE        USER CODE?
         BNZ   STAE0060                 YES
         MVC   PRABTYPE,TYPESYS         SYSTEM ABEND
         UNPK  PRABCODE(5),STAESCDE(3)  UNPACK ABEND CODE
         MVZ   PRABCODE,HEX0000         PREPARE FOR TRANSLATE
         TR    PRABCODE,HEXCHAR         TRANSLATE TO PRINTABLE
         MVI   PRABCODE,C' '            BLANK OUT FIRST DIGIT
         MVI   PRABCODE+4,C' '          RESTORE THE BLANK
         B     STAE0070                 PRINT ABEND CODE MESSAGE
STAE0060 DS    0H
         MVC   PRABTYPE,TYPEUSER        SYSTEM ABEND
         LH    R1,STAEUCDE              USER CODE
         CVD   R1,STAEDWRD              CONVERT TO DECIMAL
         UNPK  PRABCODE(5),STAEDWRD+6(3)
         MVI   PRABCODE+3,C' '          RESTORE THE BLANK
         MVI   PRABCODE+4,C' '          RESTORE THE BLANK
STAE0070 DS    0H
         LA    R15,STAEM01
         BAL   R10,PRT0000        PRINT ABEND MESSAGE
* ------------------------------------------------------------------- *
*              DETERMINE MODULE IN CONTROL AT TIME OF ABEND           *
* ------------------------------------------------------------------- *
         TM    STAEFLAG,$SDWA          SDWA PRESENT?
         BNO   STAE0120                NO
         CLC   SDWANXT1,ACOMM          ADDRESS TOO LOW?
         BL    STAE0130                YES.. NOT IN DITTO
         CLC   SDWANXT1,AXXXX          ADDRESS TOO HIGH?
         BH    STAE0130                YES.. NOT IN DITTO
         LA    R1,AXXXX-4              LAST MODULE ID/ADDRESS
         B     STAE0090                ENTER LOOP
STAE0080 DS    0H
         CLC   ISP,0(R1)               IS THIS THE ISP MODULE ENTRY?
         BE    STAE0090                YES.. IGNORE IT
         CLC   SDWANXT1,4(R1)          ADDRESS WITHIN THIS CSECT?
         BH    STAE0100                YES
         CLC   0(R1),ACOMM-4           COMMON AREA JUST CHECKED?
         BE    STAE0110                YES.. SHOULD BE A LOGIC ERROR
STAE0090 DS    0H
         SH    R1,H8                   PREVIOUS MODULE ID/ADDRESS
         B     STAE0080                CONTINUE THE SEARCH
STAE0100 DS    0H
         MVC   PRCSECT,0(R1)           MOVE CSECT NAME
         L     R1,4(R1)                CSECT NAME
         L     R2,SDWANXT1             ABEND POINT
         SR    R2,R1                   DISPLACEMENT INTO ABENDING CSECT
         ST    R2,STAEDWRD             SAVE DISPLACEMENT
         UNPK  PRDISP(9),STAEDWRD(5)
         MVZ   PRDISP,HEX0000          PREPARE FOR TRANSLATE
         TR    PRDISP,HEXCHAR          TRANSLATE TO PRINTABLE
         MVI   PRDISP+8,C' '           RESTORE THE BLANK
         LA    R15,STAEM02
         BAL   R10,PRT0000             PRINT CSECT/DISP MESSAGE
         B     STAE0200                PROCESS COMMON AREA
STAE0110 DS    0H
         LA    R15,STAEM03
         BAL   R10,PRT0000             PRINT
         B     STAE0200                PROCESS COMMON AREA
STAE0120 DS    0H
         LA    R15,STAEM04
         BAL   R10,PRT0000             PRINT
         B     STAE0200                PROCESS COMMON AREA
STAE0130 DS    0H
         LA    R15,STAEM05
         BAL   R10,PRT0000        PRINT
* ------------------------------------------------------------------- *
*              DUMP COMMON AREA                                       *
* ------------------------------------------------------------------- *
STAE0200 DS    0H
         LA    R15,STAEM07             *-------------*
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM08             *             *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM19             * COMMON AREA *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM08             *             *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM07             *-------------*
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM20
         BAL   R10,PRT0000             PRINT
         LR    R2,R11                  SET COMMON AREA ADDRESS
         LA    R3,COMMTR00-DITTCOMM    COMMON AREA LENGTH
         BAL   R9,STAE0900             DUMP COMMON AREA
* ------------------------------------------------------------------- *
*              DUMP DYNAMIC BLOCKS                                    *
* ------------------------------------------------------------------- *
         ICM   R8,15,COMMDYHD          FIRST DYNAMIC BLOCK
         BNZ   STAE0210                PROCESS DYNAMIC BLOCKS
         LA    R15,STAEM06
         BAL   R10,PRT0000             NO DYNAMIC BLOCKS
         B     STAE0400                PROCESS TRACE TABLE
STAE0210 DS    0H
         BAL   R10,HEAD0000            FORCE HEADING
STAE0220 DS    0H
         ST    R8,STAEDWRD             SAVE DYNAMIC BLOCK'S ADDRESS
         USING DYNBLOK,R8
         UNPK  PRDYNADR(9),STAEDWRD(5) UNPACK DYNAMIC BLOCK'S ADDRESS
         MVZ   PRDYNADR,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDYNADR,HEXCHAR        TRANSLATE ADDRESS TO PRINTABLE
         MVI   PRDYNADR+8,C' '         RESTORE THE BLANK
         LA    R15,STAEM07             *---------------*
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM08             *               *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM09             * DYNAMIC BLOCK *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM08             *               *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM07             *---------------*
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM20
         BAL   R10,PRT0000             PRINT
         UNPK  PRDYNNXT(9),DYNNEXT(5)
         MVZ   PRDYNNXT,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDYNNXT,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   PRDYNNXT+8,C' '         RESTORE BLANK
         UNPK  PRDYNPRV(9),DYNPREV(5)
         MVZ   PRDYNPRV,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDYNPRV,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   PRDYNPRV+8,C' '         RESTORE BLANK
         UNPK  PRDYNCUU(5),DYNCUU(3)
         MVZ   PRDYNCUU,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDYNCUU,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   PRDYNCUU,C' '           RESTORE BLANK
         MVI   PRDYNCUU+4,C' '         RESTORE BLANK
         MVC   PRDYNDDN,DYNDDNAM       COPY DDNAME
         MVC   PRDYNDVL,DYNVOL         COPY DISK VOLSER
         UNPK  PRDYNECB(9),DYNECB(5)
         MVZ   PRDYNECB,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDYNECB,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   PRDYNECB+8,C' '         RESTORE BLANK
         LA    R15,STAEM10
         BAL   R10,PRT0000             PRINT
         LR    R2,R8                   COPY DYNBLOCK ADDRESS
         LA    R3,DYNBLOKL             DYNBLOCK LENGTH
         BAL   R9,STAE0900             DUMP DYNBLOCK
         ICM   R8,15,DYNNEXT           NEXT ON CHAIN
         BNZ   STAE0220                PROCESS ALL ON CHAIN
* ------------------------------------------------------------------- *
*              'CLOSE' DCB'S IN DYNAMIC BLOCKS                        *
* ------------------------------------------------------------------- *
STAE0300 DS    0H
         ICM   R8,15,COMMDYHD          FIRST DYNAMIC BLOCK
         CLI   COMMENV,$ENVTSO         TSO ENVIRONMENT?
         BNE   STAE0310                NO
         SR    R1,R1                   'TURN ON' REQUEST
         L     R15,AAUTH               DITTAUTH ENTRY POINT
         BALR  R14,R15                 LINK TO DITTAUTH
STAE0310 DS    0H
         MODESET MODE=SUP,KEY=ZERO     ENTER SUPERVISOR STATE, KEY ZERO
STAE0320 DS    0H
         LA    R4,DYNDCB               DCB FOR THIS UNIT
         USING IHADCB,R4               DEFINE DSECT BASE
         DEBCHK (R4),                  DEBCHK (REFERENCE DCB NOT DEB)  +
               TYPE=DELETE             .. DELETE THE DEB FROM DEBTABLE
         LTR   R15,R15                 DEBCHK SUCCESSFUL?
         BNZ   STAE0370                NO.. TRY CLEAN-UP FOR NEXT BLOCK
STAE0330 DS    0H
         L     R7,DYNDEBA              DEB ADDRESS IN THIS DYN BLOCK
         USING DEB,R7                  DEFINE DEB BASE
         LA    R2,DEBBASIC             BASIC PORTION OF DEB
         USING PSA,R0                  DEFINE PSA BASE
         L     R1,PSATNEW              CURRENT TCB ADDRESS FROM PSA
         USING TCB,R1                  DEFINE DCB BASE
         SR    R3,R3                   CLEAR REGISTER
         ICM   R3,7,TCBDEB+1           1ST DEB ON DEB CHAIN
         LA    R4,TCBDEB               ADDRESS'S ADDRESS
STAE0340 DS    0H
         CR    R3,R2                   IS THIS THE CORRECT DEB?
         BE    STAE0350                YES
         LA    R4,DEBDEBAD-DEBBASIC(R3)   NEXT DEB ADDRESS ADDRESS
         ICM   R3,7,DEBDEBB-DEBBASIC(R3)  NEXT DEB
         BNZ   STAE0340                CHECK AGAIN
         MVC   STAEM12D,DYNDDNAM       COPY DDNAME
         LA    R15,STAEM12
         BAL   R10,PRT0000             COULD NOT LOCATE DEB...
         B     STAE0370                TRY CLEAN-UP FOR NEXT BLOCK
STAE0350 DS    0H
         ICM   R2,7,DEBDEBB            NEXT DEB ON CHAIN
         ICM   R2,8,0(R4)              SAVE ACCESS METHOD SECT LENGTH
         ICM   R3,15,0(R4)             CS WILL USE ALL 4 BYTES
         CS    R3,R2,0(R4)             REMOVE DEB FROM DEB CHAIN
         BNE   STAE0330                SOMETHING CHANGED, TRY AGAIN
         MVC   STAEM13D,DYNDDNAM       COPY DDNAME
         LA    R15,STAEM13
         BAL   R10,PRT0000             CLEAN-UP COMPLETE
         B     STAE0370                TRY CLEAN-UP FOR NEXT BLOCK
STAE0360 DS    0H
         MVC   STAEM14D,DYNDDNAM       COPY DDNAME
         STC   R2,STAEDWRD             SAVE RETURN CODE
         UNPK  STAEM14R(3),STAEDWRD(2)
         MVZ   STAEM14R,HEX0000        PREPARE FOR TRANSLATE
         TR    STAEM14R,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   STAEM14R+2,C' '         RESTORE THE BLANK
         LA    R15,STAEM14
         BAL   R10,PRT0000             DEBCHK TYPE=DELETE FAILED
STAE0370 DS    0H
         ICM   R8,15,DYNNEXT           NEXT DYNAMIC BLOCK
         BNZ   STAE0320                TRY CLEAN-UP FOR THIS BLOCK
         MODESET MODE=PROB,KEY=NZERO
         CLI   COMMENV,$ENVTSO         TSO ENVIRONMENT?
         BNE   STAE0380                NO
         LA    R1,1                    'TURN OFF' REQUEST
         L     R15,AAUTH               DITTAUTH ENTRY POINT
         BALR  R14,R15                 LINK TO DITTAUTH
STAE0380 DS    0H
* ------------------------------------------------------------------- *
*              PROCESS TRACE TABLE                                    *
* ------------------------------------------------------------------- *
STAE0400 DS    0H
         L     R8,COMM1ST              FIRST TRACE ENTRY
         USING TRENTRY,R8              DEFINE BASE
         BAL   R10,HEAD0000            FORCE HEADING
STAE0410 DS    0H
         LA    R15,STAEM07             *-------------*
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM08             *             *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM15             * TRACE TABLE *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM08             *             *
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM07             *-------------*
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM20
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM16             TRACE DATA HEADING 1
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM17             TRACE DATA HEADING 2
         BAL   R10,PRT0000             PRINT
         LA    R15,STAEM20
         BAL   R10,PRT0000             PRINT
STAE0420 DS    0H
         MVC   PRDATA1C,COMMBLKS       CLEAR DATA 1 (CHARACTER)
         MVC   PRDATA1H,COMMBLKS       CLEAR DATA 1 (HEX)
         MVC   PRDATA2C,COMMBLKS       CLEAR DATA 2 (CHARACTER)
         MVC   PRDATA2H,COMMBLKS       CLEAR DATA 1 (HEX)
         MVC   PRCURR,COMMBLKS         CLEAR CURRENT ENTRY EYECATCHER
         MVC   PRMODNM,TRMODNM         COPY MODULE NAME
         MVC   PRTRID,TRID             COPY TRACE ID
         MVC   PRDATA1C,TRDATA1        COPY DATA1
         L     R15,ATABLE2             TRANSLATE TABLE ADDRESS
         TR    PRDATA1C,0(R15)         TRANSLATE OUT UNPRINTABLES
         UNPK  PRDATA1H+0(9),TRDATA1+0(5)
         UNPK  PRDATA1H+8(9),TRDATA1+4(5)
         MVZ   PRDATA1H,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDATA1H,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   PRDATA1H+16,C' '        RESTORE THE BLANK
         MVC   PRDATA2C,TRDATA2        COPY DATA1
         TR    PRDATA2C,0(R15)         TRANSLATE OUT UNPRINTABLES
         UNPK  PRDATA2H+0(9),TRDATA2+0(5)
         UNPK  PRDATA2H+8(9),TRDATA2+4(5)
         MVZ   PRDATA2H,HEX0000        PREPARE FOR TRANSLATE
         TR    PRDATA2H,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   PRDATA2H+16,C' '        RESTORE THE BLANK
         C     R8,COMMCURR             IS THIS THE CURRENT ENTRY?
         BNE   STAE0430                NO
         MVC   PRCURR,CURRENT          SET CURRENT
STAE0430 DS    0H
         LA    R15,STAEM18
         BAL   R10,PRT0000             PRINT
         C     R8,COMMLAST             LAST ENTRY JUST PRINTED?
         BE    STAE9900                YES.. EXIT
         LA    R8,TRENTRYL(R8)         NEXT TRACE ENTRY
         CP    LINECT,P0               NEW PAGE JUST STARTED?
         BE    STAE0410                YES.. PRINT SECONDARY HEADINGS
         B     STAE0420                PROCESS THIS ENTRY
* ------------------------------------------------------------------- *
*              DUMP REQUESTED STORAGE                                 *
*                                                                     *
*              R2 IS STORAGE ADDRESS                                  *
*              R3 IS STORAGE LENGTH                                   *
*              R9 IS RETURN ADDRESS                                   *
*                                                                     *
*              R1, R10, R14, AND R15 WILL BE ALTERED                  *
* ------------------------------------------------------------------- *
STAE0900 DS    0H
         LA    R15,STAEM11             CLEAR MESSAGE AREA
         ST    R2,STAEDWRD             SAVE ADDRESS
         UNPK  DUMPADDR(9),STAEDWRD(5)
         MVZ   DUMPADDR,HEX0000        PREPARE FOR TRANSLATE
         TR    DUMPADDR,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   DUMPADDR+8,C' '         RESTORE THE BLANK
         UNPK  WORKHEX1(9),00(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX2(9),04(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX3(9),08(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX4(9),12(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX5(9),16(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX6(9),20(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX7(9),24(5,R2)    UNPACK FOR HEX
         UNPK  WORKHEX8(9),28(5,R2)    UNPACK FOR HEX
         MVZ   WORKHEX1,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX2,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX3,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX4,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX5,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX6,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX7,HEX0000        PREPARE FOR TRANSLATE
         MVZ   WORKHEX8,HEX0000        PREPARE FOR TRANSLATE
         TR    WORKHEX1,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX2,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX3,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX4,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX5,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX6,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX7,HEXCHAR        TRANSLATE TO PRINTABLE
         TR    WORKHEX8,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   WORKHEX1+8,C' '         RESTORE BLANK
         MVI   WORKHEX2+8,C' '         RESTORE BLANK
         MVI   WORKHEX3+8,C' '         RESTORE BLANK
         MVI   WORKHEX4+8,C' '         RESTORE BLANK
         MVI   WORKHEX5+8,C' '         RESTORE BLANK
         MVI   WORKHEX6+8,C' '         RESTORE BLANK
         MVI   WORKHEX7+8,C' '         RESTORE BLANK
         MVI   WORKHEX8+8,C' '         RESTORE BLANK
         LR    R1,R3                   COPY DATA LENGTH
         CH    R1,H32                  TOO MUCH?
         BNH   STAE0910                NO
         LH    R1,H32                  LIMIT TO 32
STAE0910 DS    0H
         BCTR  R1,0                    RELATIVE TO ZERO
         EX    R1,CHARMVC              MOVE CHARACTER PORTION
         L     R15,ATABLE1             TRANSLATE TABLE ADDRESS
         EX    R1,CHARTR               TRANSLATE OUT UNPRINTABLES
         IC    R1,WORKLEN(R1)          CONVERT LENGTH TO OUTPUT LENGTH
         EX    R1,WORKMVC              MOVE WORK DATA TO OUTPUT
         LA    R15,STAEM11
         BAL   R10,PRT0000             PRINT
         LA    R2,32(R2)               NEXT 32 BYTES
         SH    R3,H32                  MINUS 1 LINE'S WORTH
         BH    STAE0900                KEEP UP THE GOOD WORK
         BR    R9                      WE'VE DONE OUR DAMAGE
STAE9900 DS    0H
         TM    STAEFLAG,$PRTOPEN       IS PRINT OPEN?
         BNO   STAE9910                NO
         CLOSE DITTDUMP                CLOSE PRINT DCB
STAE9910 DS    0H
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGISTERS
         L     R13,4(R13)              RESTORE CALLERS SAVE AREA
         SR    R15,R15                 REQUEST CONTINUATION OF ABEND
         BR    R14                     EXIT TO RTM
PRT0000  DS    0H
         TM    STAEFLAG,$DUMPDD        WAS DUMP DD PRESENT?
         BNOR  R10                     NO.. NO NEED TO PROCEED FURTHER
         MVC   STAECC,4(R15)           SAVE CARRIAGE CONTROL
         PUT   DITTDUMP,0(R15)         PRINT
         AP    LINECT,P1               ADD TO LINE COUNT
         CLI   STAECC,C' '             SINGLE SPACE?
         BE    PRT0010                 YES
         AP    LINECT,P1               ADD TO LINE COUNT
         CLI   STAECC,C'0'             DOUBLE SPACE?
         BE    PRT0010                 YES
         AP    LINECT,P1               ADD TO LINE COUNT
PRT0010  DS    0H
         CP    LINECT,P55              TIME FOR HEADING?
         BLR   R10                     NO
HEAD0000 DS    0H
         TM    STAEFLAG,$DUMPDD        WAS DUMP DD PRESENT?
         BNOR  R10                     NO.. NO NEED TO PROCEED FURTHER
         AP    PAGECT,P1               ADD TO PAGE COUNT
         MVC   HEADPAGE,EDWORD1        INITIALIZE WITH EDIT WORD
         ED    HEADPAGE,PAGECT         EDIT PAGE COUNT
         PUT   DITTDUMP,HEADING        PRINT HEADING
         ZAP   LINECT,P0               RESET LINE COUNT
         BR    R10                     EXIT
* ------------------------------------------------------------------- *
*              EXECUTED INSTRUCTIONS                                  *
* ------------------------------------------------------------------- *
CHARMVC  MVC   DUMPCHAR(0),0(R2)       MOVE CHARACTER DATA TO DUMP
CHARTR   TR    DUMPCHAR(0),TABLE1
WORKMVC  MVC   DUMPHEX(0),DUMPWORK
         SPACE 2
* ------------------------------------------------------------------- *
*                                                                     *
*              WORK AREAS/CONSTANTS                                   *
*                                                                     *
* ------------------------------------------------------------------- *
STAESAVE DC    18F'0'              REGISTER SAVE AREA
STAEDWRD DC    D'0'
VCOMM    DC    V(DITTCOMM)         COMM AREA ADDRESS
ATABLE1  DC    A(TABLE1)
ATABLE2  DC    A(TABLE2)
TIOTADDR DC    A(0)                TIOT ADDRESS
H8       DC    H'8'                CONSTANT
H12      DC    H'12'               CONSTANT
H32      DC    H'32'               CONSTANT
STAESCDE DC    XL2'0000'           SYSTEM ABEND CODE
STAEUCDE DC    XL2'0000'           USER ABEND CODE
STAEFLAG DC    X'00'               FLAGS
$DUMPDD  EQU   X'80'               .. DITTDUMP DD IS PRESENT
$SDWA    EQU   X'40'               .. SDWA IS PRESENT
$PRTOPEN EQU   X'20'               .. PRINT DCB IS OPEN
STAECC   DC    C' '                SAVE CARRIAGE CONTROL
EDWORD1  DC    X'402020202120'     CONSTANT
TYPESYS  DC    CL06'SYSTEM'        CONSTANT
TYPEUSER DC    CL06'USER'          CONSTANT
ISP      DC    CL4'ISP '
CURRENT  DC    CL16'<--CURRENT ENTRY'
HEX0000  DC    16X'00'             CONSTANT
HEXCHAR  DC    C'0123456789ABCDEF' CONSTANT
LINECT   DC    PL3'0'              LINE COUNT
PAGECT   DC    PL3'0'              PAGE COUNT
P0       DC    P'0'                CONSTANT
P1       DC    P'1'                CONSTANT
P55      DC    P'55'               CONSTANT
WORKLEN  DS    0C                  DATA LENGTH       PRINT LENGTH
         DC    AL1(01)                 01                 02
         DC    AL1(03)                 02                 04
         DC    AL1(05)                 03                 06
         DC    AL1(07)                 04                 08
*
         DC    AL1(10)                 05                 11
         DC    AL1(12)                 06                 13
         DC    AL1(14)                 07                 15
         DC    AL1(16)                 08                 17
*
         DC    AL1(19)                 09                 20
         DC    AL1(21)                 10                 22
         DC    AL1(23)                 11                 24
         DC    AL1(25)                 12                 26
*
         DC    AL1(28)                 13                 29
         DC    AL1(30)                 14                 31
         DC    AL1(32)                 15                 33
         DC    AL1(34)                 16                 35
*
         DC    AL1(39)                 17                 40
         DC    AL1(41)                 18                 42
         DC    AL1(43)                 19                 44
         DC    AL1(45)                 20                 46
*
         DC    AL1(48)                 21                 49
         DC    AL1(50)                 22                 51
         DC    AL1(52)                 23                 53
         DC    AL1(54)                 24                 55
*
         DC    AL1(57)                 25                 58
         DC    AL1(59)                 26                 60
         DC    AL1(61)                 27                 62
         DC    AL1(63)                 28                 64
*
         DC    AL1(66)                 29                 67
         DC    AL1(68)                 30                 69
         DC    AL1(70)                 31                 71
         DC    AL1(72)                 32                 73
DUMPWORK DS    0C
WORKHEX1 DC    CL08' '
         DC    CL01' '
WORKHEX2 DC    CL08' '
         DC    CL01' '
WORKHEX3 DC    CL08' '
         DC    CL01' '
WORKHEX4 DC    CL08' '
         DC    CL03' '
WORKHEX5 DC    CL08' '
         DC    CL01' '
WORKHEX6 DC    CL08' '
         DC    CL01' '
WORKHEX7 DC    CL08' '
         DC    CL01' '
WORKHEX8 DC    CL08' '
         DC    CL01' '
HEADING  DC    AL2(HEADINGL)
         DC    AL2(0)
         DC    CL111'1            DITTO STAE EXIT'
         DC    C'PAGE'
HEADPAGE DC    CL06' '
HEADINGL EQU   *-HEADING
STAEM01  DC    AL2(STAEM01L)
         DC    AL2(0)
         DC    C'0 DITTO HAS ABENDED WITH '
PRABTYPE DC    CL06' '
         DC    C' CODE '
PRABCODE DC    CL03' '
         DC    CL02' '
STAEM01L EQU   *-STAEM01
STAEM02  DC    AL2(STAEM02L)
         DC    AL2(0)
         DC    C'0 ABENDING CSECT NAME: DITT'
PRCSECT  DC    CL4' '
         DC    C'  ABEND AT DISPLACEMENT +'
PRDISP   DC    CL8' '
         DC    C' '
STAEM02L EQU   *-STAEM02
STAEM03  MSG   C'0 LOGIC ERROR IN CSECT LOCATING CODE, STAE EXIT TERMIN+
               ATING'
STAEM04  MSG   C'0 SDWA NOT PRESENT, UNABLE TO DETERMINE CSECT AND DISP+
               LACEMENT'
STAEM05  MSG   C'0 ABEND DID NOT OCCUR WITHIN DITTO CODE'
STAEM06  MSG   C'0 NO DYNAMIC BLOCKS FOUND'
STAEM07  MSG   C' ',C'*',118C'-',C'*'
STAEM08  MSG   C' ',C'*',118C' ',C'*'
STAEM09  DC    AL2(STAEM09L)
         DC    AL2(0)
         DC    C' ',C'*'
         DC    CL42' '
         DC    CL25'DYNAMIC BLOCK AT ADDRESS '
PRDYNADR DC    CL08' '
         DC    CL43' '
         DC    C'*'
STAEM09L EQU   *-STAEM09
STAEM10  DC    AL2(STAEM10L)
         DC    AL2(0)
         DC    C'NEXT:'
PRDYNNXT DC    CL8' '
         DC    C'   PREVIOUS:'
PRDYNPRV DC    CL8' '
         DC    C'   DEVICE CUU:'
PRDYNCUU DC    CL3' '
         DC    C'   DDNAME:'
PRDYNDDN DC    CL8' '
         DC    C'   VOLSER (IF DASD):'
PRDYNDVL DC    CL06' '
         DC    C'   ECB:'
PRDYNECB DC    CL8' '
         DC    C' '
STAEM10L EQU   *-STAEM10
STAEM11  DC    AL2(STAEM11L)
         DC    AL2(0)
DUMPADDR DC    CL08' '
         DC    CL03' '
DUMPHEX  DC    CL73' '
         DC    CL03' '
DUMPCHAR DC    CL32' '
STAEM11L EQU   *-STAEM11
STAEM12  DC    AL2(STAEM12L)
         DC    AL2(0)
         DC    C'0 CLEAN-UP UNSUCCESSFUL FOR DDNAME:'
STAEM12D DC    CL8' '
         DC    C', COULD NOT LOCATE DEB'
STAEM12L EQU   *-STAEM12
STAEM13  DC    AL2(STAEM13L)
         DC    AL2(0)
         DC    C'0 CLEAN-UP SUCCESSFUL FOR DDNAME:'
STAEM13D DC    CL8' '
STAEM13L EQU   *-STAEM13
STAEM14  DC    AL2(STAEM14L)
         DC    AL2(0)
         DC    C'0 CLEAN-UP UNSUCCESSFUL FOR DDNAME:'
STAEM14D DC    CL8' '
         DC    C', DEBCHK TYPE=DELETE FAILED, RC='
STAEM14R DC    CL02' '
         DC    C' '
STAEM14L EQU   *-STAEM14
STAEM15  DC    AL2(STAEM15L)
         DC    AL2(0)
         DC    C' '
         DC    CL01'*'
         DC    CL54' '
         DC    CL11'TRACE TABLE'
         DC    CL53' '
         DC    CL01'*'
STAEM15L EQU   *-STAEM15
STAEM16  DC    AL2(STAEM16L)
         DC    AL2(0)
         DC    C' '
         DC    CL08' MODULE '
         DC    CL04' '
         DC    CL08'TRACE ID'
         DC    CL04' '
         DC    CL25'*---- TRACE DATA 1 -----*'
         DC    CL04' '
         DC    CL25'*---- TRACE DATA 2 -----*'
STAEM16L EQU   *-STAEM16
STAEM17  DC    AL2(STAEM17L)
         DC    AL2(0)
         DC    C' '
         DC    CL24' '
         DC    CL25'  CHAR         HEX       '
         DC    CL04' '
         DC    CL25'  CHAR         HEX       '
STAEM17L EQU   *-STAEM17
STAEM18  DC    AL2(STAEM18L)
         DC    AL2(0)
         DC    C' '
PRMODNM  DC    CL08' '            MODULE NAME
         DC    CL04' '
PRTRID   DC    CL08' '            TRACE ID
         DC    CL04' '
PRDATA1C DC    CL08' '            TRACE DATA1 IN CHARACTER
         DC    CL01' '
PRDATA1H DC    CL16' '            TRACE DATA1 IN HEX
         DC    CL04' '
PRDATA2C DC    CL08' '            TRACE DATA2 IN CHARACTER
         DC    CL01' '
PRDATA2H DC    CL16' '            TRACE DATA2 IN HEX
         DC    CL01' '
PRCURR   DC    CL16' '            CURRENT ENTRY EYECATCHER
STAEM18L EQU   *-STAEM18
STAEM19  DC    AL2(STAEM19L)
         DC    AL2(0)
         DC    C' '
         DC    CL01'*'
         DC    CL54' '
         DC    CL11'COMMON AREA'
         DC    CL53' '
         DC    CL01'*'
STAEM19L EQU   *-STAEM19
STAEM20  MSG   C' '
DITTDUMP DCB   DSORG=PS,          STAE EXIT PRINT DCB                  +
               DDNAME=DITTDUMP,   .. DDNAME                            +
               LRECL=125,         .. RECORD SIZE                       +
               BLKSIZE=1632,      .. BLOCK SIZE                        +
               RECFM=VBA,         .. RECORD FORMAT                     +
               MACRF=PM           .. MACRO FORMAT
         LTORG
TABLE1   DS    0C   0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  X'00'-X'0F'
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  X'10'-X'1F'
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  X'20'-X'2F'
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  X'30'-X'3F'
         DC    XL16'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'  X'40'-X'4F'
         DC    XL16'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F'  X'50'-X'5F'
         DC    XL16'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F'  X'60'-X'6F'
         DC    XL16'4B4B4B4B4B4B4B4B4B797A7B7C7D7E7F'  X'70'-X'7F'
         DC    XL16'4B8182838485868788894B4B4B4B4B4B'  X'80'-X'8F'
         DC    XL16'4B9192939495969798994B4B4B4B4B4B'  X'90'-X'9F'
         DC    XL16'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B'  X'A0'-X'AF'
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  X'B0'-X'BF'
         DC    XL16'C0C1C2C3C4C5C6C7C8C94B4B4B4B4B4B'  X'C0'-X'CF'
         DC    XL16'D0D1D2D3D4D5D6D7D8D94B4B4B4B4B4B'  X'D0'-X'DF'
         DC    XL16'E04BE2E3E4E5E6E7E8E94B4B4B4B4B4B'  X'E0'-X'EF'
         DC    XL16'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'  X'F0'-X'FF'
TABLE2   DS    0C   0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    XL16'40404040404040404040404040404040'  X'00'-X'0F'
         DC    XL16'40404040404040404040404040404040'  X'10'-X'1F'
         DC    XL16'40404040404040404040404040404040'  X'20'-X'2F'
         DC    XL16'40404040404040404040404040404040'  X'30'-X'3F'
         DC    XL16'404040404040404040404A4B4C4D4E4F'  X'40'-X'4F'
         DC    XL16'504040404040404040405A5B5C5D5E5F'  X'50'-X'5F'
         DC    XL16'60614040404040404040406B6C6D6E6F'  X'60'-X'6F'
         DC    XL16'404040404040404040797A7B7C7D7E7F'  X'70'-X'7F'
         DC    XL16'40818283848586878889404040404040'  X'80'-X'8F'
         DC    XL16'40919293949596979899404040404040'  X'90'-X'9F'
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'  X'A0'-X'AF'
         DC    XL16'40404040404040404040404040404040'  X'B0'-X'BF'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'  X'C0'-X'CF'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'  X'D0'-X'DF'
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'  X'E0'-X'EF'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'  X'F0'-X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
*              REGISTER EQUATES                                       *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  REGEQU
* ------------------------------------------------------------------- *
*                                                                     *
*              COMMON MODULE DSECT                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DITTCOMM DITTCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*              DYNAMICALLY ACQUIRED RESOURCE BLOCK                    *
*                                                                     *
* ------------------------------------------------------------------- *
DYNBLOK  DYNBLOK  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*              DCB DSECT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD     DSORG=PS
DYNDCBL  EQU      *-IHADCB
* ------------------------------------------------------------------- *
*                                                                     *
*              PSA DSECT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
*              TCB DSECT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         IKJTCB   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
*              DEB DSECT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZDEB
* ------------------------------------------------------------------- *
*                                                                     *
*              IOB DSECT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZIOB
IOBLEN   EQU   *-IOB
* ------------------------------------------------------------------- *
*                                                                     *
*              DIAGNOSTIC WORK AREA DSECT                             *
*                                                                     *
* ------------------------------------------------------------------- *
         IHASDWA
* ------------------------------------------------------------------- *
*                                                                     *
*              TASK INPUT/OUTPUT TABLE (TIOT)                         *
*                                                                     *
* ------------------------------------------------------------------- *
         DSECT
         IEFTIOT1
         END  DITTSTAE
