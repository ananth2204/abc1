         MACRO
&NAME    MSG   &TEXT
         LCLA  &LEN
&LEN     SETA  (K'&TEXT)-2
&NAME    DS    0C
         DC    AL2(&LEN)           LENGTH OF MESSAGE
         DC    C&TEXT              MESSAGE
         MEND
* ------------------------------------------------------------------- *
*                                                                     *
*              DYNAMIC ALLOCATION ROUTINE  (DAIR) INTERFACE           *
*                                                                     *
*      THIS MODULE INTERFACES WITH THE SYSTEM DYNAMIC ALLOCATION      *
*      ROUTINES (DAIR).  A REQUEST MUST SPECIFY THE TYPE OF ALLOCATE  *
*      (UNIT IS ONLY TYPE SO FAR) AND ASSOCIATED PARAMETERS.          *
*      WHEN A DEVICE IS ALLOCATED, IT IS ADDED TO A CHAIN ANCHORED    *
*      IN 'DITTCOMM'.  THIS MODULE ACQUIRES STORAGE FOR THE DCB,      *
*      IOB, ECB, AND CCW'S.  THIS STORAGE IS MAPPED BY THE 'DYNBLOK'  *
*      DSECT.                                                         *
*                                                                     *
*      ON DE-ALLOCATION REQUESTS THE DYNAMIC BLOCK IS LOCATED ON THE  *
*      CHAIN, THE DCB IS "CLOSED", THE UNIT DE-ALLOCATED, AND THE     *
*      CONTROL BLOCK STORAGE IS FREED.                                *
*                                                                     *
* ------------------------------------------------------------------- *
DITTDAIR DITTPRFX DAIRSAVE,'DYNAMIC ALLOCATION INTERFACE'
         LR    R10,R1              SAVE PARAMETER BLOCK ADDRESS
         USING DAIRBLOK,R10        ADDRESS IT
         USING DITTCOMM,R11        SPECIFY BASE
         DITTRACE ID=ENTRY,        TRACE ENTRY                         +
               DATA1=DAIRCMMD,     .. CAPTURE COMMAND                  +
               DATA2=DAIRCUU       .. CAPTURE CUU
         MVI   DAIRSTAT,$DAIRSOK   CLEAR STATUS BYTE
         TM    DAIRTYPE,$DAIRCUU   UNIT ALLOCATION/DEALLOCATION?
         BNO   DAIR2040            NO... INVALID TYPE
         ICM   R6,15,COMMDYHD      POINT TO HEAD OF CHAIN
         USING DYNBLOK,R6          SPECIFY BASE
DAIR0010 DS    0H
         BZ    DAIR0030            NO DYNAMIC BLOCK FOR THIS CUU
         CLC   DYNCUU,DAIRCUU      CORRECT UNIT?
         BE    DAIR0020            YES
         ICM   R6,15,DYNNEXT       LOAD ADDRESS OF NEXT BLOCK
         B     DAIR0010            LOOP
DAIR0020 DS    0H
         DITTRACE ID=DYNLOC,       DYN BLOCK LOCATED                   +
               RDATA1=R6           CAPTURE DYNBLOK ADDRESS
         CLI   DAIRCMMD,$DAIRACQ   ALLOCATE REQUEST?
         BE    DAIR2050            YES .. ALREADY ALLOCATED
         CLI   DAIRCMMD,$DAIRREL   RELEASE REQUEST
         BE    DAIR0600            YES
         CLI   DAIRCMMD,$DAIRLOC   LOCATE REQUEST?
         BNE   DAIR2010            INVALID REQUEST
         STCM  R6,15,DAIRAREA      RETURN ADDRESS OF DYNAMIC BLOCK
         MVI   DAIRSTAT,$DAIRSOK   GOOD STATUS
         B     DAIR9900            EXIT TO CALLER
DAIR0030 DS    0H
         DITTRACE ID=NODYN         DYN BLOCK NOT LOCATED
         CLI   DAIRCMMD,$DAIRREL   RELEASE REQUEST?
         BE    DAIR2000            YES .. NOT LOCATED
         CLI   DAIRCMMD,$DAIRLOC   LOCATE REQUEST?
         BE    DAIR2000            YES .. NOT LOCATED
         CLI   DAIRCMMD,$DAIRACQ   ALLOCTE REQUEST?
         BNE   DAIR2010            NO .. INVALID REQUEST
         DITTRACE ID=NEWALLOC      TRACE NEW ALLOCATION REQUESTS
         XC    UCBTOKEN,UCBTOKEN   CLEAR THE TOKEN
         XC    UCBWORK,UCBWORK     CLEAR THE WORK AREA TOO
* ------------------------------------------------------------------- *
*                                                                     *
*        LOCATE THE UCB                                               *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0040 DS    0H
         DITTRACE ID=UCBSCAN,                                          +
               DATA1=UCBADDR,                                          +
               DATA2=UCBTOKEN
         SR    R1,R1               'TURN ON' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
         MODESET MODE=SUP,         ENTER SUPERVISOR STATE, KEY ZERO    +
               KEY=ZERO
         UCBSCAN ADDRESS,          LOCATE UCB, RETURN ITS ADDRESS      +
               UCBPTR=UCBADDR,     .. RETURNED ADDRESS                 +
               WORKAREA=UCBWORK,   .. WORK AREA                        +
               DYNAMIC=YES,        .. INCLUDE DYNAMICALLY ADDED        +
               PIN,                .. DON'T LET ANYONE DELETE IT       +
               TEXT=UCBTEXT,       .. REASON FOR PIN                   +
               PTOKEN=UCBTOKEN     .. TOKEN
         LR    R2,R15              SAVE UCBSCAN RC
         DITTRACE ID=UCB_RC,                                           +
               RDATA1=R2
         MODESET MODE=PROB,        PROBLEM STATE, USER KEY             +
               KEY=NZERO
         LA    R1,1                'TURN OFF' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
         LTR   R2,R2               END OF DEVICES?
         BNZ   DAIR2020            YES.. NOT VALID
         ICM   R5,15,UCBADDR       UCB ADDRESS
         USING UCBOB,R5            ADDRESS UCB
         DITTRACE ID=UCB,          TRACE EACH UCB EXAMINED             +
               RDATA1=R5,          .. UCB BLOCK ADDRESS                +
               DATA2=UCBCHAN       .. DEVICE ADDRESS (NAME)
         CLC   DAIRCUU,UCBCHAN     CORRECT DEVICE?
         BNE   DAIR0040            NO
DAIR0050 DS    0H
         DITTRACE ID=UCBLOC,       TRACE UCB HAS BEEN LOCATED          +
               RDATA1=R5,          .. CAPTURE UCB ADDRESS              +
               DATA2=UCBTBYT3      .. CAPTURE UNIT TYPE
DAIR0060 DS    0H
         TM    UCBSTAT,UCBONLI     IS DEVICE ONLINE?
         BNO   DAIR2060            NO
         TM    UCBTBYT3,UCB3DACC   IS THIS A DASD UNIT?
         BO    DAIR0170            YES
         TM    UCBSTAT,UCBALOC     IS DEVICE ALREADY ALLOCATED?
         BO    DAIR2070            YES
         TM    UCBTBYT3,UCB3TAPE   IS THIS A TAPE UNIT?
         BO    DAIR0070            YES
         B     DAIR2030            DEVICE TYPE IS NOT ALLOWED
DAIR0070 DS    0H
         DITTRACE ID=ALOCTAPE      ALLOCATING A TAPE UNIT
         CLI   UCBTBYT4,UCB3480    IS THIS A 3480?
         BE    DAIR0140            YES
         DITTRACE ID=ALOC3420      ALLOCATE REQUESTED FOR A 3420
         TM    COMMPFLG,$COMMDEN   WAS A DENSITY REQUESTED?
         BO    DAIR0100            YES
         TM    UCBTBYT1,UCBD6250   6250 BPI DRIVE?
         BO    DAIR0080            YES
         TM    UCBTBYT2,UCBDUDN2   1600 AND 6250?
         BO    DAIR0080            YES.. GO WITH 6250
         TM    UCBTBYT1,UCBD1600   1600 BPI DRIVE?
         BO    DAIR0090            YES
         TM    UCBTBYT2,UCBDUDN1   800 AND 1600?
         BO    DAIR0090            YES
         DITTRACE ID=UNSP3420      UNSUPPORTED 3420
         MVI   DAIRSTAT,$DAIRSUD   UNSUPPORTED 3420 (NOT 1600 OR 6250)
         B     DAIR9900            AND EXIT
DAIR0080 DS    0H
         DITTRACE ID=DFLT6250      SETTING DENSITY TO 6250 BY DEFAULT
         MVI   COMMDEN,$DEN6250    SET 6250 DENSITY
         B     DAIR0160            ALLOCATE THE DEVICE
DAIR0090 DS    0H
         DITTRACE ID=DFLT1600      SETTING DENSITY TO 1600 BY DEFAULT
         MVI   COMMDEN,$DEN1600    SET 1600 DENSITY
         B     DAIR0160            ALLOCATE THE DEVICE
DAIR0100 DS    0H
         DITTRACE ID=CHECKDEN      CHECK DENSITY
         CLI   COMMDEN,$DEN6250    6250 BPI REQUESTED?
         BE    DAIR0120            YES
         DITTRACE ID=CHK1600       CHECKING 1600
         TM    UCBTBYT1,UCBD1600   1600 BPI DRIVE?
         BO    DAIR0110            YES... VALID REQUEST
         TM    UCBTBYT2,UCBDUDN1   800/1600 BPI DRIVE?
         BO    DAIR0110            YES... VALID REQUEST
         TM    UCBTBYT2,UCBDUDN2   1600/6250 BPI DRIVE?
         BO    DAIR0110            YES... VALID REQUEST
         DITTRACE ID=1600INV       DRIVE WILL NOT ALLOW 1600
         MVI   DAIRSTAT,$DAIRS16   DRIVE WILL NOT ALLOW 1600
         B     DAIR9900            EXIT
DAIR0110 DS    0H
         DITTRACE ID=1600OK        1600 IS A-OK
         MVI   COMMDEN,$DEN1600    SET 1600 BPI
         B     DAIR0160            ALLOCATE THE DRIVE
DAIR0120 DS    0H
         DITTRACE ID=CHK6250       CHECKING 6250
         TM    UCBTBYT1,UCBD6250   6250 BPI DRIVE?
         BO    DAIR0130            YES... VALID REQUEST
         TM    UCBTBYT2,UCBDUDN2   1600/6250 BPI DRIVE?
         BO    DAIR0130            YES.. VALID REQUEST
         DITTRACE ID=6250INV       DRIVE WILL NOT ALLOW 6250
         MVI   DAIRSTAT,$DAIRS62   DRIVE WILL NOT ALLOW 6250
         B     DAIR9900            EXIT
DAIR0130 DS    0H
         DITTRACE ID=6250OK        6250 IS A-OK
         MVI   COMMDEN,$DEN6250    SET DENSITY TO 6250
         B     DAIR0160            ALLOCATE THE DRIVE
DAIR0140 DS    0H
         DITTRACE ID=ALOC3480
         TM    COMMPFLG,$COMMDEN   WAS DENSITY SPECIFIED?
         BNO   DAIR0150            NO.. GOOD (NOT ALLOWED ON 3480'S)
         MVI   DAIRSTAT,$DAIRSD1   DENSITY MAY NOT BE SPECIFIED
         B     DAIR9900            EXIT
DAIR0150 DS    0H
         DITTRACE ID=3480OK        3480 DENSITY OK
         MVI   COMMDEN,$DEN3480    SET 3480 DENSITY
* ------------------------------------------------------------------- *
*                                                                     *
*       CONSTRUCT SVC99 PARAMETER LIST FOR TAPE ALLOCATION            *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0160 DS    0H
         DITTRACE ID=TAPE99
         MVC   SVC99DDN(4),DAIRTAPE MOVE 'TAPE'
         UNPK  COMMDWRD(5),DAIRCUU(3) UNPACK CUU
         MVZ   COMMDWRD(4),DAIR0F0F   TURN OFF ZONES
         TR    COMMDWRD(4),DAIRHXCH   TRANSLATE TO CHARACTER
         MVC   SVC99DDN+4(4),COMMDWRD MOVE UNPACKED CUU
         MVC   SVC99DSN,COMMBLKS      INITIALIZE DATASET NAME
         MVC   SVC99DSN(L'SVC99DDN),SVC99DDN
         MVC   SVC99UTX,COMMBLKS   INITIALIZE UNIT NAME
         MVC   SVC99UTX(3),COMMDWRD+1 MOVE CUU TO 'UNIT'
         MVI   SVC99STT,4          INITIAL STATUS 'NEW'
         XC    SVC99P1A(SVC99PL),SVC99P1A
         LA    R1,SVC99RB          DYNALLOC REQUEST BLOCK
         USING S99RB,R1            DEFINE DSECT BASE
         MVI   S99VERB,S99VRBAL    MOVE 'ALLOCATE' VERB
         LA    R1,SVC99DD          DD NAME ADDRESS
         ST    R1,SVC99P1A         STORE THE ADDRESS
         LA    R1,SVC99DS          DSN NAME ADDRESS
         ST    R1,SVC99P2A         STORE THE ADDRESS
         LA    R1,SVC99UT          UNIT NAME ADDRESS
         ST    R1,SVC99P3A         STORE THE ADDRESS
         LA    R1,SVC99ST          INITIAL STATUS (NEW)
         ST    R1,SVC99P4A         STORE THE ADDRESS
         LA    R1,SVC99DP          NORMAL TERMINATION DISP (KEEP)
         ST    R1,SVC99P5A         STORE THE ADDRESS
         LA    R1,SVC99DFP         DEFERRED MOUNT
         ST    R1,SVC99P6A         STORE THE ADDRESS
         OI    SVC99P6A,X'80'      SET END OF LIST
         BAL   R9,DAIR1000         LINK TO SVC99 ROUTINE
         CLI   DAIRSTAT,$DAIRSOK   SVC99 A-OK?
         BE    DAIR0180            YES, CONTINUE
         DITTRACE ID=TAPEFAIL      TRACE TAPE ALLOCATION FAILURE
         B     DAIR9900            GO TO ERROR ROUTINE
* ------------------------------------------------------------------- *
*                                                                     *
*       CONSTRUCT SVC99 PARAMETER LIST FOR DASD ALLOCATION            *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0170 DS    0H
         DITTRACE ID=DASD99
         TM    COMMPFLG,$COMMDEN   WAS A DENSITY REQUESTED?
         BO    DAIR2080            YES.. NOT ALLOWED ON DASD
         UNPK  COMMDWRD(5),DAIRCUU(3) UNPACK CUU
         MVZ   COMMDWRD(4),DAIR0F0F   TURN OFF ZONES
         TR    COMMDWRD(4),DAIRHXCH   TRANSLATE TO CHARACTER
         MVC   SVC99DDN(4),DAIRDASD MOVE 'DASD'
         MVC   SVC99DDN+4(4),COMMDWRD MOVE UNPACKED CUU
         MVC   SVC99UTX,SYSALLDA   SET UNIT NAME
         MVC   SVC99VLX,UCBVOLI    SET VOLSER
         MVI   SVC99STT,1          INITIAL STATUS 'OLD'
         XC    SVC99P1A(SVC99PL),SVC99P1A
         LA    R1,SVC99RB          DYNALLOC REQUEST BLOCK
         USING S99RB,R1            DEFINE DSECT BASE
         MVI   S99VERB,S99VRBAL    MOVE 'ALLOCATE' VERB
         LA    R1,SVC99DD          DD NAME ADDRESS
         ST    R1,SVC99P1A         STORE THE ADDRESS
         LA    R1,SVC99UT          UNIT NAME ADDRESS
         ST    R1,SVC99P2A         STORE THE ADDRESS
         LA    R1,SVC99VOL         VOLSER ADDRESS
         ST    R1,SVC99P3A         STORE THE ADDRESS
         LA    R1,SVC99ST          INITIAL STATUS (OLD)
         ST    R1,SVC99P4A         STORE THE ADDRESS
         OI    SVC99P4A,X'80'      SET END OF LIST
         BAL   R9,DAIR1000         LINK TO SVC99 ROUTINE
         CLI   DAIRSTAT,$DAIRSOK   SVC99 A-OK?
         BE    DAIR0180            YES, CONTINUE
         DITTRACE ID=DASDFAIL      TRACE DASD ALLOCATION FAILURE
         B     DAIR9900            GO TO ERROR ROUTINE
* ------------------------------------------------------------------- *
*                                                                     *
*        INITIALIZE DYNAMIC BLOCK                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0180 DS    0H
         DITTRACE ID=UNITOK        TRACE SUCESSFUL DAIR CALLS
         LA    R1,COMMDYHD         SAVE LAST BLOCK ADDRESS
         ICM   R6,15,COMMDYHD      HEAD OF CHAIN
DAIR0190 DS    0H
         BZ    DAIR0200            END OF CHAIN FOUND
         LR    R1,R6               SAVE LAST BLOCK ADDRESS
         ICM   R6,15,DYNNEXT       NEXT BLOCK
         B     DAIR0190            LOOP
DAIR0200 DS    0H
         LR    R6,R1               RESTORE BASE REG
         LA    R0,DYNBLOKL         LENGTH OF DYNAMIC BLOCK
         GETMAIN R,LV=(0)          ACQUIRE STORAGE FOR DYNAMIC BLOCK
         DITTRACE ID=DYNGETM,      TRACE DYNAMIC BLOCK ACQUIRED        +
               RDATA1=R2           .. SAVE DYNBLOCK ADDRESS
         LR    R2,R1               SAVE STORAGE ADDRESS
         LR    R0,R1               COPY STORAGE ADDRESS
         LA    R1,DYNBLOKL         STORAGE SIZE
         SR    R15,R15             SECOND LENGTH = 0
         MVCL  R0,R14              CLEAR THE STORAGE
         ST    R2,DYNNEXT          CHAIN TO NEXT BLOCK
         DROP  R6
         USING DYNBLOK,R2          SWAP BASE
         ST    R6,DYNPREV          CHAIN BACKWARD
         LR    R6,R2               LOAD PERM BASE REG
         STCM  R6,15,DAIRAREA      PASS BLOCK ADDRESS BACK
         DROP  R2
         USING DYNBLOK,R6          RESTORE BASE
         GETMAIN RU,LV=128         ACQUIRE STORAGE FOR DEB
         ST    R1,DYNDEBA          SAVE DEB STORAGE ADDRESS
         LR    R7,R1               SAVE DEB STORAGE ADDRESS
         DITTRACE ID=DEBGETM,      TRACE DEB STORAGE ACQUIRED          +
               RDATA1=R7           .. SAVE STORAGE ADDRESS
         LA    R3,DYNIOB           IOB IN DYNAMIC BLOCK
         LA    R4,DYNDCB           DCB IN DYNAMIC BLOCK
* ------------------------------------------------------------------- *
*                                                                     *
*          REGISTERS AT THIS TIME:                                    *
*                                                                     *
*             R3  IOB STORAGE WITHIN DYNAMIC BLOCK                    *
*             R4  DCB STORAGE WITHIN DYNAMIC BLOCK                    *
*             R5  UCB ADDRESS OF DEVICE ALLOCATED                     *
*             R6  DYNAMIC BLOCK ADDRESS                               *
*             R7  DEB STORAGE ADDRESS                                 *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   DYNCUU,DAIRCUU      MOVE CUU
         MVC   DYNVOL,UCBVOLI      COPY VOLSER
* ------------------------------------------------------------------- *
*           INITIALIZE IOB                                            *
* ------------------------------------------------------------------- *
         USING IOB,R3
         USING IHADCB,R4                DEFINE BASE
         USING DEB,R7
         MVI   IOBFLAG1,X'02'      SET FLAG BYTE 1
         ST    R4,IOBDCBPT         SET DCB ADDRESS
* ------------------------------------------------------------------- *
*           INITIALIZE DCB                                            *
* ------------------------------------------------------------------- *
         TM    UCBTBYT3,UCB3DACC   DASD UNIT?
         BO    DAIR0210            YES
         MVC   DYNDCB(DYNDCBL),TAPEDCB  INITIALIZE THE DCB
         B     DAIR0220
DAIR0210 DS    0H
         MVC   DYNDCB(DYNDCBL),DASDDCB  INITIALIZE THE DCB
DAIR0220 DS    0H
         MVC   DCBDDNAM,SVC99DDN   SET DDNAME USED
         MVC   DYNDDNAM,SVC99DDN   SET DDNAME USED
         LA    R1,DEBBASIC         DEB BASIC SECTION ADDRESS
         ST    R1,DCBDEBAD         INSERT DEB ADDRESS
         ST    R3,DCBIOBA          INSERT IOB ADDRESS
         MVC   DCBMACRF,DCBMACR    COPY DCB MACRO FORMAT PARAMETERS
         MVC   DCBIFLGS,DCBIFLG    COPY I/O ERROR FLAGS
         OI    DCBOFLGS,DCBOFOPN   INDICATE DCB IS OPEN
* ------------------------------------------------------------------- *
*           INITIALIZE DEB                                            *
* ------------------------------------------------------------------- *
         XC    DEBPREFX(DEBPREFE-DEBPREFX),DEBPREFX  CLEAR PREFIX
         XC    DEBBASIC(DEBBASND-DEBBASIC),DEBBASIC  CLEAR BASIC
         USING PSA,R0              DEFINE PSA BASE
         MVC   DEBTCBAD,PSATNEW    SET TCB ADDRESS
         MVI   DEBAMLNG,16         SET ACCESS METHOD SECTION LENGTH
         MVI   DEBOFLGS,DEBDSOLD   DISPOSITION 'OLD'
         MVI   DEBOPATB,DEBLEAVE+DEBOUTPT
         MVI   DEBNMEXT,1          SET NUMBER OF EXTENTS
         MVI   DEBPRIOR,X'EB'      SET PRIORITY
         ST    R4,DEBDCBAD         INSERT ASSOCIATED DCB ADDRESS
         MVI   DEBDEBID,X'0F'      IDENTIFY THIS AS A DEB
         ST    R5,DEBSUCBA         UCB ASSOCIATED
         L     R1,CVTPTR           CVT ADDRESS
         USING CVT,R1              DEFINE CVT BASE
         MVC   DEBAPPAD,CVTXAPG    SET I/O APPENDAGE VECTOR TABLE ADDR
         TM    UCBTBYT3,UCB3DACC   DASD UNIT?
         BO    DAIR0230            YES
         MVC   DEBSDVM,COMMDEN     SET DENSITY
         B     DAIR0240
DAIR0230 DS    0H
         MVI   DEBEXSCL,4          SET EXTENT SCALE
         LA    R1,DEBBASND         DASD EXTENTION TO DEB
         USING DEBDASD,R1          DEFINE BASE
         XC    DEBDASD(DEBDASDE-DEBDASD),DEBDASD
         MVI   DEBDVMOD,X'D8'      SET FILE MASK
         STCM  R5,7,DEBUCBA        SET UCB ADDRESS
         MVC   DEBENDCC,XFFFF      SET TO HIGH VALUE
         MVC   DEBNMTRK,XFFFF      SET TO HIGH VALUE
* ------------------------------------------------------------------- *
*           ADD DEB TO DEBCHAIN FROM TCB AND TO DEBTABLE              *
* ------------------------------------------------------------------- *
DAIR0240 DS    0H
         AGO   .A
         DITTRACE ID=ADDDEB        ADDING DEB TO DEBTABLE
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BNE   DAIR0250            NO
         SR    R1,R1               'TURN ON' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
DAIR0250 DS    0H
         MODESET MODE=SUP,KEY=ZERO SWITCH TO SUPERVISOR STATE, KEY ZERO
         USING PSA,R0              DEFINE PSA BASE
         L     R1,PSATNEW          OUR TCB ADDRESS FROM THE PSA
         USING TCB,R1              DEFINE BASE
         L     R15,TCBDEB          FIRST DEB ON DEB CHAIN
         LA    R2,DEBBASIC         'BASIC' PORTION OF DEB
DAIR0260 DS    0H
         STCM  R15,7,DEBDEBB       INSERT PREVIOUS ADDRESS INTO OUR DEB
         CS    R15,R2,TCBDEB       ADD OUR DEB TO CHAIN
         BNE   DAIR0260            UNSUCCESSFUL... TRY AGAIN
         DEBCHK (R4),              USE DEBCHK (REFERENCE DCB NOT DEB)  +
               AM=EXCP,            .. EXCP ACCESS METHOD               +
               TYPE=ADD            .. ADD A DEB TO DEBTABLE
         LR    R2,R15              SAVE RETURN CODE
         MODESET MODE=PROB,KEY=NZERO    PROBLEM STATE, PROBLEM KEY
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BNE   DAIR0270            NO
         LA    R1,1                'TURN OFF' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
DAIR0270 DS    0H
         DITTRACE ID=DEBCHK,       TRACE DEBCHK STATUS                 +
               RDATA1=R2           .. SAVE RETURN CODE
         LTR   R2,R2               DEBCHK SUCCESFUL?
         BNZ   DAIR0330            NO
         DITTRACE ID=DEBDONE       TRACE SUCCESSFUL COMPLETION
.A       ANOP
         CLC   DAIRDASD,DYNDDNAM   DASD?
         BE    DAIR0320
         CLI   COMMDEN,$DEN1600    1600 BPI?
         BE    DAIR0280            YES
         CLI   COMMDEN,$DEN6250    6250 BPI?
         BE    DAIR0300            YES
         B     DAIR9900            EXIT
DAIR0280 DS    0H
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BE    DAIR0290            YES
         MVC   PRTDATA(DAIRM01L),DAIRM01
         BAL   R14,PRT0000         PRINT DENSITY MESSAGE
         CLI   COMMENV,$ENVJOB     RUNNING AS A JOB?
         BE    DAIR9900            YES
         WTO   'DRIVE ALLOCATED WITH DENSITY 1600 BPI',                +
               CONSNAME=COMMCNAM
         B     DAIR9900            EXIT
DAIR0290 DS    0H
         MVC   MSG01(DAIRM01L),DAIRM01 MOVE MESSAGE
         B     DAIR9900            AND EXIT
DAIR0300 DS    0H
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BE    DAIR0310            YES
         MVC   PRTDATA(DAIRM02L),DAIRM02
         BAL   R14,PRT0000         PRINT DENSITY MESSAGE
         CLI   COMMENV,$ENVJOB     RUNNING AS A JOB?
         BE    DAIR9900            YES
         WTO   'DRIVE ALLOCATED WITH DENSITY 6250 BPI',                +
               CONSNAME=COMMCNAM
         B     DAIR9900            EXIT
DAIR0310 DS    0H
         MVC   MSG01(DAIRM02L),DAIRM02 MOVE MESSAGE
         B     DAIR9900            AND EXIT
* ------------------------------------------------------------------  *
*    CALL DASD MODULE TO INTIALIZE VOLSER AND MAX CYLINDER AND HEAD.  *
*                                                                     *
*    NOTE ALSO THAT AT THIS TIME, DAIR WILL HAVE BEEN CALLED BY       *
*    'DITTALOC' WHILE 'DITTALOC' IS RUNNING AS THE INPUT MODULE AND   *
*    ONLY WHEN THE 'FIRST PASS' FLAG IS ON.  WHEN 'FIRST PASS' FLAG   *
*    IS ON AND THE VOLSER IN THE DYNBLOCK IS BLANK, 'DITTDAI1' ONLY   *
*    DOES THE INITIALIZATION PORTION OF ITS PROCESSING.               *
*                                                                     *
* ------------------------------------------------------------------  *
DAIR0320 DS    0H
         ST    R6,COMMIND          SET DYNAMIC BLOCK ADDRESS FOR 'DAI1'
         L     R15,ADAI1           DASD READER ENTRY POINT
         BALR  R14,R15             LINK TO DASD MODULE FOR INITIALIZE
         B     DAIR9900            AND EXIT
DAIR0330 DITTRACE ID=DEBAFAIL,     TRACE DEB ADD FAILURES              +
               RDATA1=R2           .. CAPTURE DEBCHK RETURN CODE
         ABEND ABEND015,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
*              RELEASE DYNAMICALLY ALLOCATED RESOURCES                *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0600 DS    0H
         DITTRACE ID=UNITFREE      TRACE DE-ALLOCATIONS
DAIR0610 DS    0H
         LA    R4,DYNDCB           DCB FOR THIS UNIT
         USING IHADCB,R4           DEFINE DSECT BASE
         AGO   .B
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BNE   DAIR0620            NO
         SR    R1,R1               'TURN ON' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
DAIR0620 DS    0H
         MODESET MODE=SUP,KEY=ZERO SWITCH TO SUPERVISOR STATE, KEY ZERO
         DEBCHK (R4),              USE DEBCHK (REFERENCE DCB NOT DEB)  +
               TYPE=DELETE         .. TO DELETE THE DEB FROM DEBTABLE
         LR    R2,R15              SAVE RETURN CODE
         DITTRACE ID=DEBDEL,       TRACE DEB DELETIONS                 +
               RDATA1=R2           .. CAPTURE RETURN CODE
         LTR   R2,R2               DEBCHK SUCCESSFUL?
         BNZ   DAIR0710            NO
DAIR0630 DS    0H
         L     R7,DYNDEBA          DEB ADDRESS IN THIS DYN BLOCK
         LA    R2,DEBBASIC         BASIC PORTION OF DEB
         L     R1,PSATNEW          CURRENT TCB ADDRESS FROM PSA
         USING TCB,R1              DEFINE DCB BASE
         SR    R3,R3               CLEAR REGISTER
         ICM   R3,7,TCBDEB+1       1ST DEB ON DEB CHAIN
         LA    R4,TCBDEB           ADDRESS'S ADDRESS
DAIR0640 DS    0H
         DITTRACE ID=DAIR0640,     TRACE POINT                         +
               RDATA1=R3,          .. SAVE DEB'S ADDRESS               +
               RDATA2=R4           .. SAVE ADDRESS'S ADDRESS
         CR    R3,R2               IS THIS THE CORRECT DEB?
         BE    DAIR0660            YES
         LA    R4,DEBDEBAD-DEBBASIC(R3)   NEXT DEB ADDRESS ADDRESS
         ICM   R3,7,DEBDEBB-DEBBASIC(R3)  NEXT DEB
         BNZ   DAIR0640            CHECK AGAIN
         MODESET MODE=PROB,KEY=NZERO
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BNE   DAIR0650            NO
         LA    R1,1                'TURN OFF' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
DAIR0650 DS    0H
         DITTRACE ID=LOSTDEB       COULDN'T FIND THE DEB
         ABEND ABEND016,DUMP,,USER
DAIR0660 DS    0H
         ICM   R2,7,DEBDEBB        NEXT DEB ON CHAIN
         ICM   R2,8,0(R4)          SAVE ACCESS METHOD SECTION LENGTH
         ICM   R3,15,0(R4)         CS WILL USE ALL 4 BYTES
         DITTRACE ID=DAIR0660,     TRACE POINT                         +
               RDATA1=R2,          .. 'NEXT' DEB'S ADDRESS             +
               RDATA2=R3           .. 'DEBDEBAD' IN PREVIOUS DEB
         CS    R3,R2,0(R4)         REMOVE DEB FROM DEB CHAIN
         BNE   DAIR0630            SOMETHING CHANGED, TRY AGAIN
         MODESET MODE=PROB,        RETURN TO OUR NORMAL SELF           +
               KEY=NZERO
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BNE   DAIR0670            NO
         LA    R1,1                'TURN OFF' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
.B       ANOP
DAIR0670 DS    0H
         L     R1,DYNDEBA          DEB STORAGE ADDRESS
         FREEMAIN R,               FREE DEB STORAGE                    +
               A=(1),                                                  +
               LV=128
         LA    R1,SVC99RB          DYNALLOC REQUEST BLOCK
         USING S99RB,R1            DEFINE DSECT BASE
         MVI   S99VERB,S99VRBUN    MOVE 'DE-ALLOCATE' VERB
         MVC   SVC99DDN,DYNDDNAM   MOVE DD NAME
         XC    SVC99P1A(SVC99PL),SVC99P1A
         LA    R1,SVC99DD          DD NAME ADDRESS
         ST    R1,SVC99P1A         STORE THE ADDRESS
         OI    SVC99P1A,X'80'      SET END OF LIST
         BAL   R9,DAIR1000         INVOKE DYNAMIC ALLOCATION ROUTINES
         CLI   DAIRSTAT,$DAIRSOK   DAIR SUCCESSFUL?
         BE    DAIR0680            YES, CONTINUE
         DITTRACE ID=RELFAIL       TRACE DE-ALLOCATION FAILURE
         OI    COMMFLAG,$ABEND     SIGNAL ABEND REQUEST
         B     DAIR9900            EXIT
DAIR0680 DS    0H
         ICM   R1,15,DYNNEXT       'FWD' POINTER
         BZ    DAIR0690            NO 'FWD' POINTER
         MVC   4(4,R1),DYNPREV     RECHAIN-BWD
DAIR0690 DS    0H
         ICM   R1,15,DYNPREV       'BWD' POINTER
         BZ    DAIR0700            NO 'BWD' POINTER
         MVC   0(4,R1),DYNNEXT     RE-CHAIN FWD
DAIR0700 DS    0H
         LA    R0,DYNBLOKL         LENGTH OF DYNAMIC BLOCK
         FREEMAIN R,               FREE THE STORAGE                    +
               A=(R6),                                                 +
               LV=(0)
         B     DAIR9900            EXIT TO CALLER
DAIR0710 DS    0H
         MODESET MODE=PROB,        RETURN TO OUR NORMAL SELF           +
               KEY=NZERO
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BNE   DAIR0720            NO
         LA    R1,1                'TURN OFF' REQUEST
         L     R15,AAUTH           DITTAUTH ENTRY POINT
         BALR  R14,R15             LINK TO DITTAUTH
DAIR0720 DS    0H
         DITTRACE ID=DEBDFAIL,     TRACE DEB DELETE FAILURES           +
               RDATA1=R2           .. CAPTURE DEBCHK RETURN CODE
         ABEND ABEND017,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
*              INVOKE DYNAMIC ALLOCATION ROUTINES                     *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR1000 DS    0H
         OI    SVC99PTR,X'80'      ENSURE BIT IS SET
         LA    R1,SVC99RB          REQUEST BLOCK
         MVI   S99RBLN,S99RBEND-S99RB ZAP IN LENGTH
         LA    R15,SVC99P1A        DD NAME ADDRESS ADDRESS
         ST    R15,S99TXTPP        STORE IN REQUEST BLOCK
         DITTRACE ID=CALLDAIR,     TRACE CALL TO DAIR                  +
               DATA1=SVC99PTR      .. CAPTURE DAIR RB POINTER ADDRESS
         LA    R1,SVC99PTR         POINTER ADDRESS
         DYNALLOC                  INVOKE DAIR ROUTINES
         STCM  R15,15,DAIRR15      SAVE RETURN CODE
         LA    R1,SVC99RB          REQUEST BLOCK
         USING S99RB,R1            DEFINE DSECT BASE
         MVC   DAIRERR,S99ERROR    MOVE ERROR CODE
         MVC   DAIRINFO,S99INFO    MOVE REASON CODE
         DITTRACE ID=DAIRRC,       TRACE DAIR RETURN                   +
               RDATA1=R15,         .. SAVE R15                         +
               DATA2=DAIRERR       .. REASON FOR VALUE IN R15
         LTR   R15,R15             DAIR SUCCESSFUL?
         BZR   R9                  YES
         MVI   DAIRSTAT,$DAIRSDE   INDICATE ERROR FROM DAIR CALL
         L     R15,ACLASS2         CLASS 2 MESSAGE TABLE
         CLI   DAIRERR,X'02'       CLASS 2 ERROR?
         BE    DAIR1010            YES
         L     R15,ACLASS3         CLASS 3 MESSAGE TABLE
         CLI   DAIRERR,X'03'       CLASS 3 ERROR?
         BE    DAIR1010            YES
         L     R15,ACLASS4         CLASS 4 MESSAGE TABLE
         CLI   DAIRERR,X'04'       CLASS 4 ERROR?
         BNER  R9                  NO
DAIR1010 DS    0H
         OI    COMMFLAG,$ABORT     TURN ON ABORT FLAG
         SR    R14,R14             CLEAR REGISTER
         IC    R14,DAIRERR+1       MESSAGE DISP
         AR    R15,R14             MESSAGE ADDRESS POINTER
         L     R14,0(R15)          MESSAGE BLOCK ADDRESS
         USING MSGDSECT,R14        DEFINE DSECT BASE
         LH    R15,MSGMSGL         MESSAGE LENGTH
         BCTR  R15,0               ADJUST LENGTH
         EX    R15,PRTMSGM         MOVE MESSAGE TO PRINT
         CLI   COMMENV,$ENVTSO     TSO ENVIRONMENT?
         BE    DAIR1020            YES
         MVI   PRTCC,C' '          CARRIAGE CONTROL
         BAL   R14,PRT0000         LINK TO PRINT MODULE
         BR    R9                  RETURN
DAIR1020 DS    0H
         EX    R15,TSOMSGM         MOVE MESSAGE
         BR    R9                  RETURN
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              ERROR CONDITIONS                                       *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR2000 DS    0H
         MVI   DAIRSTAT,$DAIRSLE   UNSUCCESSFUL LOCATE ON REL/LOC
         B     DAIR9900            EXIT
DAIR2010 DS    0H
         MVI   DAIRSTAT,$DAIRSIR   INVALID REQUEST
         B     DAIR9900            EXIT
DAIR2020 DS    0H
         MVI   DAIRSTAT,$DAIRSNU   UNIT DOES NOT EXIST (ALLOCATE)
         B     DAIR9900            EXIT
DAIR2030 DS    0H
         MVI   DAIRSTAT,$DAIRSTE   INVALID DEVICE TYPE
         B     DAIR9900            EXIT
DAIR2040 DS    0H
         OI    COMMFLAG,$ABORT     SET ABORT FLAG
         MVI   DAIRSTAT,$DAIRSRE   INVALID RESOURCE TYPE
         B     DAIR9900            EXIT
DAIR2050 DS    0H
         MVI   DAIRSTAT,$DAIRSDP   SECOND ALLOCATE FOR SAME DEVICE
         B     DAIR9900            EXIT
DAIR2060 DS    0H
         MVI   DAIRSTAT,$DAIRSOF   DEVICE OFFLINE
         B     DAIR9900            EXIT
DAIR2070 DS    0H
         MVI   DAIRSTAT,$DAIRSAL   DEVICE ALREADY ALLOCATED
         B     DAIR9900            EXIT
DAIR2080 DS    0H
         MVI   DAIRSTAT,$DAIRSD2   DENSITY NOT ALLOWED ON DASD
         B     DAIR9900            EXIT
PRT0000  DS    0H
         ST    R14,PRTSAVE         SAVE R14
         MVI   PRTCMMD,$PRTCMD     REQUEST PRINT
         LA    R1,PRTBLOK          PRINT INTERFACE BLOCK
         L     R15,APRT            PRINT MODULE ENTRY POINT
         BALR  R14,R15             LINK TO PRINT MODULE
         L     R14,PRTSAVE         RESTORE R14
         BR    R14                 RETURN
DAIR9900 DS    0H
         DITTRACE ID=EXIT          TRACE
         L     R13,4(R13)          RESTORE REGISTER 13                  ASE01670
         LM    R14,R12,12(R13)     RESTORE ALL OTHER REGISTERS          ASE01680
         SR    R15,R15             GIVE GOOD RETURN CODE                ASE01690
         BR    R14                 RETURN TO CALLER                     ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*              EXECUTED INSTRUCTIONS                                  *
*                                                                     *
* ------------------------------------------------------------------- *
PRTMSGM  MVC   PRTDATA(0),MSGMSG   MOVE MESSAGE TO PRINT AREA
TSOMSGM  MVC   MSG01(0),MSGMSG     MOVE MESSAGE TO PRINT AREA
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CONSTANTS                                              *
*                                                                     *
* ------------------------------------------------------------------- *
DAIRTAPE DC    C'TAPE'
DAIRDASD DC    C'DASD'
SYSALLDA DC    C'SYSALLDA'
DAIR0F0F DC    16X'0F'
DAIRHXCH DC    C'0123456789ABCDEF'
XFFFF    DC    X'FFFF'
UCBTEXT  DC    CL58'PINNED BY DITTO'
         SPACE 2
* ------------------------------------------------------------------- *
*                                                                     *
*              WORK AREAS                                             *
*                                                                     *
* ------------------------------------------------------------------- *
DAIRSAVE DC    18F'0'                  REGISTER SAVE AREA
PRTSAVE  DC    A(0)                    R14 SAVED DURING 'PRT0000'
ACLASS2  DC    A(CLASS2)               CLASS '2' ERROR MESSAGES
ACLASS3  DC    A(CLASS3)               CLASS '3' ERROR MESSAGES
ACLASS4  DC    A(CLASS4)               CLASS '4' ERROR MESSAGES
UCBADDR  DC    A(0)                    UCB ADDRESS
UCBTOKEN DC    8X'00'
         DC    CL16'DAIR PARM BLOCK'
SVC99PTR DC    A(X'80000000'+SVC99RB)  DYNALLOC POINTER
SVC99RB  DC    (S99RBEND-S99RB)X'00'   DYNALLOC REQUEST BLOCK
SVC99P1A DC    A(0)                    DAIR TEXT UNIT ADDRESSES
SVC99P2A DC    A(0)
SVC99P3A DC    A(0)
SVC99P4A DC    A(0)
SVC99P5A DC    A(0)
SVC99P6A DC    A(0)
SVC99P7A DC    A(0)
SVC99P8A DC    A(0)
SVC99P9A DC    A(0)
SVC99PL  EQU   *-SVC99P1A              PARAMETER LIST LENGTH
SVC99DD  DC    AL2(DALDDNAM)           KEY FOR DATASET NAME
         DC    AL2(0001)               NUMBER OF LENGTH/ENTRIES
         DC    AL2(8)                  LENGTH OF ENTRY
SVC99DDN DC    CL8'TAPEXXX '           DATASET NAME
SVC99DS  DC    AL2(DALDSNAM)           KEY FOR DATASET NAME
         DC    AL2(0001)               NUMBER OF LENGTH/ENTRIES
         DC    AL2(44)                 LENGTH OF ENTRY
SVC99DSN DC    CL44'TAPEXXX'           DATASET NAME
SVC99UT  DC    AL2(DALUNIT)            KEY FOR UNIT
         DC    AL2(0001)               NUMBER OF LENGTH/ENTRIES
         DC    AL2(8)                  LENGTH OF ENTRY
SVC99UTX DC    CL8' '                  UNIT
SVC99ST  DC    AL2(DALSTATS)           KEY FOR STATUS
         DC    AL2(0001)               NUMBER OF LENGTH/ENTRIES
         DC    AL2(1)                  LENGTH OF ENTRY
SVC99STT DC    X'04'                   STATUS -NEW-
SVC99DP  DC    AL2(DALNDISP)           KEY FOR STATUS
         DC    AL2(0001)               NUMBER OF LENGTH/ENTRIES
         DC    AL2(1)                  LENGTH OF ENTRY
SVC99DSP DC    X'08'                   NORMAL DISPOSITION -KEEP-
SVC99DFP DC    AL2(DALDEFER)           KEY FOR DEFERRED MOUNT
         DC    AL2(0000)               NUMBER OF LENGTH/ENTRIES
SVC99VOL DC    AL2(DALVLSER)           KEY FOR VOLSER
         DC    AL2(0001)               NUMBER OF LENGTH/ENTRIES
         DC    AL2(6)                  LENGTH OF ENTRY
SVC99VLX DC    CL6' '                  VOLSER
         SPACE 2
TAPEDCB  DCB   MACRF=EXCP,             MODEL TAPE DCB                  +
               DDNAME=TAPEXXXX,                                        +
               DEVD=TA,                                                +
               DSORG=PS
DASDDCB  DCB   MACRF=EXCP,             MODEL DASD DCB                  +
               DDNAME=DASDXXXX,                                        +
               DEVD=DA,                                                +
               DSORG=PS
DAIRM01  DC    C'DRIVE ALLOCATED WITH DENSITY 1600 BPI'
DAIRM01L EQU   *-DAIRM01
DAIRM02  DC    C'DRIVE ALLOCATED WITH DENSITY 6250 BPI'
DAIRM02L EQU   *-DAIRM02
UCBWORK  DC    XL100'00'
* ------------------------------------------------------------------- *
*                                                                     *
*              PRINTER INTERFACE BLOCK                                *
*                                                                     *
* ------------------------------------------------------------------- *
PRTBLOK  PRTBLOK
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CLASS 2 DYNAMIC ALLOCATION MESSAGES ADCONS             *
*                                                                     *
* ------------------------------------------------------------------- *
CLASS2   DS   0A
         DC   A(0)                UNUSED
         DC   A(E0204)            ADDRESS OF MESSAGE FOR CODE '0204'
         DC   A(E0208)            ADDRESS OF MESSAGE FOR CODE '0208'
         DC   A(E020C)            ADDRESS OF MESSAGE FOR CODE '020C'
         DC   A(E0210)            ADDRESS OF MESSAGE FOR CODE '0210'
         DC   A(E0214)            ADDRESS OF MESSAGE FOR CODE '0214'
         DC   A(E0218)            ADDRESS OF MESSAGE FOR CODE '0218'
         DC   A(E021C)            ADDRESS OF MESSAGE FOR CODE '021C'
         DC   A(E0220)            ADDRESS OF MESSAGE FOR CODE '0220'
         DC   A(E0224)            ADDRESS OF MESSAGE FOR CODE '0224'
         DC   A(E0228)            ADDRESS OF MESSAGE FOR CODE '0228'
         DC   A(E022C)            ADDRESS OF MESSAGE FOR CODE '022C'
         DC   A(E0230)            ADDRESS OF MESSAGE FOR CODE '0230'
         DC   A(E0234)            ADDRESS OF MESSAGE FOR CODE '0234'
         DC   A(E0238)            ADDRESS OF MESSAGE FOR CODE '0238'
         DC   A(E023C)            ADDRESS OF MESSAGE FOR CODE '023C'
         DC   A(E0240)            ADDRESS OF MESSAGE FOR CODE '0240'
         DC   A(E0244)            ADDRESS OF MESSAGE FOR CODE '0244'
         DC   A(E0248)            ADDRESS OF MESSAGE FOR CODE '0248'
         DC   A(E024C)            ADDRESS OF MESSAGE FOR CODE '024C'
         DC   A(E0250)            ADDRESS OF MESSAGE FOR CODE '0250'
         DC   A(E0254)            ADDRESS OF MESSAGE FOR CODE '0254'
         DC   A(E0258)            ADDRESS OF MESSAGE FOR CODE '0258'
         DC   A(E025C)            ADDRESS OF MESSAGE FOR CODE '025C'
         DC   A(E0260)            ADDRESS OF MESSAGE FOR CODE '0260'
         DC   A(E0264)            ADDRESS OF MESSAGE FOR CODE '0264'
         DC   A(E0268)            ADDRESS OF MESSAGE FOR CODE '0268'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CLASS 3 DYNAMIC ALLOCATION MESSAGES ADCONS             *
*                                                                     *
* ------------------------------------------------------------------- *
CLASS3   DS   0A
         DC   A(0)                UNUSED
         DC   A(E0304)            ADDRESS OF MESSAGE FOR CODE '0304'
         DC   A(E0308)            ADDRESS OF MESSAGE FOR CODE '0308'
         DC   A(E030C)            ADDRESS OF MESSAGE FOR CODE '030C'
         DC   A(E0310)            ADDRESS OF MESSAGE FOR CODE '0310'
         DC   A(E0314)            ADDRESS OF MESSAGE FOR CODE '0314'
         DC   A(E0318)            ADDRESS OF MESSAGE FOR CODE '0318'
         DC   A(E031C)            ADDRESS OF MESSAGE FOR CODE '031C'
         DC   A(E0320)            ADDRESS OF MESSAGE FOR CODE '0320'
         DC   A(E0324)            ADDRESS OF MESSAGE FOR CODE '0324'
         DC   A(E0328)            ADDRESS OF MESSAGE FOR CODE '0328'
         DC   A(E032C)            ADDRESS OF MESSAGE FOR CODE '032C'
         DC   A(E0330)            ADDRESS OF MESSAGE FOR CODE '0330'
         DC   A(E0334)            ADDRESS OF MESSAGE FOR CODE '0334'
         DC   A(E0338)            ADDRESS OF MESSAGE FOR CODE '0338'
         DC   A(E033C)            ADDRESS OF MESSAGE FOR CODE '033C'
         DC   A(E0340)            ADDRESS OF MESSAGE FOR CODE '0340'
         DC   A(E0344)            ADDRESS OF MESSAGE FOR CODE '0344'
         DC   A(E0348)            ADDRESS OF MESSAGE FOR CODE '0348'
         DC   A(E034C)            ADDRESS OF MESSAGE FOR CODE '034C'
         DC   A(E0350)            ADDRESS OF MESSAGE FOR CODE '0350'
         DC   A(E0354)            ADDRESS OF MESSAGE FOR CODE '0354'
         DC   A(E0358)            ADDRESS OF MESSAGE FOR CODE '0358'
         DC   A(E035C)            ADDRESS OF MESSAGE FOR CODE '035C'
         DC   A(E0360)            ADDRESS OF MESSAGE FOR CODE '0360'
         DC   A(E0364)            ADDRESS OF MESSAGE FOR CODE '0364'
         DC   A(E0368)            ADDRESS OF MESSAGE FOR CODE '0368'
         DC   A(E036C)            ADDRESS OF MESSAGE FOR CODE '037C'
         DC   A(E0370)            ADDRESS OF MESSAGE FOR CODE '0370'
         DC   A(E0374)            ADDRESS OF MESSAGE FOR CODE '0374'
         DC   A(E0378)            ADDRESS OF MESSAGE FOR CODE '0378'
         DC   A(E037C)            ADDRESS OF MESSAGE FOR CODE '038C'
         DC   A(E0380)            ADDRESS OF MESSAGE FOR CODE '0380'
         DC   A(E0384)            ADDRESS OF MESSAGE FOR CODE '0384'
         DC   A(E0388)            ADDRESS OF MESSAGE FOR CODE '0388'
         DC   A(E038C)            ADDRESS OF MESSAGE FOR CODE '038C'
         DC   A(E0390)            ADDRESS OF MESSAGE FOR CODE '0390'
         DC   A(E0394)            ADDRESS OF MESSAGE FOR CODE '0394'
         DC   A(E0398)            ADDRESS OF MESSAGE FOR CODE '0398'
         DC   A(E039C)            ADDRESS OF MESSAGE FOR CODE '039C'
         DC   A(E03A0)            ADDRESS OF MESSAGE FOR CODE '03A0'
         DC   A(E03A4)            ADDRESS OF MESSAGE FOR CODE '03A4'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CLASS 4 DYNAMIC ALLOCATION MESSAGES ADCONS             *
*                                                                     *
* ------------------------------------------------------------------- *
CLASS4   DS   0A
         DC   A(0)                UNUSED
         DC   A(E0404)            ADDRESS OF MESSAGE FOR CODE '0404'
         DC   A(E0408)            ADDRESS OF MESSAGE FOR CODE '0408'
         DC   A(E040C)            ADDRESS OF MESSAGE FOR CODE '040C'
         DC   A(E0410)            ADDRESS OF MESSAGE FOR CODE '0410'
         DC   A(E0414)            ADDRESS OF MESSAGE FOR CODE '0414'
         DC   A(E0418)            ADDRESS OF MESSAGE FOR CODE '0418'
         DC   A(E041C)            ADDRESS OF MESSAGE FOR CODE '041C'
         DC   A(E0420)            ADDRESS OF MESSAGE FOR CODE '0420'
         DC   A(E0424)            ADDRESS OF MESSAGE FOR CODE '0424'
         DC   A(E0428)            ADDRESS OF MESSAGE FOR CODE '0428'
         DC   A(E042C)            ADDRESS OF MESSAGE FOR CODE '042C'
         DC   A(E0430)            ADDRESS OF MESSAGE FOR CODE '0430'
         DC   A(E0434)            ADDRESS OF MESSAGE FOR CODE '0434'
         DC   A(E0438)            ADDRESS OF MESSAGE FOR CODE '0438'
         DC   A(E043C)            ADDRESS OF MESSAGE FOR CODE '043C'
         DC   A(E0440)            ADDRESS OF MESSAGE FOR CODE '0440'
         DC   A(E0444)            ADDRESS OF MESSAGE FOR CODE '0444'
         DC   A(E0448)            ADDRESS OF MESSAGE FOR CODE '0448'
         DC   A(E044C)            ADDRESS OF MESSAGE FOR CODE '044C'
         DC   A(E0450)            ADDRESS OF MESSAGE FOR CODE '0450'
         DC   A(E0454)            ADDRESS OF MESSAGE FOR CODE '0454'
         DC   A(E0458)            ADDRESS OF MESSAGE FOR CODE '0458'
         DC   A(E045C)            ADDRESS OF MESSAGE FOR CODE '045C'
         DC   A(E0460)            ADDRESS OF MESSAGE FOR CODE '0460'
         DC   A(E0464)            ADDRESS OF MESSAGE FOR CODE '0464'
         DC   A(E0468)            ADDRESS OF MESSAGE FOR CODE '0468'
         DC   A(E046C)            ADDRESS OF MESSAGE FOR CODE '047C'
         DC   A(E0470)            ADDRESS OF MESSAGE FOR CODE '0470'
         DC   A(E0474)            ADDRESS OF MESSAGE FOR CODE '0474'
         DC   A(E0478)            ADDRESS OF MESSAGE FOR CODE '0478'
         DC   A(E047C)            ADDRESS OF MESSAGE FOR CODE '048C'
         DC   A(E0480)            ADDRESS OF MESSAGE FOR CODE '0480'
         DC   A(E0484)            ADDRESS OF MESSAGE FOR CODE '0484'
         DC   A(E0488)            ADDRESS OF MESSAGE FOR CODE '0488'
         DC   A(E048C)            ADDRESS OF MESSAGE FOR CODE '048C'
         DC   A(E0490)            ADDRESS OF MESSAGE FOR CODE '0490'
         DC   A(E0494)            ADDRESS OF MESSAGE FOR CODE '0494'
         DC   A(E0498)            ADDRESS OF MESSAGE FOR CODE '0498'
         DC   A(E049C)            ADDRESS OF MESSAGE FOR CODE '049C'
         DC   A(E04A0)            ADDRESS OF MESSAGE FOR CODE '04A0'
         DC   A(E04A4)            ADDRESS OF MESSAGE FOR CODE '04A4'
         DC   A(E04A8)            ADDRESS OF MESSAGE FOR CODE '04A8'
         DC   A(E04AC)            ADDRESS OF MESSAGE FOR CODE '04AC'
         DC   A(E04B0)            ADDRESS OF MESSAGE FOR CODE '04B0'
         DC   A(E04B4)            ADDRESS OF MESSAGE FOR CODE '04B4'
         DC   A(E04B8)            ADDRESS OF MESSAGE FOR CODE '04B8'
         DC   A(E04BC)            ADDRESS OF MESSAGE FOR CODE '04BC'
         DC   A(E04C0)            ADDRESS OF MESSAGE FOR CODE '04C0'
         DC   A(E04C4)            ADDRESS OF MESSAGE FOR CODE '04C4'
         DC   A(E04C8)            ADDRESS OF MESSAGE FOR CODE '04C8'
         DC   A(E04CC)            ADDRESS OF MESSAGE FOR CODE '04CC'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CLASS 2 DYNAMIC ALLOCATION MESSAGES                    *
*                                                                     *
* ------------------------------------------------------------------- *
E0204   MSG    'INSUFFICIENT STORAGE'
E0208   MSG    'MANUAL SAYS THIS IS A RESERVED CODE'
E020C   MSG    'REQUEST FOR SHARED DEVICE CANNOT BE HONORED'
E0210   MSG    'DATASET IN USE'
E0214   MSG    'UNIT NOT AVAILABLE'
E0218   MSG    'VOLUME NOT MOUNTED'
E021C   MSG    'UNIT NAME UNDEFINED'
E0220   MSG    'REQUESTED VOLUME NOT AVAILABLE'
E0224   MSG    'ELIGIBLE DEVICE TYPE(S) DO NOT CONTAIN ENOUGH UNITS'
E0228   MSG    'SPECIFIED VOLUME OR UNIT IN USE BY SYSTEM OR RESERVED U+
               NIT'
E022C   MSG    'VOLUME MOUNTED ON INELIGIBLE PERMANENTLY RESIDENT OR RE+
               SERVED UNIT'
E0230   MSG    'PERMANENTLY RESIDENT OR RESERVED VOLUME ON REQUIRED UNI+
               T'
E0234   MSG    'MORE THAN ONE DEVICE REQUIRED FOR REQUEST SPECIFIYING A+
                SPECIFIC UNIT'
E0238   MSG    'NO SPACE AVAILABLE IN TIOT'
E023C   MSG    'REQUIRED CATALOG NOT MOUNTED'
E0240   MSG    'REQUESTED DEVICE IS A CONSOLE'
E0244   MSG    'TELECOMMUNICATION DEVICE NOT ACCESSABLE'
E0248   MSG    'MSS VIRTUAL VOLUME CANNOT BE MOUNTED'
E024C   MSG    'OPERATING-SYSTEM-MANAGED RESOURCE UNAVAILABE TO SUBSYST+
               EM'
E0250   MSG    'SUBSYSTEM RESOURCE NOT AVAILABLE'
E0254   MSG    'TIOT CURRENTLY UNVAILABLE'
E0258   MSG    'INSUFFICIENT NUMBER OF NON-RESTRICTED UNITS'
E025C   MSG    'REQUESTED DEVICE IS BOXED (VARIED OFFLINE)'
E0260   MSG    'UNIT DOES NOT MEET STATUS REQUIREMENTS'
E0264   MSG    'INVALID REQUEST DUE TO CURRENT UNIT STATUS'
E0268   MSG    'TAPE DEVICE IS BROKEN'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CLASS 3 DYNAMIC ALLOCATION MESSAGES                    *
*                                                                     *
* ------------------------------------------------------------------- *
E0304   MSG    'ASSIGNED BY DAIR'
E0308   MSG    'ASSIGNED BY DAIR'
E030C   MSG    'ASSIGNED BY DAIR'
E0310   MSG    'ASSIGNED BY DAIR'
E0314   MSG    'ASSIGNED BY DAIR'
E0318   MSG    'ASSIGNED BY DAIR'
E031C   MSG    'ASSIGNED BY DAIR'
E0320   MSG    'ASSIGNED BY DAIR'
E0324   MSG    'ASSIGNED BY DAIR'
E0328   MSG    'ASSIGNED BY DAIR'
E032C   MSG    'ASSIGNED BY DAIR'
E0330   MSG    'ASSIGNED BY DAIR'
E0334   MSG    'ASSIGNED BY DAIR'
E0338   MSG    'ASSIGNED BY DAIR'
E033C   MSG    'RESERVED'
E0340   MSG    'RESERVED'
E0344   MSG    'RESERVED'
E0348   MSG    'RESERVED'
E034C   MSG    'RESERVED'
E0350   MSG    'RESERVED'
E0354   MSG    'RESERVED'
E0358   MSG    'OVERRIDING DISPOSITION OF DELETE INVALID FOR DATASET AL+
               LOCATED SHR'
E035C   MSG    'INVALID PARM IN TEXT UNIT (INTERNAL ERROR)'
E0360   MSG    'INVALID KEY IN TEXT UNIT (INTERNAL ERROR)'
E0364   MSG    'JOBLIB/STEPLIB/JOBCAT/STEPCAT SPECIFIED AS DDNAME'
E0368   MSG    'AUTHORIZED FUNCTION REQUESTED'
E036C   MSG    'INVALID PARAMETER LIST FORMAT'
E0370   MSG    'RESERVED'
E0374   MSG    'INVALID # SPECIFIED IN TEXT UNIT (INTERNAL ERROR)'
E0378   MSG    'DUPLICATE KEY IN TEXT UNITS (INTERNAL ERROR)'
E037C   MSG    'INVALID LENGTH IN TEXT UNIT (INTERNAL ERROR)'
E0380   MSG    'MUTUALLY EXCLUSIVE KEYS IN TEXT UNITS (INTERNAL ERROR)'
E0384   MSG    'REQUIRED KEY NOT SPECIFIED IN TEXT UNITS (INTERNAL ERRO+
               R)'
E0388   MSG    'REQUIRED KEY NOT SPECIFIED IN TEXT UNITS (INTERNAL ERRO+
               R)'
E038C   MSG    'DUPLICATE DDNAMES (CONCATENATION)'
E0390   MSG    'GDG GROUP NAME SPECIFIED WITH RELATIVE GENERATION EXCEE+
               DS 35 CHARACTERS'
E0394   MSG    'STATUS AND RELATIVE GENERATION ARE INCOMPATIBLE'
E0398   MSG    'VOLUME SEQUENCE NUMBER EXCEEDS NUMBER OF VOLUMES'
E039C   MSG    'DEVICE TYPE AND VOLUME ARE INCOMPATIBLE'
E03A0   MSG    'SUBSYSTEM DETECTED AN INVALID PARAMETER'
E03A4   MSG    'UNABLE TO PROTECT DATASET/VOLUME BECAUSE OF CONFLICTING+
                KEYWORD SPECIFICATION'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              CLASS 4 DYNAMIC ALLOCATION MESSAGES                    *
*                                                                     *
* ------------------------------------------------------------------- *
E0404   MSG    'RESERVED'
E0408   MSG    'RESERVED'
E040C   MSG    'RESERVED'
E0410   MSG    'SPECIFIED DDNAME UNAVAILABLE'
E0414   MSG    'RESERVED'
E0418   MSG    'RESERVED'
E041C   MSG    'RESERVED'
E0420   MSG    'SPECIFIED DDNAME ASSOCIATED WITH AN OPEN DATASET'
E0424   MSG    'DECONCATENATION WOULD RESULT IN DUPLICATE DDNAME'
E0428   MSG    'RESERVED'
E042C   MSG    'RESERVED'
E0430   MSG    'RESERVED'
E0434   MSG    'DDNAME IN DDNAME ALLOCATION IS ASSOCIATED WITH A CONVER+
               TABLE OR NON-PERMANENTLY ALLOCATED RESOURCE'
E0438   MSG    'SPECIFIED DDNAME NOT FOUND'
E043C   MSG    'SYSTEM COULD NOT DEALLOCATE ENOUGH RESOURCES BEING HELD+
                FOR REUSE TO MEET CONTROL LIMIT'
E0440   MSG    'SPECIFIED DDNAME NOT FOUND'
E0444   MSG    'RELATIVE ENTRY NUMBER SPECIFIED IN INFORMATION RETRIEVA+
               L REQUEST NOT FOUND'
E0448   MSG    'REQUEST FOR DATASET FAILED-DATASET ALREADY EXISTS'
E044C   MSG    'REQUEST WITH DISPOSITION DELETE FAILED- DATASET MAY BE +
               DELETED AT ANY TIME'
E0450   MSG    'REQUEST EXCEEDS LIMIT OF 1635 CONCURRENT ALLOCATIONS'
E0454   MSG    'GDG GROUP NAME'
E0458   MSG    'DSNAME IN DCB REFERENCE OR VOLUME REFERENCE IS A GDG GR+
               OUP NAME'
E045C   MSG    'SPECIFIED DSNAME TO BE DEALLOCATED IS MEMBER OF A PERMA+
               NENTLY-CONCATENATED GROUP'
E0460   MSG    'SPECIFIED DSNAME OR MEMBER NOT ASSOCIATED WITH SPECIFIE+
               D DDNAME'
E0464   MSG    'SPECIFIED DDNAME FOR DEALLOCATION IS A PRIVATE CATALOG'
E0468   MSG    'ERROR WHILE ALLOCATING OR OPENING A PRIVATE CATALOG'
E046C   MSG    'REMOTE WORK STATION NOT DEFINED TO JES'
E0470   MSG    'USER NOT AUTHORIZED FOR JES REQUESTS'
E0474   MSG    'ERROR WHILE ATTEMPTING TO SELECT OPTIMUM DEVICE'
E0478   MSG    'UNABLE TO PROCESS JES REQUEST'
E047C   MSG    'UNABLE TO ESTABLISH ESTAE ENVIRONMENT'
E0480   MSG    'NUMBER OF UNITS NEEDED EXCEEDS LIMIT'
E0484   MSG    'REQUEST DENIED BY OPERATOR'
E0488   MSG    'GDG PATTERN DSCB NOT MOUNTED'
E048C   MSG    'GDG PATTERM DSCB NOT FOUND'
E0490   MSG    'ERROR CHANGING ALLOCATION ASSIGNMENTS'
E0494   MSG    'ERROR PROCESSING OS CVOL'
E0498   MSG    'MSS VIRTUAL VOLUME NOT ACCESSIBLE'
E049C   MSG    'MSS VIRTUAL VOLUME NOT DEFINED'
E04A0   MSG    'SPECIFIED MSVGP NAME NOT DEFINED'
E04A4   MSG    'SUBSYSTEM REQUEST IN ERROR'
E04A8   MSG    'SUBSYSTEM DOES NOT SUPPORT ALLOCATION VIA KEY DALSSNM'
E04AC   MSG    'SUBSYSTEM NOT OPERATIONAL'
E04B0   MSG    'SUBSYSTEM DOES NOT EXIST'
E04B4   MSG    'PROTECT REQUEST NOT PROCESSED, RACF NOT ACTIVE'
E04B8   MSG    'MSS NOT INITIALIZED FOR ALLOCATION'
E04BC   MSG    'MSS VOLUME SELECT ERROR'
E04C0   MSG    'PROTECT REQUEST FAILED, USER NOT DEFINED TO RACF'
E04C4   MSG    'MAXIMUM REFERBACK LIMIT EXCEEDED'
E04C8   MSG    'NON-ZERO RETURN CODE FROM COMMON ALLOCATION OR JFCB HOU+
               SEKEEPING'
E04CC   MSG    'INVALID REFERENCE TO OUTPUT JCL STATEMENT'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              REGISTER EQUATES                                       *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              ERROR MESSAGE TABLE DSECT                              *
*                                                                     *
* ------------------------------------------------------------------- *
MSGDSECT DSECT
MSGMSGL  DS    AL2                MESSAGE LENGTH
MSGMSG   DS    0C                 MESSAGE TEXT
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              DYNAMIC DEVICE BLOCK                                   *
*                                                                     *
* ------------------------------------------------------------------- *
DYNBLOK  DYNBLOK  TYPE=DSECT
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              DYNAMIC ALLOCATE/DE-ALLOCATE REQUEST BLOCK             *
*                                                                     *
* ------------------------------------------------------------------- *
DAIRBLOK DAIRBLOK TYPE=DSECT
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              COMMON MODULE DSECT                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DITTCOMM DITTCOMM TYPE=DSECT
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              ABEND CODE EQUATES                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         ABCODES
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS COMMUNICATIONS VECTOR TABLE                        *
*                                                                     *
* ------------------------------------------------------------------- *
         CVT   DSECT=YES
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS UNIT CONTROL BLOCK                                 *
*                                                                     *
* ------------------------------------------------------------------- *
         IEFUCBOB
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS IOB DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZIOB
IOBLEN   EQU  *-IOB
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS DCB DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD DSORG=PS
DYNDCBL  EQU    *-IHADCB
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS PSA DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS TCB DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         IKJTCB LIST=NO
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS DEB DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZDEB LIST=YES
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS DAIR INTERFACE DSECTS/EQUATES                      *
*                                                                     *
* ------------------------------------------------------------------- *
         IEFZB4D0
         IEFZB4D2
         END
