                       Installing DITTO

1)  Allocate a SOURCE, MACLIB, ISPPLIB or ISPPENU, and if you want
    to keep DITTO in its own loadlib a LOADLIB that must be APF
    authorized.

    Space estimates:
                         3380 tracks   Directory blocks      DCB
         SOURCE              30               10          FB, 80, 3120
         MACLIB               5                5          FB, 80, 3120
         ISPPLIB or ISPPENU   2                2          FB, 80, 3120
         LOADLIB              1                1          U, 6144

   ** You do need separate SOURCE and MACLIBs.


2)  DITTO bypasses opens so it must run APF authorized.  In the TSO
    environment DITTO will dynamically authorize and de-authorize itself
    if you have an SVC for this purpose.  Add the code necessary to
    invoke your SVC in source member DITTAUTH.

3)  Edit the ASMJCL member of the SOURCE library:

         a)  Change the JOBCARD to your site's requirements
         b)  Change the MACLIB references to the name you gave to the
             DITTO maclib.
         c)  Change the SOURCE library references to the name you gave
             the DITTO source lib.
         d)  Change the LOADLIB references to the name you gave the
             DITTO loadlib or the name of an existing APF authorized
             library.

4)  Run the ASMJCL member to assemble and link DITTO (should produce
    about 75,000 lines of print).

5)  If you want to run DITTO as a started task, add a PROC to one of
    your JES proclibs (member "PROC" in the SOURCE library may be used
    as a sample).

6)  If you want to use DITTO from a TSO session:
       a) the panels must be available so either add the ISPPLIB or
          ISPPENU library to your logon proc or allocate it in a CLIST
          or REXX exec.
       b) The LOADLIB must be available so add it to your LINKLST or
          your logon proc or allocate it in a CLIST or REXX exec.
       c) If you want to do tape functions, the user must have MOUNT
          authority.




                        Using DITTO

BATCH job
When running as a batch job, DITTO reads its control statements from
SYSIN.  Control statements must contain the string '$$DITTO ' in columns
1 to 8.  Parameters are specified by keywords.  Control statements may
span more than one control statement (that is "continued").  To indicate
that a statement is continued, code a comma and a blank after the last
keyword/value on the current statement, for example:

     $$DITTO TT,IN=xxx,
     $$DITTO    OUT=yyy,
     $$DITTO    FILES=3

  in this example the command is a tape-to-tape copy, input device is
  unit 'xxx', the output device is unit 'yyy', and 3 files would be
  copied.

Keywords may be specified in any order and must be delimited from the
value by an equal (=) sign.  Keyword/values must be separated from
each other by commas.  A blank indicates end-of-statement.  Comments
may be coded on control statements after the first blank.

For a list of the commands available, execute DITTO and specifiy command
'XXX' ($$DITTO XXX).



STARTED TASK
When running as a started task DITTO will prompt the operator for
commands.  Parameters are positional.  If the operator omits a parameter
or the value specified is invalid, DITTO will prompt the operator with a
message explaining that a parameter was omitted or was invalid and will
allow the parameter to be entered without having to re-key the entire
command.  If you did omit a parameter or one was invalid and you would
rather abort the command, you may enter 'CANCEL' to the prompt for the
missing or invalid parameter and DITTO will prompt for a new command.
If you know the command you want to use, but you can't remember all of
the parameters or you can't remember their order, enter the command
with a question mark (?) and DITTO will respond with a sample of the
command.  For example if you want to do a tape-to-tape copy, the command
is 'TT'.  If you enter 'TT,?' to the command prompt, DITTO will respond
with 'TT,INCUU,OUTCUU,# OF FILES', and will prompt for a command again.
You could have just entered 'TT' and DITTO would have prompted for the
input device, then the output device, and then the number of files one
parameter at a time (since this is more time consuming, you may want to
use the question mark method).  Some parameters are optional, like the
number of records on the TP command.  If you omit the number of records,
DITTO assumes you want the entire file printed, it will not prompt for
omitted optional parameters... you may print a lot more than you had in
mind.  If you omit a required parameter and optional parameters, DITTO
will prompt for the missing required ones, not the optional ones.  If
you want to enter the optional parameter (to limit the number of records
for example), you may want to enter 'CANCEL' to the prompt for the
missing required parameter and re-enter the entire command with the
optional value specified.  If you enter an optional parameter with an
invalid value (like alpha characters in RECORDS), DITTO will prompt to
to allow a valid value to be entered.


TSO
In TSO mode DITTO prompts for commands and parameters with ISPF panels.
Parameters are positional, just like in started task mode.  Rather than
prompting for missing and invalid parameters, DITTO resends the menu
screen with error messages explaining the problem.  Tape and disk reads
always read one physical block at a time.  If you asked for de-blocking,
the logical records in the block will be separated.  Data is displayed
in ISPF tables.  The data may be browsed forward and backward one
physical block at a time.  To use tape commands, the user must have
MOUNT authority.  DITTO issues WAITs that may cause your TSO session
to 'hang' waiting I/O, especially tape... I would not use DITTO from
my TSO session without being physically close the to tape drive.



GENERAL
The commands and print are as similar to IBM's DOS/DITTO as I could make
them.  One significant difference is the 'ACQ' command.  The 'ACQ'
command allocates devices to DITTO.  This prevents MVS from allocating
the device to another user between commands (you wouldn't want to get
the tape positioned where you want it only to have another job cause
it to be re-wound).  Also MVS has a nasty habit of rewinding and
unloading tapes when they are allocated, if you allocated tapes for each
command, MVS would rewind and unload it each time.  The 'REL' command
is the complement command to 'ACQ' and releases devices (of course all
devices are released when DITTO terminates).

DITTO bypasses MVS open.  This means you can read data whether you should
be authorized or not.  It also means anyone else who has access to DITTO
can do the same.  There are no SMF records generated either, so not
only are security measures bypassed, there is no trace of the access
at all.  If you use DITTO to write on a tape, tape management systems
like TMS are not aware of the update either.
