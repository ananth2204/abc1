* ------------------------------------------------------------------- *
*                                                                     *
*              EXCP INTERFACE                                         *
*                                                                     *
*       THIS MODULE INITIATES ALL EXCP I/O.  THE CCW STRING WILL      *
*       ALREADY HAVE BEEN PLACED IN THE DYNAMIC BLOCK (DYNCCW).       *
*       THIS MODULE REMOVES THE DUPLICATION OF THE EXCP AND THE       *
*       ERROR CHECKING.                                               *
*                                                                     *
* ------------------------------------------------------------------- *
DITTEXCP DITTPRFX EXCPSAVE,'EXCP INTERFACE'
         USING DITTCOMM,R11        SPECIFY BASE
         LR    R10,R1              SAVE PARAMETER BLOCK ADDRESS
         USING EXCPBLOK,R10        DEFINE ADDRESSABILITY
         DITTRACE ID=ENTRY         TRACE ENTRY
* ------------------------------------------------------------------- *
*                                                                     *
*                    BUILD IOB AND INITIATE I/O                       *
*                                                                     *
* ------------------------------------------------------------------- *
EXCP0010 DS    0H
         L     R2,EXCPDYN          DYNAMIC BLOCK IN USE
         USING DYNBLOK,R2          DEFINE DYNBLOK ADDRESSABILITY
         LA    R3,DYNIOB           IOB WITHIN DYNBLOK
         USING IOB,R3              DEFINE DSECT BASE
         CLC   EXCPTAPE,DYNDDNAM   IS THIS A TAPE I/O?
         BNE   EXCP0020            NO
         TM    DYNSTAT,$DYNPEOT    TAPE AT PHYSICAL EOT?
         BNO   EXCP0020            NO.. ANYTHING IS ACCEPTABLE
         CLI   DYNCCW,X'07'        REWIND CCW?
         BE    EXCP0020            YES.. ALLOWABLE
         CLI   DYNCCW,X'0F'        REWIND/UNLOAD CCW?
         BNE   EXCP0200            NO.. DON'T ALLOW
EXCP0020 DS    0H
         CLC   EXCPDASD,DYNDDNAM   DASD I/O?
         BNE   EXCP0030            NO
         DITTRACE ID=DASDADDR,                                         +
               DATA1=IOBCC
EXCP0030 DS    0H
         MVI   DYNSTAT,0           CLEAR ALL INDICATORS
         LA    R1,DYNCCW           CCW STRING ADDRESS
         ST    R1,IOBSTART         INSERT CCW STRING ADDRESS
         LA    R1,DYNECB           INPUT FILE ECB
         STCM  R1,7,IOBECBPB       INSERT ECB ADDRESS
         LA    R1,DYNDCB           DCB FOR THIS IOB
         ST    R1,IOBDCBPT         INSERT DCB ADDRESS
         DITTRACE ID=STARTIO,      TRACE I/O'S                         +
               DATA1=IOBSTART,                                         +
               DATA2=DYNCCW
         XC    DYNECB,DYNECB       CLEAR ECB
         SR    R1,R1               REQUEST AUTHORIZATION
         L     R15,AAUTH
         BALR  R14,R15             MAKE SURE WE'RE AUTHORIZED
         MODESET KEY=ZERO
         EXCP  IOBSTDRD            START THE I/O
         MODESET KEY=NZERO
         LA    R1,1                AUTHORIZATION OFF
         L     R15,AAUTH
         BALR  R14,R15             UN-AUTHORIZE
         WAIT  ECB=DYNECB          WAIT FOR I/O COMPLETION
         CLI   DYNECB,X'44'        SHOULD I RETRY
         BE    EXCP0020            YES
         CLI   DYNECB,X'7F'        I/O SUCCESSFUL??
         BNE   EXCP0090            NO
         SR    R0,R0               CLEAR REGISTER
         SR    R1,R1               CLEAR REGISTER
         CLC   EXCPTAPE,DYNDDNAM   IS THIS A TAPE I/O?
         BE    EXCP0060            YES
         LA    R14,DYNCCW1         FIRST CCW
         LA    R15,8               NUMBER OF CCW'S POSSIBLE
EXCP0040 DS    0H
         CLI   0(R14),X'06'        READ DATA?
         BE    EXCP0050            YES
         CLI   0(R14),X'86'        READ DATA?
         BE    EXCP0050            YES
         CLI   0(R14),X'0E'        READ KEY AND DATA?
         BE    EXCP0050            YES
         CLI   0(R14),X'8E'        READ KEY AND DATA?
         BE    EXCP0050            YES
         CLI   0(R14),X'1E'        READ COUNT, KEY, AND DATA?
         BE    EXCP0050            YES
         CLI   0(R14),X'9E'        READ COUNT, KEY, AND DATA?
         BE    EXCP0050            YES
         LA    R14,L'DYNCCW1(R14)  NEXT CCW
         BCT   R15,EXCP0040        CHECK NEXT CCW
         B     EXCP0080            NO LENGTH FROM THIS I/O
EXCP0050 DS    0H
         ICM   R0,3,6(R14)         LENGTH FROM CCW
         B     EXCP0070
EXCP0060 DS    0H
         CLI   DYNCCW,X'02'        IS THIS A 'READ FORWARD' CCW?
         BNE   EXCP0080            NO
         ICM   R0,3,DYNCCW1+6      LENGTH FROM CCW
EXCP0070 DS    0H
         ICM   R1,3,IOBSTDRD+14    RESIDUAL LENGTH
         SR    R0,R1               MINUS RESIDUAL LENGTH
         STH   R0,EXCPLEN          SET LENGTH ACTUALLY READ
         DITTRACE ID=DATALEN,      TRACE POINT                         +
               RDATA1=R0           .. CAPTURE DATA LENGTH
EXCP0080 DS    0H
         DITTRACE ID=GOODIO,       I/O SUCCESSFUL                      +
               DATA1=IOBFLAG1,     .. SAVE IOBFLAG1                    +
               DATA2=IOBFLAG3      .. SAVE IOBFLAG3
         MVI   EXCPSTAT,$EXCPOK    SET STATUS
         B     EXCP9900            AND EXIT
EXCP0090 DS    0H
         DITTRACE ID=IOERROR,      TRACE I/O ERRORS                    +
               DATA1=IOBFLAG1,     .. SAVE IOBFLAG1                    +
               DATA2=IOBFLAG3      .. SAVE IOBFLAG3
         TM    IOBFLAG1,IOBIOERR   UNIT EXCEPTION?
         BO    EXCP0100            YES ...
         DC    H'0'
         LA    R1,SENSECCW         SENSE CCW ADDRESS
         ST    R1,IOBSTART         INSERT SENSE CCW ADDRESS
         XC    DYNECB,DYNECB       CLEAR ECB
         EXCP  IOBSTDRD            START THE SENSE I/O
         WAIT  ECB=DYNECB          WAIT FOR I/O COMPLETION
         CLI   DYNECB,X'7F'        SENSE SUCCESSFUL?
         BNE   EXCP0310            NO..
         DITTRACE ID=ERRSENSE,     TRACE SENSE DATA                    +
               DATA1=SENSE,        .. BYTES 0-7                        +
               DATA2=SENSE+8       .. BYTES 8-15
         ABEND ABEND010,DUMP,,USER ABEND
EXCP0100 DS    0H
         CLC   EXCPTAPE,DYNDDNAM   WAS THIS A TAPE I/O?
         BE    EXCP0120            YES
         TM    IOBSENS1,X'08'      RECORD NOT FOUND?
         BO    EXCP0110            YES
         OI    EXCPSTAT,$EXCPIOE   I/O ERROR
         B     EXCP9900            AND EXIT
EXCP0110 DS    0H
         OI    EXCPSTAT,$EXCPRNF   RECORD NOT FOUND
         B     EXCP9900            AND EXIT
EXCP0120 DS    0H
         DITTRACE ID=UNITEX        UNIT EXCEPTION
         LA    R1,SENSECCW         SENSE CCW ADDRESS
         ST    R1,IOBSTART         INSERT SENSE CCW ADDRESS
         XC    DYNECB,DYNECB       CLEAR ECB
         EXCP  IOBSTDRD            START THE SENSE I/O
         WAIT  ECB=DYNECB          WAIT FOR I/O COMPLETION
         DITTRACE ID=UXSENSE,      TRACE SENSE DATA FOR UNIT EXCEPTION +
               DATA1=SENSE,        .. BYTES 0-7                        +
               DATA2=SENSE+8       .. BYTES 8-15
         CLI   DYNECB,X'7F'        SENSE SUCCESSFUL?
         BNE   EXCP0320            NO..
         CLI   SENSE04,$S4TPIND    TAPE INDICATE (PHYSICAL EOT)?
         BE    EXCP0150            YES
         LA    R1,DYNCCW           FIRST CCW
EXCP0130 DS    0H
         CLI   0(R1),X'01'         WRITE CCW?
         BE    EXCP0160            YES
         CLI   0(R1),X'1F'         WRITE TAPE-MARK CCW?
         BE    EXCP0160            YES
         TM    4(R1),CHAINCMD      CHAINED COMMANDS?
         BNO   EXCP0140            NO
         LA    R1,8(R1)            NEXT CCW
         B     EXCP0130            CHECK ALL CCW'S
EXCP0140 DS    0H
*
*
*      IF ANYONE CAN FIGURE OUT HOW TO DETECT THE RESET KEY, I WOULD
*      CERTAINLY LIKE TO HEAR FROM YOU.
*
*      DITTO SHOULD PROBABLY BE SMARTER AND TEST FOR OTHER CONDITIONS
*      BEFORE ASSUMING THE EXCEPTION WAS FOR A TAPE MARK.
*
*
         DITTRACE ID=TAPEMARK      TRACE TAPE MARK FOUND
         MVI   DYNSTAT,$DYNTM      INDICATE TAPE MARK
         B     EXCP9900            EXIT.. STATUS TM
EXCP0150 DS    0H
         DITTRACE ID=TAPEIND       TRACE PHYSICAL EOT
         MVI   DYNSTAT,$DYNPEOT+$DYNTM  SET TAPE MARK+PEOT FLAGS
         B     EXCP9900            EXIT.. STATUS PHYSICAL EOT
EXCP0160 DS    0H
         TM    SENSE01,$S1FILEP    FILE PROTECT ON?
         BNO   EXCP0170            NO
         DITTRACE ID=FILEPROT      FILE PROTECT IS ON
         MVI   DYNSTAT,$DYNPROT    TAPE IS FILE PROTECTED
         B     EXCP9900            EXIT
EXCP0170 DS    0H
         DITTRACE ID=WRITERR       I/O ERROR DURING WRITE OR WTM
         OI    EXCPSTAT,$EXCPIOE   I/O ERROR
         B     EXCP9900            AND EXIT
EXCP0200 DS    0H
         DITTRACE ID=NOTALLOW      I/O NOT ALLOWED WHILE AT PEOT
         MVI   EXCPSTAT,$EXCPNA    SET NOT ALLOWED STATUS
         B     EXCP9900
EXCP0300 DS    0H
         ABEND ABEND031,DUMP,,USER ABEND
EXCP0310 DS    0H
         ABEND ABEND032,DUMP,,USER ABEND
EXCP0320 DS    0H
         ABEND ABEND033,DUMP,,USER ABEND
* ------------------------------------------------------------------- *
*                                                                     *
*              MODULE EXIT POINT                                      *
*                                                                     *
* ------------------------------------------------------------------- *
EXCP9900 DS    0H
         DITTRACE ID=EXIT          TRACE EXIT
         L     R13,4(R13)          RESTORE REGISTER 13                  ASE01670
         LM    R14,R12,12(R13)     RESTORE ALL OTHER REGISTERS          ASE01680
         SR    R15,R15             GIVE GOOD RETURN CODE                ASE01690
         BR    R14                 RETURN TO CALLER                     ASE01700
         SPACE 2
* ------------------------------------------------------------------- *
*                                                                     *
*              WORK AREAS/CONSTANTS                                   *
*                                                                     *
* ------------------------------------------------------------------- *
SENSECCW CCW   4,SENSE,SILI,SENSEL SENSE CCW
EXCPSAVE DC    18F'0'              REGISTER SAVE AREA
EXCPTAPE DC    CL4'TAPE'           CONSTANT
EXCPDASD DC    CL4'DASD'           CONSTANT
SENSE    DS    0C
SENSE00  DC    X'00'               SENSE BYTE 0
$S0CREJ  EQU   X'80'               .. COMMAND REJECT
$S0IVREQ EQU   X'40'               .. INTERVENTION REQUIRED
$S0BUSO  EQU   X'20'               .. BUS OUT
$S0EQCHK EQU   X'10'               .. EQUIPMENT CHECK
$S0DACHK EQU   X'08'               .. DATA CHECK
$S0DOVRN EQU   X'04'               .. DATA OVER-RUN
$S0WDCT0 EQU   X'02'               .. WORD COUNT ZERO
$S0DCNVC EQU   X'01'               .. DATA CONVERTER CHECK
* ------------------------------------------------------------------- *
*           3480 CODES ARE THE SAME WITH THE FOLLOW EXCEPTIONS        *
* ------------------------------------------------------------------- *
$S0UCTIM EQU   X'02'               .. UNIT CHECK TIMING
$S0ASSGN EQU   X'01'               .. UNIT IS ASSIGNED ELSEWHERE
         SPACE 3
SENSE01  DC    X'00'               SENSE BYTE 1
$S1NOISE EQU   X'80'               .. NOISE
$S1TUSTA EQU   X'40'               .. TAPE UNIT STATUS A
$S1TUSTB EQU   X'20'               .. TAPE UNIT STATUS B
$S17TRK  EQU   X'10'               .. 7 TRACK TAPE UNIT
$S1LDPT  EQU   X'08'               .. LOAD POINT
$S1WRTST EQU   X'04'               .. WRITE STATUS
$S1FILEP EQU   X'02'               .. FILE PROTECT
$S1NCPBL EQU   X'01'               .. NOT CAPABLE
* ------------------------------------------------------------------- *
*           3480 CODES ARE THE SAME WITH THE FOLLOW EXCEPTIONS        *
* ------------------------------------------------------------------- *
$S1LBLKF EQU   X'80'               .. LOCATE BLOCK FAILED
$S1ON    EQU   X'40'               .. DRIVE ONLINE TO CONTROL UNIT
$S1SEQ   EQU   X'10'               .. RECORD OUT OF SEQUENCE
         SPACE 3
SENSE02  DC    X'00'               SENSE BYTE 2
* ------------------------------------------------------------------- *
*           3480 CODES                                                *
* ------------------------------------------------------------------- *
$S2PATH  EQU   X'20'               PATHING
$S2ADAPT EQU   X'10'               0=CU0, 1=CU1
$S2MICRO EQU   X'08'               MICRO PROCESSOR: 0=CU0, 1=CU1
$S2BLOCK EQU   X'01'               BLOCK ID POSITIONAL INDICATOR
         SPACE 3
SENSE03  DC    X'00'               SENSE BYTE 3
$S3RWRC  EQU   X'80'               .. READ/WRITE VERT. REDUNDANCY CHECK
$S3MTES  EQU   X'40'               .. MULTI-TRACK ERROR/SKEW
$S3END   EQU   X'20'               .. END
$S3VCC   EQU   X'10'               .. VERTICAL/CYCLIC CHECK
$S31600C EQU   X'08'               .. 1600 ENVIRONMENT CHECK
$S3BBSCU EQU   X'04'               .. BACKWARD BPI SET IN CONTROL UNIT
$S3CP    EQU   X'02'               .. CENTRAL PROCESSOR
$S3CMP   EQU   X'01'               .. COMPARE
         SPACE 3
SENSE04  DC    X'00'               SENSE BYTE 4
$S4ALUMP EQU   X'80'               .. ALU/MP HARDWARE ERROR
$S4REJTU EQU   X'40'               .. REJECT TAPE UNIT
$S4TPIND EQU   X'20'               .. TAPE INDICATE
$S4WTVCR EQU   X'10'               .. WRITE TRIGGER VERT. REDUNDANCY CK
$S4MICRO EQU   X'08'               .. MICRO PROGRAM DETECTED ERROR
$S4LWRD  EQU   X'04'               .. LOOP WRITE TO READ ERROR
$S4TUCHK EQU   X'02'               .. TAPE UNIT CHECK
$S4RSV1  EQU   X'01'               .. RESERVED
         SPACE 3
SENSE05  DC    X'00'               SENSE BYTE 5
$S5NSUB1 EQU   X'80'               .. NEW SUBSYSTEM
$S5NSUB2 EQU   X'40'               .. NEW SUBSYSTEM
$S5WTMCK EQU   X'20'               .. WRITE TAPE MARK CHECK
$S5IDBST EQU   X'10'               .. ID BURST
$S5SRDCK EQU   X'08'               .. START READ CHECK
$S5PART  EQU   X'04'               .. PARTIAL RECORD
$S5EPATM EQU   X'02'               .. EXCESSIVE POST-AMBLE OR TAPE MARK
$S5RPQ   EQU   X'01'               .. RPQ
         SPACE 3
SENSE06  DC    X'00'               SENSE BYTE 6
$S67TRK  EQU   X'80'               .. 7 TRACK
$S6WRTCF EQU   X'40'               .. WRITE CURRENT FAILURE
$S6DDEN  EQU   X'20'               .. DUAL DENSITY
$S6N1600 EQU   X'10'               .. DENSITY NOT 1600
$S6RSV5  EQU   X'08'               .. RESERVED
$S6RSV6  EQU   X'04'               .. RESERVED
$S6RSV7  EQU   X'02'               .. RESERVED
$S6RSV8  EQU   X'01'               .. RESERVED
         SPACE 3
SENSE07  DC    X'00'               SENSE BYTE 7
$S7LAMP  EQU   X'80'               .. LAMP FAILURE
$S7BOTL  EQU   X'40'               .. TAPE BOTTOM LEFT
$S7BOTR  EQU   X'20'               .. TAPE BOTTOM RIGHT
$S7RESET EQU   X'10'               .. RESET KEY
$S7SECUR EQU   X'08'               .. DATA SECURITY ERASE
$S7ERASE EQU   X'04'               .. ERASE HEAD
$S7AIR   EQU   X'02'               .. AIR BEARING FAILURE
$S7LOAD  EQU   X'01'               .. LOAD FAILURE
         SPACE 3
SENSE08  DC    X'00'               SENSE BYTE 8
$S8IBG   EQU   X'80'               .. INTERBLOCK GAP DETECTED IN WRITE
$S8FEED  EQU   X'40'               .. FEAD THROUGH
$S8RSV1  EQU   X'20'               .. RESERVED
$S8EBRDC EQU   X'10'               .. EARLY BEGIN READ-BACK CHECK
$S8EERBC EQU   X'08'               .. EARLY END READ-BACK CHECK
$S8SBRBC EQU   X'04'               .. SLOW BEGIN READ-BACK CHECK
$S8SERBC EQU   X'02'               .. SLOW END READ-BACK CHECK
$S8VELRR EQU   X'01'               .. VELOCITY RETRY/RESTART
         SPACE 3
SENSE09  DC    X'00'               SENSE BYTE 9
$S96250  EQU   X'80'               .. 6250 ERROR CORRECTION
$S9VELCH EQU   X'40'               .. VELOCITY CHANGE WHILE WRITING
$S9CHBUF EQU   X'20'               .. CHANNEL BUFFER CHECK
$S9CRC   EQU   X'10'               .. CYCLIC REDUNDANCY CHECK III
$S938032 EQU   X'08'               .. 3803-2
$S9RSV1  EQU   X'04'               .. RESERVED
$S9RSV2  EQU   X'02'               .. RESERVED
$S9RSV3  EQU   X'01'               .. RESERVED
         SPACE 3
SENSE10  DC    X'00'               SENSE BYTE 10
$S10CMDR EQU   X'80'               .. COMMAND STATUS REJECT
$S10RSV1 EQU   X'40'               .. RESERVED
$S10CTLR EQU   X'20'               .. CONTROL STATUS REJECT
$S10NBLK EQU   X'10'               .. NO BLOCK ON RECORD READ-BACK
$S10NWTM EQU   X'08'               .. WTM NOT DETECTED
$S10TACH EQU   X'04'               .. TACHOMETER START FAILURE
$S10RSV2 EQU   X'02'               .. RESERVED
$S10VEL  EQU   X'01'               .. VELOCITY
         SPACE 3
SENSE11  DC    X'00'               SENSE BYTE 11  (PROCESSOR 1 ERRORS)
$S11BPAR EQU   X'80'               .. BUS PARITY LCL STRG REG ADDR ERR
$S11RSV1 EQU   X'40'               .. RESERVED
$S11ROSP EQU   X'20'               .. LOW READ-ONLY STORAGE PARITY MP1
$S11DCOD EQU   X'10'               .. INSTRUCTION DECODE ERROR MP1
$S11MP   EQU   X'08'               .. MICRO PROGRAM DETECTED ERROR MP1
$S11DBP  EQU   X'04'               .. DATA BUS PARITY CHECK MP1
$S11RSV2 EQU   X'02'               .. RESERVED
$S11BOC  EQU   X'01'               .. BRANCH ON CONDITION MP1
         SPACE 3
SENSE12  DC    X'00'               SENSE BYTE 12 (PROCESSOR 2 ERRORS)
$S12BPAR EQU   X'80'               .. BUS PARITY LCL STRG REG ADDR ERR
$S12RSV1 EQU   X'40'               .. RESERVED
$S12ROSP EQU   X'20'               .. LOW READ-ONLY STORAGE PARITY MP2
$S12DCOD EQU   X'10'               .. INSTRUCTION DECODE ERROR MP2
$S12MP   EQU   X'08'               .. MICRO PROGRAM DETECTED ERROR MP2
$S12DBP  EQU   X'04'               .. DATA BUS PARITY CHECK MP2
$S12RSV2 EQU   X'02'               .. RESERVED
$S12BOC  EQU   X'01'               .. BRANCH ON CONDITION MP2
         SPACE 3
SENSE13  DC    X'00'               SENSE BYTE 13
$S13RSV1 EQU   X'80'               .. RESERVED
$S13RSV2 EQU   X'40'               .. RESERVED
$S13RSV3 EQU   X'20'               .. RESERVED
$S13RSV4 EQU   X'10'               .. RESERVED
$S13RSV5 EQU   X'08'               .. RESERVED
$S13RSV6 EQU   X'04'               .. RESERVED
$S13RSV7 EQU   X'02'               .. RESERVED
$S13RSV8 EQU   X'01'               .. RESERVED
         SPACE 3
SENSE14  DC    X'00'               SENSE BYTE 14
$S14RSV1 EQU   X'80'               .. RESERVED
$S14RSV2 EQU   X'40'               .. RESERVED
$S14RSV3 EQU   X'20'               .. RESERVED
$S14RSV4 EQU   X'10'               .. RESERVED
$S14RSV5 EQU   X'08'               .. RESERVED
$S14RSV6 EQU   X'04'               .. RESERVED
$S14RSV7 EQU   X'02'               .. RESERVED
$S14RSV8 EQU   X'01'               .. RESERVED
         SPACE 3
SENSE15  DC    X'00'               SENSE BYTE 15
$S15RSV1 EQU   X'80'               .. RESERVED
$S15RSV2 EQU   X'40'               .. RESERVED
$S15RSV3 EQU   X'20'               .. RESERVED
$S15RSV4 EQU   X'10'               .. RESERVED
$S15RSV5 EQU   X'08'               .. RESERVED
$S15RSV6 EQU   X'04'               .. RESERVED
$S15RSV7 EQU   X'02'               .. RESERVED
$S15RSV8 EQU   X'01'               .. RESERVED
SENSEL   EQU   *-SENSE
* ------------------------------------------------------------------- *
*                                                                     *
*              EXCP STATUS BLOCK                                      *
*                                                                     *
* ------------------------------------------------------------------- *
EXCPBLOK EXCPBLOK TYPE=DSECT
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              REGISTER EQUATES                                       *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  REGEQU
CHAINCMD EQU   X'40'
SILI     EQU   X'20'
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              COMMON MODULE DSECT                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DITTCOMM DITTCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*              ABEND CODES                                            *
*                                                                     *
* ------------------------------------------------------------------- *
         ABCODES
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              DYNAMIC BLOCK DSECT                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DYNBLOK  DYNBLOK TYPE=DSECT
         EJECT
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS IOB DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZIOB
IOBLEN   EQU  *-IOB
* ------------------------------------------------------------------- *
*                                                                     *
*              MVS DCB DSECT                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD DSORG=PS
DYNDCBL  EQU   *-IHADCB
         END  DITTEXCP
