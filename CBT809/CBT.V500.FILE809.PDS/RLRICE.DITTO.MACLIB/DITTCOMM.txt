*---------------------------------------------------------------------*
*                                                                     *
*          COMMON AREA MAPPING MACRO.                                 *
*                                                                     *
*     THIS MACRO WILL GENERATE EITHER THE 'COMMON' MODULE CSECT OR    *
*     A DSECT TO MAP THE 'COMMON' MODULE.  'COMMON' IS USED FOR       *
*     CONSTANTS AND WORK AREAS THAT ARE COMMON TO SEVERAL MODULES.    *
*                                                                     *
*     NOTE THAT A CHANGE TO COMMON MAY REQUIRE A RE-ASSEMBLY OF MOST  *
*     OR ALL 'DITTO' MODULES.                                         *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
&NAME    DITTCOMM &TYPE=
         AIF   ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS    0H
         AGO   .NODSECT
.DSECT   ANOP
         AIF   (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
*---------------------------------------------------------------------*
*                                                                     *
*          ADDRESS CONSTANTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL4'1STX'
COMM1ST  DC    A(0)                ADDRESS OF FIRST TRACE ENTRY
         DC    CL4'LAST'
COMMLAST DC    A(0)                ADDRESS OF LAST TRACE ENTRY
         DC    CL4'CURR'
COMMCURR DC    A(0)                CURRENT TRACE ENTRY
         DC    CL4'TRCE'
COMMTRCE DC    A(COMMTR00)         TRACE ROUTINE ENTRY POINT
         DC    CL4'COMM'
ACOMM    DC    A(DITTCOMM)         COMMON MODULE
         DC    CL4'ALOC'
AALOC    DC    V(DITTALOC)         'ACQ/REL' FUNCTION
         DC    CL4'ATTN'
AATTN    DC    V(DITTATTN)         TSO ATTENTION EXIT
         DC    CL4'AUTH'
AAUTH    DC    V(DITTAUTH)         DYNAMIC AUTHORIZATION
         DC    CL4'CARD'
ACARD    DC    V(DITTCARD)         CARD INPUT COMMAND INTERPRETER
         DC    CL4'CDI1'
ACDI1    DC    V(DITTCDI1)         CARD READER
         DC    CL4'CDO1'
ACDO1    DC    V(DITTCDO1)         CARD PUNCH
         DC    CL4'CMD '
ACMD     DC    V(DITTCMD)          COMMAND TABLE
         DC    CL4'CONS'
ACONS    DC    V(DITTCONS)         CONSOLE INPUT COMMAND INTERPRETER
         DC    CL4'DAIR'
ADAIR    DC    V(DITTDAIR)         DAIR INTERFACE
         DC    CL4'DAI1'
ADAI1    DC    V(DITTDAI1)         DASD READER
         DC    CL4'EXCP'
AEXCP    DC    V(DITTEXCP)         EXCP INTERFACE
         DC    CL4'INQ '
AINQ     DC    V(DITTINQ)          STC MODE INQUIRY FUNCTION
         DC    CL4'ISP '
AISP     DC    A(0)                SPF INTERFACE
         DC    CL4'MAIN'
AMAIN    DC    V(DITTMAIN)         BATCH JOB/STC MAINLINE
         DC    CL4'PARM'
APARM    DC    V(DITTPARM)         PARAMETER CONVERTER
         DC    CL4'PRMD'
APRMD    DC    V(DITTPRMD)         DENSITY PARAMETER CHECKER
         DC    CL4'PRMO'
APRMO    DC    V(DITTPRMO)         OPTION PARAMETER CHECKER
         DC    CL4'PRMV'
APRMV    DC    V(DITTPRMV)         VOLSER RANGE CHECKER
         DC    CL4'PRO1'
APRO1    DC    V(DITTPRO1)         DATA PRINT
         DC    CL4'PRT '
APRT     DC    V(DITTPRT)          PRINT MODULE
         DC    CL4'STAE'
ASTAE    DC    V(DITTSTAE)         STAE EXIT
         DC    CL4'TINT'
ATINT    DC    V(DITTTINT)         TAPE INITIALIZATION
         DC    CL4'TMAP'
ATMAP    DC    V(DITTTMAP)         TAPE MAP
         DC    CL4'TPI1'
ATPI1    DC    V(DITTTPI1)         TAPE READ
         DC    CL4'TPI2'
ATPI2    DC    V(DITTTPI2)         TAPE FORWARD SPACE FILE (FSF)
         DC    CL4'TPI3'
ATPI3    DC    V(DITTTPI3)         TAPE BACK SPACE RECORD (BSR)
         DC    CL4'TPI4'
ATPI4    DC    V(DITTTPI4)         TAPE BACK SPACE FILE (BSF)
         DC    CL4'TPO1'
ATPO1    DC    V(DITTTPO1)         TAPE OUTPUT
         DC    CL4'TPO2'
ATPO2    DC    V(DITTTPO2)         TAPE REWIND (REW)
         DC    CL4'TPO3'
ATPO3    DC    V(DITTTPO3)         TAPE REWIND/UNLOAD (RUN)
         DC    CL4'TPO4'
ATPO4    DC    V(DITTTPO4)         TAPE MARK (WTM)
         DC    CL4'TSOM'
ATSOM    DC    V(DITTTSOM)         TSO ENVIRONMENT MAINLINE
         DC    CL4'TSO1'
ATSO1    DC    V(DITTTSO1)         TSO ENVIRONMENT 'PRINT'
         DC    CL4'TSO2'
ATSO2    DC    V(DITTTSO2)         TMAP
         DC    CL4'TSO3'
ATSO3    DC    V(DITTTSO3)         TSO MODE INQUIRY FUNCTION
         DC    CL4'VTOC'
AVTOC    DC    V(DITTVTOC)         DASD VTOC
         DC    CL4'XXXX'
AXXXX    DC    V(DITTXXXX)         DUMMY CSECT (USED BY STAE EXIT)
         DC    CL4'NPUT'
ACOMMIOI DC    A(0)                INPUT BUFFER ADDRESS
         DC    CL4'OPUT'
ACOMMIOO DC    A(0)                OUTPUT BUFFER ADDRESS
* * * *                                                    * * * *
* * * * THE FOLLOWING 2 FIELDS ARE POSITIONALLY DEPENDENT  * * * *
* * * *                                                    * * * *
COMMCCOM DC    A(0)                COMMUNICATION PARAMETER LIST
COMMASID DC    A(0)                ADDRESS SPACE ID
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          FULLWORD CONSTANTS/WORK AREAS                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
         DC    CL8'FULLWORD'
COMMCECB DC    F'0'                CONSOLE ECB
COMMCNAM DC    CL8' '              CONSOLE NAME
COMMDYHD DC    A(0)                DYNAMIC ALLOCATION CHAIN START
COMMDYTL DC    A(0)                DYNAMIC ALLOCATION CHAIN TRAIL
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          PACKED DECIMAL                                             *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'DECIMAL '
COMMP0   DC    P'0'                CONSTANT
COMMP1   DC    P'1'                CONSTANT
COMMP5   DC    P'5'                CONSTANT
COMMP60  DC    P'60'               CONSTANT
COMMP65  DC    P'65'               CONSTANT
COMMP100 DC    P'100'              CONSTANT
COMMLINE DC    PL3'0'              LINE COUNT
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          FLAGS                                                      *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FLAGS   '
COMMFLAG DC    X'00'               MAINLINE/INTERCOMMUNICATION FLAGS
$ABEND   EQU   X'80'               .. ABEND REQUEST FLAG
$COMMCLS EQU   X'40'               .. CLOSE FILES INDICATOR
$COMMCER EQU   X'20'               .. INVALID/INCOMPLETE COMMAND
$COMMEOF EQU   X'10'               .. END OF FILE
$COMM1ST EQU   X'08'               .. FIRST TIME FLAG
$COMMFE  EQU   X'04'               .. EOF DUE TO TAPE MARK OR DASD EOF
$ABORT   EQU   X'02'               .. ABORT CURRENT FUNCTION
$COMMEOJ EQU   X'01'               .. END OF JOB IN PROGRESS
COMMATTN DC    X'00'               TSO ENVIRONMENT ATTENTION FLAG
$ATTN    EQU   X'80'               .. ATTENTION EXIT DRIVEN
COMMIFLG DC    X'00'               INPUT FLAGS/INDICATORS
COMMOFLG DC    X'00'               OUTPUT FLAGS/INDICATORS
*---------------------------------------------------------------------*
*          FLAG DEFINITIONS FOR COMMIFLG AND COMMOFLG                 *
*---------------------------------------------------------------------*
$DEBLOCK EQU   X'80'               .. DEBLOCK RECORDS
$VREC    EQU   X'40'               .. VARIABLE LENGTH RECORDS
$REBLOCK EQU   X'20'               .. REBLOCK RECORDS
$HEX     EQU   X'10'               .. PRINT IN HEX
$NEWBLOK EQU   X'01'               .. NEW BLOCK JUST READ
*---------------------------------------------------------------------*
*   FLAGS SET BY OPTIONAL PARAMETERS TO INDICATE THEY ARE IN EFFECT   *
*---------------------------------------------------------------------*
COMMPFLG DC    X'00'               OPTIONAL PARAMETERS IN EFFECT
$COMMRCS EQU   X'80'               .. LIMITED NUMBER OF RECORDS
$COMMFLS EQU   X'40'               .. LIMITED NUMBER OF FILES
$COMMDEN EQU   X'20'               .. DENSITY SPECIFIED
$COMMOPT EQU   X'10'               .. OPTION SPECIFIED
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
COMMED1  DC    X'4020206B202021'   CONSTANT
COMMED2  DC    X'402020202021'     CONSTANT
COMMHXPK DC    X'00AABBCCDDEEFF000000000000000000'
         DC    X'00010203040506070809000000000000'
COMMVHEX DC    256X'FF'            VALID HEX VALUES
         ORG   COMMVHEX+C'A'
         DC    6X'00'
         ORG   COMMVHEX+C'0'
         DC    10X'00'
         ORG   COMMVHEX+256
COMMVDEC DC    256X'FF'            VALID DECIMAL VALUES
         ORG   COMMVDEC+C'0'
         DC    10X'00'
         ORG   COMMVDEC+256
COMM1F   DC    32X'1F'             CONSTANT
COMMDWRD DC    D'0'                DOUBLE WORD WORK AREA
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          CHARACTER                                                  *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'CHAR    '
         SPACE 2
COMMENV  DC    C' '                ENVIRONMENT
$ENVJOB  EQU   C'J'                .. JOB
$ENVSTC  EQU   C'S'                .. STARTED TASK
$ENVTSO  EQU   C'T'                .. TSO USER
COMMBLKS DC    CL120' '            CONSTANT
CMD      DC    CL67' '             TSO COMMAND I/O AREA
SAMPLE   DC    CL67' '             COMMAND EXAMPLE
CMD01    DC    CL60' '             FOR TSO
CMD02    DC    CL60' '             FOR TSO
CMD03    DC    CL60' '             FOR TSO
CMD04    DC    CL60' '             FOR TSO
CMD05    DC    CL60' '             FOR TSO
MSG01    DC    CL79' '             FOR TSO
MSG02    DC    CL79' '             FOR TSO
MSG03    DC    CL79' '             FOR TSO
MSG04    DC    CL79' '             FOR TSO
MSG05    DC    CL79' '             FOR TSO
TAPE01   DC    CL70' '             ALLOCATED TAPE DRIVES DISPLAY AREA
DASD01   DC    CL70' '             ALLOCATED DASD UNITS DISPLAY AREA
KEYLEN   DC    CL6' '              KEY LENGTH
DATALEN  DC    CL6' '              DATA LENGTH
DISKADDR DS    0CL11               DISK ADDRESS
DISKCYL  DC    CL4' '              .. DISK ADDRESS (CYLINDER NUMBER)
         DC    C'-'                .. DELIMITER
DISKHEAD DC    CL2' '              .. DISK ADDRESS (HEAD NUMBER)
         DC    C'-'                .. DELIMITER
DISKREC  DC    CL3' '              .. DISK ADDRESS (RECORD NUMBER)
DATA     DC    CL79' '             DATA FOR SPF TABLES
*---------------------------------------------------------------------*
*                                                                     *
*          PARAMETERS/INPUT-OUTPUT UNITS AND MODULE ADDRESSES         *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'PARMS   '
COMMINM  DC    A(0)                INPUT MODULE ADDRESS
COMMIND  DC    A(0)                INPUT DYNAMIC BLOCK ADDRESS
COMMOUTM DC    A(0)                OUTPUT MODULE ADDRESS
COMMOUTD DC    A(0)                OUTPUT DYNAMIC BLOCK ADDRESS
COMMCRCD DC    A(0)                ADDRESS OF CURRENT RECORD
COMMKEY  DC    A(0)                DASD PHYSICAL KEY'S ADDRESS
COMMCRCL DC    H'0'                CURRENT RECORD LENGTH
COMMLRCL DC    H'0'                LOGICAL RECORD LENGTH
COMMBLSZ DC    H'0'                OUTPUT BLOCK SIZE ON RE-BLOCK
COMMINU  DC    XL3'000000'         INPUT DEVICE CUU
COMMOUTU DC    XL3'000000'         OUTPUT DEVICE CUU
COMMFILS DC    PL2'0'              NUMBER OF FILES TO PROCESS
COMMRCDS DC    PL2'0'              NUMBER OF RECORDS TO PROCESS
COMMDEN  DC    X'00'               DENSITY REQUESTED (SEE 370 REF CARD
$DEN1600 EQU   X'C3'               .. 1600 BPI        FOR A LIST OF
$DEN6250 EQU   X'D3'               .. 6250 BPI        TAPE COMMANDS)
$DEN3480 EQU   X'00'               .. 3480 DENSITY
COMMLOV  DC    CL6' '              LOW OR ONLY VOLSER FOR 'INT' COMMAND
COMMHIV  DC    CL6' '              HIGH VOLSER IF RANGE GIVEN ON 'INT'
COMMDADR DS    0XL5                DASD DISK ADDRESS
COMMDCYL DS    XL2                 .. CYLINDER NUMBER
COMMDHD  DS    XL2                 .. HEAD NUMBER
COMMDREC DS    X                   .. RECORD NUMBER
COMMCNT  DS    0XL8                CKD 'COUNT' INFO
CNTADDR  DS    0XL5                .. DISK ADDRESS
CNTCYL   DS    XL2                 .... CYLINDER NUMBER
CNTHEAD  DS    XL2                 .... HEAD NUMBER
CNTREC   DS    X                   .... RECORD NUMBER
CNTL     DS    0XL3                .. KEY AND DATA LENGTH
CNTKEYL  DS    X                   .... KEY LENGTH
CNTDATAL DS    XL2                 .... DATA LENGTH
COMMCNTL EQU   *-COMMCNT           .. COUNT INFO LENGTH
COMMPANL DS    CL8                 PANEL NAME FOR OUTPUT DISPLAY (TSO)
COMMINQ  DS    CL8                 INQUIRY QUALIFIER
COMMOPT  DS    CL8' '              GENERIC OPTION
*--------------------------------------------------------------------*
*                                                                    *
*        TRACE DATA                                                  *
*                                                                    *
*--------------------------------------------------------------------*
         DS    0F                  ALIGNMENT
COMMTRD1 DC    XL8'0000000000000000'
COMMTRD2 DC    XL8'0000000000000000'
*--------------------------------------------------------------------*
*                                                                    *
*        TRACE ROUTINE ENTRY POINT                                   *
*                                                                    *
*--------------------------------------------------------------------*
COMMTR00 DS    0H
         EJECT
         USING DITTCOMM,R11        ADDRESSABILITY
         USING MODPRFX,R12         MODULE PREFIX ADDRESSABILITY
         USING TRENTRY,R3          DEFINE DSECT BASE
         STM   R0,R15,COMMSAVE     SAVE REGISTERS
         CLI   COMMDYHD,X'02'      CORRUPTED?
         BE    ABCDEFGH
         L     R3,COMMCURR         GET CURRENT TRACE ENTRY ADDRESS
         C     R3,COMMLAST         IS CURRENT LAST??
         BL    COMMTR10            NO
         L     R3,COMM1ST          RESTART TRACE TABLE
         B     COMMTR20            ENTER THE TRACE DATA
COMMTR10 DS    0H
         LA    R3,TRENTRYL(R3)     ADVANCE 1 TRACE ENTRY
COMMTR20 DS    0H
         ST    R3,COMMCURR         SAVE CURRENT ENTRY
         MVC   TRMODNM,PFXMODNM    MOVE MODULE NAME TO TRACE TABLE
         MVC   TRID,0(R14)         MOVE TRACE ID
         MVC   TRDATA1,COMMTRD1    MOVE TRACE DATA 1
         MVC   TRDATA2,COMMTRD2    MOVE TRACE DATA 2
         XC    COMMTRD1,COMMTRD1   CLEAR DATA 1
         XC    COMMTRD2,COMMTRD2   CLEAR DATA 2
         TM    XTRFLAG,$XTRACE     EXTERNAL TRACE ON??
         BNO   COMMTR40            NO
         TM    XTRFLAG,$XTROPEN    IS EXTERNAL TRACE FILE OPEN??
         BO    COMMTR30            YES
         OPEN  (XTRDCB,OUTPUT)     OPEN EXTERNAL TRACE FILE
         OI    XTRFLAG,$XTROPEN    INDICATE TRACE IS OPEN
COMMTR30 DS    0H
         PUT   XTRDCB,0(R3)        WRITE TO EXTERNAL TRACE
         B     COMMTR50
COMMTR40 DS    0H
         TM    XTRFLAG,$XTROPEN    IS TRACE FILE OPEN?
         BNO   COMMTR50            NO
         CLOSE XTRDCB              CLOSE EXTERNAL TRACE FILE
         NI    XTRFLAG,255-$XTROPEN
COMMTR50 DS    0H
         LM    R0,R15,COMMSAVE     RESTORE REGISTERS
         B     8(R14)              EXIT TO CALLING ROUTINE
COMMSAVE DC    16F'0'              REGISTER SAVE AREA
XTRFLAG  DC    X'00'               EXTERNAL TRACE FILE FLAGS
$XTRACE  EQU   X'80'               .. EXTERNAL TRACE REQUESTED
$XTROPEN EQU   X'40'               .. EXTERNAL TRACE IS OPEN
XTRDCB   DCB   DDNAME=DITTRACE,    EXTERNAL TRACE DCB                  +
               DSORG=PS,           .. SEQUENTIAL FILE                  +
               RECFM=FB,           .. FIXED BLOCKED FILE               +
               LRECL=TRENTRYL,     .. RECORD SIZE                      +
               BLKSIZE=100*TRENTRYL,  BLOCK SIZE                       +
               MACRF=PM            MACRO FORM
ABCDEFGH DS    0H
         ABEND 1234,DUMP,,USER
         SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*        TRACE TABLE ENTRY                                           *
*                                                                    *
*--------------------------------------------------------------------*
TRENTRY  DSECT
TRMODNM  DS    CL8                 MODULE NAME
TRID     DS    CL8                 'ID'
TRDATA1  DS    XL8                 TRACE DATA 1
TRDATA2  DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY
         SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*        MODULE PREFIX                                               *
*                                                                    *
*--------------------------------------------------------------------*
         DITTPRFX TYPE=DSECT
         EJECT
         AIF   ('&TYPE' EQ 'DSECT').MEXIT
*--------------------------------------------------------------------*
*                                                                    *
*        REGISTER EQUATES                                            *
*                                                                    *
*--------------------------------------------------------------------*
         COPY REGEQU
         AGO   .MEXIT
.NONAME  ANOP
         MNOTE 12,'NAME IS REQUIRE WHEN TYPE=DSECT'
.MEXIT   ANOP
         MEXIT
         MEND
