{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012331000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1058148, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 18, "INMDSNAM": "CBT.V500.FILE554.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1058148, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1058148, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE554.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x12\\x0f'", "DS1TRBAL": "b'$ '"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x12\\x00\\x00\\x04\\x13\\x00\\x03\\x00\\x13'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04S\\x00Y\\x01\\x115/\\x01\\x115/\\t)\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf3@@@'", "ispf": {"version": "04.83", "flags": 0, "createdate": "2011-12-18T00:00:00", "modifydate": "2011-12-18T09:29:59", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-483"}, "text": "REGULAR CBT TAPE - VERSION 483    FILE:  554\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT483.FILE554\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 72 MEMBERS COUNTED; CUMULATIVE SIZE IS 9,484 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/18/11    09:29:59    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$README": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x005\\x01\\x114\\x8f\\x01\\x114\\x8f\\x16\\x16\\x00\"\\x00\\x07\\x00\\x00\\xc5\\xe2\\xe2\\xc5\\xc4\\xe3\\xf1@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2011-12-14T00:00:00", "modifydate": "2011-12-14T16:16:35", "lines": 34, "newlines": 7, "modlines": 0, "user": "ESSEDT1"}, "text": "DEAR READERS,\n\nTHE CODES AND MEMBERS IN THIS PDS CORRECTS THE BUGS THAT CAN BE FOUND\nIN THE CBT FILE 554 AUTHORED BY MR. MITCHELL MARX & MS. PENELOPE DAVIS.\n\nJCLS/PROCLIB MEMBERS NOT AVAILABLE FROM THE BOOK AND THE CBT FILE 554\nWERE ADDED/CODED FOR EASE OF TESTING.\n\nA QUICK AND SIMPLE PROGRAM EDEBUGC WAS CODED TO INVOKE THE ESTAE\nROUTINE (EDEBUG). THIS WAS CODED TO FACILITATE THE TESTING OF\nEDEBUG.\n\nEDEBUGC ALSO CONTAINS AN ELEGANT EXAMPLE OF CODING A TABLE FOR\nTRT AND/OR TR INSTRUCTION PURPOSES. NOT MY ORIGINAL THOUGH BUT VERY\nENCHANTING WHEN IT GENERATES THE CHARACTER CODES FOR YOU. I WISH I\nCOULD FIND THE BOOK WHERE I SAW THIS TECHNIQUE. I LOST TRACK OF IT.\n\nI ABSOLUTELY ENJOYED READING AND LEARNING FROM THE BOOK OF THE AUTHORS\nMR. MITCHELL MARX AND MS. PENELOPE DAVIS.. MVS POWER PROGRAMMING.\n\nMVS MAY BE AN OLD NAME AND TECHNOLOGY. HOWEVER,\nTHE PROGRAM CODES AND TEXT BOOK ARE STILL VALID AND USEFUL FOR\nTHE LATEST Z ARCHITECTURE.\n\nIN APPRECIATION FOR THEIR GREAT WORK,\nI HAVE DILIGENTLY READ THE TEXT BOOK\nMANY TIMES AND ALSO FOR REFERENCES AND DILIGENTLY TESTED\nTHE PROGRAM CODE\nAND DILIGENTLY CORRECTED THE ERRORS AND BUGS. THE BOOK DOES CONTAINS\nSOME TYPO ERRORS THAT MAY OR CAN BE CORRECTED IN THE FUTURE.\nNEVERTHELESS, I TREASURE THE BOOK AND THE GREAT WORKS OF THE AUTHORS.\n\nSINCERELY,\nED TOBIAS.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CHANGES": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xca\\x00\\xca\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:01", "lines": 202, "newlines": 202, "modlines": 0, "user": "MVSPP"}, "text": "                     MVS Power Programming Diskette\n\n\nRelease and Maintenance Level\n_____________________________\n\n     Version 1.1E\n\n\nChanges to Programs and Macros\n______________________________\n\n    ENDMOD Macro:                            (Fix#-R0001; 03/21/92)\n     Problem:   In the  SPLEVEL=3 expansion  under MVS version 3.3 or\n       higher, R13  in the ADDR= operand of the STORAGE RELEASE inner\n       macro caused an assembly error.\n     Solution: The STORAGE RELEASE,ADDR= operand now uses R1.\n\n    CALLPC Macro:                            (Fix#-R0002; 03/21/92)\n     Problem:   When invoked  in a program that resided above the 16M\n       line (i.e.  AMODE 31,  RMODE ANY), the LAE instruction on line\n       22 loaded  a virtual  address into  R14 and  cleared the  high\n       order bit  in the  register.   When the  BAKR R14,0 on line 23\n       built a PSW in the stack state entry, that PSW had bit 32 (the\n       AMODE bit)  off.  The PR instruction on line 39 activated this\n       24-bit PSW when it popped the stack.\n     Solution: A  BSM instruction  has been included after line 22 to\n       set the high order bit in R14 to the AMODE in the active PSW.\n\n    DSPUT Program:                           (Fix#-R0003; 03/21/92)\n     Problem:   The LAM  instructions on  lines 81  and 83 loaded the\n       same ALET  into access registers 6 and 7.  This caused the MVC\n       on line  86 to move the WTO parmlist within the same dataspace\n       rather than between two dataspaces.\n     Solution: Line  83 now  loads the  ALET for the second dataspace\n       into access register 7.\n\n    EDEBUG Program:                          (Fix#-R0004; 03/21/92)\n     Problem:   The continuation  of the  SETRP on line 141 is not in\n       column 16.   As  a result,  the macro  does  not  expand  with\n       instructions to return to RTM2.\n     Solution: The macro is continued in column 16.\n\n    NSWPRTN Program:                         (Fix#-R0005; 03/21/92)\n     Problem:   Under MVS  3.3 or higher this SRB routine abends with\n       S55F when  SYSEVENT cannot  post its ECB.  This occurs because\n       the ECB is in the workarea obtained by the STORAGE inner macro\n       in the  MODULE macro.   Since  MODULE was executed while there\n       was a key 0 PSW, the ECB resides in storage with a protect key\n       of 0.   Note  that in  MVS releases  previous to  3.3 SYSEVENT\n       TRANSWAP,ENTRY=BRANCH was  able  to  post  an  ECB  in  key  0\n       storage.   IBM does  not document  the fact  that this changed\n       with release 3.3.\n     Solution: Another STORAGE OBTAIN macro acquires 4 bytes of key 8\n       storage for  SYSEVENT's ECB.   The  STORAGE macro includes the\n       KEY=8 operand to accomplish this.\n\n   DSPACE Program:                          (Fix#-R0006; 04/23/92)\n     Problem:  When the STORAGE OBTAIN macro on lines 272 through 275\n       acquired SQA  storage for  the  DSPTBLE  blocks,  it  did  not\n       initialize the storage to X'00'.  The routines that search the\n       chain  of   DSPTBLE   blocks   expect   X'00000000'   in   the\n       DSP_NEXT_ENTRY field in the last block in the chain.  When the\n       routines did  not find  the end-of-chain,  they were unable to\n       update the chain successfully during the creation and deletion\n       of dataspaces.   This  caused unpredictable symptoms including\n       S0C4 abends and infinite loops.\n     Solution: An  XC instruction  after line 280 now initializes the\n       storage to X'00000000'.\n\n    INNERMM Macro:                           (Fix#-R0008; 10/01/92)\n     Enhancement:    This  macro  now  expands  to  generate  an  LAE\n       instruction rather  than an  LR or  LA.  This assures that the\n       first operand's  access register  as well the general register\n       is loaded when the invoker is in access register mode.\n\n\nUploading Programs To MVS Using FTTSO or IND$FILE\n_________________________________________________\n\n    1) On  the MVS  system: Allocate  a JCL library using ISPF 3.2 or\n       IEFBR14.       The   library   should   have   the   following\n       characteristics:\n                    BLKSIZE=3120, LRECL=80, RECFM=FB,\n                    DSORG=PO, SPACE=(TRK,(15,1,10))\n\n    2) On  the PC:  Execute the file SENDJCL.BAT to transfer assembly\n       and link-edit  JCL to  the library  allocated in  the previous\n       step.   SENDJCL.BAT, as  well as  the other .BAT files on this\n       diskette,  contains   IND$FILE  control  statements  for  file\n       transfer.   If you are using FTTSO or some other file transfer\n       utility, edit  these files  so that  they contain  the correct\n       control statements.\n       Specify the host library as the operand of SENDJCL.BAT:\n                    SENDJCL host.jcl.library\n\n    3) On  the MVS  system:   Edit the JOB in member ALLOC in the JCL\n       library.   This JOB, which allocates a macro library, assembly\n       source library, object library and load library, contains edit\n       instructions.  Submit the JOB and check the return codes.\n\n    4) On the PC:  Execute the file SENDMAC.BAT to transfer macros to\n       the macro library allocated in the previous step.  Specify the\n       macro library as the operand of SENDMAC.BAT:\n                    SENDMAC host.macro.library\n\n    5) On  the PC:  Execute the file SENDASM.BAT to transfer assembly\n       source files  to the  source library  allocated in step 4.  If\n       you do  not want  to transfer all the source files to the host\n       system (the  transfer may  take some  time), add 'REM ' before\n       each SEND statement that is to be ignored.  Specify the source\n       library as the operand of SENDASM.BAT:\n                    SENDASM host.source.library\n\n\nUploading Programs To MVS Using XCOM 6.2\n________________________________________\n\n    1) On  the MVS  system: Allocate  a JCL library using ISPF 3.2 or\n       IEFBR14.       The   library   should   have   the   following\n       characteristics:\n                    BLKSIZE=3120, LRECL=80, RECFM=FB,\n                    DSORG=PO, SPACE=(TRK,(15,1,10))\n\n    2) On MVS: Execute XCOM6.2 with the following SYSIN01 file:\n                    TYPE=RECEIVE\n                    LU=xcom-on-pc\n                    FILETYPE=FILE\n                    FILEOPT=REPLACE\n                    LFILE=host-jcl-library(SYSIN01B)\n                    FILE=A:\\SYSIN01B.XCM\n                    NEWXFER\n                    LFILE=host-jcl-library(SYSIN01C)\n                    FILE=A:\\SYSIN01C.XCM\n\n    3) On  MVS: edit  the member  SYSIN01B which was transferred from\n       the PC:\n\n       . Change LU= to PC XCOM's LU.\n       . Change all strings \"@JCL@\" to the host JCL library name.\n\n       Execute XCOM6.2 on MVS using this SYSIN01 file to.\n\n    4) On  the MVS  system:   Edit the JOB in member ALLOC in the JCL\n       library.   This JOB, which allocates a macro library, assembly\n       source library, object library and load library, contains edit\n       instructions.  Submit the JOB and check the return codes.\n\n    5) On MVS: edit the member SYSIN01C transferred from the PC:\n\n       . Change LU= to PC XCOM's LU\n       . Change  all strings  \"@SOURCE@\" to the host assembler source\n         library name.\n       . Change  all strings  \"@MACLIB@\" to  the host  macro  library\n         name.\n\n       Execute XCOM6.2 on MVS using this SYSIN01 file.\n\n\nAssembling, Linking and Executing Programs\n__________________________________________\n\n    1) On  the MVS  system: Edit  the JOB in member ASMLKD in the JCL\n       library.   This JOB, which contains steps to assemble and link\n       each  program   in   the   source   library,   contains   edit\n       instructions. Make  sure that any program that was link edited\n       with    AC=1  resides  in  an  APF-authorized  library  before\n       executing it.\n\n    2) The  member EXEC  in the  JCL library  contains JCL  for  each\n       program that  can be  executed as  a batch  job.    MVS  Power\n                                                           __________\n       Programming contains  execution instructions for programs that\n       ___________\n       execute as started tasks or under TSO.\n\n+-------------------------------------------------------------------+\n|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n|                                                                   |\n|  Address questions to: mmarx@mdpaladin.com                        |\n|                                                                   |\n|  Permission is hereby granted, free of charge, to any person      |\n|  obtaining a copy of this software and associated documentation   |\n|  files (the \"Software\"), to deal in the Software without          |\n|  restriction, including without limitation the rights to use,     |\n|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n|  copies of the Software, and to permit persons to whom the        |\n|  Software is furnished to do so, subject to the following         |\n|  conditions:                                                      |\n|                                                                   |\n|  The above copyright notice and this permission notice shall be   |\n|  included in all copies or substantial portions of the Software.  |\n|                                                                   |\n|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n+-------------------------------------------------------------------+\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE554": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04S\\x00E\\x01\\x115/\\x01\\x115/\\t)\\x004\\x004\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf3@@@'", "ispf": {"version": "04.83", "flags": 0, "createdate": "2011-12-18T00:00:00", "modifydate": "2011-12-18T09:29:45", "lines": 52, "newlines": 52, "modlines": 0, "user": "CBT-483"}, "text": "//***FILE 554 is from Mitchell Marx and Penelope Davis.  This       *   FILE 554\n//*           file contains the coding examples from their book     *   FILE 554\n//*           entitled:  \"MVS Power Programming\" that was part of   *   FILE 554\n//*           the Jay Ranade series from McGraw Hill.  This book    *   FILE 554\n//*           is an excellent text for teaching ESA Assembler       *   FILE 554\n//*           programming for the MVS Operating System, and some    *   FILE 554\n//*           very interesting ESA code is contained in this        *   FILE 554\n//*           file.                                                 *   FILE 554\n//*                                                                 *   FILE 554\n//*      Copyright (c) 1992, 1993, 2002 by Mitchell Marx            *   FILE 554\n//*      & Penelope Davis                                           *   FILE 554\n//*                                                                 *   FILE 554\n//*      Some corrections were added by a diligent reader, Ed       *   FILE 554\n//*      Tobias.  Nothing was deleted from this file, but Ed's      *   FILE 554\n//*      corrections and additions were included as extra members.  *   FILE 554\n//*      Ed's ISPF userid is ESSEDT1, and the members he added      *   FILE 554\n//*      or corrected are marked with his userid.  (SBG - 12/2011)  *   FILE 554\n//*                                                                 *   FILE 554\n//*      Original modules that were corrected by Ed Tobias, were    *   FILE 554\n//*      renamed with a suffix .......O and placed next to the      *   FILE 554\n//*      corrected modules.                                         *   FILE 554\n//*                                                                 *   FILE 554\n//*      Please refer to Ed's new member, $$README.                 *   FILE 554\n//*                                                                 *   FILE 554\n//*      Address questions to: mmarx@mdpaladin.com                  *   FILE 554\n//*                                                                 *   FILE 554\n//*      Ed Tobias' email:     ed_tobias@hotmail.com                *   FILE 554\n//*                                                                 *   FILE 554\n//*      Permission is hereby granted, free of charge, to any       *   FILE 554\n//*      person obtaining a copy of this software and associated    *   FILE 554\n//*      documentation files (the \"Software\"), to deal in the       *   FILE 554\n//*      Software without restriction, including without            *   FILE 554\n//*      limitation the rights to use, copy, modify, merge,         *   FILE 554\n//*      publish, distribute, sublicense,and/or sell copies of      *   FILE 554\n//*      the Software, and to permit persons to whom the Software   *   FILE 554\n//*      is furnished to do so, subject to the following            *   FILE 554\n//*      conditions:                                                *   FILE 554\n//*                                                                 *   FILE 554\n//*      The above copyright notice and this permission notice      *   FILE 554\n//*      shall be included in all copies or substantial portions    *   FILE 554\n//*      of the Software.                                           *   FILE 554\n//*                                                                 *   FILE 554\n//*      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF      *   FILE 554\n//*      ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED    *   FILE 554\n//*      TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A        *   FILE 554\n//*      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT        *   FILE 554\n//*      SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY   *   FILE 554\n//*      CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION    *   FILE 554\n//*      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR    *   FILE 554\n//*      IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER        *   FILE 554\n//*      DEALINGS IN THE SOFTWARE.                                  *   FILE 554\n//*                                                                 *   FILE 554\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALLOC": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00J\\x00J\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:08", "lines": 74, "newlines": 74, "modlines": 0, "user": "MVSPP"}, "text": "//*-------------------------------------------------------------------+\n//*  ALLOC.JCL                                                        |\n//*                                                                   |\n//*  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n//*                                                                   |\n//*  Address questions to: mmarx@mdpaladin.com                        |\n//*                                                                   |\n//*  Permission is hereby granted, free of charge, to any person      |\n//*  obtaining a copy of this software and associated documentation   |\n//*  files (the \"Software\"), to deal in the Software without          |\n//*  restriction, including without limitation the rights to use,     |\n//*  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n//*  copies of the Software, and to permit persons to whom the        |\n//*  Software is furnished to do so, subject to the following         |\n//*  conditions:                                                      |\n//*                                                                   |\n//*  The above copyright notice and this permission notice shall be   |\n//*  included in all copies or substantial portions of the Software.  |\n//*                                                                   |\n//*  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n//*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n//*  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n//*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n//*  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n//*  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n//*  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n//*  OTHER DEALINGS IN THE SOFTWARE.                                  |\n//*-------------------------------------------------------------------+\n\n//*-------------------------------------------------------------------*\n//*  THIS JOB ALLOCATES ALL LIBRARIES NEEDED TO ASSEMBLE AND LINK     *\n//*  PROGRAMS IN \"MVS POWER PROGRAMMING\".  BEFORE EXECUTING THIS JOB: *\n//*   1) ADD A JOB CARD.                                              *\n//*   2) CHANGE THE LINES MARKED \"<== \" .                             *\n//*   3) MAKE SURE THAT UNIT=SYSDA IS APPROPRIATE FOR THE VOLSERS     *\n//*      WHERE THE LIBRARIES ARE BEING ALLOCATED. CHANGE IF REQUIRED. *\n//*-------------------------------------------------------------------*\n//ALLOC    EXEC PGM=IEFBR14\n//*        *------------------------------*\n//*        *  ALLOCATE SOURCE LIBRARY     *\n//*        *------------------------------*\n//ASM      DD DSN=user.ASM,               <== DSNAME OF SOURCE LIBRARY\n//            VOL=SER=VOLSER,             <== VOLSER OF SOURCE LIBRARY\n//            UNIT=SYSDA,\n//            DISP=(,CATLG),\n//            SPACE=(CYL,(8,1,50)),\n//            DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3120)\n//*        *------------------------------*\n//*        *  ALLOCATE MACRO LIBRARY      *\n//*        *------------------------------*\n//MACLIB   DD DSN=user.MACLIB,            <== DSNAME OF MACRO  LIBRARY\n//            VOL=SER=VOLSER,             <== VOLSER OF MACRO  LIBRARY\n//            UNIT=SYSDA,\n//            DISP=(,CATLG),\n//            SPACE=(CYL,(1,1,10)),\n//            DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3120)\n//*        *------------------------------*\n//*        *  ALLOCATE OBJECT LIBRARY     *\n//*        *------------------------------*\n//OBJ      DD DSN=user.OBJ,               <== DSNAME OF OBJECT LIBRARY\n//            VOL=SER=VOLSER,             <== VOLSER OF OBJECT LIBRARY\n//            UNIT=SYSDA,\n//            DISP=(,CATLG),\n//            SPACE=(CYL,(8,1,50)),\n//            DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3120)\n//*        *------------------------------*\n//*        *  ALLOCATE LOAD LIBRARY       *\n//*        *------------------------------*\n//LOAD     DD DSN=user.LOAD,              <== DSNAME OF LOAD   LIBRARY\n//            VOL=SER=VOLSER,             <== VOLSER OF LOAD   LIBRARY\n//            UNIT=SYSDA,\n//            DISP=(,CATLG),\n//            SPACE=(CYL,(10,1,50)),\n//            DCB=(DSORG=PO,RECFM=U,BLKSIZE=13030)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ANCHOR": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xfc\\x00\\xfc\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:14", "lines": 252, "newlines": 252, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|      GET STORAGE FOR A CONTROL BLOCK AND ANCHOR IT IN AN LPAQ CDE. |    3\n*|  LOGIC:                                                            |    4\n*|      1)  SEARCH CDE'S ON LPAQ FOR CONTROL BLOCK CDE.               |    5\n*|      2)  IF FOUND; VERIFY THAT EYECATCHER IS FIRST 4 BYTES.        |    6\n*|      3)  IF CDE DOES NOT EXIST; GET SQA FOR CDE AND EXTENT LIST.   |    7\n*|          BUILD CDE AND EXTENT LIST.                                |    8\n*|      4)  GET CSA FOR CONTROL BLOCK.                                |    9\n*|      5)  GET THE LOCAL AND CMS LOCKS TO SERIALIZE LPAQ.            |   10\n*|      6)  PUT ADDRESS OF CONTROL BLOCK IN CDE AND EXTENT LIST.      |   11\n*|      7)  IF CDE IS CREATED; CHAIN IT ONTO THE LPAQ.                |   12\n*|      8)  RELEASE ALL LOCKS.                                        |   13\n*|  INPUTS:                                                           |   14\n*|      R1 - PARMLIST MAPPED BY ANKPRM MACRO.                         |   15\n*|  OUTPUTS:                                                          |   16\n*|      ADDRESS OF THE CONTROL BLOCK IN ANKEP FIELD OF PARMLIST.      |   17\n*|      R15- RETURN CODE:                                             |   18\n*|            0 = NEW CONTROL BLOCK HAS BEEN BUILT AND ANCHORED.      |   19\n*|            4 = CONTROL BLOCK ALREADY EXISTS AND IS ANCHORED.       |   20\n*|            8 = GETMAIN FAILED FOR CDE AND EXTENT LIST.             |   21\n*|           12 = GETMAIN FAILED FOR CONTROL BLOCK.                   |   22\n*|  ATTRIBUTES:                                                       |   23\n*|      AMODE 31, RMODE ANY, REFRESHABLE, REQUIRES APF AUTHORIZATION  |   24\n*+--------------------------------------------------------------------+   25\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE ANCHOR,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  26\n               TEXT='ANCHOR CONTROL BLOCK ON LPAQ'                        27\n*        *---------------------------------------*                        28\n*        *     MAP CONTROL BLOCKS USED           *                        29\n*        *---------------------------------------*                        30\n         USING CVT,R3                  COMMUNICATIONS VECTOR TABLE        31\n         USING CDENTRY,R4              CONTENTS DIRECTORY ENTRY           32\n         USING XTLST,R6                EXTENT LIST                        33\n         USING ANKPRM,R10              USER PARMLIST                      34\n         LR    R10,R1                  ADDRESS OF PARMLIST TO R10         35\n*---------------------------------------------------------------------*   36\n*        INVOKE IBM'S IEAQCDSR SERVICE TO SCAN FOR OUR CDE ON LPAQ.   *   37\n*           INPUTS TO IEAQCDSR SERVICE:                               *   38\n*             R8 - HEAD OF LPAQ IN CVT                                *   39\n*             R9 - ADDRESS OF 8 BYTE FIELD WITH NAME OF CDE TO FIND   *   40\n*           OUTPUTS:                                                  *   41\n*             IF CDE FOUND;                                           *   42\n*                INSTRUCTION AFTER BALR GETS CONTROL                  *   43\n*                CDE ADDRESS IS IN R11                                *   44\n*             IF CDE NOT FOUND;                                       *   45\n*                INSTRUCTION 4 BYTES AFTER BALR GETS CONTROL          *   46\n*---------------------------------------------------------------------*   47\n         L     R3,CVTPTR               A(CVT) => R3                       48\n         LA    R9,ANKNAME              A(CONTROL BLOCK NAME) => R9        49\n         L     R8,CVTQLPAQ             HEAD OF LPAQ => R8                 50\n         L     R15,CVTQCDSR            A(LPAQ SCAN ROUTINE)               51\n         BALR  R14,R15                 INVOKE LPAQ SCAN ROUTINE           52\n         B     FNDCDE                  CDE FOUND; PROCESS CDE             53\n         B     GETSTOR                 NOT FOUND; GET STORAGE FOR CDE     54\n*---------------------------------------------------------------------*   55\n*        GET STORAGE FOR LPAQ CDE AND INITIALIZE CDE                  *   56\n*---------------------------------------------------------------------*   57\nGETSTOR  DS    0H                                                         58\n         MODESET MODE=SUP,KEY=ZERO     GET A SUPERVISOR / KEY 0 PSW       59\n         LA    R0,LCDE+LXTNT           LENGTH OF CDE + EXTENT LIST        60\n         GETMAIN RC,                   GET SQA STORAGE FOR CDE AND XL  X  61\n               LV=(R0),                LENGTH                          X  62\n               SP=245,                 SUBPOOL                         X  63\n               LOC=BELOW                                                  64\n         LTR   R15,R15                 GETMAIN OK ?                       65\n         BNZ   EXIT08                  NO; EXIT RC = 8                    66\n         LR    R4,R1                   ADDRESS OF CDE => R4               67\n         XC    0(LCDE+LXTNT,R4),0(R4)  INITIALIZE STORAGE TO X'00'        68\n*        *---------------------------------------*                        69\n*        *     INITIALIZE CDE                    *                        70\n*        *---------------------------------------*                        71\n         LA    R6,LCDE(R4)             A(EXTENT LIST)                     72\n         ST    R6,CDXLMJP              PUT A(EXTENT LIST) INTO CDE        73\n         MVC   CDNAME,ANKNAME          PUT CONTROL BLOCK NAME IN CDE      74\n         OI    CDATTR,CDNIP+CDREN+CDSER+CDNLR  .. SET                     75\n         OI    CDATTR2,CDXLE                   .. CDE FLAGS               76\n*        *---------------------------------------*                        77\n*        *     INITIALIZE XTENT LIST             *                        78\n*        *---------------------------------------*                        79\n         LA    R5,16                   .. LENGTH OF EXTENT LIST ENTRY     80\n         ST    R5,XTLLNTH              .. INTO EXTENT LIST                81\n         LA    R5,1                       .. RELOCATION FACTORS           82\n         ST    R5,XTLNRFAC                .. INTO EXTENT LIST             83\n         MVI   XTLMSBLA,X'80'                                             84\n         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE PSW            85\n         OI    SW1,@NOCDE              SET SWITCH THERE IS NO CDE         86\n         B     GETBLOCK                BRANCH TO OBTAIN CSA FOR BLOCK     87\n*---------------------------------------------------------------------*   88\n*        IF CDE FOUND, CHECK STORAGE IT POINTS TO FOR EYECATCHER      *   89\n*---------------------------------------------------------------------*   90\nFNDCDE   DS    0H                                                         91\n         LR    R4,R11                  A( CDE ) FROM CVTQCDSR ROUTINE     92\n         L     R5,CDENTPT              ENTRY POINT FROM CDE => R5         93\n         CLC   0(L'ANKEYE,R5),ANKEYE   IS EYCATCHER FIRST BYTES?          94\n         BNE   GETBLOCK                NO; AQUIRE STORAGE FOR BLOCK       95\n         ST    R5,ANKEP                PUT ADDRESS IN PARMLIST            96\n         B     EXIT04                  EXIT; CONTROL BLOCK EXISTS         97\n*---------------------------------------------------------------------*   98\n*        GET STORAGE FOR CONTROL BLOCK AND INITIALIZE STORAGE         *   99\n*---------------------------------------------------------------------*  100\nGETBLOCK DS    0H                                                        101\n         XR    R15,R15                 SET REGISTER TO X'00'             102\n         CLI   ANKSP,X'00'             IS PARMLIST SUBPOOL X'00' ?       103\n         BNE   NSPDFLT                 NO; DO NOT SET FOR DEFAULT        104\n         MVI   ANKSP,@ANKSP            SET DEFAULT IN PARMLIST           105\nNSPDFLT  DS    0H                                                        106\n         ICM   R15,B'0001',ANKSP       SET SUBPOOL FROM PARMLIST         107\n         L     R0,ANKLEN               LENGTH OF ANCHORED DATA AREA      108\n         TM    ANKFLAG1,@ANKBEL        BELOW THE LINE STORAGE?           109\n         BO    GBELOW                  YES; GETMAIN BELOW 16MEG          110\n         GETMAIN RC,                   GET STORAGE FOR CONTROL BLOCK   X 111\n               LV=(0),                                                 X 112\n               SP=(15),                                                X 113\n               LOC=(ANY,ANY)                                             114\n         LTR   R15,R15                 GETMAIN OK ?                      115\n         BNZ   EXIT0C                  NO; EXIT RC= 12                   116\n         B     AGET1                   BRANCH AROUND LOC=BELOW GETMAIN   117\nGBELOW   DS    0H                                                        118\n         GETMAIN RC,                   GET STORAGE FOR CONTROL BLOCK   X 119\n               LV=(0),                                                 X 120\n               SP=(15),                                                X 121\n               LOC=BELOW                                                 122\n         LTR   R15,R15                 GETMAIN OK ?                      123\n         BNZ   EXIT0C                  NO; EXIT RC= 12                   124\nAGET1    DS    0H                                                        125\n         ST    R1,ADTBL                SAVE ADDRESS OF CONTROL BLOCK     126\n         LR    R6,R1                   .. INITIALIZE                     127\n         LR    R7,R0                   .. AQUIRED                        128\n         XR    R8,R8                   .. STORAGE                        129\n         XR    R9,R9                   .. TO                             130\n         MVCL  R6,R8                   .. X'00'                          131\n         MVC   0(L'ANKEYE,R1),ANKEYE   PUT EYECATCHER IN CONTROL BLOCK   132\n         ST    R0,L'ANKEYE(R1)         PUT LENGTH OF BLOCK IN CNTL BLK   133\n         MODESET MODE=SUP,KEY=ZERO     GET A SUPERVISOR STATE PSW        134\n*        *---------------------------------------*                       135\n*        *      GET THE LOCAL LOCK               *                       136\n*        *---------------------------------------*                       137\n         SETLOCK OBTAIN,               .. HOLDING                      X 138\n               MODE=UNCOND,            .. THE LOCAL LOCK               X 139\n               TYPE=LOCAL,             .. IS REQUIRED BEFORE           X 140\n               REGS=USE,               .. GETTING THE CMS LOCK         X 141\n               RELATED=REQUIRED                                          142\n*        *---------------------------------------*                       143\n*        *      GET CMS LOCK                     *                       144\n*        *---------------------------------------*                       145\n         SETLOCK OBTAIN,                                               X 146\n               MODE=UNCOND,            .. GET                          X 147\n               TYPE=CMS,               .. THE CMS LOCK                 X 148\n               REGS=USE,               .. TO SERIALIZE                 X 149\n               RELATED=REQUIRED        .. LPAQ                           150\n         TM    SW1,@NOCDE              WAS CDE ABSENT ?                  151\n         BNO   YESCDE                  NO; DO NOT CHAIN IN               152\n*        *---------------------------------------*                       153\n*        *     CHAIN CDE ONTO LPAQ               *                       154\n*        *---------------------------------------*                       155\n         L     R8,CVTQLPAQ             HEAD OF LPAQ => R8                156\n         L     R5,CDCHAIN-CDENTRY(R8)  CHAIN FIELD IN FIRST CDE          157\n         ST    R4,CDCHAIN-CDENTRY(R8)  A(NEW CDE) INTO CHAIN OF 1ST CDE  158\n         ST    R5,CDCHAIN              A(NEXT CDE) INTO NEW CHAIN        159\nYESCDE   DS    0H                                                        160\n*        *---------------------------------------*                       161\n*        *      PUT CONTROL BLOCK ADDRESS AND    *                       162\n*        *      LENGTH INTO CDE AND EXTENT LIST  *                       163\n*        *---------------------------------------*                       164\n         L     R6,CDXLMJP              A(XTENT LIST)                     165\n         L     R1,ADTBL                SAVE ADDRESS OF CONTROL BLOCK     166\n         ST    R1,XTLMSBAD             PUT A(BLOCK) IN EXTENT LIST       167\n         TM    ANKFLAG1,@ANKBEL        BELOW THE LINE STORAGE?           168\n         BZ    SET31                   YES; DO NOT SET AMODE BIT IN CDE  169\n         TM    ANKFLAG1,@ANK31         SET  BIT ENTRY POINT  ?           170\n         BZ    GBELOW1                 NO;DO NOT SET 31BIT ENTRY IN CDE  171\nSET31    DS    0H                                                        172\n         O     R1,=A(X'80000000')      MAKE ENTRYPOINT ADDRESS 31 BIT    173\nGBELOW1  DS    0H                                                        174\n         ST    R1,CDENTPT              PUT A(CONTROL BLOCK) INTO CDE     175\n         ST    R1,ANKEP                PUT ADDRESS IN PARMLIST           176\n         L     R1,ANKLEN               LENGTH OF CONTROL BLOCK           177\n         STCM  R1,B'0111',XTLMSBLN     PUT IN EXTENT LIST                178\n*        *---------------------------------------*                       179\n*        *      RELEASE ALL LOCKS                *                       180\n*        *---------------------------------------*                       181\n         SETLOCK RELEASE,              .. RELEASE                      X 182\n               TYPE=ALL,               .. LOCAL                        X 183\n               REGS=USE,               .. AND CMS                      X 184\n               RELATED=REQUIRED        .. LOCKS                          185\n         MODESET MODE=PROB,KEY=NZERO                                     186\n         B     EXIT00                                                    187\n*---------------------------------------------------------------------*  188\n*        EXIT ROUTINES                                                *  189\n*---------------------------------------------------------------------*  190\nEXIT00   DS    0H                      NEW CONTROL BLOCK CREATED         191\n         LA    15,X'00'                                                  192\n         B     EXIT                                                      193\nEXIT04   DS    0H                      CONTROL BLOCK EXISTS AND IS OK    194\n         LA    15,X'04'                                                  195\n         B     EXIT                                                      196\nEXIT08   DS    0H                      GETMAIN FAILED FOR CDE AND XL     197\n         LA    15,X'08'                                                  198\n         B     EXIT                                                      199\nEXIT0C   DS    0H                                                        200\n         LA    15,X'0C'                GETMAIN FAILED FOR CONTROL BLOCK  201\n         B     EXIT                                                      202\n*---------------------------------------------------------------------*  203\n*        COMMON EXIT                                                  *  204\n*---------------------------------------------------------------------*  205\nEXIT     DS   0H                                                         206\n         ENDMOD                                                          207\n*---------------------------------------------------------------------*  208\n*        WORK AREA                                                    *  209\n*---------------------------------------------------------------------*  210\nWANCHOR  DSECT                                                           211\nADTBL    DS    A                       ADDRESS OF CONTROL BLOCK          212\nSW1      DS    X                       SWITCH                            213\n@NOCDE   EQU   B'10000000'             CDE DOES NOT EXIST                214\nLANCHOR  EQU   *-WANCHOR                                                 215\n*---------------------------------------------------------------------*  216\n*        OTHER DSECTS                                                 *  217\n*---------------------------------------------------------------------*  218\n         ANKPRM                        MAP ANCHOR PARMLIST               219\n         IHACDE                        MAP CDE                           220\nLCDE     EQU   *-CDENTRY               LENGTH OF CDE                     221\n         IHAXTLST                      MAP EXTENT LIST                   222\nLXTNT    EQU   *-XTLST                 LENGTH OF EXTENT LIST             223\n         CVT    DSECT=YES,LIST=YES     MAP CVT                           224\n         IHAPSA DSECT=YES,LIST=YES     MAP PSA FOR SETLOCK               225\n         END                                                             226\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ANKPRM": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x007\\x007\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:20", "lines": 55, "newlines": 55, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                         MAP PARMLIST FOR ANCHOR             1\n         ANKPRM                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|                     MAINTENANCE LOG                               |    4\n.*+----------+------------------------------------+---------+---------+    5\n.*| DATE     |       DESCRIPTION                  | CHANGED | REFER   |    6\n.*+----------+------------------------------------+---------+---------+    7\n.*| 10/11/88 | WRITTEN                            | MJM     |         |    8\n.*+----------+------------------------------------+---------+---------+    9\n.*       THIS PARMLIST IS ALSO USED BY UNANCH                             10\n.*                                                                        11\nANKPRM   DSECT                                                            12\nANKLEN   DS    F                  CONTROL BLOCK LENGTH                    13\nANKEP    DS    A                  ENTRY POINT OF CONTROL BLOCK            14\nANKSP    DS    X                  SUBPOOL FOR CONTROL BLOCK               15\n@ANKSP   EQU   228                DEFAULT SUBPOOL                         16\nANKFLAG1 DS    X                  FLAGS                                   17\n@ANKVFY  EQU   B'10000000'        VERIFY EYCATCHER FOR UNANCH             18\n*                                 (EYECATCHER MUST BE SUPPLIED)           19\n@ANKFREE EQU   B'01000000'        FREEMAIN TABLE AND CDE ON UNANCH        20\n*                                 (SUBPOOL MUST BE SUPPLIED)              21\n@ANKBEL  EQU   B'00100000'        ANCHOR REQUIRES LOC=BELOW               22\n@ANK31   EQU   B'00010000'        AMODE 31 IN CDE ENTRY POINT             23\n*                                 (ONLY CHECKED IF @ANKBEL SET)           24\n         DS    XL2                UNUSED                                  25\nANKNAME  DS    CL8                CONTROL BLOCK NAME                      26\nANKEYE   DS    CL4                EYCATCHER IN MODULE                     27\nLANKPRM  EQU   *-ANKPRM           LENGTH OF PARMLIST                      28\n         MEND                                                             29\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMLKD": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x01T\\x01T\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:26", "lines": 340, "newlines": 340, "modlines": 0, "user": "MVSPP"}, "text": "//*-------------------------------------------------------------------+\n//*  ASMLKD.JCL                                                       |\n//*                                                                   |\n//*  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n//*                                                                   |\n//*  Address questions to: mmarx@mdpaladin.com                        |\n//*                                                                   |\n//*  Permission is hereby granted, free of charge, to any person      |\n//*  obtaining a copy of this software and associated documentation   |\n//*  files (the \"Software\"), to deal in the Software without          |\n//*  restriction, including without limitation the rights to use,     |\n//*  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n//*  copies of the Software, and to permit persons to whom the        |\n//*  Software is furnished to do so, subject to the following         |\n//*  conditions:                                                      |\n//*                                                                   |\n//*  The above copyright notice and this permission notice shall be   |\n//*  included in all copies or substantial portions of the Software.  |\n//*                                                                   |\n//*  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n//*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n//*  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n//*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n//*  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n//*  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n//*  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n//*  OTHER DEALINGS IN THE SOFTWARE.                                  |\n//*-------------------------------------------------------------------+\n//*-------------------------------------------------------------------*\n//*  THIS JOB CONTAINS INSTREAM PROCEDURES AND STEPS TO ASSEMBLE      *\n//*  AND LINK EDIT THE PROGRAMS IN \"MVS POWER PROGRAMMING\".           *\n//*  BEFORE EXECUTING THIS JOB:                                       *\n//*    1) ADD A JOB CARD.                                             *\n//*    2) CHANGE EVERY LINE MARKED:  \"<== \" .                         *\n//*  COPY ANY PROGRAM LINKED WITH PARM='AC=1' INTO AN APF-AUTHORIZED  *\n//*  LIBRARY BEFORE EXECUTING IT.                                     *\n//*-------------------------------------------------------------------*\n//*        *------------------------------*\n//*        *  ASSEMBLY PROCEDURE          *\n//*        *------------------------------*\n//ASSEM    PROC MEMBER=,\n//         PARM1=,\n//         UNIT=SYSDA,                <== CHANGE IF NECESSARY\n//         MACLIB='MACLIB',           <== NAME OF MACRO  LIBRARY\n//         SOURCE='ASM',              <== NAME OF SOURCE LIBRARY\n//         OBJECT='OBJ'               <== NAME OF OBJECT LIBRARY\n//ASSEM    EXEC PGM=IEV90,\n//            PARM='NOOBJECT,DECK,XREF(SHORT),&PARM1'\n//SYSLIB   DD DISP=SHR,DSN=&MACLIB\n//         DD DISP=SHR,DSN=SYS1.AMODGEN\n//         DD DISP=SHR,DSN=SYS1.MACLIB\n//*        DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSUT1   DD UNIT=&UNIT,SPACE=(1700,(600,100))\n//SYSUT2   DD UNIT=&UNIT,SPACE=(1700,(600,100))\n//SYSUT3   DD UNIT=&UNIT,SPACE=(1700,(600,100))\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DUMMY\n//SYSIN    DD DISP=SHR,DSN=&SOURCE(&MEMBER)\n//SYSPUNCH DD DISP=SHR,DSN=&OBJECT(&MEMBER)\n//         PEND\n//*        *------------------------------*\n//*        *  LINK EDIT PROCEDURE         *\n//*        *------------------------------*\n//LKED     PROC PARM1=,\n//         UNIT=SYSDA,                <== CHANGE IF NECESSARY\n//         OBJECT='OBJ',              <== NAME OF OBJECT LIBRARY\n//         LOAD='LOAD'                <== NAME OF LOAD   LIBRARY\n//LKED     EXEC PGM=IEWL,\n//            PARM='XREF,LET,LIST,NCAL,&PARM1'\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=&UNIT,SPACE=(1024,(50,20))\n//OBJ      DD DSN=&OBJECT,DISP=SHR\n//SYSLMOD  DD DSN=&LOAD,DISP=SHR\n//SYSLIN   DD DDNAME=SYSIN\n//         PEND\n//*-------------------------------------------------------------------*\n//*  EACH OF THE FOLLOWING STEPS ASSEMBLES AND LINK EDITS A PROGRAM   *\n//*  CALLED BY OTHER PROGRAMS (APPENDIX B)                            *\n//*-------------------------------------------------------------------*\n//*\n//*-------------------------------------------------------------------*\n//*        GETASCB                                                    *\n//*-------------------------------------------------------------------*\n//GETASCB  EXEC ASSEM,MEMBER=GETASCB,PARM1='RENT'\n//LGETASCB EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY GETASCB\n           INCLUDE OBJ(GETASCB)\n           NAME  GETASCB(R)\n/*\n//*-------------------------------------------------------------------*\n//*        HEXPRT                                                     *\n//*-------------------------------------------------------------------*\n//HEXPRT   EXEC ASSEM,MEMBER=HEXPRT,PARM1='RENT'\n//LHEXPRT  EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY HEXPRT\n           INCLUDE OBJ(HEXPRT)\n           NAME  HEXPRT(R)\n/*\n//*-------------------------------------------------------------------*\n//*        PGMNAME                                                    *\n//*-------------------------------------------------------------------*\n//PGMNAME  EXEC ASSEM,MEMBER=PGMNAME,PARM1='RENT'\n//LPGMNAME EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY PGMNAME\n           INCLUDE OBJ(PGMNAME)\n           NAME  PGMNAME(R)\n/*\n//*-------------------------------------------------------------------*\n//*  EACH OF THE FOLLOWING STEPS ASSEMBLES AND LINK EDITS PROGRAMS    *\n//*  RELATED TO ONE OF THE CHAPTERS IN \"MVS POWER PROGRAMMING\"        *\n//*-------------------------------------------------------------------*\n//*\n//*-------------------------------------------------------------------*\n//*        NCRYPT                                                     *\n//*-------------------------------------------------------------------*\n//NCRYPT   EXEC ASSEM,MEMBER=NCRYPT,PARM1='RENT'\n//LNCRYPT  EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY NCRYPT\n           INCLUDE OBJ(NCRYPT)\n           NAME  NCRYPT(R)\n/*\n//*-------------------------------------------------------------------*\n//*        EDEBUG                                                     *\n//*-------------------------------------------------------------------*\n//EDEBUG   EXEC ASSEM,MEMBER=EDEBUG,PARM1='RENT'\n//LEDEBUG  EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY EDEBUG\n           INCLUDE OBJ(EDEBUG,HEXPRT)\n           NAME  EDEBUG(R)\n/*\n//*-------------------------------------------------------------------*\n//*        SVCLIST                                                    *\n//*-------------------------------------------------------------------*\n//SVCLIST  EXEC ASSEM,MEMBER=SVCLIST,PARM1='RENT'\n//LSVCLIST EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY SVCLIST\n           INCLUDE OBJ(SVCLIST)\n           NAME  SVCLIST(R)\n/*\n//*-------------------------------------------------------------------*\n//*        ESAMOVE                                                    *\n//*-------------------------------------------------------------------*\n//ESAMOVE  EXEC ASSEM,MEMBER=ESAMOVE,PARM1='RENT'\n//XTALK    EXEC ASSEM,MEMBER=XTALK,PARM1='RENT'\n//PRTMOD   EXEC ASSEM,MEMBER=PRTMOD,PARM1='RENT'\n//LESAMOVE EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY ESAMOVE\n           INCLUDE OBJ(ESAMOVE,XTALK,GETASCB,PRTMOD)\n           NAME  ESAMOVE(R)\n/*\n//*-------------------------------------------------------------------*\n//*        XAMOVE                                                     *\n//*-------------------------------------------------------------------*\n//XAMOVE   EXEC ASSEM,MEMBER=XAMOVE,PARM1='RENT'\n//LXAMOVE  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY XAMOVE\n           INCLUDE OBJ(XAMOVE,GETASCB,PRTMOD)\n           NAME  XAMOVE(R)\n/*\n//XASAC    EXEC ASSEM,MEMBER=XASAC,PARM1='RENT'\n//LXASAC   EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY XASAC\n           INCLUDE OBJ(XASAC)\n           NAME  XASAC(R)\n/*\n//*-------------------------------------------------------------------*\n//*        ANCHOR                                                     *\n//*-------------------------------------------------------------------*\n//ANCHOR   EXEC ASSEM,MEMBER=ANCHOR,PARM1='RENT'\n//LANCHOR  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY ANCHOR\n           INCLUDE OBJ(ANCHOR)\n           NAME  ANCHOR(R)\n/*\n//*-------------------------------------------------------------------*\n//*        SCHDSRB                                                    *\n//*-------------------------------------------------------------------*\n//TSCHD1   EXEC ASSEM,MEMBER=TSCHD1,PARM1='RENT'\n//LTSCHD1  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY TSCHD1\n           INCLUDE OBJ(TSCHD1,GETASCB)\n           NAME  TSCHD1(R)\n/*\n//SCHDSRB  EXEC ASSEM,MEMBER=SCHDSRB,PARM1='RENT'\n//LSCHDSRB EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY SCHDSRB\n           INCLUDE OBJ(SCHDSRB,GETASCB)\n           NAME  SCHDSRB(R)\n/*\n//NSWPRTN  EXEC ASSEM,MEMBER=NSWPRTN,PARM1='RENT'\n//LNSWPRTN EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY NSWPRTN\n           INCLUDE OBJ(NSWPRTN)\n           NAME  NSWPRTN(R)\n/*\n//*-------------------------------------------------------------------*\n//*        PCSET                                                      *\n//*-------------------------------------------------------------------*\n//PCSET    EXEC ASSEM,MEMBER=PCSET,PARM1='RENT'\n//LPCSET   EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY PCSET\n           INCLUDE OBJ(PCSET)\n           NAME  PCSET(R)\n/*\n//PCPERM   EXEC ASSEM,MEMBER=PCPERM,PARM1='RENT'\n//PCPERM   EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY PCPERM\n           INCLUDE OBJ(PCPERM)\n           NAME  PCPERM(R)\n/*\n//CKXTALK  EXEC ASSEM,MEMBER=CKXTALK,PARM1='RENT'\n//LCKXTALK EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY CKXTALK\n           INCLUDE OBJ(CKXTALK,XTALK,ANCHOR,GETASCB)\n           NAME  CKXTALK(R)\n/*\n//*        *------------------------------*\n//*        *  ESAMOVE: PC VERSION         *\n//*        *------------------------------*\n//ESAMVPC  EXEC ASSEM,MEMBER=ESAMVPC,PARM1='RENT'\n//LESAMVPC EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY ESAMVPC\n           INCLUDE OBJ(ESAMVPC,PRTMOD)\n           NAME  ESAMVPC(R)\n/*\n//*-------------------------------------------------------------------*\n//*        DSPACE                                                     *\n//*-------------------------------------------------------------------*\n//DSPACE   EXEC ASSEM,MEMBER=DSPACE,PARM1='RENT'\n//LDSPACE  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY DSPACE\n           INCLUDE OBJ(DSPACE,PGMNAME,ANCHOR)\n           NAME  DSPACE(R)\n/*\n//DSPUT    EXEC ASSEM,MEMBER=DSPUT,PARM1='RENT'\n//DSPFIND  EXEC ASSEM,MEMBER=DSPFIND,PARM1='RENT'\n//LDSPUT   EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY DSPUT\n           INCLUDE OBJ(DSPUT,DSPFIND)\n           NAME  DSPUT(R)\n/*\n//*-------------------------------------------------------------------*\n//*  EACH OF THE FOLLOWING STEPS ASSEMBLES AND LINK EDITS PROGRAMS    *\n//*  IN APPENDIX C (ADDITIONAL PROGRAMS)                              *\n//*-------------------------------------------------------------------*\n//*\n//*-------------------------------------------------------------------*\n//*        REPMOD                                                     *\n//*-------------------------------------------------------------------*\n//REPMOD   EXEC ASSEM,MEMBER=REPMOD,PARM1='RENT'\n//LREPMOD  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY REPMOD\n           INCLUDE OBJ(REPMOD)\n           NAME  REPMOD(R)\n/*\n//UNANCH   EXEC ASSEM,MEMBER=UNANCH,PARM1='RENT'\n//LUNANCH  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY UNANCH\n           INCLUDE OBJ(UNANCH)\n           NAME  UNANCH(R)\n/*\n//*-------------------------------------------------------------------*\n//*        HOOKDRV                                                    *\n//*-------------------------------------------------------------------*\n//HOOKDRV  EXEC ASSEM,MEMBER=HOOKDRV,PARM1='RENT'\n//LHOOKDRV EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY HOOKDRV\n           INCLUDE OBJ(HOOKDRV)\n           NAME  HOOKDRV(R)\n/*\n//HOOKIN   EXEC ASSEM,MEMBER=HOOKIN,PARM1='RENT'\n//LHOOKIN  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY HOOKIN\n           INCLUDE OBJ(HOOKIN,REPMOD)\n           NAME  HOOKIN(R)\n/*\n//HOOKSVC  EXEC ASSEM,MEMBER=HOOKSVC,PARM1='RENT'\n//LHOOKSVC EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY HOOKSVC\n           ORDER HOOKSVC,HOOKSV2\n           INCLUDE OBJ(HOOKSVC)\n           NAME  HOOKSVC(R)\n/*\n//*-------------------------------------------------------------------*\n//*        BLDIRB                                                     *\n//*-------------------------------------------------------------------*\n//BLDIRB   EXEC ASSEM,MEMBER=BLDIRB,PARM1='RENT'\n//LBLDIRB  EXEC LKED,PARM1='RENT,AC=1'\n//LKED.SYSIN DD *\n           ENTRY BLDIRB\n           INCLUDE OBJ(BLDIRB)\n           NAME  BLDIRB(R)\n/*\n//SUBTSK   EXEC ASSEM,MEMBER=SUBTSK,PARM1='RENT'\n//LSUBTSK  EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY SUBTSK\n           INCLUDE OBJ(SUBTSK)\n           NAME  SUBTSK(R)\n/*\n//IRBRTN   EXEC ASSEM,MEMBER=IRBRTN,PARM1='RENT'\n//LIRBRTN  EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY IRBRTN\n           INCLUDE OBJ(IRBRTN)\n           NAME  IRBRTN(R)\n/*\n//*-------------------------------------------------------------------*\n//*        DYNAL                                                      *\n//*-------------------------------------------------------------------*\n//DYNAL    EXEC ASSEM,MEMBER=DYNAL,PARM1='RENT'\n//LDYNAL   EXEC LKED,PARM1='RENT'\n//LKED.SYSIN DD *\n           ENTRY DYNAL\n           INCLUDE OBJ(DYNAL)\n           NAME  DYNAL(R)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDIRB": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\x9c\\x00\\x9c\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:32", "lines": 156, "newlines": 156, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   ATTACHES A SUBTASK AND SCHEDULES AN IRB ROUTINE TO THE SUBTASK.  |    3\n*|   . SINCE THIS PROGRAM ISSUES NO SVCS, IT COULD BE CALLED FROM     |    4\n*|     AN SRB ROUTINE.  BRANCH-ENTRY INTO THE STAGE 1 AND 2 EXIT      |    5\n*|     EFFECTORS REQUIRES THAT THE LOCAL LOCK BE OBTAINED.            |    6\n*| LOGIC:                                                             |    7\n*|   1) ATTACH A NON-DISPATCHABLE SUBTASK.                            |    8\n*|   2) LOAD THE IRB ROUTINE.                                         |    9\n*|   3) GET THE LOCAL LOCK.                                           |   10\n*|   4) ISSUE CIRB TO CREATE AN IRB AND OBTAIN AN IQE WORK AREA.      |   11\n*|      THIS IS THE STAGE 1 EXIT EFFECTOR                             |   12\n*|   5) INITIALIZE THE IQE SO THAT IT CONTAINS IRB AND TCB ADDRESSES. |   13\n*|   6) INVOKE CVT0EF00, THE STAGE 2 EXIT EFFECTOR.                   |   14\n*|   7) RELEASE THE LOCAL LOCK.                                       |   15\n*|   8) MAKE THE SUBTASK DISPATCHABLE.                                |   16\n*|   9) WAIT UNTIL POSTED BY THE SUBTASK.                             |   17\n*|  10) DETACH THE SUBTASK.                                           |   18\n*| INPUTS:                                                            |   19\n*|   NONE                                                             |   20\n*| OUTPUTS:                                                           |   21\n*|   CONSOLE MESSAGES                                                 |   22\n*| ATTRIBUTES:                                                        |   23\n*|   AMODE 24, RMODE 24, REENTRANT, REQUIRES APF AUTHORIZATION        |   24\n*+--------------------------------------------------------------------+   25\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE BLDIRB,BASE=12,LOC=BELOW,AMODE=24,RMODE=24,            X  26\n               TEXT=' ',SP=0                                              27\n*        *---------------------------------------*                        28\n*        *     ATTACH THE SUBTASK                *                        29\n*        *---------------------------------------*                        30\n         LA    R3,MAINECB              ADDR ECB THIS TASK                 31\n         ATTACH EP=SUBTSK,             ATTACH SUBTASK                  X  32\n               ECB=(R3),               WTTACH SUBTASK                  X  33\n               DISP=NO,                NON-DISPATCHABLE                X  34\n               SF=(E,ATTLIST)          PARMLIST FOR ATTACH                35\n         ST    R1,ADDRTCB              SAVE SUBTASK TCB ADDRESS           36\n         WTO   'SUBTASK ATTACHED'                                         37\n*        *---------------------------------------*                        38\n*        *     LOAD THE IRB ROUTINE              *                        39\n*        *---------------------------------------*                        40\n         LOAD  EP=IRBRTN,ERRET=EXIT08 LOAD THE IRB ROUTINE                41\n         LR    R3,R0                                                      42\n*        *---------------------------------------*                        43\n*        *     GET THE LOCAL LOCK                *                        44\n*        *---------------------------------------*                        45\n         MODESET KEY=ZERO,MODE=SUP     GET A SUPERVISOR/KEY ZERO PSW      46\n         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X  47\n               REGS=USE,RELATED=REQUIRED                                  48\n*        *---------------------------------------*                        49\n*        *     CREATE AN IRB                     *                        50\n*        *---------------------------------------*                        51\n         L     R4,ADDRTCB              LOAD ADDR OF SUBTASK TCB           52\n         CIRB  EP=(R3),                ENTRY POINT OF IRB ROUTINE      X  53\n               KEY=PP,MODE=PP,         IRB RTN RUNS IN PROB STAT/TCBKEYX  54\n               SVAREA=YES,             SAVE AREA FOR IRB ROUTINE       X  55\n               RETIQE=NO,              GET AN IQE, NOT AN RQE          X  56\n               STAB=(DYN),             FREE THE IRB AT EXIT            X  57\n               WKAREA=10,              80 BYTES OF WORK AREA           X  58\n               BRANCH=YES              BRANCH ENTER THE CIRB ROUTINE      59\n         LR    R3,R1                   IRB ADDRESS TO R3                  60\n         USING RBBASIC,R3              MAP THE IRB                        61\n*        *---------------------------------------*                        62\n*        *     INITIALIZE THE IQE                *                        63\n*        *---------------------------------------*                        64\n         L     R5,RBNEXAV              ADDRESS OF THE IQE WORK AREA       65\n         USING IQESECT,R5              MAP THE IQE                        66\n         ST    R3,IQEIRB               IRB ADDRESS TO IQE                 67\n         L     R4,ADDRTCB              LOAD ADDR OF SUBTASK TCB           68\n         ST    R4,IQETCB               TARGET TCB ADDRESS TO IQE          69\n*        *---------------------------------------*                        70\n*        *     INVOKE THE STAGE 2 EXIT EFFECTOR. *                        71\n*        *---------------------------------------*                        72\n         LCR   R1,R5                   COMPLEMENT IQE ADDR => R1          73\n         L     R15,CVTPTR              ADDRESS OF THE CVT                 74\n         L     R15,CVT0EF00-CVT(R15)   ADDRESS OF STAGE 2 ROUTINE         75\n         BALR  R14,R15                 CALL THE ROUTINE                   76\n*        *---------------------------------------*                        77\n*        *     RELEASE THE LOCAL LOCK            *                        78\n*        *---------------------------------------*                        79\n         SETLOCK RELEASE,TYPE=ALL,                                     X  80\n               REGS=USE,RELATED=REQUIRED                                  81\n         MODESET KEY=NZERO,MODE=PROB   GET A SUPERVISOR/KEY ZERO PSW      82\n*        *---------------------------------------*                        83\n*        *     MAKE THE SUBTASK DISPATCHABLE     *                        84\n*        *---------------------------------------*                        85\n         LA    R1,ADDRTCB              LOAD SUBTASK TCB ADDRESS           86\n         STATUS START,TCB=(R1)         MAKE THE SUBTASK DISPATCHABLE      87\n*        *---------------------------------------*                        88\n*        *     WAIT UNTIL POSTED BY SUBTASK      *                        89\n*        *---------------------------------------*                        90\n         LA    R1,MAINECB              ..WAIT UNTIL                       91\n         WAIT  ECB=(R1)                ..POSTED BY SUBTASK                92\n         WTO   'MAIN TASK POSTED BY SUBTASK'                              93\n*        *---------------------------------------*                        94\n*        *     DETACH THE SUBTASK                *                        95\n*        *---------------------------------------*                        96\n         LA    R1,ADDRTCB              LOAD ADDR OF SUBTASK TCB ADDR      97\n         DETACH (R1)                   DETACH THE SUBTASK                 98\n         WTO   'SUBTASK DETACHED'                                         99\n         B     EXIT00                                                    100\n*---------------------------------------------------------------------*  101\n*        EXIT ROUTINES                                                *  102\n*---------------------------------------------------------------------*  103\nEXIT00   DS    0H                      SUCCESSFUL                        104\n         LA    15,X'00'                                                  105\n         B     EXIT                                                      106\nEXIT08   DS    0H                      LOAD FOR IRB ROUTINE FAILED       107\n         LA    15,X'08'                                                  108\n         B     EXIT                                                      109\n*---------------------------------------------------------------------*  110\n*        COMMON EXIT                                                  *  111\n*---------------------------------------------------------------------*  112\nEXIT     DS   0H                                                         113\n         ENDMOD             RESTORE REGISTERS AND RETURN                 114\n*---------------------------------------------------------------------*  115\n*        WORK AREA                                                    *  116\n*---------------------------------------------------------------------*  117\nWBLDIRB  DSECT                                                           118\nATTLIST  ATTACH ,SF=L                  PARMLIST FOR ATTACH               119\nADDRTCB  DS    A                       ADDRESS OF NEW TCB FROM ATTACH    120\nMAINECB  DS    F                       ECB FOR THIS TASK                 121\nLBLDIRB  EQU    *-WBLDIRB                                                122\n*---------------------------------------------------------------------*  123\n*        OTHER DSECTS                                                 *  124\n*---------------------------------------------------------------------*  125\n         CVT    DSECT=YES,LIST=NO      MAP THE CVT                       126\n         IHAPSA DSECT=YES,LIST=NO      MAP THE PSA                       127\n         IHAIQE                        MAP THE IQE                       128\n         IHARB                         MAP THE RB                        129\n         END                                                             130\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALLPC": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00O\\x00O\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:39", "lines": 79, "newlines": 79, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n&LABEL   CALLPC &PLIST=                                                    2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n         LCLB   &E1                                                        3\n         LCLC   &LBL1,&LBL2,&LBL3,&LBL4,&LBL5                       #01    4\n.*+-------------------------------------------------------------------+\n.*|                     MAINTENANCE LOG                               |\n.*+----------+------------------------------------+---------+---------+\n.*| DATE     |       DESCRIPTION                  | CHANGED | REFER   |\n.*+----------+------------------------------------+---------+---------+\n.*| 04/17/92 | ADD LCLC DECLARATION FOR LBL5      | MJM     | #01     |\n.*| 04/17/92 | SET AMODE BIT IN RETURN ADDRESS    | MJM     | #02     |\n.*|          |   THAT WILL GO INTO STACK PSW      |         |         |\n.*|          |   (FIX#-R0002)                     |         |         |\n.*+----------+------------------------------------+---------+---------+\n.*\n.*+-------------------------------------------------------------------+    5\n.*|      &PLIST IS THE ADDRESS OF A REMOTE PARAMETER LIST             |    6\n.*|             MAPPED BY THE XMSESA MACRO                            |    7\n.*+-------------------------------------------------------------------+    8\n&LBL1    SETC  'CP1'.'&SYSNDX'                                             9\n&LBL2    SETC  'CP2'.'&SYSNDX'                                            10\n&LBL3    SETC  'CP3'.'&SYSNDX'                                            11\n&LBL4    SETC  'CP4'.'&SYSNDX'                                            12\n&LBL5    SETC  'CP5'.'&SYSNDX'                                            13\n         AIF   (T'&PLIST NE 'O').OK1                                      14\n         MNOTE 8,'OPERAND \"PLIST=\" IS REQUIRED'                           15\n&E1      SETB  1                                                          16\n.OK1     ANOP                                                             17\n         AIF   (&E1).MEND                                                 18\n.*+-------------------------------------------------------------------+   19\n.*|                                                                   |   20\n.*+-------------------------------------------------------------------+   21\n&LABEL   LAE   14,&LBL5                ADDRESS AFTER STACK IS POPPED      22\n         BSM   14,0                    SET AMODE IN RETURN REGISTER #02   22001\n         BAKR  14,0                    SAVE REGISTERS AND ASC MODE        23\n         SAC   0                       GO INTO PRIMARY ASC MODE           24\n         L     3,CVTPTR                ADDRESS OF CVT                     25\n         LA    9,&LBL2                 ADDRESS OF ANCHOR CDE NAME         26\n         L     8,CVTQLPAQ-CVT(3)       HEAD OF LPAQ                       27\n         L     15,CVTQCDSR-CVT(3)      ADDRESS OF THE LPAQ SCAN RTN       28\n         BALR  14,15                   INVOKE LPAQ SCAN ROUTINE           29\n         B     &LBL1                   CDE FOUND                          30\n         LA    15,8                    CDE NOT FOUND; SET RC=8            31\n         B     &LBL4                   BRANCH TO POP THE STACK            32\n&LBL1    L     11,CDENTPT-CDENTRY(11)  POINTER TO PC # TABLE IN CDE       33\n         L     14,PCSRTN1-PCSERV(11)   PC NUMBER FOR \"ADD\"                34\n         INNERMM &PLIST,1              PARSE OPERAND                      35\n         B     &LBL3                   ISSUE PC INSTRUCTION               36\n&LBL2    DC    CL8'PCTBL01'            NAME OF CDE THAT ANCHORS PCTBL     37\n&LBL3    PC    0(14)                   INVOKE THE PC ROUTINE              38\n&LBL4    PR                            POP THE STACK                      39\n&LBL5    DS    0H                                                         40\n.MEND    MEND                                                             41\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CKXTALK": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xa6\\x00\\xa6\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:45", "lines": 166, "newlines": 166, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|     CKXTALK IS A SPACE-SWITCHING PC ROUTINE THAT INVOKES XTALK     |    3\n*|     TO BUILD AN ACCESS LIST ENTRY ON THE DU-AL ASSOCIATED WITH     |    4\n*|     THE CALLING PROGRAM'S TCB.  BEFORE BUILDING THE ACCESS LIST    |    5\n*|     ENTRY, CKXTALK CHECKS A TABLE TO DETERMINE IF THE CALLER IS    |    6\n*|     AUTHORIZED TO ESTABLISH COMMUNICATION WITH THE TARGET SPACE.   |    7\n*|  LOGIC:                                                            |    8\n*|    1) GET THE CALLER'S PARAMETER LIST BY LOADING 1 INTO ACCESS     |    9\n*|       REGISTER 1, GOING INTO AR MODE, AND MOVING THE PARMLIST      |   10\n*|       FROM THE CALLER'S ADDRESS SPACE TO THIS ADDRESS SPACE.       |   11\n*|       THE ETDEF THAT DEFINED CKXTALK MUST CONTAIN SASN=OLD.        |   12\n*|    2) GET THE NAME OF THE CALLER'S ADDRESS SPACE BY USING          |   13\n*|       THE SASN AS AN INDEX INTO THE ASVT.                          |   14\n*|    3) SEARCH THE PERMISSIONS TABLE WHOSE ADDRESS WAS PASSED        |   15\n*|       AS A LATENT PARAMETER BY THE CALLER.  IF THE CALLING         |   16\n*|       ADDRESS SPACE NAME AND THE TARGET ADDRESS SPACE NAME         |   17\n*|       ARE BOTH FOUND IN AN ENTRY IN THE PERMISSIONS TABLE,         |   18\n*|       CONTINUE.  ELSE EXIT.                                        |   19\n*|    4) CALL THE XTALK ROUTINE TO BUILD THE ACCESS LIST ENTRY.       |   20\n*|  INPUTS:                                                           |   21\n*|     GR1 - ADDRESS OF CALLER'S PARMLIST                             |   22\n*|           THIS PARMLIST HAS THE SAME FORMAT AS THE XTALK PARMLIST. |   23\n*|     GR4 - ADDRESS OF LATENT PARAMETER LIST                         |   24\n*|           1ST WORD - ADDRESS OF PERMISSIONS TABLE                  |   25\n*|     SASN  IS CALLER'S PASN.                                        |   26\n*|  OUTPUTS:                                                          |   27\n*|    GR15 - RETURN CODE                                              |   28\n*|           0  - ACCESS LIST ENTRY IS BUILT                          |   29\n*|           8  - CALLER IS NOT AUTHORIZED TO BUILD ACCESS LIST ENTRY |   30\n*|                TO TARGET.                                          |   31\n*|          12  - XTALK ROUTINE IS NOT LINK-EDITED.                   |   32\n*|          16  - XTALK ROUTINE FAILED.                               |   33\n*|                R0 - CONTAINS RETURN CODE FROM XTALK.               |   34\n*|                R1 - CONTAINS REASON CODE FROM XTALK.               |   35\n*|  ATTRIBUTES:                                                       |   36\n*|    AMODE 31, RMODE ANY, REENTRANT                                  |   37\n*+--------------------------------------------------------------------+   38\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE CKXTALK,BASE=12,AMODE=31,RMODE=ANY,ENTRY=PCSTACK,      X  39\n               TEXT='PC RTN TO BUILD ACCESS LIST ENTRY'                   40\n*        *---------------------------------------*                        41\n*        *     GET THE NAME OF TARGET ADDRESS    *                        42\n*        *     SPACE FROM CALLER'S PARMLIST.     *                        43\n*        *---------------------------------------*                        44\n         LAM   A1,A1,=A(X'00000001')   SECONDARY ADDRESS SPACE            45\n         SAC   512                     GO INTO ACCESS REGISTER MODE.      46\n         MVC   XTPARMS(XMSESAL),0(R1)  MOVE PARMLIST FROM CALLER'S SPC    47\n         LAE   R3,XTPARMS              ADDRESS OF PARMLIST FOR XTALK      48\n         USING XMSESA,R3               MAP PARMLIST                       49\n         SAC   0                       SET PRIMARY SPACE MODE             50\n*        *---------------------------------------*                        51\n*        *     GET THE NAME OF CALLER'S          *                        52\n*        *     ADDRESS SPACE.                    *                        53\n*        *---------------------------------------*                        54\n         L     R5,CVTPTR               ADDRESS OF CVT                     55\n         L     R5,CVTASVT-CVT(R5)      ADDRESS OF ASVT                    56\n         ESAR  R6                      EXTRACT SECONDARY ASID             57\n         SLL   R6,2                    MULTIPLY BY 4                      58\n         L     R5,ASVTFRST-ASVT(R5,R6)  LOAD ADDRESS OF CALLER'S ASCB     59\n         USING ASCB,R5                 MAP THE ASCB                       60\n         L     R7,ASCBJBNS             POINTER TO JOBNAME FIELD           61\n         CLC   0(L'INIT,R7),INIT       IS IT AN INITIATOR ?               62\n         BNE   NOTINIT                 NO; USE ASCBJBNS                   63\n         L     R7,ASCBJBNI             ADDRESS OF JOBNAME FOR INIT        64\n         MVC   CALLER(L'CALLER),0(R7)  MOVE CALLER'S NAME TO WORKAREA     65\nNOTINIT  DS    0H                                                         66\n*        *---------------------------------------*                        67\n*        *     SEARCH PERMIT TABLE               *                        68\n*        *---------------------------------------*                        69\n*                                      .. ADDRESS OF PERMISSIONS TABLE    70\n         L     R7,0(R4)                .. IS FIRST LATENT PARM            71\nTLOOP    DS    0H                                                         72\n         CLC   0(L'CALLER,R7),ENDTAB   END OF PERMISSIONS TABLE ?         73\n         BE    EXIT08                  YES; MATCH NOT FOUND               74\n         CLC   0(L'CALLER,R7),CALLER   IS THIS THE RIGHT CALLER ?         75\n         BNE   NEXTENT                 NO; CHECK NEXT ENTRY               76\n         CLC   8(L'XMNAME,R7),XMNAME   IS THIS THE RIGHT TARGET ?         77\n         BE    FOUND                   YES; CALL XTALK                    78\nNEXTENT  LA    R7,16(R7)               POINT AT NEXT ENTRY                79\n         B     TLOOP                   CHECK NEXT PERMIT TABLE ENTRY      80\n*        *---------------------------------------*                        81\n*        *     CALL XTALK                        *                        82\n*        *---------------------------------------*                        83\nFOUND    DS    0H                                                         84\n         LA    R7,8                    LENGTH OF ADDRESS SP NAME          85\n         ST    R7,XMNAMEL              PUT IN XTALK PARMLIST              86\n         LAE   R1,0(0,R3)              PARMLIST ADDRESS                   87\n         ICM   R15,15,=V(XTALK)        ADDRESS OF XTALK ROUTINE           88\n         BZ    EXIT0C                  NOT FOUND; EXIT                    89\n         O     R15,=A(X'80000000')     SET 31 BIT ENTRY                   90\n         BASSM R14,R15                 INVOKE THE ROUTINE                 91\n         LTR   R15,R15                 RC = 0 ?                           92\n         BNZ   EXIT10                  NO; EXIT RC = 16                   93\n         EREG  R1,R1                   EXTRACT FROM STACK PARMLIST        94\n         LAM   A1,A1,=A(X'00000001')   LOAD R1 WITH SECONDARY ADD/SP      95\n         SAC   512                     GO INTO ACCESS REGISTER MODE       96\n         MVC   0(XMSESAL,R1),XTPARMS   MOVE PARMLIST TO CALLERS ADD.SP    97\n         SAC   0                       GO INTO PRIMARY SPACE MODE         98\n         B     EXIT00                                                     99\n*---------------------------------------------------------------------*  100\n*        EXIT ROUTINES                                                *  101\n*---------------------------------------------------------------------*  102\nEXIT00   DS    0H                      SUCCESSFUL COMPLETION             103\n         LA    R15,X'00'                                                 104\n         B     EXIT                                                      105\nEXIT08   DS    0H                      PERMISSION NOT ALLOWED            106\n         LA    R15,X'08'                                                 107\n         B     EXIT                                                      108\nEXIT0C   DS    0H                      XTALK ROUTINE NOT LINKED          109\n         LA    15,X'0C'                                                  110\n         B     EXIT                                                      111\nEXIT10   DS    0H                      XTALK SERVICE FAILED              112\n         PERCRC RC=X'10'                                                 113\n         B     EXIT                                                      114\n*---------------------------------------------------------------------*  115\n*        COMMON EXIT                                                  *  116\n*---------------------------------------------------------------------*  117\nEXIT     DS   0H                                                         118\n         ENDMOD                                                          119\n*---------------------------------------------------------------------*  120\n*        CONSTANTS                                                    *  121\n*---------------------------------------------------------------------*  122\nINIT     DC    CL8'INIT'               TO TEST INITIATOR ASCB NAMES      123\nENDTAB   DC    8X'FF'                  END OF PERMISSIONS TABLE LITERAL  124\n*---------------------------------------------------------------------*  125\n*        WORK AREA                                                    *  126\n*---------------------------------------------------------------------*  127\nWCKXTALK DSECT                                                           128\nXTPARMS  DS    0F,CL(XMSESAL)          XTALK PARMLIST                    129\nCALLER   DS    CL8                     XMNAME ADDRESS SPACE              130\nLCKXTALK EQU   *-WCKXTALK                                                131\n*---------------------------------------------------------------------*  132\n*        OTHER DSECTS                                                 *  133\n*---------------------------------------------------------------------*  134\n         XMSESA                        MAP XTALK PARMLIST                135\n         PCSERV                        MAP PC SERVICES ANCHOR BLOCK      136\n         CVT     DSECT=YES             MAP CVT                           137\n         IHAASVT DSECT=YES             MAP ASVT                          138\n         IHAASCB DSECT=YES             MAP ASCB                          139\n         END                                                             140\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPACE": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x01\\xcb\\x01\\xcb\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:51", "lines": 459, "newlines": 459, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+\n*|                      MAINTENANCE LOG                               |\n*+----------+-------------------------------------+---------+---------+\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |\n*+----------+-------------------------------------+---------+---------+\n*| 04/23/92 |  CLEAR OBTAINED COMMON STORAGE      | MJM     | @01     |\n*|          |    (FIX#-R0006)                     |         |         |\n*+----------+-------------------------------------+---------+---------+\n*\n*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   DSPACE EXECUTES AS A STARTED TASK.  IN RESPONSE TO CONSOLE       |    3\n*|   COMMANDS, DSPACE WILL CREATE OR DELETE SCOPE=ALL DATASPACES.     |    4\n*|   DSPACE INITIALIZES AND MAINTAINS A QUEUE OF CONTROL BLOCKS THAT  |    5\n*|   DESCRIBE EACH DATASPACE IT HAS CREATED.  ANY PROGRAM THAT WISHES |    6\n*|   TO ACCESS ANY OF THE DATASPACES (SUCH AS DSPUT) CAN LOCATE ITS   |    7\n*|   CONTROL BLOCK AND USE ITS CONTENTS TO ESTABLISH ACCESS REGISTER  |    8\n*|   MODE COMMUNICATION WITH THE DATASPACE.                           |    9\n*| INPUTS:                                                            |   10\n*|   COMMANDS FROM THE MVS CONSOLE:                                   |   11\n*|     F DSPACE,CREATE(NNNNNNNN) - CREATES DATASPACE NNNNNNNN         |   12\n*|     F DSPACE,DELETE(NNNNNNNN) - DELETES DATASPACE NNNNNNNN         |   13\n*|     P DSPACE                  - STOPS DSPACE                       |   14\n*| OUTPUTS:                                                           |   15\n*|    R15 - RETURN CODE                                               |   16\n*|          0 - DSPACE SUCCESSFULLY INITIALIZED                       |   17\n*|          8 - INITIALIZATION FAILED                                 |   18\n*|    CONSOLE MESSAGES DURING INITIALIZAION, SHUTDOWN, AND IN         |   19\n*|    RESPONSE TO MODIFY COMMANDS.                                    |   20\n*| MAINLINE LOGIC:                                                    |   21\n*|    1) PREPARE TO ACCEPT COMMANDS FROM THE MVS CONSOLE.             |   22\n*|    2) CALL INITRTN SUBROUTINE TO ANCHOR DATASPACE CONTROL BLOCK    |   23\n*|       CHAIN ON AN LPAQ CDE.                                        |   24\n*|    3) DEQUEUE THE \"START\" CIB AND WAIT FOR CONSOLE COMMANDS.       |   25\n*|    4) WHEN A CONSOLE COMMAND POSTS THE COMMAREA ECB, GO TO THE     |   26\n*|       TOP OF THE COMMAND PROCESSING LOOP AND DETERMINE WHETHER     |   27\n*|       THE COMMAND IS \"STOP\" OR \"MODIFY\".                           |   28\n*|       A) IF THE COMMAND IS \"STOP\", EXIT.                           |   29\n*|       B) IF THE COMMAND IS \"MODIFY\" CALL THE PARSRTN SUBROUTINE    |   30\n*|          PARSE THE COMMAND TEXT.                                   |   31\n*|          1) IF THE COMMAND IS \"CREATE\",CALL THE CREATRN SUBROUTINE |   32\n*|             TO CREATE A DATASPACE AND ITS CONTROL BLOCK.           |   33\n*|          2) IF THE COMMAND IS \"DELETE\",CALL THE DELERTN SUBROUTINE |   34\n*|             TO DELETE THE DATASPACE AND ITS CONTROL BLOCK.         |   35\n*|    5) WAIT FOR THE NEXT CONSOLE COMMAND.                           |   36\n*| ATTRIBUTES:                                                        |   37\n*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF AUTHORIZATION      |   38\n*+--------------------------------------------------------------------+   39\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE DSPACE,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  40\n               TEXT='SETUP DATA SPACES ADDRESS SPACE'                     41\n*        *---------------------------------------*                        42\n*        *     PREPARE MVS CONSOLE INTERFACE     *                        43\n*        *---------------------------------------*                        44\n*                                      ENQUEUE ON CONTROL BLOCK CHAIN     45\n         ENQ   (QNAME,DSPTNAME,E,L'DSPTNAME,SYSTEM)                       46\n         LA    R1,EXTLIST              PARMLIST FOR EXTRACT               47\n         LA    R3,QEDANSW              ANSWER AREA FOR EXTRACT            48\n*                                      GET ADDRESS COMMUNICATION AREA     49\n         EXTRACT (R3),'S',FIELDS=(COMM),MF=(E,(1))                        50\n         L     R3,QEDANSW              A(COMMUNICATIONS AREA) => R3       51\n         USING COMLIST,R3              MAP COMMUNICATIONS AREA            52\n         L     R4,COMCIBPT             A(COMMAND INPUT BUFFER)            53\n         USING CIB,R4                  MAP CIB                            54\n         QEDIT ORIGIN=COMCIBPT,CIBCTR=4 SET LIMIT ON QUEUED COMMANDS      55\n         USING DSPTBLE,R5              MAP DSPTBLE BLOCK                  56\n*        *---------------------------------------*                        57\n*        *     CALL INITIALIZATION ROUTINE       *                        58\n*        *---------------------------------------*                        59\n         LA    R15,INITRTN             ..INVOKE                           60\n         BAKR  0,R15                   ..INITIALIZATION ROUTINE           61\n         LTR   R15,R15                 RC = 0 ?                           62\n         BZ    CONT1                   YES; CONTINUE                      63\n         WTO   'DSPACE: INITIALIZATION FAILED'                            64\n         B     EXIT08                  NO; EXIT                           65\nCONT1    DS    0H                                                         66\n         LA    R1,TRANSECB             ..MAKE THIS                        67\n         SYSEVENT TRANSWAP             ..ADDRESS SPACE NON-SWAPABLE       68\n         B     WAIT                    WAIT FOR CONSOLE COMMANDS          69\n*        *---------------------------------------*                        70\n*        *     TOP OF COMMAND PROCESSING LOOP    *                        71\n*        *---------------------------------------*                        72\nCKCOM    DS    0H                      TOP OF COMMAND PROCESSING LOOP     73\n         L     R4,COMCIBPT             ADDRESS OF COMMAND INPUT BUFR      74\n         CLI   CIBVERB,CIBSTOP         IS THE COMMAND \"STOP\" ?            75\n         BNE   NOTSTOP                 NO; CHECK IF \"MODIFY\"              76\n*        *---------------------------------------*                        77\n*        *     PROCESS \"STOP\" COMMAND            *                        78\n*        *---------------------------------------*                        79\n         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE CIB                  80\n         B     EXIT00                  EXIT WITH RC=0                     81\nNOTSTOP  DS    0H                                                         82\n         CLI   CIBVERB,CIBMODFY        IS THE COMMAND \"MODIFY\" ?          83\n         BE    MODIFY                  YES; PROCESS \"MODIFY\" COMMAND      84\n         WTO   'DSPACE: INVALID COMMAND ISSUED'                           85\n         B     WAIT                    WAIT FOR NEXT COMMAND              86\nMODIFY   DS    0H                                                         87\n*        *---------------------------------------*                        88\n*        *     PROCESS \"MODIFY\" COMMAND          *                        89\n*        *---------------------------------------*                        90\n         LA    R15,PARSRTN             ..INVOKE                           91\n         BAKR  0,R15                   ..COMMAND PARSE ROUTINE            92\n*                                      ENQUEUE ON CONTROL BLOCK CHAIN     93\n         ENQ   (QNAME,DSPTNAME,E,L'DSPTNAME,SYSTEM)                       94\n         CLC   PARSAREA(L'COMM1),COMM1 IS THE COMMAND \"CREATE\" ?          95\n         BNE   NCOMM1                  NO; CHECK NEXT COMMAND             96\n         LA    R15,CREATRN             ..INVOKE                           97\n         BAKR  0,R15                   ..DATASPACE CREATE ROUTINE         98\n         B     WAIT                    WAIT FOR NEXT COMMAND              99\nNCOMM1   DS    0H                                                        100\n         CLC   PARSAREA(L'COMM2),COMM2 IS THE COMMAND \"DELETE\" ?         101\n         BNE   NCOMM2                  NO; CHECK NEXT COMMAND            102\n         LA    R15,DELERTN             ..INVOKE                          103\n         BAKR  0,R15                   ..DATASPACE DELETE ROUTINE        104\n         B     WAIT                    WAIT FOR NEXT COMMAND             105\nNCOMM2   DS    0H                                                        106\n*        *---------------------------------------*                       107\n*        *     UNKNOWN COMMAND                   *                       108\n*        *---------------------------------------*                       109\n         WTO   'DSPACE: UNKNOWN OPERAND'                                 110\n         B     WAIT                    WAIT FOR NEXT COMMAND             111\nWAIT     DS    0H                                                        112\n*                                      DEQUEUE CONTROL BLOCK CHAIN       113\n         DEQ   (QNAME,DSPTNAME,L'DSPTNAME,SYSTEM),RET=HAVE               114\n         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE PROCESSED CIB       115\n         L     R6,COMECBPT             .. WAIT ON ECB                    116\n         WAIT  ECB=(6)                 .. IN COMM AREA                   117\n         B     CKCOM                   BOTTOM OF COMMAND LOOP            118\n*---------------------------------------------------------------------*  119\n*        INITIALIZATION ROUTINE                                       *  120\n*          1)  CALL PGMNAME TO GET CURRENT ADDRESS SPACE NAME         *  121\n*          2)  ISSUE ALESERV EXTRACTH TO GET STOKEN FOR CURRENT SPACE *  122\n*          3)  CALL ANCHOR TO GET LPAQ CDE TO ANCHOR CONTROL BLOCKS   *  123\n*          4)  INITIALIZE THE FIRST CONTROL BLOCK ON THE CHAIN        *  124\n*---------------------------------------------------------------------*  125\nINITRTN  DS    0H                                                        126\n         LA    R1,PPGPARM              PARMLIST FOR PGMNAME SERVICE      127\n         ICM   R15,B'1111',=V(PGMNAME) A(PGNMNAM SERVICE)                128\n         BNZ   CONTI0                  \u00ac=0; MODULE IS LINK-EDITED        129\n         LA    R15,8                   SET BAD RETURN CODE               130\n         B     INITRTNE                EXIT THIS SUBROUTINE              131\nCONTI0   DS    0H                                                        132\n         O     R15,=A(X'80000000')     TURN ON HIGH ORDER BIT            133\n         BASSM R14,R15                 INVOKE SERVICE                    134\n*                                      SAVE HOME ADDRESS SPACE NAME      135\n         MVC   HOMENAME(L'HOMENAME),PPGNAME-PPGNM(R1)                    136\n         ALESERV EXTRACTH,             GET STOKEN FOR THIS ADDRESS SPC X 137\n               STOKEN=HOMETOKN,        RETURN STOKEN TO HOMETOKN       X 138\n               MF=(E,ALELIST)                                            139\n         LTR   R15,R15                 RC = 0?                           140\n         BZ    CONTI1                  YES; CONTINUE                     141\n         WTO   'DSPACE: ALESERV EXTRACT FAILED'                          142\n         B     INITRTNE                EXIT THIS SUBROUTINE              143\nCONTI1   DS    0H                                                        144\n         LA    R1,ANKPARMS             PARMLIST FOR ANCHOR SERVICE       145\n         USING ANKPRM,R1               MAP PARMLIST                      146\n         LA    R15,LDSPTABE            ..LENGTH OF DSPTBLE               147\n         ST    R15,ANKLEN              ..TO PARMLIST                     148\n         MVI   ANKSP,ANKPOOL           SET SUBPOOL IN PARMLIST           149\n         MVC   ANKNAME(8),DSPTNAME     MODULE NAME TO PARMLIST           150\n         MVC   ANKEYE(L'ANKEYE),EYEID  EYECATCHER TO PARMLIST            151\n         XC    ANKEP(L'ANKEP),ANKEP    INITIALIZE ENTRYPOINT TO X'00'    152\n         ICM   R15,B'1111',=V(ANCHOR)  A(ANCHOR SERVICE)                 153\n         BNZ   CONTI2                                                    154\n         WTO   'DSPACE: ANCHOR NOT LINKED'                               155\n         LA    R15,8                   SET BAD RETURN CODE               156\n         B     INITRTNE                EXIT THIS SUBROUTINE              157\nCONTI2   DS    0H                                                        158\n         O     R15,=A(X'80000000')     TURN ON HIGH ORDER BIT            159\n         BASSM R14,R15                 INVOKE SERVICE                    160\n         C     R15,=F'4'               RC LE 4?                          161\n         BNH   CONTI3                  YES; CONTINUE                     162\n         WTO   'DSPACE: ANCHOR FAILED'                                   163\n         B     INITRTNE                EXIT THIS SUBROUTINE              164\nCONTI3   DS    0H                                                        165\n         LA    R5,ANKPARMS             PARMLIST FOR ANCHOR SERVICE       166\n         L     R5,ANKEP-ANKPRM(R5)     LOAD ADDRESS OF FIRST TBLENTRY    167\n         ST    R5,ENTRY1               SAVE A(FIRST ENTRY)               168\n*                                      TABLE INITIALIZED ?               169\n         CLC   DSP_XNAME(L'DSP_XNAME),=C'@@NULL@@'                       170\n         BE    ALLSET                  YES; BYPASS INITIALIZATION        171\n*                                      SET NEXT ENTRY FIELD TO X'00'     172\n         XC    DSP_NEXT_ENTRY(L'DSP_NEXT_ENTRY),DSP_NEXT_ENTRY           173\n*                                      SET NAME FIELD TO DUMMY           174\n         MVC   DSP_XNAME(L'DSP_XNAME),=C'@@NULL@@'                       175\n*                                      SET NAME FIELD TO DUMMY           176\n         MVC   DSP_XOUTNAME(L'DSP_XOUTNAME),=C'@@NULL@@'                 177\nALLSET   DS    0H                                                        178\n         WTO   'DSPACE: INITIALIZED '  ISSUE INITIALIZED MESSAGE         179\nINITRTNE DS    0H                                                        180\n         PR                            POP STACK AND RETURN              181\n*---------------------------------------------------------------------*  182\n*        COMMAND PARSE ROUTINE                                        *  183\n*---------------------------------------------------------------------*  184\nPARSRTN  DS    0H                                                        185\n         MVI   OPERAND,X'40'                   ..SET OPERAND             186\n         MVC   OPERAND+1(L'OPERAND-1),OPERAND  ..AREA TO SPACES          187\n         MVI   PARSAREA,X'40'                     ..SET COMMAND PARSE    188\n         MVC   PARSAREA+1(L'PARSAREA-1),PARSAREA  ..AREA TO SPACES       189\n         LH    R6,CIBDATLN         LENGTH OF CIBDATA                     190\n         BCTR  R6,0                LESS 1 FOR EXECUTE                    191\n         EX    R6,MVCIBDAT         MOVE COMMAND TO PARSE AREA            192\n         B     AFT1                                                      193\nMVCIBDAT MVC   PARSAREA(0),CIBDATA *** EXECUTE ONLY ***                  194\nAFT1     DS    0H                                                        195\n         LA    R7,PARSAREA+7       POINT AT OPERAND                      196\n         S     R6,=F'7'            DECREMENT LENGTH                      197\n         BNH   PARSRTNE            LE 0; EXIT                            198\n         EX    R6,TRTIBDAT         TEST FOR DELIMETER                    199\n         B     AFT2                                                      200\nTRTIBDAT TRT   0(0,R7),CMDDLM      *** EXECUTE ONLY ***                  201\nAFT2     DS    0H                                                        202\n         LR    R9,R1               A(DELIMETER)                          203\n         SR    R9,R7               LENGTH OF OPERAND                     204\n         BCTR  R9,0                DECREMENT FOR EXECUTE                 205\n         EX    R9,MVCOBDAT         MOVE OPERAND                          206\n         B     AFT3                                                      207\nMVCOBDAT MVC   OPERAND(0),0(R7)    *** EXECUTE ONLY ***                  208\nAFT3     DS    0H                                                        209\nPARSRTNE DS    0H                                                        210\n         PR                            POP STACK AND RETURN              211\n*        *---------------------------------------*                       212\n*        *      TABLE OF DELIMETERS USED         *                       213\n*        *      TO PARSE COMMANDS                *                       214\n*        *---------------------------------------*                       215\nCMDDLM   DC    XL256'00'                                                 216\n         ORG   CMDDLM+X'40'                                              217\n         DC    X'40'                                                     218\n         ORG   CMDDLM+C','                                               219\n         DC    C','                                                      220\n         ORG   CMDDLM+C'('                                               221\n         DC    C'('                                                      222\n         ORG   CMDDLM+C')'                                               223\n         DC    C')'                                                      224\n         ORG                                                             225\n*---------------------------------------------------------------------*  226\n*        DATASPACE CREATE ROUTINE                                     *  227\n*          1)  ISSUE DSPSERV CREATE TO BUILD DATASPACE                *  228\n*          2)  FIND END OF DSPTBLE CHAIN, BUILD DSPTBLE BLOCK FOR     *  229\n*              NEW DATASPACE AND ADD THE BLOCK TO THE DSPTBLE CHAIN   *  230\n*---------------------------------------------------------------------*  231\nCREATRN  DS    0H                                                        232\n         MODESET MODE=SUP,             ..GET A SUPERVISOR STATE        X 233\n               KEY=ZERO                ..ZERO KEY PSW                    234\n*                                                                        235\n         DSPSERV CREATE,               CREATE A DATASPACE              X 236\n               SCOPE=ALL,              ACCESS PERMITTED TO ALL         X 237\n               NAME=OPERAND,           NAME OF DATASPACE FROM COMMAND  X 238\n               BLOCKS=DSPBLOCK,        SIZE OF THE DATASPACE           X 239\n               KEY=KEY,                DATASPACE STORAGE KEY           X 240\n               STOKEN=DSPTOKEN,        STOKEN OF NEW DATASPACE         X 241\n               ORIGIN=DSPORG,          FIRST VIRTUAL ADDR IN DATASPACE X 242\n               MF=(E,DSPLIST,COMPLETE)                                   243\n         LTR   R15,R15                 RETURN CODE = 0 ?                 244\n         BZ    CONTC1                  YES; CONTINUE                     245\n         WTO   'DSPACE: DPSERV CREATE FAILED'                            246\n         B     CREATRNE                EXIT THIS ROUTINE                 247\nCONTC1   DS    0H                                                        248\n*        *---------------------------------------*                       249\n*        *     BUILD DSPTBLE CONTROL BLOCK       *                       250\n*        *     FOR DATASPACE AND CHAIN IT ON     *                       251\n*        *---------------------------------------*                       252\n         L     R5,ENTRY1               A(FIRST DSPTBLE CONTROL BLOCK)    253\nCKNXTE   DS    0H                                                        254\n*                                      WAS THIS CREATED BY ADDRESS       255\n*                                      SPACE WITH THIS NAME              256\n         CLC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),HOMENAME                 257\n         BNE   CKNXT                   NO; CHECK THE NEXT ENTRY          258\n*                                      DOES THIS HAVE SAME DSPACE NAME?  259\n         CLC   DSP_XNAME(L'DSP_XNAME),OPERAND                            260\n         BE    STUPENT                 YES; MUST NOT HAVE BEEN           261\n*                                      CLEANED UP SO REUSE IT            262\nCKNXT    DS    0H                                                        263\n*                                      IS THIS THE LAST IN CHAIN ?       264\n         ICM   R6,B'1111',DSP_NEXT_ENTRY                                 265\n         BZ    NEWENT                  YES; GET A NEW DSPTBLE BLOCK      266\n         LR    R5,R6                   POINT AT NEXT DSPTBLE BLOCK       267\n         B     CKNXTE                  CHECK NEXT BLOCK                  268\nNEWENT   DS    0H                                                        269\n         ICM   R15,B'0001',=AL1(ANKPOOL)                                 270\n         LA    R0,LDSPTBLE             LENGTH OF DSPTBLE BLOCK           271\n         STORAGE OBTAIN,COND=YES,      GET STORAGE FOR NEW BLOCK       X 272\n               LENGTH=(0),             LENGTH OF DSPTBLE BLOCK         X 273\n               SP=(15),                SAME SUBPOOL AS CDE             X 274\n               ADDR=(1)                RETURN STORAGE ADDRESS TO R1      275\n         LTR   R15,R15                                                   276\n         BZ    CONTC2                  YES; CONTINUE                     277\n         WTO   'DSPACE: STORAGE OBTAIN FAILED FOR CREATE'                278\n         B     CREATRNE                EXIT THIS ROUTINE                 279\nCONTC2   DS    0H                                                        280\n         XC    0(LDSPTBLE,R1),0(R1)    CLEAR THE COMMON STORAGE     @01  280001\n         ST    R1,DSP_NEXT_ENTRY       PUT ADDRESS IN PREVIOUS BLOCK     281\n         LR    R5,R1                   POINT AT THIS BLOCK               282\nSTUPENT  DS    0H                                                        283\n*                                      PUT EYECATCHER IN BLOCK           284\n         MVC   DSP_BLOCK_ID(L'DSP_BLOCK_ID),EYEID                        285\n*                                      COPY DSPSERV PARMLIST TO BLOCK    286\n         MVC   DSP(DSPL),DSPLIST                                         287\n*                                      COPY CREATOR'S STOKEN TO BLOCK    288\n         MVC   DSP_OWNER_STOKEN(L'DSP_OWNER_STOKEN),HOMETOKN             289\n*                                      COPY CREATOR'S NAME  TO BLOCK     290\n         MVC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),HOMENAME                 291\n         MVC   WTOAREA(WTO1L),WTO1     COPY WTO PARMLIST TO USER STORAG  292\n         MVC   WTO1VAR(L'WTO1VAR),OPERAND   MOVE DSPACE NAME TO WTO      293\n         LA    R1,WTOAREA              ..ISSUE                           294\n         WTO   ,MF=(E,(R1))            ..WTO                             295\nCREATRNE DS    0H                                                        296\n         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE AND KEY PSW   297\n         PR                            POP STACK AND RETURN              298\n*---------------------------------------------------------------------*  299\n*        DATASPACE DELETE ROUTINE                                     *  300\n*---------------------------------------------------------------------*  301\nDELERTN  DS    0H                                                        302\n*        *---------------------------------------*                       303\n*        *     SEARCH CHAIN FOR DSPTBLE ENTRY    *                       304\n*        *     FOR THE DATASPACE TO DELETE       *                       305\n*        *---------------------------------------*                       306\n         L     R5,ENTRY1               A(FIRST DSPTBLE BLOCK)            307\nCKNXTE1 DS     0H                                                        308\n*                                      A(NEXT DSPTBLE BLOCK)             309\n         ICM   R6,B'1111',DSP_NEXT_ENTRY                                 310\n*                                      WAS THIS DATASPACE CREATED BY     311\n*                                      ADDRESS SPACE WITH THIS NAME      312\n         CLC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),HOMENAME                 313\n         BNE   CKNXT1                  NO; CHECK THE NEXT ENTRY          314\n*                                      DOES THIS HAVE SAME DSPACE NAME?  315\n         CLC   DSP_XNAME(L'DSP_XNAME),OPERAND                            316\n         BE    DELETEIT                YES; DELETE IT                    317\nCKNXT1   DS    0H                                                        318\n         LTR   R6,R6                   DOES NEXT BLOCK EXIST ?           319\n         BZ    NODELETE                NO; DO NOT DELETE                 320\n         LR    R7,R5                   SAVE ADDRESS PREVIOUS BLOCK       321\n         LR    R5,R6                   POINT AT NEXT BLOCK               322\n         B     CKNXTE1                 CHECK NEXT BLOCK                  323\nDELETEIT DS    0H                                                        324\n*        *---------------------------------------*                       325\n*        *     DELETE DATA SPACE                 *                       326\n*        *---------------------------------------*                       327\n         MODESET MODE=SUP,             ..GET A SUPERVISOR STATE        X 328\n               KEY=ZERO                ..ZERO KEY PSW                    329\n*                                                                        330\n         DSPSERV DELETE,               ..DELETE THE DATASPACE USING    X 331\n               STOKEN=DSP_XSTOKEN,     ..THE STOKEN FROM DSPTBLE BLOCK X 332\n               MF=(E,DSPLIST,COMPLETE)                                   333\n         LTR   R15,R15                 RETURN CODE = 0?                  334\n         BZ    CDELETE                 YES; CONTINUE                     335\nNODELETE DS    0H                                                        336\n         WTO   'DSPACE: DSPSERV DELETE FAILED'                           337\n         B     DELERTNE                EXIT THIS SUBROUTINE              338\nCDELETE  DS    0H                                                        339\n*                                      ADDR NEW BLOCK INTO OLD BLOCK     340\n         ST    R6,DSP_NEXT_ENTRY-DSPTBLE(R7)                             341\n         MVC   WTOAREA(WTO2L),WTO2     MOVE WTO TO USER STORAGE          342\n         MVC   WTO2VAR(L'WTO2VAR),OPERAND   MOVE DSPACE NAME TO WTO      343\n         LA    R1,WTOAREA              ..ISSUE                           344\n         WTO   ,MF=(E,(R1))            ..WTO                             345\n*        *---------------------------------------*                       346\n*        *     DELETE DSPTBLE BLOCK              *                       347\n*        *---------------------------------------*                       348\n         ICM   R15,B'0001',=AL1(ANKPOOL)  SUBPOOL OF DSPTBLE BLOCK       349\n         LA    R0,LDSPTBLE             LENGTH OF BLOCK                   350\n         STORAGE RELEASE,COND=YES,     FREE THE STORAGE FOR DSPTBLE    X 351\n               LENGTH=(0),             LENGTH OF BLOCK                 X 352\n               ADDR=(5),               ADDRESS OF BLOCK                X 353\n               SP=(15)                 SUBPOOL OF BLOCK                  354\n         LTR   R15,R15                 RC = 0?                           355\n         BZ    DELERTNE                YES; EXIT THIS SUBROUTINE         356\n         WTO   'DSPACE: STORAGE RELEASE FAILED'                          357\nDELERTNE DS    0H                                                        358\n         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE AND KEY PSW   359\n         PR                            POP STACK AND RETURN              360\n*---------------------------------------------------------------------*  361\n*        EXIT ROUTINES                                                *  362\n*---------------------------------------------------------------------*  363\nEXIT00   DS    0H                      SUCCESSFUL                        364\n         LA    15,X'00'                                                  365\n         B     EXIT                                                      366\nEXIT08   DS    0H                      INITIALIZATION FAILED             367\n         PERCRC RC=X'08'                                                 368\n         B     EXIT                                                      369\n*---------------------------------------------------------------------*  370\n*        COMMON EXIT                                                  *  371\n*---------------------------------------------------------------------*  372\nEXIT     DS   0H                                                         373\n         ENDMOD                                                          374\n*---------------------------------------------------------------------*  375\n*        CONSTANTS                                                    *  376\n*---------------------------------------------------------------------*  377\nEYEID    DC    CL4'DS@P'               EYECATCHER IN DUMMY DSPSERV       378\nQNAME    DC    CL8'DSPCDE'             QNAME FOR ENQ/DEQ                 379\nDSPTNAME DC    CL8'DSPTAB00'           RNAME FOR ENQ/DEQ                 380\nCOMM1    DC    C'CREATE('              F DSPACE,CREATE - COMMAND TEXT    381\nCOMM2    DC    C'DELETE('              F DSPACE,DELETE - COMMAND TEXT    382\nDSPBLOCK DC    A((DSPBYTES+4095)/4096) DATASPACE SIZE IN BLOCKS          383\nDSPBYTES EQU   100000                  DATASPACE SIZE IN BYTES           384\nWTO1     WTO   'DATASPACE CREATED.  NAME OF DATASPACE IS XXXXXXXX',MF=L  385\nWTO1L    EQU   *-WTO1                  PARMLIST AND LENGTH FOR WTO       386\nWTO1VAR  EQU   WTOAREA+4+41,8          WTO MODIFIED FIELD DISPLACEMENT   387\nWTO2     WTO   'DATASPACE DELETED.  NAME OF DATASPACE IS XXXXXXXX',MF=L  388\nWTO2L    EQU   *-WTO2                  PARMLIST AND LENGTH FOR WTO       389\nWTO2VAR  EQU   WTOAREA+4+41,8          WTO MODIFIED FIELD DISPLACEMENT   390\nKEY      DC    X'80'                   STORAGE KEY FOR DATASPACE         391\nANKPOOL  EQU   228                     SUBPOOL FOR ANCHOR                392\n*---------------------------------------------------------------------*  393\n*        WORK AREA                                                    *  394\n*---------------------------------------------------------------------*  395\nWDSPACE DSECT                                                            396\nTRANSECB DS    F                       ECB FOR SYSEVENT                  397\n         DSPSERV MF=(L,DSPLIST)        PARMLIST FOR DSPSERV              398\nALELIST  ALESERV MF=L                  PARMLIST FOR ALESERV              399\nEXTLIST  EXTRACT ,MF=L                 PARMLIST FOR EXTRACT              400\nPPGPARM  DS    CL(PPGNML)              PARMLIST FOR PGMNAME SERVICE      401\nDSPALET  DS    F                       DATASPACE ALET                    402\nDSPORG   DS    F                       DATASPACE ORIGIN                  403\nDSPTOKEN DS    CL8                     DATASPACE STOKEN                  404\nHOMETOKN DS    CL8                     HOME ASN TOKEN                    405\nQEDANSW  DS    F                       RESPONSE FROM EXTRACT             406\nANKPARMS DS    0F,CL(LANKPRM)          PARMLIST FOR ANCHOR1 SERVICE      407\nPARSAREA DS    CL100                   COMMAND PARSE AREA                408\nWTOAREA  DS    0F,CL100                WTO                               409\nOPERAND  DS    CL8                     OPERAND FROM COMMAND PARSE        410\nHOMENAME DS    CL8                     HOME ADDRESS SPACE NAME           411\nENTRY1   DS    F                       ADDR FIRST ENTRY) IN DSPTABLE     412\nLDSPACE EQU    *-WDSPACE               LENGTH OF THE WORK AREA           413\n*---------------------------------------------------------------------*  414\n*        OTHER DSECTS                                                 *  415\n*---------------------------------------------------------------------*  416\n         IEZCOM                        MAPPING FOR COMMUNICATIONS AREA   417\nCIB      DSECT                         DSECT CARD FOR CIB                418\n         IEZCIB                        MAPPING FOR COMMAND INPUT BUFFER  419\n         ANKPRM                        MAP PARMLIST FOR ANCHOR SERVICE   420\n         DSPTBLE                       MAP DSPTBLE ENTRY                 421\n         PPGNM                         MAP PARMLIST FOR PGMNAME SERVICE  422\n         END                                                             423\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPACE#": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x14\\x01\\x114_\\x01\\x114\\x8f\\x15#\\x00\\x08\\x00\\x05\\x00\\x07\\xc5\\xe2\\xe2\\xc5\\xc4\\xe3\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2011-12-11T00:00:00", "modifydate": "2011-12-14T15:23:14", "lines": 8, "newlines": 5, "modlines": 7, "user": "ESSEDT1"}, "text": "//*\n//* THIS IS A SAMPLE STC PROCLIB MEMBER FOR DSPACE\n//*\n//DSPACE PROC\n//DSPACE EXEC PGM=DSPACE,REGION=0M\n//STEPLIB  DD DISP=SHR,DSN=???????.V482.FILE554.LOAD\n//*->SETPROG APF,ADD,DSN(...................) VOL(??????)\n//SYSPRINT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSPFIND": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x06\\x01\\x02\\x07?\\x01\\x114\\x8f\\x15S\\x00\\xcd\\x00\\xc1\\x00\\x00\\xc5\\xe2\\xe2\\xc5\\xc4\\xe3\\xf1@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2011-12-14T15:53:06", "lines": 205, "newlines": 193, "modlines": 0, "user": "ESSEDT1"}, "text": "*+--------------------------------------------------------------------+    2\n*|                      MAINTENANCE LOG                               |    3\n*+----------+-------------------------------------+---------+---------+    4\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |    5\n*+----------+-------------------------------------+---------+---------+    6\n*| 12/14/11 | CORRECTED FOR S0C4 ABENDS IN DSPUT  | EDTOBIAS| @001    |    7\n*|          | THE WHOLE EXIT ROUTINE WAS CORRECTED|         |         |    7\n*|          | WTO CLOBBERS THE RETURN CODE REG15  |         |         |    7\n*|          | GIVING BACK DSPUT RC=0 FOR ABNORMAL |         |         |    7\n*|          | EXIT FROM DSPFIND. CAUSING S0C4 IN  |         |         |    7\n*|          | THE CALLER'S (DSPUT) PROGRAM CODE   |         |         |    7\n*+----------+-------------------------------------+---------+---------+    8\n*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   FINDS THE DSPTBLE CONTOL BLOCK FOR A DATASPACE CREATED BY        |    3\n*|   THE DSPACE ROUTINE.  DSPFIND WILL OPTIONALLY BUILD OR DELETE     |    4\n*|   AN ACCESS LIST ENTRY ON THE CALLER'S DU-AL OR PS-AL ACCORDING    |    5\n*|   TO A FUNCTION CODE SUPPLIED IN THE INPUT PARAMETER LIST.         |    6\n*| INPUTS:                                                            |    7\n*|   R1  - ADDRESS OF A PARMLIST MAPPED BY DSPTBLE MACRO              |    8\n*|         (FOR DELETE REQUEST CALLER MUST SUPPLY ALET IN PARMLIST)   |    9\n*| OUTPUTS:                                                           |   10\n*|   R15 - RETURN CODE                                                |   11\n*|          0 - DATASPACE FOUND / ACCESS LIST ENTRY BUILT             |   12\n*|          8 - LPAQ CDE NOT FOUND FOR DSPTBLE BLOCK CHAIN            |   13\n*|         12 - DSPTBLE BLOCK FOR THE TARGET DATASPACE NOT ON CHAIN   |   14\n*|         16 - ACCESS LIST ENTRY CREATION FAILED                     |   15\n*|         20 - ACCESS LIST ENTRY DELETION FAILED                     |   16\n*| LOGIC:                                                             |   17\n*|    1) ENQUEUE ON THE CHAIN OF DSPTBLE BLOCKS                       |   18\n*|    2) CALL LPAQ SEARCH ROUTINE TO FIND ANCHOR FOR DSPTBLE CHAIN    |   19\n*|    3) SEARCH FOR DSPTBLE BLOCK FOR TARGET DATASPACE                |   20\n*|    4) ACCORDING TO FUNCTION CODE ISSUE ALSERV ADD OR DELETE        |   21\n*| ATTRIBUTES:                                                        |   22\n*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF OR PKM 0 AUTHORITY |   23\n*+--------------------------------------------------------------------+   24\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE DSPFIND,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,          X  25\n               TEXT='FIND STOKEN FOR DATASPACE'                           26\n         LR    R3,R1                   ADDRESS OF PARMLIST                27\n*        *---------------------------------------*                        28\n*        *     ENQUEUE ON TABLE CHAIN            *                        29\n*        *---------------------------------------*                        30\n         ENQ   (QNAME,DSPTNAME,E,L'DSPTNAME,SYSTEM)                       31\n*        *---------------------------------------*                        32\n*        *     FIND LPAQ CDE FOR DSPTBLE CHAIN   *                        33\n*        *---------------------------------------*                        34\n         L     R2,CVTPTR               ADDRESS OF CVT                     35\n         LA    R9,DSPTNAME             ADDRESS OF ANCHOR CDE NAME         36\n         L     R8,CVTQLPAQ-CVT(R2)     HEAD OF LPAQ                       37\n         L     R15,CVTQCDSR-CVT(R2)    ADDRESS OF THE LPAQ SCAN RTN       38\n         BALR  R14,R15                 INVOKE LPAQ SCAN ROUTINE           39\n         B     FNDCDE                  CDE FOUND                          40\n         B     EXIT08                  CDE NOT FOUND                      41\nFNDCDE   DS    0H                                                         42\n*        *---------------------------------------*                        43\n*        *     SEARCH DSPTBLE BLOCKS FOR TARGET  *                        44\n*        *---------------------------------------*                        45\n         L     R5,CDENTPT-CDENTRY(R11) A(FIRST BLOCK FROM CDE E.P)        46\n         USING DSPTBLE,R5              MAP DSPTBLE BLOCK                  47\nCKNXTE   DS    0H                                                         48\n*                                      ..OWNER NAME IN DSPTBLE SAME AS    49\n*                                      ..OWNER NAME IN PARMLIST?          50\n         CLC   DSP_OWNER_NAME,DSP_OWNER_NAME-DSPTBLE(R3)                  51\n         BNE   CKNXT                   NO; CHECK THE NEXT ENTRY           52\n*                                      ..DSPACE NAME IN DSPTBLE SAME AS   53\n*                                      ..DSPACE NAME IN PARMLIST?         54\n         CLC   DSP_XNAME,DSP_XNAME-DSPTBLE(R3)                            55\n         BE    FOUNDIT                 YES; CHECK FUNCTION CODE           56\nCKNXT    DS    0H                                                         57\n*                                      LAST DSPTBLE BLOCK?                58\n         ICM   R5,B'1111',DSP_NEXT_ENTRY                                  59\n         BZ    EXIT0C                  YES; EXIT                          60\n         B     CKNXTE                  CHECK NEXT DSPTBLE BLOCK           61\nFOUNDIT  DS    0H                                                         62\n         MVC   0(LDSPTABE,R3),DSPTBLE  COPY BLOCK TO INPUT PARMLIST       63\n         DROP  R5                      DROP ADDRESSING ON DSPTBLE         64\n         USING DSPTBLE,R3              MAP INPUT PARMLIST                 65\n         ST    R5,DSP_TBLENTRY         SAVE DSPTBLE ADDRESS IN PARMLIST   66\n         TM    DSP_FUNCTION,X'FF'      ANY FUNCTION CODE?                 67\n         BZ    ENDFUNCT                NO; EXIT                           68\n         SPKA  0                       GET A KEY ZERO PSW                 69\n*        *---------------------------------------*                        70\n*        *     CREATE ENTRY IN DU-AL ACCESS LIST *                        71\n*        *---------------------------------------*                        72\n         TM    DSP_FUNCTION,@GETDUAL   CREATE DU-AL ACCESS LIST ENTRY?    73\n         BNE   NOTDUAL                 NO; TEST NEXT CODE                 74\n         ALESERV ADD,                  CREATE ACCESS LIST ENTRY        X  75\n               STOKEN=DSP_XSTOKEN,     STOKEN FROM COPIED DSPTBLE BLOCKX  76\n               ALET=DSP_ALET,          SAVE ALET IN INPUT PARMLIST     X  77\n               CHKEAX=NO,              DO NOT CHECK EAX                X  78\n               AL=WORKUNIT,            BUILD DU-AL ACCESS LIST ENTRY   X  79\n               ACCESS=PUBLIC,          PUBLIC ACCESS LIST ENTRY        X  80\n               MF=(E,ALELIST)                                             81\n         LTR   R15,R15                 RETURN CODE = 0?                   82\n         BNZ   EXIT10                  NO; EXIT PEROLATING ALESERV RC     83\n         B     ENDFUNCT                EXIT RC=0                          84\nNOTDUAL  DS    0H                                                         85\n*        *---------------------------------------*                        86\n*        *     CREATE ENTRY IN PS-AL ACCESS LIST *                        87\n*        *---------------------------------------*                        88\n         TM    DSP_FUNCTION,@GETPSAN   CREATE PS-AL ACCESS LIST ENTRY?    89\n         BNE   NOTPSAN                 NO; TEST NEXT FLAG                 90\n         ALESERV ADD,                                                  X  91\n               STOKEN=DSP_XSTOKEN,     STOKEN FROM COPIED DSPTBLE BLOCKX  92\n               ALET=DSP_ALET,          SAVE ALET IN INPUT PARMLIST     X  93\n               CHKEAX=NO,              DO NOT CHECK EAX                X  94\n               AL=PASN,                BUILD PS-AL ACCESS LIST ENTRY   X  95\n               ACCESS=PUBLIC,          PUBLIC ACCESS LIST ENTRY        X  96\n               MF=(E,ALELIST)                                             97\n         LTR   R15,R15                 RETURN CODE = 0?                   98\n         BNZ   EXIT10                  NO; EXIT PEROLATING ALESERV RC     99\n         B     ENDFUNCT                EXIT RC=0                         100\nNOTPSAN  DS    0H                                                        101\n*        *---------------------------------------*                       102\n*        *     DELETE ACCESS LIST ENTRY          *                       103\n*        *---------------------------------------*                       104\n         TM    DSP_FUNCTION,@FREEAL    DELETE ACCESS LIST ENTRY ?        105\n         BNE   NOTFREE                 NO; TEST NEXT FLAG                106\n         ALESERV DELETE,               DELETE ACCESS LIST ENTRY        X 107\n               ALET=DSP_ALET,          CALLER MUST SUPPLY ALET         X 108\n               MF=(E,ALELIST)                                            109\n         LTR   R15,R15                 RETURN CODE = 0?                  110\n         BNZ   EXIT14                  NO; EXIT PEROLATING ALESERV RC    111\n         B     ENDFUNCT                EXIT RC=0                         112\nNOTFREE  DS    0H                                                        113\nENDFUNCT DS    0H                                                        114\n         B     EXIT00                                                    115\n*---------------------------------------------------------------------*  116\n*        EXIT ROUTINES                                                *  117\n*---------------------------------------------------------------------*  118\nEXIT00   DS    0H                      SUCCESSFUL                        119\n         LA    15,X'00'                                                  120\n         B     EXIT                                                      121\nEXIT08   DS    0H                      ANCHOR FOR DSPTBLE NOT FOUND      122\n         WTO   'DSPFIND: CDE NOT FOUND'                            @001  124\n         PERCRC RC=X'08'                                           @001  123\n         B     EXIT                                                      125\nEXIT0C   DS    0H                      NO DSPTBLE BLOCK FOR DATASPACE    126\n         WTO   'DSPFIND: DSPACE ENTRY NOT FOUND'                   @001  128\n         LA    15,X'0C'                                            @001  127\n         B     EXIT                                                      129\nEXIT10   DS    0H        CREATION OF ACCESS LIST ENTRY FAILED            130\n         WTO   'DSPFIND: ALESERV CREATE FAILED'                    @001  132\n         PERCRC RC=X'10'                                           @001  131\n         B     EXIT                                                      133\nEXIT14   DS    0H        DELETION OF ACCESS LIST ENTRY FAILED            134\n         WTO   'DSPFIND: ALESERV DELETE FAILED'                    @001  136\n         PERCRC RC=X'14'                                           @001  135\n         B     EXIT                                                      137\n*---------------------------------------------------------------------*  138\n*        COMMON EXIT                                                  *  139\n*---------------------------------------------------------------------*  140\nEXIT     DS    0H                                                        141\n         LR    R2,R15                  SAVE RETURN CODE                  142\n*        *---------------------------------------*                       143\n*        *     DEQUEUE ON TABLE CHAIN            *                       144\n*        *---------------------------------------*                       145\n         DEQ   (QNAME,DSPTNAME,L'DSPTNAME,SYSTEM),RET=HAVE               146\n         LR    R15,R2                  RESTORE RETURN CODE               147\n         ENDMOD                                                          148\n*---------------------------------------------------------------------*  149\n*        CONSTANTS                                                    *  150\n*---------------------------------------------------------------------*  151\nQNAME    DC    CL8'DSPCDE'             ENQ/DEQ MAJOR NAME                152\nDSPTNAME DC    CL8'DSPTAB00'           NAME OF CDE THAT ANCHORS DSPTBL   153\n*---------------------------------------------------------------------*  154\n*        WORK AREA                                                    *  155\n*---------------------------------------------------------------------*  156\nWDSPFIND DSECT                                                           157\nALELIST  ALESERV MF=L                  ALESERV PARMLIST                  158\nLDSPFIND EQU   *-WDSPFIND                                                159\n*---------------------------------------------------------------------*  160\n*        OTHER DSECTS                                                 *  161\n*---------------------------------------------------------------------*  162\n         DSPTBLE                       DSPTBLE ENTRY                     163\n         IHACDE                        MAP CDE                           164\nLCDE     EQU   *-CDENTRY               LENGTH OF CDE                     165\n         CVT   DSECT=YES,LIST=NO       MAP CVT                           166\n         END                                                             167\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPFINDO": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xc1\\x00\\xc1\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:04", "lines": 193, "newlines": 193, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   FINDS THE DSPTBLE CONTOL BLOCK FOR A DATASPACE CREATED BY        |    3\n*|   THE DSPACE ROUTINE.  DSPFIND WILL OPTIONALLY BUILD OR DELETE     |    4\n*|   AN ACCESS LIST ENTRY ON THE CALLER'S DU-AL OR PS-AL ACCORDING    |    5\n*|   TO A FUNCTION CODE SUPPLIED IN THE INPUT PARAMETER LIST.         |    6\n*| INPUTS:                                                            |    7\n*|   R1  - ADDRESS OF A PARMLIST MAPPED BY DSPTBLE MACRO              |    8\n*|         (FOR DELETE REQUEST CALLER MUST SUPPLY ALET IN PARMLIST)   |    9\n*| OUTPUTS:                                                           |   10\n*|   R15 - RETURN CODE                                                |   11\n*|          0 - DATASPACE FOUND / ACCESS LIST ENTRY BUILT             |   12\n*|          8 - LPAQ CDE NOT FOUND FOR DSPTBLE BLOCK CHAIN            |   13\n*|         12 - DSPTBLE BLOCK FOR THE TARGET DATASPACE NOT ON CHAIN   |   14\n*|         16 - ACCESS LIST ENTRY CREATION FAILED                     |   15\n*|         20 - ACCESS LIST ENTRY DELETION FAILED                     |   16\n*| LOGIC:                                                             |   17\n*|    1) ENQUEUE ON THE CHAIN OF DSPTBLE BLOCKS                       |   18\n*|    2) CALL LPAQ SEARCH ROUTINE TO FIND ANCHOR FOR DSPTBLE CHAIN    |   19\n*|    3) SEARCH FOR DSPTBLE BLOCK FOR TARGET DATASPACE                |   20\n*|    4) ACCORDING TO FUNCTION CODE ISSUE ALSERV ADD OR DELETE        |   21\n*| ATTRIBUTES:                                                        |   22\n*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF OR PKM 0 AUTHORITY |   23\n*+--------------------------------------------------------------------+   24\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE DSPFIND,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,          X  25\n               TEXT='FIND STOKEN FOR DATASPACE'                           26\n         LR    R3,R1                   ADDRESS OF PARMLIST                27\n*        *---------------------------------------*                        28\n*        *     ENQUEUE ON TABLE CHAIN            *                        29\n*        *---------------------------------------*                        30\n         ENQ   (QNAME,DSPTNAME,E,L'DSPTNAME,SYSTEM)                       31\n*        *---------------------------------------*                        32\n*        *     FIND LPAQ CDE FOR DSPTBLE CHAIN   *                        33\n*        *---------------------------------------*                        34\n         L     R2,CVTPTR               ADDRESS OF CVT                     35\n         LA    R9,DSPTNAME             ADDRESS OF ANCHOR CDE NAME         36\n         L     R8,CVTQLPAQ-CVT(R2)     HEAD OF LPAQ                       37\n         L     R15,CVTQCDSR-CVT(R2)    ADDRESS OF THE LPAQ SCAN RTN       38\n         BALR  R14,R15                 INVOKE LPAQ SCAN ROUTINE           39\n         B     FNDCDE                  CDE FOUND                          40\n         B     EXIT08                  CDE NOT FOUND                      41\nFNDCDE   DS    0H                                                         42\n*        *---------------------------------------*                        43\n*        *     SEARCH DSPTBLE BLOCKS FOR TARGET  *                        44\n*        *---------------------------------------*                        45\n         L     R5,CDENTPT-CDENTRY(R11) A(FIRST BLOCK FROM CDE E.P)        46\n         USING DSPTBLE,R5              MAP DSPTBLE BLOCK                  47\nCKNXTE   DS    0H                                                         48\n*                                      ..OWNER NAME IN DSPTBLE SAME AS    49\n*                                      ..OWNER NAME IN PARMLIST?          50\n         CLC   DSP_OWNER_NAME,DSP_OWNER_NAME-DSPTBLE(R3)                  51\n         BNE   CKNXT                   NO; CHECK THE NEXT ENTRY           52\n*                                      ..DSPACE NAME IN DSPTBLE SAME AS   53\n*                                      ..DSPACE NAME IN PARMLIST?         54\n         CLC   DSP_XNAME,DSP_XNAME-DSPTBLE(R3)                            55\n         BE    FOUNDIT                 YES; CHECK FUNCTION CODE           56\nCKNXT    DS    0H                                                         57\n*                                      LAST DSPTBLE BLOCK?                58\n         ICM   R5,B'1111',DSP_NEXT_ENTRY                                  59\n         BZ    EXIT0C                  YES; EXIT                          60\n         B     CKNXTE                  CHECK NEXT DSPTBLE BLOCK           61\nFOUNDIT  DS    0H                                                         62\n         MVC   0(LDSPTABE,R3),DSPTBLE  COPY BLOCK TO INPUT PARMLIST       63\n         DROP  R5                      DROP ADDRESSING ON DSPTBLE         64\n         USING DSPTBLE,R3              MAP INPUT PARMLIST                 65\n         ST    R5,DSP_TBLENTRY         SAVE DSPTBLE ADDRESS IN PARMLIST   66\n         TM    DSP_FUNCTION,X'FF'      ANY FUNCTION CODE?                 67\n         BZ    ENDFUNCT                NO; EXIT                           68\n         SPKA  0                       GET A KEY ZERO PSW                 69\n*        *---------------------------------------*                        70\n*        *     CREATE ENTRY IN DU-AL ACCESS LIST *                        71\n*        *---------------------------------------*                        72\n         TM    DSP_FUNCTION,@GETDUAL   CREATE DU-AL ACCESS LIST ENTRY?    73\n         BNE   NOTDUAL                 NO; TEST NEXT CODE                 74\n         ALESERV ADD,                  CREATE ACCESS LIST ENTRY        X  75\n               STOKEN=DSP_XSTOKEN,     STOKEN FROM COPIED DSPTBLE BLOCKX  76\n               ALET=DSP_ALET,          SAVE ALET IN INPUT PARMLIST     X  77\n               CHKEAX=NO,              DO NOT CHECK EAX                X  78\n               AL=WORKUNIT,            BUILD DU-AL ACCESS LIST ENTRY   X  79\n               ACCESS=PUBLIC,          PUBLIC ACCESS LIST ENTRY        X  80\n               MF=(E,ALELIST)                                             81\n         LTR   R15,R15                 RETURN CODE = 0?                   82\n         BNZ   EXIT10                  NO; EXIT PEROLATING ALESERV RC     83\n         B     ENDFUNCT                EXIT RC=0                          84\nNOTDUAL  DS    0H                                                         85\n*        *---------------------------------------*                        86\n*        *     CREATE ENTRY IN PS-AL ACCESS LIST *                        87\n*        *---------------------------------------*                        88\n         TM    DSP_FUNCTION,@GETPSAN   CREATE PS-AL ACCESS LIST ENTRY?    89\n         BNE   NOTPSAN                 NO; TEST NEXT FLAG                 90\n         ALESERV ADD,                                                  X  91\n               STOKEN=DSP_XSTOKEN,     STOKEN FROM COPIED DSPTBLE BLOCKX  92\n               ALET=DSP_ALET,          SAVE ALET IN INPUT PARMLIST     X  93\n               CHKEAX=NO,              DO NOT CHECK EAX                X  94\n               AL=PASN,                BUILD PS-AL ACCESS LIST ENTRY   X  95\n               ACCESS=PUBLIC,          PUBLIC ACCESS LIST ENTRY        X  96\n               MF=(E,ALELIST)                                             97\n         LTR   R15,R15                 RETURN CODE = 0?                   98\n         BNZ   EXIT10                  NO; EXIT PEROLATING ALESERV RC     99\n         B     ENDFUNCT                EXIT RC=0                         100\nNOTPSAN  DS    0H                                                        101\n*        *---------------------------------------*                       102\n*        *     DELETE ACCESS LIST ENTRY          *                       103\n*        *---------------------------------------*                       104\n         TM    DSP_FUNCTION,@FREEAL    DELETE ACCESS LIST ENTRY ?        105\n         BNE   NOTFREE                 NO; TEST NEXT FLAG                106\n         ALESERV DELETE,               DELETE ACCESS LIST ENTRY        X 107\n               ALET=DSP_ALET,          CALLER MUST SUPPLY ALET         X 108\n               MF=(E,ALELIST)                                            109\n         LTR   R15,R15                 RETURN CODE = 0?                  110\n         BNZ   EXIT14                  NO; EXIT PEROLATING ALESERV RC    111\n         B     ENDFUNCT                EXIT RC=0                         112\nNOTFREE  DS    0H                                                        113\nENDFUNCT DS    0H                                                        114\n         B     EXIT00                                                    115\n*---------------------------------------------------------------------*  116\n*        EXIT ROUTINES                                                *  117\n*---------------------------------------------------------------------*  118\nEXIT00   DS    0H                      SUCCESSFUL                        119\n         LA    15,X'00'                                                  120\n         B     EXIT                                                      121\nEXIT08   DS    0H                      ANCHOR FOR DSPTBLE NOT FOUND      122\n         PERCRC RC=X'08'                                                 123\n         WTO   'DSPFIND: CDE NOT FOUND'                                  124\n         B     EXIT                                                      125\nEXIT0C   DS    0H                      NO DSPTBLE BLOCK FOR DATASPACE    126\n         LA    15,X'0C'                                                  127\n         WTO   'DSPFIND: DSPACE ENTRY NOT FOUND'                         128\n         B     EXIT                                                      129\nEXIT10   DS    0H        CREATION OF ACCESS LIST ENTRY FAILED            130\n         PERCRC RC=X'10'                                                 131\n         WTO   'DSPFIND: ALESERV CREATE FAILED'                          132\n         B     EXIT                                                      133\nEXIT14   DS    0H        DELETION OF ACCESS LIST ENTRY FAILED            134\n         PERCRC RC=X'14'                                                 135\n         WTO   'DSPFIND: ALESERV DELETE FAILED'                          136\n         B     EXIT                                                      137\n*---------------------------------------------------------------------*  138\n*        COMMON EXIT                                                  *  139\n*---------------------------------------------------------------------*  140\nEXIT     DS    0H                                                        141\n         LR    R2,R15                  SAVE RETURN CODE                  142\n*        *---------------------------------------*                       143\n*        *     DEQUEUE ON TABLE CHAIN            *                       144\n*        *---------------------------------------*                       145\n         DEQ   (QNAME,DSPTNAME,L'DSPTNAME,SYSTEM),RET=HAVE               146\n         LR    R15,R2                  RESTORE RETURN CODE               147\n         ENDMOD                                                          148\n*---------------------------------------------------------------------*  149\n*        CONSTANTS                                                    *  150\n*---------------------------------------------------------------------*  151\nQNAME    DC    CL8'DSPCDE'             ENQ/DEQ MAJOR NAME                152\nDSPTNAME DC    CL8'DSPTAB00'           NAME OF CDE THAT ANCHORS DSPTBL   153\n*---------------------------------------------------------------------*  154\n*        WORK AREA                                                    *  155\n*---------------------------------------------------------------------*  156\nWDSPFIND DSECT                                                           157\nALELIST  ALESERV MF=L                  ALESERV PARMLIST                  158\nLDSPFIND EQU   *-WDSPFIND                                                159\n*---------------------------------------------------------------------*  160\n*        OTHER DSECTS                                                 *  161\n*---------------------------------------------------------------------*  162\n         DSPTBLE                       DSPTBLE ENTRY                     163\n         IHACDE                        MAP CDE                           164\nLCDE     EQU   *-CDENTRY               LENGTH OF CDE                     165\n         CVT   DSECT=YES,LIST=NO       MAP CVT                           166\n         END                                                             167\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPTBLE": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x004\\x004\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:11", "lines": 52, "newlines": 52, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                        MAP DSPTBLE BLOCK/PARMS - DSPFIND    1\n         DSPTBLE                                                           2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\nDSPTBLE  DSECT                                                             3\n.*             *--------------------------------------*                    4\n.*             * THIS SECTION MAPS DSPTBLE BLOCK      *                    5\n.*             *--------------------------------------*                    6\nDSP_BLOCK_ID     DS   CL4              EYECATCHER                          7\nDSP_NEXT_ENTRY   DS   F                ADDRESS NEXT DSPTBLE BLOCK          8\nDSP_OWNER_NAME   DS   CL8              NAME OF OWNING ADDRESS SPACE        9\nDSP_OWNER_STOKEN DS   CL8              STOKEN OF OWNING ADDRESS SPACE     10\n         DSPSERV MF=(L,DSP)            LIST FORM DSPSERV MACRO            11\nLDSPTABE EQU     *-DSPTBLE             LENGTH OF DSPTBLE BLOCK            12\n.*             *--------------------------------------*                   13\n.*             * THIS SECTION CONTAINS PARMS FOR THE  *                   14\n.*             * DSPFIND SERVICE                      *                   15\n.*             *--------------------------------------*                   16\nDSP_FUNCTION     DS   X                FUNCTION CODE FOR DSPFIND          17\n@GETDUAL         EQU  B'10000000'      CREATE DU-AL ACCESS LIST ENTRY     18\n@GETPSAN         EQU  B'01000000'      CREATE PS-AL ACCESS LIST ENTRY     19\n@FREEAL          EQU  B'00100000'      DELETE ACCESS LIST ENTRY           20\n                 DS   XL3              NOT USED                           21\nDSP_ALET         DS   A                ALET FROM CREATE OR FOR DELETE     22\n*                                      (CALLER MUST SUPPLY FOR DELETE)    23\nDSP_TBLENTRY     DS   A                ADDRESS OF DSPTBLE BLOCK           24\nLDSPTBLE EQU   *-DSPTBLE               LENGTH OF DSPTBLE DSECT            25\n         MEND                                                             26\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPUT": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xb5\\x00\\xb5\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:17", "lines": 181, "newlines": 181, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+\n*|                      MAINTENANCE LOG                               |\n*+----------+-------------------------------------+---------+---------+\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |\n*+----------+-------------------------------------+---------+---------+\n*| 03/21/92 |  ALET FOR DSPACE 2 TO ACCESS REG    | MJM     | @01     |\n*|          |    (FIX#-R0003)                     |         |         |\n*+----------+-------------------------------------+---------+---------+\n*                                                                     |\n*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   DSPUT IS A TEST PROGRAM FOR THE DATASPACES CREATED BY DSPACE.    |    3\n*|   AFTER DSPACE IS STARTED AT THE CONSOLE, THE OPERATOR ISSUES:     |    4\n*|       F DSPACE,CREATE(DSP1) - TO CREATE A DATASPACE NAMED \"DSP1\"   |    5\n*|       F DSPACE,CREATE(DSP2) - TO CREATE A DATASPACE NAMED \"DSP2\" . |    6\n*|   WHEN DSPUT IS NOW EXECUTED, IT WILL MOVE A WTO PARAMETER LIST    |    7\n*|   FROM THIS ADDRESS SPACE TO DATASPACE DSP1, FROM DSP1 TO DSP2,    |    8\n*|   AND FROM DSP2 TO A LOCATION IN THIS ADDRESS SPACE.  DSPUT THEN   |    9\n*|   WRITES A CONSOLE MESSAGE BY ISSUING WTO MF=E USING THE PARMLIST. |   10\n*| INPUTS:                                                            |   11\n*|   NONE                                                             |   12\n*| OUTPUTS:                                                           |   13\n*|   R15 - RETURN CODE                                                |   14\n*|          0 - SUCCESSFUL COMPLETION                                 |   15\n*|          8 - DSPFIND ROUTINE NOT LINK EDITED                       |   16\n*|         16 - DSPFIND DID NOT LOCATE DSP1 OR DSP2                   |   17\n*| LOGIC:                                                             |   18\n*|    1) PREPARE TO ACCEPT COMMANDS FROM THE MVS CONSOLE.             |   19\n*| ATTRIBUTES:                                                        |   20\n*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF AUTHORIZATION      |   21\n*+--------------------------------------------------------------------+   22\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE DSPUT,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,            X  23\n               TEXT='MOVE DATA INTO DATASPACES'                           24\n*        *---------------------------------------*                        25\n*        *     CALL DSPFIND TO BUILD ACCESS      *                        26\n*        *     LIST ENTRY FOR DSP1 DATASPACE     *                        27\n*        *---------------------------------------*                        28\n         LA    R3,DSPPARMS             PARMLIST FOR FIND SERVICE          29\n         USING DSPTBLE,R3              MAP PARMLIST                       30\n         OI    DSP_FUNCTION,@GETDUAL   SET FLAG TO BUILD DU-AL ENTRY      31\n*                                      DSP1 OWNER NAME TO PARMLIST        32\n         MVC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),=CL8'DSPACE'              33\n         MVC   DSP_XNAME(L'DSP_XNAME),DSNAME1                             34\n         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW         35\n         LR    R1,R3                   PARMLIST ADDRESS TO R1             36\n         ICM   R15,B'1111',=V(DSPFIND) A(DSPFIND SERVICE)                 37\n         BZ    EXIT08                  =0; SERVICE NOT LINK-EDITED        38\n         O     R15,=A(X'80000000')     SET FOR 31 BIT ENTRY               39\n         BASSM R14,R15                 INVOKE SERVICE                     40\n         LTR   R15,R15                 RC=0?                              41\n         BNZ   EXIT10                  NO; EXIT                           42\n         MVC   ALET1,DSP_ALET          ALET FOR DSP1                      43\n         MVC   ORIGIN1,DSP_XORIGIN     ORIGIN FOR DSP1                    44\n*        *---------------------------------------*                        45\n*        *     CALL DSPFIND TO BUILD ACCESS      *                        46\n*        *     LIST ENTRY FOR DSP2 DATASPACE     *                        47\n*        *---------------------------------------*                        48\n*                                      DSP2 OWNER NAME TO PARMLIST        49\n         MVC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),=CL8'DSPACE'              50\n         MVC   DSP_XNAME(L'DSP_XNAME),DSNAME2                             51\n         LR    R1,R3                   PARMLIST ADDRESS TO R1             52\n         ICM   R15,B'1111',=V(DSPFIND) A(DSPFIND SERVICE)                 53\n         O     R15,=A(X'80000000')     SET FOR 31 BIT ENTRY               54\n         BASSM R14,R15                 INVOKE SERVICE                     55\n         LTR   R15,R15                 RC=0?                              56\n         BNZ   EXIT10                  NO; EXIT                           57\n         MODESET MODE=PROB             GET A PROBLEM STATE PSW            58\n         MVC   ALET2,DSP_ALET          ALET FOR DSP2                      59\n         MVC   ORIGIN2,DSP_XORIGIN     ORIGIN FOR DSP2                    60\n*        *---------------------------------------*                        61\n*        *     ISSUE ENQ TO SERIALIZE ACCESS TO  *                        62\n*        *     DATASPACE STORAGE                 *                        63\n*        *---------------------------------------*                        64\n         ENQ   (DSNAME1,DSRANGE,E,L'DSRANGE,SYSTEM)                       65\n         ENQ   (DSNAME2,DSRANGE,E,L'DSRANGE,SYSTEM)                       66\n*        *---------------------------------------*                        67\n*        *     GO INTO ACCESS REGISTER MODE      *                        68\n*        *---------------------------------------*                        69\n         SAC   512                     GO INTO ACCESS REGISTER MODE       70\n         LAE   R12,0(R12,0)            LOAD BASE AR WITH X'00'            71\n         CPYA  A13,A12                 LOAD WORK AREA AR WITH X'00'       72\n         SYSSTATE ASCENV=AR            SET FOR AR MACRO EXPANSIONS        73\n*        *---------------------------------------*                        74\n*        *     MOVE A WTO PARMLIST FROM THIS     *                        75\n*        *     ADDRESS SPACE TO 1ST DATASPACE    *                        76\n*        *     THEN FROM 1ST DATASPACE TO 2ND    *                        77\n*        *     DATASPACE, THEN FROM 2ND DATASPC  *                        78\n*        *     BACK TO THIS ADDRESS SPACE.       *                        79\n*        *---------------------------------------*                        80\n         LAM   A6,A6,ALET1             LOAD ACCESS REG W/DSP1 ALET        81\n         L     R6,ORIGIN1              LOAD GEN REG W/DSP1 ORIGIN         82\n         LAM   A7,A7,ALET2             LOAD ACCESS REG W/DSP2 ALET  @01   83\n         L     R7,ORIGIN2              LOAD GEN REG W/DSP2 ORIGIN         84\n         MVC   0(LWTOLIST,R6),WTOLIST  MOVE WTO PARMLIST TO DSP1          85\n         MVC   0(LWTOLIST,R7),0(R6)    MOVE FROM DSP1 TO DSP2             86\n         MVC   WTOPARM(LWTOLIST),0(7)  MOVE FROM DSP2 TO THIS SPACE       87\n*        *---------------------------------------*                        88\n*        *     GO INTO PRIMARY SPACE MODE        *                        89\n*        *---------------------------------------*                        90\n         SAC   0                       GO INTO PRIMARY SPACE MODE         91\n         SYSSTATE ASCENV=P             SET FOR PRIMARY SPC EXAPNSIONS     92\n*        *---------------------------------------*                        93\n*        *     ISSUE WTO AGAINST PARMLIST THAT   *                        94\n*        *     WAS MOVED AROUND                  *                        95\n*        *---------------------------------------*                        96\n         WTO   ,MF=(E,WTOPARM)         ISSUE WTO                          97\n         B     EXIT00                                                     98\n*---------------------------------------------------------------------*   99\n*        EXIT ROUTINES                                                *  100\n*---------------------------------------------------------------------*  101\nEXIT00   DS    0H                      SUCCESSFUL                        102\n         LA    15,X'00'                                                  103\n         B     EXIT                                                      104\nEXIT08   DS    0H                      DSPFIND NOT LINK-EDITED           105\n         LA    15,X'08'                                                  106\n         B     EXIT                                                      107\nEXIT10   DS    0H                      DSPFIND DID NOT FIND DATASPACE    108\n         PERCRC RC=X'10'                                                 109\n         B     EXIT                                                      110\n*---------------------------------------------------------------------*  111\n*        COMMON EXIT                                                  *  112\n*---------------------------------------------------------------------*  113\nEXIT     DS    0H                                                        114\n         LR    R2,R15                  PRESERVE RETURN CODE IN R2        115\n*        *---------------------------------------*                       116\n*        *     DEQ DATASPACE STORAGE             *                       117\n*        *---------------------------------------*                       118\n         DEQ   (DSNAME1,DSRANGE,L'DSRANGE,SYSTEM),RET=HAVE               119\n         DEQ   (DSNAME2,DSRANGE,L'DSRANGE,SYSTEM),RET=HAVE               120\n         LR    R15,R2                  RESTORE RETURN CODE TO R15        121\n         ENDMOD                                                          122\n*---------------------------------------------------------------------*  123\n*        CONSTANTS                                                    *  124\n*---------------------------------------------------------------------*  125\nWTOLIST  WTO   'WTO PARMLIST MOVED: HOME => DSP1 => DSP2 => HOME',MF=L   126\nLWTOLIST EQU   *-WTOLIST                                                 127\nDSNAME1  DC    CL(L'DSP_XNAME)'DSP1'                                     128\nDSNAME2  DC    CL(L'DSP_XNAME)'DSP2'                                     129\nDSRANGE  DC    C'LOW100'                                                 130\n*---------------------------------------------------------------------*  131\n*        WORK AREA                                                    *  132\n*---------------------------------------------------------------------*  133\nWDSPUT   DSECT                                                           134\nDSPPARMS DS    0F,CL(LDSPTBLE)         PARMLIST FOR DSPFIND SERVICE      135\nALET1    DS    F                       ALET FOR DSP1                     136\nORIGIN1  DS    F                       ORIGIN FOR DSP1                   137\nALET2    DS    F                       ALET FOR DSP2                     138\nORIGIN2  DS    F                       ORIGIN FOR DSP2                   139\nWTOPARM  DS    0F,CL(LWTOLIST)         WTO PARMLIST                      140\nLDSPUT   EQU   *-WDSPUT                                                  141\n*---------------------------------------------------------------------*  142\n*        OTHER DSECTS                                                 *  143\n*---------------------------------------------------------------------*  144\n         DSPTBLE                       MAP DSPTBLE BLOCK                 145\n         END                                                             146\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DYNAL": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x02\\xcc\\x02\\xcc\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:26", "lines": 716, "newlines": 716, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    DYNAMICALLY ALLOCATE/DEALLOCATE A DATSET.                       |    3\n*|  LOGIC:                                                            |    4\n*|    1)  INVOKE FINDPARM ROUTINE AGAINST USER-SUPPLIED PARMS         |    5\n*|        BUILDING TEXTUNITS FOR DYNALLOC IN USER STORAGE.            |    6\n*|    2)  ISSUE SVC 99                                                |    7\n*|  INPUTS:                                                           |    8\n*|    R1 - PARMLIST MAPPED BY DYNPRM MACRO.                           |    9\n*|  OUTPUTS:                                                          |   10\n*|    R1 - PARMLIST MAPPED BY DYNPRM MACRO.                           |   11\n*|   R15 - RETURN CODE                                                |   12\n*|          0 = SVC99 PROCESSING HAS BEEN SUCCESSFUL.                 |   13\n*|          4 = NOT USED                                              |   14\n*|          8 = NOT USED                                              |   15\n*|         12 = NOT USED                                              |   16\n*|         16 = USER PARMLIST ERROR - R0 CONTAINS:                    |   17\n*|               4 = ERROR IN FUNCTION CODE                           |   18\n*|               8 = ERROR IN DISP=                                   |   19\n*|              12 = ERROR IN SPACE=(XXX(                             |   20\n*|              16 = ERROR IN SPACE=(...(XXX,                         |   21\n*|              20 = ERROR IN SPACE=(...(,,XXX                        |   22\n*|                  24 = ERROR IN DCB=RECFM                           |   23\n*|                  28 = ERROR IN DCB=LRECL                           |   24\n*|         20 = SVC 99 FAILED - R0 CONTAINS:                          |   25\n*|                  +-----------+------------+                        |   26\n*|                  | S99ERROR  | S99INFO    |                        |   27\n*|                  +-----------+------------+                        |   28\n*|                  0     1     2      3                              |   29\n*|                  IF RC = 20, THE FOLLOWING PARMLIST FIELDS         |   30\n*|                  ARE ALSO RETURNED:                                |   31\n*|                      DYRETURN  = 14                                |   32\n*|                      DYREASON  = THE CONTENTS OF R0                |   33\n*|                      DY99ERR   = RETUNED BY SVC 99 (SEE MANUAL)    |   34\n*|  ATTRIBUTES:                                                       |   35\n*|    AMODE 24, AMODE 24, REENTRANT                                   |   36\n*+--------------------------------------------------------------------+   37\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE DYNAL,BASE=12,LOC=BELOW,AMODE=24,RMODE=24,             X  38\n               TEXT='DYNAMIC ALLOCATION/UNALLOCATION OF A DATASET'        39\n         L     R8,0(R1)           A(PARMLIST) => R8                       40\n         USING DYNPRM,R8          MAP INPUT PARMLIST                      41\n*---------------------------------------------------------------------*   42\n*        BUILD DYNALLOC RB AND ANCHOR TEXT UNITS                      *   43\n*---------------------------------------------------------------------*   44\n         LA    R3,RB99            ADDRESS OF SVC 99 RB                    45\n         USING S99RB,R3           MAP SVC 99 RB                           46\n         ST    R3,RBPT99          PUT A(SVC 99 RB) INTO RB POINTER        47\n         OI    RBPT99,S99RBPND    SET FLAG IN RB POINTER                  48\n*                                 SET SVC 99 RB TO X'00'                  49\n         XC    S99RB(S99RBLEN),S99RB                                      50\n         MVI   S99RBLN,S99RBLEN   PUT LENGTH IN RB                        51\n*        *---------------------------------------*                        52\n*        *     SET FUNCTION CODE                 *                        53\n*        *---------------------------------------*                        54\n         LA    R9,DYFUNCT         A(INPUT PARM)                           55\n         LA    R1,FUNCTB          A(TABLE OF VALID PARMS)                 56\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             57\n         LTR   R15,R15            IS L'OUTPUT PARM = 0                    58\n         BNZ   SETFUNCT           NO; PARM IS IN TABLE                    59\n*                                 DEFAULT FUNCTION IS ALLOCATE            60\n         MVC   DYFUNCT(L'DYFUNCT),AL                                      61\n         LA    R9,DYFUNCT         A(INPUT PARM)                           62\n         LA    R1,FUNCTB          A(TABLE OF VALID PARMS)                 63\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             64\nSETFUNCT DS    0H                                                         65\n*                                 MOVE PARM FROM TABLE                    66\n         MVC   S99VERB(L'S99VERB),0(R9)                                   67\n         LA    R4,TXPT99          A(FIRST TEXT POINTER)                   68\n         ST    R4,S99TXTPP        PUT IN RB                               69\n         LA    R4,TXPT99-4        POINT 4 BYTES BEFORE FIRST POINTER      70\n         USING S99TUPL,R4         MAP POINTER LIST ENTRY                  71\n         LA    R5,TXTUNITS        A(TEXT UNITS) IN REENTERABLE STG        72\n*---------------------------------------------------------------------*   73\n*        MOVE TEXT UNIT MODELS TO REENTERABLE STORAGE                 *   74\n*             AND FILL IN FIELDS FROM INPUT PARMLIST                  *   75\n*---------------------------------------------------------------------*   76\n         CLC   DYFUNCT(L'DYFUNCT),AL IS THIS AN ALLOCATE FUNCTION         77\n         BNE   NOTALLOC              NO; USE OTHER TEXT UNITS             78\n*---------------------------------------------------------------------*   79\n*        TEXT UNITS FOR ALLOCATE FUNCTION                             *   80\n*---------------------------------------------------------------------*   81\n*        *---------------------------------------*                        82\n*        *     DISP=(XXX,                        *                        83\n*        *---------------------------------------*                        84\nDISPOK   DS    0H                                                         85\n         LA    R9,DYDISP          A(INPUT PARM)                           86\n         LA    R1,STATB           A(TABLE OF VALID PARMS)                 87\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             88\n         LTR   R15,R15            IS L'OUTPUT PARM = 0                    89\n         BNZ   SETSTAT            NO; PARM IS IN TABLE                    90\n*                                 SET DEFAULT TO SHR                      91\n         MVC   DYDISP(L'DYDISP),SHRDISP                                   92\n         LA    R9,DYDISP          A(INPUT PARM)                           93\n         LA    R1,STATB           A(TABLE OF VALID PARMS)                 94\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             95\nSETSTAT  DS    0H                                                         96\n         LA    R7,STATS           TEXTUNIT MODEL                          97\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                          98\n*        *---------------------------------------*                        99\n*        *     DDNAME                            *                       100\n*        *---------------------------------------*                       101\n         LA    R9,DYDDNAME        ADDRESS OF FIELD IN INPUT PARMLIST     102\n         LA    R7,DDNAM           TEXTUNIT MODEL                         103\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         104\n*        *---------------------------------------*                       105\n*        *     DSNAME                            *                       106\n*        *---------------------------------------*                       107\n         LA    R9,DYDSN           ADDRESS OF FIELD IN INPUT PARMLIST     108\n         LA    R7,DSNAM           TEXTUNIT MODEL                         109\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         110\n*        *---------------------------------------*                       111\n*        *     ABNORMAL TERM DISPOSTITION        *                       112\n*        *---------------------------------------*                       113\n         LA    R9,DYCDISP         A(INPUT PARM)                          114\n         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                115\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            116\n         LTR   R15,R15            IS L'OUTPUT PARM = 0                   117\n         BZ    NOCDISP            YES; SKIP THIS                         118\n         LA    R7,CDISP           TEXTUNIT MODEL                         119\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         120\nNOCDISP  DS    0H                                                        121\n*                                 IS IT DISP=(NEW,     ?                 122\n         CLC   DYDISP(L'DYDISP),NEWDISP                                  123\n         BE    ISNEW                                                     124\n*        *---------------------------------------*                       125\n*        *     NORMAL TERM DISPOSTITION          *                       126\n*        *---------------------------------------*                       127\n         LA    R9,DYNDISP         A(INPUT PARM)                          128\n         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                129\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            130\n         LTR   R15,R15            L'OUTPUT PARM \u00ac= 0                     131\n         BNZ   NONDISP            YES; USE FROM PARMLIST                 132\n*                                 DEFAULT IS CATLG                       133\n         MVC   DYNDISP(L'DYNDISP),KEEP                                   134\n         LA    R9,DYNDISP         A(INPUT PARM)                          135\n         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                136\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            137\nNONDISP  DS    0H                                                        138\n         LA    R7,NDISP           TEXTUNIT MODEL                         139\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         140\n         B     ENDUNITS           NO ; SKIP OTHER TEXT UNITS             141\nISNEW    DS    0H                                                        142\n*---------------------------------------------------------------------*  143\n*        ALLOCATION UNITS FOR DISP=(NEW,  DATASETS                    *  144\n*---------------------------------------------------------------------*  145\n*        *---------------------------------------*                       146\n*        *     NORMAL TERM DISPOSTITION          *                       147\n*        *---------------------------------------*                       148\n         LA    R9,DYNDISP         A(INPUT PARM)                          149\n         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                150\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            151\n         LTR   R15,R15            L'OUTPUT PARM \u00ac= 0                     152\n         BNZ   NONDISP1           YES; USE FROM PARMLIST                 153\n*                                 DEFAULT IS CATLG                       154\n         MVC   DYNDISP(L'DYNDISP),CATLG                                  155\n         LA    R9,DYNDISP         A(INPUT PARM)                          156\n         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                157\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            158\nNONDISP1 DS    0H                                                        159\n         LA    R7,NDISP           TEXTUNIT MODEL                         160\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         161\n*        *---------------------------------------*                       162\n*        *     UNIT=                             *                       163\n*        *---------------------------------------*                       164\n         LA    R9,DYUNIT          ADDRESS OF FIELD IN INPUT PARMLIST     165\n         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  166\n         BE    SETUNITD           YES; SET UNIT DEFAULT                  167\n         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  168\n         BNE   UNITOK             NO ; USE INPUT PARM AS IS              169\nSETUNITD DS    0H                                                        170\n         MVC   DYUNIT(L'DYUNIT),UDFLT   SET DEFAULT                      171\nUNITOK   DS    0H                                                        172\n         LA    R7,UNIT            TEXTUNIT MODEL                         173\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         174\n*        *---------------------------------------*                       175\n*        *     VOL=SER=                          *                       176\n*        *---------------------------------------*                       177\n         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  178\n         BE    NOVOL              YES; BYPASS THIS TEXT UNIT             179\n         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  180\n         BE    NOVOL              YES; BYPASS THIS TEXT UNIT             181\n         LA    R9,DYVOLSER        ADDRESS OF FIELD IN INPUT PARMLIST     182\n         LA    R7,VLSER           TEXTVLSER MODEL                        183\n         BAL   R14,MOVEPARM       BUILD TEXTVLSER                        184\nNOVOL    DS    0H                                                        185\n*        *---------------------------------------*                       186\n*        *     CYL OR TRK                        *                       187\n*        *---------------------------------------*                       188\n         LA    R9,DYATYPE         A(INPUT PARM)                          189\n         LA    R1,CTRKTB          A(TABLE OF VALID PARMS)                190\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            191\n         LTR   R15,R15            IS L'OUTPUT PARM = 0                   192\n         BNZ   SETATYPE           NO; PARM IS IN TABLE                   193\n         L     R15,ETYPE          REASON CODE                            194\n         B     EXIT10             PEROCOLATE REASON CODE                 195\nSETATYPE DS    0F                                                        196\n         XR    R9,R9                                                     197\n         LA    R7,CYL             TEXTUNIT MODEL                         198\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         199\n*                                 MOVE CYL OR TRK FROM PARMLIST          200\n         CLC   DYATYPE(L'DYATYPE),TRACKS IS THIS TRACK ALLOCATION?       201\n         BNE   NOTRK              NO; LEAVE CYLINDER DEFAULT             202\n         L     R15,0(R4)          A(TEXT UNIT IN USER STORAGE)           203\n         MVC   0(2,R15),=AL2(DALTRK) INDICATE TRACK ALLOCATION           204\nNOTRK    DS    0H                                                        205\n*        *---------------------------------------*                       206\n*        *     PRIMARY ALLOCATION                *                       207\n*        *---------------------------------------*                       208\n         XR    R9,R9                                                     209\n         ICM   R9,B'0111',DYPRIM+1                                       210\n         BNZ   PALOK              \u00ac=0; USE VALUE                         211\n         L     R15,EPRIME         REASON CODE                            212\n         B     EXIT10             PEROCOLATE REASON CODE                 213\nPALOK    DS    0H                                                        214\n         LA    R9,DYPRIM+1        ADDRESS OF FIELD IN INPUT PARMLIST     215\n         LA    R7,PRIME           TEXTUNIT MODEL                         216\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         217\n*        *---------------------------------------*                       218\n*        *     SECONDARY ALLOCATION              *                       219\n*        *---------------------------------------*                       220\n         XR    R9,R9                                                     221\n         ICM   R9,B'0111',DYSEC+1                                        222\n         BZ    NOSECND            \u00ac=0; USE VALUE                         223\n         LA    R9,DYSEC+1         ADDRESS OF FIELD IN INPUT PARMLIST     224\n         LA    R7,SECND           TEXTUNIT MODEL                         225\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         226\nNOSECND  DS    0H                                                        227\n*        *---------------------------------------*                       228\n*        *     DSORG                             *                       229\n*        *---------------------------------------*                       230\n         LA    R9,DYDSORG         A(INPUT PARM)                          231\n         LA    R1,DSORGTB         A(TABLE OF VALID PARMS)                232\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            233\n         LTR   R15,R15            IS L'OUTPUT PARM = 0                   234\n         BNZ   SETDSORG           NO; PARM IS IN TABLE                   235\n*                                 SET DEFAULT TO PS                      236\n         MVC   DYDSORG(L'DYDSORG),DSORGPS                                237\nSETDSORG DS    0H                                                        238\n         LA    R7,DSORG           TEXTUNIT MODEL                         239\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         240\n*        *---------------------------------------*                       241\n*        *     DIRECTORY BLOCKS IF DSORG=PO      *                       242\n*        *---------------------------------------*                       243\n         CLC   DYDSORG(L'DYDSORG),DSORGPO  DSORG = PO?                   244\n         BNE   NOTPO              NO; DO NOT SET DIRECTORY BLOCKS        245\n         XR    R9,R9                                                     246\n         ICM   R9,B'0111',DYDIR+1                                        247\n         BNZ   PDIROK                                                    248\n         L     R15,EDIR           REASON CODE                            249\n         B     EXIT10             PEROCOLATE REASON CODE                 250\nPDIROK   DS    0H                                                        251\n         LA    R9,DYDIR+1         ADDRESS OF FIELD IN INPUT PARMLIST     252\n         LA    R7,DIR             TEXTUNIT MODEL                         253\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         254\nNOTPO    DS    0H                                                        255\n*        *---------------------------------------*                       256\n*        *     RECFM                             *                       257\n*        *---------------------------------------*                       258\n         LA    R9,DYRECFM         A(INPUT PARM)                          259\n         LA    R1,RECFMTB         A(TABLE OF VALID PARMS)                260\n         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            261\n         LTR   R15,R15            IS L'OUTPUT PARM = 0                   262\n         BNZ   SETRECFM           NO; PARM IS IN TABLE                   263\n         L     R15,ERECFM         REASON CODE                            264\n         B     EXIT10             PEROCOLATE REASON CODE                 265\nSETRECFM DS    0H                                                        266\n         LA    R7,RECFM           TEXTUNIT MODEL                         267\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         268\n*        *---------------------------------------*                       269\n*        *     BLKSIZE                           *                       270\n*        *---------------------------------------*                       271\n         XR    R9,R9                                                     272\n         ICM   R9,B'0011',DYBLKSIZ                                       273\n         BZ    NOBLKSZ                                                   274\n         LA    R9,DYBLKSIZ        ADDRESS OF FIELD IN INPUT PARMLIST     275\n         LA    R7,BLKSZ           TEXTUNIT MODEL                         276\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         277\nNOBLKSZ  DS    0H                                                        278\n*        *---------------------------------------*                       279\n*        *     LRECL                             *                       280\n*        *---------------------------------------*                       281\n         XR    R9,R9                                                     282\n         ICM   R9,B'0011',DYLRECL                                        283\n         BNZ   PLRECLOK                                                  284\n         L     R15,ELRECL         REASON CODE                            285\n         B     EXIT10             PEROCOLATE REASON CODE                 286\nPLRECLOK DS    0H                                                        287\n         LA    R9,DYLRECL         ADDRESS OF FIELD IN INPUT PARMLIST     288\n         LA    R7,LRECL           TEXTUNIT MODEL                         289\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         290\n         B     ENDUNITS                                                  291\nNOTALLOC DS    0H                                                        292\n*---------------------------------------------------------------------*  293\n*        TEXT UNITS FOR DEALLOCATE FUNCTION                           *  294\n*---------------------------------------------------------------------*  295\n*        *---------------------------------------*                       296\n*        *     DDNAME                            *                       297\n*        *---------------------------------------*                       298\n         LA    R9,DYDDNAME        ADDRESS OF FIELD IN INPUT PARMLIST     299\n         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  300\n         BE    SETDNAMU           YES; SET UNIT DEFAULT                  301\n         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  302\n         BE    SETDNAMU           YES; SET UNIT DEFAULT                  303\n         LA    R9,DYDDNAME        ADDRESS OF FIELD IN INPUT PARMLIST     304\n         LA    R7,DDNAMU          TEXTUNIT MODEL                         305\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         306\nSETDNAMU DS    0H                                                        307\n*        *---------------------------------------*                       308\n*        *     DSNAME                            *                       309\n*        *---------------------------------------*                       310\n         LA    R9,DYDSN           ADDRESS OF FIELD IN INPUT PARMLIST     311\n         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  312\n         BE    SETDSNU            YES; SET UNIT DEFAULT                  313\n         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  314\n         BE    SETDSNU            YES; SET UNIT DEFAULT                  315\n         LA    R9,DYDSN           ADDRESS OF FIELD IN INPUT PARMLIST     316\n         LA    R7,DSNAMU          TEXTUNIT MODEL                         317\n         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         318\nSETDSNU  DS    0H                                                        319\n*        *---------------------------------------*                       320\n*        *     END OF TEXT UNITS                 *                       321\n*        *---------------------------------------*                       322\nENDUNITS DS    0H                                                        323\n         OI    S99TUPTR,S99TUPLN  SET FLAG IN LAST POINTER LIST ENTRY    324\n*---------------------------------------------------------------------*  325\n*        DYNAMICALLY ALLOCATE DATASET                                 *  326\n*---------------------------------------------------------------------*  327\n         LA    R1,RBPT99          A(RB POINTER)                          328\n         DYNALLOC                                                        329\n         LTR   R15,R15            RC = 0 ?                               330\n         BZ    EXIT00             YES ;EXIT                              331\n         XR    R0,R0                                                     332\n         ICM   R0,B'1100',S99ERROR    SET ERROR CODE                     333\n         ICM   R0,B'0011',S99INFO     SET ERROR INFO CODE                334\n         B     EXIT14                                                    335\n*---------------------------------------------------------------------*   336\n*        FINDPARM ROUTINE                                             *  337\n* FUNCTION:                                                           *  338\n*  SEARCHES TABLE OF VALID PARMS USER-SUPPLIED PARM.                  *  339\n*  IF FOUND, RETURNS PARM FOR DYNALLOC TEXT UNIT.                     *  340\n* INPUTS:                                                             *  341\n*        R1 = A(TABLE OF VALID PARMS)                                 *  342\n*        R9 = A(INPUT PARM)                                           *  343\n* OUTPUTS:                                                            *  344\n*        R9 = A(OUTPUT PARM)                                          *  345\n*        R15 = L'(OUTPUT PARM) OR 0 IF NOT FOUND                      *  346\n*---------------------------------------------------------------------*  347\nFINDPARM DS    0H                                                        348\n         STM   R4,R8,SAVE1        SAVE WORK REGISTERS                    349\n         XR    R15,R15            DEFAULT LENGTH = 0                     350\n         LM    R4,R7,0(R1)        LOAD TABLE REGS                        351\n         LA    R1,16(R1)          POINT AT FIRST ENTRY                   352\nFILOOP   DS    0H                                                        353\n         EX    R4,FICLC           COMPARE INPUT PARM TO TABLE VALUE      354\n         B     AFI                                                       355\nFICLC    CLC   0(0,R1),0(R9)      *** EXECUTE ONLY ***                   356\nAFI      DS    0H                                                        357\n         BE    FIFOUND            EXIT IF FOUND                          358\n         LA    R1,0(R6,R1)        POINT AT NEXT ENTRY                    359\n         BCT   R7,FILOOP          CHECK NEXT PARM                        360\n         B     FIEXIT                                                    361\nFIFOUND  DS    0H                                                        362\n         LR    R15,R5             OUTPUT PARM LENGTH                     363\n         LA    R9,1(R4,R1)        OUTPUT PARM ADDRESS                    364\nFIEXIT   DS    0H                                                        365\n         LM    R4,R8,SAVE1        RESTORE WORK REGISTERS                 366\n         BR    14                 RETURN                                 367\n*---------------------------------------------------------------------*  368\n*                                                                     *  369\n*---------------------------------------------------------------------*  370\nMOVEPARM DS    0H                                                        371\n         LA    R4,4(R4)           BUMP TO NEXT SLOT IN POINTER LIST      372\n         ST    R5,0(R4)           PUT A(TEXT UNIT) IN POINTER LIST       373\n         ICM   R6,B'1111',0(R7) LENGTH FOR MOVE                          374\n         EX    R6,MVIT            MOVE MODEL TO TEXTUNIT SLOT            375\n         B     AFT1                                                      376\nMVIT     MVC   0(0,R5),4(R7)      *** EXECUTE ONLY ***                   377\nAFT1     DS    0H                                                        378\n*        *---------------------------------------*                       379\n*        *     LOOP THRU TEXTUNIT PARMS          *                       380\n*        *---------------------------------------*                       381\n         XR    R1,R1              CLEAR R1                               382\n         LA    R5,4(R5)           POINT AT FIRST PARM IN TEXTUNIT        383\n         ICM   R1,B'0011',6(R7) NUMBER OF PARMS                          384\n         BZ    NOPARM                                                    385\nPARMLOOP DS    0H                                                        386\n         ICM   R6,B'0011',0(R5) LENGTH OF PARM IN TEXT UNIT              387\n         BCTR  R6,0               LESS 1 FOR EXECUTE                     388\n         EX    R6,MVIT1           MOVE PARMLIST FIELD TO TEXTUNIT        389\n         B     AFT2                                                      390\nMVIT1    MVC   2(0,R5),0(R9)      *** EXECUTE ONLY ***                   391\nAFT2     DS    0H                                                        392\n         LA    R5,3(R6,R5)        POINT TO NEXT SPACE FOR TEXT UNIT      393\n         LA    R9,1(R6,R9)        POINT TO NEXT PARM IN INPUT            394\n         BCT   R1,PARMLOOP                                               395\nNOPARM   DS    0H                                                        396\n         BR    R14                                                       397\n*---------------------------------------------------------------------*  398\n*        EXIT ROUTINES                                                *  399\n*---------------------------------------------------------------------*  400\nEXIT00   DS    0H                      DATASET ALLOCATED OR UNALLOCATED  401\n         LA    15,X'00'                                                  402\n         B     EXIT                                                      403\nEXIT10   DS    0H                      ERROR IN PARMLIST                 404\n         PERCRC RC=X'10'                                                 405\n         B     EXIT                                                      406\nEXIT14   DS    0H                      SVC 99 FAILED                     407\n         PERCRC RC=X'14'                                                 408\n         B     EXIT                                                      409\n*---------------------------------------------------------------------*  410\n*        COMMON EXIT                                                  *  411\n*---------------------------------------------------------------------*  412\nEXIT     DS   0H                                                         413\n         STCM R15,B'0011',DYRETURN                                       414\n         STCM R0,B'0011',DYREASON                                        415\n         STCM R1,B'1111',DY99ERR                                         416\n         ENDMOD                                                          417\n*---------------------------------------------------------------------*  418\n*        CONSTANTS                                                    *  419\n*---------------------------------------------------------------------*  420\nMAXUNITS EQU   50                 MAXIMUM TEXT UNITS                     421\nAL       DC    CL(L'DYFUNCT)'AL'  ALLOCATION FUNCTION                    422\nNEWDISP  DC    CL(L'DYDISP)'NEW'                                         423\nSHRDISP  DC    CL(L'DYDISP)'SHR'                                         424\nCATLG    DC    CL(L'DYNDISP)'CATLG'                                      425\nKEEP     DC    CL(L'DYNDISP)'KEEP'                                       426\nUDFLT    DC    CL(L'DYUNIT)'SYSDA'  DEFAULT FOR UNIT=                    427\nDSORGPO  DC    CL(L'DYDSORG)'PO'                                         428\nDSORGPS  DC    CL(L'DYDSORG)'PS'    DEFAULT FOR DSORG                    429\nTRACKS   DC    CL(L'DYATYPE)'TRK' TRACK ALLOCATION                       430\nEFUNCT   EQU   X'04'              PARMLIST ERROR: FUNCTION CODE          431\nEDISP    EQU   X'08'              PARMLIST ERROR: DISP=(XXX              432\nETYPE    EQU   X'0C'              PARMLIST ERROR: SPACE=(XXX(            433\nEPRIME   EQU   X'10'              PARMLIST ERROR: SPACE=(...(XXX,        434\nEDIR     EQU   X'14'              PARMLIST ERROR: SPACE=(...(,,XXX       435\nERECFM   EQU   X'18'              PARMLIST ERROR: RECFM                  436\nELRECL   EQU   X'1C'              PARMLIST ERROR: LRECL                  437\n*---------------------------------------------------------------------*  438\n*        TABLES OF VALID PARMS                                        *  439\n*---------------------------------------------------------------------*  440\n*        *---------------------------------------*                       441\n*        *     FUNCTIONS                         *                       442\n*        *---------------------------------------*                       443\nFUNCTB   DS    0F                                                        444\n         DC    AL4(L'DYFUNCT-1)                   L'INPUT PARM -1        445\n         DC    AL4(L'S99VERB)                     LENGTH OF OUTPUT PARM  446\n         DC    AL4(L'DYFUNCT+L'S99VERB)           LENGTH OF AN ENTRY     447\n*                                                 NUMBER OF ENTRIES      448\n         DC    AL4(((EFUNCTB-FUNCTB)-16)/(L'DYFUNCT+L'S99VERB))          449\n         DC    CL(L'DYFUNCT)'AL',AL(L'S99VERB)(S99VRBAL)                 450\n         DC    CL(L'DYFUNCT)'UN',AL(L'S99VERB)(S99VRBUN)                 451\n         DC    CL(L'DYFUNCT)'CC',AL(L'S99VERB)(S99VRBCC)                 452\n         DC    CL(L'DYFUNCT)'DC',AL(L'S99VERB)(S99VRBDC)                 453\n         DC    CL(L'DYFUNCT)'RI',AL(L'S99VERB)(S99VRBRI)                 454\n         DC    CL(L'DYFUNCT)'DN',AL(L'S99VERB)(S99VRBDN)                 455\n         DC    CL(L'DYFUNCT)'IN',AL(L'S99VERB)(S99VRBIN)                 456\nEFUNCTB EQU    *                                                         457\n*        *---------------------------------------*                       458\n*        *     STATUS                            *                       459\n*        *---------------------------------------*                       460\nSTATB    DS    0F                                                        461\n         DC    AL4(L'DYDISP-1)                   L'INPUT PARM -1         462\n         DC    AL4(L'PSTATS)                      LENGTH OF OUTPUT PARM  463\n         DC    AL4(L'DYDISP+L'PSTATS)             LENGTH OF AN ENTRY     464\n*                                                 NUMBER OF ENTRIES      465\n         DC    AL4(((ESTATB-STATB)-16)/(L'DYDISP+L'PSTATS))              466\n         DC    CL(L'DYDISP)'OLD',AL(L'PSTATS)(X'01')                     467\n         DC    CL(L'DYDISP)'MOD',AL(L'PSTATS)(X'02')                     468\n         DC    CL(L'DYDISP)'NEW',AL(L'PSTATS)(X'04')                     469\n         DC    CL(L'DYDISP)'SHR',AL(L'PSTATS)(X'08')                     470\nESTATB   EQU    *                                                        471\n*        *---------------------------------------*                       472\n*        *     DISP                              *                       473\n*        *---------------------------------------*                       474\nDISPTB   DS    0F                                                        475\n         DC    AL4(L'DYCDISP-1)                   L'INPUT PARM -1        476\n         DC    AL4(L'PCDISP)                      LENGTH OF OUTPUT PARM  477\n         DC    AL4(L'DYCDISP+L'PCDISP)            LENGTH OF AN ENTRY     478\n*                                                 NUMBER OF ENTRIES      479\n         DC    AL4(((EDISPTB-DISPTB)-16)/(L'DYCDISP+L'PCDISP))           480\n         DC    CL(L'DYCDISP)'UNCATLG',AL(L'PCDISP)(X'01')                481\n         DC    CL(L'DYCDISP)'CATLG',AL(L'PCDISP)(X'02')                  482\n         DC    CL(L'DYCDISP)'DELETE',AL(L'PCDISP)(X'04')                 483\n         DC    CL(L'DYCDISP)'KEEP',AL(L'PCDISP)(X'08')                   484\nEDISPTB EQU     *                                                        485\n*        *---------------------------------------*                       486\n*        *     ALLOCATION UNIT                   *                       487\n*        *---------------------------------------*                       488\nCTRKTB   DS    0F                                                        489\n         DC    AL4(L'DYATYPE-1)                   L'INPUT PARM -1        490\n         DC    AL4(2)                             LENGTH OF OUTPUT PARM  491\n         DC    AL4(L'DYATYPE+2)                   LENGTH OF AN ENTRY     492\n*                                                 NUMBER OF ENTRIES      493\n         DC    AL4(((ECTRKTB-CTRKTB)-16)/(L'DYATYPE+2))                  494\n         DC    CL(L'DYATYPE)'TRK',AL(2)(X'0007')                         495\n         DC    CL(L'DYATYPE)'CYL',AL(2)(X'0008')                         496\nECTRKTB EQU     *                                                        497\n*        *---------------------------------------*                       498\n*        *     DSORG                             *                       499\n*        *---------------------------------------*                       500\nDSORGTB  DS    0F                                                        501\n         DC    AL4(L'DYDSORG-1)                   L'INPUT PARM -1        502\n         DC    AL4(L'PDSORG)                     LENGTH OF OUTPUT PARM   503\n         DC    AL4(L'DYDSORG+L'PDSORG)            LENGTH OF AN ENTRY     504\n*                                                 NUMBER OF ENTRIES      505\n         DC    AL4(((EDSORGTB-DSORGTB)-16)/(L'DYDSORG+L'PDSORG))         506\n         DC    CL(L'DYDSORG)'PS',AL(L'PDSORG)(X'4000')                   507\n         DC    CL(L'DYDSORG)'DA',AL(L'PDSORG)(X'2000')                   508\n         DC    CL(L'DYDSORG)'PO',AL(L'PDSORG)(X'0200')                   509\nEDSORGTB EQU    *                                                        510\n*        *---------------------------------------*                       511\n*        *     RECFM                             *                       512\n*        *---------------------------------------*                       513\n@F       EQU   X'80'              FIXED  LENGTH RECORDS                  514\n@V       EQU   X'40'              VARIABLE LENGTH RECORDS                515\n@U       EQU   X'C0'              VARIABLE LENGTH RECORDS                516\n@B       EQU   X'10'              BLOCKED RECORDS                        517\n@A       EQU   X'04'              RM=XXA (ASA CONTROL CHARACTERS)        518\n@M       EQU   X'02'              RM=XXM (MACHINE CONTROL    CHARACTERS  519\nRECFMTB  DS    0F                                                        520\n         DC    AL4(L'DYRECFM-1)                   L'INPUT PARM -1        521\n         DC    AL4(L'PRECFM)                     LENGTH OF OUTPUT PARM   522\n         DC    AL4(L'DYRECFM+L'PRECFM)            LENGTH OF AN ENTRY     523\n*                                                 NUMBER OF ENTRIES      524\n         DC    AL4(((ERECFMTB-RECFMTB)-16)/(L'DYRECFM+L'PRECFM))         525\n         DC    CL(L'DYRECFM)'F  ',AL(L'PRECFM)(@F)                       526\n         DC    CL(L'DYRECFM)'FA ',AL(L'PRECFM)(@F+@A)                    527\n         DC    CL(L'DYRECFM)'FM ',AL(L'PRECFM)(@F+@M)                    528\n         DC    CL(L'DYRECFM)'FB ',AL(L'PRECFM)(@F+@B)                    529\n         DC    CL(L'DYRECFM)'FBA',AL(L'PRECFM)(@F+@B+@A)                 530\n         DC    CL(L'DYRECFM)'FBM',AL(L'PRECFM)(@F+@B+@M)                 531\n         DC    CL(L'DYRECFM)'V  ',AL(L'PRECFM)(@V)                       532\n         DC    CL(L'DYRECFM)'VA ',AL(L'PRECFM)(@V+@A)                    533\n         DC    CL(L'DYRECFM)'VM ',AL(L'PRECFM)(@V+@M)                    534\n         DC    CL(L'DYRECFM)'VB ',AL(L'PRECFM)(@V+@B)                    535\n         DC    CL(L'DYRECFM)'VBA',AL(L'PRECFM)(@V+@B+@A)                 536\n         DC    CL(L'DYRECFM)'VBM',AL(L'PRECFM)(@V+@B+@M)                 537\n         DC    CL(L'DYRECFM)'U  ',AL(L'PRECFM)(@U)                       538\nERECFMTB EQU    *                                                        539\n*---------------------------------------------------------------------*  540\n*        TEXT UNIT MODELS FOR FUNCTION DSNAME ALLOCATION (AL)         *  541\n*---------------------------------------------------------------------*  542\n*        *---------------------------------------*                       543\n*        *     UNIT                              *                       544\n*        *---------------------------------------*                       545\nUNIT     DC    AL4((PUNIT-UNIT)+L'PUNIT-5)                               546\n         DC    AL2(DALUNIT)                                              547\n         DC    AL2(1)                                                    548\nLUNIT    DC    AL2(L'PUNIT)                                              549\nPUNIT    DC    CL8' '             < === PRODDA AFTER TEST                550\n*        *---------------------------------------*                       551\n*        *     VOL=SER=                          *                       552\n*        *---------------------------------------*                       553\nVLSER    DC    AL4((PVLSER-VLSER)+L'PVLSER-5)                            554\n         DC    AL2(DALVLSER)                                             555\n         DC    AL2(1)                                                    556\nLVLSER   DC    AL2(L'PVLSER)                                             557\nPVLSER   DC    CL6' '             < === PRODDA AFTER TEST                558\n*        *---------------------------------------*                       559\n*        *     SPECIFICATION                     *                       560\n*        *---------------------------------------*                       561\nSTATS    DC    AL4((PSTATS-STATS)+L'PSTATS-5)                            562\n         DC    AL2(DALSTATS)                                             563\n         DC    AL2(1)                                                    564\nLSTATS   DC    AL2(L'PSTATS)                                             565\nPSTATS   DC    X'04'              DISP=(NEW,)                            566\n*        *---------------------------------------*                       567\n*        *     NORMAL DISPOSITION                *                       568\n*        *---------------------------------------*                       569\nNDISP    DC    AL4((PNDISP-NDISP)+L'PNDISP-5)                            570\n         DC    AL2(DALNDISP)                                             571\n         DC    AL2(1)                                                    572\nLNDISP   DC    AL2(L'PNDISP)                                             573\nPNDISP   DC    X'02'              DISP=(,CATLG)                          574\n*        *---------------------------------------*                       575\n*        *     CONDITIONAL DISPOSITION           *                       576\n*        *---------------------------------------*                       577\nCDISP    DC    AL4((PCDISP-CDISP)+L'PCDISP-5)                            578\n         DC    AL2(DALCDISP)                                             579\n         DC    AL2(1)                                                    580\nLCDISP   DC    AL2(L'PCDISP)                                             581\nPCDISP   DC    X'04'              DISP=(,,DELETE)                        582\n*        *---------------------------------------*                       583\n*        *     DSORG                             *                       584\n*        *---------------------------------------*                       585\nDSORG    DC    AL4((PDSORG-DSORG)+L'PDSORG-5)                            586\n         DC    AL2(DALDSORG)                                             587\n         DC    AL2(1)                                                    588\nLDSORG   DC    AL2(L'PDSORG)                                             589\nPDSORG   DC    X'4000'            DSORG=PS                               590\n*        *---------------------------------------*                       591\n*        *     RECFM                             *                       592\n*        *---------------------------------------*                       593\nRECFM    DC    AL4((PRECFM-RECFM)+L'PRECFM-5)                            594\n         DC    AL2(DALRECFM)                                             595\n         DC    AL2(1)                                                    596\nLRECFM   DC    AL2(L'PRECFM)                                             597\nPRECFM   DC    AL1(X'10'+X'80')                  RECFM=FB                598\n*        *---------------------------------------*                       599\n*        *     LRECL                             *                       600\n*        *---------------------------------------*                       601\nLRECL    DC    AL4((PLRECL-LRECL)+L'PLRECL-5),AL2(DALLRECL)              602\n         DC    AL2(1)                                                    603\nLLRECL   DC    AL2(L'PLRECL)                                             604\nPLRECL   DC    AL2(0)                                                    605\n*        *---------------------------------------*                       606\n*        *     BLOCKSIZE                         *                       607\n*        *---------------------------------------*                       608\nBLKSZ    DC    AL4((PBLKSZ-BLKSZ)+L'PBLKSZ-5),AL2(DALBLKSZ)              609\n         DC    AL2(1)                                                    610\nLBLKSZ   DC    AL2(L'PBLKSZ)                                             611\nPBLKSZ   DC    AL2(0)                                                    612\n*        *---------------------------------------*                       613\n*        *     PRIMARY ALLOCATION                *                       614\n*        *---------------------------------------*                       615\nPRIME    DC    AL4((PPRIME-PRIME)+L'PPRIME-5),AL2(DALPRIME)              616\n         DC    AL2(1)                                                    617\nLPRIME   DC    AL2(L'PPRIME)                                             618\nPPRIME   DC    AL3(0)                                                    619\n*        *---------------------------------------*                       620\n*        *     SECONDARY ALLOCATION              *                       621\n*        *---------------------------------------*                       622\nSECND    DC    AL4((PSECND-SECND)+L'PSECND-5),AL2(DALSECND)              623\n         DC    AL2(1)                                                    624\nLSECND   DC    AL2(L'PSECND)                                             625\nPSECND   DC    AL3(0)                                                    626\n*        *---------------------------------------*                       627\n*        *     DIRECTORY BLOCK ALLOCATION        *                       628\n*        *---------------------------------------*                       629\nDIR      DC    AL4((PDIR-DIR)+L'PDIR-5),AL2(DALDIR)                      630\n         DC    AL2(1)                                                    631\nLDIR     DC    AL2(L'PDIR)                                               632\nPDIR     DC    AL3(0)                                                    633\n*        *---------------------------------------*                       634\n*        *     ALLOCATION TYPE                   *                       635\n*        *---------------------------------------*                       636\nCYL      DC    AL4((ECYL-CYL)-5),AL2(DALCYL)                             637\n         DC    AL2(0)                                                    638\nECYL     EQU   *                                                         639\n*        *---------------------------------------*                       640\n*        *     DDNAME                            *                       641\n*        *---------------------------------------*                       642\nDDNAM    DC    AL4((PDDNAM-DDNAM)+L'PDDNAM-5),AL2(DALDDNAM)              643\n         DC    AL2(1)                                                    644\nLDDNAM   DC    AL2(L'PDDNAM)                                             645\nPDDNAM   DC    CL8' '                                                    646\n*        *---------------------------------------*                       647\n*        *     DATASET NAME                      *                       648\n*        *---------------------------------------*                       649\nDSNAM    DC    AL4((PDSNAM-DSNAM)+L'PDSNAM-5),AL2(DALDSNAM)              650\n         DC    AL2(1)                                                    651\nLDSNAM   DC    AL2(L'PDSNAM)                                             652\nPDSNAM   DC    CL44' '                                                   653\n*        *---------------------------------------*                       654\n*---------------------------------------------------------------------*  655\n*        TEXT UNIT MODELS FOR FUNCTION DSNAME UNALLOCATION (UN)       *  656\n*---------------------------------------------------------------------*  657\n*        *---------------------------------------*                       658\n*        *     DDNAME                            *                       659\n*        *---------------------------------------*                       660\nDDNAMU   DC    AL4((PDDNAMU-DDNAMU)+L'PDDNAMU-5),AL2(DUNDDNAM)           661\n         DC    AL2(1)                                                    662\nLDDNAMU  DC    AL2(L'PDDNAMU)                                            663\nPDDNAMU  DC    CL8' '                                                    664\n*        *---------------------------------------*                       665\n*        *     DATASET NAME                      *                       666\n*        *---------------------------------------*                       667\nDSNAMU   DC    AL4((PDSNAMU-DSNAMU)+L'PDSNAMU-5),AL2(DUNDSNAM)           668\n         DC    AL2(1)                                                    669\nLDSNAMU  DC    AL2(L'PDSNAMU)                                            670\nPDSNAMU  DC    CL44' '                                                   671\n*---------------------------------------------------------------------*  672\n*        WORK AREA                                                    *  673\n*---------------------------------------------------------------------*  674\nWDYNAL   DSECT                                                           675\nSAVE1    DS    5F                      SUBROUTINE WORK REGISTERS         676\nS99RBLEN EQU   S99RBEND-S99RB          SVC 99 RB LENGTH                  677\nRBPT99   DS    A                       SVC 99 RB POINTER                 678\nRB99     DS    0F,CL(S99RBLEN)         SVC 99 RB                         679\nTXPT99   DS    0F,CL((MAXUNITS)*4)     SVC 99 TEXT POINTERS              680\nTXTUNITS DS    CL500                   TEXT UNITS                        681\nLDYNAL   EQU   *-WDYNAL                                                  682\n*---------------------------------------------------------------------*  683\n*        OTHER DSECTS                                                 *  684\n*---------------------------------------------------------------------*  685\n         DYNPRM                   MAP INPUT PARMS                        686\n         PRINT NOGEN                                                     687\n         IEFZB4D0                                                        688\n         IEFZB4D2                                                        689\n         END                                                             690\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DYNPRM": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00@\\x00@\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:32", "lines": 64, "newlines": 64, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                    MAPS PARMLIST DYNAL                      1\n         DYNPRM                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      PARMLIST FOR DYNAL - DYNAMIC ALLOCATION ROUTINE              |    4\n.*+-------------------------------------------------------------------+    5\nDYNPRM   DSECT                                                             6\n*        +-------------------------------------+                           7\n*        |     USED BY ALL ALLOCATIONS         |                           8\n*        +-------------------------------------+                           9\nDYPLEN   DS    H                  LENGTH OF PARMLIST                      10\nDYRETURN DS    H                  RETURN CODE                             11\nDYREASON DS    H                  REASON CODE                             12\nDYFUNCT  DS    CL2                FUNCTION REQUESTED                      13\nDYDDNAME DS    CL8                DDNAME                                  14\nDYDSN    DS    CL44               DATASET NAME                            15\nDYDISP   DS    CL4                DISP=(XXX,)      (NEW, MOD, SHR, OLD)   16\nDYNDISP  DS    CL6                DISP=(,XXX)                             17\nDYCDISP  DS    CL6                DISP=(,,XXX)                            18\n*        +-------------------------------------+                          19\n*        |     USED BY DISP=(NEW, ALLOCATIONS  |                          20\n*        +-------------------------------------+                          21\nDYATYPE  DS    CL4                ALLOCATION TYPE            (TRK, CYL)   22\nDYPRIM   DS    F                  PRIMARY ALLOCATION                      23\nDYSEC    DS    F                  SECONDARY ALLOCATION                    24\nDYDIR    DS    F                  DIRECTORY BLOCKS FOR DSORG = PO         25\nDYRECFM  DS    CL4                RECFM  (F ,FB ,V, VB, FBA, VBM, ETC.)   26\nDYLRECL  DS    H                  LRECL                                   27\nDYBLKSIZ DS    H                  BLOCKSIZE                               28\nDYDSORG  DS    CL2                DSORG                    (PS, DA, PO)   29\nDYUNIT   DS    CL8                UNIT TYPE                               30\nDYVOLSER DS    CL6                VOL=SER=                                31\nDY99ERR  DS    CL4                ERROR DATA FROM S99                     32\n*        +-------------------------------------+                          33\n*        |     RESERVED FOR EXANSION           |                          34\n*        +-------------------------------------+                          35\n         DS    CL(200-(*-DYNPRM)) AVAILIBLE FOR EXPANSION                 36\nLDYNPRM  EQU   *-DYNPRM           LENGTH OF PARMLIST                      37\n         MEND                                                             38\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EDEBUG": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xca\\x00\\xca\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:41", "lines": 202, "newlines": 202, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+\n*|                      MAINTENANCE LOG                               |\n*+----------+-------------------------------------+---------+---------+\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |\n*+----------+-------------------------------------+---------+---------+\n*| 04/12/92 |  SETRP CONTINUATION IN COLUMN 16    | MJM     | @01     |\n*|          |    (FIX#-R0004)                     |         |         |\n*+----------+-------------------------------------+---------+---------+\n*                                                                     |\n*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    SKELETON FOR INTERACTIVE DEBUGGER THAT RUNS AS AN ESTAE UNDER   |    3\n*|    TSO.  (ACKNOWLEDGMENTS TO DAVID B. COLE)                        |    4\n*|  LOGIC:                                                            |    5\n*|    1) CHECK FOR SDWA.  IF NO SDWA, PERCOLATE THE ABEND.            |    6\n*|    2) USE TPUT TO OUTPUT ENTRYPOINT ADDRESS, ABEND PSW, AND        |    7\n*|       ABEND CODE.                                                  |    8\n*|    3) CHECK WHETHER THE ABEND WAS CAUSED BY AN IMPLANTED           |    9\n*|       @DB@ BREAKPOINT. IF YES, PROMPT FOR RETRY.                   |   10\n*|    4) ISSUE SETRP RC=4 TO RETRY INTO THE ABENDING CODE OR          |   11\n*|       SETRP RC=0 TO PERCOLATE THE ABEND                            |   12\n*|  INPUTS:                                                           |   13\n*|    R1 - ADDRESS OF SDWA SUPPLIED BY RTM2.                          |   14\n*|  OUTPUTS:                                                          |   15\n*|    MESSAGES ON TSO TERMINAL.                                       |   16\n*|    MODIFICATIONS TO SDWA.                                          |   17\n*|  ATTRIBUTES:                                                       |   18\n*|    AMODE 31, RMODE 24, REENTERABLE                                 |   19\n*+--------------------------------------------------------------------+   20\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\nEDEBUG   CSECT                                                            21\nEDEBUG   AMODE 31                                                         22\nEDEBUG   RMODE 24                                                         23\n         USING EDEBUG,R15              SET ADDRESSING ON ENTRYPOINT       24\n         B     BEGIN                   BRANCH AROUND DOCUMENTATION        25\n         DC    C' EDEBUG '             CSECT NAME                         26\n         DC    C' &SYSDATE '           DATE OF ASSEMBLY                   27\n         DC    C' &SYSTIME '           TIME OF ASSEMBLY                   28\nBEGIN    DS    0H                                                         29\n         PRINT NOGEN                                                      30\n         COPY  EQUATES                                                    31\n         PRINT GEN                                                        32\n*        *---------------------------------------*                        33\n*        *     TEST WHETHER THERE IS AN SDWA     *                        34\n*        *---------------------------------------*                        35\n         CH    R0,=H'12'               WAS AN SDWA OBTAINED ?             36\n         BNE   Y$SDWA                  YES; CONTINUE                      37\n         LA    R15,0                   SET FOR PERCOLATION                38\n         BR    R14                     RETURN TO RTM2                     39\nY$SDWA   DS    0H                                                         40\n         DROP  R15                     DROP ADDRESSING ON ENTRYPOINT      41\n         STM   R14,R12,12(R13)         SAVE REGS IN RTM2'S SAVEAREA       42\n         LR    R12,R15                 LOAD ENTRYPOINT INTO BASE REG      43\n         USING EDEBUG,R12              SET ADDRESSING ON BASE REGISTER    44\n         GETMAIN RU,LV=LEDEBUG,        ..GET < 16M STORAGE FOR         X  45\n               LOC=BELOW               ..REENTERABLE WORK AREA            46\n         LR    R2,R13                  ADDRESS OF CALLER'S SAVE AREA      47\n         ST    R13,4(R1)               SAVE CALLER'S SAVE AREA ADDRESS    48\n         ST    R1,8(R13)               ADDRESS OF OUR SAVEAREA TO CALLR   49\n         LR    R13,R1                  ADDRESS OF WORKAREA TO R13         50\n         USING WEDEBUG,R13             MAP WORK AREA                      51\n         LM    R14,R2,12(R2)           RESTORE REGS FROM CALLERS SAVEA    52\n         LR    R3,R1                   ADDRESS OF SDWA                    53\n         USING SDWA,R3                 MAP SDWA                           54\n*        *---------------------------------------*                        55\n*        *     UNCOMMENT THE FOLLOWING 2 LINES   *                        56\n*        *     TO TEST FOR RECURSIVE ENTRY.      *                        57\n*        *---------------------------------------*                        58\n*        TM    SDWAERRD,SDWASTAE       RECURSIVE ENTRY ?                  59\n*        BO    EXIT00                  YES; PERCOLATE THE ABEND           60\n*        *---------------------------------------*                        61\n*        *     OUTPUT ENTRY POINT ADDRESS        *                        62\n*        *---------------------------------------*                        63\n         MVC   PUTGET(L'MSG1),MSG1     MOVE MESSAGE TO OUTPUT AREA        64\n         XTOC  PLIST=XTOCLIST,         ..CHANGE                        X  65\n               ADIN=SDWAEPA,           ..HEX VALUE                     X  66\n               LIN=L'SDWAEPA,          ..OF SDWA FIELD                 X  67\n               ADOUT=PUTGET+L'MSG1,    ..TO PRINTABLE                  X  68\n               LOUT=L'SDWAEPA*2        ..CHARACTERS                       69\n         LA    R0,L'MSG1+L'SDWAEPA*2   LENGTH OF OUTPUT FIELD FOR TPUT    70\n         LA    R1,PUTGET               ADDRESS OF OUTPUT AREA             71\n         TPUT  (R1),(R0),R             SEND MESSAGE TO TERMINAL           72\n*        *---------------------------------------*                        73\n*        *     OUTPUT ABEND PSW                  *                        74\n*        *---------------------------------------*                        75\n         MVC   PUTGET(L'MSG2),MSG2     MOVE MESSAGE TO OUTPUT AREA        76\n         XTOC  PLIST=XTOCLIST,         ..CHANGE                        X  77\n               ADIN=SDWAEC1,           ..HEX VALUE                     X  78\n               LIN=L'SDWAEC1,          ..OF SDWA FIELD                 X  79\n               ADOUT=PUTGET+L'MSG2,    ..TO PRINTABLE                  X  80\n               LOUT=L'SDWAEC1*2        ..CHARACTERS                       81\n         LA    R0,L'MSG2+L'SDWAEC1*2   LENGTH OF OUTPUT FIELD FOR TPUT    82\n         LA    R1,PUTGET               ADDRESS OF OUTPUT AREA             83\n         TPUT  (R1),(R0),R             SEND MESSAGE TO TERMINAL           84\n*        *---------------------------------------*                        85\n*        *     OUTPUT ABEND CODE                 *                        86\n*        *---------------------------------------*                        87\n         MVC   PUTGET(L'MSG3),MSG3     MOVE MESSAGE TO OUTPUT AREA        88\n         XTOC  PLIST=XTOCLIST,         ..CHANGE                        X  89\n               ADIN=SDWAABCC,          ..HEX VALUE                     X  90\n               LIN=L'SDWAABCC,         ..OF SDWA FIELD                 X  91\n               ADOUT=PUTGET+L'MSG3,    ..TO PRINTABLE                  X  92\n               LOUT=L'SDWAABCC*2       ..CHARACTERS                       93\n         LA    R0,L'MSG3+L'SDWAABCC*2  LENGTH OF OUTPUT FIELD FOR TPUT    94\n         LA    R1,PUTGET               ADDRESS OF OUTPUT AREA             95\n         TPUT  (R1),(R0),R             SEND MESSAGE TO TERMINAL           96\n*        *---------------------------------------*                        97\n*        *     IF ABEND 0C1 CAUSED BY A @DB@     *                        98\n*        *     TRAP, PROMPT FOR CONTINUATION.    *                        99\n*        *     OTHERWISE PERCOLATE THE ABEND.    *                       100\n*        *---------------------------------------*                       101\n         XR    R1,R1                   CLEAR REGISTER                    102\n         ICM   R1,B'0011',SDWACMPC     SYSTEM COMPLETION CODE            103\n         SRL   R1,4                    RIGHT JUSTIFY                     104\n         C     R1,S0C1                 IS IT 0C1 ?                       105\n         BNE   EXIT00                  NO; PERCOLATE ABEND               106\n         L     R1,SDWANXT1             A(NEXT INSTRUCTION) FROM PSW      107\n         CLC   0(L'EDB,R1),EDB         IS IT OUR EDB TRAP ?              108\n         BNE   EXIT00                  NO; PERCOLATE ABEND               109\n         LA    R0,L'PROMPT             LENGTH OF PROMPT LITERAL          110\n         LA    R1,PROMPT               ADDRESS OF PROMPT LITERAL         111\n         TPUT  (R1),(R0),R             TPUT PROMPT MESSAGE               112\n         LA    R0,L'PUTGET             LENGTH OF TPUT/TGET BUFFER        113\n         LA    R1,PUTGET               ADDRESS OF TPUT/TGET BUFFER       114\n         ICM   R1,B'1000',GETFLAGS     SET FLAG FOR TGET                 115\n         TGET  (R1),(R0),R             GET TERMINAL RESPONSE INTO BUF    116\n         OC    PUTGET(L'GO),FOLD       CHANGE RESPONSE TO UPPER CASE     117\n         CLC   PUTGET(L'GO),GO         IS IT \"GO\" ?                      118\n         BE    EXIT04                  YES; RETRY INTO CODE              119\n         B     EXIT00                  PERCOLATE THE ABEND               120\n*---------------------------------------------------------------------*  121\n*        PERCOLATE THE ABEND                                          *  122\n*---------------------------------------------------------------------*  123\nEXIT00   DS    0H                                                        124\n         LR    R2,R13                  A(SAVE AREA) => R2                125\n         L     R13,SAVEGEN+4           RESTORE A(CALLER'S SAVE AREA)     126\n         FREEMAIN RU,LV=LEDEBUG,A=(2)  FREE WORK AREA STORAGE            127\n         LR    R1,R3                   SDWA ADDRESS TO R1                128\n         SETRP RC=0,REGS=(14,12),DUMP=NO                                 129\n*---------------------------------------------------------------------*  130\n*        RETRY                                                        *  131\n*---------------------------------------------------------------------*  132\nEXIT04   DS    0H                                                        133\n         LR    R2,R13                  A(SAVE AREA) => R2                134\n         L     R13,SAVEGEN+4           RESTORE A(CALLER'S SAVE AREA)     135\n         FREEMAIN RU,LV=LEDEBUG,A=(2)  FREE WORK AREA STORAGE            136\n         L     R15,SDWANXT1            A(NEXT INSTRUCTION) FROM PSW      137\n         LA    R15,L'EDB(R15)          BUMP FOR LENGTH OF EDB TRAP       138\n         LR    R1,R3                   SDWA ADDRESS TO R1                139\n         SETRP RC=4,RETREGS=YES,RETADDR=(15),FRESDWA=YES,              X 140\n               REGS=(14,12),DUMP=NO                                 @01  141\n*---------------------------------------------------------------------*  142\n*        CONSTANTS                                                    *  143\n*---------------------------------------------------------------------*  144\nS0C1     DC    A(X'000000C1')          S0C1 COMPARE VALUE                145\nEDB      DC    C'@DB@'                 EDB TRAP COMPARE VALUE            146\nGETFLAGS DC    B'10000000'             FLAGS FOR TGET                    147\nMSG1     DC    C'ENTRY POINT ADDRESS ... '                               148\nMSG2     DC    C'PSW AT ABEND .......... '                               149\nMSG3     DC    C'ABEND CODE ............ '                               150\nPROMPT   DC    C'ENTER GO TO CONTINUE'                                   151\nGO       DC    C'GO'                                                     152\nFOLD     DC    (L'PUTGET)B'01000000'   UPPERCASE MASK                    153\n         LTORG                                                           154\n*---------------------------------------------------------------------*  155\n*        MAP WORK AREA                                                *  156\n*---------------------------------------------------------------------*  157\nWEDEBUG  DSECT                         USER ACQUIRED REENTRABLE STORAGE  158\nSAVEGEN  DS    18F                     GENERAL REGISTER SAVE AREA        159\nXTOCLIST DS    4F                      PLIST FOR XTOC                    160\nPUTGET   DS    CL256                   TPUT/TGET BUFFER                  161\nLEDEBUG  EQU   *-WEDEBUG                                                 162\n*---------------------------------------------------------------------*  163\n*        OTHER DSECTS                                                 *  164\n*---------------------------------------------------------------------*  165\n         IHASDWA DSECT=YES        MAP SDWA                               166\n         END                                                             167\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EDEBUGC": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x009\\x01\\x02\\x07?\\x01\\x114\\x8f\\x16\"\\x00\\x99\\x00h\\x00\\x00\\xc5\\xe2\\xe2\\xc5\\xc4\\xe3\\xf1@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2011-12-14T16:22:39", "lines": 153, "newlines": 104, "modlines": 0, "user": "ESSEDT1"}, "text": "         TITLE  'EDEBUGC - WILL INVOKE ESTAI EDEBUG ROUTINE'               1\n*+--------------------------------------------------------------------+    2\n*|                      MAINTENANCE LOG                               |    3\n*+----------+-------------------------------------+---------+---------+    4\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |    5\n*+----------+-------------------------------------+---------+---------+    6\n*| 11/18/11 |  WRITTEN                            | EDTOBIAS|         |    7\n*+----------+-------------------------------------+---------+---------+    8\n*                                                                     |    9\n*+--------------------------------------------------------------------+   10\n*|   PLEASE READ INSTRUCTIONS BELOW FOR PROGRAM UPDATES:              |   16\n*|                                                                    |   16\n*|   1) PUT DATE WRITTEN AND AUTHOR IN MAINTENANCE LOG.               |   17\n*|   2) FILL IN THE INTERNAL DOCUMENTATION IN THE SECTION BELOW.      |   18\n*|   3) SET THE CSECT NAME, AMODE, RMODE AND OTHER ATTRIBUTES OF      |   19\n*|      THE MODULE WITH OPERANDS ON THE \"MODULE\" MACRO (SEE APPENDIX).|   20\n*|   4) PUT CODE, CONSTANTS, WORK AREA FIELDS ETC. IN PLACE           |   21\n*|      OF THE LINES MARKED \"*====>\"                                  |   22\n*|   5) ASSEMBLE AND LINK-EDIT WITH THE \"RENT\" PARAMETER.             |   23\n*+--------------------------------------------------------------------+   24\n*                                                                     |   25\n*+--------------------------------------------------------------------+   26\n*|   FUNCTION: EDEBUGC will call EDEBUG for testing at TSO.           |   27\n*|             For more info pls refer to \"MVS POWER PROGRAMMING\".    |   29\n*|             To save the effort of documentation,                   |   28\n*|             please see figure 5.7 on page 107.                     |   28\n*|                                                                    |   30\n*|             The 2nd purpose of this code is to illustrate an       |   30\n*|             elegant way to code a translate table. pls see label   |   30\n*|             \"TABLE\" OR \"T\".                                        |   30\n*|                                                                    |   30\n*|   INPUTS: please see documentation (book)                          |   31\n*|                                                                    |   31\n*|   OUTPUTS: please see documentation (book)                         |   31\n*|                                                                    |   32\n*|   PROGRAM LOGIC: Load edebug, declare ESTAE routine (edebug),      |   33\n*|                  trigger S0C1 by the eyecatchers (@DB@) as per     |   34\n*|                  documentation or the book.                        |   34\n*|                                                                    |   34\n*|   MODULES CALLED: EDEBUG                                           |   35\n*|                                                                    |   36\n*|   DSECTS: WEDEBUGC                                                 |   37\n*|                                                                    |   38\n*|   ATTRIBUTES:                                                      |   39\n*|                                                                    |   40\n*+--------------------------------------------------------------------+   41\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n*                                                                         42\n*        SPLEVEL SET=2      UNCOMMENT THIS LINE TO FORCE XA EXPANSION     43\n*                                                                         44\n         MODULE EDEBUGC,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,          X  45\n               TEXT='CALL OR TEST EDEBUG '                                46\n\n*======> ADD EXECUTABLE CODE HERE <====================================   47\n\n         LOAD  EP=EDEBUG         LOAD INTERACTIVE DEBUGGER MODULE\n\n         LR    R3,R0             ADDRESS OF MODULE TO R3\n\n         ESTAE (R3),MF=(E,ELIST) SET EDEBUG AS AN ESTAE\n\n         DC    H'0',C'@DB@'      BREAK POINT\n\n         DC    H'0',C'@DB@'      BREAK POINT\n\n         DC    H'0',C'@DB@'      BREAK POINT\n\n*======> ADD EXECUTABLE CODE HERE <====================================   47\n\n         B     EXIT00       BRANCH TO EXIT ROUTINE                        48\n*---------------------------------------------------------------------*   49\n*        EXIT ROUTINES                                                *   50\n*---------------------------------------------------------------------*   51\n*        *---------------------------------------*                        52\n*        *     RETURN CODE 0                     *                        53\n*        *---------------------------------------*                        54\nEXIT00   DS    0H                                                         55\n         LA    15,X'00'     SET RETURN CODE TO X'00'                      56\n         B     EXIT         BRANCH TO COMMON EXIT                         57\n*======> ADD ADDITIONAL EXITS WITH RETURN CODES HERE <=================   58\n*---------------------------------------------------------------------*   59\n*        COMMON EXIT                                                  *   60\n*---------------------------------------------------------------------*   61\nEXIT     DS   0H                                                          62\n         ENDMOD             RESTORE REGISTERS AND RETURN                  63\n*---------------------------------------------------------------------*   64\n*        CONSTANTS - GENERATE A TR/TRT TABLE                          *   65\n*---------------------------------------------------------------------*   66\n         EJECT\n         PRINT DATA\n\n* BELOW IS A 1 LINE DEFINITION OF A TABLE WITH X'00'-X'FF'\n* THE TABLE IS FREQUENTLY USED FOR THE TR OR TRT ASSEMBLER INSTRUCTIONS\n\nTABLE    DC    256AL1(*-TABLE)\n\n         ORG   TABLE+C'1'    , OVERRIDE CHAR \"1\" WITH\n         DC    C'A'            CHAR \"A\"\n\n         ORG   TABLE+X'00'   , OVERRIDE CHAR X'00' WITH\n         DC    C'1'            CHAR \"1\"\n\n         ORG   , RESET LOCATION COUNTER\n\n         EJECT\n\nT        DC    256AL1(*-T)    THE LEAST NUMBER OF CHARACTERS TO CODE\n\n         PRINT NODATA\n         EJECT\n*======> PUT CONSTANTS HERE <==========================================   67\n*---------------------------------------------------------------------*   68\n*        WORK AREA                                                    *   69\n*---------------------------------------------------------------------*   70\nWEDEBUGC DSECT                                                            71\n\n*======> PUT WORK AREA FIELDS HERE <===================================   72\n\nELIST    ESTAE ,MF=L\n\n*======> PUT WORK AREA FIELDS HERE <===================================   72\n\nLEDEBUGC EQU   *-WEDEBUGC                                                 73\n*---------------------------------------------------------------------*   74\n*        OTHER DSECTS                                                 *   75\n*---------------------------------------------------------------------*   76\n*======> PUT ADDITIONAL DSECTS HERE <==================================   77\n         END                                                              78\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ENDMOD": {"ttr": 2056, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00n\\x00n\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:51", "lines": 110, "newlines": 110, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         ENDMOD                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+\n.*|                     MAINTENANCE LOG                               |\n.*+----------+------------------------------------+---------+---------+\n.*|  DATE    |      DESCRIPTION                   | CHANGED | REFER   |\n.*+----------+------------------------------------+---------+---------+\n.*| 02/19/92 | USE REGISTER R1 INSTEAD OF R13     | MJM     | #01     |\n.*|          |   IN STORAGE RELEASE ADDR= OPERAND |         |         |\n.*|          |   (FIX#-R0001)                     |         |         |\n.*+----------+------------------------------------+---------+---------+\n.*                                                                    |\n.**********************************************************************    3\n.*       END MODULE WITH THIS MACRO                                   *    4\n.**********************************************************************    5\n         GBLA  &POOL                                                       6\n         GBLB  &CALSA,&WORKA,&FLOAT,&RENTA                                 7\n         GBLC  &SYSSPLV,&SYSASCE                                           8\n         GBLC  &DSCTLEN,&NRENTWK,&DNAME                                    9\n         GBLC  &SAVEGEN,&SAVELEN,&SAVEFLT,&SPLEVI                         10\n         LCLC  &AROUND                                                    11\n&AROUND  SETC  'AWK'.'&SYSNDX'                                            12\n*---------------------------------------------------------------------*   13\n*        COMMON EXIT                                                  *   14\n*---------------------------------------------------------------------*   15\n         AIF   (&FLOAT EQ 0).NOFLT                                        16\n         LD    0,&SAVEFLT               .. RESTORE                        17\n         LD    2,&SAVEFLT+8             ..FLOATING                        18\n         LD    4,&SAVEFLT+16            ..POINT                           19\n         LD    6,&SAVEFLT+24            ..REGISTERS                       20\n.NOFLT   ANOP                                                             21\n         AIF   (&WORKA EQ 0).NOWORK                                       22\n         AIF   (&RENTA EQ 1).YRENT                                        23\n         B     &AROUND                  BRANCH AROUND WORK AREA           24\n         CNOP  0,8                      FORCE DOUBLEWORD ALIGNMENT        25\n&NRENTWK DS    CL(&DSCTLEN)             WORK AREA                         26\n&AROUND  DS    0H                                                         27\n         AGO   .NOWORK                                                    28\n.YRENT   ANOP                                                             29\n         L     0,&SAVELEN               LENGTH OF STORAGE                 30\n         LR    1,13                     A(SAVE AREA) => R2          #01   32\n         AIF   ('&SPLEVI' GT '2').ESA1                              #01   31\n         AIF   (&CALSA EQ 0).NOCSA                                        33\n         L     13,&SAVEGEN+4            A(CALLER'S SAVE AREA)             34\n*                                       FREE WORK AREA STORAGE            35\n.NOCSA   ANOP                                                             36\n         LR    2,15                                                       37\n         FREEMAIN RU,                                                  X  38\n               LV=(0),                                                 X  39\n               SP=&POOL,                                               X  40\n               A=(1)                                                      41\n         LR    15,2                                                       42\n         AGO   .NOWORK                                                    43\n.ESA1    ANOP                                                             44\n         LR    2,15                     RETURN CODE => R2                 45\n*                                       FREE WORK AREA STORAGE            46\n         STORAGE RELEASE,COND=NO,                                      X  47\n               LENGTH=(0),                                             X  48\n               ADDR=(1),                                            #01X  49\n               SP=&POOL                                                   50\n         LR    15,2                     RETURN CODE => R15                51\n.NOWORK  ANOP                                                             52\n         AIF   ('&SPLEVI' LT '3').NOESA1                                  53\n         LA    0,3                      ..RESTORE REGS 0 AND 1            54\n         ESTA  0,0                      ..FROM STACK MODIFIABLE AREA      55\n         PR                             RESTORE REGS AND RETURN           56\n         AGO   .MEND                                                      57\n.NOESA1  ANOP                                                             58\n         AIF   (&CALSA EQ 0).NOCSA1                                       59\n         ST    15,16(,13)                                                 60\n         LM    14,12,12(13)             RESTORE CALLER'S REGISTERS        61\n.NOCSA1  ANOP                                                             62\n         AIF   ('&SYSSPLV' EQ '1').NOXA1                                  63\n         BSM   0,14                     RESTORE AMODE AND RETURN          64\n         AGO   .MEND                                                      65\n.NOXA1   ANOP                                                             66\n         BR    14                       RETURN TO CALLER                  67\n         AGO   .MEND                                                      68\n*        *---------------------------------------*                        69\n*        *     LITERALS                          *                        70\n*        *---------------------------------------*                        71\n.MEND    ANOP                                                             72\n         LTORG                                                            73\n         MEND                                                             74\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EQUATES": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00`\\x00`\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:41", "lines": 96, "newlines": 96, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+\n*|       EQUATES - Register Equates                                   |\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\nA0       EQU    0                      ACCESS REGISTER  0                  1\nA1       EQU    1                      ACCESS REGISTER  1                  2\nA2       EQU    2                      ACCESS REGISTER  2                  3\nA3       EQU    3                      ACCESS REGISTER  3                  4\nA4       EQU    4                      ACCESS REGISTER  4                  5\nA5       EQU    5                      ACCESS REGISTER  5                  6\nA6       EQU    6                      ACCESS REGISTER  6                  7\nA7       EQU    7                      ACCESS REGISTER  7                  8\nA8       EQU    8                      ACCESS REGISTER  8                  9\nA9       EQU    9                      ACCESS REGISTER  9                 10\nA10      EQU   10                      ACCESS REGISTER  10                11\nA11      EQU   11                      ACCESS REGISTER  11                12\nA12      EQU   12                      ACCESS REGISTER  12                13\nA13      EQU   13                      ACCESS REGISTER  13                14\nA14      EQU   14                      ACCESS REGISTER  14                15\nA15      EQU   15                      ACCESS REGISTER  15                16\nC0       EQU    0                      CONTROL REGISTER 0                 17\nC1       EQU    1                      CONTROL REGISTER 1                 18\nC2       EQU    2                      CONTROL REGISTER 2                 19\nC3       EQU    3                      CONTROL REGISTER 3                 20\nC4       EQU    4                      CONTROL REGISTER 4                 21\nC5       EQU    5                      CONTROL REGISTER 5                 22\nC6       EQU    6                      CONTROL REGISTER 6                 23\nC7       EQU    7                      CONTROL REGISTER 7                 24\nC8       EQU    8                      CONTROL REGISTER 8                 25\nC9       EQU    9                      CONTROL REGISTER 9                 26\nC10      EQU   10                      CONTROL REGISTER 10                27\nC11      EQU   11                      CONTROL REGISTER 11                28\nC12      EQU   12                      CONTROL REGISTER 12                29\nC13      EQU   13                      CONTROL REGISTER 13                30\nC14      EQU   14                      CONTROL REGISTER 14                31\nC15      EQU   15                      CONTROL REGISTER 15                32\nR0       EQU    0                      GENERAL REGISTER 0                 33\nR1       EQU    1                      GENERAL REGISTER 1                 34\nR2       EQU    2                      GENERAL REGISTER 2                 35\nR3       EQU    3                      GENERAL REGISTER 3                 36\nR4       EQU    4                      GENERAL REGISTER 4                 37\nR5       EQU    5                      GENERAL REGISTER 5                 38\nR6       EQU    6                      GENERAL REGISTER 6                 39\nR7       EQU    7                      GENERAL REGISTER 7                 40\nR8       EQU    8                      GENERAL REGISTER 8                 41\nR9       EQU    9                      GENERAL REGISTER 9                 42\nR10      EQU   10                      GENERAL REGISTER 10                43\nR11      EQU   11                      GENERAL REGISTER 11                44\nR12      EQU   12                      GENERAL REGISTER 12                45\nR13      EQU   13                      GENERAL REGISTER 13                46\nR14      EQU   14                      GENERAL REGISTER 14                47\nR15      EQU   15                      GENERAL REGISTER 15                48\nV0       EQU    0                      VECTOR REGISTER 0                  49\nV1       EQU    1                      VECTOR REGISTER 1                  50\nV2       EQU    2                      VECTOR REGISTER 2                  51\nV3       EQU    3                      VECTOR REGISTER 3                  52\nV4       EQU    4                      VECTOR REGISTER 4                  53\nV5       EQU    5                      VECTOR REGISTER 5                  54\nV6       EQU    6                      VECTOR REGISTER 6                  55\nV7       EQU    7                      VECTOR REGISTER 7                  56\nV8       EQU    8                      VECTOR REGISTER 8                  57\nV9       EQU    9                      VECTOR REGISTER 9                  58\nV10      EQU   10                      VECTOR REGISTER 10                 59\nV11      EQU   11                      VECTOR REGISTER 11                 60\nV12      EQU   12                      VECTOR REGISTER 12                 61\nV13      EQU   13                      VECTOR REGISTER 13                 62\nV14      EQU   14                      VECTOR REGISTER 14                 63\nV15      EQU   15                      VECTOR REGISTER 15                 64\nF0       EQU    0                      FLOATING POINT REGISTERS 0/1       65\nF2       EQU    2                      FLOATING POINT REGISTERS 2/3       66\nF4       EQU    4                      FLOATING POINT REGISTERS 4/5       67\nF6       EQU    6                      FLOATING POINT REGISTERS 6/7       68\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ESAMOVE": {"ttr": 2062, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00S\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xc3\\x00\\xc3\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:53", "lines": 195, "newlines": 195, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   PRINTS NAMES OF ALL MODULES LOADED IN ANOTHER ADDRESS SPACE.     |    3\n*| INPUTS:                                                            |    4\n*|   ADDRESS SPACE NAME FROM PARM= ON // EXEC CARD.                   |    5\n*| OUTPUTS:                                                           |    6\n*|   MODULE NAME LIST TO OUTPUT FILE.                                 |    7\n*|   ACCESS LIST ENTRY FOR TARGET ADDRESS SPACE.                      |    8\n*|      (THIS CAN BE DELETED WITH ALESERV DELETE.)                    |    9\n*|   R15 - RETURN CODE                                                |   10\n*|          0 - MODULE NAMES WRITTEN TO OUTPUT FILE.                  |   11\n*|          8 - TARGET ADDRESS SPACE NAME NOT IN PARMLIST.            |   12\n*|         12 - XTALK ROUTINE NOT LINK-EDITED.                        |   13\n*|         16 - XTALK ROUTINE ERROR. OTHER REGISTERS CONTAIN:         |   14\n*|              0 - RETURN CODE FROM XTALK.                           |   15\n*|              1 - REASON CODE FROM XTALK.                           |   16\n*|         20 - PRINT ROUTINE NOT LINK-EDITED.                        |   17\n*|         24 - PRINT ROUTINE ERROR.                                  |   18\n*| PROGRAM LOGIC:                                                     |   19\n*|   1) PUT ADDRESS SPACE NAME FROM // EXEC PARM= INTO PARMLIST.      |   20\n*|   2) CALL XTALK TO SET UP ACCESS LIST ENTRY AND RETURN ALET.       |   21\n*|   3) GO INTO ACCESS REGISTER MODE.                                 |   22\n*|   4) CHAIN THROUGH TCBS IN TARGET ADDRESS SPACE, MOVING            |   23\n*|      MODULE NAMES FROM CDES FOR EACH TASK TO LIST IN THIS          |   24\n*|      ADDRESS SPACE.                                                |   25\n*|   5) GO INTO PRIMARY SPACE MODE.                                   |   26\n*|   6) INVOKE PRINT TO PRINT MODULE NAME LIST.                       |   27\n*| MODULES CALLED:                                                    |   28\n*|   XTALK, PRINT                                                     |   29\n*| ATTRIBUTES:                                                        |   30\n*|   REENTERABLE, AMODE=31, RMODE=24, APF AUTHORIZED                  |   31\n*+--------------------------------------------------------------------+   32\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE ESAMOVE,BASE=12,LOC=BELOW,AMODE=31,RMODE=24,           X  33\n               TEXT='MODULE NAMES IN ANOTHER ADDRESS SPACE'               34\n*        *---------------------------------------*                        35\n*        *     GET ADDRESS SPACE NAME AND LENGTH *                        36\n*        *     FROM PARM= ON // EXEC CARD.       *                        37\n*        *---------------------------------------*                        38\n         LAE   R3,PARMLIST             ADDRESS OF PARMLIST => R3          39\n         USING XMSESA,R3               MAP PARMLIST                       40\n         MVI   XMNAME,X'40'                  ..SET MODULE NAME            41\n         MVC   XMNAME+1(L'XMNAME-1),XMNAME   ..IN PARMLIST TO SPACES      42\n         L     R1,0(R1)                ADDRESS OF PARM STRING => R1       43\n         XR    R2,R2                   CLEAR R2                           44\n         ICM   R2,B'0011',0(R1)        LENGTH OF PARM                     45\n         BZ    EXIT08                  =0; PROGRAM NAME NOT GIVEN         46\n         ST    R2,XMNAMEL              SAVE IN PARMLIST                   47\n         BCTR  R2,0                    LESS 1 FOR EXECUTE                 48\n         EX    R2,MVIT1                MOVE NAME TO PLIST                 49\n         B     MVIT1A                  BRANCH AROUND EXECUTED INSTR       50\nMVIT1    MVC   XMNAME(0),2(R1)         ** EXECUTE ONLY **                 51\nMVIT1A   DS    0H                                                         52\n         MVC   MODLIST(L'XMNAME),XMNAME  MOVE ASCB NAME TO MODNAME LIST   53\n*        *---------------------------------------*                        54\n*        *     CALL ROUTINE TO BUILD             *                        55\n*        *     ACCESS LIST ENTRY                 *                        56\n*        *---------------------------------------*                        57\n         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW         58\n         LAE   R1,PARMLIST             PARMLIST FOR XTALK ROUTINE         59\n         ICM   R15,15,=V(XTALK)        ADDRESS OF ROUTINE TO R15          60\n         BZ    EXIT0C                                                     61\n         O     R15,=A(X'80000000')     SET FOR 31 BIT MODE                62\n         BASSM R14,R15                 INVOKE ROUTINE                     63\n         LTR   R15,R15                 RC = 0 ?                           64\n         BNZ   EXIT10                  NO; EXIT RC=8                      65\n         MODESET MODE=PROB             GET A SUPERVISOR STATE PSW         66\n*        *---------------------------------------*                        67\n*        *     GO INTO ACCESS REGISTER MODE      *                        68\n*        *---------------------------------------*                        69\n         SAC   512                     GO INTO AR ASC MODE                70\n         LAE   R12,0(R12,0)            LOAD BASE AR WITH X'00'            71\n         CPYA  A13,A12                 LOAD WORK AREA AR WITH X'00'       72\n         SYSSTATE ASCENV=AR            SET FOR AR MACRO EXPANSIONS        73\n*---------------------------------------------------------------------*   74\n*************  THE FOLLOWING CODE RUNS IN ACCESS REGISTER MODE  *******   75\n*---------------------------------------------------------------------*   76\n*        *---------------------------------------*                        77\n*        *     CHAIN THRU TCBS IN TARGET ADDRESS *                        78\n*        *     SPACE, WRITING MODULE NAMES TO    *                        79\n*        *     LIST IN THIS ADDRESS SPACE        *                        80\n*        *---------------------------------------*                        81\n         LAE   R7,MODNAMES             ADDRESS OF TABLE OF MODULES        82\n         LAM   A6,A6,XMALET            LOAD ACCESS REGISTER W ALET        83\n         L     R6,XMASCB               ADDR ASCB FROM PARMLIST            84\n         L     R6,ASCBASXB-ASCB(,R6)   ADDR ASXB FROM PARMLIST            85\n         L     R6,ASXBFTCB-ASXB(,R6)   ADDR FIRST TCB                     86\n         USING TCB,R6                  MAP TCB                            87\n*                                      ..COPY ALET FOR TARGET ADDRESS     88\n         CPYA  A8,A6                   ..SPACE INTO ACCESS REGISTER A8    89\n         XR    R9,R9                   CLEAR COUNTER                      90\nT$CBLOOP DS    0H                                                         91\n         USING CDENTRY,R8              MAP CDE                            92\n         ICM   R8,15,TCBJPQ            ADDRESS OF JOB-PACK-AREA QUEUE     93\n         BZ    N$EXTCB                 =0; NO MODULES FOR THIS TCB        94\nC$DELOOP DS    0H                                                         95\n         MVC   0(L'CDNAME,R7),CDNAME   MOVE CDE MODULE NAME TO LIST       96\n         LA    R9,1(R9,0)              INCREMENT COUNTER                  97\n         LAE   R7,L'CDNAME(,R7)        POINT AT NEXT ENTRY IN LIST        98\n         ICM   R8,15,CDCHAIN           ADDRESS OF NEXT CDE ON JPAQ        99\n         BNZ   C$DELOOP                \u00ac=0; PROCESS NEXT CDE             100\nN$EXTCB  DS    0H                                                        101\n         ICM   R6,15,TCBTCB            ADDRESS IF NEXT TCB ON TCB QUEUE  102\n         BNZ   T$CBLOOP                \u00ac=0; POINT AT NEXT TCB            103\n         ST    R9,MODCOUNT             SAVE NUMBER OF MODULES IN LIST    104\n*---------------------------------------------------------------------*  105\n*************  END OF ACCESS REGISTER MODE CODE ***********************  106\n*---------------------------------------------------------------------*  107\n*        *---------------------------------------*                       108\n*        *     GO INTO PRIMARY SPACE MODE        *                       109\n*        *---------------------------------------*                       110\n         SAC   0                       GO INTO PRIMARY ASC               111\n         SYSSTATE ASCENV=P             SET FOR PRIMARY MACRO EXPANSIONS  112\n*        *---------------------------------------*                       113\n*        *     PRINT LIST OF MODULE NAMES        *                       114\n*        *---------------------------------------*                       115\n         LA    R1,MODLIST              LIST OF MODULE NAMES              116\n         ICM   R15,15,=V(PRTMOD)       ADDR PRINT MODULE TO R15          117\n         BZ    EXIT14                  =0; NOT LINK-EDITED               118\n         BASSM R14,R15                 INVOKE ROUTINE                    119\n         LTR   R15,R15                 RC = 0 ?                          120\n         BNZ   EXIT08                  NO; EXIT RC=8                     121\n         B     EXIT00                                                    122\n*---------------------------------------------------------------------*  123\n*        EXIT ROUTINES                                                *  124\n*---------------------------------------------------------------------*  125\nEXIT00   DS    0H                      SUCCESSFUL                        126\n         LA    R15,X'00'                                                 127\n         B     EXIT                                                      128\nEXIT08   DS    0H                      TARGET ADDRESS SPACE NAME         129\n         LA    R15,X'08'               NOT IN PARMLIST                   130\n         B     EXIT                                                      131\nEXIT0C   DS    0H                      XMSESA ROUTINE NOT LINK EDITED    132\n         LA    R15,X'0C'                                                 133\n         B     EXIT                                                      134\nEXIT10   DS    0H                      PERCOLATE RETURN AND REASON       135\n         PERCRC RC=X'10'               CODE FROM XMSESA ROUTINE          136\n         B     EXIT                                                      137\nEXIT14   DS    0H                      PRINT ROUTINE NOT LINK EDITED     138\n         LA    R15,X'14'                                                 139\n         B     EXIT                                                      140\nEXIT18   DS    0H                      ERROR IN PRINT ROUTINE            141\n         LA    R15,X'18'                                                 142\n         B     EXIT                                                      143\n*---------------------------------------------------------------------*  144\n*        COMMON EXIT                                                  *  145\n*---------------------------------------------------------------------*  146\nEXIT     LR    R2,R15                  PRESERVE REGISTER 15              147\n         MODESET MODE=PROB             GET A PROBLEM STATE PSW           148\n         LR    R15,R2                  RESTORE  REGISTER 15              149\n         ENDMOD                                                          150\n*---------------------------------------------------------------------*  151\n*        WORK AREA                                                    *  152\n*---------------------------------------------------------------------*  153\nWESAMOVE DSECT                                                           154\nMODMAX   EQU   500                     MAXIMUM ENTRIES IN MODULE LIST    155\nPARMLIST DS    0F,CL(XMSESAL)          PARMLIST FOR XMSESA               156\nMODLIST  DS    CL8,F,CL(MODMAX)        LIST OF MODULE NAMES              157\nMODCOUNT EQU   MODLIST+8,4             COUNT OF MODULE NAMES IN LIST     158\nMODNAMES EQU   MODLIST+12,8            FIRST MODULE NAME IN LIST         159\nLESAMOVE EQU   *-WESAMOVE                                                160\n*---------------------------------------------------------------------*  161\n*        OTHER DSECTS                                                 *  162\n*---------------------------------------------------------------------*  163\n         XMSESA               MAP USER PARMLIST                          164\n         IHAASCB              ADDRESS SPACE CONTROL BLOCK (ASCB)         165\n         IHAASXB              ADDRESS SPACE EXTENSION BLOCK (ASXB)       166\n         IKJTCB               TASK CONTROL BLOCK (TCB)                   167\n         IHACDE               CONTENTS DIRECTORY ENTRY (CDE)             168\n         END                                                             169\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ESAMVPC": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x10\\x01\\x02\\x07?\\x01\\x114\\x8f\\x155\\x00\\xc7\\x00\\xbf\\x00\\x00\\xc5\\xe2\\xe2\\xc5\\xc4\\xe3\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2011-12-14T15:35:10", "lines": 199, "newlines": 191, "modlines": 0, "user": "ESSEDT1"}, "text": "*+--------------------------------------------------------------------+    2\n*|                      MAINTENANCE LOG                               |    3\n*+----------+-------------------------------------+---------+---------+    4\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |    5\n*+----------+-------------------------------------+---------+---------+    6\n*| 12/14/11 | CORRECTED FOR S047 ABEND/S          | EDTOBIAS| @001    |    7\n*|          | MODESET IS NOT NEEDED, NOW COMMENTED|         |         |    7\n*+----------+-------------------------------------+---------+---------+    8\n*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   PRINTS NAMES OF ALL MODULES LOADED IN ANOTHER ADDRESS SPACE.     |    3\n*| INPUTS:                                                            |    4\n*|   ADDRESS SPACE NAME FROM PARM= ON // EXEC CARD.                   |    5\n*| OUTPUTS:                                                           |    6\n*|   MODULE NAME LIST TO OUTPUT FILE.                                 |    7\n*|   ACCESS LIST ENTRY FOR TARGET ADDRESS SPACE.                      |    8\n*|      (THIS CAN BE DELETED WITH ALESERV DELETE.)                    |    9\n*|   R15 - RETURN CODE                                                |   10\n*|          0 - MODULE NAMES WRITTEN TO OUTPUT FILE.                  |   11\n*|          8 - TARGET ADDRESS SPACE NAME NOT IN PARMLIST.            |   12\n*|         12 - XTALK ROUTINE NOT LINK-EDITED.                        |   13\n*|         16 - XTALK ROUTINE ERROR. OTHER REGISTERS CONTAIN:         |   14\n*|              0 - RETURN CODE FROM XTALK.                           |   15\n*|              1 - REASON CODE FROM XTALK.                           |   16\n*|         20 - PRINT ROUTINE NOT LINK-EDITED.                        |   17\n*|         24 - PRINT ROUTINE ERROR.                                  |   18\n*| PROGRAM LOGIC:                                                     |   19\n*|   1) PUT ADDRESS SPACE NAME FROM // EXEC PARM= INTO PARMLIST.      |   20\n*|   2) CALL XTALK TO SET UP ACCESS LIST ENTRY AND RETURN ALET.       |   21\n*|   3) GO INTO ACCESS REGISTER MODE.                                 |   22\n*|   4) CHAIN THROUGH TCBS IN TARGET ADDRESS SPACE, MOVING            |   23\n*|      MODULE NAMES FROM CDES FOR EACH TASK TO LIST IN THIS          |   24\n*|      ADDRESS SPACE.                                                |   25\n*|   5) GO INTO PRIMARY SPACE MODE.                                   |   26\n*|   6) INVOKE PRINT TO PRINT MODULE NAME LIST.                       |   27\n*| MODULES CALLED:                                                    |   28\n*|   XTALK, PRINT                                                     |   29\n*| ATTRIBUTES:                                                        |   30\n*|   REENTERABLE, AMODE=31, RMODE=24, APF AUTHORIZED                  |   31\n*+--------------------------------------------------------------------+   32\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE ESAMVPC,BASE=12,LOC=BELOW,AMODE=31,RMODE=24,           X  33\n               TEXT='MODULE NAMES IN ANOTHER ADDRESS SPACE'               34\n*        *---------------------------------------*                        35\n*        *     GET ADDRESS SPACE NAME AND LENGTH *                        36\n*        *     FROM PARM= ON // EXEC CARD.       *                        37\n*        *---------------------------------------*                        38\n         LAE   R3,PARMLIST             ADDRESS OF PARMLIST => R3          39\n         USING XMSESA,R3               MAP PARMLIST                       40\n         MVI   XMNAME,X'40'                  ..SET MODULE NAME            41\n         MVC   XMNAME+1(L'XMNAME-1),XMNAME   ..IN PARMLIST TO SPACES      42\n         L     R1,0(R1)                ADDRESS OF PARM STRING => R1       43\n         XR    R2,R2                   CLEAR R2                           44\n         ICM   R2,B'0011',0(R1)        LENGTH OF PARM                     45\n         BZ    EXIT08                  =0; PROGRAM NAME NOT GIVEN         46\n         ST    R2,XMNAMEL              SAVE IN PARMLIST                   47\n         BCTR  R2,0                    LESS 1 FOR EXECUTE                 48\n         EX    R2,MVIT1                MOVE NAME TO PLIST                 49\n         B     MVIT1A                  BRANCH AROUND EXECUTED INSTR       50\nMVIT1    MVC   XMNAME(0),2(R1)         ** EXECUTE ONLY **                 51\nMVIT1A   DS    0H                                                         52\n         MVC   MODLIST(L'XMNAME),XMNAME  MOVE ASCB NAME TO MODNAME LIST   53\n*        *---------------------------------------*                        54\n*        *     CALL ROUTINE TO BUILD             *                        55\n*        *     ACCESS LIST ENTRY                 *                        56\n*        *---------------------------------------*                        57\n         CALLPC PLIST=PARMLIST                                            58\n         LTR   R15,R15                                                    59\n         BNZ   EXIT10                                                     60\n*        *---------------------------------------*                        67\n*        *     GO INTO ACCESS REGISTER MODE      *                        68\n*        *---------------------------------------*                        69\n         SAC   512                     GO INTO AR ASC MODE                70\n         LAE   R12,0(R12,0)            LOAD BASE AR WITH X'00'            71\n         CPYA  A13,A12                 LOAD WORK AREA AR WITH X'00'       72\n         SYSSTATE ASCENV=AR            SET FOR AR MACRO EXPANSIONS        73\n*---------------------------------------------------------------------*   74\n*************  THE FOLLOWING CODE RUNS IN ACCESS REGISTER MODE  *******   75\n*---------------------------------------------------------------------*   76\n*        *---------------------------------------*                        77\n*        *     CHAIN THRU TCBS IN TARGET ADDRESS *                        78\n*        *     SPACE, WRITING MODULE NAMES TO    *                        79\n*        *     LIST IN THIS ADDRESS SPACE        *                        80\n*        *---------------------------------------*                        81\n         LAE   R7,MODNAMES             ADDRESS OF TABLE OF MODULES        82\n         LAM   A6,A6,XMALET            LOAD ACCESS REGISTER W ALET        83\n         L     R6,XMASCB               ADDR ASCB FROM PARMLIST            84\n         L     R6,ASCBASXB-ASCB(,R6)   ADDR ASXB FROM PARMLIST            85\n         L     R6,ASXBFTCB-ASXB(,R6)   ADDR FIRST TCB                     86\n         USING TCB,R6                  MAP TCB                            87\n*                                      ..COPY ALET FOR TARGET ADDRESS     88\n         CPYA  A8,A6                   ..SPACE INTO ACCESS REGISTER A8    89\n         XR    R9,R9                   CLEAR COUNTER                      90\nT$CBLOOP DS    0H                                                         91\n         USING CDENTRY,R8              MAP CDE                            92\n         ICM   R8,15,TCBJPQ            ADDRESS OF JOB-PACK-AREA QUEUE     93\n         BZ    N$EXTCB                 =0; NO MODULES FOR THIS TCB        94\nC$DELOOP DS    0H                                                         95\n         MVC   0(L'CDNAME,R7),CDNAME   MOVE CDE MODULE NAME TO LIST       96\n         LA    R9,1(R9,0)              INCREMENT COUNTER                  97\n         LAE   R7,L'CDNAME(,R7)        POINT AT NEXT ENTRY IN LIST        98\n         ICM   R8,15,CDCHAIN           ADDRESS OF NEXT CDE ON JPAQ        99\n         BNZ   C$DELOOP                \u00ac=0; PROCESS NEXT CDE             100\nN$EXTCB  DS    0H                                                        101\n         ICM   R6,15,TCBTCB            ADDRESS IF NEXT TCB ON TCB QUEUE  102\n         BNZ   T$CBLOOP                \u00ac=0; POINT AT NEXT TCB            103\n         ST    R9,MODCOUNT             SAVE NUMBER OF MODULES IN LIST    104\n*---------------------------------------------------------------------*  105\n*************  END OF ACCESS REGISTER MODE CODE ***********************  106\n*---------------------------------------------------------------------*  107\n*        *---------------------------------------*                       108\n*        *     GO INTO PRIMARY SPACE MODE        *                       109\n*        *---------------------------------------*                       110\n         SAC   0                       GO INTO PRIMARY ASC               111\n         SYSSTATE ASCENV=P             SET FOR PRIMARY MACRO EXPANSIONS  112\n*        *---------------------------------------*                       113\n*        *     PRINT LIST OF MODULE NAMES        *                       114\n*        *---------------------------------------*                       115\n         LA    R1,MODLIST              LIST OF MODULE NAMES              116\n         ICM   R15,15,=V(PRTMOD)       ADDR PRINT MODULE TO R15          117\n         BZ    EXIT14                  =0; NOT LINK-EDITED               118\n         BASSM R14,R15                 INVOKE ROUTINE                    119\n         LTR   R15,R15                 RC = 0 ?                          120\n         BNZ   EXIT08                  NO; EXIT RC=8                     121\n         B     EXIT00                                                    122\n*---------------------------------------------------------------------*  123\n*        EXIT ROUTINES                                                *  124\n*---------------------------------------------------------------------*  125\nEXIT00   DS    0H                      SUCCESSFUL                        126\n         LA    R15,X'00'                                                 127\n         B     EXIT                                                      128\nEXIT08   DS    0H                      TARGET ADDRESS SPACE NAME         129\n         LA    R15,X'08'               NOT IN PARMLIST                   130\n         B     EXIT                                                      131\nEXIT0C   DS    0H                      XMSESA ROUTINE NOT LINK EDITED    132\n         LA    R15,X'0C'                                                 133\n         B     EXIT                                                      134\nEXIT10   DS    0H                      PERCOLATE RETURN AND REASON       135\n         PERCRC RC=X'10'               CODE FROM XMSESA ROUTINE          136\n         B     EXIT                                                      137\nEXIT14   DS    0H                      PRINT ROUTINE NOT LINK EDITED     138\n         LA    R15,X'14'                                                 139\n         B     EXIT                                                      140\nEXIT18   DS    0H                      ERROR IN PRINT ROUTINE            141\n         LA    R15,X'18'                                                 142\n         B     EXIT                                                      143\n*---------------------------------------------------------------------*  144\n*        COMMON EXIT                                                  *  145\n*---------------------------------------------------------------------*  146\nEXIT     LR    R2,R15                  PRESERVE REGISTER 15              147\n*S047ABD MODESET MODE=PROB             GET A PROBLEM STATE PSW     @001  148\n         LR    R15,R2                  RESTORE  REGISTER 15              149\n         ENDMOD                                                          150\n*---------------------------------------------------------------------*  151\n*        WORK AREA                                                    *  152\n*---------------------------------------------------------------------*  153\nWESAMVPC DSECT                                                           154\nMODMAX   EQU   500                     MAXIMUM ENTRIES IN MODULE LIST    155\nPARMLIST DS    0F,CL(XMSESAL)          PARMLIST FOR XMSESA               156\nMODLIST  DS    CL8,F,CL(MODMAX)        LIST OF MODULE NAMES              157\nMODCOUNT EQU   MODLIST+8,4             COUNT OF MODULE NAMES IN LIST     158\nMODNAMES EQU   MODLIST+12,8            FIRST MODULE NAME IN LIST         159\nLESAMVPC EQU   *-WESAMVPC                                                160\n*---------------------------------------------------------------------*  161\n*        OTHER DSECTS                                                 *  162\n*---------------------------------------------------------------------*  163\n         XMSESA               MAP USER PARMLIST                          164\n         IHAASCB              ADDRESS SPACE CONTROL BLOCK (ASCB)         165\n         IHAASXB              ADDRESS SPACE EXTENSION BLOCK (ASXB)       166\n         IKJTCB               TASK CONTROL BLOCK (TCB)                   167\n         IHACDE               CONTENTS DIRECTORY ENTRY (CDE)             168\n         PCSERV                                                          169\n         CVT  DSECT=YES,LIST=NO                                          170\n         END                                                             171\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ESAMVPCO": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xbf\\x00\\xbf\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:58", "lines": 191, "newlines": 191, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   PRINTS NAMES OF ALL MODULES LOADED IN ANOTHER ADDRESS SPACE.     |    3\n*| INPUTS:                                                            |    4\n*|   ADDRESS SPACE NAME FROM PARM= ON // EXEC CARD.                   |    5\n*| OUTPUTS:                                                           |    6\n*|   MODULE NAME LIST TO OUTPUT FILE.                                 |    7\n*|   ACCESS LIST ENTRY FOR TARGET ADDRESS SPACE.                      |    8\n*|      (THIS CAN BE DELETED WITH ALESERV DELETE.)                    |    9\n*|   R15 - RETURN CODE                                                |   10\n*|          0 - MODULE NAMES WRITTEN TO OUTPUT FILE.                  |   11\n*|          8 - TARGET ADDRESS SPACE NAME NOT IN PARMLIST.            |   12\n*|         12 - XTALK ROUTINE NOT LINK-EDITED.                        |   13\n*|         16 - XTALK ROUTINE ERROR. OTHER REGISTERS CONTAIN:         |   14\n*|              0 - RETURN CODE FROM XTALK.                           |   15\n*|              1 - REASON CODE FROM XTALK.                           |   16\n*|         20 - PRINT ROUTINE NOT LINK-EDITED.                        |   17\n*|         24 - PRINT ROUTINE ERROR.                                  |   18\n*| PROGRAM LOGIC:                                                     |   19\n*|   1) PUT ADDRESS SPACE NAME FROM // EXEC PARM= INTO PARMLIST.      |   20\n*|   2) CALL XTALK TO SET UP ACCESS LIST ENTRY AND RETURN ALET.       |   21\n*|   3) GO INTO ACCESS REGISTER MODE.                                 |   22\n*|   4) CHAIN THROUGH TCBS IN TARGET ADDRESS SPACE, MOVING            |   23\n*|      MODULE NAMES FROM CDES FOR EACH TASK TO LIST IN THIS          |   24\n*|      ADDRESS SPACE.                                                |   25\n*|   5) GO INTO PRIMARY SPACE MODE.                                   |   26\n*|   6) INVOKE PRINT TO PRINT MODULE NAME LIST.                       |   27\n*| MODULES CALLED:                                                    |   28\n*|   XTALK, PRINT                                                     |   29\n*| ATTRIBUTES:                                                        |   30\n*|   REENTERABLE, AMODE=31, RMODE=24, APF AUTHORIZED                  |   31\n*+--------------------------------------------------------------------+   32\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE ESAMVPC,BASE=12,LOC=BELOW,AMODE=31,RMODE=24,           X  33\n               TEXT='MODULE NAMES IN ANOTHER ADDRESS SPACE'               34\n*        *---------------------------------------*                        35\n*        *     GET ADDRESS SPACE NAME AND LENGTH *                        36\n*        *     FROM PARM= ON // EXEC CARD.       *                        37\n*        *---------------------------------------*                        38\n         LAE   R3,PARMLIST             ADDRESS OF PARMLIST => R3          39\n         USING XMSESA,R3               MAP PARMLIST                       40\n         MVI   XMNAME,X'40'                  ..SET MODULE NAME            41\n         MVC   XMNAME+1(L'XMNAME-1),XMNAME   ..IN PARMLIST TO SPACES      42\n         L     R1,0(R1)                ADDRESS OF PARM STRING => R1       43\n         XR    R2,R2                   CLEAR R2                           44\n         ICM   R2,B'0011',0(R1)        LENGTH OF PARM                     45\n         BZ    EXIT08                  =0; PROGRAM NAME NOT GIVEN         46\n         ST    R2,XMNAMEL              SAVE IN PARMLIST                   47\n         BCTR  R2,0                    LESS 1 FOR EXECUTE                 48\n         EX    R2,MVIT1                MOVE NAME TO PLIST                 49\n         B     MVIT1A                  BRANCH AROUND EXECUTED INSTR       50\nMVIT1    MVC   XMNAME(0),2(R1)         ** EXECUTE ONLY **                 51\nMVIT1A   DS    0H                                                         52\n         MVC   MODLIST(L'XMNAME),XMNAME  MOVE ASCB NAME TO MODNAME LIST   53\n*        *---------------------------------------*                        54\n*        *     CALL ROUTINE TO BUILD             *                        55\n*        *     ACCESS LIST ENTRY                 *                        56\n*        *---------------------------------------*                        57\n         CALLPC PLIST=PARMLIST                                            58\n         LTR   R15,R15                                                    59\n         BNZ   EXIT10                                                     60\n*        *---------------------------------------*                        67\n*        *     GO INTO ACCESS REGISTER MODE      *                        68\n*        *---------------------------------------*                        69\n         SAC   512                     GO INTO AR ASC MODE                70\n         LAE   R12,0(R12,0)            LOAD BASE AR WITH X'00'            71\n         CPYA  A13,A12                 LOAD WORK AREA AR WITH X'00'       72\n         SYSSTATE ASCENV=AR            SET FOR AR MACRO EXPANSIONS        73\n*---------------------------------------------------------------------*   74\n*************  THE FOLLOWING CODE RUNS IN ACCESS REGISTER MODE  *******   75\n*---------------------------------------------------------------------*   76\n*        *---------------------------------------*                        77\n*        *     CHAIN THRU TCBS IN TARGET ADDRESS *                        78\n*        *     SPACE, WRITING MODULE NAMES TO    *                        79\n*        *     LIST IN THIS ADDRESS SPACE        *                        80\n*        *---------------------------------------*                        81\n         LAE   R7,MODNAMES             ADDRESS OF TABLE OF MODULES        82\n         LAM   A6,A6,XMALET            LOAD ACCESS REGISTER W ALET        83\n         L     R6,XMASCB               ADDR ASCB FROM PARMLIST            84\n         L     R6,ASCBASXB-ASCB(,R6)   ADDR ASXB FROM PARMLIST            85\n         L     R6,ASXBFTCB-ASXB(,R6)   ADDR FIRST TCB                     86\n         USING TCB,R6                  MAP TCB                            87\n*                                      ..COPY ALET FOR TARGET ADDRESS     88\n         CPYA  A8,A6                   ..SPACE INTO ACCESS REGISTER A8    89\n         XR    R9,R9                   CLEAR COUNTER                      90\nT$CBLOOP DS    0H                                                         91\n         USING CDENTRY,R8              MAP CDE                            92\n         ICM   R8,15,TCBJPQ            ADDRESS OF JOB-PACK-AREA QUEUE     93\n         BZ    N$EXTCB                 =0; NO MODULES FOR THIS TCB        94\nC$DELOOP DS    0H                                                         95\n         MVC   0(L'CDNAME,R7),CDNAME   MOVE CDE MODULE NAME TO LIST       96\n         LA    R9,1(R9,0)              INCREMENT COUNTER                  97\n         LAE   R7,L'CDNAME(,R7)        POINT AT NEXT ENTRY IN LIST        98\n         ICM   R8,15,CDCHAIN           ADDRESS OF NEXT CDE ON JPAQ        99\n         BNZ   C$DELOOP                \u00ac=0; PROCESS NEXT CDE             100\nN$EXTCB  DS    0H                                                        101\n         ICM   R6,15,TCBTCB            ADDRESS IF NEXT TCB ON TCB QUEUE  102\n         BNZ   T$CBLOOP                \u00ac=0; POINT AT NEXT TCB            103\n         ST    R9,MODCOUNT             SAVE NUMBER OF MODULES IN LIST    104\n*---------------------------------------------------------------------*  105\n*************  END OF ACCESS REGISTER MODE CODE ***********************  106\n*---------------------------------------------------------------------*  107\n*        *---------------------------------------*                       108\n*        *     GO INTO PRIMARY SPACE MODE        *                       109\n*        *---------------------------------------*                       110\n         SAC   0                       GO INTO PRIMARY ASC               111\n         SYSSTATE ASCENV=P             SET FOR PRIMARY MACRO EXPANSIONS  112\n*        *---------------------------------------*                       113\n*        *     PRINT LIST OF MODULE NAMES        *                       114\n*        *---------------------------------------*                       115\n         LA    R1,MODLIST              LIST OF MODULE NAMES              116\n         ICM   R15,15,=V(PRTMOD)       ADDR PRINT MODULE TO R15          117\n         BZ    EXIT14                  =0; NOT LINK-EDITED               118\n         BASSM R14,R15                 INVOKE ROUTINE                    119\n         LTR   R15,R15                 RC = 0 ?                          120\n         BNZ   EXIT08                  NO; EXIT RC=8                     121\n         B     EXIT00                                                    122\n*---------------------------------------------------------------------*  123\n*        EXIT ROUTINES                                                *  124\n*---------------------------------------------------------------------*  125\nEXIT00   DS    0H                      SUCCESSFUL                        126\n         LA    R15,X'00'                                                 127\n         B     EXIT                                                      128\nEXIT08   DS    0H                      TARGET ADDRESS SPACE NAME         129\n         LA    R15,X'08'               NOT IN PARMLIST                   130\n         B     EXIT                                                      131\nEXIT0C   DS    0H                      XMSESA ROUTINE NOT LINK EDITED    132\n         LA    R15,X'0C'                                                 133\n         B     EXIT                                                      134\nEXIT10   DS    0H                      PERCOLATE RETURN AND REASON       135\n         PERCRC RC=X'10'               CODE FROM XMSESA ROUTINE          136\n         B     EXIT                                                      137\nEXIT14   DS    0H                      PRINT ROUTINE NOT LINK EDITED     138\n         LA    R15,X'14'                                                 139\n         B     EXIT                                                      140\nEXIT18   DS    0H                      ERROR IN PRINT ROUTINE            141\n         LA    R15,X'18'                                                 142\n         B     EXIT                                                      143\n*---------------------------------------------------------------------*  144\n*        COMMON EXIT                                                  *  145\n*---------------------------------------------------------------------*  146\nEXIT     LR    R2,R15                  PRESERVE REGISTER 15              147\n         MODESET MODE=PROB             GET A PROBLEM STATE PSW           148\n         LR    R15,R2                  RESTORE  REGISTER 15              149\n         ENDMOD                                                          150\n*---------------------------------------------------------------------*  151\n*        WORK AREA                                                    *  152\n*---------------------------------------------------------------------*  153\nWESAMVPC DSECT                                                           154\nMODMAX   EQU   500                     MAXIMUM ENTRIES IN MODULE LIST    155\nPARMLIST DS    0F,CL(XMSESAL)          PARMLIST FOR XMSESA               156\nMODLIST  DS    CL8,F,CL(MODMAX)        LIST OF MODULE NAMES              157\nMODCOUNT EQU   MODLIST+8,4             COUNT OF MODULE NAMES IN LIST     158\nMODNAMES EQU   MODLIST+12,8            FIRST MODULE NAME IN LIST         159\nLESAMVPC EQU   *-WESAMVPC                                                160\n*---------------------------------------------------------------------*  161\n*        OTHER DSECTS                                                 *  162\n*---------------------------------------------------------------------*  163\n         XMSESA               MAP USER PARMLIST                          164\n         IHAASCB              ADDRESS SPACE CONTROL BLOCK (ASCB)         165\n         IHAASXB              ADDRESS SPACE EXTENSION BLOCK (ASXB)       166\n         IKJTCB               TASK CONTROL BLOCK (TCB)                   167\n         IHACDE               CONTENTS DIRECTORY ENTRY (CDE)             168\n         PCSERV                                                          169\n         CVT  DSECT=YES,LIST=NO                                          170\n         END                                                             171\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ESFRAME": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xa9\\x00\\xa9\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:04", "lines": 169, "newlines": 169, "modlines": 0, "user": "MVSPP"}, "text": "         TITLE 'MVS/ESA FRAME FOR REENTERABLE CODE'                        1\n*+--------------------------------------------------------------------+    2\n*|                      MAINTENANCE LOG                               |    3\n*+----------+-------------------------------------+---------+---------+    4\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |    5\n*+----------+-------------------------------------+---------+---------+    6\n*| 01/04/91 |  WRITTEN                            | MJM     |         |    7\n*+----------+-------------------------------------+---------+---------+    8\n*                                                                     |    9\n*+--------------------------------------------------------------------+   10\n*|  THIS IS A SAMPLE FRAME FOR REENTERABLE CODE UNDER MVS/ESA.        |   11\n*|  TO USE THIS FRAME:                                                |   12\n*|                                                                    |   13\n*|   1) PUT DATE WRITTEN AND AUTHOR IN MAINTENANCE LOG.               |   14\n*|   2) FILL IN THE INTERNAL DOCUMENTATION IN THE SECTION BELOW.      |   15\n*|   4) CHANGE ALL \"ESFRAME\" TO CSECT NAME.                           |   16\n*|   3) SET THE AMODE AND RMODE AND THE SUBPOOL FOR \"STORAGE\" MACRO.  |   17\n*|   5) PUT CODE, CONSTANTS, WORK AREA FIELDS ETC. IN PLACE           |   18\n*|      OF THE LINES MARKED \"*====>\"                                  |   19\n*|   6) ASSEMBLE AND LINK-EDIT WITH THE \"RENT\" PARAMETER.             |   20\n*+--------------------------------------------------------------------+   21\n*                                                                     |   22\n*+--------------------------------------------------------------------+   23\n*|   FUNCTION:                                                        |   24\n*|                                                                    |   25\n*|   INPUTS:                                                          |   26\n*|                                                                    |   27\n*|   OUTPUTS:                                                         |   28\n*|                                                                    |   29\n*|   PROGRAM LOGIC:                                                   |   30\n*|                                                                    |   31\n*|   MODULES CALLED:                                                  |   32\n*|                                                                    |   33\n*|   DSECTS:                                                          |   34\n*|                                                                    |   35\n*|   ATTRIBUTES:                                                      |   36\n*|                                                                    |   37\n*+--------------------------------------------------------------------+   38\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\nESFRAME  CSECT                                                            39\n*        *---------------------------------------*                        40\n*        *     SPECIFY AMODE AND RMODE           *                        41\n*        *---------------------------------------*                        42\nESFRAME  AMODE 31                                                         43\nESFRAME  RMODE ANY                                                        44\n*        *---------------------------------------*                        45\n*        *     REGISTER SAVE AREAS               *                        46\n*        *---------------------------------------*                        47\nWESFRAME DSECT                    USER ACQUIRED STORAGE FOR REENTRABLE    48\nGENREGS  DS    18F                GENERAL REGISTER SAVE AREA              49\nFLTREGS  DS    4D                 FLOATING POINT REGISTER SAVE AREA       50\nSTRGLEN  DS    F                  LENGTH OF STORAGE                       51\nESFRAME  CSECT                                                            52\n*        *---------------------------------------*                        53\n*        *     REGISTER EQUATES                  *                        54\n*        *---------------------------------------*                        55\n         PRINT NOGEN                                                      56\n         COPY EQUATES                  REGISTER EQUATES                   57\n         PRINT GEN                                                        58\n*        *---------------------------------------*                        59\n*        *     ENTRY POINT                       *                        60\n*        *---------------------------------------*                        61\n         USING ESFRAME,15         ADDRESSING ON ENTRY POINT               62\n         B     BEGIN              BRANCH AROUND EYECATCHER                63\n         DC    C' ESFRAME '       CSECT NAME                              64\n         DC    C' &SYSDATE '      DATE OF ASSEMBLY                        65\n         DC    C' &SYSTIME '      TIME OF ASSEMBLY                        66\nSTACKLIT DC    C'F1SA'            CALLER'S SAVE AREA ON STACK             67\nBEGIN    BAKR  14,0               PUSH REGISTERS AND PSW ONTO STACK       68\n         MSTA  0                  INITIALIZE MODIFIED AREA TO REGS 0,1    69\n         LAE   12,0(15,0)         LOAD BASE REGISTER WITH ENTRY POINT     70\n         DROP  15                 DROP ADDRESSING ON ENTRY POINT          71\n         USING ESFRAME,12         SET ADDRESSING ON BASE REGISTER         72\n*        *---------------------------------------*                        73\n*        *     GET STORAGE FOR WORK AREA         *                        74\n*        *---------------------------------------*                        75\n         LA    0,LESFRAME         LENGTH OF WORK AREA STORAGE             76\n         STORAGE OBTAIN,COND=NO,  OBTAIN WORK AREA STORAGE             X  77\n               LENGTH=(0),        LENGTH OF STORAGE                    X  78\n               SP=1,              STORAGE SUBPOOL                      X  79\n               ADDR=(1)           ADDRESS OF STORAGE OBTAINED             80\n         ST    1,8(0,13)          A(SAVE AREA) => CALLER'S SAVE AREA      81\n         LAE   13,0(1,0)          A(SAVE AREA THIS CSECT) => R13          82\n*                                 INDICATE CALLER'S SAVEAREA ON STACK     83\n         MVC   4(L'STACKLIT,13),STACKLIT                                  84\n         USING WESFRAME,13        ADDRESSING FOR SAVE AREA                85\n         ST    0,STRGLEN          SAVE SUBPOOL AND LENGTH                 86\n         EREG  14,2               EXTRACT REGS FROM STACK                 87\n         STD   0,FLTREGS          ..SAVE                                  88\n         STD   2,FLTREGS+8        ..FLOATING                              89\n         STD   4,FLTREGS+16       ..POINT                                 90\n         STD   6,FLTREGS+24       ..REGISTERS                             91\n*======> ADD EXECUTABLE CODE HERE <====================================   92\n         B     EXIT00                   BRANCH TO EXIT ROUTINE            93\n*---------------------------------------------------------------------*   94\n*        EXITS ROUTINES                                               *   95\n*---------------------------------------------------------------------*   96\n*        *---------------------------------------*                        97\n*        *     EXIT WITH RETURN CODE = 0         *                        98\n*        *---------------------------------------*                        99\nEXIT00   DS    0H                                                        100\n         LA    15,X'00'           SET RETURN CODE TO X'00'               101\n         B     EXIT               BRANCH TO COMMON EXIT                  102\n*======> ADD ADDITIONAL EXITS WITH RETURN CODES HERE <=================  103\n*---------------------------------------------------------------------*  104\n*        COMMON EXIT                                                  *  105\n*---------------------------------------------------------------------*  106\nEXIT     DS   0H                                                         107\n         LD    0,FLTREGS          ..RESTORE                              108\n         LD    2,FLTREGS+8        ..FLOATING                             109\n         LD    4,FLTREGS+16       ..POINT                                110\n         LD    6,FLTREGS+24       ..REGISTERS                            111\n         LA    0,LESFRAME         LENGTH OF WORK AREA STORAGE            112\n         LR    2,15               RETURN CODE => R2                      113\n*        *---------------------------------------*                       114\n*        *     RELEASE STORAGE FOR WORK AREA     *                       115\n*        *---------------------------------------*                       116\n         STORAGE RELEASE,COND=NO, FREE WORK AREA STORAGE               X 117\n               LENGTH=(0),        LENGTH OF STORAGE                    X 118\n               ADDR=(13),         ADDRESS OF STORAGE                   X 119\n               SP=1               STORAGE SUBPOOL                        120\n         LA    0,3                ..RESTORE REGS 0 AND 1                 121\n         ESTA  0,0                ..FROM STACK MODIFIABLE AREA           122\n         LR    15,2               RETURN CODE => R15                     123\n         PR                       RESTORE REGS AND RETURN                124\n*        *---------------------------------------*                       125\n*        *     LITERALS                          *                       126\n*        *---------------------------------------*                       127\n         LTORG                                                           128\n*        *---------------------------------------*                       129\n*        *     CONSTANTS                         *                       130\n*        *---------------------------------------*                       131\n*======> PUT CONSTANTS HERE <==========================================  132\n*---------------------------------------------------------------------*  133\n*        WORK AREA                                                    *  134\n*---------------------------------------------------------------------*  135\nWESFRAME DSECT                                                           136\n*======> PUT WORK AREA FIELDS HERE <===================================  137\nLESFRAME EQU   *-WESFRAME                                                138\n*---------------------------------------------------------------------*  139\n*        OTHER DSECTS                                                 *  140\n*---------------------------------------------------------------------*  141\n*======> PUT ADDITIONAL DSECTS HERE <==================================  142\n         END                                                             143\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXEC": {"ttr": 2564, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00i\\x00i\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:09", "lines": 105, "newlines": 105, "modlines": 0, "user": "MVSPP"}, "text": "//*-------------------------------------------------------------------+\n//*  EXEC.JCL                                                         |\n//*                                                                   |\n//*  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n//*                                                                   |\n//*  Address questions to: mmarx@mdpaladin.com                        |\n//*                                                                   |\n//*  Permission is hereby granted, free of charge, to any person      |\n//*  obtaining a copy of this software and associated documentation   |\n//*  files (the \"Software\"), to deal in the Software without          |\n//*  restriction, including without limitation the rights to use,     |\n//*  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n//*  copies of the Software, and to permit persons to whom the        |\n//*  Software is furnished to do so, subject to the following         |\n//*  conditions:                                                      |\n//*                                                                   |\n//*  The above copyright notice and this permission notice shall be   |\n//*  included in all copies or substantial portions of the Software.  |\n//*                                                                   |\n//*  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n//*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n//*  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n//*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n//*  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n//*  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n//*  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n//*  OTHER DEALINGS IN THE SOFTWARE.                                  |\n//*-------------------------------------------------------------------+\n//*-------------------------------------------------------------------*\n//* TO EXECUTE EACH PROGRAM:                                          *\n//*   1) ADD A JOB CARD.                                              *\n//*   2) MAKE THE CHANGES INDICATED BY \"<====\"                        *\n//*-------------------------------------------------------------------*\n//*\n//*-------------------------------------------------------------------*\n//*        NCRYPT  - ENCRYPT OR DEENCRYPT A FILE                      *\n//*-------------------------------------------------------------------*\n//NCRYPT   EXEC PGM=NCRYPT,PARM='KKKKKKK'          <==== ENCRYPTION KEY\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//IN       DD DISP=SHR,DSN=DDDDDDD                 <=== FILE TO ENCRYPT\n\n//*-------------------------------------------------------------------*\n//*        SVCLIST - PRINT THE CONTENTS OF THE SVC TABLE              *\n//*-------------------------------------------------------------------*\n//SVCLIST  EXEC PGM=SVCLIST\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//PRINT    DD SYSOUT=*\n\n//*-------------------------------------------------------------------*\n//*        ESAMOVE - PRINTS THE NAMES OF MODULES LOADED IN ANOTHER    *\n//*                  ADDRESS SPACE. (ACCESS REGISTER MODE VERSION)    *\n//*-------------------------------------------------------------------*\n//ESAMOVE  EXEC PGM=ESAMOVE,PARM='NNNNNNNN' <=TARGET ADDRESS SPACE NAME\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//PRINT    DD SYSOUT=*\n\n//*-------------------------------------------------------------------*\n//*        XAMOVE  - PRINTS THE NAMES OF MODULES LOADED IN ANOTHER    *\n//*                  ADDRESS SPACE (DUAL ADDRESS SPACE VERSION)       *\n//*-------------------------------------------------------------------*\n//XAMOVE   EXEC PGM=XAMOVE,PARM='NNNNNNNN'  <=TARGET ADDRESS SPACE NAME\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//PRINT    DD SYSOUT=*\n\n//*-------------------------------------------------------------------*\n//*        TSCHD1  - CALL SCHDSRB TO SCHEDULE A LOCAL SRB             *\n//*-------------------------------------------------------------------*\n//SCHDSRB  EXEC PGM=TSCHD1\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//LOADLIB  DD DISP=SHR,DSN=LOADLIB         <== SRB ROUTINE RESIDES HERE\n\n//*-------------------------------------------------------------------*\n//*        ESAMVPC - PRINTS THE NAMES OF MODULES LOADED IN ANOTHER    *\n//*                  ADDRESS SPACE.  THIS VERSION, REFERRED TO IN     *\n//*                  CHAPTER 10 AS ESAMOVE(PC), INVOKES A PC ROUTINE. *\n//*        PCSET, THE SERVICE ADDRESS SPACE THAT CONTAINS THE PC      *\n//*        ROUTINE,  MUST BE ACTIVE BEFORE THIS PROGRAM CAN EXECUTE.  *\n//*-------------------------------------------------------------------*\n//ESAMVPC  EXEC PGM=ESAMVPC,PARM='NNNNNNNN' <=TARGET ADDRESS SPACE NAME\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//PRINT    DD SYSOUT=*\n\n//*-------------------------------------------------------------------*\n//*        DSPUT   - MOVES DATA AMONG DATASPACES.                     *\n//*                  BEFORE EXECUTING THIS PROGRAM, START THE DSPACE  *\n//*                  TASK AND ISSUE CONSOLE MODIFY COMMANDS TO CREATE *\n//*                  DATASPACES \"DSP1\" AND \"DSP2\" (SEE CHAPTER 11).   *\n//*-------------------------------------------------------------------*\n//DSPUT    EXEC PGM=DSPUT\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n\n//*-------------------------------------------------------------------*\n//*        HOOKSVC - FRONT-END OR BACK-END AN SVC.                    *\n//*                  AFTER EXECUTING THIS PROGRAM, ANY CALL TO THE    *\n//*                  SVC WILL ALSO INVOKE THE FRONT/BACK-END CODE     *\n//*-------------------------------------------------------------------*\n//HOOKSVC  EXEC PGM=HOOKDRV\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n//LOADLIB  DD DISP=SHR,DSN=LOADLIB    <=== SVC HOOK MODULE RESIDES HERE\n\n//*-------------------------------------------------------------------*\n//*        BLDIRB - EXECUTE AN IRB UNDER A SUBTASK.                   *\n//*-------------------------------------------------------------------*\n//BLDIRB   EXEC PGM=BLDIRB\n//STEPLIB  DD DISP=SHR,DSN=LOADLIB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GETASCB": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\x84\\x00\\x84\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:13", "lines": 132, "newlines": 132, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|     GIVEN THE NAME OF AN ADDRESS SPACE (JOBNAME FOR BATCH JOB,     |    3\n*|     PROC NAME FOR STARTED TASK OR LOGON ID FOR TSO ADDRESSS        |    4\n*|     SPACE), RETURNS THE ADDRESS OF THE ASCB FOR THAT ADDRESS SPACE |    5\n*|  INPUTS:                                                           |    6\n*|     R1 - ADDRESS OF PARMLIST                                       |    7\n*|          1ST PARM - LENGTH OF ADDRESS SPACE NAME    F              |    8\n*|          2ST PARM - ADDRESS SPACE NAME              CL8            |    9\n*|          3RD PARM - SEE OUTPUTS                     A              |   10\n*|  OUTPUTS:                                                          |   11\n*|     R15 - RETURN CODE                                              |   12\n*|           00 - FOUND                                               |   13\n*|           08 - NOT FOUND                                           |   14\n*|     IF ADDRESS SPACE NAME FOUND, 3RD PARM IN PARMLIST              |   15\n*|        (SEE INPUTS) CONTAINS ADDRESS OF ASCB                       |   16\n*|  PROGRAM LOGIC:                                                    |   17\n*|      1) LOCATE THE ADDRESS SPACE VECTOR TABLE (ASVT).              |   18\n*|      2) LOOP THROUGH THE ASVT, COMPARING THE ADDRESS SPACE NAME    |   19\n*|         FROM THE PARMLIST WITH THE NAME POINTED TO BY EACH ASCB.   |   20\n*|      3) IF ADDRESS SPACE FOUND, PUT THE ASCB ADDRESS INTO PARMLIST.|   21\n*|  ATTRIBUTES:                                                       |   22\n*|      REENTERABLE, AMODE=31, RMODE=ANY                              |   23\n*+--------------------------------------------------------------------+   24\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE GETASCB,BASE=12,AMODE=31,RMODE=ANY,                    X  25\n               TEXT='SCAN ASVT FOR ADDRESS SPACE'                         26\n*        *---------------------------------------*                        27\n*        *     LOCATE THE ASVT                   *                        28\n*        *---------------------------------------*                        29\n         LR    R8,R1                   ADDRESS OF PARMLIST TO R8          30\n         L     R4,CVTPTR               ADDRESS OF CVT TO REGISTER 4       31\n         USING CVT,R4                  SET UP ADDRESSING FOR CVT          32\n         L     R4,CVTASVT              ADDRESS OF ASVT                    33\n         USING ASVT,R4                 SET UP ADDRESSING FOR ASVT         34\n*        *---------------------------------------*                        35\n*        *     LOOP THROUGH THE ASVT COMPARING   *                        36\n*        *     ADDRESS SPACE NAME WITH PARMLIST  *                        37\n*        *---------------------------------------*                        38\n         LA    R5,ASVTFRST             ADDRESS OF FIRST ENTRY IN ASVT     39\n         L     R6,ASVTMAXU             ASVT MAXIMUM ADDRESS SPACES        40\nA$SVTLP1 DS    0H                                                         41\n         TM    0(R5),ASVTAVAI          ADDRESS SPACE NUMBER UNUSED?       42\n         BNO   A$CNT                   NO; CHECK THE ASCB                 43\n         C     R5,=A(X'80000000')      IS THIS THE LAST ASVT ENTRY ?      44\n         BE    A$NTFND                 YES; ASID NOT FOUND                45\n         B     A$BMP                   NO; CHECK NEXT ASCB                46\nA$CNT    DS    0H                                                         47\n         L     R4,0(R5)                ADDRESS OF ASCB FROM ASVT          48\n         USING ASCB,R4                 SET UP ADDRESSING FOR ASCB         49\n         MVC   PGM(L'PGM),SPACES       INITIALIZE FORMAT AREA             50\n         L     R9,0(R8)                LENGTH OF ADDRESS SPACE NAME       51\n         BCTR  R9,0                    LESS 1 FOR EXECUTE                 52\n         EX    R9,A$MVIT               MOVE TO FORMAT AREA                53\n         B     A$MVITA                                                    54\nA$MVIT   MVC   PGM(0),4(R8)            ** EXECUTE ONLY **                 55\nA$MVITA  DS    0H                                                         56\n         L     R7,ASCBJBNS             ASCB POINTER TO JOBNAME FIELD      57\n         CLC   0(L'INIT,R7),INIT       IS THIS AN INITIATOR ?             58\n         BNE   A$NTINIT                NO; USE ASCBJBNS FOR COMPARE       59\n         ICM   R7,15,ASCBJBNI          ADDRESS OF JOBNAME FIELD IN INIT   60\n         BZ    A$BMP                   =0; UNUSED INITIATOR               61\nA$NTINIT DS    0H                                                         62\n         CLC   0(L'PGM,R7),PGM         IS THIS THE ADDRESS SPACE ?        63\n         BE    A$YFND                  YES; ASCB ADDRESS TO PARMLIST      64\nA$BMP    DS    0H                                                         65\n         LA    R5,L'ASVTENTY(R5)       BUMP TO NEXT ENTRY                 66\n         BCT   R6,A$SVTLP1             CHECK NEXT ASVT ENTRY              67\nA$NTFND  DS    0H                                                         68\n         B     EXIT08                  ADDRESS SPACE NOT FOUND            69\nA$YFND   DS    0H                                                         70\n*        *---------------------------------------*                        71\n*        *     PUT ASCB ADDRESS IN PARMLIST      *                        72\n*        *---------------------------------------*                        73\n         ST    R4,12(R8)               PUT ASCB ADDRESS IN PARMLIST       74\n         B     EXIT00                  ADDRESS SPACE FOUND                75\n*---------------------------------------------------------------------*   76\n*        EXIT ROUTINES                                                *   77\n*---------------------------------------------------------------------*   78\nEXIT00   DS    0H                      ADDRESS SPACE FOUND                79\n         LA    R15,X'00'                                                  80\n         B     EXIT                                                       81\nEXIT08   DS    0H                      ADDRESS SPACE NOT FOUND            82\n         LA    R15,X'08'                                                  83\n         B     EXIT                                                       84\n*---------------------------------------------------------------------*   85\nEXIT     DS   0H                                                          86\n         ENDMOD                                                           87\n*---------------------------------------------------------------------*   88\n*        CONSTANTS                                                    *   89\n*---------------------------------------------------------------------*   90\nSPACES   DC    CL8' '                  8 BYTES OF X'40'                   91\nINIT     DC    CL8'INIT'               ADDRESS SPACE NAME FOR INITIATOR   92\n*---------------------------------------------------------------------*   93\n*        WORK AREA                                                    *   94\n*---------------------------------------------------------------------*   95\nWGETASCB DSECT                                                            96\nPGM      DS    CL8                     FORMAT AREA-ADDRESS SPACE NAME     97\nLGETASCB EQU   *-WGETASCB                                                 98\n*---------------------------------------------------------------------*   99\n*        OTHER DSECTS                                                 *  100\n*---------------------------------------------------------------------*  101\n         PRINT NOGEN                                                     102\n         CVT     DSECT=YES,LIST=NO      MAP CVT                          103\n         IHAASVT DSECT=YES              MAP ASVT                         104\n         IHAASCB DSECT=YES              MAP ASCB                         105\n         END                                                             106\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GETPRM": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00%\\x00%\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:18", "lines": 37, "newlines": 37, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                         PARMLIST FOR XTALK SERVICE          1\n         GETPRM                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      PARMLIST FOR GETASCB                                         |    4\n.*+-------------------------------------------------------------------+    5\nGETPRM   DSECT                                                             6\nGETNAMEL DS    F                       LENGTH OF ADDRESS SPACE NAME        7\nGETNAME  DS    CL8                     ADDRESS SPACE NAME                  8\nGETADDR  DS    A                       ADDRESS OF ASCB                     9\nGETPRML  EQU   *-GETPRM                                                   10\n         MEND                                                             11\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GET24": {"ttr": 2572, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x001\\x001\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:22", "lines": 49, "newlines": 49, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n&LABEL   GET24 &DCB,&AREA,&RPL=,&REG=                                      2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n         LCLB  &E1                                                         3\n         LCLC  &LBL1,&LBL2                                                 4\n.**********************************************************************    5\n.*       PERFORM 24 BIT I/O IN 31 BIT PROGRAM                         *    6\n.*       REG = PARAMETER NAMES A WORK REGISTER                        *    7\n.**********************************************************************    8\n         AIF   (T'&REG NE 'O').OK1                                         9\n         MNOTE 8,'OPERAND \"REG\" IS REQUIRED'                              10\n&E1      SETB  1                                                          11\n.OK1     ANOP                                                             12\n         AIF   (&E1).MEND                                                 13\n&LBL1    SETC  'GTT'.'&SYSNDX'                                            14\n&LBL2    SETC  'GTX'.'&SYSNDX'                                            15\n         LA    &REG,&LBL1                                                 16\n         LA    15,&LBL2                                                   17\n         BSM   &REG,15                                                    18\n&LBL2    DS    0H                                                         19\n         GET   &DCB,&AREA,&RPL=                                           20\n         BSM   0,&REG                                                     21\n&LBL1    DS    0H                                                         22\n.MEND    MEND                                                             23\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HEXPRT": {"ttr": 2574, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00|\\x00|\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:27", "lines": 124, "newlines": 124, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    CONVERT HEX STRING TO HEX IN CHARACTER FORMAT.                  |    3\n*|  INPUT:                                                            |    4\n*|    R1 - ADDRESS OF 4 WORD PARMLIST                                 |    5\n*|         1ST WORD - ADDRESS OF OUTPUT STRING                        |    6\n*|         2ND WORD - LENGTH OF OUTPUT STRING                         |    7\n*|         3RD WORD - ADDRESS OF INPUT STRING                         |    8\n*|         4TH WORD - LENGTH OF INPUT STRING                          |    9\n*|  OUTPUT:                                                           |   10\n*|    R15 -RETURN CODE                                                |   11\n*|          0 - INPUT STRING TRANSLATED TO OUTPUT STRING              |   12\n*|          4 - OUTPUT AREA LONGER  THAN 2*INPUT (PADDING)            |   13\n*|          8 - OUTPUT AREA SHORTER THAN 2*INPUT (TRUNCATION)         |   14\n*|         12 - OUTPUT AREA NOT ALLOCATED BY CALLER.                  |   15\n*|  LOGIC:                                                            |   16\n*|    THE HIGH AND LOW ORDER 4 BITS OF EACH INPUT BYTE ARE            |   17\n*|        PUT IN THE LOW ORDER 4 BITS OF 2 OUTPUT BYTES:              |   18\n*|        INPUT:  |A5|37| ==> OUTPUT: |0A|05|03|07|                   |   19\n*|                                                                    |   20\n*|    THE TR INSTRUCTION IS USED TO TRANSLATE TO PRINTABLE HEX        |   21\n*|        OUTPUT: |0A|05|03|07| ==>   |C1|F5|F3|F7|                   |   22\n*|  ATTRIBUTES:                                                       |   23\n*|    REENTRANT AMODE 31 RMODE ANY                                    |   24\n*+--------------------------------------------------------------------+   25\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE HEXPRT,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  26\n               TEXT='CONVERT HEX STRING TO PRINTABLE'                     27\n         LR    R3,R1                   PARMLIST ADDRESS TO R3             28\n         LM    R4,R7,0(R3)             LOAD PARMS                         29\n*        *---------------------------------------*                        30\n*        *     R4 = ADDRESS OF OUTPUT STRING     *                        31\n*        *     R5 = LENGTH   OF OUTPUT STRING    *                        32\n*        *     R6 = ADDRESS OF INPUT STRING      *                        33\n*        *     R7 = LENGTH   OF INPUT STRING     *                        34\n*        *---------------------------------------*                        35\n*        *---------------------------------------*                        36\n*        *     TEST IF OUTPUT IS ALLOCATED       *                        37\n*        *---------------------------------------*                        38\n         VSMLOC PVT,AREA=((R4),(R5)) .. OUTPUT ALLOCATED                  39\n         LTR   R15,R15                 .. IN USER PRIVATE AREA ?          40\n         BNZ   EXIT0C                 NO; EXIT                            41\n*        *---------------------------------------*                        42\n*        *     CLEAR OUTPUT STRING               *                        43\n*        *---------------------------------------*                        44\n         XR    R7,R7                  .. SET                              45\n         ICM   R7,B'1000',=X'40'      .. OUTPUT                           46\n         MVCL  R4,R6                  .. TO X'40'                         47\n*        *---------------------------------------*                        48\n*        *     INPUT TO OUTPUT AND TRANSLATE     *                        49\n*        *---------------------------------------*                        50\n         LM    R4,R7,0(R3)             LOAD PARMS                         51\nHLOOP    DS    0H                                                         52\n         CH    R5,=H'2'                AT LEAST 2 BYTES IN OUPUT ?        53\n         BNL   MOREOP                  YES; CONTINUE                      54\n         CH    R7,=H'1'                AT LEAST 1 BYTES IN INPUT ?        55\n         BNL   EXIT08                  YES; EXIT INDICATING TRUNCATION    56\n         B     EXIT00                  NO INPUT STRING/NO OUTPUT STRING   57\nMOREOP   DS    0H                                                         58\n         CH    R7,=H'1'                AT LEAST 1 BYTES IN INPUT ?        59\n         BL    EXIT04                  NO; EXIT INDICATING PADDING        60\n         ICM   R8,B'0010',0(R6)        INPUT BYTE TO REGISTER             61\n         SRL   R8,4                    SHIFT HIGH NYBBLE TO LOW NYBBLE    62\n         ICM   R8,B'0001',0(R6)        INPUT BYTE TO REGISTER             63\n         N     R8,=A(X'00000F0F')      MASK OFF IRRELVANT BITS            64\n         STCM  R8,B'0011',0(R4)        STORE 2 BYTES TO OUTPUT            65\n*                                      TRANSLATE OUTPUT                   66\n         TR    0(2,R4),=C'0123456789ABCDEF'                               67\n         SH    R5,=H'2'                DECREMENT OUTPUT LENGTH            68\n         LA    R4,2(R4)                BUMP IN OUTPUT STRING              69\n         LA    R6,1(R6)                BUMP IN INPUT STRING               70\n         BCTR  R7,0                    DECREMENT INPUT LENGTH             71\n         B     HLOOP                   CHECK NEXT BYTES                   72\n*---------------------------------------------------------------------*   73\n*        EXIT ROUTINES                                                *   74\n*---------------------------------------------------------------------*   75\nEXIT00   DS    0H                      NO PADDING OR TRUNCATION           76\n         LA    R15,X'00'                                                  77\n         B     EXIT                                                       78\nEXIT04   DS    0H                      OUTPUT STRING PADDED               79\n         LA    R15,X'04'                                                  80\n         B     EXIT                                                       81\nEXIT08   DS    0H                      INPUT STRING TRUNCATED             82\n         LA    R15,X'08'                                                  83\n         B     EXIT                                                       84\nEXIT0C   DS    0H                      OUTPUT STRING AREA NOT ALLOCATED   85\n         LA    R15,X'0C'                                                  86\n         B     EXIT                                                       87\n*---------------------------------------------------------------------*   88\n*        COMMON EXIT                                                  *   89\n*---------------------------------------------------------------------*   90\nEXIT     DS   0H                                                          91\n         ENDMOD                                                           92\n*---------------------------------------------------------------------*   93\n*        WORK AREA                                                    *   94\n*---------------------------------------------------------------------*   95\nWHEXPRT  DSECT                                                            96\nLHEXPRT  EQU   *-WHEXPRT                                                  97\n         END                                                              98\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HOOKDRV": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00Z\\x00Z\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:34", "lines": 90, "newlines": 90, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    INVOKE THE HOOKIN PROGRAM TO INSTALL AN SVC FRONT-END.          |    3\n*|  INPUTS:                                                           |    4\n*|    NONE                                                            |    5\n*|  OUTPUTS:                                                          |    6\n*|    SVC FRONT-END INSTALLED                                         |    7\n*|  LOGIC:                                                            |    8\n*|    1) COPY SVC UPDATE MF=L TO USER PARMLIST                        |    9\n*|    2) PUT NAME OF FRONT-END PROGRAM IN PARMLIST                    |   10\n*|    3) INVOKE THE HOOKIN PROGRAM TO INSTALL THE FRONT-END           |   11\n*|  FUNCTION:                                                         |   12\n*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF AUTHORIZATION      |   13\n*+--------------------------------------------------------------------+   14\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE HOOKDRV,BASE=12,AMODE=31,RMODE=ANY,                    X  15\n               TEXT='CALL HOOKIN TO INSTALL SVC FRONT-END'                16\n         LA    R3,PARMLIST                 ADDRESS OF PARMLIST => R3      17\n         USING HOOKPRM,R3                  MAP PARMLIST                   18\n*                                          ..COPY SVCUPDTE PARMLIST       19\n         MVC   HOSVCUL(LHOSVCUL),SVCINSTL  ..MODEL TO USER PARMLIST       20\n         LA    R1,L'HOOKNAME               LENGTH OF MODULE NAME          21\n         STH   R1,HOLNAME                  PUT IN PARMLIST                22\n         MVC   HONAME(L'HOOKNAME),HOOKNAME MODULE NAME TO PARMLIST        23\n         LOAD  EP=HOOKIN,ERRET=EXIT08      LOAD THE INSTALL ROUTINE       24\n         LR    R15,R0                      HOOKIN ENTRYPOINT TO R15       25\n         LA    R1,PARMLIST                 PARMLIST ADDRESS TO R1         26\n         BASSM R14,R15                     INVOKE THE INSTALL ROUTINE     27\n         LTR   R15,R15                     RETURN CODE = 0 ?              28\n         BNZ   EXIT0C                      NO; EXIT                       29\n         B     EXIT00                                                     30\n*---------------------------------------------------------------------*   31\n*        EXIT ROUTINES                                                *   32\n*---------------------------------------------------------------------*   33\nEXIT00   DS    0H                          SUCCESSFUL INSTALL             34\n         LA    15,X'00'                                                   35\n         B     EXIT                                                       36\nEXIT08   DS    0H                          LOAD FOR HOOKIN FAILED         37\n         LA    15,X'08'                                                   38\n         B     EXIT                                                       39\nEXIT0C   DS    0H                          HOOKIN SERVICE FAILED          40\n         PERCRC RC=X'0C'                                                  41\n         B     EXIT                                                       42\n*---------------------------------------------------------------------*   43\n*        COMMON EXIT                                                  *   44\n*---------------------------------------------------------------------*   45\nEXIT     DS   0H                                                          46\n         ENDMOD                                                           47\n*---------------------------------------------------------------------*   48\n*        NAME OF THE SVC FRONT-END MODULE AND                         *   49\n*        SVCUPDTE PASSED TO HOOKIN PROGRAM IN PARMLIST                *   50\n*---------------------------------------------------------------------*   51\nHOOKNAME DC    CL8'HOOKSVC'            NAME OF THE SVC HOOK MODULE        52\nSVCINSTL SVCUPDTE 200,REPLACE,TYPE=4,MF=L                                 53\n*---------------------------------------------------------------------*   54\n*        WORK AREA                                                    *   55\n*---------------------------------------------------------------------*   56\nWHOOKDRV DSECT                                                            57\nPARMLIST DS    0F,CL(LHOOKPRM)         PARMLIST FOR HOOKIN SERVICE        58\nLHOOKDRV EQU   *-WHOOKDRV              LENGTH OF WORK AREA                59\n*---------------------------------------------------------------------*   60\n*        OTHER DSECTS                                                 *   61\n*---------------------------------------------------------------------*   62\n         HOOKPRM                       MAP PARMLIST                       63\n         END                                                              64\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HOOKIN": {"ttr": 2820, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\x95\\x00\\x95\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:41", "lines": 149, "newlines": 149, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    INSTALL AN SVC FRONT-END (HOOK). THE HOOK MODULE MUST BEGIN     |    3\n*|    WITH THE PREFIX MAPPED BY THE HOOKPRE DSECT.                    |    4\n*|  LOGIC:                                                            |    5\n*|    1) CALL REPMOD TO INSTALL HOOK MODULE ON LPAQ.                  |    6\n*|    2) PUT LENGTH OF HOOK MODULE IN HOOK PREFIX.                    |    7\n*|    3) ENQUE ON SVC TABLE.                                          |    8\n*|    4) LOCATE SVC TABLE FOR SVC.                                    |    9\n*|       PUT ORIGINAL SVC ENTRYPOINT INTO HOOK MODULE PREFIX.         |   10\n*|    5) ISSUE SVCUPDTE AGAINST SVCUPDTE MF=L IN INPUT PARMLIST       |   11\n*|    6) DEQUE ON SVC TABLE.                                          |   12\n*|  INPUT:                                                            |   13\n*|    R1 -  ADDRESS OF PARMLIST MAPPED BY HOOKPRM DSECT               |   14\n*|  OUTPUT:                                                           |   15\n*|    R15 - RETURN CODE                                               |   16\n*|           0 = HOOK SUCCESSFULLY INSTALLED                          |   17\n*|           4 = REPMOD NOT LINK-EDITED                               |   18\n*|           8 = REPMOD SERVICE FAILED                                |   19\n*|          12 = UPDATE OF SVC TABLE FAILED                           |   20\n*|  ATTRIBUTES:                                                       |   21\n*|    AMODE 31 RMODE ANY REENTRANT                                    |   22\n*+--------------------------------------------------------------------+   23\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE HOOKIN,BASE=12,AMODE=31,RMODE=ANY,                     X  24\n               TEXT='INSTALL SVC HOOK ROUTINE'                            25\n         LR    R3,R1                   ADDRESS OF INPUT PARMLIST          26\n         USING HOOKPRM,R3              MAP INPUT PARMLIST                 27\n*        *---------------------------------------*                        28\n*        *     CALL REPMOD TO INSTALL HOOK       *                        29\n*        *     MODULE ON LINK-PACK-AREA-QUEUE.   *                        30\n*        *     REPMOD IS USUALLY CALLED:         *                        31\n*        *      // EXEC PGM=REPMOD,PARM=HOOKMOD  *                        32\n*        *---------------------------------------*                        33\n         LA    R1,HOLNAME              ..STORE ADDRESS OF FIELD WITH      34\n         ST    R1,ADHOLNAM             ..LNGTH AND NAME OF HOOK MODULE    35\n         LA    R1,ADHOLNAM             LOAD ADDRESS OF ADDRESS INTO R1    36\n         ICM   R15,15,=V(REPMOD)       ADDRESS OF REPMOD ROUTINE          37\n         BZ    EXIT04                  =0; NOT LINKED, EXIT               38\n         O     R15,=A(X'80000000')     SET FOR 31-BIT ENTRY               39\n         BASSM R14,R15                 INVOKE REPMOD SERVICE              40\n         LTR   R15,R15                 RETURN CODE= 0 ?                   41\n         BNZ   EXIT08                  NO; EXIT                           42\n*        *---------------------------------------*                        43\n*        *     UPDATE HOOK MODULE PREFIX         *                        44\n*        *---------------------------------------*                        45\n         LR    R5,R0                   ADDRESS OF HOOK MODULE             46\n         USING HOOKPRE,R5              MAP PREFIX IN HOOK MODULE          47\n         ST    R1,HOPLSTG              STORE HOOK MOD LENGTH IN PREFIX    48\n         LA    R2,LHOOKPRE             ..LENGTH OF PREFIX                 49\n         ST    R2,HOPLPRE              ..INTO PREFIX                      50\n*        *---------------------------------------*                        51\n*        *     ENQUE ON SVCTABLE                 *                        52\n*        *---------------------------------------*                        53\n         MODESET MODE=SUP,KEY=ZERO     SUPERVISOR STATE/KEY 0 PSW         54\n         ENQ   (QNAME,RNAME,E,L'RNAME,SYSTEM)  ENQUE ON SVC TABLE         55\n*        *---------------------------------------*                        56\n*        *     LOCATE SVCTABLE ENTRY FOR SVC.    *                        57\n*        *     PUT SVC ENTRYPOINT IN HOOK PREFIX.*                        58\n*        *---------------------------------------*                        59\n         L     R2,CVTPTR               ADDRESS OF THE CVT                 60\n         L     R2,CVTABEND-CVT(R2)     ADDRESS OF THE SCVT                61\n         L     R2,SCVTSVCT-SCVTSECT(R2)  ADDRESS OF THE SVC TABLE         62\n         XR    R6,R6                   CLEAR R6                           63\n         ICM   R6,1,HOSVC              SVC NUMBER                         64\n         SLL   R6,3                    * 8                                65\n         AR    R2,R6                   = ADDRESS OF ENTRY                 66\n         L     R6,0(R2)                LOAD SVC ROUTINE ENTRY POINT       67\n         ST    R6,HOPORIG              STORE ENTRYPOINT IN HOOK PREFIX    68\n*        *---------------------------------------*                        69\n*        *     POINT SVCTABLE ENTRY TO HOOK MOD  *                        70\n*        *---------------------------------------*                        71\n*                                      ..ADDRESS OF HOOK MODULE +         72\n         LA    R7,LHOOKPRE(R5)         ..LENGTH OF PREFIX = ENTRYPT       73\n         LA    R2,HOSVCUL                ..ISSUE SVCUPDTE USING SVCUPDT   74\n         SVCUPDTE EP=(R7),MF=(E,(2))     ..PARMLIST FROM CALLER           75\n         LR    R6,R15                  PRESERVE RETURN CODE               76\n*        *---------------------------------------*                        77\n*        *     DEQUE ON SVCTABLE                 *                        78\n*        *---------------------------------------*                        79\n         DEQ   (QNAME,RNAME,L'RNAME,SYSTEM)   DEQUE ON SVCTABLE           80\n         MODESET MODE=PROB,KEY=NZERO   SET PROBLEM STATE/KEY 8 PSW        81\n         LTR   R6,R6                   RETURN CODE FROM SVCUPDTE = 0 ?    82\n         BNZ   EXIT0C                  NO; EXIT                           83\n         B     EXIT00                                                     84\n*---------------------------------------------------------------------*   85\n*        EXIT ROUTINES                                                *   86\n*---------------------------------------------------------------------*   87\nEXIT00   DS    0H                      SUCCESSFUL INSTALL                 88\n         LA    15,X'00'                                                   89\n         B     EXIT                                                       90\nEXIT04   DS    0H                      REPMOD NOT LINK-EDITED             91\n         LA    15,X'04'                                                   92\n         B     EXIT                                                       93\nEXIT08   DS    0H                      REPMOD SERVICE FAILED              94\n         LA    15,X'08'                                                   95\n         B     EXIT                                                       96\nEXIT0C   DS    0H                      SVCUPDTE FAILED                    97\n         PERCRC RC=X'0C'                                                  98\n         B     EXIT                                                       99\n*---------------------------------------------------------------------*  100\n*        COMMON EXIT                                                  *  101\n*---------------------------------------------------------------------*  102\nEXIT     DS   0H                                                         103\n         ENDMOD                                                          104\n*---------------------------------------------------------------------*  105\n*        CONSTANTS                                                    *  106\n*---------------------------------------------------------------------*  107\nQNAME    DC    CL8'SYSZSVC'            ENQ/DEQ MAJOR NAME                108\nRNAME    DC    C'TABLE'                ENQ/DEQ MINOR NAME                109\n*---------------------------------------------------------------------*  110\n*        WORK AREA                                                    *  111\n*---------------------------------------------------------------------*  112\nWHOOKIN  DSECT                         AQUIRED STORAGE FOR REENTRABLE    113\nADHOLNAM DS    F                       ADDRESS ADHOLNAM                  114\nLHOOKIN  EQU   *-WHOOKIN               LENGTH OF WORK AREA               115\n*---------------------------------------------------------------------*  116\n*        OTHER DSECTS                                                 *  117\n*---------------------------------------------------------------------*  118\n         HOOKPRM                       MAP INPUT PARMLIST                119\n         HOOKPRE                       MAP HOOK PREFIX                   120\n         CVT DSECT=YES,LIST=NO         MAP THE CVT                       121\n         IHASCVT                       MAP THE SCVT                      122\n         END                                                             123\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HOOKPRE": {"ttr": 2824, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00F\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00'\\x00'\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:46", "lines": 39, "newlines": 39, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                         MAP PREFIX FOR SVC FRONT-END        1\n         HOOKPRE                                                           2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      THIS DSECT MAPS THE PREFIX THAT BEGINS AN SVC FRONT-END      |    4\n.*|      INSTALLED WITH THE HOOKIN PROGRAM                            |    5\n.*+-------------------------------------------------------------------+    6\nHOOKPRE  DSECT                                                             7\nHOPLPRE  DS    F                       LENGTH OF THE PREFIX                8\nHOPLSTG  DS    F                       LENGTH OF THIS MODULE               9\nHOPORIG  DS    A                       ORIGINAL SVC ROUTINE ADDRESS       10\n         DS    0D                                                         11\nLHOOKPRE EQU   *-HOOKPRE               LENGTH OF PARMLIST                 12\n         MEND                                                             13\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HOOKPRM": {"ttr": 2826, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00)\\x00)\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:51", "lines": 41, "newlines": 41, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                         PARMLIST FOR HOOKIN                 1\n         HOOKPRM                                                           2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      PARMLIST FOR THE SVC FRONT-END INSTALL PROGRAM, HOOKIN       |    4\n.*+-------------------------------------------------------------------+    5\nHOOKPRM  DSECT                                                             6\nHOLNAME  DS    H,CL8                   LENGTH OF MODULE NAME               7\nHONAME   EQU   HOLNAME+2,8             MODULE NAME                         8\n         DS    0F                                                          9\n.*                                     SVCUPDTE PARMLIST                  10\nHOSVCUL  SVCUPDTE 200,REPLACE,TYPE=4,MF=L                                 11\nHOSVC    EQU   HOSVCUL+3,1             SVC NUMBER                         12\nLHOSVCUL EQU   *-HOSVCUL               L'HOSVCUL                          13\nLHOOKPRM EQU   *-HOOKPRM               LENGTH OF PARMLIST                 14\n         MEND                                                             15\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HOOKSVC": {"ttr": 2828, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00s\\x00s\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:59", "lines": 115, "newlines": 115, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    SVC HOOK THAT RECEIVES CONTROL BEFORE AND AFTER AN SVC ROUTINE. |    3\n*|    THIS HOOK IS INSTALLED WITH THE HOOKIN PROGRAM.                 |    4\n*|  LOGIC:                                                            |    5\n*|    1) LOAD BASE REGISTER (NOT REGISTER 6) WITH PREFIX ADDRESS.     |    6\n*|    2) EXECUTE THE FRONT-END CODE.                                  |    7\n*|    3) SET UP REGISTERS FOR CALL TO ORIGINAL SVC ROUTINE.           |    8\n*|    4) SAVE STATUS OF THIS MODULE ON THE LINKAGE STACK.             |    9\n*|    5) BASSM TO THE ORIGNAL SVC ROUTINE.                            |   10\n*|    6) POP THE STACK TO RESTORE STATUS OF THIS MODULE.              |   11\n*|    7) EXECUTE THE BACK-END CODE.                                   |   12\n*|  INPUTS:                                                           |   13\n*|    REGISTERS SET BY SVC FLIH BEFORE ENTRY TO AN SVC ROUTINE.       |   14\n*|    PARAMETERS FOR ORIGINAL SVC ROUTINE IN REGISTERS 0,1,15 .       |   15\n*|  OUTPUTS:                                                          |   16\n*|    DEPENDS ON SVC ROUTINE THAT IS HOOKED.                          |   17\n*|  ATTRIBUTES:                                                       |   18\n*|    REENTERABLE                                                     |   19\n*|  TO USE THIS CODE:                                                 |   20\n*|     1) SET AMODE, RMODE AND COMMENT ON THE MODULE MACRO.           |   21\n*|     2) ADD CODE WHERE INDICATED TO BE EXECUTED BEFORE              |   22\n*|        AND/OR AFTER THE CALL TO ORIGINAL SVC ROUTINE.              |   23\n*|        MAKE SURE ORIGINAL SVC ROUTINE RECEIVES APPROPRIATE         |   24\n*|        REGISTER VALUES.                                            |   25\n*|     3) EXECUTE THE HOOKIN PROGRAM TO INSTALL THIS MODULE           |   26\n*|        AS A FRONT-END/BACK-END FOR AN EXISTING SVC ROUTINE.        |   27\n*+--------------------------------------------------------------------+   28\n*                                                                         29\n*---------------------------------------------------------------------*   30\n*        HOOK PREFIX BUILT WHEN MODULE IS INSTALLED BY HOOKIN         *   31\n*---------------------------------------------------------------------*   32\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\nHOOKSVC  CSECT                         FIRST CSECT IS PREFIX              33\n         DS    CL(LHOOKPRE)            PREFIX                             34\n*---------------------------------------------------------------------*   35\n*        ENTRY POINT                                                  *   36\n*---------------------------------------------------------------------*   37\n         MODULE HOOKSV2,BASE=6,ENTRY=SVC,                              X  38\n               AMODE=24,RMODE=24,TEXT='SVC FRONT-END/BACK-END'            39\n         LR    R12,R6                  LOAD R12 WITH BASE REGISTER        40\n         LA    R9,LHOOKPRE             .. SUBTRACT LENGTH OF PREFIX       41\n         SLR   R12,R9                  .. FROM BASE REGISTER              42\n         USING HOOKPRE,R12             SET ADDRESSING ON PREFIX           43\n*        *---------------------------------------*                        44\n*        *     CODE EXECUTED BEFORE              *                        45\n*        *     ORIGINAL SVC ROUTINE              *                        46\n*        *---------------------------------------*                        47\n******** ADD FRONT-END CODE HERE **************************************   48\n         WTO   'SVC FRONT-END CODE EXECUTED'                              49\n*        *---------------------------------------*                        50\n*        *     LOAD REGISTERS WITH VALUES        *                        51\n*        *     FOR THE ORIGINAL SVC ROUTINE      *                        52\n*        *---------------------------------------*                        53\n******** LOAD REGISTERS FOR ORIGINAL SVC HERE *************************   54\n         EREG  15,1                    RESTORE R15,R0,R1 FROM STACK       55\n*        *---------------------------------------*                        56\n*        *     CALL THE ORIGINAL SVC ROUTINE     *                        57\n*        *---------------------------------------*                        58\n         LA    R14,AFTERSVC            .. MAKE STACK-STATE ENTRY WITH     59\n         BAKR  R14,0                   .. PSW AFTER CALL TO ORIGINAL      60\n         ICM   R6,15,HOPORIG           GET A(ORIGINAL SVC) FROM PREFIX    61\n         BASSM R14,R6                  INVOKE THE ORIGINAL SVC            62\n         PR                            POP THE STACK                      63\nAFTERSVC DS    0H                      RECEIVES CONTROL AFTER PR          64\n*        *---------------------------------------*                        65\n*        *     CODE EXECUTED AFTER               *                        66\n*        *     ORIGINAL SVC ROUTINE              *                        67\n*        *---------------------------------------*                        68\n******** ADD BACK-END CODE HERE ***************************************   69\n         WTO   'SVC BACK-END CODE EXECUTED'                               70\n         B     EXIT00                                                     71\n*---------------------------------------------------------------------*   72\n*        COMMON EXIT                                                  *   73\n*---------------------------------------------------------------------*   74\nEXIT00   DS   0H                                                          75\n         LA   15,X'00'                                                    76\n******** ADD EXIT ROUTINES HERE ***************************************   77\nEXIT     DS   0H                                                          78\n         ENDMOD                                                           79\n*---------------------------------------------------------------------*   80\n*        WORK AREA                                                    *   81\n*---------------------------------------------------------------------*   82\nWHOOKSV2 DSECT                         ACQUIRED STORAGE FOR REENTRABLE    83\nLHOOKSV2 EQU   *-WHOOKSV2              LENGTH OF WORK AREA                84\n*---------------------------------------------------------------------*   85\n*        OTHER DSECTS                                                 *   86\n*---------------------------------------------------------------------*   87\n         HOOKPRE                       MAP HOOK MOD PREFIX                88\n         END                                                              89\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INNERMM": {"ttr": 2831, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x002\\x002\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:04", "lines": 50, "newlines": 50, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         INNERMM &OP,&REG                                                  2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|                     MAINTENANCE LOG                               |    4\n.*+----------+------------------------------------+---------+---------+    5\n.*|  DATE    |      DESCRIPTION                   | CHANGED | REFER   |    6\n.*+----------+------------------------------------+---------+---------+    7\n.*| 10/01/92 | REWRITTEN FOR ESA COMPATIBILITY    | MJM     |         |    8\n.*|          |   (FIX#-R0008)                     |         |         |    9\n.*+----------+------------------------------------+---------+---------+   10\n.*                                                                        11\n.*+-------------------------------------------------------------------+   12\n.*|     INNER MACRO FOR PARSING REGISTER OPERANDS OF MACROS           |   13\n.*+-------------------------------------------------------------------+   14\n         LCLC  &OP1                                                       15\n         AIF   (T'&OP  EQ 'O').MEND                                       16\n&OP1     SETC  '&OP'                                                      17\n         AIF   ('&OP1'(1,1) NE '(').NOTREG                                18\n&OP1     SETC  '&OP'(2,K'&OP-2)                                           19\n         LAE   &REG,0(0,&OP1)                                             20\n         AGO   .MEND                                                      21\n.NOTREG  ANOP                                                             22\n         LAE   &REG,&OP1                                                  23\n.MEND    MEND                                                             24\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IRBRTN": {"ttr": 2833, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00?\\x00?\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:08", "lines": 63, "newlines": 63, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   TEST IRB ROUTINE                                                 |    3\n*| INPUTS:                                                            |    4\n*|   R0  - ADDRESS OF THE IQE                                         |    5\n*|   R1  - ADDRESS OF PARAMTER LIST (IEQPARAM)                        |    6\n*|   R13 - ADDRESS OF REGISTER SAVE AREA (IF IRB : SVAREA=YES)        |    7\n*|   R14 - RETURN ADDRESS (CVTEXIT)                                   |    8\n*| OUTPUTS:                                                           |    9\n*|   CONSOLE MESSAGE                                                  |   10\n*| ATTRIBUTES:                                                        |   11\n*|   AMODE 24, RMODE 24, REENTRANT                                    |   12\n*+--------------------------------------------------------------------+   13\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE IRBRTN,BASE=12,AMODE=24,RMODE=24,                      X  14\n               TEXT=' '                                                   15\n         WTO   'HELLO FROM IRBRTN'                                        16\n         B     EXIT00                                                     17\n*---------------------------------------------------------------------*   18\n*        EXIT ROUTINES                                                *   19\n*---------------------------------------------------------------------*   20\nEXIT00   DS    0H                      SUCCESSFUL EXIT                    21\n         LA    15,X'00'                                                   22\n         B     EXIT                                                       23\n*---------------------------------------------------------------------*   24\n*        COMMON EXIT                                                  *   25\n*---------------------------------------------------------------------*   26\nEXIT     DS   0H                                                          27\n         ENDMOD                                                           28\n*---------------------------------------------------------------------*   29\n*        WORK AREA                                                    *   30\n*---------------------------------------------------------------------*   31\nWIRBRTN DSECT                                                             32\nLIRBRTN EQU    *-WIRBRTN                                                  33\n*---------------------------------------------------------------------*   34\n*        OTHER DSECTS                                                 *   35\n*---------------------------------------------------------------------*   36\n         END                                                              37\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MFRAME": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00h\\x00h\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:13", "lines": 104, "newlines": 104, "modlines": 0, "user": "MVSPP"}, "text": "         TITLE  'FRAME FOR REENTERABLE CODE USING MACROS'                  1\n*+--------------------------------------------------------------------+    2\n*|                      MAINTENANCE LOG                               |    3\n*+----------+-------------------------------------+---------+---------+    4\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |    5\n*+----------+-------------------------------------+---------+---------+    6\n*| 01/04/91 |  WRITTEN                            | MJM     |         |    7\n*+----------+-------------------------------------+---------+---------+    8\n*                                                                     |    9\n*+--------------------------------------------------------------------+   10\n*|  THIS IS A SAMPLE FRAME FOR REENTERABLE CODE UNDER MVS.            |   11\n*|  THE MACROS WILL EXPAND XA OR ESA DEPENDING ON THE SYSTEM          |   12\n*|  WHERE THIS MODULE IS ASSEMBLED.  TO FORCE AN XA EXPANSION         |   13\n*|  WHEN ASSEMBLING ON AN ESA SYSTEM, UNCOMMENT THE LINE CONTAINING   |   14\n*|  THE \"SPLEVEL\" MACRO.  TO USE THIS FRAME:                          |   15\n*|                                                                    |   16\n*|   1) PUT DATE WRITTEN AND AUTHOR IN MAINTENANCE LOG.               |   17\n*|   2) FILL IN THE INTERNAL DOCUMENTATION IN THE SECTION BELOW.      |   18\n*|   3) SET THE CSECT NAME, AMODE, RMODE AND OTHER ATTRIBUTES OF      |   19\n*|      THE MODULE WITH OPERANDS ON THE \"MODULE\" MACRO (SEE APPENDIX).|   20\n*|   4) PUT CODE, CONSTANTS, WORK AREA FIELDS ETC. IN PLACE           |   21\n*|      OF THE LINES MARKED \"*====>\"                                  |   22\n*|   5) ASSEMBLE AND LINK-EDIT WITH THE \"RENT\" PARAMETER.             |   23\n*+--------------------------------------------------------------------+   24\n*                                                                     |   25\n*+--------------------------------------------------------------------+   26\n*|   FUNCTION:                                                        |   27\n*|                                                                    |   28\n*|   INPUTS:                                                          |   29\n*|                                                                    |   30\n*|   OUTPUTS:                                                         |   31\n*|                                                                    |   32\n*|   PROGRAM LOGIC:                                                   |   33\n*|                                                                    |   34\n*|   MODULES CALLED:                                                  |   35\n*|                                                                    |   36\n*|   DSECTS:                                                          |   37\n*|                                                                    |   38\n*|   ATTRIBUTES:                                                      |   39\n*|                                                                    |   40\n*+--------------------------------------------------------------------+   41\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n*                                                                         42\n*        SPLEVEL SET=2      UNCOMMENT THIS LINE TO FORCE XA EXPANSION     43\n*                                                                         44\n         MODULE MFRAME,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  45\n               TEXT='XA OR ESA FRAME FOR REENTERABLE CODE '               46\n*======> ADD EXECUTABLE CODE HERE <====================================   47\n         B     EXIT00       BRANCH TO EXIT ROUTINE                        48\n*---------------------------------------------------------------------*   49\n*        EXIT ROUTINES                                                *   50\n*---------------------------------------------------------------------*   51\n*        *---------------------------------------*                        52\n*        *     RETURN CODE 0                     *                        53\n*        *---------------------------------------*                        54\nEXIT00   DS    0H                                                         55\n         LA    15,X'00'     SET RETURN CODE TO X'00'                      56\n         B     EXIT         BRANCH TO COMMON EXIT                         57\n*======> ADD ADDITIONAL EXITS WITH RETURN CODES HERE <=================   58\n*---------------------------------------------------------------------*   59\n*        COMMON EXIT                                                  *   60\n*---------------------------------------------------------------------*   61\nEXIT     DS   0H                                                          62\n         ENDMOD             RESTORE REGISTERS AND RETURN                  63\n*---------------------------------------------------------------------*   64\n*        CONSTANTS                                                    *   65\n*---------------------------------------------------------------------*   66\n*======> PUT CONSTANTS HERE <==========================================   67\n*---------------------------------------------------------------------*   68\n*        WORK AREA                                                    *   69\n*---------------------------------------------------------------------*   70\nWMFRAME DSECT                                                             71\n*======> PUT WORK AREA FIELDS HERE <===================================   72\nLMFRAME EQU    *-WMFRAME                                                  73\n*---------------------------------------------------------------------*   74\n*        OTHER DSECTS                                                 *   75\n*---------------------------------------------------------------------*   76\n*======> PUT ADDITIONAL DSECTS HERE <==================================   77\n         END                                                              78\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MODULE": {"ttr": 3076, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x016\\x016\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:18", "lines": 310, "newlines": 310, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         MODULE &CNAME,&AMODE=31,&RMODE=ANY,&SP=1,&LOC=,&BASE=12,      X   2\n               &ENTRY=BRANCH,&FLOATSV=NO,&RENT=YES,&WORK=YES,          X   3\n               &TEXT=' '                                                   4\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.**********************************************************************    5\n.*   BEGIN MODULE WITH THIS MACRO                                     *    6\n.*     &CNAME   - NAME OF MODULE (7 CHARACTERS OR LESS)               *    7\n.*     &AMODE   - \"24\" OR \"31\"                                        *    8\n.*     &RMODE   - \"24\" OR \"ANY\"                                       *    9\n.*     &SP      - SUBPOOL FOR RENTRANT STORAGE THIS MODULE            *   10\n.*     &LOC     - \"BELOW\" IF GETMAINED STORAGE BELOW 16M              *   11\n.*     &BASE    - BASE REGISTER (NOT R1, R2 OR R13)                   *   12\n.*     &ENTRY   - \"BRANCH\" \"PCSTACK\" \"PCBASIC\" \"SRB\" OR \"SVC\"         *   13\n.*     &FLOATSV - SAVE FLOATING POINT REGISTERS                       *   14\n.*     &RENT    - WORK AREA DYNAMICALLY OBTAINED (DEFAULT = YES)      *   15\n.*     &WORK    - WORK AREA TO BE GOTTEN (DEFAULT = YES)              *   16\n.*     &TEXT    - COMMENT THAT IS ASSEMBLED INTO OBJECT CODE          *   17\n.**********************************************************************   18\n         GBLA  &POOL                                                      19\n         GBLB  &EQU                                                       20\n         GBLB  &CALSA,&WORKA,&FLOAT,&RENTA                                21\n         GBLC  &SYSSPLV,&SYSASCE                                          22\n         GBLC  &DSCTLEN,&NRENTWK,&DNAME                                   23\n         GBLC  &SAVEGEN,&SAVELEN,&SAVEFLT,&SPLEVI                         24\n         LCLB  &E1                                                        25\n         LCLC  &BEGIN,&TXT,&ONSTACK                                       26\n         SPLEVEL  TEST                                                    27\n.*************************************************                        28\n.*       CHECK ERROR CONDITIONS                  *                        29\n.*************************************************                        30\n&E1      SETB  0                                                          31\n         AIF   (T'&CNAME NE 'O').OK1                                      32\n         MNOTE 8,'MODULE NAME IS REQUIRED'                                33\n&E1      SETB  1                                                          34\n.OK1     ANOP                                                             35\n         AIF   (K'&CNAME LE 7).OK2                                        36\n         MNOTE 8,'MODULE NAME MUST BE LESS THAN 7 CHARACTERS'             37\n&E1      SETB  1                                                          38\n.OK2     ANOP                                                             39\n         AIF   (&BASE GT 2 AND &BASE LT 13).OK3                           40\n         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERS'      41\n&E1      SETB  1                                                          42\n.OK3     ANOP                                                             43\n         AIF   ('&ENTRY' EQ 'BRANCH' OR '&ENTRY' EQ 'PCSTACK').OK4        44\n         AIF   ('&ENTRY' EQ 'PCBASIC' OR '&ENTRY' EQ 'SRB').OK4           45\n         AIF   ('&ENTRY' EQ 'SVC').OK4                                    46\n         MNOTE 8,'\"ENTRY=\"  \"BRANCH\",\"PCSTACK\",\"PCBASIC\",\"SRB\",\"SVC\"'     47\n&E1      SETB  1                                                          48\n.OK4     ANOP                                                             49\n         AIF   ('&ENTRY' NE 'PCSTACK' OR '&SYSSPLV' GT '2').OK5           50\n         MNOTE 8,'\"ENTRY=PCSTACK\" MUST BE ASSEMBLED \"SPLEVEL > 2\"  '      51\n&E1      SETB  1                                                          52\n.OK5     ANOP                                                             53\n         AIF   ('&ENTRY' NE 'SVC').OK6                                    54\n         AIF   ('&BASE' EQ '6').OK6                                       55\n         MNOTE 8,'BASE REGISTER MUST BE 6 WITH \"ENTRY=SVC\" '              56\n&E1      SETB  1                                                          57\n.OK6     ANOP                                                             58\n         AIF   (&E1).MEND                                                 59\n.*************************************************                        60\n.*       SET GLOBAL SYMBOLS                      *                        61\n.*************************************************                        62\n&POOL    SETA  &SP                                                        63\n&SPLEVI  SETC  '&SYSSPLV'                                                 64\n&DSCTLEN SETC  'L'.'&CNAME'                                               65\n&NRENTWK SETC  'N'.'&CNAME'                                               66\n&DNAME   SETC  'W'.'&CNAME'                                               67\n&BEGIN   SETC  'BEG'.'&SYSNDX'                                            68\n&SAVEGEN SETC  'GEN'.'&SYSNDX'                                            69\n&SAVEFLT SETC  'FLT'.'&SYSNDX'                                            70\n&SAVELEN SETC  'LEN'.'&SYSNDX'                                            71\n&ONSTACK SETC  'STK'.'&SYSNDX'                                            72\n&TXT     SETC  '&TEXT'                                                    73\n         AIF   ('&TXT'(1,1) EQ '''').STRIP                                74\n         AIF   ('&TXT'(1,1) EQ '(').STRIP                                 75\n         AGO   .NOSTRIP                                                   76\n.STRIP   ANOP                                                             77\n&TXT     SETC  '&TXT'(2,K'&TXT-2)                                         78\n.NOSTRIP ANOP                                                             79\n.*************************************************                        80\n.*       SET GLOBAL SWITCHES                     *                        81\n.*************************************************                        82\n&WORKA   SETB  0     OBTAIN REENTRANT WORKAREA ?                          83\n         AIF   ('&WORK'(1,1) EQ 'N').NWORK                                84\n         AIF   ('&ENTRY' EQ 'PCBASIC' AND '&SPLEVI' LT '3').NWORK         85\n         AIF   ('&ENTRY' EQ 'SVC' AND '&SPLEVI' LT '3').NWORK             86\n&WORKA   SETB  1                                                          87\n.NWORK   ANOP                                                             88\n&RENTA   SETB  0     OBTAIN WORK AREA AND NON-REENTRANT                   89\n         AIF   ('&RENT'(1,1) EQ 'N').NRENT                                90\n         AIF   ('&ENTRY' EQ 'SRB' AND '&SPLEVI' LT '3').NRENT             91\n&RENTA   SETB  1                                                          92\n.NRENT   ANOP                                                             93\n&CALSA   SETB  0     IS SAVE AREA PROVIDED BY CALLER ?                    94\n         AIF   ('&ENTRY'(1,2) EQ 'PC').NSAVE                              95\n         AIF   ('&ENTRY' EQ 'SRB').NSAVE                                  96\n         AIF   ('&ENTRY' EQ 'SVC').NSAVE                                  97\n&CALSA   SETB  1                                                          98\n.NSAVE   ANOP                                                             99\n&FLOAT   SETB  0     ARE FLOATING POINT REGISTERS SAVED ?                100\n         AIF   ('&FLOATSV'(1,1) EQ 'N').NFLOT                            101\n         AIF   (&WORKA EQ 0).NFLOT                                       102\n&FLOAT   SETB  1                                                         103\n.NFLOT   ANOP                                                            104\n&CNAME   CSECT                                                           105\n         AIF   ('&SPLEVI' LT '2').NOAMODE                                106\n*        *---------------------------------------*                       107\n*        *     SPECIFY AMODE AND RMODE           *                       108\n*        *---------------------------------------*                       109\n&CNAME   AMODE &AMODE                                                    110\n&CNAME   RMODE &RMODE                                                    111\n.NOAMODE ANOP                                                            112\n         AIF   (&WORKA NE 1).NOWORK0                                     113\n*        +---------------------------------------+                       114\n*        |     SAVE AREAS                        |                       115\n*        +---------------------------------------+                       116\n&DNAME   DSECT                    USER ACQUIRED STORAGE FOR REENTRABLE   117\n&SAVEGEN DS    18F                GENERAL REGISTER SAVE AREA             118\n         AIF   (&FLOAT NE 1).NOF1                                        119\n&SAVEFLT DS    4D                 FLOATING POINT REGISTER SAVE AREA      120\n.NOF1    ANOP                                                            121\n&SAVELEN DS    F                  LENGTH OF ACQUIRED STORAGE             122\n&CNAME   CSECT                                                           123\n.NOWORK0 ANOP                                                            124\n         AIF   (&EQU).NOEQU                                              125\n&EQU     SETB  1                                                         126\n*        *---------------------------------------*                       127\n*        *     REGISTER EQUATES                  *                       128\n*        *---------------------------------------*                       129\n         PRINT NOGEN                                                     130\n         COPY EQUATES                                                    131\n         PRINT GEN                                                       132\n.NOEQU   ANOP                                                            133\n*        *---------------------------------------*                       134\n*        *     ENTRY POINT                       *                       135\n*        *---------------------------------------*                       136\n         AIF   ('&ENTRY'(1,2) EQ 'PC').PCENT                             137\n         AIF   ('&ENTRY' EQ 'SVC').SVCENT                                138\n.*************************************************                       139\n.*       ENTRY = BRANCH AND SRB                  *                       140\n.*************************************************                       141\n         USING &CNAME,15          SET ADDRESSING ON ENTRY POINT          142\n         B     &BEGIN             BRANCH AROUND EYECATCHER               143\n         DC    C' &CNAME '        NAME OF CSECT                          144\n         DC    C' &SYSDATE '      DATE OF ASSEMBLY                       145\n         DC    C' &SYSTIME '      TIME OF ASSEMBLY                       146\n         DC    C' &TXT  '                                                147\n         AIF   ('&SPLEVI' LT '3').XA1                                    148\n         AIF   (&WORKA EQ 0).NL1                                         149\n&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK            150\n.NL1     ANOP                                                            151\n&BEGIN   BAKR  14,0               PUSH REGS AND PSW ONTO STACK           152\n         LAE   &BASE,0(15,0)      LOAD BASE REGISTER WITH ENTRYPNT       153\n         MSTA  0                  PUSH REGS AND PSW ONTO STACK           154\n         AGO   .DROP15            DROP ADDRESSING ON ENTRY POINT         155\n.XA1     ANOP                                                            156\n         AIF   (&CALSA NE 1).NOSA1                                       157\n&BEGIN   SAVE  (14,12)            CALLER'S REGS => CALLER'S SAVEAREA     158\n         LR    &BASE,15           LOAD BASE REGISTER WITH ENTRY POINT    159\n         AGO   .DROP15            DROP ADDRESSING ON ENTRY POINT         160\n.NOSA1   ANOP                                                            161\n&BEGIN   LR    &BASE,15           LOAD BASE REGISTER WITH ENTRY POINT    162\n.DROP15  ANOP                                                            163\n         DROP  15                 DROP ADDRESSING ON ENTRY POINT         164\n         USING &CNAME,&BASE       SET ADDRESSING ON BASE REGISTER        165\n         AGO   .CKSTG                                                    166\n.*************************************************                       167\n.*       ENTRY = PCSTACK AND PCBASIC             *                       168\n.*************************************************                       169\n.PCENT   ANOP                                                            170\n         BASR  &BASE,0            LOAD BASE REGISTER                     171\n         BCTR  &BASE,0            .. SUBTRACT 2 FROM                     172\n         BCTR  &BASE,0            .. BASE REGISTER                       173\n         USING &CNAME,&BASE       SET ADDRESSING ON ENTRY POINT          174\n         AIF   ('&SPLEVI' LT '3').PC2                                    175\n         LAE   &BASE,0(&BASE,0)   CLEAR BASE ACCESS REGISTER             176\n         MSTA  0                  SAVE REGS 1 AND 2 IN USER STACK        177\n.PC2     ANOP                                                            178\n         B     &BEGIN             BRANCH AROUND EYECATCHER               179\n         DC    C' &CNAME '        NAME OF CSECT                          144\n         DC    C' &SYSDATE '      DATE OF ASSEMBLY                       181\n         DC    C' &SYSTIME '      TIME OF ASSEMBLY                       182\n         DC    C' &TXT  '                                                183\n         AIF   (&WORKA EQ 0).NL2                                         184\n&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK            185\n.NL2     ANOP                                                            186\n&BEGIN   DS    0H                                                        187\n         AGO   .CKSTG                                                    188\n.SVCENT  ANOP                                                            189\n.*************************************************                       190\n.*       ENTRY = SVC                             *                       191\n.*************************************************                       192\n         USING &CNAME,6           SET ADDRESSING ON ENTRY POINT          193\n         B     &BEGIN             BRANCH AROUND EYECATCHER               194\n         DC    C' &CNAME '        NAME OF CSECT                          195\n         DC    C' &SYSDATE '      DATE OF ASSEMBLY                       196\n         DC    C' &SYSTIME '      TIME OF ASSEMBLY                       197\n         DC    C' &TXT  '                                                198\n         AIF   ('&SPLEVI' LT '3').XA3                                    199\n         AIF   (&WORKA EQ 0).NL3                                         200\n&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK            201\n.NL3     ANOP                                                            202\n&BEGIN   BAKR  14,0               PUSH REGS AND PSW ONTO STACK           203\n         MSTA  0                  PUSH REGS AND PSW ONTO STACK           204\n         AGO   .ESVCE             DROP ADDRESSING ON ENTRY POINT         205\n.XA3     ANOP                                                            206\n&BEGIN   DS    0H                                                        207\n.ESVCE   ANOP                                                            208\n.CKSTG   ANOP                                                            209\n.*************************************************                       210\n.*      GET A WORK AREA FOR REENTRANCY           *                       211\n.*************************************************                       212\n         AIF   (&WORKA EQ 0).NOWORK                                      213\n         AIF   (&RENTA EQ 1).YESRENT                                     214\n         LA    13,&NRENTWK        ADDRESS OF WORK AREA                   215\n         AGO   .MAPDSECT                                                 216\n.YESRENT ANOP                                                            217\n*        *---------------------------------------*                       218\n*        *     GET STORAGE FOR WORK AREA         *                       219\n*        *---------------------------------------*                       220\n         LA    0,&DSCTLEN          LENGTH OF STORAGE                     221\n         AIF   (T'&LOC EQ 'O' OR '&SPLEVI' LT '2').NOLOC                 222\n         AIF   ('&SPLEVI' LT '3').NOSTOR                                 223\n         STORAGE OBTAIN,COND=NO,                                       X 224\n               LENGTH=(0),                                             X 225\n               LOC=&LOC,                                               X 226\n               SP=&POOL,                                               X 227\n               ADDR=(1)                                                  228\n         AGO   .GOT                                                      229\n.NOSTOR  ANOP                                                            230\n         GETMAIN RU,                                                   X 231\n               LV=(0),                                                 X 232\n               LOC=&LOC,                                               X 233\n               SP=&POOL                                                  234\n         AGO   .GOT                                                      235\n.NOLOC   ANOP                                                            236\n         AIF   ('&SPLEVI' LT '3').NOSTOR1                                237\n         STORAGE OBTAIN,COND=NO,                                       X 238\n               LENGTH=(0),                                             X 239\n               SP=&POOL,                                               X 240\n               ADDR=(1)                                                  241\n         AGO   .GOT                                                      242\n.NOSTOR1 ANOP                                                            243\n         GETMAIN RU,                                                   X 244\n               LV=(0),                                                 X 245\n               SP=&POOL                                                  246\n.GOT     ANOP                                                            247\n         AIF   ('&SPLEVI' GT '2').ESA2                                   248\n         AIF   (&CALSA EQ 0).NOCSA0                                      249\n         LR    2,13               PRESERVE ADDRESS CALLER'S SAVEAREA     250\n         ST    13,4(1)            SAVE A(CALLER'S SAVE AREA)             251\n         ST    1,8(13)            A(SAVE AREA) => CALLER'S SAVE AREA     252\n.NOCSA0  ANOP                                                            253\n         LR    13,1               A(SAVE AREA THIS CSECT) => R13         254\n         AGO   .MAPDSECT                                                 255\n.ESA2    ANOP                                                            256\n         AIF   (&CALSA EQ 0).NOCSA                                       257\n         ST    1,8(0,13)          A(SAVE AREA) => CALLER'S SAVE AREA     258\n.NOCSA   ANOP                                                            259\n         LAE   13,0(1,0)          LOAD SAVE AREA GEN AND ACC REGS        260\n*                                 INDICATE CALLER'S SAVEAREA ON STACK    261\n         MVC   4(L'&ONSTACK,13),&ONSTACK                                 262\n.MAPDSECT ANOP                                                           263\n         USING &DNAME,13          ADDRESSING FOR SAVE AREA               264\n         ST    0,&SAVELEN         SAVE SUBPOOL AND LENGTH                265\n.*************************************************                       266\n.*       RESTORE REGISTERS FROM STACK OR         *                       267\n.*       CALLER'S SAVE AREA                      *                       268\n.*************************************************                       269\n.NOWORK  ANOP                                                            270\n         AIF   ('&SPLEVI' LT '3').XA2                                    271\n         EREG  14,1               RESTORE REGS FROM STACK                272\n         AGO   .NOCSA2                                                   273\n.XA2     ANOP                                                            274\n         AIF   (&CALSA EQ 0 OR &WORKA EQ 0).NOCSA2                       275\n         LM    14,2,12(2)         RESTORE REGS FROM CALLER'S SAVEAREA    276\n.NOCSA2  ANOP                                                            277\n.******  SAVE FLOATING POINT REGISTERS ***********                       278\n         AIF   (&FLOAT EQ 0).MEND                                        279\n         STD   0,&SAVEFLT         ..SAVE                                 280\n         STD   2,&SAVEFLT+8       ..FLOATING                             281\n         STD   4,&SAVEFLT+16      ..POINT                                282\n         STD   6,&SAVEFLT+24      ..REGISTERS                            283\n.MEND    MEND                                                            284\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NCRYPT": {"ttr": 3082, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xc2\\x00\\xc2\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:23", "lines": 194, "newlines": 194, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|      ENCRYPTS AND DEENCRYPTS FILES WITH RECFM F, FB, V, VB OR U.   |    3\n*|      THE INPUT PARAMETER IS USED AS A KEY TO ENCRYPT A FILE OR     |    4\n*|      TO DEENCRYPT A FILE PREVIOUSLY ENCRYPTED WITH THAT KEY.       |    5\n*|  INPUTS:                                                           |    6\n*|      R1 - ADDRESS OF A PARMLIST. THE 1ST WORD IS THE ADDRESS OF    |    7\n*|            A STRING WHOSE LENGTH IS IN THE FIRST HALFWORD.         |    8\n*|            THIS IS EQUIVALENT TO  THE JCL // EXEC PARM= STRING     |    9\n*|            OR THE PARAMETER SUPPLIED WITH FROM TSO \"CALL\"          |   10\n*|      THE OTHER INPUT IS A FILE TO BE ENCRYPTED OR DEENCRYPTED      |   11\n*|      ALLOCATED TO DDNAME \"IN\" (//IN  DD  DSN=...)                  |   12\n*|  OUTPUTS:                                                          |   13\n*|      THE INPUT FILE IS ENCRYPTED OR DEENCRYPTED.                   |   14\n*|      RETURN CODE IN R15:                                           |   15\n*|         0 - FILE HAS BEEN ENCRYPTED OR DEENCRYPTED                 |   16\n*|         8 - ENCRYPTION/DEENCRYPTION KEY HAS NOT BEEN SUPPLIED      |   17\n*|  LOGIC:                                                            |   18\n*|      1) GETMAIN STORAGE FOR REENTRANT WORKAREA                     |   19\n*|      2) GET THE ENCRYPTION KEY FROM INPUT PARAMETER                |   20\n*|      3) SET UP INPUT/OUTPUT FILE FOR REENTRANT I/O                 |   21\n*|      4) ENCRYPT EACH BYTE OF THE FILE BY XORING IT WITH RANDOM     |   22\n*|         DIGIT AND UPDATING THE BYTE IN PLACE                       |   23\n*|      5) FREEMAIN STORAGE FOR REENTRANT WORKAREA                    |   24\n*|  ATTRIBUTES:                                                       |   25\n*|      REENTERABLE, AMODE 24, RMODE  24                              |   26\n*+--------------------------------------------------------------------+   27\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE NCRYPT,BASE=12,AMODE=24,RMODE=24,FLOATSV=YES,          X  28\n               TEXT='BIT-LEVEL FILE ENCRYPTER',LOC=BELOW                  29\n*        *---------------------------------------*                        30\n*        *     GET ENCRYPTION KEY FROM PARM=     *                        31\n*        *---------------------------------------*                        32\n         L     R1,0(R1)           A(PARM STRING) => R1                    33\n         XR    R2,R2              CLEAR REGISTER R2                       34\n         ICM   R2,B'0011',0(R1) LENGTH OF PARM                            35\n         BZ    EXIT08             =0; PARM NOT GIVEN                      36\n         CH    R2,=H'7'           IS ENCRYPTION KEY LE 7 BYTES?           37\n         BNH   USEPRM             YES; DO NOT SET FOR DEFAULT             38\n         LH    R2,=H'7'           SET TO TAKE ONLY FIRST 7 BYTES          39\nUSEPRM   DS    0H                                                         40\n         BCTR  R2,0               LESS 1 FOR EXECUTE                      41\n         EX    R2,MVIT1           MOVE NAME TO PLIST                      42\n         B     MVIT1A                                                     43\nMVIT1    MVC   KEYWORK+1(0),2(R1) MOVE KEY TO WORKAREA                    44\nMVIT1A   DS    0H                                                         45\n*        *---------------------------------------*                        46\n*        *     MOVE DCB AND OPEN/CLOSE PARMLIST  *                        47\n*        *     TO WORKAREA FOR REENTRANCY.       *                        48\n*        *---------------------------------------*                        49\n         MVC   IN(LINDCB),INDCB       MOVE DCB TO WORKAREA                50\n         MVC   OLIST(LOLIST),OLIST1   MOVE OPEN/CLOSE PARMLIST TO WORK    51\n*        *---------------------------------------*                        52\n*        *     OPEN THE FILE FOR UPDATE          *                        53\n*        *---------------------------------------*                        54\n         LA    R9,IN              ADDRESS OF THE DCB                      55\n         OPEN  ((R9),UPDAT),MF=(E,OLIST)                                  56\n         USING IHADCB,R9          ADDRESSING FOR DCB MAPPING DSECT        57\n*        *---------------------------------------*                        58\n*        *     'XOR' EACH BYTE IN THE FILE       *                        59\n*        *     WITH A RANDOM BYTE TO ENCRYPT     *                        60\n*        *     OR DEENCRYPT.                     *                        61\n*        *---------------------------------------*                        62\n         B     M$READIT           INITIAL READ                            63\nM$LOOP   DS    0H                                                         64\n         BAS   R14,RANDOM         GENERATE 1 RANDOM HEX DIGIT             65\n         LR    R2,R1              PUT IN LOW-ORDER BYTE OF R2             66\n         BAS   R14,RANDOM         GENERATE 1 RANDOM HEX DIGIT             67\n         SLL   R1,4               SHIFT HEX DIGIT LEFT 4 BITS             68\n         OR    R2,R1              'OR' RANDOM DIGITS TO MAKE BYTE         69\n         IC    R3,0(R4)           .. 'XOR' 1 BYTE FROM INPUT FILE         70\n         XR    R3,R2              .. WITH RANDOM BYTE TO (DE)ENCRYPT      71\n         STC   R3,0(R4)           STORE THE BYTE BACK IN FILE BUFFER      72\n         LA    R4,1(R4)           POINT AT NEXT INPUT BYTE IN BUFFER      73\nM$PUT0   DS    0H                                                         74\n         C     R4,ENDREC          END OF INPUT RECORD?                    75\n         BNE   M$GETI             NO; DO NOT GET INPUT                    76\n         PUTX  IN                 PUT THE BACK INTO THE FILE              77\nM$READIT DS    0H                                                         78\n         GET   IN                 READ A RECORD                           79\n         LR    R4,R1              R4 IS POINTER IN INPUT RECORD           80\n         TM    DCBRECFM,DCBRECV   IS THE FILE RECFM=V OR RECFM=U ?        81\n         BNO   M$VAR1             NO; PROCESS AS RECFM=F                  82\n         TM    DCBRECFM,DCBRECU   IS THE FILE RECFM=V ?                   83\n         BO    M$VAR1             NO; PROCESS THE FILE AS RECFM=F         84\n         AH    R1,0(R1)           ADDRESS OF RECORD + LRECL FROM RDW      85\n         LA    R4,4(R4)           BYPASS RDW                              86\n         B     M$VAR2                                                     87\nM$VAR1   DS    0H                                                         88\n         AH    R1,DCBLRECL        ADDRESS OF RECORD + LRECL FOR RECFM=F   89\nM$VAR2   DS    0H                                                         90\n         ST    R1,ENDREC          ADDRESS OF END OF RECORD BUFFER + 1     91\nM$GETI   DS    0H                                                         92\n         B     M$LOOP             PROCESS NEXT BYTE IN INPUT FILE         93\n*        *---------------------------------------*                        94\n*        *     CLOSE THE FILE                    *                        95\n*        *---------------------------------------*                        96\nC$CLOSE  DS    0H                                                         97\n         PUTX  IN                 UPDATE RECORD IN PLACE                  98\n         CLOSE ,MF=(E,OLIST)                                              99\n         B     EXIT00                                                    100\n*---------------------------------------------------------------------*  101\n*        RANDOM - GENERATE 1 RANDOM HEX DIGIT. ALSO GENERATE NEW      *  102\n*                 FLOATING POINT NUMBER FOR NEXT ENCRYPTION KEY.      *  103\n*                 INPUTS:                                             *  104\n*                    NONE                                             *  105\n*                 OUTPUTS:                                            *  106\n*                    RANDOM LOW-ORDER 4 BITS IN R1.                   *  107\n*                    NEW ENCRYPTION KEY IN FIELD 'KEYWORK'.           *  108\n*---------------------------------------------------------------------*  109\nRANDOM   DS    0H                                                        110\n         BAKR  R14,0              CREATE STACK STATE ENTRY               111\n*                                 .. MAKE ENCRYPTION KEY INTO            112\n         MVI   KEYWORK,X'40'      .. NORMALIZED FLOATING POINT NUMBER    113\n         LD    F0,KEYWORK         KEY TO FLOATING PT.REGS F0 AND F1      114\n         AD    F0,PI              ADD PI                                 115\n         LDR   F2,F0              COPY NUMBER INTO F2 AND F3             116\n         MDR   F0,F2              ... CUBE                               117\n         MDR   F0,F2              ... THE NUMBER                         118\n         STD   F0,KEYWORK         PUT NUMBER BACK INTO KEY AREA          119\n         LM    R0,R1,KEYWORK      LOAD INTO GENERAL REGS R6 AND R7       120\n         SLDL  R0,16              SHIFT OUT SIGN AND HIGH ORDER BYTE     121\n         SRDL  R0,8               SHIFT SEED NUMBER BACK                 122\n         STM   R0,R1,KEYWORK      SAVE SEED FOR NEXT CALL TO ROUTINE     123\n         SRL   R0,20              SHIFT OFF ALL BUT 4 BITS               124\n         LR    R1,R0              LOAD INTO REGISTER 1                   125\n         PR                       POP STACK AND RETRUN                   126\n*---------------------------------------------------------------------*  127\n*        EXIT ROUTINES                                                *  128\n*---------------------------------------------------------------------*  129\nEXIT00   DS    0H                      SUCCESSFUL                        130\n         LA    R15,X'00'                                                 131\n         B     EXIT                                                      132\nEXIT08   DS    0H                      ENCRYPT KEY LENGTH = 0            133\n         LA    R15,X'08'                                                 134\n         B     EXIT                                                      135\n*---------------------------------------------------------------------*  136\n*        COMMON EXIT                                                  *  137\n*---------------------------------------------------------------------*  138\nEXIT     DS    0H                                                        139\n         ENDMOD                                                          140\n*---------------------------------------------------------------------*  141\n*        CONSTANTS                                                    *  142\n*---------------------------------------------------------------------*  143\nPI       DC    D'3.14159'         PI                                     144\n*---------------------------------------------------------------------*  145\n*        OPEN LIST AND DCBS                                           *  146\n*---------------------------------------------------------------------*  147\nOLIST1   OPEN  (,),MF=L           PARMLIST FOR OPEN/CLOSE                148\nLOLIST   EQU   *-OLIST1           LENGTH OF OPEN/CLOSE PARMLIST          149\nINDCB    DCB   DDNAME=IN,                                              X 150\n               DSORG=PS,                                               X 151\n               MACRF=(GL,PL),     UPDATE FILES IN I/O BUFFER           X 152\n               EODAD=C$CLOSE                                             153\nLINDCB   EQU   *-INDCB            LENGTH OF THE DCB                      154\n*---------------------------------------------------------------------*  155\n*        WORK AREA                                                    *  156\n*---------------------------------------------------------------------*  157\nWNCRYPT  DSECT                                                           158\nKEYWORK  DS    D                  ENCRYPTION KEY                         159\nIN       DS    CL(LINDCB)         DCB IN REENTRANT STORAGE               160\nOLIST    DS    0F,CL(LOLIST)      OPEN/CLOSE PARAMETER LIST              161\nENDREC   DS    F                  ADDRESS OF END OF RECORD + 1           162\nLNCRYPT  EQU   *-WNCRYPT          LENGTH OF THE WORKAREA                 163\n*---------------------------------------------------------------------*  164\n*        OTHER DSECTS                                                 *  165\n*---------------------------------------------------------------------*  166\n         DCBD  DSORG=PS           MAPPING FOR THE DCB                    167\n         END                                                             168\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NSWPRTN": {"ttr": 3329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xa0\\x00\\xa0\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:28", "lines": 160, "newlines": 160, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+\n*|                      MAINTENANCE LOG                               |\n*+----------+-------------------------------------+---------+---------+\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |\n*+----------+-------------------------------------+---------+---------+\n*| 01/04/92 | GET KEY=8 STORAGE FOR SYSEVENT ECB  | MJM     | @01     |\n*|          |   (FIX#-R0005)                      |         |         |\n*+----------+-------------------------------------+---------+---------+\n*                                                                     |\n*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   THIS SRB ROUTINE ISSUES SYSEVENT TRANSWAP SO THAT THE ADDRESS    |    3\n*|   SPACE IN WHICH IT EXECUTES BECOMES NON-SWAPPABLE.                |    4\n*| INPUTS:                                                            |    5\n*|   R0 - ADDRESS OF THE SRB CONTROL BLOCK                            |    6\n*|   R1 - ADDRESS OF THE SRB PARM LIST                                |    7\n*| OUTPUTS:                                                           |    8\n*|   THIS ROUTINE INDICATES ITS COMPLETION STATUS TO THE SCHEDULING   |    9\n*|   TASK WITH A POST CODE IN THE SCHEDULER'S ECB.                    |   10\n*| LOGIC:                                                             |   11\n*|   1) ESTABLISH THE FRR RECOVERY ROUTINE                            |   12\n*|   2) ISSUE SYSEVENT TO MAKE THE ADDRESS SPACE NON-SWAPPABLE        |   13\n*|   3) CANCEL THE FRR                                                |   14\n*|   4) CROSS-MEMORY POST THE SCHEDULER'S ECB.                        |   15\n*| ATTRIBUTES:                                                        |   16\n*|   AMODE 31, RMODE ANY, REENTRANT, ESA DEPENDENCIES                 |   17\n*+--------------------------------------------------------------------+   18\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE NSWPRTN,BASE=9,LOC=BELOW,AMODE=31,RMODE=ANY,           X  19\n               ENTRY=SRB,                                              X  20\n               TEXT='SRB ROUTINE ISSUE SYSEVENT'                          21\n         LR    R10,R0                  ADDRESS OF THE SRB                 22\n         USING SRBSECT,R10             MAP SRB                            23\n         XC    POSTCC(L'POSTCC),POSTCC SET POST CODE TO X'00'             24\n*        *---------------------------------------*                        25\n*        *     ESTABLISH FRR RECOVERY            *                        26\n*        *---------------------------------------*                        27\n         LA    R2,SRBFRRM              ADDRESS FRR ROUTINE                28\n         SETFRR A,FRRAD=(R2),WRKREGS=(R4,R5),PARMAD=(R6)                  29\n         LA    R1,RETRY                ..PUT RETRY ADDRESS                30\n         ST    R1,0(R6)                ..INTO FRR PARAMETER               31\n         ST    R10,4(R6)               SRB ADDRESS IN FRR PARMLIST        32\n*        *---------------------------------------*                        33\n*        *     MAKE ADDRESS SPACE NON-SWAPABLE   *                        34\n*        *---------------------------------------*                        35\n         STORAGE OBTAIN,COND=NO,LENGTH=4,KEY=8,SP=1,ADDR=TRANSECB   @01   350001\n         L     R1,TRANSECB               ..MAKE THIS                @01   36\n         SYSEVENT TRANSWAP,ENTRY=BRANCH  ..ADDRESS SPACE NON-SWAP         37\n         STORAGE RELEASE,COND=NO,LENGTH=4,SP=1,ADDR=TRANSECB        @01   370001\n*        *---------------------------------------*                        38\n*        *     CANCEL THE FRR                    *                        39\n*        *---------------------------------------*                        40\nRETRY    DS    0H                      FRR RETRIES TO HERE                41\n         SETFRR D,WRKREGS=(R4,R5)      DELETE THE FRR                     42\n*        *---------------------------------------*                        43\n*        *     CROSS-MEMORY POST THE SCHEDULER   *                        44\n*        *---------------------------------------*                        45\n         LA    R14,PRADD1              ADDRESS AFTER XMPOST               46\n         BAKR  R14,R0                  CREATE STACK-STATE ENTRY           47\n         LA    R4,SRBECB               ADDRESS OF SRB ECB                 48\n         L     R5,ADASCB               ADDRESS OF SCHEDULER'S ASCB        49\n         LA    R6,POSTERR              ERROR ROUTINE FOR POST             50\n         L     R7,POSTCC               POST CODE                          51\n         POST  (4),(7),ASCB=(5),ERRET=(6),LINKAGE=BRANCH                  52\n         PR                            POP THE LINKAGE STACK              53\nPRADD1   DS    0H                                                         54\n         B     SRBX00                  EXIT                               55\n*        *---------------------------------------*                        56\n*        *     POST ERROR ROUTINE. ONLY ENTERED  *                        57\n*        *     IF SCHEDULING ADDR. SPC. IS GONE  *                        58\n*        *---------------------------------------*                        59\nPOSTERR  DS    0F                      POP THE STACK AND RETURN           60\n         PR                                                               61\n*---------------------------------------------------------------------*   62\n*        FRR ROUTINE.                                                 *   63\n*        THIS ROUTINE RECEIVES CONTROL IF THERE IS A PROGRAM CHECK    *   64\n*        IN THE SRB ROUTINE.                                          *   65\n*        - IF THE FRR IS NOT ENTERED RECURSIVELY IT ISSUES SETRP RC=4 *   66\n*          SO THAT RTM1 TRANSFERS CONTROL TO THE SRB ROUTINE AT THE   *   67\n*          RETRY ADDRESS (SUPPLIED IN THE FRR PARAMETER LIST).        *   68\n*        - IF THE FRR IS ENTERED RECURSIVELY OR THE FRR ROUTINE       *   69\n*          ITSELF ABENDS, RTM1 PERCOLATES THE ABEND TO THE TASK THAT  *   70\n*          SCHEDULED THE SRB (SRB-TO-TASK PERCOLATION).               *   71\n*---------------------------------------------------------------------*   72\nSRBFRRM  DS    0F                                                         73\n         BAKR  R14,R0                  SAVE REGISTERS ON LINKAGE STACK    74\n         LR    R9,R15                  ENTRYPOINT TO BASE REGISTER        75\n         LA    R2,SRBFRRM-NSWPRTN      ..BACK UP FOR DISPLACEMENT         76\n         SLR   R9,R2                   ..OF THIS ROUTINE                  77\n         LR    R13,R0                  WORK AREA ADDRESS                  78\n         LR    R3,R1                   SDWA ADDRESS                       79\n         USING SDWA,R3                 MAP SDWA                           80\n         L     R6,SDWAABCC             ABEND CODE FROM SDWA               81\n         SLL   R6,8                    CLEAR HIGH-ORDER BYTE              82\n         SRL   R6,20                   ABEND CODE IN LOW ORDER BYTES      83\n         ST    R6,POSTCC               SAVE AS POST CODE                  84\n         L     R4,SDWAPARM             ADDRESS OF PARMLIST IN SDWA        85\n         L     R10,4(R4)               ADDRESS OF SRB                     86\n         TM    FRRFLAG,@RECUR          RECURSIVE ENTRY ?                  87\n         BO    FRRABEND                ABEND                              88\n         OI    FRRFLAG,@RECUR          RECURSIVE ENTRY ?                  89\n         L     R5,0(R4)                RETRY ADDRESS                      90\n         LR    R1,R3                   SDWA ADDRESS TO REG 1              91\n         SETRP RC=4,RETADDR=(R5),RETREGS=YES,RETRY=FRR                    92\n         PR                            POP THE STACK AND RETURN TO RTM    93\nFRRABEND DS    0H                                                         94\n         LR    R1,R3                   SDWA ADDRESS TO REG 1              95\n         SETRP RC=0,COMPCOD=(X'200',USER),DUMP=NO                         96\n         PR                            POP THE STACK AND RETURN TO RTM    97\n*---------------------------------------------------------------------*   98\n*        EXIT ROUTINES                                                *   99\n*---------------------------------------------------------------------*  100\nSRBX00   DS    0H                      ONLY EXIT FOR SRB ROUTINE         101\n         LA    15,X'00'                ERROR CONDITIONS PASSED THRU      102\n         B     SRBEXIT                 POST CODE                         103\n*---------------------------------------------------------------------*  104\n*        COMMON EXIT                                                  *  105\n*---------------------------------------------------------------------*  106\nSRBEXIT  DS   0H                                                         107\n         ENDMOD                                                          108\n*---------------------------------------------------------------------*  109\n*        WORK AREA                                                    *  110\n*---------------------------------------------------------------------*  111\nWNSWPRTN DSECT                                                           112\nTRANSECB DS    F                       ECB FOR SYSEVENT                  113\nLNSWPRTN EQU   *-WNSWPRTN              LENGTH OF THE WORK AREA           114\n*---------------------------------------------------------------------*  115\n*        OTHER DSECTS                                                 *  116\n*---------------------------------------------------------------------*  117\n         SRBPRM                        PARMS FOR GETASCB                 118\n         IHAFRRS                       MAP FRR                           119\n         IHASDWA                       MAP SDWA                          120\n         IHAPSA                        MAP PSA                           121\n         CVT DSECT=YES,LIST=NO         MAP CVT                           122\n         END                                                             123\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCPERM": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00?\\x00?\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:32", "lines": 63, "newlines": 63, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|       MACRO TO GENERATE TABLE ENTRIES                              |    2\n*+--------------------------------------------------------------------+    3\n         MACRO                                                             4\n         PCENT &CUR,&TGT                                                   5\n         AIF   (T'CUR  NE 'O').CUROK                                       6\n         MNOTE 8' 1ST POSITIONAL OPERAND IS REQUIRED'                      7\n         AGO   .MEND                                                       8\n.CUROK   ANOP                                                              9\n         AIF   (T'TGT  NE 'O').TGTOK                                      10\n         MNOTE 8' 2ND POSITIONAL OPERAND IS REQUIRED'                     11\n         AGO   .MEND                                                      12\n.TGTOK   ANOP                                                             13\n         DC    CL8'&CUR',CL8'&TGT'                                        14\n         MEND                                                             15\n*                                                                         16\n*+--------------------------------------------------------------------+   17\n*|  THIS TABLE IS USED BY THE CKXTALK PC ROUTINE TO CHECK WHICH       |   18\n*|  ADDRESS SPACES CAN HAVE AN ACCESS LIST ENTRY BUILT FOR ANOTHER    |   19\n*|  ADDRESS SPACE.                                                    |   20\n*|  AN ACCESS LIST ENTRY CAN BE BUILT ON THE DU-AL OF ANY TASK IN THE |   21\n*|  ADDRESS SPACE NAMED IN THE FIRST OPERAND OF EACH PCENT MACRO FOR  |   22\n*|  THE ADDRESS SPACE NAMED IN THE SECOND OPERAND OF PCENT.           |   23\n*+--------------------------------------------------------------------+   24\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\nPCPERM   CSECT                                                            25\n         PCENT CICSXX,REGION1                                             26\n         PCENT REGION2,JES2                                               27\n         PCENT TSOUSR1,REGION3                                            28\n*        +----------------------------+                                   29\n*        |     ADD NEW ENTRIES HERE   |                                   30\n*        +----------------------------+                                   31\n         DC    16X'FF'                 END OF TABLE INDICATOR             32\n         DS    ((4096-(*-PCPERM))/16)XL16                                 33\n         ORG   *-16                                                       34\n         DC    CL16'END_OF_TABLE'                                         35\n         ORG   ,                                                          36\n         END                                                              37\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCSERV": {"ttr": 3335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x000\\x000\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:36", "lines": 48, "newlines": 48, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                         MAP PC NUMBERS CONTROL BLOCK        1\n         PCSERV                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      THIS DSECT MAPS THE CONTROL BLOCK IN COMMON STORAGE THAT     |    4\n.*|      CONTAINS PC NUMBERS FOR ROUTINES IN THE PCSET ADDRESS SPACE. |    5\n.*+-------------------------------------------------------------------+    6\nPCSERV   DSECT                                                             7\nPCSID    DS    CL4                     BLOCK IDENTIFIER                    8\nLXL      DS    0F                      LX LIST                             9\nLXCOUNT  DS    F                       NUMBER OF LXES REQUIRED            10\nLXVALUE  DS    F                       LX RETURNED BY LXRES               11\nETE      DS    0F                      TOKEN LIST                         12\nETECOUNT DS    F                       NUMBER OF ETS CREATED              13\nETETOKEN DS    F                       TOKEN RETURNED BY ETCRE            14\nPCTAB    DS    0A                      TABLE OF PC NUMBERS                15\nPCSRTN1  DS    F                       PC NUMBER OF PC ROUTINE 1          16\nPCSRTN2  DS    F                       PC NUMBER OF PC ROUTINE 2          17\nPCSRTN3  DS    F                       PC NUMBER OF PC ROUTINE 3          18\nPCSRTN4  DS    F                       PC NUMBER OF PC ROUTINE 4          19\n.*       ADD   ADDITIONAL PC NUMBERS HERE  ***************************    20\nLPCSERV EQU    *-PCSERV                LENGTH OF PARMLIST                 21\n         MEND                                                             22\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCSET": {"ttr": 3337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x01\\x17\\x01\\x17\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:41", "lines": 279, "newlines": 279, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    THIS STARTED TASK DEFINES MODULE CKXTALK AS A PC ROUTINE,       |    3\n*|    GENERATES A PC NUMBER FOR THE ROUTINE,  AND SAVES THE PC        |    4\n*|    NUMBER IN A USER CONTROL BLOCK ANCHORED OFF A CDE ON THE LPAQ.  |    5\n*|  LOGIC:                                                            |    6\n*|    1) LOCATE THE CONSOLE COMMUNICATIONS AREA OFF THE CURRENT TCB   |    7\n*|       SO THAT THIS PROGRAM CAN PROCESS CONSOLE COMMANDS.           |    8\n*|    2) CALL THE ANCHOR SERVICE TO BUILD A TABLE OF PC NUMBERS       |    9\n*|       ANCHORED OFF A CDE IN THE LPAQ.  IF THE TABLE ALREADY        |   10\n*|       EXISTS, IT IS LOCATED AND REUSED.                            |   11\n*|    3) MAKE ADDRESS SPACE NON-SWAPPABLE.                            |   12\n*|    4) GET A SYSTEM LX OR, REUSE AN ALREADY OBTAINED SYSTEM LX.     |   13\n*|    5) LOAD CKXTALK MODULE.                                         |   14\n*|    6) LOAD THE ADDRESS SPACE PERMISSIONS TABLE USED BY CKXTALK.    |   15\n*|    7) MODIFY THE ENTRY TABLE ENTRY DEFINITION SO THAT CKXTALK      |   16\n*|       IS THE ENTRY POINT ADDRESS AND THE PERMISSIONS TABLE         |   17\n*|       ADDRESS IS THE FIRST LATENT PARAMETER.                       |   18\n*|    8) CREATE THE ENTRY TABLE.                                      |   19\n*|    9) GENERATE A PC NUMBER FROM A COMBINATION OF THE LINKAGE       |   20\n*|       INDEX AND ENTRY TABLE ENTRY'S DISPLACEMENT INTO ENTRY TABLE. |   21\n*|   10) GET A MASTER AX (\"1\") SO THAT THE PC ROUTINE HAS SSAR        |   22\n*|       AUTHORITY (PC ROUTINE IS DEFINED WITH SASN=OLD).             |   23\n*|   11) CONNECT THE ENTRY TABLE TO THE LINKAGE INDEX.                |   24\n*|   12) GO INTO A WAIT STATE UNTIL POSTED BY A CONSOLE COMMAND.      |   25\n*|       PROCESS ANY \"STOP\" OR \"MODIFY\" CONSOLE COMMANDS WHEN POSTED. |   26\n*|  INPUTS:                                                           |   27\n*|    NONE                                                            |   28\n*|  OUTPUTS:                                                          |   29\n*|    R15 - RETURN CODE                                               |   30\n*|           0 - SUCCESSFUL PC ROUTINE DEFINITION                     |   31\n*|          16 - UNSUCCESSFUL                                         |   32\n*|               CHECK THE JOB LOG FOR MESSAGE OF LAST OPERATION      |   33\n*|               R0 - RETURN CODE OF FAILING OPERATION                |   34\n*|               R1 - REASON CODE OF FAILING OPERATION                |   35\n*|  ATTRIBUTES:                                                       |   36\n*|    AMODE 31, RMODE ANY, APF AUTHORIZED, REENTERABLE                |   37\n*+--------------------------------------------------------------------+   38\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE PCSET,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,            X  39\n               TEXT='ESTABLISH A PC ROUTINE'                              40\n*---------------------------------------------------------------------*   41\n*        SET UP COMMAND PROCESSING                                    *   42\n*---------------------------------------------------------------------*   43\n         LA    R1,EXTLIST              PARMLIST FOR EXTRACT               44\n         LA    R3,XTRANSW              ANSWER AREA FOR QEDIT              45\n*                                      GET ADDRESS COMMUNICATION AREA     46\n         EXTRACT (R3),'S',FIELDS=(COMM),MF=(E,(1))                        47\n         L     R3,XTRANSW              A(COMMUNICATIONS AREA) => R3       48\n         USING COMLIST,R3              MAP COMMUNICATIONS AREA            49\n         QEDIT ORIGIN=COMCIBPT,CIBCTR=4 SET LIMIT ON QUEUED COMMANDS      50\n         L     R4,COMCIBPT             A(COMMAND INPUT BUFFER)            51\n         USING CIB,R4                  MAP CIB                            52\n*---------------------------------------------------------------------*   53\n*        CALL ANCHOR SERVICE TO OBTAIN STORAGE FOR THE USER           *   54\n*        CONTROL BLOCK AND ANCHOR IT OFF A CDE ON THE LPAQ.           *   55\n*---------------------------------------------------------------------*   56\n         LA    R5,ANKLIST              A(PARMLIST) => R5                  57\n         USING ANKPRM,R5               MAP PARMLIST                       58\n         MVC   ANKEYE(L'ANKEYE),EYE    TABLE EYECATCHER TO PARMLIST       59\n         MVC   ANKNAME(L'ANKNAME),TBLN TABLE NAME TO PARMLIST             60\n         LA    R6,LPCSERV              ..TABLE LENGTH                     61\n         ST    R6,ANKLEN               ..TO PARMLIST                      62\n         XC    ANKEP(L'ANKEP),ANKEP    INITIALIZE ENTRYPOINT TO X'00'     63\n         LOAD  EP=ANCHOR,ERRET=EXIT10  LOAD ANCHOR SERVICE ROUTINE        64\n         LR    R2,R0                   ENTRYPOINT TO R15                  65\n         WTO   'PCSET: ANCHOR ROUTINE LOADED'                             66\n         LR    R15,R2                  ENTRYPOINT TO R15                  67\n         LR    R1,R5                   ADDRESS OF PARMLIST => R1          68\n         BASSM R14,R15                 INVOKE SERVICE                     69\n         C     R15,=F'8'               DID ANCHOR SERVICE FAIL ?          70\n         BH    EXIT10                  YES; EXIT PERCOLATING RC           71\n         WTO   'PCSET: PC NUMBERS TABLE ANCHOR INITIALIZED'               72\n         L     R5,ANKEP                TABLE ENTRYPOINT => R5             73\n         USING PCSERV,R5               MAP PC SERVICE TABLE BLOCK         74\n*        *---------------------------------------*                        75\n*        *     MAKE THIS ADDRESS SPACE NON-SWAP  *                        76\n*        *---------------------------------------*                        77\n         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW         78\n         LA    R1,TRANSECB             ..MAKE THIS                        79\n         SYSEVENT TRANSWAP             ..ADDRESS SPACE NON-SWAPABLE       80\n*---------------------------------------------------------------------*   81\n*        DEFINE PC ROUTINE. GENERATE PC NUMBER.                       *   82\n*---------------------------------------------------------------------*   83\n*        *---------------------------------------*                        84\n*        *     GET A SYSTEM LINKAGE INDEX        *                        85\n*        *---------------------------------------*                        86\n         ICM   R2,B'1111',LXVALUE      HAS LINKAGE INDEX BEEN GOTTEN      87\n         BNZ   INDEXIS                 YES; DO NOT GET LX                 88\n         LA    R2,1                    NUMBER OF LINKAGE INDEXES          89\n         ST    R2,LXCOUNT              SAVE IN PC SERVICE BLOCK           90\n         LXRES LXLIST=LXL,SYSTEM=YES,MF=(E,LXLIST)                        91\n         LTR   R15,R15                 RC = 0 ;                           92\n         BNZ   EXIT10                  NO; EXIT                           93\n         WTO   'PCSET: SYSTEM LINKAGE INDEX OBTAINED'                     94\nINDEXIS  DS    0H                                                         95\n*        *---------------------------------------*                        96\n*        *     LOAD CKXTALK MODULE.              *                        97\n*        *---------------------------------------*                        98\n         LOAD  EP=CKXTALK,ERRET=EXIT10 LOAD CKXTALK ROUTINE               99\n         LR    R2,R0                   ADDRESS OF MODULE => R2           100\n         WTO   'PCSET: CKXTALK LOADED'                                   101\n*        *---------------------------------------*                       102\n*        *     LOAD TABLE USED BY CXTALK MODULE  *                       103\n*        *---------------------------------------*                       104\n         LOAD  EP=PCPERM,ERRET=EXIT10  LOAD PERMISSIONS TABLE            105\n         LR    R7,R0                   ADDRESS OF MODULE => R7           106\n         WTO   'PCSET: PERMISSIONS TABLE LOADED'                         107\n*        *---------------------------------------*                       108\n*        *     BUILD HEADER ENTRY                *                       109\n*        *---------------------------------------*                       110\n         MVC   ETDESC(LENTABL),MENTBL  MOVE ENTRY TABLE TO WORK AREA     111\n         LA    R8,ETESNUM              NUMBER OF PC ROUTINES             112\n         ETDEF TYPE=SET,HEADER=ETDESC, ADDRESS OF THE HEADER ENTRY     X 113\n               NUMETE=(R8)             NUMBER OF PC ROUTINES             114\n*        *---------------------------------------*                       115\n*        *     MODIFY THE ENTRY TABLE ENTRY      *                       116\n*        *---------------------------------------*                       117\n         ETDEF TYPE=SET,ETEADR=ETD1,   MODIFY ETE IN WORK AREA         X 118\n               ROUTINE=(2),            ADDRESS OF THE PC ROUTINE       X 119\n               PARM1=(7),              A(PERMIT TABLE) IS 1ST LAT PARM X 120\n               PC=STACKING,            STACKING PC ROUTINE             X 121\n               SSWITCH=YES,            BRANCH TO ANOTHER ADDRESS SPACE X 122\n               ASCMODE=PRIMARY,        RECEIVE CONTROL IN PRIMARY MODE X 123\n               SASN=OLD,               OLD PRIMARY IS NEW SECONDARY    X 124\n               AKM=(0:15),             CALLER CAN BE IN ANY PSW KEY    X 125\n               RAMODE=31,              ENTER IN 31 BIT MODE            X 126\n               STATE=PROBLEM,EK=8,     ENTERED IN PROB STATE/TCB KEY   X 127\n               EKM=(0:15),PKM=OR       AT ENTRY SET NEW PKM 0:15         128\n*******  ADD ADDTIONAL \"ETDEF TYPE=SET\" FOR MORE PC ROUTINES HERE *****  129\n*        *---------------------------------------*                       130\n*        *     CREATE THE ENTRY TABLE.           *                       131\n*        *---------------------------------------*                       132\n         ETCRE ENTRIES=ETDESC          CREATE THE ENTRY TABLE            133\n         ST    R0,ETETOKEN             SAVE ENTRY TABLE TOKEN            134\n         LTR   R15,R15                 RC = 0 ;                          135\n         BNZ   EXIT10                  NO; EXIT                          136\n         WTO   'PCSET: ENTRY TABLE CREATED'                              137\n*        *---------------------------------------*                       138\n*        *     GENERATE PC NUMBER FROM LX AND ET.*                       139\n*        *     SAVE PC # IN USER CONTROL BLOCK.  *                       140\n*        *---------------------------------------*                       141\n         LA    R7,ETESNUM              NUMBER OF DEFINED PC ROUTINES     142\n         LA    R8,PCTAB                ADDRESS OF PC NUMBERS TABLE       143\n         L     R2,LXVALUE              LINKAGE INDEX => R2               144\nPCTBLP   DS    0H                                                        145\n         ST    R2,0(R8)                PUT IN PCTABLE                    146\n         LA    R2,1(R2)                INCREMENT LX + EX                 147\n         LA    R8,4(R8)                POINT AT NEXT PCTAB ENTRY         148\n         BCT   R7,PCTBLP               LOOP FOR NEXT PC NUMBER           149\n*        *---------------------------------------*                       150\n*        *     SINCE PC ROUTINE IS DEFINED       *                       151\n*        *     SASN=OLD, WE NEED SSAR AUTHORITY  *                       152\n*        *---------------------------------------*                       153\n         LA    R2,1                     \"1\" IS MASTER AX                 154\n         AXSET AX=(R2)                  SET AX TO 1                      155\n*        *---------------------------------------*                       156\n*        *     CONNECT ENTRY TABLE TO THE  LX    *                       157\n*        *---------------------------------------*                       158\n         LA    R2,1                    1 ENTRY TABLE TO BE CONNECTED     159\n         ST    R2,ETECOUNT             PUT IN TOKEN PARMLIST             160\n*                                      CONNECT THE ENTRY TABLE TO LX     161\n         ETCON LXLIST=LXL,TKLIST=ETE,MF=(E,ETCONLST)                     162\n         MODESET MODE=PROB             GET A PROBLEM STATE PSW           163\n         B     WAIT                    WAIT FOR CONSOLE COMMANDS         164\n*---------------------------------------------------------------------*  165\n*        \"STOP\" AND \"MODIFY\" CONSOLE COMMANDS ARE PROCESSED IN LOOP   *  166\n*---------------------------------------------------------------------*  167\nCKCOM    DS    0H                      TOP OF COMMAND PROCESSING LOOP    168\n         L     R4,COMCIBPT             ADDRESS OF COMMAND INPUT BUF      169\n         CLI   CIBVERB,CIBSTOP         IS IT STOP ?                      170\n         BNE   NOTSTOP                 NO; CHECK IF \"MODIFY\"             171\n*        *---------------------------------------*                       172\n*        *     DESTROY THE ENTRY TABLE.          *                       173\n*        *---------------------------------------*                       174\n         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW        175\n         ETDES TOKEN=ETETOKEN,          ..DISCONNECT THE ENTRY TABLE   X 176\n               PURGE=YES,MF=(E,ETDLIST) ..FROM ALL LNK TBLS AND DESTROY  177\n         MODESET MODE=PROB             GET A PROBLEM STATE PSW           178\n         WTO   'PCSET: ENTRY TABLE DESTROYED'                            179\n         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE CIB                 180\n         B     EXIT00                                                    181\nNOTSTOP  DS    0H                                                        182\n         CLI   CIBVERB,CIBMODFY        IS IT MODIFY ?                    183\n         BE    MODIFY                  YES; PROCESS \"MODIFY\" COMMAND     184\n         WTO   'PCSET: INVALID COMMAND ISSUED'                           185\n         B     WAIT                    WAIT FOR NEXT COMMAND             186\nMODIFY   DS    0H                                                        187\n*******  ADD   \"MODIFY\" COMMAND PROCESSING HERE                          188\n*        *---------------------------------------*                       189\n*        *     GO INTO WAIT STATE UNTIL POSTED   *                       190\n*        *     BY A CONSOLE COMMAND.             *                       191\n*        *---------------------------------------*                       192\nWAIT     DS    0H                                                        193\n         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE LAST CIB            194\n         L     R6,COMECBPT             .. WAIT ON ECB                    195\n         WAIT  ECB=(6)                 .. IN COMM AREA                   196\n         B     CKCOM                   BOTTOM OF COMMAND LOOP            197\n*---------------------------------------------------------------------*  198\n*        EXIT ROUTINES                                                *  199\n*---------------------------------------------------------------------*  200\nEXIT00   DS    0H                      SUCCESSFUL EXIT                   201\n         LA    15,X'00'                                                  202\n         B     EXIT                                                      203\nEXIT10   DS    0H                      PERCOLATE RETRUN & REASON CODES   204\n         PERCRC RC=X'10'                                                 205\n         B     EXIT                                                      206\n*---------------------------------------------------------------------*  207\n*        COMMON EXIT                                                  *  208\n*---------------------------------------------------------------------*  209\nEXIT     DS   0H                                                         210\n         LR   R2,R15                   PRESERVE REGISTER 15              211\n         MODESET MODE=PROB             GET A PROBLEM STATE PSW           212\n         LR   R15,R2                   RESTORE REGISTER 15               213\n         ENDMOD                                                          214\n*---------------------------------------------------------------------*  215\n*        CONSTANTS                                                    *  216\n*---------------------------------------------------------------------*  217\nEYE      DC    CL4'PC@1'               EYCATCHER IN PC NUMBERS TABLE     218\nTBLN     DC    CL8'PCTBL01'            NAME IN CDE ANCHOR FOR PC # TBL   219\n*---------------------------------------------------------------------*  220\n*        ENTRY TABLE DEFINITION                                       *  221\n*---------------------------------------------------------------------*  222\nMENTBL   ETDEF TYPE=INITIAL            BEGINNING OF ENTRY TABLE          223\nMETD1    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=(0:15)                           224\n*******  IF ADDITIONAL ENTRIES ARE NEEDED IN ENTRY TABLE,ADD HERE *****  225\nETESNUM  EQU   (*-METD1)/ETDELEN      NUMBER OF PC ROUTINES DEFINED      226\n         ETDEF TYPE=FINAL                                                227\nLENTABL  EQU   *-MENTBL                                                  228\n*---------------------------------------------------------------------*  229\n*        WORK AREA                                                    *  230\n*---------------------------------------------------------------------*  231\nWPCSET DSECT                           WORK AREA                         232\nTRANSECB DS    F                       ECB FOR SYSEVENT                  233\nECB1     DS    F                       ECB FOR THIS ADDRESS SPACE        234\nETDESC   DS    CL(LENTABL)             ENTRY TABLE ENTRIES               235\nETD1     EQU   ETDESC+(METD1-MENTBL)   ADDRESS OF ENTRY TABLE ENTRY      236\nANKLIST  DS    0F,CL(LANKPRM)          PARMLIST FOR ANCHOR1 SERVICE      237\nLXLIST   LXRES MF=L                    PARMLIST FOR LXRES                238\nETCONLST ETCON MF=L                    PARMLIST FOR ETCON                239\nETDLIST  ETDES MF=L                    PARMLIST FOR ETDES                240\nEXTLIST  EXTRACT ,MF=L                 PARMLIST FOR EXTRACT              241\nXTRANSW  DS    F                       RESPONSE FROM QEDIT               242\nLPCSET   EQU   *-WPCSET                LENGTH OF WORK AREA               243\n*---------------------------------------------------------------------*  244\n*        OTHER DSECTS                                                 *  245\n*---------------------------------------------------------------------*  246\n         ANKPRM                        MAP ANCHOR PARMLIST               247\n         PCSERV                        MAP PC SERVICES ANCHOR BLOCK      248\n         IEZCOM                        MAP COMMUNICATIONS AREA           249\nCIB      DSECT                         MAP COMMAND INPUT BUFFER          250\n         IEZCIB                                                          251\n         IHAETD LIST=YES,FORMAT=1      MAP ENTRY TABLE ENTRY             252\n         END                                                             253\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCSET#": {"ttr": 3342, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00E\\x01\\x11&O\\x01\\x114\\x8f\\x15#\\x00\\x08\\x00\\x05\\x00\\x08\\xc5\\xe2\\xe2\\xc5\\xc4\\xe3\\xf1@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2011-09-21T00:00:00", "modifydate": "2011-12-14T15:23:45", "lines": 8, "newlines": 5, "modlines": 8, "user": "ESSEDT1"}, "text": "//*\n//* THIS IS A SAMPLE STC PROCLIB MEMBER FOR PCSET\n//*\n//PCSET  PROC\n//PCSET  EXEC PGM=PCSET,REGION=0M\n//STEPLIB  DD DISP=SHR,DSN=???????.V482.FILE554.LOAD\n//*->SETPROG APF,ADD,DSN(...................) VOL(??????)\n//SYSPRINT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PERCRC": {"ttr": 3585, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x005\\x005\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:49", "lines": 53, "newlines": 53, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         PERCRC  &RC=X'10'                                                 2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*********************************************************************     3\n.*       PERCOLATE RETURN AND REASON CODE FROM INVOKED SERVICE       *     4\n.*********************************************************************     5\n         GBLB  &CALSA,&WORKA,&FLOAT                                        6\n         GBLC  &SAVEGEN,&SAVEFLT,&SAVELEN,&DNAME,&SPLEVI                   7\n         GBLC  &SYSSPLV,&SYSASCE                                           8\n*        *---------------------------------------*                         9\n*        *     PERCOLATE RETURN AND REASON CODES *                        10\n*        *---------------------------------------*                        11\n         LR    1,0                REASON CODE FROM SERVICE                12\n         LR    0,15               RETURN CODE FROM SERVICE                13\n         AIF   ('&SPLEVI' LT '3').NOTSTK                                  14\n         MSTA  0                  REGS 0 AND 1 TO STACK MODIFIYABLE       15\n         AGO   .RCODE                                                     16\n.NOTSTK  ANOP                                                             17\n         AIF   (&WORKA EQ 0 OR &CALSA EQ 0).R1                            18\n         L     14,&SAVEGEN+4      A(CALLER'S SAVE AREA)                   19\n         STM   0,1,20(14)         REGS 0,1 TO CALLER'S SAVEAREA           20\n         AGO   .RCODE                                                     21\n.R1      ANOP                                                             22\n         AIF   (&CALSA EQ 0).RCODE                                        23\n         STM   0,1,20(13)         REGS 0,1 TO CALLER'S SAVEAREA           24\n.RCODE   ANOP                                                             25\n         INNERMM &RC,15                                                   26\n.MEND    MEND                                                             27\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PGMNAME": {"ttr": 3587, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00c\\x00c\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:54", "lines": 99, "newlines": 99, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    GET ADDRESS SPACE NAME AND LENGTH                               |    3\n*|  INPUT:                                                            |    4\n*|    R1 = A(PARAMETER LIST) MAPPED BY PPGNM DSECT                    |    5\n*|  OUTPUT:                                                           |    6\n*|    R15 - RETURN CODE                                               |    7\n*|  LOGIC:                                                            |    8\n*|    1) GET CURRENT ASCB ADDRESS FROM PSA                            |    9\n*|    2) SEE IF ASCBJBNI OR ASCBJBNS POINTS TO ADDRESS SPACE NAME     |   10\n*|    3) MOVE ALL 8 BYTES OF NAME TO INPUT PARMLIST                   |   11\n*|    4) FIND ADDRESS OF FIRST X'40' IN ADDRESS SPACE NAME AND        |   12\n*|       CALCULATE LENGTH OF ADDRESS SPACE NAME                       |   13\n*|  ATTRIBUTES:                                                       |   14\n*|    AMODE 31, RMODE ANY, REENTRANT                                  |   15\n*+--------------------------------------------------------------------+   16\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE PGMNAME,BASE=12,AMODE=31,RMODE=ANY,                    X  17\n               TEXT='GET ADDRESS SPACE NAME'                              18\n*        *---------------------------------------*                        19\n*        *     DETERMINE LENGTH OF NAME          *                        20\n*        *---------------------------------------*                        21\n         LR    R3,R1                   ADDRESS OF INPUT PARMLIST          22\n         USING PPGNM,R3                MAP PARMLIST                       23\n         L     R4,PSAAOLD-PSA          A(CURRENT ASCB) FROM PSA           24\n*                                      INITIATED JOBNAME POINTER => R2    25\n         ICM   R5,B'1111',ASCBJBNI-ASCB(R4)                               26\n         BNZ   INITIAT                 \u00ac= 0; POINTER IS FOR INIT JOB      27\n         L     5,ASCBJBNS-ASCB(4)      POINTER IS FOR TSO LOGON OR STC    28\nINITIAT  DS    0H                                                         29\n         MVC   PPGNAME(L'PPGNAME),0(R5) MOVE NAME TO PARMLIST             30\n*        *---------------------------------------*                        31\n*        *     DETERMINE LENGTH OF NAME          *                        32\n*        *---------------------------------------*                        33\n         LA    R1,8                    DEFAULT IF NO HIT ON TRT           34\n*                                      SCAN THE NAME FOR X'40'            35\n         TRT   PPGNAME(L'PPGNAME),TRTTBL                                  36\n         BC    8,NOHIT                 NO SPACES IN NAME                  37\n         LA    R5,PPGNAME             .. ADDRESS OF X'40'                 38\n         SR    R1,R5                  .. SUBTRACTED FROM ADDRESS NAME     39\nNOHIT    DS    0H                                                         40\n         ST    R1,PPGNLEN               STORE LENGTH IN PARMLIST          41\n         B     EXIT00                                                     42\n*---------------------------------------------------------------------*   43\n*        EXIT ROUTINES                                                *   44\n*---------------------------------------------------------------------*   45\nEXIT00   DS    0H                      SUCCESSFUL                         46\n         LA    R15,X'00'                                                  47\n         B     EXIT                                                       48\n*---------------------------------------------------------------------*   49\n*        COMMON EXIT                                                  *   50\n*---------------------------------------------------------------------*   51\nEXIT     DS   0H                                                          52\n         ENDMOD                                                           53\n*---------------------------------------------------------------------*   54\n*        CONSTANTS                                                    *   55\n*---------------------------------------------------------------------*   56\nTRTTBL   DC    XL256'00'               TABLE FOR TRT                      57\n         ORG   TRTTBL+X'40'                                               58\n         DC    X'08'                                                      59\n         ORG                                                              60\n*---------------------------------------------------------------------*   61\n*        WORK AREA                                                    *   62\n*---------------------------------------------------------------------*   63\nWPGMNAME DSECT                                                            64\nLPGMNAME EQU   *-WPGMNAME                                                 65\n*---------------------------------------------------------------------*   66\n*        OTHER DSECTS                                                 *   67\n*---------------------------------------------------------------------*   68\n         PPGNM                         MAP INPUT PARMLIST                 69\n         PRINT NOGEN                                                      70\n         IHAPSA                        MAP PSA                            71\n         IHAASCB                       MAP ASCB                           72\n         END                                                              73\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PPGNM": {"ttr": 3590, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00$\\x00$\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:59", "lines": 36, "newlines": 36, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         PPGNM                                                             2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n*---------------------------------------------------------------------*    3\n*       MAPS PARMLIST PASSED TO PGMNAME                               *    4\n*---------------------------------------------------------------------*    5\nPPGNM    DSECT                                                             6\nPPGNLEN  DS    F                  LENGTH OF PROGRAM NAME                   7\nPPGNAME  DS    CL8                PROGRAM NAME                             8\nPPGNML   EQU   *-PPGNM            LENGTH OF PARMLIST                       9\n         MEND                                                             10\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRTMOD": {"ttr": 3592, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00a\\x00a\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:03", "lines": 97, "newlines": 97, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|     PRINT ROUTINE FOR XMS MODULE NAME PROGRAMS.                    |    3\n*|  INPUTS:                                                           |    4\n*|     R1 - ADDRESS OF MODULE NAME LIST.  FIRST FULLWORD              |    5\n*|          WORD IS THE NUMBER OF ENTRIES IN THE LIST.                |    6\n*|  OUTPUTS:                                                          |    7\n*|     R15 - RETURN CODE                                              |    8\n*|           00 - FOUND                                               |    9\n*|  PROGRAM LOGIC:                                                    |   10\n*|      1) LOOP THROUGH MODULE LIST TABLE, PRINTING EACH ENTRY.       |   11\n*|  ATTRIBUTES:                                                       |   12\n*|      REENTERABLE, AMODE=24, RMODE=24                               |   13\n*+--------------------------------------------------------------------+   14\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE PRTMOD,BASE=12,LOC=BELOW,AMODE=24,RMODE=24,            X  15\n               TEXT='PRINT MODULE NAME LIST'                              16\n         LA    R3,0(R1)                ASCB NAME                          17\n         L     R9,8(R1)                NUMBER OF MODULES IN LIST          18\n         LA    R7,12(R1)               POINT TO FIRST ENTRY IN LIST       19\n         MVC   PRINT(L'PRINT),MPRINT   COPY DCB TO WORK AREA              20\n         MVC   OLIST(L'OLIST),MOLIST   COPY OPEN/CLOSE LIST TO WORK       21\n         OPEN  (PRINT,OUTPUT),MF=(E,OLIST) OPEN PRINT LIST                22\n         MVI   OUTLINE,X'40'           MOVE A SPACE TO OUTLINE            23\n         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE  PROPAGATE SPACES           24\n         MVC   MPRT1(L'H1),H1          MOVE FIRST HEADING TO PRINT        25\n         MVC   MPRT1+L'H1-8(8),0(R3)   MOVE ASCB NAME TO PRINT LINE       26\n         PUT   PRINT,OUTLINE           WRITE FIRST RECORD                 27\nPRLOOP   DS    0H                                                         28\n         MVI   OUTLINE,X'40'           MOVE A SPACE TO OUTLINE            29\n         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE  PROPAGATE SPACES           30\n         MVC   MPRT1(L'MPRT1),0(R7)    MOVE MODULE TO PRINT               31\n         PUT   PRINT,OUTLINE           WRITE MODULE NAME                  32\n         LA    R7,8(R7)                POINT TO NEXT MODNAME IN LIST      33\n         BCT   R9,PRLOOP               LOOP THRU NAMES                    34\n         CLOSE MF=(E,OLIST)            CLOSE THE PRINT FILE               35\n*---------------------------------------------------------------------*   36\n*        EXIT ROUTINES                                                *   37\n*---------------------------------------------------------------------*   38\nEXIT00   DS    0H                      SUCCESSFUL                         39\n         LA    R15,X'00'                                                  40\n         B     EXIT                                                       41\n*---------------------------------------------------------------------*   42\n*        COMMON EXIT                                                  *   43\n*---------------------------------------------------------------------*   44\nEXIT     DS    0H                                                         45\n         ENDMOD                                                           46\n*---------------------------------------------------------------------*   47\n*        CONSTANTS                                                    *   48\n*---------------------------------------------------------------------*   49\nH1       DC   C'MODULES IN ADDRESS SPACE         '                        50\n*---------------------------------------------------------------------*   51\n*        DCB AND OPEN/CLOSE PARMLIST                                  *   52\n*---------------------------------------------------------------------*   53\nLRECL    EQU   133                                                        54\nBLKSIZE  EQU   LRECL*10                                                   55\nMPRINT   DCB   DDNAME=PRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=LRECL,   X  56\n               BLKSIZE=BLKSIZE                                            57\nLPRINT   EQU   *-MPRINT                                                   58\nMOLIST   OPEN  (,),MF=L                                                   59\nLOLIST   EQU   *-MOLIST                                                   60\n*---------------------------------------------------------------------*   61\n*        WORK AREA                                                    *   62\n*---------------------------------------------------------------------*   63\nWPRTMOD  DSECT                                                            64\nMODMAX   EQU   500                     MAXIMUM ENTRIES IN MODULE LIST     65\nPRINT    DS    CL(LPRINT)              PRINT DCB                          66\nOLIST    DS    CL(LOLIST)              LIST FOR OPEN                      67\nOUTLINE  DS    CL(LRECL)               OUTPUT LINE                        68\nMPRT1    EQU   OUTLINE+5,8             FIRST OUTPUT FIELD                 69\nLPRTMOD  EQU   *-WPRTMOD                                                  70\n         END                                                              71\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PUT24": {"ttr": 3595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x001\\x001\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:08", "lines": 49, "newlines": 49, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n&LABEL   PUT24 &DCB,&AREA,&RPL=,&REG=                                      2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n         LCLB  &E1                                                         3\n         LCLC  &LBL1,&LBL2                                                 4\n.**********************************************************************    5\n.*       PERFORM 24 BIT I/O IN 31 BIT PROGRAM                         *    6\n.*       REG = PARAMETER NAMES A WORK REGISTER                        *    7\n.**********************************************************************    8\n         AIF   (T'&REG NE 'O').OK1                                         9\n         MNOTE 8,'OPERAND \"REG\" IS REQUIRED'                              10\n&E1      SETB  1                                                          11\n.OK1     ANOP                                                             12\n         AIF   (&E1).MEND                                                 13\n&LBL1    SETC  'PTT'.'&SYSNDX'                                            14\n&LBL2    SETC  'PTX'.'&SYSNDX'                                            15\n         LA    &REG,&LBL1                                                 16\n         LA    15,&LBL2                                                   17\n         BSM   &REG,15                                                    18\n&LBL2    DS    0H                                                         19\n         PUT   &DCB,&AREA,&RPL=                                           20\n         BSM   0,&REG                                                     21\n&LBL1    DS    0H                                                         22\n.MEND    MEND                                                             23\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPMOD": {"ttr": 3597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xb0\\x00\\xb0\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:13", "lines": 176, "newlines": 176, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    ADD OR REPLACE MODULE ANCHORED IN LPAQ CDE.                     |    3\n*|  LOGIC:                                                            |    4\n*|    1) GET MODULE NAME FROM PARM=                                   |    5\n*|    2) CALL UNANCH SERVICE TO UNANCHOR ANY EXISTING MODULE          |    6\n*|    3) LOAD TARGET MODULE INTO PRIVATE STORAGE TO GET LENGTH        |    7\n*|    4) DELETE MODULE FROM PRIVATE STORAGE                           |    8\n*|    5) CALL ANCHOR SERVICE TO GET LPAQ ANCHORED STORAGE FOR MODULE  |    9\n*|    6) ISSUE LOAD ADRNAPF FOR MODULE INTO LPAQ ANCHORED STORAGE     |   10\n*|  INPUTS:                                                           |   11\n*|    EXEC PARM=                                                      |   12\n*|  OUTPUTS:                                                          |   13\n*|    R15 - RETURN CODE                                               |   14\n*|           0 - SUCCESSFUL ROUTINE                                   |   15\n*|           8 - PARM= NOT SUPPLIED                                   |   16\n*|          16 - VARIOUS LOAD ERRORS                                  |   17\n*|          20 - UNANCH SERVICE FAILED                                |   18\n*|          24 - LOAD OF NEW MODULE FAILED                            |   19\n*|  ATTRIBUTES:                                                       |   20\n*|    AMODE 31, RMODE ANY, APF-AUTHORIZED, REENTERABLE                |   21\n*+--------------------------------------------------------------------+   22\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE REPMOD,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  23\n               TEXT='BUILD A MODULE IN LPAQ'                              24\n*---------------------------------------------------------------------*   25\n*        GET MODULE NAME FROM PARM=                                   *   26\n*---------------------------------------------------------------------*   27\n         LA    R5,ANKLIST              A(PARMLIST) => R5                  28\n         USING ANKPRM,R5               MAP PARMLIST                       29\n         MVI   ANKNAME,X'40'                 ..SET MODULE NAME            30\n         MVC   ANKNAME+1(L'ANKNAME-1),ANKNAME ..TO SPACES                 31\n         L     R1,0(R1)                ADDRESS OF PARM= STRING            32\n         XR    R2,R2                   CLEAR R2                           33\n         ICM   R2,B'0011',0(R1)        LENGTH OF PARM= STRING             34\n         BZ    EXIT08                  =0; PROGAM NAME NOT GIVEN          35\n         BCTR  R2,0                    LESS 1 FOR EXECUTE                 36\n         EX    R2,MV1                  MOVE NAME TO GETASCB PARMLIST      37\n         B     EX1                     BRANCH AROUND EXECUTE              38\nMV1      MVC   ANKNAME(0),2(R1)        ** EXECUTE ONLY ***                39\nEX1      DS    0H                                                         40\n*---------------------------------------------------------------------*   41\n*        CALL UNANCH - UNANCHOR CONTROL BLOCK FROM LPAQ               *   42\n*---------------------------------------------------------------------*   43\n         MVI   ANKSP,@ANKSP            SET DEFAULT SUBPOOL                44\n         OI    ANKFLAG1,@ANKFREE       SET TO FREEMAIN STORAGE            45\n         LOAD  EP=UNANCH,ERRET=EXIT10 LOAD UNANCH SERVICE ROUTINE         46\n         LR    R15,R0                  ENTRYPOINT TO R15                  47\n         LA    R1,ANKLIST              A(PARMLIST) => R1                  48\n         BASSM R14,R15                 INVOKE SERVICE                     49\n         C     R15,=F'8'               DID ANCHOR SERVICE FAIL ?          50\n         BH    EXIT14                  YES; EXIT PERCOLATING RC           51\n         DELETE EP=UNANCH              DELETE UNANCH SERVICE ROUTINE      52\n*---------------------------------------------------------------------*   53\n*        LOAD THE MODULE INTO PRIVATE STORAGE TO DETERMINE            *   54\n*        LENGTH, AMODE AND RMODE.  THEN DELETE THE MODULE.            *   55\n*---------------------------------------------------------------------*   56\n         LOAD  EPLOC=ANKNAME,ERRET=EXIT10                                 57\n         N     R1,=A(X'00FFFFFF')      TURN OFF NON-LENGTH BITS           58\n         SLL   R1,3                    MULTIPLY LENGTH BY 8               59\n         ST    R1,ANKLEN               LENGTH TO ANCHOR PARMLIST          60\n         NI    ANKFLAG1,X'00'          CLEAR FLAGS BYTE                   61\n         STCM  R0,B'1000',TESTBYTE     HIGH ORDER ADDRESS BYTE            62\n         TM    TESTBYTE,B'01111111'    IS IT RMODE 24 ?                   63\n         BNZ   T31                     NO; DO NOT GETMAIN 24-BIT          64\n         OI    ANKFLAG1,@ANKBEL        SET ANCHOR TO GETMAIN 24BIT        65\n         TM    TESTBYTE,B'10000000'    IS IT AMODE 31 ?                   66\n         BZ    T31                     NO; LET CDE ENTRYPOINT BE 24 BIT   67\n         OI    ANKFLAG1,@ANK31         MAKE SURE CDE HAS 31 BIT EP.       68\nT31      DS    0H                                                         69\n         DELETE EPLOC=ANKNAME          DELETE MODULE FROM PRIVATE         70\n*---------------------------------------------------------------------*   71\n*        GET STORAGE ANCHORED ON LPAQ FOR MODULE                      *   72\n*---------------------------------------------------------------------*   73\n         MVC   ANKEYE(L'ANKEYE),EYE    TABLE EYECATCHER TO PARMLIST       74\n         XC    ANKEP(L'ANKEP),ANKEP    INITIALIZE ENTRYPOINT TO X'00'     75\n         LOAD  EP=ANCHOR,ERRET=EXIT10  LOAD ANCHOR SERVICE ROUTINE        76\n         LR    R15,R0                  ENTRYPOINT TO R15                  77\n         LA    R1,ANKPRM               ADDRESS OF PARMLIST => R1          78\n         BASSM R14,R15                 INVOKE SERVICE                     79\n         C     R15,=F'8'               DID ANCHOR SERVICE FAIL ?          80\n         BH    EXIT14                  YES; EXIT PERCOLATING RC           81\n         DELETE EP=ANCHOR              DELETE ANCHOR SERVICE ROUTINE      82\n*---------------------------------------------------------------------*   83\n*        LOAD MODULE INTO ANCHORED STORAGE                            *   84\n*---------------------------------------------------------------------*   85\n         MVC   LOADLIB(LDCBD),LOADLIBD COPY DCB TO RENT STORAGE           86\n         MVC   OLIST(LOLIST),MOLIST    COPY OPEN LIST TO RENT STORAGE     87\n         L     R2,ANKEP                ADDRESS OF ANCHORED CONTROL STG    88\n         LA    R3,LOADLIB              ADDRESS OF LOADLIB DCB             89\n         LA    R4,ANKNAME              NAME OF THE MODULE IN LOADLIB      90\n         OPEN  (LOADLIB,INPUT),MF=(E,OLIST)  OPEN THE LOADLIB             91\n         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW         92\n         LOAD  EPLOC=(R4),ERRET=EXIT18,       ..LOAD THE MODULE INTO   X  93\n               ADRNAPF=(R2),DCB=(R3),SF=(E,LLIST) ..ANCHORED STORAGE      94\n         MODESET MODE=PROB             GO BACK INTO PROBLEM STATE         95\n         CLOSE MF=(E,OLIST)            CLOSE THE LOADLIB DCB              96\n         L     R0,ANKEP                LOAD THE MODULE ADDRESS => R0      97\n         L     R1,ANKLEN               LOAD THE MODULE LENGTH  => R1      98\n         MSTA  0                       PUT REGS R0 AND R1 INTO STACK      99\n         B     EXIT00                                                    100\n*---------------------------------------------------------------------*  101\n*        EXIT ROUTINES                                                *  102\n*---------------------------------------------------------------------*  103\nEXIT00   DS    0H                      SUCCESSFUL                        104\n         LA    15,X'00'                                                  105\n         B     EXIT                                                      106\nEXIT08   DS    0H                      PARM= NOT SUPPLIED                107\n         LA    15,X'08'                                                  108\n         B     EXIT                                                      109\nEXIT10   DS    0H                      ONE OF VARIOUS LOADS FAILED       110\n         PERCRC RC=X'10'                                                 111\n         B     EXIT                                                      112\nEXIT14   DS    0H                      UNANCHOR SERVICE FAILED           113\n         PERCRC RC=X'14'                                                 114\n         B     EXIT                                                      115\nEXIT18   DS    0H                      LOAD OF NEW MODULE FAILED         116\n         PERCRC RC=X'18'                                                 117\n         B     EXIT                                                      118\n*---------------------------------------------------------------------*  119\n*        COMMON EXIT                                                  *  120\n*---------------------------------------------------------------------*  121\nEXIT     DS   0H                                                         122\n         ENDMOD                                                          123\n*---------------------------------------------------------------------*  124\n*        CONSTANTS                                                    *  125\n*---------------------------------------------------------------------*  126\nEYE      DC    C'NULL'                 EYECATCHER REQUIRED BY ANCHOR     127\n*---------------------------------------------------------------------*  128\n*        DCB AND OPEN/CLOSE PARMLIST MODELS                           *  129\n*---------------------------------------------------------------------*  130\nLOADLIBD DCB   DSORG=PS,MACRF=GL,EODAD=EXIT,LRECL=256,                 X 131\n               BLKSIZE=256,RECFM=FB,DDNAME=LOADLIB                       132\nLDCBD    EQU   *-LOADLIBD              LENGTH OF DCB                     133\nMOLIST   OPEN  (,),MF=L                OPEN/CLOSE PARMLIST               134\nLOLIST   EQU   *-MOLIST                LENGTH OF OPEN/CLOSE PARMLIST     135\n*---------------------------------------------------------------------*  136\n*        WORK AREA                                                    *  137\n*---------------------------------------------------------------------*  138\nWREPMOD DSECT                                                            139\nLOADLIB  DS    0F,CL(LDCBD)            LOADLIB DCB                       140\nANKLIST  DS    CL(LANKPRM)             PARMLIST FOR ANCHOR SERVICE       141\nOLIST    DS    CL(LOLIST)              OPEN/CLOSE PARMLIST               142\nTESTBYTE DS    X                       A BYTE FOR TEST                   143\nLLIST    LOAD  ,SF=L                   PARMLIST FOR LOAD                 144\nLREPMOD  EQU   *-WREPMOD                                                 145\n*---------------------------------------------------------------------*  146\n*        OTHER DSECTS                                                 *  147\n*---------------------------------------------------------------------*  148\n         ANKPRM                         MAP ANCHOR SERVICE PARMS         149\n         END                                                             150\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SCHDPRM": {"ttr": 3601, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00&\\x00&\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:20", "lines": 38, "newlines": 38, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         SCHDPRM                                                           2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n*---------------------------------------------------------------------*    3\n*        THIS DSECT MAPS THE PARMLIST FOR THE SCHDSRB ROUTINE         *    4\n*---------------------------------------------------------------------*    5\nSCHDPRM  DSECT                                                             6\nSCHAPARM DS    F                       ADDRESS OF PARMLIST FOR SRB RTN     7\nSCHLPARM DS    F                       LENGTH  OF PARMLIST FOR SRB RTN     8\nSCHTASID DS    CL8                     NAME OF SRB TARGET ADDRESS SPC      9\nSCHNAME  DS    CL8                     NAME OF SRB ROUTINE MODULE         10\nSCHDPRML EQU   *-SCHDPRM               LENGTH OF THIS PARMLIST            11\n         MEND                                                             12\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SCHDSRB": {"ttr": 3841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x01@\\x01@\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:24", "lines": 320, "newlines": 320, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   THIS PROGRAM SCHEDULES A LOCAL SRB AND WAITS UNTIL THE ROUTINE   |    3\n*|   EXECUTING UNDER THAT SRB COMPLETES.                              |    4\n*| INPUTS:                                                            |    5\n*|   R1 - ADDRESS OF A PARMLIST MAPPED BY SCHDPRM DSECT CONTAINING:   |    6\n*|        1) THE NAME OF THE SRB ROUTINE LOAD MODULE.                 |    7\n*|        2) THE NAME OF THE ADDRESS SPACE WHERE THE SRB ROUTINE      |    8\n*|           WILL EXECUTE.                                            |    9\n*|        3) PARAMETERS FOR THE SRB ROUTINE.                          |   10\n*| OUTPUTS:                                                           |   11\n*|   R15- RETURN CODE.                                                |   12\n*|         0 = THE SRB ROUTINE EXECUTED SUCCESSFULLY.                 |   13\n*|         8 = A TARGET ADDRESS SPACE NOT SPECIFIED IN THE PARMLIST.  |   14\n*|        12 = THE TARGET ADRESS SPACE WAS NOT FOUND.                 |   15\n*|        16 = THE LOAD FOR THE SRB IN PRIVATE STORAGE FAILED:        |   16\n*|             R0 CONTAINS THE RETURN CODE FROM LOAD.                 |   17\n*|        20 = THE LOAD FOR THE SRB ROUTINE IN SQA FAILED             |   18\n*|             R0 CONTAINS THE RETURN CODE FROM LOAD.                 |   19\n*|        24 = THE SRB ROUTINE FAILED.                                |   20\n*|             R0 CONTAINS THE CODE FROM CROSS-MEMORY POST:           |   21\n*|                12 - THE RMT ROUTINE WAS DRIVEN BY PURGEDQ.         |   22\n*|                ANY OTHER CODE - ABEND CODE FROM THE FRR SDWA.      |   23\n*| LOGIC:                                                             |   24\n*|   1)   CALL GETASCB TO OBTAIN THE TARGET ADDRESS SPACE'S ASCB.     |   25\n*|   2)   LOAD THE SRB ROUTINE MODULE INTO PRIVATE STORAGE. OBTAIN    |   26\n*|        THE LENGTH OF THE ROUTINE AND DELETE IT.                    |   27\n*|   3)   OBTAIN SQA STORAGE FOR:                                     |   28\n*|        - THE SRB CONTROL BLOCK (WITH A USER EXTENSION)             |   29\n*|        - THE SRB ROUTINE LOAD MODULE                               |   30\n*|        - PARAMETERS FOR THE SRB ROUTINE                            |   31\n*|   4)   LOAD THE SRB ROUTINE INTO THE OBTAINED SQA STORAGE.         |   32\n*|   5)   COPY THE RMT ROUTINE INTO THE OBTAINED SQA STORAGE.         |   33\n*|   6)   BUILD THE SRB CONTROL BLOCK.                                |   34\n*|   7)   PUT THE ADDRESS OF THE RMT ROUTINE AND THE PARAMTERS        |   35\n*|        FOR THE SRB ROUTINE INTO THE SRB CONTROL BLOCK. COPY        |   36\n*|        THE PARAMETERS INTO THE OBTAINED SQA.                       |   37\n*|   8)   SCHEDULE THE SRB TO THE TARGET ADDRESS SPACE.               |   38\n*|   9)   SET THE STIMER AND WAIT ON THE ECB.                         |   39\n*|        - IF THE SRB ROUTINE COMPLETES BEFORE THE STIMER EXPIRES,   |   40\n*|        THE SRB ROUTINE CROSS-MEMORY POSTS THE ECB.  THE SRB        |   41\n*|        ROUTINE USE THE POST-CODE AS A RETURN CODE TO THIS ROUTINE. |   42\n*|        - IF STIMER EXPIRES BEFORE THE SRB ROUTINE COMPLETES,       |   43\n*|        THE STIMER EXIT ROUTINE RECEIVES CONTROL AND ISSUES PURGEDQ.|   44\n*|        PURGEDQ DRIVES THE RMT ROUTINE IN THE TARGET ADDRESS SPACE  |   45\n*|        WHICH POSTS THE ECB.                                        |   46\n*|  10)   CANCEL THE STIMER AND FREE THE SQA STORAGE.                 |   47\n*| ATTRIBUTES:                                                        |   48\n*|   AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF AUTHORIZATION       |   49\n*|   ESA DEPENDENCIES (LINKAGE STACK, STORAGE MACRO)                  |   50\n*+--------------------------------------------------------------------+   51\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE SCHDSRB,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,          X  52\n               TEXT='SCHEDULES AN SRB'                                    53\n         LR    R9,R1                   PARMLIST ADDRESS TO R9             54\n         USING SCHDPRM,R9              MAP INPUT PARMLIST                 55\n*        *---------------------------------------*                        56\n*        *     CALL GETASCB TO GET TARGET ASCB   *                        57\n*        *---------------------------------------*                        58\n         LA    R3,GETPARMS             PARMS FOR GETASCB ROUTINE          59\n         USING GETPRM,R3               MAP GETASCB PARMLIST               60\n         MVC   GETNAME,SCHTASID        ADDRESS SPACE NAME TO GETPRM       61\n         LA    R1,8                    ..PUT LENGTH OF ADDRESS SPACE      62\n         ST    R1,GETNAMEL             ..NAME IN GETASCB PARMLIST         63\n         ICM   R15,15,=V(GETASCB)      ADDRESS OF THE GETASCB SERVICE     64\n         BZ    EXIT08                  =0; NOT LINK-EDITED - EXIT         65\n         O     R15,=A(X'80000000')     SET FOR 31 BIT ENTRY               66\n         LA    R1,GETPARMS             PARMS FOR GETASCB ROUTINE          67\n         BASSM R14,R15                 INVOKE THE GETASCB SERVICE         68\n         LTR   R15,R15                 RC = 0 ?                           69\n         BNZ   EXIT0C                  NO; EXIT                           70\n*        *---------------------------------------*                        71\n*        *     LOAD THE SRB ROUTINE INTO         *                        72\n*        *     PRIVATE TO OBTAIN LENGTH          *                        73\n*        *---------------------------------------*                        74\n         LOAD  EPLOC=SCHNAME,ERRET=EXIT10                                 75\n         N     R1,=A(X'00FFFFFF')      TURN OFF NON-LENGTH BITS           76\n         SLL   R1,3                    MULTIPLY LENGTH BY 8               77\n         ST    R1,LSRBRTN              SAVE LENGTH OF SRB ROUTINE         78\n         DELETE EPLOC=SCHNAME          DELETE MODULE FROM PRIVATE         79\n*        *---------------------------------------*                        80\n*        *     GET STORAGE FOR SRB CONTROL BLOCK,*                        81\n*        *     SRB ROUTINE AND PARMS FOR THE RTN *                        82\n*        *---------------------------------------*                        83\n         L     R5,SCHLPARM             ..TOTAL STORAGE = L'SRB PARMS      84\n         LA    R5,SRBSIZE1(R1,R5)      ..+ LENGTH OF SRB AND SRB RTN      85\n         LA    R5,LSRBRMTM(R5)         ..+ SIZE OF RMT ROUTINE            86\n         ST    R5,SRBTSTOR             SAVE AMOUNT TOTAL STORAGE          87\n         MODESET MODE=SUP,KEY=ZERO     GET A SUPERVISOR/KEY 0 PSW         88\n         STORAGE OBTAIN,LENGTH=(5),ADDR=(4),SP=SRBSP,LOC=BELOW            89\n         ST    R4,ADSTOR               SAVE ADDRESS SQA STORAGE           90\n         XR    R6,R6                   ..INITIALIZE                       91\n         XR    R7,R7                   ..STORAGE                          92\n         MVCL  R4,R6                   ..TO X'00'                         93\n*        *---------------------------------------*                        94\n*        *     LOAD THE SRB ROUTINE INTO         *                        95\n*        *     COMMON STORAGE                    *                        96\n*        *---------------------------------------*                        97\n         MVC   LOADLIB(LDCBD),LOADLIBD COPY DCB TO WORK AREA              98\n         MVC   OLIST(LOLIST),MOLIST    COPY OPEN PARMLIST TO WORK AREA    99\n         LA    R6,LOADLIB              ADDRESS OF LOADLIB DCB            100\n         OPEN  ((R6),INPUT),MF=(E,OLIST)  OPEN THE LOADLIB               101\n         L     R4,ADSTOR               ADDRESS OF SQA STORAGE            102\n         LA    R5,SCHNAME              ADDRESS OF SRB MODULE NAME        103\n         LOAD  EPLOC=(R5),ERRET=EXIT14,              ..LOAD THE MODULE X 104\n               ADRNAPF=(R4),DCB=(R6),SF=(E,LLIST)    ..INTO SQA STORAGE  105\n         ST    R0,LOADEP               SAVE AMODE/ENTRYPOINT FROM LOAD   106\n         CLOSE MF=(E,OLIST)            CLOSE THE LOADLIB                 107\n*        *---------------------------------------*                       108\n*        *     COPY THE RMT ROUTINE TO COMMON    *                       109\n*        *---------------------------------------*                       110\n         L     R5,LSRBRTN              LENGTH OF SRB ROUTINE +           111\n         LA    R4,0(R4,R5)             ADDR OF SRB RTN = ADDR RMT RTN    112\n         ST    R4,ADRMTRTN             SAVE THE ADDRESS OF RMT RTN       113\n         LA    R5,LSRBRMTM             LENGTH THE THE RMT RTN            114\n         LR    R7,R5                   COPY LENGTH TO R7                 115\n         LA    R6,SRBRMTM              ADDRESS OF RMT RTN IN SCHDSRB     116\n         MVCL  R4,R6                   MOVE RMT RTN TO COMMON STORAGE    117\n*        *---------------------------------------*                       118\n*        *     BUILD THE SRB                     *                       119\n*        *---------------------------------------*                       120\n         LR    R10,R4                  ADDR OF SRB RTN = ADDR SRB        121\n         USING SRBSECT,R10             MAP THE SRB                       122\n         MVC   SRBID,=CL4'SRB'         MOVE SRB LITERAL TO SRB           123\n         L     R4,LOADEP               LOAD AMODE/ENTRYPOINT FROM LOAD   124\n         ST    R4,SRBEP                STORE ADDR OF SRB RTN IN SRB      125\n         MVC   SRBASCB,GETADDR         ADDRESS OF TARGET ASCB TO SRB     126\n         EPAR  R2                        ..THIS ASID                     127\n         STCM  R2,B'0011',SRBPASID       ..INTO THE SRB                  128\n         L     R2,PSATOLD-PSA          ..ADDRESS OF CURRENT TCB          129\n         STCM  R2,15,SRBPTCB           ..INTO THE SRB                    130\n         L     R7,ADRMTRTN               ..ADDRESS OF THE RMT RTN        131\n         ST    R7,SRBRMTR                ..INTO THE SRB                  132\n         ICM   R5,15,SCHLPARM          LENGTH OF PARMS FOR SRB RTN       133\n         BZ    NOPARM                  =0; DO NOT COPY PARMS TO SQA      134\n         LA    R4,SRBEND1              POINT AT PARMS FOR SRB ROUTINE    135\n         ST    R4,SRBPARM              SAVE ADDRESS IN SRB               136\n         LR    R7,R5                   LENGTH FOR MVCL                   137\n         L     R6,SCHAPARM             ADDRESS OF SRB ROUTINE PARMS      138\n         MVCL  R4,R6                   COPY PARMS INTO SQA.              139\nNOPARM   DS    0H                                                        140\n*                                        ..MOVE ADDRESS THIS ASCB TO     141\n         MVC   ADASCB,PSAAOLD-PSA        ..COMMON STORAGE FOR XM POST    142\n*        *---------------------------------------*                       143\n*        *     SCHEDULE THE SRB                  *                       144\n*        *---------------------------------------*                       145\n         SCHEDULE SRB=(R10),SCOPE=LOCAL                                  146\n*        *---------------------------------------*                       147\n*        *     SET THE STIMER. WAIT FOR THE      *                       148\n*        *     SRB ROUTINE TO COMPLETE.          *                       149\n*        *---------------------------------------*                       150\n         ST    R13,ADWORK               ..PASS ADDRESS OF WORKAREA       151\n         LA    R5,ADWORK                ..AS PARM TO STIMERM EXIT RTN    152\n         LA    R4,SRBTIMM               ADDRESS OF STIMERM EXIT RTN      153\n         LA    R1,STIMLIST              STIMERM PARAMETER LIST           154\n         STIMERM SET,ID=STIMID,BINTVL=TIMER,EXIT=(R4),PARM=(R5),       X 155\n               MF=(E,(1))                                                156\n         LA    R1,SRBECB               ..WAIT FOR THE SRB                157\n         WAIT  1,ECB=(R1)              ..TO COMPLETE                     158\n         XR    R7,R7                   CLEAR R7                          159\n         ICM   R7,B'0111',SRBECB+1     PRESERVE THE POST CODE IN R7      160\n*        *---------------------------------------*                       161\n*        *     FREE SRB AND SRB ROUTINE STORAGE  *                       162\n*        *---------------------------------------*                       163\n         LA    R1,STIMLIST              STIMERM PARAMETER LIST           164\n         STIMERM CANCEL,ID=STIMID,MF=(E,(1))   CANCEL THE STIMERM        165\n         L     R0,SRBTSTOR             SIZE OF STORAGE IN SQA            166\n         L     R1,ADSTOR               ADDRESS OF SQA STORAGE            167\n         STORAGE RELEASE,LENGTH=(0),ADDR=(1),SP=SRBSP                    168\n         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE/KEY 8 PSW     169\n         LTR   R15,R7                  POST CODE = 0?                    170\n         BNZ   EXIT18                  NO;  EXIT WITH ERROR              171\n         B     EXIT00                  EXIT                              172\n*---------------------------------------------------------------------*  173\n*        STIMER EXIT ROUTINE.                                         *  174\n*        THIS ROUTINE IS DISPATCHED WHEN THE STIMERM INTERVAL EXPIRES.*  175\n*        THE ROUTINE ISSUES THE PURGEDQ MACRO, WHICH CAUSES MVS       *  176\n*        SUPERVISOR ROUTINES TO:                                      *  177\n*              1) REMOVE THE SRB ROUTINE FROM ANY DISPATCH QUEUES.    *  178\n*              2) TRANSFER CONTROL TO THE RMT ROUTINE.  THE RMT       *  179\n*                 ROUTINE CROSS-MEMORY POSTS THE ECB IN THIS ROUTINE. *  180\n*---------------------------------------------------------------------*  181\nSRBTIMM  DS    0F                                                        182\n         BAKR  R14,R0                  SAVE ENVIRONMENT ON STACK         183\n         LR    R12,R15                 ENTRYPOINT TO BASE REGISTER       184\n         LA    R2,SRBTIMM-SCHDSRB      ..BACKUP FOR DISPLACEMENT         185\n         SLR   R12,R2                  ..OF THIS ROUTINE                 186\n         L     R13,4(R1)               WORKAREA  ADDRESS                 187\n         L     R10,ADSTOR              ADDRESS OF SRB                    188\n         L     R2,SRBASCB              TARGET ASCB                       189\n         LA    R2,ASCBASID-ASCB(R2)    POINT AT ASN OF TARGET ASCB       190\n         MVC   PRGFLC(L'SRBFLC),SRBFLC COPY SRBFLC                       191\n         NC    PRGFLC(L'SRBCPAFF),=XL2'00' TURN OFF HIGH BYTES           192\n         LA    R8,PRGFLC               ASID/TCB FOR PURGEDQ              193\n         L     R7,SRBRMTR              ADDRESS OF RMT ROUTINE            194\n         LA    R1,PDQLIST              PARMLIST FOR PURGEDQ              195\n         PURGEDQ RMTR=(7),ASID=(R2),ASIDTCB=(8),MF=(E,(1))               196\n         PR                            RETURN                            197\n*---------------------------------------------------------------------*  198\n*        RMT ROUTINE.                                                 *  199\n*        THIS ROUTINE RECEIVES CONTROL WHEN THE STIMERM IN THE        *  200\n*        SCHEDULING ADDRESS SPACE EXPIRES AND THE STIMERM EXIT        *  201\n*        ROUTINE ISSUES PURGEDQ.  THIS ROUTINE CAN FREE RESOURCES     *  202\n*        SUCH AS LOCKS OR COMMON STORAGE ACQUIRED FOR THE SRB ROUTINE.*  203\n*        IN THIS CASE IT POSTS THE ECB FOR THE SCHEDULING TASK.       *  204\n*---------------------------------------------------------------------*  205\nSRBRMTM  DS    0F                                                        206\n         BAKR  R14,R0                  SAVE ENVIRONMENT ON STACK         207\n         LR    R9,R15                  ENTRYPOINT TO BASE REGISTER       208\n         LA    R2,SRBRMTM-SCHDSRB      ..BACK UP FOR DISPLACEMENT        209\n         SLR   R9,R2                   ..OF THIS ROUTINE                 210\n         LR    R10,R1                  ADDRESS OF SRB                    211\n         LA    R4,SRBECB               ADDRESS OF SRB ECB                212\n         L     R5,ADASCB               ADDRESS OF SCHEDULER'S ASCB       213\n         LA    R6,POSTERR              ERROR ROUTINE FOR POST            214\n         LA    R7,12                   POST CODE = 12                    215\n         POST  (4),(7),ASCB=(5),ERRET=(6),LINKAGE=BRANCH                 216\n         PR                            RETURN                            217\n*---------------------------------------------------------------------*  218\n*        POST ERROR ROUTINE.  THIS ROUTINE IS ONLY ENTERED IF THE     *  219\n*        SCHEDULING ADDRESS SPACE NO LONGER EXISTS                    *  220\n*---------------------------------------------------------------------*  221\nPOSTERR  DS    0H                                                        222\n         PR                            POP THE STACK AND RETURN          223\nESRBRMTM DS    0F                      FORCE FULLWORD ALIGNMENT          224\nLSRBRMTM EQU   ESRBRMTM-SRBRMTM        LENGTH OF THE RMT ROUTINE         225\n*---------------------------------------------------------------------*  226\n*        EXIT ROUTINES                                                *  227\n*---------------------------------------------------------------------*  228\nEXIT00   DS    0H                      SUCCESSFUL COMPLETION             229\n         LA    15,X'00'                                                  230\n         B     EXIT                                                      231\nEXIT08   DS    0H                      LENGTH OF TARGET ADDRES SP=0      232\n         LA    15,X'08'                                                  233\n         B     EXIT                                                      234\nEXIT0C   DS    0H                      TARGET ADDRESS SP NOT FOUND       235\n         LA    15,X'0C'                                                  236\n         B     EXIT                                                      237\nEXIT10   DS    0H                      LOAD OF SRB ROUTINE INTO          238\n         PERCRC RC=X'10'               PRIVATE FAILED                    239\n         B     EXIT                                                      240\nEXIT14   DS    0H                      LOAD OF SRB ROUTINE INTO          241\n         PERCRC RC=X'14'               SQA FAILED                        242\n         B     EXIT                                                      243\nEXIT18   DS    0H                      SRB ROUTINE ROUTINE FAILED        244\n         PERCRC RC=X'14'                                                 245\n         B     EXIT                                                      246\n*---------------------------------------------------------------------*  247\n*        COMMON EXIT                                                  *  248\n*---------------------------------------------------------------------*  249\nEXIT     DS   0H                                                         250\n         ENDMOD                                                          251\n*---------------------------------------------------------------------*  252\n*        DCB AND OPEN/CLOSE PARMLIST MODELS                           *  253\n*---------------------------------------------------------------------*  254\nLOADLIBD DCB   DSORG=PS,MACRF=GL,EODAD=EXIT,LRECL=256,                 X 255\n               BLKSIZE=256,RECFM=FB,DDNAME=LOADLIB                       256\nLDCBD    EQU   *-LOADLIBD              LENGTH OF DCB                     257\nMOLIST   OPEN  (,),MF=L                OPEN/CLOSE PARMLIST               258\nLOLIST   EQU   *-MOLIST                LENGTH OF OPEN/CLOSE PARMLIST     259\n*---------------------------------------------------------------------*  260\n*        CONSTANTS                                                    *  261\n*---------------------------------------------------------------------*  262\nSRBSP    EQU   245                     SUBPOOL FOR SRB AND ROUTINE STG   263\nTIMER    DC    A(10*SECOND)            TIMER VALUE FOR 10 SECONDS        264\nSECOND   EQU   100                     TIMER VALUE FOR 1 SECOND          265\n*---------------------------------------------------------------------*  266\n*        WORK AREA                                                    *  267\n*---------------------------------------------------------------------*  268\nWSCHDSRB DSECT                         WORK AREA FOR SCHDSRB             269\nPRGFLC   DS    D                       ASID/TCB FOR PURGEDQ              270\nLOADEP   DS    A                       AMODE/ENTRYPOINT OF SRB ROUTINE   271\nLSRBRTN  DS    F                       LENGTH OF SRB ROUTINE             272\nADRMTRTN DS    A                       ADDRESS IF THE RMT ROUTINE        273\nADWORK   DS    F                       ADDRESS OF THIS WORK AREA         274\nADSTOR   DS    A                       ADDRESS OF OBTAINED STORAGE       275\nSTIMID   DS    A                       STIMERM ID                        276\nSRBTSTOR DS    F                       AMOUNT TOTAL STORAGE              277\nGETPARMS DS    CL(GETPRML)             PARMS FOR GETASCB                 278\nSTIMLIST STIMERM SET,MF=L              PARMLIST FOR STIMERM              279\nPDQLIST  PURGEDQ MF=L                  PARMLIST FOR PURGEDQ              280\nLOADLIB  DS    0F,CL(LDCBD)            LOADLIB DCB                       281\nOLIST    DS    CL(LOLIST)              OPEN/CLOSE PARMLIST               282\nLLIST    LOAD  ,SF=L                   PARMLIST FOR LOAD ADRNPF=         283\nLSCHDSRB EQU   *-WSCHDSRB              LENGTH OF THE WORK AREA           284\n*---------------------------------------------------------------------*  285\n*        OTHER DSECTS                                                 *  286\n*---------------------------------------------------------------------*  287\n         SCHDPRM                       MAP PARMLIST FOR THIS ROUTINE     288\n         SRBPRM                        MAP SRB AND USER PARMS            289\n         GETPRM                        PARMS FOR GETASCB                 290\n         IHAASCB                       MAP ASCB                          291\n         CVT   DSECT=YES,LIST=NO       MAP CVT                           292\n         IHAPSA                        MAP PSA                           293\n         END                                                             294\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SENDASM": {"ttr": 3847, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00>\\x00>\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:29", "lines": 62, "newlines": 62, "modlines": 0, "user": "MVSPP"}, "text": "REM +-----------------------------------------------------------------+\nREM | SENDASM.BAT                                                     |\nREM |                                                                 |\nREM | Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis|\nREM |                                                                 |\nREM | Address questions to: mmarx@mdpaladin.com                       |\nREM |                                                                 |\nREM | Permission is hereby granted, free of charge, to any person     |\nREM | obtaining a copy of this software and associated documentation  |\nREM | files (the \"Software\"), to deal in the Software without         |\nREM | restriction, including without limitation the rights to use,    |\nREM | copy, modify, merge, publish, distribute, sublicense,and/or sell|\nREM | copies of the Software, and to permit persons to whom the       |\nREM | Software is furnished to do so, subject to the following        |\nREM | conditions:                                                     |\nREM |                                                                 |\nREM | The above copyright notice and this permission notice shall be  |\nREM | included in all copies or substantial portions of the Software. |\nREM |                                                                 |\nREM | THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, |\nREM | EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES |\nREM | OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND        |\nREM | NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT     |\nREM | HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,    |\nREM | WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |\nREM | FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR   |\nREM | OTHER DEALINGS IN THE SOFTWARE.                                 |\nREM +-----------------------------------------------------------------+\nCALL SEND ANCHOR.ASM   '%1(ANCHOR)'    CRLF ASCII\nCALL SEND BLDIRB.ASM   '%1(BLDIRB)'    CRLF ASCII\nCALL SEND CKXTALK.ASM  '%1(CKXTALK)'   CRLF ASCII\nCALL SEND DSPACE.ASM   '%1(DSPACE)'    CRLF ASCII\nCALL SEND DSPFIND.ASM  '%1(DSPFIND)'   CRLF ASCII\nCALL SEND DSPUT.ASM    '%1(DSPUT)'     CRLF ASCII\nCALL SEND DYNAL.ASM    '%1(DYNAL)'     CRLF ASCII\nCALL SEND EDEBUG.ASM   '%1(EDEBUG)'    CRLF ASCII\nCALL SEND ESAMOVE.ASM  '%1(ESAMOVE)'   CRLF ASCII\nCALL SEND ESAMVPC.ASM  '%1(ESAMVPC)'   CRLF ASCII\nCALL SEND ESFRAME.ASM  '%1(ESFRAME)'   CRLF ASCII\nCALL SEND GETASCB.ASM  '%1(GETASCB)'   CRLF ASCII\nCALL SEND HEXPRT.ASM   '%1(HEXPRT)'    CRLF ASCII\nCALL SEND HOOKDRV.ASM  '%1(HOOKDRV)'   CRLF ASCII\nCALL SEND HOOKIN.ASM   '%1(HOOKIN)'    CRLF ASCII\nCALL SEND HOOKSVC.ASM  '%1(HOOKSVC)'   CRLF ASCII\nCALL SEND IRBRTN.ASM   '%1(IRBRTN)'    CRLF ASCII\nCALL SEND MFRAME.ASM   '%1(MFRAME)'    CRLF ASCII\nCALL SEND NCRYPT.ASM   '%1(NCRYPT)'    CRLF ASCII\nCALL SEND NSWPRTN.ASM  '%1(NSWPRTN)'   CRLF ASCII\nCALL SEND PCPERM.ASM   '%1(PCPERM)'    CRLF ASCII\nCALL SEND PCSET.ASM    '%1(PCSET)'     CRLF ASCII\nCALL SEND PGMNAME.ASM  '%1(PGMNAME)'   CRLF ASCII\nCALL SEND PRTMOD.ASM   '%1(PRTMOD)'    CRLF ASCII\nCALL SEND REPMOD.ASM   '%1(REPMOD)'    CRLF ASCII\nCALL SEND SCHDSRB.ASM  '%1(SCHDSRB)'   CRLF ASCII\nCALL SEND SUBTSK.ASM   '%1(SUBTSK)'    CRLF ASCII\nCALL SEND SVCLIST.ASM  '%1(SVCLIST)'   CRLF ASCII\nCALL SEND TSCHD1.ASM   '%1(TSCHD1)'    CRLF ASCII\nCALL SEND UNANCH.ASM   '%1(UNANCH)'    CRLF ASCII\nCALL SEND XAFRAME.ASM  '%1(XAFRAME)'   CRLF ASCII\nCALL SEND XAMOVE.ASM   '%1(XAMOVE)'    CRLF ASCII\nCALL SEND XASAC.ASM    '%1(XASAC)'     CRLF ASCII\nCALL SEND XTALK.ASM    '%1(XTALK)'     CRLF ASCII\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SENDJCL": {"ttr": 3849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\x1f\\x00\\x1f\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:34", "lines": 31, "newlines": 31, "modlines": 0, "user": "MVSPP"}, "text": "REM +-----------------------------------------------------------------+\nREM | SENDJCL.BAT                                                     |\nREM |                                                                 |\nREM | Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis|\nREM |                                                                 |\nREM | Address questions to: mmarx@mdpaladin.com                       |\nREM |                                                                 |\nREM | Permission is hereby granted, free of charge, to any person     |\nREM | obtaining a copy of this software and associated documentation  |\nREM | files (the \"Software\"), to deal in the Software without         |\nREM | restriction, including without limitation the rights to use,    |\nREM | copy, modify, merge, publish, distribute, sublicense,and/or sell|\nREM | copies of the Software, and to permit persons to whom the       |\nREM | Software is furnished to do so, subject to the following        |\nREM | conditions:                                                     |\nREM |                                                                 |\nREM | The above copyright notice and this permission notice shall be  |\nREM | included in all copies or substantial portions of the Software. |\nREM |                                                                 |\nREM | THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, |\nREM | EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES |\nREM | OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND        |\nREM | NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT     |\nREM | HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,    |\nREM | WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |\nREM | FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR   |\nREM | OTHER DEALINGS IN THE SOFTWARE.                                 |\nREM +-----------------------------------------------------------------+\nCALL SEND ALLOC.JCL   '%1(ALLOC)'  ASCII CRLF\nCALL SEND ASMLKD.JCL  '%1(ASMLKD)' ASCII CRLF\nCALL SEND EXEC.JCL    '%1(EXEC)'   ASCII CRLF\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SENDMAC": {"ttr": 3851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x001\\x001\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:39", "lines": 49, "newlines": 49, "modlines": 0, "user": "MVSPP"}, "text": "REM +-----------------------------------------------------------------+\nREM | SENDMAC.BAT                                                     |\nREM |                                                                 |\nREM | Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis|\nREM |                                                                 |\nREM | Address questions to: mmarx@mdpaladin.com                       |\nREM |                                                                 |\nREM | Permission is hereby granted, free of charge, to any person     |\nREM | obtaining a copy of this software and associated documentation  |\nREM | files (the \"Software\"), to deal in the Software without         |\nREM | restriction, including without limitation the rights to use,    |\nREM | copy, modify, merge, publish, distribute, sublicense,and/or sell|\nREM | copies of the Software, and to permit persons to whom the       |\nREM | Software is furnished to do so, subject to the following        |\nREM | conditions:                                                     |\nREM |                                                                 |\nREM | The above copyright notice and this permission notice shall be  |\nREM | included in all copies or substantial portions of the Software. |\nREM |                                                                 |\nREM | THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, |\nREM | EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES |\nREM | OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND        |\nREM | NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT     |\nREM | HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,    |\nREM | WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |\nREM | FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR   |\nREM | OTHER DEALINGS IN THE SOFTWARE.                                 |\nREM +-----------------------------------------------------------------+\nCALL SEND ANKPRM.MAC   '%1(ANKPRM)'    CRLF ASCII\nCALL SEND CALLPC.MAC   '%1(CALLPC)'    CRLF ASCII\nCALL SEND DSPTBLE.MAC  '%1(DSPTBLE)'   CRLF ASCII\nCALL SEND DYNPRM.MAC   '%1(DYNPRM)'    CRLF ASCII\nCALL SEND ENDMOD.MAC   '%1(ENDMOD)'    CRLF ASCII\nCALL SEND EQUATES.MAC  '%1(EQUATES)'   CRLF ASCII\nCALL SEND GET24.MAC    '%1(GET24)'     CRLF ASCII\nCALL SEND GETPRM.MAC   '%1(GETPRM)'    CRLF ASCII\nCALL SEND HOOKPRE.MAC  '%1(HOOKPRE)'   CRLF ASCII\nCALL SEND HOOKPRM.MAC  '%1(HOOKPRM)'   CRLF ASCII\nCALL SEND INNERMM.MAC  '%1(INNERMM)'   CRLF ASCII\nCALL SEND MODULE.MAC   '%1(MODULE)'    CRLF ASCII\nCALL SEND PCSERV.MAC   '%1(PCSERV)'    CRLF ASCII\nCALL SEND PERCRC.MAC   '%1(PERCRC)'    CRLF ASCII\nCALL SEND PPGNM.MAC    '%1(PPGNM)'     CRLF ASCII\nCALL SEND PUT24.MAC    '%1(PUT24)'     CRLF ASCII\nCALL SEND SCHDPRM.MAC  '%1(SCHDPRM)'   CRLF ASCII\nCALL SEND SRBPRM.MAC   '%1(SRBPRM)'    CRLF ASCII\nCALL SEND XMSESA.MAC   '%1(XMSESA)'    CRLF ASCII\nCALL SEND XMSXA.MAC    '%1(XMSXA)'     CRLF ASCII\nCALL SEND XTOC.MAC     '%1(XTOC)'      CRLF ASCII\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SRBPRM": {"ttr": 3853, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00*\\x00*\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:44", "lines": 42, "newlines": 42, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         SRBPRM                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n*---------------------------------------------------------------------*    3\n*        DSECT TO MAP SQA STORAGE OBTAINED BY SCHDSRB.  WHEN THE SRB  *    4\n*        ROUTINE RECEIVES CONTROL, ADDRESS OF THIS STORAGE IS IN R0   *    5\n*---------------------------------------------------------------------*    6\n         IHASRB                        IBM MACRO TO MAP THE SRB            7\nADASCB   DS    A                       SCHEDULING ADDRESS SPACE ASCB       8\nSRBECB   DS    A                       ECB FOR SCHEDULER                   9\nPOSTCC   DS    F                       COMPLETION CODE FOR XM POST        10\nFRRFLAG  DS    X                       FRR FLAGS BYTE                     11\n@RECUR   EQU   B'10000000'             RECURSIVE FRR ENTRY                12\n         DS    3X                      NOT USED                           13\nSRBEND1  DS    0F                      PARMS FOR SRB ARE HERE             14\nSRBSIZE1 EQU   SRBEND1-SRBSECT         SIZE OF SRB                        15\n         MEND                                                             16\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SUBTSK": {"ttr": 3855, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00:\\x00:\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:50", "lines": 58, "newlines": 58, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   SUBTASK OF SUBTSK TO TEST IRB SCHEDULING                         |    3\n*| INPUTS:                                                            |    4\n*|   NONE                                                             |    5\n*| OUTPUTS:                                                           |    6\n*|   CONSOLE MESSAGE                                                  |    7\n*+--------------------------------------------------------------------+    8\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE SUBTSK,BASE=12,AMODE=24,RMODE=24,                      X   9\n               TEXT=' ',SP=0                                              10\n         WTO   'HELLO FROM THE SUBTASK'                                   11\n         B     EXIT00                                                     12\n*---------------------------------------------------------------------*   13\n*        EXIT ROUTINES                                                *   14\n*---------------------------------------------------------------------*   15\nEXIT00   DS    0H                      SUCCESSFUL                         16\n         LA    15,X'00'                                                   17\n         B     EXIT                                                       18\n*---------------------------------------------------------------------*   19\n*        COMMON EXIT                                                  *   20\n*---------------------------------------------------------------------*   21\nEXIT     DS   0H                                                          22\n         ENDMOD                                                           23\n*---------------------------------------------------------------------*   24\n*        WORK AREA                                                    *   25\n*---------------------------------------------------------------------*   26\nWSUBTSK DSECT                                                             27\nLSUBTSK EQU    *-WSUBTSK                                                  28\n*---------------------------------------------------------------------*   29\n*        OTHER DSECTS                                                 *   30\n*---------------------------------------------------------------------*   31\n         END                                                              32\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SVCLIST": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x01f\\x01f\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:55", "lines": 358, "newlines": 358, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|   FUNCTION:                                                        |    2\n*|      PRINT SVC ROUTINE ADDRESSES AND ATTRIBUTES.                   |    3\n*|   INPUTS:                                                          |    4\n*|      NONE                                                          |    5\n*|   OUTPUTS:                                                         |    6\n*|      PRINTED LIST OF SVC TO FILE WITH DDNAME=PRINT                 |    7\n*|   PROGRAM LOGIC:                                                   |    8\n*|      1) SET UP REENTRANT QSAM I/O; OPEN OUTPUT FILE.               |    9\n*|      2) USE NUCLKUP TO FIND ADDRESS OF IGCERROR (UNUSED SVC ENTRY).|   10\n*|      3) LOCATE THE SVCTABLE.                                       |   11\n*|      4) LOOP THROUGH SVC TABLE ENTRIES, PRINTING ENTRY POINTS      |   12\n*|         AND ROUTINE ATTRIBUTES.                                    |   13\n*|      5) PRINT THE ADDRESS OF IGCERROR.                             |   14\n*|      6) CLOSE OUTPUT FILE.                                         |   15\n*|   MODULES CALLED:                                                  |   16\n*|      NONE                                                          |   17\n*|   ATTRIBUTES:                                                      |   18\n*|      AMODE 31, RMODE 24, REENTRANT, USES ESA-ONLY INSTRUCTIONS.    |   19\n*+--------------------------------------------------------------------+   20\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE SVCLIST,BASE=12,LOC=BELOW,AMODE=31,RMODE=24,           X  21\n               TEXT='PRINT SVC TABLE'                                     22\n*        *---------------------------------------*                        23\n*        *     SET UP OUTPUT FILE AND OPEN       *                        24\n*        *---------------------------------------*                        25\n         MVC   PRINT(LPRINT),MPRINT    COPY DCB TO REENTRANT AREA         26\n         MVC   OLIST(LOLIST),MOLIST    COPY OPEN LIST TO REENTRANT AREA   27\n         OPEN  (PRINT,OUTPUT),MF=(E,OLIST)      OPEN PRINT FILE           28\n         MVI   OUTLINE,X'40'                    ..INITIALIZE PRINT LINE   29\n         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE   ..TO SPACES               30\n         ZAP   SVCCNTR,=P'0'           INITIALIZE SVC COUNTER             31\n         ZAP   LINECNT,=P'99'          INITIALIZE LINE COUNTER            32\n*        *---------------------------------------*                        33\n*        *     GET ADDRESS OF UNUSED SVC         *                        34\n*        *     ENTRY POINT IN MVS NUCLEUS        *                        35\n*        *---------------------------------------*                        36\n         NUCLKUP BYNAME,NAME=NUCMOD,ADDR=(0)                              37\n         N     R0,HIGHOFF              TURN OFF HIGH ORDER BIT            38\n         ST    R0,NULL                 SAVE THE ADDRESS                   39\n*        *---------------------------------------*                        40\n*        *     LOCATE THE SVC TABLE              *                        41\n*        *---------------------------------------*                        42\n         L     R3,CVTPTR               ADDRESS OF THE CVT                 43\n         L     R3,CVTABEND-CVT(R3)     ADDRESS OF THE SCVT                44\n         L     R3,SCVTSVCT-SCVTSECT(R3)  ADDRESS OF THE SVC TABLE         45\n         USING SVC,R3                  MAP THE SVC TABLE                  46\n*---------------------------------------------------------------------*   47\n*        LOOP THRU SVC TABLE FORMATTING AND PRINTING                  *   48\n*---------------------------------------------------------------------*   49\n         LA    R4,256                  NUMBER SVCTABLE ENTRIES            50\nMAINLOOP DS    0H                                                         51\n         CP    LINECNT,PAGEMAX         END OF PAGE ?                      52\n         BL    NOHEAD                  NO; CONTINUE                       53\n         BAS   R14,HEADRTN             CALL HEADING RTN                   54\n         ZAP   LINECNT,=P'0'           ZERO LINE COUNTER                  55\nNOHEAD   DS    0H                                                         56\n         ICM   R1,B'1111',SVCEP        ENTRY POINT FROM TABLE             57\n         N     R1,HIGHOFF              TURN OFF HIGH ORDER BIT            58\n         CL    R1,NULL                 NO SVC ?                           59\n         BNE   ISOKSVC                 NO; PROCESS TABLE ENTRY            60\n*                                      MOVE \"UNUSED\" TO ADDRESS           61\n         MVC   OUTADDR+1(L'UNUSED),UNUSED                                 62\n         B     CKTYPE                  ADD REST OF ENTRY                  63\nISOKSVC  DS    0H                                                         64\n         ICM   R0,15,SVCEP             ROUTINE ADDRESS IN TABLE           65\n         LA    R1,OUTADDR              ADDRESS OF PRINTING AREA           66\n         BAS   R14,HEXOUT              CONVERT TO PRINTING CHARS          67\nCKTYPE   DS    0H                                                         68\n*        *---------------------------------------*                        69\n*        *     DETERMINE SVC TYPE                *                        70\n*        *---------------------------------------*                        71\n         MVC   TESTBYTE,SVCTYP         TYPE BITS TO WORK AREA             72\n         NI    TESTBYTE,X'F0'          MASK OFF ALL BUT TYPE BITS         73\n         CLI   TESTBYTE,SVCTP1         TYPE1 ?                            74\n         BNE   NTYP1                   NO; TEST OTHER TYPES               75\n         MVI   OUTTYPE+1,C'1'          MOVE TYPE TO OUTPUT LINE           76\n         B     ENDTYPE                 CHECK OTHER ATTRIBUTES             77\nNTYP1    DS    0H                                                         78\n         CLI   TESTBYTE,SVCTP2         TYPE2 ?                            79\n         BNE   NTYP2                   NO; TEST OTHER TYPES               80\n         MVI   OUTTYPE+1,C'2'          MOVE TYPE TO OUTPUT LINE           81\n         B     ENDTYPE                 CHECK OTHER ATTRIBUTES             82\nNTYP2    DS    0H                                                         83\n         CLI   TESTBYTE,SVCTP34        TYPE3 OR TYPE 4 ?                  84\n         BNE   NTP34                   NO; TEST OTHER TYPES               85\n         MVC   OUTTYPE+1(L'TP34),TP34  MOVE TYPE TO OUTPUT LINE           86\n         B     ENDTYPE                 CHECK OTHER ATTRIBUTES             87\nNTP34    DS    0H                                                         88\n         CLI   TESTBYTE,SVCTP6         TYPE6 ?                            89\n         BNE   NTYP6                   NO; TEST OTHER TYPES               90\n         MVI   OUTTYPE+1,C'6'          MOVE TYPE TO OUTPUT LINE           91\n         B     ENDTYPE                 CHECK OTHER ATTRIBUTES             92\nNTYP6    DS    0H                                                         93\n         MVI   OUTTYPE+1,C'U'          UNKNOWN TYPE                       94\nENDTYPE  DS    0H                                                         95\n*        *---------------------------------------*                        96\n*        *     DETERMINE OTHER ATTRIBUTES        *                        97\n*        *---------------------------------------*                        98\n         TM    SVCTYP,SVCAPF           APF AUTHORIZATION REQUIRED ?       99\n         BZ    NAPF                    NO; DO NOT INDICATE               100\n         MVI   OUTAPF+1,C'X'           INDICATE                          101\nNAPF     DS    0H                                                        102\n         TM    SVCTYP,SVCESR           ESR ?                             103\n         BZ    NESR                    NO; DO NOT INDICATE               104\n         MVI   OUTESR+1,C'X'           INDICATE                          105\nNESR     DS    0H                                                        106\n         TM    SVCTYP,SVCNP            NON PRE-EMPTIVE SVC ?             107\n         BZ    NNP                     NO; DO NOT INDICATE               108\n         MVI   OUTNP+1,C'X'            INDICATE                          109\nNNP      DS    0H                                                        110\n         TM    SVCTYP,SVCASF           CAN BE ASSISTED ?                 111\n         BZ    NASF                    NO; DO NOT INDICATE               112\n         MVI   OUTASF+1,C'X'           INDICATE                          113\nNASF     DS    0H                                                        114\n*        *---------------------------------------*                       115\n*        *     DETERMINE OBTAINED LOCKS          *                       116\n*        *---------------------------------------*                       117\n         TM    SVCLOCKS,SVCLL          LOCAL LOCK ?                      118\n         BZ    NLL                     NO; DO NOT INDICATE               119\n         MVI   OUTLL+1,C'X'            INDICATE                          120\nNLL      DS    0H                                                        121\n         TM    SVCLOCKS,SVCCMS         CMS LOCK ?                        122\n         BZ    NCMS                    NO; DO NOT INDICATE               123\n         MVI   OUTCMS+1,C'X'           INDICATE                          124\nNCMS     DS    0H                                                        125\n         TM    SVCLOCKS,SVCOPT         OPT LOCK ?                        126\n         BZ    NOPT                    NO; DO NOT INDICATE               127\n         MVI   OUTOPT+1,C'X'           INDICATE                          128\nNOPT     DS    0H                                                        129\n         TM    SVCLOCKS,SVCALLOC       ALLOC LOCK ?                      130\n         BZ    NALLOC                  NO; DO NOT INDICATE               131\n         MVI   OUTALLOC+1,C'X'         INDICATE                          132\nNALLOC   DS    0H                                                        133\n         TM    SVCLOCKS,SVCDISP        DISP LOCK ?                       134\n         BZ    NDISP                   NO; DO NOT INDICATE               135\n         MVI   OUTDISP+1,C'X'          INDICATE                          136\nNDISP    DS    0H                                                        137\n         MVC   OUTCNT(L'PATTERN),PATTERN  ..MOVE EDIT PATTERN TO         138\n         ED    OUTCNT(L'PATTERN),SVCCNTR  ..OUTPUT AND EDIT SVC NUMBER   139\n         BAS   R14,PRINTIT             PRINT THE LINE                    140\n         LA    R3,SVCLENT(R3)          POINT AT NEXT SVCTABLE ENTRY      141\n         AP    SVCCNTR,=P'1'           ADD 1 TO SVC NUMBER               142\n         AP    LINECNT,=P'1'           ADD 1 TO LINE COUNTER             143\n         BCT   R4,MAINLOOP             PROCESS NEXT SVC TABLE ENTRY      144\n*---------------------------------------------------------------------*  145\n*        END OF LOOP THROUGH SVC TABLE ENTRIES                        *  146\n*---------------------------------------------------------------------*  147\n*        *---------------------------------------*                       148\n*        *     PRINT ADDRESS OF IGCERROR         *                       149\n*        *---------------------------------------*                       150\n         MVI   CONTROL,TRIPLE          TRIPLE SPACE                      151\n         MVC   OUTADDR(L'IGCER),IGCER  MOVE LITERAL TO OUTPUT LINE       152\n         ICM   R0,15,NULL              ADDRESS OF IGCERROR               153\n         LA    R1,OUTADDR+L'IGCER      ADDRESS OF PRINTING AREA          154\n         BAS   R14,HEXOUT              MAKE INTO DISPLAY FORMAT          155\n         BAS   R14,PRINTIT             PRINT THE LINE                    156\n*        *---------------------------------------*                       157\n*        *     CLOSE PRINT FILE                  *                       158\n*        *---------------------------------------*                       159\n         CLOSE ,MF=(E,OLIST)           CLOSE THE FILE                    160\n         B     EXIT00                                                    161\n*---------------------------------------------------------------------*  162\n*        HEXOUT - CONVERT HEX FULLWORD TO 8 BYTES CHARACTER HEX       *  163\n*                 INPUT:  R0 - 4 BYTES OF HEX                         *  164\n*                         R1 - ADDRESS OF 8 BYTE OUTPUT FIELD         *  165\n*                 OUTPUT: CHARACTER FORMAT AT ADDRESS IN R1           *  166\n*---------------------------------------------------------------------*  167\nHEXOUT   DS    0H                                                        168\n         BAKR  R14,0                   PUSH ENVIRNONMENT ONTO STACK      169\n         LA    R1,8(R1)                ADDRESS LAST BYTE + 1 OF OUTPUT   170\n         LA    R2,8                    LENGTH OF OUTPUT FIELD            171\nADDRLOOP DS    0H                                                        172\n         BCTR  R1,0                    POINT AT PREVIOUS BYTE            173\n         STC   R0,0(R1)                LAST BYTE OF INPUT FIELD          174\n         NI    0(R1),X'0F'             MASK OFF HIGH ORDER BITS          175\n         SRL   R0,4                    SHIFT OFF LOW ORDER BITS          176\n         BCT   R2,ADDRLOOP             BRANCH TO PUT IN OUTPUT           177\n         TR    0(8,R1),=C'0123456789ABCDEF'   TRANSLATE OUTPUT           178\n         PR                            POP STACK AND RETURN TO CALLER    179\n*---------------------------------------------------------------------*  180\n*        HEADRTN - PRINT HEADINGS                                     *  181\n*---------------------------------------------------------------------*  182\nHEADRTN  DS    0H                                                        183\n         BAKR  R14,0                   PUSH ENVIRNONMENT ONTO STACK      184\n         MVI   CONTROL,NEWPAGE         SET NEW PAGE                      185\n         MVC   OUTLINE+55(L'HD1),HD1   MOVE PAGE HEADING                 186\n         BAS   R14,PRINTIT             PRINT PAGE HEADING                187\n         MVI   CONTROL,DOUBLE          DOUBLE SPACE                      188\n         MVC   OUTCNT(L'LCNT),LCNT        ... MOVE COLUMN HEADINGS       189\n         MVC   OUTADDR(L'LADDR),LADDR     ...                            190\n         MVC   OUTTYPE(L'LTYPE),LTYPE     ...                            191\n         MVC   OUTAPF(L'LAPF),LAPF        ...                            192\n         MVC   OUTESR(L'LESR),LESR        ...                            193\n         MVC   OUTNP(L'LNP),LNP           ...                            194\n         MVC   OUTASF(L'LASF),LASF        ...                            195\n         MVC   OUTLL(L'LLL),LLL           ...                            196\n         MVC   OUTCMS(L'LCMS),LCMS        ...                            197\n         MVC   OUTOPT(L'LOPT),LOPT        ...                            198\n         MVC   OUTALLOC(L'LALLOC),LALLOC  ...                            199\n         MVC   OUTDISP(L'LDISP),LDISP     ... MOVE COLUMN HEADINGS       200\n         BAS   R14,PRINTIT              PRINT COLUMN HEADINGS            201\n         MVC   OUTCNT(L'OUTCNT),DASH      ... MOVE DASHES OVER COLUMN    202\n         MVC   OUTADDR(L'OUTADDR),DASH    ...                            203\n         MVC   OUTTYPE(L'OUTTYPE),DASH    ...                            204\n         MVC   OUTAPF(L'OUTAPF),DASH      ...                            205\n         MVC   OUTESR(L'OUTESR),DASH      ...                            206\n         MVC   OUTNP(L'OUTNP),DASH        ...                            207\n         MVC   OUTASF(L'OUTASF),DASH      ...                            208\n         MVC   OUTLL(L'OUTLL),DASH        ...                            209\n         MVC   OUTCMS(L'OUTCMS),DASH      ...                            210\n         MVC   OUTOPT(L'OUTOPT),DASH      ...                            211\n         MVC   OUTALLOC(L'OUTALLOC),DASH  ...                            212\n         MVC   OUTDISP(L'OUTDISP),DASH    ... MOVE DASHES OVER COLUMN    213\n         BAS   R14,PRINTIT             PRINT DASHES                      214\n         MVI   CONTROL,DOUBLE          SET DOUBLE SPACE                  215\n         PR                            POP STACK AND RETURN TO CALLER    216\n*---------------------------------------------------------------------*  217\n*        PRINTIT - PRINT AN OUTPUT LINE                               *  218\n*---------------------------------------------------------------------*  219\nPRINTIT  DS    0H                                                        220\n         BAKR  R14,0                   PUSH ENVIRNONMENT ONTO STACK      221\n         PUT24 PRINT,OUTLINE,REG=3     PRINT THE OUTPUT LINE             222\n         MVI   OUTLINE,X'40'                    ..INITIALIZE PRINT LINE  223\n         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE   ..TO SPACES              224\n         PR                            POP STACK AND RETURN TO CALLER    225\n*---------------------------------------------------------------------*  226\n*        EXIT ROUTINES                                                *  227\n*---------------------------------------------------------------------*  228\nEXIT00   DS    0H                      SUCCESSFUL COMPLETION             229\n         LA    R15,X'00'                                                 230\n         B     EXIT                                                      231\n*---------------------------------------------------------------------*  232\n*        COMMON EXIT                                                  *  233\n*---------------------------------------------------------------------*  234\nEXIT     DS   0H                                                         235\n         ENDMOD                                                          236\n*---------------------------------------------------------------------*  237\n*        CONSTANTS                                                    *  238\n*---------------------------------------------------------------------*  239\nHIGHOFF  DC    A(X'7FFFFFFF')          TURN OFF HIGH ORDER BIT  MASK     240\nNUCMOD   DC    CL8'IGCERROR'           MODULE NAME FOR NUCLEUS LOOKUP    241\nUNUSED   DC    C'UNUSED'               LITERAL FOR UNUSED SVC            242\nPAGEMAX  DC    PL2'50'                 MAXIMUM LINES/PAGE                243\nPATTERN  DC    X'40202120'             EDIT PATTERN FOR SVC NUMBER       244\nHD1      DC    C'DUMP OF SVC TABLE'    HEADING                           245\nDASH     DC    C'----------------------------'                           246\nLCNT     DC    C'SVC #'                ...FIELDS USED IN PAGE HEADERS    247\nLADDR    DC    C'ADDRESS'              ...                               248\nLTYPE    DC    C'TYPE'                 ...                               249\nLAPF     DC    C'APF'                  ...                               250\nLESR     DC    C'ESR'                  ...                               251\nLNP      DC    C'NP'                   ...                               252\nLASF     DC    C'ASF'                  ...                               253\nLLL      DC    C'LCL'                  ...                               254\nLCMS     DC    C'CMS'                  ...                               255\nLOPT     DC    C'OPT'                  ...                               256\nLALLOC   DC    C'ALLC'                 ...                               257\nLDISP    DC    C'DISP'                 ...                               258\nTP34     DC    C'3 OR 4'               TYPE 3 OR 4 LITERAL               259\nIGCER    DC    C'ADDRESS OF IGCERROR (UNUSED SVC) = '                    260\n*---------------------------------------------------------------------*  261\n*        DCB AND OPEN/CLOSE PARAMETER LIST MODELS                     *  262\n*---------------------------------------------------------------------*  263\n         PRINT NOGEN                                                     264\nMPRINT   DCB   DDNAME=PRINT,DSORG=PS,LRECL=133,RECFM=FBA,MACRF=PM        265\nLPRINT   EQU   *-MPRINT                LENGTH OF THE DCB                 266\n         PRINT GEN                                                       267\nMOLIST   OPEN  (,),MF=L                OPEN/CLOSE PARMLIST               268\nLOLIST   EQU   *-MOLIST                LENGTH OF OPEN/CLOSE PARMLIST     269\n*---------------------------------------------------------------------*  270\n*        WORK AREA                                                    *  271\n*---------------------------------------------------------------------*  272\nWSVCLIST DSECT                                                           273\nNULL     DS    F                       A(UNUSED SVC)                     274\nPRINT    DS    CL(LPRINT)              PRINT                             275\nOLIST    DS    CL(LOLIST)              LIST FOR OPEN                     276\nTESTBYTE DS    X                       WORK BYTE                         277\nSVCCNTR  DS    PL2                     SVC NUMBER COUNTER                278\nLINECNT  DS    PL2                     LINE COUNTER                      279\nOUTLINE  DS    CL133                   OUTPUT LINE                       280\nCONTROL  EQU   OUTLINE,1               PRINT CONTROL CHARACTER           281\nNEWPAGE  EQU   C'1'                    ANSI PRINT CNTL - NEW PAGE        282\nSINGLE   EQU   X'40'                   ANSI PRINT CNTL - SINGLE SPACE    283\nDOUBLE   EQU   C'0'                    ANSI PRINT CNTL - DOUBLE SPACE    284\nTRIPLE   EQU   C'-'                    ANSI PRINT CNTL - TRIPLE SPACE    285\n*        *---------------------------------------*                       286\n*        *     PRINT LINE FORMAT                 *                       287\n*        *---------------------------------------*                       288\nOUTCNT   EQU   OUTLINE+7,8             SVC NUMBER                        289\nOUTADDR  EQU   OUTLINE+20,8            ADDRESS SVC ROUTINE               290\nOUTTYPE  EQU   OUTLINE+30,8            TYPE SVC ROUTINE                  291\nOUTAPF   EQU   OUTLINE+43,4            ...ATTRIBUTES OF SVC ROUTINE      292\nOUTESR   EQU   OUTLINE+48,4            ...                               293\nOUTNP    EQU   OUTLINE+53,4            ...                               294\nOUTASF   EQU   OUTLINE+58,4            ...                               295\nOUTLL    EQU   OUTLINE+73,4            ...                               296\nOUTCMS   EQU   OUTLINE+78,4            ...                               297\nOUTOPT   EQU   OUTLINE+83,4            ...                               298\nOUTALLOC EQU   OUTLINE+88,4            ...                               299\nOUTDISP  EQU   OUTLINE+93,4            ...                               300\nLSVCLIST EQU   *-WSVCLIST              LENGTH OF THE WORK AREA           301\n*---------------------------------------------------------------------*  302\n*        MAP SVCTABLE ENTRY                                           *  303\n*---------------------------------------------------------------------*  304\nSVC      DSECT                                                           305\nSVCENTRY EQU   *                                                         306\nSVCEP    DS    AL4                     ENTRY POINT OF SVC ROUTINE        307\nSVCATTR1 DS    0XL2                    ATTRIBUTE BYTES                   308\nSVCTYP   DS    X                       SVC TYPE                          309\nSVCTP1   EQU   B'00000000'             TYPE 1                            310\nSVCTP2   EQU   B'10000000'             TYPE 2                            311\nSVCTP34  EQU   B'11000000'             TYPE 3 OR 4                       312\nSVCTP6   EQU   B'00100000'             TYPE 6                            313\nSVCAPF   EQU   B'00001000'             REQUIRES APF AUTHORIZATION        314\nSVCESR   EQU   B'00000100'             ESR                               315\nSVCNP    EQU   B'00000010'             NON-PREEMPTIBLE                   316\nSVCASF   EQU   B'00000001'             ASF                               317\nSVCRESV1 DS    X                       RESERVED                          318\nSVCLOCKS DS    XL2                     LOCKS                             319\nSVCLL    EQU   B'10000000'             LOCAL LOCK                        320\nSVCCMS   EQU   B'01000000'             CMS LOCK                          321\nSVCOPT   EQU   B'00100000'                                               322\nSVCALLOC EQU   B'00010000'             SALLOC  LOCK                      323\nSVCDISP  EQU   B'00001000'             DISP LOCK                         324\nSVCLENT  EQU   *-SVC                   LENGTH OF AN SVCTABLE ENTRY       325\n*---------------------------------------------------------------------*  326\n*        OTHER DSECTS                                                 *  327\n*---------------------------------------------------------------------*  328\n         PRINT NOGEN                                                     329\n         CVT DSECT=YES,LIST=NO                                           330\n         IHASCVT                                                         331\n         END                                                             332\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYSIN01B": {"ttr": 4104, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\x0c\\x00\\x0c\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:03", "lines": 12, "newlines": 12, "modlines": 0, "user": "MVSPP"}, "text": "LU=........\nTYPE=RECEIVE\nFILETYPE=FILE\nFILEOPT=REPLACE\nLFILE=@JCL@(ALLOC)\nFILE=A:\\ALLOC.JCL\nNEWXFER\nLFILE=@JCL@(ASMLKD)\nFILE=A:\\ASMLKD.JCL\nNEWXFER\nLFILE=@JCL@(EXEC)\nFILE=A:\\EXEC.JCL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSIN01C": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xa8\\x00\\xa8\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:08", "lines": 168, "newlines": 168, "modlines": 0, "user": "MVSPP"}, "text": "LU=........\nTYPE=RECEIVE\nFILETYPE=FILE\nFILEOPT=REPLACE\nLFILE=@SOURCE@(ANCHOR)\nFILE=A:\\ANCHOR.ASM\nNEWXFER\nLFILE=@SOURCE@(BLDIRB)\nFILE=A:\\BLDIRB.ASM\nNEWXFER\nLFILE=@SOURCE@(CKXTALK)\nFILE=A:\\CKXTALK.ASM\nNEWXFER\nLFILE=@SOURCE@(DSPACE)\nFILE=A:\\DSPACE.ASM\nNEWXFER\nLFILE=@SOURCE@(DSPFIND)\nFILE=A:\\DSPFIND.ASM\nNEWXFER\nLFILE=@SOURCE@(DSPUT)\nFILE=A:\\DSPUT.ASM\nNEWXFER\nLFILE=@SOURCE@(DYNAL)\nFILE=A:\\DYNAL.ASM\nNEWXFER\nLFILE=@SOURCE@(EDEBUG)\nFILE=A:\\EDEBUG.ASM\nNEWXFER\nLFILE=@SOURCE@(ESAMOVE)\nFILE=A:\\ESAMOVE.ASM\nNEWXFER\nLFILE=@SOURCE@(ESAMVPC)\nFILE=A:\\ESAMVPC.ASM\nNEWXFER\nLFILE=@SOURCE@(ESFRAME)\nFILE=A:\\ESFRAME.ASM\nNEWXFER\nLFILE=@SOURCE@(GETASCB)\nFILE=A:\\GETASCB.ASM\nNEWXFER\nLFILE=@SOURCE@(HEXPRT)\nFILE=A:\\HEXPRT.ASM\nNEWXFER\nLFILE=@SOURCE@(HOOKDRV)\nFILE=A:\\HOOKDRV.ASM\nNEWXFER\nLFILE=@SOURCE@(HOOKIN)\nFILE=A:\\HOOKIN.ASM\nNEWXFER\nLFILE=@SOURCE@(HOOKSVC)\nFILE=A:\\HOOKSVC.ASM\nNEWXFER\nLFILE=@SOURCE@(IRBRTN)\nFILE=A:\\IRBRTN.ASM\nNEWXFER\nLFILE=@SOURCE@(MFRAME)\nFILE=A:\\MFRAME.ASM\nNEWXFER\nLFILE=@SOURCE@(NCRYPT)\nFILE=A:\\NCRYPT.ASM\nNEWXFER\nLFILE=@SOURCE@(NSWPRTN)\nFILE=A:\\NSWPRTN.ASM\nNEWXFER\nLFILE=@SOURCE@(PCPERM)\nFILE=A:\\PCPERM.ASM\nNEWXFER\nLFILE=@SOURCE@(PCSET)\nFILE=A:\\PCSET.ASM\nNEWXFER\nLFILE=@SOURCE@(PGMNAME)\nFILE=A:\\PGMNAME.ASM\nNEWXFER\nLFILE=@SOURCE@(PRTMOD)\nFILE=A:\\PRTMOD.ASM\nNEWXFER\nLFILE=@SOURCE@(REPMOD)\nFILE=A:\\REPMOD.ASM\nNEWXFER\nLFILE=@SOURCE@(SCHDSRB)\nFILE=A:\\SCHDSRB.ASM\nNEWXFER\nLFILE=@SOURCE@(SUBTSK)\nFILE=A:\\SUBTSK.ASM\nNEWXFER\nLFILE=@SOURCE@(SVCLIST)\nFILE=A:\\SVCLIST.ASM\nNEWXFER\nLFILE=@SOURCE@(TSCHD1)\nFILE=A:\\TSCHD1.ASM\nNEWXFER\nLFILE=@SOURCE@(UNANCH)\nFILE=A:\\UNANCH.ASM\nNEWXFER\nLFILE=@SOURCE@(XAFRAME)\nFILE=A:\\XAFRAME.ASM\nNEWXFER\nLFILE=@SOURCE@(XAMOVE)\nFILE=A:\\XAMOVE.ASM\nNEWXFER\nLFILE=@SOURCE@(XASAC)\nFILE=A:\\XASAC.ASM\nNEWXFER\nLFILE=@SOURCE@(XTALK)\nFILE=A:\\XTALK.ASM\nNEWXFER\nLFILE=@MACLIB@(ANKPRM)\nFILE=A:\\ANKPRM.MAC\nNEWXFER\nLFILE=@MACLIB@(CALLPC)\nFILE=A:\\CALLPC.MAC\nNEWXFER\nLFILE=@MACLIB@(DSPTBLE)\nFILE=A:\\DSPTBLE.MAC\nNEWXFER\nLFILE=@MACLIB@(DYNPRM)\nFILE=A:\\DYNPRM.MAC\nNEWXFER\nLFILE=@MACLIB@(ENDMOD)\nFILE=A:\\ENDMOD.MAC\nNEWXFER\nLFILE=@MACLIB@(EQUATES)\nFILE=A:\\EQUATES.MAC\nNEWXFER\nLFILE=@MACLIB@(GET24)\nFILE=A:\\GET24.MAC\nNEWXFER\nLFILE=@MACLIB@(GETPRM)\nFILE=A:\\GETPRM.MAC\nNEWXFER\nLFILE=@MACLIB@(HOOKPRE)\nFILE=A:\\HOOKPRE.MAC\nNEWXFER\nLFILE=@MACLIB@(HOOKPRM)\nFILE=A:\\HOOKPRM.MAC\nNEWXFER\nLFILE=@MACLIB@(INNERMM)\nFILE=A:\\INNERMM.MAC\nNEWXFER\nLFILE=@MACLIB@(MODULE)\nFILE=A:\\MODULE.MAC\nNEWXFER\nLFILE=@MACLIB@(PCSERV)\nFILE=A:\\PCSERV.MAC\nNEWXFER\nLFILE=@MACLIB@(PERCRC)\nFILE=A:\\PERCRC.MAC\nNEWXFER\nLFILE=@MACLIB@(PPGNM)\nFILE=A:\\PPGNM.MAC\nNEWXFER\nLFILE=@MACLIB@(PUT24)\nFILE=A:\\PUT24.MAC\nNEWXFER\nLFILE=@MACLIB@(SCHDPRM)\nFILE=A:\\SCHDPRM.MAC\nNEWXFER\nLFILE=@MACLIB@(SRBPRM)\nFILE=A:\\SRBPRM.MAC\nNEWXFER\nLFILE=@MACLIB@(XMSESA)\nFILE=A:\\XMSESA.MAC\nNEWXFER\nLFILE=@MACLIB@(XMSXA)\nFILE=A:\\XMSXA.MAC\nNEWXFER\nLFILE=@MACLIB@(XTOC)\nFILE=A:\\XTOC.MAC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSCHD1": {"ttr": 4353, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00D\\x00D\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:13", "lines": 68, "newlines": 68, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|    TEST DRIVER FOR SCHDSRB (SRB SCHEDULER).                        |    3\n*|  INPUTS:                                                           |    4\n*|    NONE                                                            |    5\n*|  OUTPUTS:                                                          |    6\n*|    RETURN CODE FROM SCHDSRB                                        |    7\n*|  LOGIC:                                                            |    8\n*|    1) BUILD PARMLIST FOR SCHDSRB                                   |    9\n*|    2) LOAD SCHDSRB                                                 |   10\n*|    3) INVOKE SCHDSRB                                               |   11\n*|  FUNCTION:                                                         |   12\n*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF AUTHORIZATION      |   13\n*+--------------------------------------------------------------------+   14\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE TSCHD1,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  15\n               TEXT='TEST DRIVER FOR SCHDSRB '                            16\n         LA    R3,PARMLIST             LOAD ADDRESS OF SCHDSRB PARMLIST   17\n         USING SCHDPRM,R3              MAP PARMLIST                       18\n         MVC   SCHTASID,=CL8'addrspc'  TARGET ADDRESS SPACE NAME          19\n         MVC   SCHNAME,=CL8'NSWPRTN'   NAME OF SRB ROUTINE                20\n         LOAD  EP=SCHDSRB              LOAD THE SRB SCHEDULING ROUTINE    21\n         LR    R15,R0                  ADDRESS OF THE ROUTINE TO R15      22\n         O     R15,=A(X'80000000')     FORCE 31 BIT ENTRY TO SCHEDULER    23\n         LA    R1,PARMLIST             ADDRESS OF THE PARMLIST TO R1      24\n         BASSM R14,15                  INVOKE THE ROUTINE                 25\n         B     EXIT                    BRANCH TO EXIT ROUTINE             26\n*---------------------------------------------------------------------*   27\n*        COMMON EXIT                                                  *   28\n*---------------------------------------------------------------------*   29\nEXIT     DS   0H                                                          30\n         ENDMOD                        RESTORE REGISTERS AND RETURN       31\n*---------------------------------------------------------------------*   32\n*        WORK AREA                                                    *   33\n*---------------------------------------------------------------------*   34\nWTSCHD1  DSECT                                                            35\nPARMLIST DS    0F,CL(SCHDPRML)         PARMLIST FOR SCHDSRB               36\nLTSCHD1  EQU   *-WTSCHD1               LENGTH OF THE WORK AREA            37\n*---------------------------------------------------------------------*   38\n*        OTHER DSECTS                                                 *   39\n*---------------------------------------------------------------------*   40\n         SCHDPRM                       MAP PARMLIST FOR SCHDSRB           41\n         END                                                              42\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "UNANCH": {"ttr": 4355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xce\\x00\\xce\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:18", "lines": 206, "newlines": 206, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|      REMOVE A CONTROL BLOCK ANCHORED IN AN LPAQ CDE.               |    3\n*|  LOGIC:                                                            |    4\n*|      1)  SEARCH CDE'S ON LINK-PACK-AREA-QUEUE CHOSEN CDE.          |    5\n*|      2)  IF NOT FOUND, EXIT.                                       |    6\n*|      3)  VERIFY THAT ENTRY POINT MODULE CHOSEN.                    |    7\n*|      4)  GET THE LOCAL AND CMS LOCKS TO SERIALIZE LPAQ.            |    8\n*|      4)  SCAN THE LPAQ FOR THE CDE PREVIOUS IN THE CHAIN           |    9\n*|      5)  UNCHAIN THE CDE FROM THE LPAQ.                            |   10\n*|      6)  (FREEMAIN STORAGE FOR TABLE, CDE AND XL)                  |   11\n*|      7)  RELEASE ALL LOCKS                                         |   12\n*|  INPUTS:                                                           |   13\n*|      R1 - ADDRESS OF PARMLIST MAPPED BY ANKPRM MACRO.              |   14\n*|  OUTPUTS:                                                          |   15\n*|      R15 - RETURN CODE                                             |   16\n*|            0 = CDE HAS BEEN UNCHAINED OR DOES NOT EXIST            |   17\n*|            8 = EYECATCHER VERIFICATION FAILED                      |   18\n*|           12 = FREEMAIN FAILED FOR MODULE.                         |   19\n*|           16 = FREEMAIN FAILED FOR CDE                             |   20\n*|           20 = FREEMAIN FAILED FOR EXTENT LIST                     |   21\n*|  ATTRIBUTES:                                                       |   22\n*|      AMODE 31, RMODE ANY, REENTRANT                                |   23\n*|      CALLER MUST BE IN PRIMARY SPACE MODE                          |   24\n*+--------------------------------------------------------------------+   25\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE UNANCH,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  26\n               TEXT='UNCHAIN CONTROL BLOCK ON LPAQ'                       27\n*        *---------------------------------------*                        28\n*        *     MAP CONTROL BLOCKS USED           *                        29\n*        *---------------------------------------*                        30\n         USING CVT,R3                  MAP CVT                            31\n         USING CDENTRY,R4              MAP CDE                            32\n         USING XTLST,R6                MAP EXTENT LIST                    33\n         USING ANKPRM,R10              MAP PARMLIST                       34\n         LR    R10,R1                  A(PARMLIST) => R10                 35\n*---------------------------------------------------------------------*   36\n*        SCAN LINK PACK AREA QUEUE FOR CDE CONTAINING MODULE ANCHOR   *   37\n*---------------------------------------------------------------------*   38\n         L     R3,CVTPTR               A(CVT) => R3                       39\n         LA    R9,ANKNAME              A(MODULE NAME) => R9               40\n         L     R8,CVTQLPAQ             HEAD OF LPAQ => R8                 41\n         L     R15,CVTQCDSR            A(LPAQ SCAN ROUTINE)               42\n         BALR  R14,R15                 INVOKE LPAQ SCAN ROUTINE           43\n         B     FNDCDE                  CDE FOUND; BRANCH TO PROCESS CDE   44\n         B     EXIT00                  CDE NOT FOUND; EXIT                45\n*---------------------------------------------------------------------*   46\n*        IF CDE FOUND, CHECK STORAGE IT POINTS TO FOR EYECATCHER      *   47\n*---------------------------------------------------------------------*   48\nFNDCDE   DS    0H                                                         49\n         LR    R4,R11                  A( CDE ) FROM CVTQCDSR ROUTINE     50\n         ST    R11,ADCDE               SAVE ADDRESS OF CDE                51\n         TM    ANKFLAG1,@ANKVFY        VERIFY THE STORAGE ?               52\n         BNO   NOVFY                   NO; SKIP VERIFICATION              53\n         L     R5,CDENTPT              ENTRY POINT FROM CDE => R5         54\n         CLC   0(L'ANKEYE,R5),ANKEYE   IS EYCATCHER FIRST BYTES IN STG?   55\n         BNE   EXIT08                  NO; EXIT                           56\nNOVFY    DS    0H                                                         57\n         MODESET MODE=SUP,KEY=ZERO     GET SUPERVISOR/KEY 0 PSW           58\n*        *---------------------------------------*                        59\n*        *      GET THE LOCAL LOCK               *                        60\n*        *---------------------------------------*                        61\n         SETLOCK OBTAIN,                                               X  62\n               MODE=UNCOND,                                            X  63\n               TYPE=LOCAL,                                             X  64\n               REGS=USE,                                               X  65\n               RELATED=REQUIRED                                           66\n*        *---------------------------------------*                        67\n*        *      GET CMS LOCK                     *                        68\n*        *---------------------------------------*                        69\n         SETLOCK OBTAIN,                                               X  70\n               MODE=UNCOND,                                            X  71\n               TYPE=CMS,                                               X  72\n               REGS=USE,                                               X  73\n               RELATED=REQUIRED                                           74\n*---------------------------------------------------------------------*   75\n*        FIND PREVIOUS CDE IN LPAQ                                    *   76\n*---------------------------------------------------------------------*   77\n         L     R4,CVTQLPAQ             HEAD OF LPAQ => R8                 78\n         LA    R5,CDCHAIN-CDENTRY      .. BACK UP FOR DISPLACEMENT        79\n         SLR   R4,R5                   .. IN CDE TO CHAIN FIELD           80\nSCDLP    DS    0H                                                         81\n         CLC   CDCHAIN(L'CDCHAIN),ADCDE DOES THIS POINT TO OUR CDE?       82\n         BE    FNDPREV                 YES; THIS IS THE PREVIOUS CDE      83\n         ICM   R4,15,CDCHAIN           POINT AT NEXT CDE                  84\n         BNZ   SCDLP                   CHECK CHAIN FIELD IN NEXT CDE      85\n         ABEND 123                                                        86\n*---------------------------------------------------------------------*   87\n*        UNCHAIN CDE FROM LPAQ                                        *   88\n*---------------------------------------------------------------------*   89\nFNDPREV  DS    0H                                                         90\n         L     R5,ADCDE                ADDRESS OF TARGET CDE              91\n         L     R5,CDCHAIN-CDENTRY(R5) CHAIN POINTER FROM TARGET CDE       92\n         ST    R5,CDCHAIN              SAVE IN PREVIOUS ENTRY CHAIN FLD   93\n*        *---------------------------------------*                        94\n*        *      RELEASE ALL LOCKS                *                        95\n*        *---------------------------------------*                        96\n         SETLOCK RELEASE,                                              X  97\n               TYPE=ALL,                                               X  98\n               REGS=USE,                                               X  99\n               RELATED=REQUIRED                                          100\n*---------------------------------------------------------------------*  101\n*        VERIFY THAT THE OLD MODULE IS ALLOCATED IN THE RIGHT SUBPOOL *  102\n*        IF SO, FREEMAIN OLD MODULE, CDE AND EXTENT LIST ENTRY        *  103\n*---------------------------------------------------------------------*  104\n         TM    ANKFLAG1,@ANKFREE       FREE OLD MODULE STORAGE  ?        105\n         BNO   EXIT00                  NO; EXIT                          106\n         L     R4,ADCDE                ADDRESS OF TARGET CDE             107\n         L     R6,CDXLMJP              A(EXTENT LIST)                    108\n         L     R8,CDENTPT              A(ENTRY POINT)                    109\n         XR    R7,R7                                                     110\n         ICM   R7,B'0111',XTLMSBLN     LENGTH OF THE MODULE              111\n         VSMLOC SQA,AREA=((R8),(R7)) TEST SQA ALLOCATION                 112\n         LTR   R15,R15                 ALLOCATED ?                       113\n         BZ    CKSP                    YES; CHECK SUBPOOL                114\n         VSMLOC CSA,AREA=((R8),(R7)) TEST CSA ALLOCATION                 115\n         LTR   R15,R15                 ALLOCATED ?                       116\n         BNZ   NOFREE                  NO; DO NOT FREEMAIN               117\nCKSP     DS    0H                                                        118\n         STCM  0,B'0001',TESTSP        SAVE SUBPOOL NUMBER IN TEST       119\n         CLC   TESTSP(L'ANKSP),ANKSP   IS THE STORAGE IN THIS SUBPOOL?   120\n         BNE   NOFREE                  NO; DO NOT FREEMAIN               121\n         XR    R5,R5                   .. SUBPOOL NUMBER                 122\n         ICM   R5,B'0001',TESTSP       .. FOR FREEMAIN                   123\n         FREEMAIN RC,LV=(7),A=(8),SP=(5)                                 124\n         LTR   R15,R15                 FREEMAIN SUCCESSFUL ?             125\n         BNZ   EXIT0C                  NO; EXIT WITH ERROR               126\n         LA    R0,LCDE                 LENGTH OF A CDE                   127\n         FREEMAIN RC,LV=(0),A=(4),SP=245  FREE THE CDE                   128\n         LTR   R15,R15                                                   129\n         BNZ   EXIT10                                                    130\n         LA    R0,LXTNT                LENGTH OF AN EXTENT LIST          131\n         FREEMAIN RC,LV=(0),A=(6),SP=245  FREE THE XTENT LIST            132\n         LTR   R15,R15                                                   133\n         BNZ   EXIT14                                                    134\nNOFREE   DS    0H                                                        135\n         MODESET MODE=PROB,KEY=NZERO                                     136\n         B     EXIT00                                                    137\n*---------------------------------------------------------------------*  138\n*        EXIT ROUTINES                                                *  139\n*---------------------------------------------------------------------*  140\nEXIT00   DS    0H                      SUCCESSFUL                        141\n         LA    15,X'00'                                                  142\n         B     EXIT                                                      143\nEXIT08   DS    0H                      STORAGE VERIFICATION FAILED       144\n         LA    15,X'08'                                                  145\n         B     EXIT                                                      146\nEXIT0C   DS    0H                      FREEMAIN FAILED FOR MODULE        147\n         LA    15,X'0C'                                                  148\n         B     EXIT                                                      149\nEXIT10   DS    0H                      FREEMAIN FAILED FOR CDE           150\n         LA    15,X'10'                                                  151\n         B     EXIT                                                      152\nEXIT14   DS    0H                      FREEMAIN FAILED FOR XL            153\n         LA    15,X'14'                                                  154\n         B     EXIT                                                      155\n         EJECT                                                           156\n*---------------------------------------------------------------------*  157\n*        COMMON EXIT                                                  *  158\n*---------------------------------------------------------------------*  159\nEXIT     DS   0H                                                         160\n         MODESET MODE=PROB,KEY=NZERO                                     161\n         ENDMOD                                                          162\n*---------------------------------------------------------------------*  163\n*        WORK AREA                                                    *  164\n*---------------------------------------------------------------------*  165\nWUNANCH DSECT                                                            166\nADCDE    DS    A                  A( CDE )                               167\nTESTSP   DS    X                  TEST SUBPOOL BYTE                      168\nLUNANCH EQU    *-WUNANCH                                                 169\n*---------------------------------------------------------------------*  170\n*        OTHER DSECTS                                                 *  171\n*---------------------------------------------------------------------*  172\n         ANKPRM                    MAP PARMLIST                          173\n         IHACDE                    MAP CDE                               174\nLCDE     EQU   *-CDENTRY           LENGTH OF CDE                         175\n         IHAXTLST                  MAP EXTENT LIST                       176\nLXTNT    EQU   *-XTLST             LENGTH OF EXTENT LIST                 177\n         CVT    DSECT=YES,LIST=YES MAP CVT                               178\n         IHAPSA DSECT=YES,LIST=YES MAP PSA FOR SETLOCK                   179\n         END                                                             180\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XAFRAME": {"ttr": 4359, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xa7\\x00\\xa7\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:22", "lines": 167, "newlines": 167, "modlines": 0, "user": "MVSPP"}, "text": "         TITLE 'MVS/XA FRAME FOR REENTERABLE CODE'                         1\n*+--------------------------------------------------------------------+    2\n*|                      MAINTENANCE LOG                               |    3\n*+----------+-------------------------------------+---------+---------+    4\n*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |    5\n*+----------+-------------------------------------+---------+---------+    6\n*| 01/04/91 |  WRITTEN                            | MJM     |         |    7\n*+----------+-------------------------------------+---------+---------+    8\n*                                                                     |    9\n*+--------------------------------------------------------------------+   10\n*|  THIS IS A SAMPLE FRAME FOR REENTERABLE CODE UNDER MVS/XA.         |   11\n*|  TO USE THIS FRAME:                                                |   12\n*|                                                                    |   13\n*|   1) PUT DATE WRITTEN AND AUTHOR IN MAINTENANCE LOG.               |   14\n*|   2) FILL IN THE INTERNAL DOCUMENTATION IN THE SECTION BELOW.      |   15\n*|   3) CHANGE ALL \"XAFRAME\" TO THE CSECT NAME.                       |   16\n*|   4) SET THE AMODE AND RMODE AND THE SUBPOOL FOR                   |   17\n*|      \"GETMAIN\" AND \"FREEMAIN\" MACROS.                              |   18\n*|   5) PUT CODE, CONSTANTS, WORK AREA FIELDS ETC. IN PLACE           |   19\n*|      OF THE LINES MARKED \"*====>\"                                  |   20\n*|   6) ASSEMBLE AND LINK-EDIT WITH THE \"RENT\" PARAMETER.             |   21\n*+--------------------------------------------------------------------+   22\n*                                                                     |   23\n*+--------------------------------------------------------------------+   24\n*|   FUNCTION:                                                        |   25\n*|                                                                    |   26\n*|   INPUTS:                                                          |   27\n*|                                                                    |   28\n*|   OUTPUTS:                                                         |   29\n*|                                                                    |   30\n*|   PROGRAM LOGIC:                                                   |   31\n*|                                                                    |   32\n*|   MODULES CALLED:                                                  |   33\n*|                                                                    |   34\n*|   DSECTS:                                                          |   35\n*|                                                                    |   36\n*|   ATTRIBUTES:                                                      |   37\n*|                                                                    |   38\n*+--------------------------------------------------------------------+   39\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\nXAFRAME  CSECT                                                            40\n*        *---------------------------------------*                        41\n*        *     SPECIFY AMODE AND RMODE           *                        42\n*        *---------------------------------------*                        43\nXAFRAME  AMODE 31                                                         44\nXAFRAME  RMODE ANY                                                        45\n*        *---------------------------------------*                        46\n*        *     REGISTER SAVE AREAS               *                        47\n*        *---------------------------------------*                        48\nWXAFRAME DSECT                    USER ACQUIRED STORAGE FOR REENTRABLE    49\nGENREGS  DS    18F                GENERAL REGISTER SAVE AREA              50\nFLTREGS  DS    4D                 FLOATING POINT REGISTER SAVE AREA       51\nXAFRAME  CSECT                                                            52\n*        *---------------------------------------*                        53\n*        *     REGISTER EQUATES                  *                        54\n*        *---------------------------------------*                        55\n         PRINT NOGEN                                                      56\n         COPY  EQUATES                 REGISTER EQUATES                   57\n         PRINT GEN                                                        58\n*        *---------------------------------------*                        59\n*        *     ENTRY POINT                       *                        60\n*        *---------------------------------------*                        61\n         USING XAFRAME,15         ADDRESSING ON ENTRY POINT               62\n         B     BEGIN              BRANCH AROUND EYECATCHER                63\n         DC    C' XAFRAME '       CSECT NAME                              64\n         DC    C' &SYSDATE '      DATE OF ASSEMBLY                        65\n         DC    C' &SYSTIME '      TIME OF ASSEMBLY                        66\nBEGIN    DS    0H                                                         67\n         STM   14,12,12(13)       SAVE REGISTERS IN CALLER'S SAVEAREA     68\n         LR    12,15              LOAD BASE REGISTER WITH ENTRY POINT     69\n         DROP  15                 DROP ADDRESSING ON ENTRY POINT          70\n         USING XAFRAME,12         SET ADDRESSING ON BASE REGISTER         71\n*        *---------------------------------------*                        72\n*        *     GET STORAGE FOR WORK AREA         *                        73\n*        *---------------------------------------*                        74\n         LA    0,LXAFRAME         LENGTH OF STORAGE                       75\n         GETMAIN RU,              UNCONDITIONAL REGISTER GETMAIN       X  76\n               LV=(0),            LENGTH OF STORAGE                    X  77\n               LOC=BELOW,         BELOW 16M                            X  78\n               SP=1               SUBPOOL OF STORAGE                      79\n         LR    2,13               A(CALLER'S SAVE AREA) => R2             80\n         ST    13,4(1)            SAVE A(CALLER'S SAVE AREA)              81\n         ST    1,8(13)            A(SAVE AREA) => CALLER'S SAVE AREA      82\n         LR    13,1               A(SAVE AREA FOR THIS MODULE) => R13     83\n         USING WXAFRAME,13        ADDRESSING FOR SAVE AREA                84\n         LM    14,2,12(2)         RESTORE REGS 14 - 2  FROM CALLER'S      85\n         STD   0,FLTREGS          ..SAVE                                  86\n         STD   2,FLTREGS+8        ..FLOATING                              87\n         STD   4,FLTREGS+16       ..POINT                                 88\n         STD   6,FLTREGS+24       ..REGISTERS                             89\n*======> ADD EXECUTABLE CODE HERE <====================================   90\n         B     EXIT00             BRANCH TO EXIT ROUTINE                  91\n*---------------------------------------------------------------------*   92\n*        EXIT ROUTINES                                                *   93\n*---------------------------------------------------------------------*   94\n*        *---------------------------------------*                        95\n*        *     EXIT WITH RETURN CODE = 0         *                        96\n*        *---------------------------------------*                        97\nEXIT00   DS    0H                                                         98\n         LA    15,X'00'                                                   99\n         B     EXIT                                                      100\n*======> ADD ADDITIONAL EXITS WITH RETURN CODES HERE <=================  101\n*---------------------------------------------------------------------*  102\n*        COMMON EXIT                                                  *  103\n*---------------------------------------------------------------------*  104\nEXIT     DS    0H                                                        105\n         LD    0,FLTREGS          ..RESTORE                              106\n         LD    2,FLTREGS+8        ..FLOATING                             107\n         LD    4,FLTREGS+16       ..POINT                                108\n         LD    6,FLTREGS+24       ..REGISTERS                            109\n         LA    0,LXAFRAME         LENGTH OF STORAGE                      110\n         LR    1,13               ADDRESS OF WORK AREA => R1             111\n         L     13,GENREGS+4       ADDRESS OF CALLER'S SAVE AREA          112\n         ST    15,16(,13)         RETURN CODE TO CALLER'S R15            113\n*        *---------------------------------------*                       114\n*        *     FREE WORK AREA STORAGE            *                       115\n*        *---------------------------------------*                       116\n         FREEMAIN RU,                                                  X 117\n               LV=(0),            LENGTH OF STORAGE                    X 118\n               A=(1),             ADDRESS OF STORAGE                   X 119\n               SP=1               SUBPOOL OF STORAGE                     120\n         LM    14,12,12(13)       RESTORE CALLER'S REGISTERS             121\n         BSM   0,14               RESTORE AMODE AND RETURN               122\n*        *---------------------------------------*                       123\n*        *     LITERALS                          *                       124\n*        *---------------------------------------*                       125\n         LTORG                                                           126\n*---------------------------------------------------------------------*  127\n*        CONSTANTS                                                    *  128\n*---------------------------------------------------------------------*  129\n*======> PUT CONSTANTS HERE <==========================================  130\n*---------------------------------------------------------------------*  131\n*        WORK AREA                                                    *  132\n*---------------------------------------------------------------------*  133\nWXAFRAME DSECT                                                           134\n*======> PUT WORK AREA FIELDS HERE <===================================  135\nLXAFRAME EQU   *-WXAFRAME                                                136\n*---------------------------------------------------------------------*  137\n*        OTHER DSECTS                                                 *  138\n*---------------------------------------------------------------------*  139\n*======> PUT ADDITIONAL DSECTS HERE <==================================  140\n         END                                                             141\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XAMOVE": {"ttr": 4363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\xc1\\x00\\xc1\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:26", "lines": 193, "newlines": 193, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|      PRINTS NAMES OF ALL MODULES LOADED IN ANOTHER ADDRESS SPACE   |    3\n*|  INPUTS:                                                           |    4\n*|      NAME OF AN ADDRESS SPACE ON   // EXEC  PARM=                  |    5\n*|  OUTPUTS:                                                          |    6\n*|      MODULE NAME LIST TO OUTPUT FILE.                              |    7\n*|      R15 - RETURN CODE                                             |    8\n*|             0 - MODULE NAMES WRITTEN TO OUTPUT FILE.               |    9\n*|             8 - TARGET ADDRESS SPACE NAME NOT ON PARM= .           |   10\n*|            12 - GETASCB ROUTINE NOT LINK-EDITED.                   |   11\n*|            16 - GETASCB ROUTINE ERROR.                             |   12\n*|            20 - ERROR IN LOAD OF SECONDARY SPACE ROUTINE.          |   13\n*|            24 - ERROR IN SECONDARY SPACE ROUTINE.                  |   14\n*|            28 - PRINT ROUTINE NOT LINK-EDITED.                     |   15\n*|            28 - ERROR IN PRINT ROUTINE                             |   16\n*|  PROGRAM LOGIC:                                                    |   17\n*|      1) PUT ADDRESS SPACE NAME FROM // EXEC PARM= INTO PARMLIST.   |   18\n*|      2) CALL GETASCB TO SCAN ASVT FOR ADDRESS OF TARGET ASCB.      |   19\n*|      3) LOAD SECONDARY SPACE MODULE INTO PAGEABLE CSA.             |   20\n*|      4) USING ASN FROM TARGET ASCB, SET TARGET AS SECONDARY SPACE. |   21\n*|      5) BRANCH INTO MODULE LOADED INTO CSA IN STEP 3 .             |   22\n*|         THIS CODE MOVES THE NAMES OF MODULES IN THE TARGET         |   23\n*|         ADDRESS SPACE TO A LIST IN THIS ADDRESS SPACE.             |   24\n*|      6) RESTORE ORIGINAL SASN AND AX.                              |   25\n*|      7) INVOKE MODULE TO PRINT MODULE NAME LIST.                   |   26\n*|  MODULES INVOKED:                                                  |   27\n*|      GETASCB, XASAC, PRTMOD                                        |   28\n*|  ATTRIBUTES:                                                       |   29\n*|      REENTERABLE, AMODE=31, RMODE=24, APF-AUTHORIZED               |   30\n*+--------------------------------------------------------------------+   31\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE XAMOVE,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  32\n               TEXT='MODULE NAMES FROM ANOTHER ADDRESS SPACE'             33\n*        *---------------------------------------*                        34\n*        *   GET ADDRESS SPACE NAME AND LENGTH   *                        35\n*        *   FROM PARM= ON THE // EXEC CARD      *                        36\n*        *---------------------------------------*                        37\n         LA    R3,PARMLIST        ADDRESS OF PARMLIST TO R3               38\n         USING XMSXA,R3           MAP PARMLIST                            39\n         MVI   XMNAME,X'40'                  ..SET MODULE NAME IN         40\n         MVC   XMNAME+1(L'XMNAME-1),XMNAME   ..PARMLIST TO SPACES         41\n         L     R1,0(R1)           ADDRESS OF PARM= STRING TO R1           42\n         XR    R2,R2                                                      43\n         ICM   R2,B'0011',0(R1) LENGTH OF PARM                            44\n         BZ    EXIT08             =0; PROGRAM NAME NOT GIVEN              45\n         ST    R2,XMNAMEL         SAVE IN PLIST                           46\n         BCTR  R2,0               LESS 1 FOR EXECUTE                      47\n         EX    R2,MVIT1           MOVE NAME TO PLIST                      48\n         B     MVIT1A             BRANCH AROUND EXECUTED INSTRUCTION      49\nMVIT1    MVC   XMNAME(0),2(R1)    ** EXECUTE ONLY **                      50\nMVIT1A   DS    0H                                                         51\n         MVC   MODLIST(L'XMNAME),XMNAME  MOVE ASCB NAME TO MODNAME LIST   52\n*        *---------------------------------------*                        53\n*        *   CALL SCAN OF ASVT TO OBTAIN A(ASCB) *                        54\n*        *---------------------------------------*                        55\n         LR    R1,R3                   PARMLIST                           56\n         ICM   R15,15,=V(GETASCB)      MODULE ADDRESS TO REG 15           57\n         BZ    EXIT0C                  =0; ROUTINE NOT LINKED             58\n         O     R15,=A(X'80000000')     SET FOR ENTRY AMODE 31             59\n         BASSM R14,R15                 INVOKE THE ROUTINE.                60\n         LTR   R15,R15                 WAS ADDRESS SPACE FOUND?           61\n         BNZ   EXIT10                  NO; EXIT                           62\n*        *---------------------------------------*                        63\n*        *     LOAD MODULE THAT WILL RUN IN      *                        64\n*        *     SECONDARY SPACE MODE INTO CSA     *                        65\n*        *---------------------------------------*                        66\n         MODESET MODE=SUP         GET SUPERVISOR STATE PSW                67\n         LOAD  EP=XASAC,                                               X  68\n               GLOBAL=(YES,P),    LOAD INTO PAGEABLE CSA               X  69\n               ERRET=EXIT14,      ERROR ROUTINE                        X  70\n               EOM=NO             DELETE MODULE AT END-OF-TASK            71\n         ST    R0,ADDRCSA         SAVE ADDRESS OF ROUTINE                 72\n*        *---------------------------------------*                        73\n*        *     SET SECONDARY ASN TO TARGET       *                        74\n*        *     ADDRESS SPACE                     *                        75\n*        *---------------------------------------*                        76\n         LA    R0,1               .. GET AX                               77\n         AXSET AX=(R0)            .. OF 1                                 78\n         ST    R0,XMAXOL          SAVE THE OLD AX                         79\n         MODESET MODE=PROB        RETURN TO PROBLEM STATE                 80\n         ESAR  R2                 EXTRACT SASN                            81\n         ST    R2,XMSASNOL        SAVE THE OLD SASN                       82\n         L     R2,XMASCB          ASCB OF TARGET ADDRESS SPACE            83\n*                                 GET ADDRESS SPACE NUMBER FROM ASCB      84\n         LH    R2,ASCBASID-ASCB(R2)                                       85\n         SSAR  R2                 SET AS SECONDARY ADDRESS SPACE          86\n*        *---------------------------------------*                        87\n*        *     INVOKE TCB SCAN ROUTINE THAT      *                        88\n*        *     RUNS IN SECONDARY SPACE MODE      *                        89\n*        *---------------------------------------*                        90\n         L     R15,ADDRCSA        ENTRY POINT OF ROUTINE TO R15           91\n         LA    R1,MODLIST         ..ADDRESS OF MODULES LIST               92\n         ST    R1,XMMODS          ..TO PARMLIST                           93\n         LA    R1,PARMLIST        ADDRESS OF PARMLIST TO R1               94\n         BASSM R14,R15            INVOKE THE ROUTINE                      95\n         LTR   R15,R15            RC = 0 ?                                96\n         BNZ   EXIT18             NO; EXIT WITH ERROR                     97\n*        *---------------------------------------*                        98\n*        *     RESTORE ORIGINAL SASN AND AX      *                        99\n*        *---------------------------------------*                       100\n         L     R2,XMSASNOL        .. RESTORE                             101\n         SSAR  R2                 .. ORIGINAL SASN                       102\n         MODESET MODE=SUP         GET A SUPERVISOR STATE PSW             103\n         L     R0,XMAXOL          .. RESTORE                             104\n         AXSET AX=(R0)            .. OLD AX                              105\n         MODESET MODE=PROB        RETURN TO PROBLEM STATE                106\n         DELETE EP=XASAC          DELETE THE ROUTINE FROM CSA            107\n*        *---------------------------------------*                       108\n*        *     PRINT LIST OF MODULE NAMES        *                       109\n*        *---------------------------------------*                       110\n         LA    R1,MODLIST          LIST OF MODULE NAMES                  111\n         ICM   R15,15,=V(PRTMOD)   ADDRESS OF PRINT MODULE               112\n         BZ    EXIT1C              =0? ; EXIT                            113\n         BASSM R14,R15             INVOKE ROUTINE                        114\n         LTR   R15,R15             RC = 0 ?                              115\n         BNZ   EXIT20              NO; EXIT                              116\n         B     EXIT00                                                    117\n*---------------------------------------------------------------------*  118\n*        EXIT ROUTINES                                                *  119\n*---------------------------------------------------------------------*  120\nEXIT00   DS    0H                      SUCCESSFUL                        121\n         LA    R15,X'00'                                                 122\n         B     EXIT                                                      123\nEXIT08   DS    0H             ADDRESS SPACE NAME NOT IN PARM=            124\n         LA    R15,X'08'                                                 125\n         B     EXIT                                                      126\nEXIT0C   DS    0H                      GET ASCB ROUTINE NOT LINKED       127\n         LA    R15,X'0C'                                                 128\n         B     EXIT                                                      129\nEXIT10   DS    0H                      GETASCB DID NOT FIND TARGET ASID  130\n         LA    R15,X'10'                                                 131\n         B     EXIT                                                      132\nEXIT14   DS    0H                      ERROR IN LOAD OF MODULE TO CSA    133\n         PERCRC RC=X'14'                                                 134\n         B     EXIT                                                      135\nEXIT18   DS    0H                      ERROR IN SECONDARY SPACE RTN      136\n         PERCRC RC=X'18'                                                 137\n         B     EXIT                                                      138\nEXIT1C   DS    0H                      PRINT ROUTINE NOT LINK EDITED     139\n         LA    R15,X'1C'                                                 140\n         B     EXIT                                                      141\nEXIT20   DS    0H                      ERROR IN PRINT ROUTINE            142\n         LA    R15,X'20'                                                 143\n         B     EXIT                                                      144\n*---------------------------------------------------------------------*  145\n*        COMMON EXIT                                                  *  146\n*---------------------------------------------------------------------*  147\nEXIT     DS    0H                                                        148\n         MODESET MODE=PROB        RETURN TO PROBLEM STATE                149\n         ENDMOD                                                          150\n*---------------------------------------------------------------------*  151\n*        WORK AREA                                                    *  152\n*---------------------------------------------------------------------*  153\nWXAMOVE  DSECT                                                           154\nADDRCSA  DS    F                   ADDRESS OF SS MODE ROUTINE            155\nMODMAX   EQU   500                 MAXIMUM ENTRIES IN MODULE LIST        156\nPARMLIST DS    0F,CL(XMSXAL)       PARMLIST FOR XMSXA                    157\nMODLIST  DS    CL8,F,CL(MODMAX)    LIST OF MODULE NAMES                  158\nMODCOUNT EQU   MODLIST+8,4         COUNT OF MODULE NAMES IN LIST         159\nMODNAMES EQU   MODLIST+12,8        FIRST MODULE NAME IN LIST             160\nLXAMOVE  EQU    *-WXAMOVE                                                161\n*---------------------------------------------------------------------*  162\n*        OTHER DSECTS                                                 *  163\n*---------------------------------------------------------------------*  164\n         XMSXA                     MAP USER PARMLIST                     165\n         IHAASCB LIST=NO           ADDRESS SPACE CONTROL BLOCK (ASCB)    166\n         END                                                             167\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XASAC": {"ttr": 4611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00|\\x00|\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:30", "lines": 124, "newlines": 124, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*|  FUNCTION:                                                         |    2\n*|      CHAINS THROUGH TCBS AND CDES IN ANOTHER ADDRESS SPACE,        |    3\n*|      MOVING MODULE NAMES TO A LIST IN CALLER'S ADDRESS SPACE.      |    4\n*|  INPUTS:                                                           |    5\n*|      R1 - PARMLIST MAPPED BY XMSXA MACRO.                          |    6\n*|            CALLER HAS SET SECONDARY ADDRESS SPACE.                 |    7\n*|  OUTPUTS:                                                          |    8\n*|      MODULE NAMES INTO LIST SUPPLIED BY CALLER.                    |    9\n*|      R15 - RETURN CODE                                             |   10\n*|            0 - MODULE NAMES MOVED TO LIST                          |   11\n*|  LOGIC:                                                            |   12\n*|      1) GO INTO SECONDARY SPACE MODE.                              |   13\n*|      2) CHAIN THRU TCBS AND CDES IN TARGET ADDRESS SPACE, WRITING  |   14\n*|         MODULE NAMES TO LIST IN THIS ADDRESS SPACE.                |   15\n*|      3) GO BACK TO PRIMARY SPACE MODE.                             |   16\n*|                                                                    |   17\n*|  ATTRIBUTES:                                                       |   18\n*|      REENTERABLE, AMODE=31, RMODE=ANY, RUNS IN COMMON STORAGE      |   19\n*+--------------------------------------------------------------------+   20\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE XASAC,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,WORK=NO,    X  21\n               TEXT='MOVE MODULE NAMES USING DAS'                         22\n         LR    R3,R1                   ADDRESS OF PARMLIST TO R3          23\n         USING XMSXA,R3                MAP PARMLIST                       24\n         L     R7,XMMODS               ADDRESS OF TABLE OF MODULES        25\n         LA    R7,12(R7)               POINT AT FIRST ENTRY               26\n         L     R6,XMASCB               ADDRESS OF ASCB FROM PARMLIST      27\n*        *---------------------------------------*                        28\n*        *     GO INTO SECONDARY SPACE MODE      *                        29\n*        *---------------------------------------*                        30\n         SAC   256                     GO INTO SECONDARY SPACE MODE       31\n*---------------------------------------------------------------------*   32\n************  THE FOLLOWING CODE RUNS IN SECONDARY SPACE MODE  ********   33\n*---------------------------------------------------------------------*   34\n*        *---------------------------------------*                        35\n*        *     CHAIN THRU TCBS IN TARGET ADDRESS *                        36\n*        *     SPACE, WRITING MODULE NAMES TO    *                        37\n*        *     TABLE IN PRIMARY ADDRESS SPACE    *                        38\n*        *---------------------------------------*                        39\n         XR    R9,R9                   CLEAR COUNTER                      40\n*                                      ..IN PROBLEM STATE SO SET 3RD      41\n         ICM   R4,B'0001',=X'80'       ..OPERAND TO MATCH PSW KEY MASK.   42\n         L     R6,ASCBASXB-ASCB(,R6)   ADDR OF ASXB IN SECONDARY ASN      43\n         L     R6,ASXBFTCB-ASXB(,R6)   ADDR OF 1ST TCB IN SECONDARY ASN   44\n         USING TCB,R6                  MAP TCB                            45\nT$CBLOOP DS    0H                                                         46\n         ICM   R8,15,TCBJPQ            ADDRESS OF JOB-PACK-AREA QUEUE     47\n         BZ    N$EXTCB                 =0; NO MODULES FOR THIS TCB        48\n         USING CDENTRY,R8              MAP CDE                            49\nC$DELOOP DS    0H                                                         50\n         LA    R5,L'CDNAME             LENGTH OF MODULE NAME FOR MVCP     51\n*                                      ..MOVE MODULE NAME FROM CDE        52\n*                                      ..IN PRIMARAY ADDRESS SPACE TO     53\n*                                      ..LIST IN SECONDARY ADDRESS SPC    54\n         MVCP  0(R5,R7),CDNAME,R4                                         55\n         LA    R9,1(R9)                INCREMENT COUNTER                  56\n         LA    R7,L'CDNAME(,R7)        POINT AT NEXT ENTRY IN LIST        57\n         ICM   R8,15,CDCHAIN           ADDRESS OF NEXT CDE ON JPAQ        58\n         BNZ   C$DELOOP                \u00ac=0; PROCESS NEXT CDE              59\nN$EXTCB  DS    0H                                                         60\n         ICM   R6,15,TCBTCB            ADDRESS IF NEXT TCB ON TCB QUEUE   61\n         BNZ   T$CBLOOP                \u00ac=0; POINT AT NEXT TCB             62\n*---------------------------------------------------------------------*   63\n************   END OF SECONDARY SPACE MODE CODE ***********************   64\n*---------------------------------------------------------------------*   65\n*        *---------------------------------------*                        66\n*        *     GO INTO PRIMARY SPACE MODE        *                        67\n*        *---------------------------------------*                        68\n         SAC   0                       GO INTO PRIMARY   SPACE MODE       69\n         L     R7,XMMODS               ..STORE NUMBER OF MODULE NAMES     70\n         ST    R9,8(R7)                ..IN MODULE NAME LIST              71\n         B     EXIT00                                                     72\n*---------------------------------------------------------------------*   73\n*        EXIT ROUTINES                                                *   74\n*---------------------------------------------------------------------*   75\nEXIT00   DS    0H                      SUCCESSFUL                         76\n         LA    R15,X'00'                                                  77\n         B     EXIT                                                       78\n*---------------------------------------------------------------------*   79\n*        COMMON EXIT                                                  *   80\n*---------------------------------------------------------------------*   81\nEXIT     DS    0H                                                         82\n         ENDMOD                                                           83\n*---------------------------------------------------------------------*   84\n*        WORK AREA                                                    *   85\n*---------------------------------------------------------------------*   86\nWXASAC   DSECT                                                            87\nLXASAC   EQU   *-WXASAC                                                   88\n*---------------------------------------------------------------------*   89\n*        OTHER DSECTS                                                 *   90\n*---------------------------------------------------------------------*   91\n         XMSXA                         USER PARMLIST                      92\n         PRINT NOGEN                                                      93\n         IHAASCB                      ADDRESS SPACE CONTROL BLOCK         94\n         IHAASXB                      ADDRESS SPACE EXTENSION BLOCK       95\n         IKJTCB                       TASK CONTROL BLOCK                  96\n         IHACDE                       CONTENTS DIRECTORY ENTRY            97\n         END                                                              98\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XMSESA": {"ttr": 4614, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00(\\x00(\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:34", "lines": 40, "newlines": 40, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                         PARMLIST FOR XTALK SERVICE          1\n         XMSESA                                                            2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      PARMLIST FOR XTALK                                           |    4\n.*|      THIS PARMLIST CAN ALSO BE USED FOR CALLS TO GETASCB          |    5\n.*+-------------------------------------------------------------------+    6\nXMSESA   DSECT                                                             7\nXMNAMEL  DS    F                       LENGTH OF ADDRESS SPACE NAME        8\nXMNAME   DS    CL8                     ADDRESS SPACE NAME                  9\nXMASCB   DS    F                       ASCB                               10\nXMSTOKEN DS    CL8                     STOKEN                             11\nXMALET   DS    F                       ALET                               12\nXMSESAL  EQU   *-XMSESA                LENGTH OF PARMLIST                 13\n         MEND                                                             14\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XMSXA": {"ttr": 4616, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00)\\x00)\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:39", "lines": 41, "newlines": 41, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n         XMSXA                                                             2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.*+-------------------------------------------------------------------+    3\n.*|      PARMLIST FOR XAMOVE                                          |    4\n.*|      THIS PARMLIST CAN ALSO BE USED FOR CALLS TO GETASCB          |    5\n.*+-------------------------------------------------------------------+    6\nXMSXA    DSECT                                                             7\nXMNAMEL  DS    F                       LENGTH OF ADDRESS SPACE NAME        8\nXMNAME   DS    CL8                     ADDRESS SPACE NAME                  9\nXMASCB   DS    F                       ASCB                               10\nXMAXOL   DS    F                       OLD AX                             11\nXMSASNOL DS    F                       OLD SASN                           12\nXMMODS   DS    A                       ADDRESS OF MODULE LIST             13\nXMSXAL   EQU   *-XMSXA                 LENGTH OF PARMLIST                 14\n         MEND                                                             15\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XTALK": {"ttr": 4618, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00C\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00\\x8b\\x00\\x8b\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:43", "lines": 139, "newlines": 139, "modlines": 0, "user": "MVSPP"}, "text": "*+--------------------------------------------------------------------+    1\n*| FUNCTION:                                                          |    2\n*|   ESTABLISH ACCESS REGISTER COMMUNICATION WITH ANY FULL FUNCTION   |    3\n*|   (I.E. NOT DATASPACE OR HIPERSPACE) ADDRESS SPACE                 |    4\n*| INPUTS:                                                            |    5\n*|    R1 - ADDRESS OF PARMLIST SUPPLIED BY CALLER MAPPED BY XMSESA    |    6\n*| OUTPUTS:                                                           |    7\n*|    ACCESS LIST ENTRY FOR TARGET ADDRESS SPACE ON DU-AL             |    8\n*|    (DISPATCHABLE UNIT-ACCESS LIST).                                |    9\n*|    ALET FOR ACCESS LIST ENTRY IN XMSESA PARMLIST.                  |   10\n*| R15 RETURN CODE:                                                   |   11\n*|     0 - ACCESS LIST ENTRY CREATED FOR ADDRESS SPACE                |   12\n*|     8 - OPERATING SYSTEM IS NOT SP3 OR ABOVE (ESA).                |   13\n*|    12 - GETASCB SCAN ROUTINE IS NOT LINKEDITED                     |   14\n*|    16 - GETASCB SCAN ROUTINE DID NOT FIND TARGET ADDRESS SPACE     |   15\n*|    20 - ALESERV FAILED. RETURN CODE IN R0, REASON CODE IN R1.      |   16\n*| LOGIC:                                                             |   17\n*|    1) CHECK OPERATING SYSTEM LEVEL FOR MVS/ESA                     |   18\n*|    2) CALL GETASCB SCAN ROUTINE TO GET A(ASCB) OF TARGET ADDRESS   |   19\n*|       SPACE                                                        |   20\n*|    3) GET STOKEN OF TARGET ADDRESS SPACE FROM ASSB. (ASCB=>ASSB)   |   21\n*|    4) USE STOKEN AS INPUT TO ALESERV TO MAKE ACCESS LIST ENTRY.    |   22\n*| ATTRIBUTES:                                                        |   23\n*|    AMODE=31, RMODE=ANY, REENTRANT, APF AUTHORIZED                  |   24\n*+--------------------------------------------------------------------+   25\n*+--------------------------------------------------------------------+\n*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |\n*|                                                                    |\n*|  Address questions to: mmarx@mdpaladin.com                         |\n*|                                                                    |\n*|  Permission is hereby granted, free of charge, to any person       |\n*|  obtaining a copy of this software and associated documentation    |\n*|  files (the \"Software\"), to deal in the Software without           |\n*|  restriction, including without limitation the rights to use,      |\n*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |\n*|  copies of the Software, and to permit persons to whom the         |\n*|  Software is furnished to do so, subject to the following          |\n*|  conditions:                                                       |\n*|                                                                    |\n*|  The above copyright notice and this permission notice shall be    |\n*|  included in all copies or substantial portions of the Software.   |\n*|                                                                    |\n*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,   |\n*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |\n*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |\n*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |\n*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |\n*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |\n*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |\n*|  OTHER DEALINGS IN THE SOFTWARE.                                   |\n*+--------------------------------------------------------------------+\n         MODULE XTALK,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,            X  26\n               TEXT='BUILD ACCESS LIST ENTRY ANY ADDRESS SPACE'           27\n         LR    R3,R1                   PARMLIST                           28\n         USING XMSESA,R3               MAP PARMLIST                       29\n*        *---------------------------------------*                        30\n*        *   CHECK IF MVS SP3 OR ABOVE (MVSESA)  *                        31\n*        *---------------------------------------*                        32\n         L     R4,CVTPTR               A(CVT)                             33\n         S     R4,=A(CVTMAP-CVTFIX)    BACKUP FOR LENGTH OF CVT PREFIX    34\n         USING CVTFIX,R4               MAP CVT BEGINNING AT PREFIX        35\n         LA    R4,CVTPRODN-CVTFIX(R4)  POINT TO MVS VERSION               36\n         CLC   0(L'SP3,R4),SP3         IS THIS SP3 OR ABOVE               37\n         BL    EXIT08                  NO; EXIT WITH RC=8 ERROR           38\n*        *---------------------------------------*                        39\n*        *   CALL SCAN OF ASVT TO OBTAIN A(ASCB) *                        40\n*        *---------------------------------------*                        41\n         LR    R1,R3                   PARMLIST                           42\n         ICM   R15,15,=V(GETASCB)      A(ROUTINE TO R R15)                43\n         BZ    EXIT0C                  GETASCB NOT LINKEDITED             44\n         O     R15,=A(X'80000000')     SET FOR 31 BIT                     45\n         BASSM R14,R15                 INVOKE ROUTINE                     46\n         LTR   R15,R15                 WAS ASCB FOUND                     47\n         BNZ   EXIT10                  NO; EXIT WITH RC=16                48\n*        *---------------------------------------*                        49\n*        *   GET STOKEN OF TARGET ADDRESS SPACE  *                        50\n*        *---------------------------------------*                        51\n         DROP  R4                      DROP R4 ADDRESSABILITY             52\n         L     R4,XMASCB               A(ASCB) OF TARGET ADDRESS SPACE    53\n         USING ASCB,R4                 MAP ASCB                           54\n         L     R5,ASCBASSB             A(ASSB) OF TARGET ADDRESS SPACE    55\n         USING ASSB,R5                 MAP ASSB                           56\n*                                      MOVE STOKEN OF TARGET TO PARMS     57\n         MVC   XMSTOKEN(L'XMSTOKEN),ASSBSTKN                              58\n         SPKA  0                       GET A KEY ZERO PSW                 59\n*        *---------------------------------------*                        60\n*        *     CREATE ENTRY IN ACCESS LIST       *                        61\n*        *---------------------------------------*                        62\n         ALESERV ADD,                                                  X  63\n               STOKEN=XMSTOKEN,        STOKEN FROM ASSB OF TARGET      X  64\n               ALET=XMALET,            ALET RETURNED BY ALESERV        X  65\n               CHKEAX=NO,              DO NOT CHECK EAX                X  66\n               AL=WORKUNIT,            USE THIS TCB'S ACCESS LIST      X  67\n               ACCESS=PUBLIC,          CREATE PUBLIC ACCESS LIST ENTRY X  68\n               MF=(E,ALELIST)                                             69\n         LTR   R15,R15                 RETURN CODE = 0                    70\n         BNZ   EXIT14                  NO, EXIT RC=20.                    71\n         B     EXIT00                                                     72\n*---------------------------------------------------------------------*   73\n*        EXIT ROUTINES                                                *   74\n*---------------------------------------------------------------------*   75\nEXIT00   DS    0H                      SUCCESSFUL                         76\n         LA    R15,X'00'                                                  77\n         B     EXIT                                                       78\nEXIT08   DS    0H                      NOT EXECUTING ON ESA SYSTEM        79\n         LA    R15,X'08'                                                  80\n         B     EXIT                                                       81\nEXIT0C   DS    0H                      ASVT SCAN ROUTINE NOT LINKED       82\n         LA    R15,X'0C'                                                  83\n         B     EXIT                                                       84\nEXIT10   DS    0H                      TARGET ASCB NOT FOUND BY SCAN      85\n         LA    R15,X'10'                                                  86\n         B     EXIT                                                       87\nEXIT14   DS    0H                      ALESERV FAILED                     88\n         PERCRC RC=X'14'                                                  89\n         B     EXIT                                                       90\n*---------------------------------------------------------------------*   91\n*        COMMON EXIT                                                  *   92\n*---------------------------------------------------------------------*   93\nEXIT     DS    0H                                                         94\n         ENDMOD                                                           95\n*---------------------------------------------------------------------*   96\n*        CONSTANTS                                                    *   97\n*---------------------------------------------------------------------*   98\nSP3      DC    C'SP3'    MVS/ESA                                          99\n*---------------------------------------------------------------------*  100\n*        WORK AREA                                                    *  101\n*---------------------------------------------------------------------*  102\nWXTALK   DSECT                                                           103\nALELIST  ALESERV MF=L                  PARMLIST FOR ALESERV              104\nLXTALK   EQU  *-WXTALK                                                   105\n*---------------------------------------------------------------------*  106\n*        OTHER DSECTS                                                 *  107\n*---------------------------------------------------------------------*  108\n         XMSESA                        MAP PARMLIST FOR GETASCB          109\n         CVT     DSECT=YES,PREFIX=YES,LIST=YES     MAP CVT               110\n         IHAASCB DSECT=YES,LIST=YES                MAP ASCB              111\n         IHAASSB LIST=YES                          MAP ASSB              112\n         END                                                             113\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XTOC": {"ttr": 4621, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x02\\x07?\\x01\\x02\\x07?\\x07 \\x00S\\x00S\\x00\\x00\\xd4\\xe5\\xe2\\xd7\\xd7@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-03-14T00:00:00", "modifydate": "2002-03-14T07:20:49", "lines": 83, "newlines": 83, "modlines": 0, "user": "MVSPP"}, "text": "         MACRO                                                             1\n&LABEL   XTOC  &PLIST=,&ADOUT=,&LOUT=,&ADIN=,&LIN=                         2\n.*+-------------------------------------------------------------------+\n.*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |\n.*|                                                                   |\n.*|  Address questions to: mmarx@mdpaladin.com                        |\n.*|                                                                   |\n.*|  Permission is hereby granted, free of charge, to any person      |\n.*|  obtaining a copy of this software and associated documentation   |\n.*|  files (the \"Software\"), to deal in the Software without          |\n.*|  restriction, including without limitation the rights to use,     |\n.*|  copy, modify, merge, publish, distribute, sublicense,and/or sell |\n.*|  copies of the Software, and to permit persons to whom the        |\n.*|  Software is furnished to do so, subject to the following         |\n.*|  conditions:                                                      |\n.*|                                                                   |\n.*|  The above copyright notice and this permission notice shall be   |\n.*|  included in all copies or substantial portions of the Software.  |\n.*|                                                                   |\n.*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,  |\n.*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |\n.*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |\n.*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |\n.*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |\n.*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |\n.*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |\n.*|  OTHER DEALINGS IN THE SOFTWARE.                                  |\n.*+-------------------------------------------------------------------+\n.**********************************************************************    3\n.*       GENERATES CALLING SEQUENCE FOR HEXPRT SERVICE                *    4\n.*                  (CONVERT HEX TO PRINTABLE CHARACTERS)             *    5\n.*       &PLIST  -  ADDRESS OF PARAMETER LIST                         *    6\n.*       &ADOUT  -  ADDRESS OF OUTPUT STRING                          *    7\n.*       &LOUT   -  LENGTH OF OUTPUT STRING                           *    8\n.*       &ADIN   -  ADDRESS OF INPUT STRING                           *    9\n.*       &LIN    -  LENGTH OF INPUT STRING                            *   10\n.**********************************************************************   11\n         LCLB  &E1                                                        12\n         LCLC  &OP,&R,&LBL1,&LBL2                                         13\n&LBL1    SETC  'PHX'.'&SYSNDX'                                            14\n&LBL2    SETC  'PXX'.'&SYSNDX'                                            15\n         AIF   (T'&PLIST NE 'O').OK1                                      16\n         MNOTE 8,'OPERAND \"PLIST\" IS REQUIRED'                            17\n&E1      SETB  1                                                          18\n.OK1     ANOP                                                             19\n         AIF   (T'&ADOUT NE 'O').OK2                                      20\n         MNOTE 8,'OPERAND \"ADOUT\" IS REQUIRED'                            21\n&E1      SETB  1                                                          22\n.OK2     ANOP                                                             23\n         AIF   (T'&LOUT NE 'O').OK3                                       24\n         MNOTE 8,'OPERAND \"LOUT\" IS REQUIRED'                             25\n&E1      SETB  1                                                          26\n.OK3     ANOP                                                             27\n         AIF   (T'&ADIN NE 'O').OK4                                       28\n         MNOTE 8,'OPERAND \"ADIN\" IS REQUIRED'                             29\n&E1      SETB  1                                                          30\n.OK4     ANOP                                                             31\n         AIF   (T'&LIN NE 'O').OK5                                        32\n         MNOTE 8,'OPERAND \"LIN\" IS REQUIRED'                              33\n&E1      SETB  1                                                          34\n.OK5     ANOP                                                             35\n         AIF   (&E1).MEND                                                 36\n.*********************************************************************    37\n.*       BUILD PARM LIST AND INVOKE SERVICE                          *    38\n.*********************************************************************    39\n         INNERMM &PLIST,1                                                 40\n         INNERMM &ADOUT,15                                                41\n         ST    15,0(1)               .. TO PLIST                          42\n         INNERMM &LOUT,15                                                 43\n         ST    15,4(1)               .. TO PLIST                          44\n         INNERMM &ADIN,15                                                 45\n         ST    15,8(1)               .. TO PLIST                          46\n         INNERMM &LIN,15                                                  47\n         ST    15,12(1)              .. TO PLIST                          48\n         ICM   15,B'1111',=V(HEXPRT) .. ADDRESS OF OUTPUT STRING          49\n         BNZ   &LBL1                 =0; ROUTINE IS NOT LINKED            50\n         LA    15,13                 LOAD RETURN CODE = 13                51\n         B     &LBL2                 DO NOT INVOKE ROUTINE                52\n&LBL1    DS    0H                    INVOKE THE ROUTINE                   53\n         O     15,=A(X'80000000')    SET 31BIT ENTRY                      54\n         BASSM 14,15                 INVOKE THE ROUTINE                   55\n&LBL2    DS    0H                                                         56\n.MEND    MEND                                                             57\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT554/FILE554.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT554", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}