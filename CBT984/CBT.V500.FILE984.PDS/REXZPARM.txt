rexx_REXZPARM: /* We still need rexx in comment if read from SYSPROC */
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

 Dataset:  KET2812.MIS.REXX(REXZPARM)
 Author:   KTomiak
 Contact:  "Kenneth Tomiak"<KenTomiak@KTomiak.org>
 Syntax:   REXZPARM {sdsnsamp(dsntidmember)}
 Overview: Read the DSNTIDxx member to get the DSNZPARM module name,
           read the DSNZPARM module and generate both the DSNTIJUZ
           source and a DSNTIDxx member extension to backfill those
           changes done without using the %DSNTINSC dialog.

dsnzparm DSN6SYSP     SYSPCDB           4
  ad=td("CONDBAT  NUM   M  0           150000        "syspcdb)
  ad=td("NUMCONDB NUM   M  1           800           "syspcdb)

dsnzparm DSN6SYSP     SYSPFLAG          1 '04'x xxxxxxxx DSVCI
  ad=td("DSVCI    CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SYSP     SYSPFLAG          1 '04'x xxxxxxxx DSVCI
  If (Bitand(SYSPFLAG,'04'x) = '04'x) Then yes_or_no = "YES"
  ad=td("MGEXTSZ  CHAR  M  NO          YES           "yes_or_no)

=======================================================================

 History of Modifications
 ------------------------
  When     Who      What you did
  -------- -------- ---------------------------------------------------
  20070722 KET2812  Mapping load module offsets with assembler csect,
                    with DSNTIJUZ source, and to DSNTIDxx member.
  20070719 KET2812  Original code - UQ50308 V7R1M0.
  20070709 KET2812  Original code - UQ81450 V8R1M0.

=======================================================================

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

  Parse Arg all_my_arguments
  Numeric Digits 12

rexx_Main_REXZPARM:
  return_code = rexx_Initialize()
  If (return_code = 0) then,
    Do
      return_code = rexx_Process()
    End
  return_code = rexx_Termination()
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this routine we open any files and initialize any
 constants we might need.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_Initialize:
  PARSE VERSION,
    rexx_version,
    rexx_date
  PARSE SOURCE,
    source_host_env,
    source_call_type,
    source_uc_exec_name,
    source_hostdd,
    source_hostdsn,
    source_nf_exec_name,
    source_initial_cmd_env,
    source_asid_name,
    source_char8_user_token,
    source_hostother
  job_specs = rexx_jobspecs()
  sysvar_sysuid = SYSVAR("SYSUID")
  sysvar_sysenv = SYSVAR("SYSENV")
  say ""
  say Copies("=",55)
  say left("=" job_specs,53) "="
  say left("=" source_uc_exec_name,
    "executing under" source_host_env,53) "="
  say left("=",
    "as a" source_call_type,53) "="
  say left("=  on" date() "at" time()".",53) "="
  say Copies("=",55)
  say ""
  return_code = 0

  If (source_host_env >< "TSO") Then,
    Do
      Say "Wrong host environment" source_host_env
      return_code = 16
    End

  Parse Var all_my_arguments,
    dsn_sdsnsamp "(" mbr_sdsnsamp ")",
    =1 ds_prefix ".SDSNSAMP" .
  dsn_sdsnsamp = Strip(dsn_sdsnsamp,"L","'")
  dsn_sdsnexit = ds_prefix".SDSNEXIT"
  Say "SDSNSAMP("dsn_sdsnsamp")"
  Say "Member("mbr_sdsnsamp")"

  "Alloc File(SDSNSAMP) Dataset('"dsn_sdsnsamp"("mbr_sdsnsamp")')",
    "SHR REUSE"
  open_rc = RC
  If (open_rc >< 0) Then,
    Do
      Say "Open failed, RC("open_rc")"
      return_code = 20
      return return_code
    End
  "Execio * DiskR SDSNSAMP (Stem TIDDATA. Finis)"
  diskr_rc = RC
  If (diskr_rc >< 0) Then,
    Do
      Say "DiskR failed, RC("diskr_rc")"
      return_code = 20
      return return_code
    End
  "Free File(SDSNSAMP)"
  field_name. = ""
  Do tid_ix = 1 to TIDDATA.0
    tid_line = TIDDATA.tid_ix
    If (Left(tid_line,1) = "*") Then Iterate
    tid_field = Word(tid_line,1)
    field_name.tid_field = tid_ix
  End
  tid_rc = decode_tiddata("DSNZPARM")
  If (tid_rc >< 0) Then,
    Do
      Say "PARM(DSNZPARM) not found in" mbr_sdsnsamp"."
      return_code = 20
      return return_code
    End
  mbr_dsnzparm = tid_value

  Address ISPEXEC "CONTROL ERRORS RETURN"

  Address ISPEXEC "LMINIT DATAID(dataid)",
    "DATASET('"dsn_sdsnexit"') ENQ(SHR)"
  lminit_rc = RC
  If (lminit_rc >< 0) Then,
    Do
      ZERRSM = "LMINIT FAILED"
      ZERRLM = ,
        "SDSNEXIT("dsn_sdsnexit") failed LMINIT with SHR, RC("lminit_rc")."
      If (sysvar_sysenv = "FORE") THEN,
        Do
          Address ISPEXEC "SETMSG MSG(ISRZ002)"
        End
      Else,
        Do
          Say zerrlm
        End
      return_code = 12
      return return_code
    End

  csect_loc_type. = ""
  csect_loc. = 0
  csect_len_type. = ""
  csect_len. = 00

  Return return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this routine we do our processing.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_Process:
  Address ISPEXEC "LMOPEN DATAID("dataid")",
    "OPTION(INPUT)"
  lmopen_rc = RC
  If (lmopen_rc >< 0) Then,
    Do
      ZERRSM = "LMOPEN FAILED"
      ZERRLM = ,
        "DSNAME("dsname") failed LMOPEN with INPUT, RC("lmopen_rc")."
      If (sysvar_sysenv = "FORE") THEN,
        Do
          Address ISPEXEC "SETMSG MSG(ISRZ002)"
        End
      Else,
        Do
          Say zerrlm
        End
      return_code = 12
      return return_code
    End
  Address IspExec,
    "LMMFIND DATAID("dataid") MEMBER("mbr_dsnzparm")",
    "LRECL(reclen) RECFM(recfmvr)",
    "STATS(YES)"
  LMMFind_rc = RC
  If (LMMFind_rc >< 0) Then,
    Do
      ZERRSM = "LMMFind FAILED"
      ZERRLM = ,
        "DSNAME("dsname") failed LMMFind with INPUT, RC("LMMFind_rc")."
      If (sysvar_sysenv = "FORE") THEN,
        Do
          Address ISPEXEC "SETMSG MSG(ISRZ002)"
        End
      Else,
        Do
          Say zerrlm
        End
      return_code = 12
      return return_code
    End
  call show_stats
  lmget_ctr = 0
  text_follows = "N"
  text_record = ""
  Do Forever
    Address IspExec,
      "LMGET DATAID("dataid") MODE(INVAR) DATALOC(locvar)",
      "DATALEN(lenvar) MAXLEN(32760)"
    lmget_rc = rc
    If (lmget_rc >< 0) Then Leave
    lmget_ctr = lmget_ctr + 1
    rec_type = c2x(Left(locvar,1))
    rec_len  = c2d(Substr(locvar,2,1))
    sub_type = c2x(Substr(locvar,3,1))
    Select
      When (text_follows = "Y") Then,
        Call parse_lmod_text
      When (rec_type = "20") Then,
        Call parse_lmod_20
      When ((rec_type = "80") & (sub_type = "01")) Then,
        Call parse_lmod_80_01
      When ((rec_type = "80") & (sub_type = "02")) Then,
        Call parse_lmod_80_02
      When ((rec_type = "80") & (sub_type = "04")) Then,
        Call parse_lmod_80_04
      When ((rec_type = "80") & (sub_type = "88")) Then,
        Call parse_lmod_80_88
      When (rec_type = "01") Then,
        Call parse_lmod_01
      When (rec_type = "02") Then,
        Call parse_lmod_02
      When (rec_type = "03") Then,
        Call parse_lmod_03
      When (rec_type = "04") Then,
        Call parse_lmod_04
      When (rec_type = "0E") Then,
        Call parse_lmod_0E
      Otherwise,
        Say "Unknown" c2x(Left(locvar,35))
    End
  End
  Return return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this routine we close files and finish up.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_Termination:
  Address ISPEXEC "LMCLOSE DATAID("dataid")"
  Address ISPEXEC "LMFREE  DATAID("dataid")"
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT. FINIS)"
  "EXECIO" xx_ctr "DISKW DSNTIJXX (STEM XX_TXT. FINIS)"
  Say ""
  Say "Done."
  Say ""
  Return return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Place any of your subroutines and procedures below this.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_jobspecs:
  /*---------------------------------------------------------------*/
  /* ADDRESSABILITY TO CVT FROM PSA                                */
  /*---------------------------------------------------------------*/
  PTR2PSA = 0
  CVTPTR = STORAGE(D2X(PTR2PSA + 16),4)
  /*---------------------------------------------------------------*/
  /* ADDRESSABILITY TO SMCA, THEN GET SMF SYSTEM ID                */
  /*---------------------------------------------------------------*/
  CVTSMCA = STORAGE(D2X(C2D(CVTPTR)+197),3)
  SMFID = STORAGE(D2X(C2D(CVTSMCA)+16),4)
  /*---------------------------------------------------------------*/
  /* GET JOBNAME, STEP, AND PROCEDURE                              */
  /*---------------------------------------------------------------*/
  PSATOLD  = STORAGE(21C,4)                    /* POINTER TO TCB   */
  PTRTIOT  = STORAGE(D2X(C2D(PSATOLD)+12),4)   /* POINTER TO TIOT  */
  JOBNAME  = STORAGE(D2X(C2D(PTRTIOT)),8)
  STEPNAME = STORAGE(D2X(C2D(PTRTIOT)+8),8)
  PROCNAME = STORAGE(D2X(C2D(PTRTIOT)+16),8)
  Tcbjscbb = Storage(D2x(C2d(Psatold)+181),3)              /* jscb */
  jscbssib = STORAGE(D2X(C2D(tcbjscbb)+316),4)      /* Ptr to SSIB */
  ssibjbid = STORAGE(D2X(C2D(jscbssib)+12),8)    /* job identifier */
  Return JOBNAME SSIBJBID STEPNAME PROCNAME

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this rutine we decode a line of the DSNTIDxx member.
* PARM  TYPE  SCP MIN         MAX           CURRENT-VALUE   *
----+----1----+----2----+----3----+----4----+----5----+----6----+----7- --+----8
DSNZPARM CHARR M  $           NONE          DSNZPARM
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
decode_tiddata:
  Parse Arg req_parm
  zparm_ix = field_name.req_parm
  Parse Var tiddata.zparm_ix,
    tid_parm,
    tid_type,
    tid_scp,
    tid_min,
    tid_max,
    tid_value,
    .
  If (tid_parm = req_parm) Then Return 0
  Return 4

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Show the attributes in the PDS directory entry.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
show_stats:
  say left(mbr_dsnzparm,8),
    "AMODE("Strip(ZLAMODE,"B"," ")")",
    "RMODE("Strip(ZLRMODE,"B"," ")")",
    "AC("Strip(ZLAC,"B"," ")")",
    "ATTR("Strip(ZLATTR,"B"," ")")",
    "ALIAS("Strip(ZLALIAS,"B"," ")")",
    "SIZE("Strip(ZLSIZE,"L","0")")",
    "TTR("Strip(ZLTTR,"L","0")")"
  memory_image = Copies("!",x2d(zlsize))
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has the csect names that are part of the load module.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_20:
  num_csects = (lenvar - 8) / 16
  Parse var locvar control_bytes +8 csect_fields
  num_1 = 0
  Do While csect_fields >< ""
    num_1 = num_1 + 1
    Parse Var csect_fields csect_name.num_1 +8,
      csect_loc_type.num_1 +1,
      csect_loc.num_1 +3,
      csect_len_type.num_1 +1,
      csect_len.num_1 +3,
      csect_fields
    this_name = Strip(csect_name.num_1,"B"," ")
    named_csect.this_name = num_1
  end
  If (debug_state > 1) Then,
    Do num_x = 1 To num_1
      Say num_x csect_name.num_x,
        c2x(csect_loc_type.num_x),
        c2x(csect_loc.num_x),
        c2x(csect_len_type.num_x),
        c2x(csect_len.num_x)
    End
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_80_01:
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has the date the load module was created.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_80_02:
  loc_offset = 4
  binder_compid = Substr(locvar,loc_offset,10)
  loc_offset = loc_offset + 10
  num_fields = c2d(Substr(locvar,loc_offset,1))
  loc_offset = loc_offset + 1
  Do nf_idx = 1 to num_fields
    field_len = c2d(Substr(locvar,loc_offset,1))
    loc_offset = loc_offset + 1
    field_data = Substr(locvar,loc_offset,field_len)
    loc_offset = loc_offset + field_len
    lmod_time = Substr(locvar,16,3)
    disp_time = c2x(lmod_time)
    lmod_yy = substr(disp_time,1,2)
    lmod_ddd = substr(disp_time,3,3)
    lmod_time = Substr(locvar,19,4)
    disp_time = c2x(lmod_time)
    lmod_hr = substr(disp_time,2,2)
    lmod_mn = substr(disp_time,4,2)
    lmod_sc = substr(disp_time,6,2)
    say mbr_dsnzparm "was linked:" lmod_yy"."lmod_ddd,
        lmod_hr":"lmod_mn":"lmod_sc
  End
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has 'compiler' product identifiers
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_80_04:
  loc_offset = 4
  eb_idx = 0
  Do while loc_offset < lenvar
    eb_idx = eb_idx + 1
    cpi_subtype = SubStr(locvar,loc_offset,1)
    loc_offset = loc_offset + 1
    Select
      When (cpi_subtype = '00'x) Then,
        Do
          cpi.eb_idx = Substr(locvar,loc_offset,1)
          loc_offset = loc_offset + 1
        end
      When (cpi_subtype = '80'x) Then,
        Do
          cpi.eb_idx = Substr(locvar,loc_offset,1)
          loc_offset = loc_offset + 1
          cpi_subtype.eb_idx = Substr(locvar,loc_offset,1)
          loc_offset = loc_offset + 1
          Select
            When (cpi_subtype.eb_idx = '00'x) Then,
              Do
                cpi_data.eb_idx = Substr(locvar,loc_offset,15)
                loc_offset = loc_offset + 15
              end
            When (cpi_subtype.eb_idx = '01'x) Then,
              Do
                cpi_data.eb_idx = Substr(locvar,loc_offset,30)
                loc_offset = loc_offset + 30
              end
            Otherwise,
              Say "I have to give up," c2x(cpi_subtype.eb_idx)") new."
              loc_offset = lenvar
          End
        End
      Otherwise,
        Say "I have to give up," c2x(cpi_subtype)", is new for me."
        loc_offset = lenvar
    End
  End
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_80_88:
  loc_offset = 4
  ptf_idx = 0
  Do while loc_offset < lenvar
    ptf_idx = ptf_idx + 1
    ptf_subtype = c2x(SubStr(locvar,loc_offset,2))
    loc_offset = loc_offset + 2
    ptf_date    = c2x(SubStr(locvar,loc_offset,3))
    loc_offset = loc_offset + 3
    ptf_len     = c2d(SubStr(locvar,loc_offset,1))
    loc_offset = loc_offset + 1
    ptf_name    = SubStr(locvar,loc_offset,ptf_len)
    loc_offset = loc_offset + ptf_len
    Say ptf_idx ptf_name ptf_date ptf_subtype
  End
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has SD pointers and lengths.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_01:
  loc_offset = 3
  sd_idx = 0
  sd_ctr = c2x(SubStr(locvar,loc_offset,2))
  loc_offset = loc_offset + 2
  Do while loc_offset < lenvar
    sd_idx = sd_idx + 1
    sd_subtype = c2x(SubStr(locvar,loc_offset,1))
    loc_offset = loc_offset + 1
    sd_subctr  = c2d(SubStr(locvar,loc_offset,1))
    loc_offset = loc_offset + 1
    sd_addr    = c2x(SubStr(locvar,loc_offset,2))
    loc_offset = loc_offset + 2
    Call parse_lmod_01_subtypes
  End
  text_follows = "Y"
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_01_subtypes:
  Select
    When (sd_subtype = "00") Then,
      Do
        If (debug_state > 1) Then,
        Say rec_type":"sd_ctr"-"sd_idx sd_subtype sd_addr,
          csect_name.sd_subctr,
          c2x(csect_loc_type.sd_subctr),
          c2x(csect_loc.sd_subctr),
          c2x(csect_len_type.sd_subctr),
          c2x(csect_len.sd_subctr)
      End
    When (sd_subtype = "40") Then,
      Do
        If (debug_state > 1) Then,
        Say rec_type":"sd_ctr"-"sd_idx sd_subtype "Size("sd_addr")"
      End
    When (sd_subtype = "06") Then,
      Do
        mem_offset = c2d(x2c(sd_addr)) + 1
        If (debug_state > 1) Then,
        Say rec_type":"sd_ctr"-"sd_idx sd_subtype,
          sd_addr "("mem_offset")"
      End
    Otherwise,
      Say rec_type":"sd_ctr"-"sd_idx sd_subtype sd_addr "OTHER"
  End
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_02:
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_03:
  loc_offset = 3
  sd_idx = 0
  sd_ctr = c2x(SubStr(locvar,loc_offset,2))
  loc_offset = loc_offset + 2
  Do while loc_offset < lenvar
    sd_idx = sd_idx + 1
    sd_subtype = c2x(SubStr(locvar,loc_offset,1))
    loc_offset = loc_offset + 1
    sd_subctr  = c2d(SubStr(locvar,loc_offset,1))
    loc_offset = loc_offset + 1
    sd_addr    = c2x(SubStr(locvar,loc_offset,2))
    loc_offset = loc_offset + 2
    Call parse_lmod_01_subtypes
  End
  text_follows = "Y"
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_04:
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_0E:
  Select
    When (ptf_name = "UQ50308") Then,
      Call process_text_record                         /* DB2 V7R1M0 */
    When (ptf_name = "UQ81450") Then,
      Call process_text_record                         /* DB2 V8R1M0 */
    Otherwise,
      Say source_uc_exec_name "is not ready for PTF" ptf_name"."
      Say "Sorry. But you can figure out the load module format"
      Say "and compare the listing with an existing decode"
      Say "routine and make this work for yourself."
  End
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 This record has the program code.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
parse_lmod_text:
  text_follows = "N"
  If (debug_state > 1) Then,
    Do
      Say "MEMORY:" Length(memory_image)
      Say "LOCVAR:" Length(locvar)
      Say "OFFSET:" mem_offset
      Say "LENVAR:" lenvar
    End
  memory_image = Overlay(locvar,memory_image,mem_offset,lenvar,"?")
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 text_record is a stream of the text records.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
process_text_record:
  Say "LMOD to Assembler CODE"
  decode_rc = Decode_DSN6SPRM()
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  decode_rc = Decode_DSN6ARVP()
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  decode_rc = Decode_DSN6LOGP()
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  decode_rc = Decode_DSN6SYSP()
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  decode_rc = Decode_DSN6FAC()
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  decode_rc = Decode_DSN6GRP()
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  Call write_lked_step
  Say "CODE to DSNTIDxx"
  Return

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Decode the load module csect into fields.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
Decode_DSN6SPRM:
  grab_rc = grab_csect("DSN6SPRM")
  Select
    When (ptf_name = "UQ50308") Then Call uq50308_dsn6sprm /* V7R1M0 */
    When (ptf_name = "UQ81450") Then Call uq81450_dsn6sprm /* V8R1M0 */
    Otherwise,
      Nop
  End
  Return 0

uq50308_dsn6sprm:
  Parse Var my_txt,
    SPRMID         +2,
    SPRMLEN        +2,
    SPRMEYE        +4,
    SPRMLVL        +8,
    SPRMMMRB       +2,
    SPRMWREN       +2,
    .              +4,
    SPRMMVS        +3,
    SPRMCNTL       +2,
    SPRMIDCK       +1,
    SPRMMISC       +1,
    SPRMMISZ       +1,
    SPRMAUTH       +1,
    SPRMSADM       +8,
    SPRMMIS2       +1,
    SPRMMIS3       +1,
    SPRMMIS4       +1,
    SPRMEDPL       +4,
    SPRMVCOF       +4,
    SPRMDBOF       +4,
    SPRMDFID       +8,
    SPRMIPRC       +8,
    SPRMISID       +4,
    SPRMTOUT       +4,
    SPRMISWT       +4,
    SPRMISWI       +4,
    SPRMIAUT       +1,
    SPRMDBCK       +1,
    SPRMSNWF       +2,
    SPRMSORP       +4,
    SPRMSMXN       +4,
    SPRMBMC1       +2,
    SPRMBMC2       +2,
    SPRMSWT1       +2,
    SPRMSWT2       +2,
    SPRMDWF1       +2,
    SPRMDWF2       +2,
    SPRMDWU1       +2,
    SPRMDWU2       +2,
    SPRMVDWT       +2,
    SPRMSTHT       +1,
    SPRMSTRL       +1,
    SPRMKDSA       +4,
    SPRMKDSB       +4,
    SPRMRDEU       +2,
    SPRMLRUT       +2,
    SPRMPF32       +2,
    SPRMPFT1       +2,
    SPRMPFT2       +2,
    SPRMBBTR       +2,
    SPRMLKTR       +2,
    SPRMPSID       +4,
    SPRMDSPM       +2,
    SPRMLKTS       +4,
    SPRMLKUS       +4,
    SPRMADM2       +8,
    SPRMOPR1       +8,
    SPRMOPR2       +8,
    SPRMCHKL       +2,
    SPRMPDQ        +2,
    SPRMPCBS       +2,
    SPRMLA1        +2,
    SPRMLA2        +2,
    SPRMNCPU       +1,
    SPRMHRCL       +1,
    SPRMPCWH       +2,
    SPRMPCRB       +2,
    SPRMMXRB       +2,
    SPRMHRCD       +2,
    SPRMRCST       +2,
    SPRMTRWT       +2,
    SPRMWPFQ       +2,
    SPRMWPFS       +2,
    SPRMSQTM       +2,
    SPRMSQTD       +2,
    SPRMVDTM       +2,
    SPRMVDTD       +2,
    SPRMMPFQ       +2,
    SPRMSWFU       +2,
    SPRMTISP       +4,
    SPRMDRBS       +4,
    SPRMRMIN       +4,
    SPRMRMAX       +4,
    SPRMRNLP       +2,
    SPRMAUCA       +2,
    SPRMINTV       +2,
    SPRMQCTM       +2,
    SPRMTDDN       +2,
    SPRMMDDN       +2,
    SPRMTXS        +4,
    SPRMSRBT       +4,
    SPRMAND        +4,
    SPRMOR         +4,
    SPRMCPUM       +4,
    SPRMFDP        +2,
    SPRMKNFC       +2,
    SPRMUTO        +2,
    SPRMEST        +2,
    SPRMCUT        +2,
    SPRMSPC        +2,
    SPRMSPS        +2,
    SPRMAST        +2,
    SPRMBMP        +2,
    SPRMDLI        +2,
    SPRMXCTH       +4,
    SPRMBNVA       +8,
    SPRMSCTM       +4,
    SPRMMDEG       +4,
    SPRMPAC        +4,
    SPRMUBS        +2,
    SPRMAURT       +2,
    SPRMREGF       +1,
    SPRMREGC       +8,
    SPRMREGA       +17,
    SPRMREGO       +17,
    SPRMTYP        +1,
    SPRMREGN       +8,
    SPRMKSIZ       +4,
    SPRMIFS        +4,
    SPRMABN        +1,
    SPRMDXTP       +1,
    SPRMRMTI       +2,
    SPRMZTN        +2,
    SPRMZUT        +2,
    SPRMMDE        +4,
    SPRMREGE       +1,
    SPRMCDEG       +3,
    SPRMCDE1       +1,
    SPRMPKYU       +1,
    SPRMFLMT       +1,
    SPRMFLBS       +1,
    SPRMULBZ       +4,
    SPRMULFR       +4,
    SPRMRHTI       +2,
    SPRMUMD        +2,
    SPRMMXKD       +4,
    SPRMREC        +2,
    SPRMLTDM       +1,
    SPRMMS4A       +1,
    SPRMACAN       +2,
    SPRMMS4B       +1,
    SPRMMSC2       +1,
    SPRMCOC1       +2,
    SPRMCOC2       +2,
    SPRMWAIT       +2,
    SPRMCTHR       +2,
    SPRMRAC        +4,
    SPRMSTHR       +4,
    SPRMEDDS       +4,
    SPRMDSMX       +4,
    SPRMLEM        +2,
    SPRMOZTP       +1,
    .              +1,
    SPRMPLIM       +4,
    SPRMMDSC       +2,
    SPRMMXTB       +2,
    SPRMMXCE       +4,
    SPRMNPAG       +4,
    SPRMSJR        +2,
    SPRMDCFL       +8,
    SPRMDCIX       +8,
    .              +2,
    SPRMOZUS       +8,
    SPRMOZCI       +12,
    SPRMOZTM       +8,
    SPRMEDMX       +4,
    SPRMINTE       +2,
    SPRMSJTB       +2,
    SPRMTJTH       +2,
    SPRMSJXP       +2,
    SPRMINLP       +4,
    SPRMFLKT       +4,
    .              +92,
    SPRMDATE       +8,
    SPRMDB         +8,
    SPRMSTRT       +1,
    .              +1,
    SPRMDB#        +2,
    SPRMEND
  dec_sprmdb# = c2d(sprmdb#)
  If (dec_sprmdb# > 0) Then
    Do sprm_ix = 1 To dec_sprmdb#
      Parse var sprmend,
        dbname.sprm_ix +8,
        tsname.sprm_ix +8,
        SPRMEND
    End
  Parse var sprmend,
    SPRMVCAT       +8,
    SPRMVC#        +4,
    SPRMCATN       +8,
    SPRMEND
  If (sprmend >< "") Then,
    Say "SPRMEND("sprmend")"
  sprmlvl = Strip(sprmlvl,"B"," ")
  Call write_asm_step
  ad=uz("*")
  ad=uz("* Source: DSN="dsname"("mbr_sdsnsamp")")
  ad=uz("* LMOD  : DSN="dsname"("mbr_dsnzparm")")
  ad=uz("* Date  :" sprmdate)
  ad=uz("*")
  ad=uz("*")
  ad=uz("    DSN6ENV    MVS="sprmmvs)
  Select
    When (SPRMSTRT = '80'x) Then strt_type = "RESTART"
    When (SPRMSTRT = '40'x) Then strt_type = "DEFER"
    When (SPRMSTRT = '00'x) Then strt_type = "DEFER"
    Otherwise,
      strt_type = "ERROR"
  End
  ad=uz(Left("    DSN6SPRM   "strt_type",             ",71)"X")
  ad=td("DBSTADFR CHAR  M  DEFER       RESTART       "strt_type)
  db_ts. = ""
  If (dec_sprmdb# > 0) Then
    Do sprm_ix = 1 To dec_sprmdb#
      db_ts = dbname.sprm_ix
      If (tsname.sprm_ix >< " ") Then,
        db_ts = db_ts"."tsname.sprm_ix
      ad=uz(Left("              "db_ts",                  ",71)"X")
      db_ts.sprm_ix = db_ts
    End
  Else,
    Do
      ad=uz(Left("               ALL,                     ",71)"X")
      db_ts.1 = "ALL"
    End
  dbs_value = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
  Do start_ix = 1 to 36
    If (start_ix = 1 ) Then,
      Do
        ad=td("DBSTARTA CHARR M  $           NONE          "db_ts.1)
        Iterate
      End
    dbs = Substr(dbs_value,start_ix,1)
    ad=td("DBSTART"dbs" CHAR  M  NONE        NONE          ")
  End
  If (BitAnd(SPRMMISZ,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               ABEXP="yes_or_no",       ",71)"X")
  ad=td("ABEXP    CHAR  M  NO          YES           "yes_or_no)
  If (SPRMABN = "E") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               ABIND="yes_or_no",       ",71)"X")
  ad=td("ABIND    CHAR  M  NONE        NONE          YES")
  If (SPRMAUTH = "E") Then yes_or_no = "YES"
  Else                     yes_or_no = "NO"
  ad=uz(Left("               AUTH="yes_or_no",        ",71)"X")
  ad=td("*AUTH                                        "yes_or_no)
  sprmauca = c2d(sprmauca) / 128
  ad=uz(Left("               AUTHCACH="sprmauca",     ",71)"X")
  ad=td("AUTHCACH NUM   M  0           4096          "sprmauca)
  sprmbnva = Strip(sprmbnva,"B"," ")
  ad=uz(Left("               BINDNV="sprmbnva",       ",71)"X")
  ad=td("BINDNV   CHAR  M  BIND        BINDADD       "sprmbnva)
  sprmbmp  = c2d(sprmbmp)
  ad=uz(Left("               BMPTOUT="sprmbmp",       ",71)"X")
  ad=td("BMPTOUT  NUM   M  1           254           "sprmbmp)
  If (BitAnd(SPRMMISC,'10'x)  = '10'x) Then yes_or_no = "NO"
  Else                                      yes_or_no = "YES"
  ad=uz(Left("               CACHEDYN="yes_or_no",    ",71)"X")
  ad=td("CACHEDYN CHAR  M  NO          YES           "yes_or_no)
  sprmpac  = c2d(sprmpac)
  ad=uz(Left("               CACHEPAC="sprmpac",      ",71)"X")
  ad=td("CACHEPAC NUM   M  0           5242880       "sprmpac)
  sprmrac  = c2d(sprmrac)
  ad=uz(Left("               CACHERAC="sprmrac",      ",71)"X")
  ad=td("CACHERAC NUM   M  0           5242880       "sprmrac)
  sprmcatn = Strip(sprmcatn,"B"," ")
  ad=uz(Left("               CATALOG="sprmcatn",      ",71)"X")
  ad=td("VCATALOG CHARR G  $           Z9999999      "sprmcatn)
  sprmcdeg = Strip(sprmcdeg,"B"," ")
  ad=uz(Left("               CDSSRDEF="sprmcdeg",     ",71)"X")
  ad=td("CDSSRDEF CHAR  M  1           ANY           "sprmcdeg)
  If (BitAnd(SPRMMISC,'08'x)  = '08'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               CHGDC="yes_or_no",       ",71)"X")
  ad=td("*CHGDC                                       "yes_or_no)
  If (BitAnd(SPRMhrcl,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               CLAIMDTA="yes_or_no",    ",71)"X")
  ad=td("*CLAIMDTA                                    "yes_or_no)
  If (BitAnd(SPRMmsc2,'02'x)  = '02'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               CONTSTOR="yes_or_no",    ",71)"X")
  ad=td("CONTSTOR CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMmsc2,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DBACRVW="yes_or_no",     ",71)"X")
  ad=td("DBACRVW  CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMISC,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DECDIV3="yes_or_no",     ",71)"X")
  ad=td("DECDIV3  CHAR  G  NO          YES           "yes_or_no)
  sprmdfid = Strip(sprmdfid,"B"," ")
  ad=uz(Left("               DEFLTID="sprmdfid",      ",71)"X")
  ad=td("PROTUNKN CHAR  M  NONE        NONE          "sprmdfid)
  If (BitAnd(SPRMMIS2,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DESCSTAT="yes_or_no",    ",71)"X")
  ad=td("DESCSTAT CHAR  G  NO          YES           "yes_or_no)
  sprmdli  = c2d(sprmdli)
  ad=uz(Left("               DLITOUT="sprmdli",       ",71)"X")
  ad=td("DLITOUT  NUM   M  1           254           "sprmdli)
  sprmdsmx = c2d(sprmdsmx)
  ad=uz(Left("               DSMAX="sprmdsmx",        ",71)"X")
  ad=td("OVDSMAX  CHAR  M  NONE        NONE          "sprmdsmx)
  If (BitAnd(SPRMTYP,'10'x)  = '10'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               EDMBFIT="yes_or_no",     ",71)"X")
  ad=td("EDMBFIT  CHAR  M  NO          YES           "yes_or_no)
  SPRMEDMX = c2d(SPRMEDMX) / 1024
  ad=uz(Left("               EDMDSMAX="SPRMEDMX",     ",71)"X")
  ad=td("*EDMDSMAX                                    "SPRMEDMX)
  sprmedds = c2d(sprmedds) / 1024
  ad=uz(Left("               EDMDSPAC="sprmedds",     ",71)"X")
  ad=td("*EDMDSPAC                                    "sprmedds)
  edm_pool = c2d(SPRMEDPL) / 1024
  ad=uz(Left("               EDMPOOL="edm_pool",      ",71)"X")
  ad=td("OVEDMPL  CHAR  M  NONE        NONE          "edm_pool)
  If (BitAnd(SPRMMISC,'04'x)  = '04'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               EDPROP="yes_or_no",      ",71)"X")
  ad=td("*EDPROP                                      "yes_or_no)
  If (BitAnd(SPRMMIS3,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               EVALUNC="yes_or_no",     ",71)"X")
  ad=td("EVALUNC  CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMISZ,'40'x)  = '40'x) Then yes_or_no = "BOTH"
  Else                                      yes_or_no = "RUNNER"
  ad=uz(Left("               HOPAUTH="yes_or_no",     ",71)"X")
  ad=td("HOPAUTH  CHAR  G  BOTH        RUNNER        "yes_or_no)
  If (SPRMIAUT = '80'x) Then yes_or_no = "YES"
  Else                       yes_or_no = "NO"
  ad=uz(Left("               IRLMAUT="yes_or_no",     ",71)"X")
  ad=td("IRLMAUTO CHAR  M  NO          YES           "yes_or_no)
  sprmiprc = Strip(sprmiprc,"B"," ")
  ad=uz(Left("               IRLMPRC="sprmiprc",      ",71)"X")
  ad=td("IRLMPROC CHARR M  $           Z9999999      "sprmiprc)
  sprmisid = Strip(sprmisid,"B"," ")
  ad=uz(Left("               IRLMSID="sprmisid",      ",71)"X")
  ad=td("IRLMSSID CHARR M  $           Z999          "sprmisid)
  sprmtout = c2d(SPRMTOUT)
  ad=uz(Left("               IRLMRWT="sprmtout",      ",71)"X")
  ad=td("*IRLMRWT                                     "sprmtout)
  sprmiswt = c2d(SPRMISWT)
  ad=uz(Left("               IRLMSWT="sprmiswt",      ",71)"X")
  ad=td("*IRLMSWT                                     "sprmiswt)
  SPRMLEM  = c2d(SPRMLEM)
  ad=uz(Left("               LEMAX="SPRMLEM",         ",71)"X")
  ad=td("LEMAX    NUM   M  0           50            "SPRMLEM)
  sprmrmax = c2d(sprmrmax) * (8*4)
  ad=uz(Left("               MAXRBLK="sprmrmax",      ",71)"X")
  ad=td("*MAXRBLK                                     "sprmrmax)
  sprmmxkd = c2d(sprmmxkd)
  ad=uz(Left("               MAXKEEPD="sprmmxkd",     ",71)"X")
  ad=td("MAXKEEPD NUM   M  0           65535         "sprmmxkd)
  If (SPRMMDSC = '0003'x)  Then mdsc_type = "3"
  Else                          mdsc_type = "NONE"
  If (SPRMMDSC = '0006'x)  Then mdsc_type = "6"
  ad=uz(Left("               MINDVSCL="mdsc_type",    ",71)"X")
  ad=td("*MINDVSCL                                    "mdsc_type)
  If (BitAnd(SPRMMIS3,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               MINSTOR="yes_or_no",     ",71)"X")
  ad=td("MINSTOR  CHAR  M  NO          YES           "yes_or_no)
  sprmnpag = c2d(sprmnpag)
  ad=uz(Left("               NPGTHRSH="sprmnpag",     ",71)"X")
  ad=td("*NPGTRSH                                     "sprmnpag)
  sprmlkts = c2d(sprmlkts)
  ad=uz(Left("               NUMLKTS="sprmlkts",      ",71)"X")
  ad=td("*NUMLKTS                                     "sprmlkts)
  sprmlkus = c2d(sprmlkus)
  ad=uz(Left("               NUMLKUS="sprmlkus",      ",71)"X")
  ad=td("*NUMLKUS                                     "sprmlkus)
  If (BitAnd(SPRMMS4a,'80'x) = '80'x) Then yes_or_no = "ON"
  Else                                     yes_or_no = "OFF"
  ad=uz(Left("               OPTCCOS2="yes_or_no",    ",71)"X")
  ad=td("*OPTCCOS2                                    "yes_or_no)
  If (BitAnd(SPRMMS4b,'80'x) = '80'x) Then yes_or_no = "ON"
  Else                                     yes_or_no = "OFF"
  ad=uz(Left("               OPTCCOS3="yes_or_no",    ",71)"X")
  ad=td("*OPTCCOS3                                    "yes_or_no)
  If (BitAnd(SPRMMSC2,'08'x)  = '08'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               OPTHINTS="yes_or_no",    ",71)"X")
  ad=td("OPTHINTS CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMIS3,'01'x) = '01'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               OPTSUBQ1="yes_or_no",    ",71)"X")
  ad=td("*OPTSUBQ1                                    "yes_or_no)
  sprmmdeg = c2d(sprmmdeg)
  ad=uz(Left("               PARAMDEG="sprmmdeg",     ",71)"X")
  ad=td("PARAMDEG NUM   M  0           254           "sprmmdeg)
  If (SPRMPKYU = "Y") Then yes_or_no = "YES"
  Else                     yes_or_no = "NO"
  ad=uz(Left("               PARTKEYU="yes_or_no",    ",71)"X")
  ad=td("PARTKEYU CHAR  M  NONE        NONE          "yes_or_no)
  If (BitAnd(SPRMMS4A,'08'x) = '08'x) Then yes_or_no = "ON"
  Else                                     yes_or_no = "OFF"
  ad=uz(Left("               PTCDIO="yes_or_no",      ",71)"X")
  ad=td("*PTCDIO                                      "yes_or_no)
  If (BitAnd(SPRMMIS4,'10'x) = '10'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               PKGLDTOL="yes_or_no",    ",71)"X")
  ad=td("*PKGLDTOL                                    "yes_or_no)
  If (SPRMHRCL = '80'x) Then yes_or_no = "YES"
  Else                       yes_or_no = "NO"
  ad=uz(Left("               RECALL="yes_or_no",      ",71)"X")
  ad=td("RECALL   CHAR  M  NO          YES           "yes_or_no)
  sprmhrcd = c2d(sprmhrcd)
  ad=uz(Left("               RECALLD="sprmhrcd",      ",71)"X")
  ad=td("RECALLD  NUM   M  0           32767         "sprmhrcd)
  If (BitAnd(SPRMMIS2,'08'x)  = '08'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RELCURHL="yes_or_no",    ",71)"X")
  ad=td("RELCURHL CHAR  M  NO          YES           "yes_or_no)
  sprmwait = c2d(sprmwait)
  ad=uz(Left("               RETLWAIT="sprmwait",     ",71)"X")
  ad=td("RETLWAIT NUM   M  0           254           "sprmwait)
  If (BitAnd(SPRMMIS2,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RETVLCFK="yes_or_no",    ",71)"X")
  ad=td("RETVLCFK CHAR  G  NO          YES           "yes_or_no)
  sprmregc = Strip(sprmregc,"B"," ")
  ad=uz(Left("               RGFCOLID="sprmregc",     ",71)"X")
  ad=td("RGFCOLID CHAR  G  NONE        NONE          "sprmregc)
  sprmregn = Strip(sprmregn,"B"," ")
  ad=uz(Left("               RGFDBNAM="sprmregn",     ",71)"X")
  ad=td("RGFDBNAM CHAR  G  NONE        NONE          "sprmregn)
  If (BitAnd(SPRMREGF,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RGFDEDPL="yes_or_no",    ",71)"X")
  ad=td("RGFDEDPL CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMREGF,'10'x)  = '10'x) Then dflt_type = "ACCEPT"
  Else                                      dflt_type = "REJECT"
  If (BitAnd(SPRMREGF,'08'x)  = '08'x) Then dflt_type = "APPL"
  ad=uz(Left("               RGFDEFLT="dflt_type",    ",71)"X")
  ad=td("RGFDEFLT CHAR  G  NONE        NONE          "dflt_type)
  rgfescp = Strip(sprmrege,"B"," ")
  ad=uz(Left("               RGFESCP="rgfescp",       ",71)"X")
  ad=td("RGFESCP  CHAR  M  NONE        NONE          "rgfescp)
  If (BitAnd(SPRMREGF,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RGFFULLQ="yes_or_no",    ",71)"X")
  ad=td("RGFFULLQ CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMREGF,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RGFINSTL="yes_or_no",    ",71)"X")
  ad=td("RGFINSTL CHAR  G  NO          YES           "yes_or_no)
  sprmrego = Strip(sprmrego,"B"," ")
  ad=uz(Left("               RGFNMORT="sprmrego",     ",71)"X")
  ad=td("RGFNMORT CHAR  G  NONE        NONE          "sprmrego)
  sprmrega = Strip(sprmrega,"B"," ")
  ad=uz(Left("               RGFNMPRT="sprmrega",     ",71)"X")
  ad=td("RGFNMPRT CHAR  G  NONE        NONE          "sprmrega)
  If (BitAnd(SPRMMISZ,'04'x)  = '04'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RRULOCK="yes_or_no",     ",71)"X")
  ad=td("RRULOCK  CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMIS4,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               SARGSWRP="yes_or_no",    ",71)"X")
  ad=td("*SARGSWRP                                    "yes_or_no)
  If (BitAnd(SPRMMISZ,'10'x)  = '10'x) Then cach_type = "SEQ"
  Else                                      cach_type = "BYPASS"
  ad=uz(Left("               SEQCACH="cach_type",     ",71)"X")
  ad=td("SEQCACH  CHAR  M  BYPASS      SEQ           "cach_type)
  If (BitAnd(SPRMMIS2,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               SEQPRES="yes_or_no",     ",71)"X")
  ad=td("SEQPRES  CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMTYP,'80'x)  = '80'x) Then site_type = "LOCALSITE"
  Else                                     site_type = "RECOVERYSITE"
  ad=uz(Left("               SITETYP="site_type",     ",71)"X")
  ad=td("SITETYP  CHAR  G  LOCALSITE   RECOVERYSITE  "site_type)
  sprmsjtb = c2d(SPRMsjtb)
  ad=uz(Left("               SJTABLES="sprmsjtb",     ",71)"X")
  ad=td("*SJTABLES                                    "sprmsjtb)
  srt_pool = (c2d(SPRMSORP) / 1024)
  ad=uz(Left("               SRTPOOL="srt_pool",      ",71)"X")
  ad=td("OVSRTPL  CHAR  M  NONE        NONE          "srt_pool)
  If (SPRMSJR  = '0000'x) Then star_type = "ENABLE"
  Else                         star_type = "DISABLE"
  ad=uz(Left("               STARJOIN="star_type",    ",71)"X")
  ad=td("STARJOIN CHAR  M  NONE        NONE          "star_type)
  If (SPRMSTHT = "N") Then stat_type = "NONE"
  Else                     stat_type = Strip(SPRMSTHT,"B"," ")
  ad=uz(Left("               STATHIST="stat_type",    ",71)"X")
  ad=td("STATHIST CHAR  G  NONE        NONE          "stat_type)
  If (SPRMSTRL = "N") Then roll_type = "NO"
  Else                     roll_type = "YES"
  ad=uz(Left("               STATROLL="roll_type",    ",71)"X")
  ad=td("STATROLL CHAR  G  NO          YES           "yes_or_no)
  sprminte = c2d(sprminte)
  ad=uz(Left("               STATSINT="sprminte",     ",71)"X")
  ad=td("STATSINT NUM   G  1           1440          "sprminte)
  If (BitAnd(SPRMTYP,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               SUPERRS="yes_or_no",     ",71)"X")
  ad=td("SUPERRS  CHAR  M  NO          YES           "yes_or_no)
  sprmsadm = Strip(sprmsadm,"B"," ")
  ad=uz(Left("               SYSADM="sprmsadm",       ",71)"X")
  ad=td("PROTADMN CHARR G  $           Z9999999      "sprmsadm)
  sprmadm2 = Strip(sprmadm2,"B"," ")
  ad=uz(Left("               SYSADM2="sprmadm2",      ",71)"X")
  ad=td("PROTADM2 CHARR G  NONE        Z9999999      "sprmadm2)
  sprmopr1 = Strip(sprmopr1,"B"," ")
  ad=uz(Left("               SYSOPR1="sprmopr1",      ",71)"X")
  ad=td("PROTOPR1 CHARR G  NONE        Z9999999      "sprmopr1)
  sprmopr2 = Strip(sprmopr2,"B"," ")
  ad=uz(Left("               SYSOPR2="sprmopr2",      ",71)"X")
  ad=td("PROTOPR2 CHARR G  NONE        Z9999999      "sprmopr2)
  If (BitAnd(SPRMTYP,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               TRKRSITE="yes_or_no",    ",71)"X")
  ad=td("TRKRSITE CHAR  G  NO          YES           "yes_or_no)
  sprmuto = c2d(sprmuto)
  ad=uz(Left("               UTIMOUT="sprmuto",       ",71)"X")
  ad=td("UTIMOUT  NUM   M  $           NONE          "sprmuto)
  If (BitAnd(SPRMMIS4,'08'x)  = '08'x) Then yes_or_no = "ON"
  Else                                      yes_or_no = "OFF"
  ad=uz(Left("               UTLRSTRT="yes_or_no",    ",71)"X")
  If (BitAnd(SPRMTYP,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               XLKUPDLT="yes_or_no"     ",71))
  ad=td("XLKUPDLT CHAR  M  NONE        NONE          "yes_or_no)
  Return 0

uq81450_dsn6sprm:
  Parse Var my_txt,
    SPRMID         +2,
    SPRMLEN        +2,
    SPRMEYE        +4,
    SPRMLVL        +8,
    SPRMMMRB       +2,
    SPRMWREN       +2,
    .              +4,
    SPRMMVS        +3,
    SPRMCNTL       +2,
    SPRMIDCK       +1,
    SPRMMISC       +1,
    SPRMMISZ       +1,
    SPRMAUTH       +1,
    SPRMSADM       +8,
    SPRMMIS2       +1,
    SPRMMIS3       +1,
    SPRMMIS4       +1,
    SPRMEDPL       +4,
    SPRMVCOF       +4,
    SPRMDBOF       +4,
    SPRMDFID       +8,
    SPRMIPRC       +8,
    SPRMISID       +4,
    SPRMTOUT       +4,
    SPRMISWT       +4,
    SPRMISWI       +4,
    SPRMIAUT       +1,
    SPRMDBCK       +1,
    SPRMSNWF       +2,
    SPRMSORP       +4,
    SPRMSMXN       +4,
    SPRMBMC1       +2,
    SPRMBMC2       +2,
    SPRMSWT1       +2,
    SPRMSWT2       +2,
    SPRMDWF1       +2,
    .              +2,
    SPRMDWU1       +2,
    SPRMDWU2       +2,
    SPRMVDWT       +2,
    SPRMSTHT       +1,
    SPRMSTRL       +1,
    SPRMKDSA       +4,
    SPRMKDSB       +4,
    SPRMRDEU       +2,
    SPRMLRUT       +2,
    SPRMPF32       +2,
    SPRMPFT1       +2,
    SPRMPFT2       +2,
    SPRMBBTR       +2,
    SPRMLKTR       +2,
    SPRMPSID       +4,
    SPRMDSPM       +2,
    SPRMLKTS       +4,
    SPRMLKUS       +4,
    SPRMADM2       +8,
    SPRMOPR1       +8,
    SPRMOPR2       +8,
    SPRMCHKL       +2,
    SPRMPDQ        +2,
    SPRMPCBS       +2,
    .              +4,
    SPRMNCPU       +1,
    SPRMHRCL       +1,
    SPRMPCWH       +2,
    SPRMPCRB       +2,
    SPRMMXRB       +2,
    SPRMHRCD       +2,
    SPRMRCST       +2,
    SPRMTRWT       +2,
    SPRMWPFQ       +2,
    SPRMWPFS       +2,
    SPRMSQTM       +2,
    SPRMSQTD       +2,
    SPRMVDTM       +2,
    .              +2,
    SPRMMPFQ       +2,
    SPRMSWFU       +2,
    SPRMTISP       +4,
    SPRMDRBS       +4,
    SPRMRMIN       +4,
    SPRMRMAX       +4,
    SPRMRNLP       +2,
    SPRMAUCA       +2,
    SPRMINTV       +2,
    SPRMQCTM       +2,
    SPRMTDDN       +2,
    SPRMMDDN       +2,
    SPRMTXS        +4,
    SPRMSRBT       +4,
    SPRMAND        +4,
    SPRMOR         +4,
    SPRMCPUM       +4,
    SPRMFDP        +2,
    SPRMKNFC       +2,
    SPRMUTO        +2,
    SPRMEST        +2,
    SPRMCUT        +2,
    SPRMSPC        +2,
    SPRMSPS        +2,
    SPRMAST        +2,
    SPRMBMP        +2,
    SPRMDLI        +2,
    SPRMXCTH       +4,
    SPRMBNVA       +8,
    SPRMSCTM       +4,
    SPRMMDEG       +4,
    SPRMPAC        +4,
    SPRMUBS        +2,
    SPRMAURT       +2,
    SPRMREGF       +1,
    SPRMREGC       +8,
    SPRMREGA       +17,
    SPRMREGO       +17,
    SPRMTYP        +1,
    SPRMREGN       +8,
    SPRMKSIZ       +4,
    SPRMIFS        +4,
    SPRMABN        +1,
    SPRMDXTP       +1,
    SPRMRMTI       +2,
    SPRMZTN        +2,
    SPRMZUT        +2,
    SPRMMDE        +4,
    SPRMREGE       +1,
    SPRMCDEG       +3,
    SPRMCDE1       +1,
    SPRMPKYU       +1,
    SPRMFLMT       +1,
    SPRMFLBS       +1,
    SPRMULBZ       +4,
    SPRMULFR       +4,
    SPRMRHTI       +2,
    SPRMUMD        +2,
    SPRMMXKD       +4,
    SPRMREC        +2,
    SPRMLTDM       +1,
    SPRMMS4A       +1,
    SPRMACAN       +2,
    .              +1,
    SPRMMSC2       +1,
    SPRMCOC1       +2,
    SPRMCOC2       +2,
    SPRMWAIT       +2,
    SPRMCTHR       +2,
    SPRMRAC        +4,
    SPRMSTHR       +4,
    .              +4,
    SPRMDSMX       +4,
    SPRMLEM        +2,
    SPRMOZTP       +1,
    .              +1,
    SPRMPLIM       +4,
    SPRMMDSC       +2,
    SPRMMXTB       +2,
    SPRMMXCE       +4,
    SPRMNPAG       +4,
    SPRMSJR        +2,
    SPRMDCFL       +8,
    SPRMDCIX       +8,
    .              +2,
    SPRMOZUS       +8,
    SPRMOZCI       +12,
    SPRMOZTM       +8,
    .              +4,
    SPRMINTE       +2,
    SPRMSJTB       +2,
    SPRMTJTH       +2,
    SPRMSJXP       +2,
    SPRMINLP       +4,
    SPRMFLKT       +4,
    SPRMRSMX       +2,
    .              +16,
    SPRMSADM_Off   +2,
    SPRMDFID_Off   +2,
    SPRMADM2_Off   +2,
    SPRMOPR1_Off   +2,
    SPRMOPR2_Off   +2,
    SPRMREGC_Off   +2,
    SPRMREGA_Off   +2,
    SPRMREGO_Off   +2,
    SPRMOZUS_Off   +2,
    SPRMEDBC       +4,
    SPRMESTC       +4,
    SPRMMQTH       +2,
    SPRMRFSH       +11,
    .              +1,
    SPRMMNTY       +2,
    SPRMMXOS       +2,
    SPRMMXOC       +2,
    SPRMMXOE       +2,
    .              +2,
    SPRMLRTH       +2,
    SPRMTTRS       +2,
    SPRMVDTY       +8,
    SPRMSCLC       +2,
    SPRMMIS5       +1,
    SPRMMIS6       +1,
    SPRMMXNC       +4,
    SPRMMXSP       +4,
    SPRMSELD       +4,
    .              +8,
    SPRMFRLC       +2,
    .              +38,
    .              +4,
    .              +32,
    .              +16,
    SPRMDATE       +8,
    SPRMSADM_Len   +2,
    SPRMSADM_Var   +128,
    SPRMDFID_Len   +2,
    SPRMDFID_Var   +128,
    SPRMADM2_Len   +2,
    SPRMADM2_Var   +128,
    SPRMOPR1_Len   +2,
    SPRMOPR1_Var   +128,
    SPRMOPR2_Len   +2,
    SPRMOPR2_Var   +128,
    SPRMREGC_Len   +2,
    SPRMREGC_Var   +128,
    SPRMREGA_Len   +2,
    SPRMREGA_Var   +128,
    SPRMREGO_Len   +2,
    SPRMREGO_Var   +128,
    SPRMOZUS_Len   +2,
    SPRMOZUS_Var   +128,
    full_0_adjust  +2,
    SPRMDB         +8,
    SPRMSTRT       +1,
    .              +1,
    SPRMDB#        +2,
    SPRMEND
  dec_sprmdb# = c2d(sprmdb#)
  If (dec_sprmdb# > 0) Then
    Do sprm_ix = 1 To dec_sprmdb#
      Parse var sprmend,
        dbname.sprm_ix +8,
        tsname.sprm_ix +8,
        SPRMEND
    End
  Parse var sprmend,
    SPRMVCAT       +8,
    SPRMVC#        +4,
    SPRMCATN       +8,
    SPRMEND
  If (sprmend >< "") Then,
    Say "SPRMEND("sprmend")"
  sprmlvl = Strip(sprmlvl,"B"," ")
  Call write_asm_step
  ad=uz("*")
  ad=uz("* Source: DSN="dsname"("mbr_sdsnsamp")")
  ad=uz("* LMOD  : DSN="dsname"("mbr_dsnzparm")")
  ad=uz("* Date  :" sprmdate)
  ad=uz("*")
  ad=uz("*")
  ad=uz("    DSN6ENV    MVS="sprmmvs)
  Select
    When (SPRMSTRT = '80'x) Then strt_type = "RESTART"
    When (SPRMSTRT = '40'x) Then strt_type = "DEFER"
    When (SPRMSTRT = '00'x) Then strt_type = "DEFER"
    Otherwise,
      strt_type = "ERROR"
  End
  db_ts. = ""
  ad=uz(Left("    DSN6SPRM   "strt_type",             ",71)"X")
  ad=td("DBSTADFR CHAR  M  DEFER       RESTART       "strt_type)
  If (dec_sprmdb# > 0) Then
    Do sprm_ix = 1 To dec_sprmdb#
      db_ts = dbname.sprm_ix
      If (tsname.sprm_ix >< " ") Then,
        db_ts = db_ts"."tsname.sprm_ix
      ad=uz(Left("              "db_ts",                  ",71)"X")
      db_ts.sprm_ix = db_ts
    End
  Else,
    Do
      ad=uz(Left("               ALL,                     ",71)"X")
      db_ts.1 = "ALL"
    End
  dbs_value = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
  Do start_ix = 1 to 36
    If (start_ix = 1 ) Then,
      Do
        ad=td("DBSTARTA CHARR M  $           NONE          "db_ts.1)
        Iterate
      End
    dbs = Substr(dbs_value,start_ix,1)
    ad=td("DBSTART"dbs" CHAR  M  NONE        NONE          ")
  End
  If (BitAnd(SPRMMISZ,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               ABEXP="yes_or_no",       ",71)"X")
  ad=td("ABEXP    CHAR  M  NO          YES           "yes_or_no)
  If (SPRMABN = "E") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               ABIND="yes_or_no",       ",71)"X")
  ad=td("ABIND    CHAR  M  NONE        NONE          "yes_or_no)
  sprmacan = c2d(sprmacan)
  ad=uz(Left("               AEXITLIM="sprmacan",     ",71)"X")
  ad=td("AEXITLIM NUM   M  0           32767         "sprmacan)
  If (SPRMAUTH = "E") Then yes_or_no = "YES"
  Else                     yes_or_no = "NO"
  ad=uz(Left("               AUTH="yes_or_no",        ",71)"X")
  ad=td("*AUTH                                        "yes_or_no)
  sprmauca = c2d(sprmauca) / 128
  ad=uz(Left("               AUTHCACH="sprmauca",     ",71)"X")
  ad=td("AUTHCACH NUM   M  0           4096          "sprmauca)
  sprmbnva = Strip(sprmbnva,"B"," ")
  ad=uz(Left("               BINDNV="sprmbnva",       ",71)"X")
  ad=td("BINDNV   CHAR  M  BIND        BINDADD       "sprmbnva)
  sprmbmp  = c2d(sprmbmp)
  ad=uz(Left("               BMPTOUT="sprmbmp",       ",71)"X")
  ad=td("BMPTOUT  NUM   M  1           254           "sprmbmp)
  If (BitAnd(SPRMMISC,'10'x)  = '10'x) Then yes_or_no = "NO"
  Else                                      yes_or_no = "YES"
  ad=uz(Left("               CACHEDYN="yes_or_no",    ",71)"X")
  ad=td("CACHEDYN CHAR  M  NO          YES           "yes_or_no)
  sprmfrlc = c2d(sprmfrlc)
  ad=uz(Left("               CACHEDYN_FREELOCAL="sprmfrlc", ",71)"X")
  ad=td("*CACHEDYN_freelocal                          "sprmfrlc)
  sprmpac  = c2d(sprmpac)
  ad=uz(Left("               CACHEPAC="sprmpac",      ",71)"X")
  ad=td("CACHEPAC NUM   M  0           5242880       "sprmpac)
  sprmrac  = c2d(sprmrac)
  ad=uz(Left("               CACHERAC="sprmrac",      ",71)"X")
  ad=td("CACHERAC NUM   M  0           5242880       "sprmrac)
  sprmcatn = Strip(sprmcatn,"B"," ")
  ad=uz(Left("               CATALOG="sprmcatn",      ",71)"X")
  ad=td("VCATALOG CHARR G  $           Z9999999      "sprmcatn)
  sprmcdeg = Strip(sprmcdeg,"B"," ")
  ad=uz(Left("               CDSSRDEF="sprmcdeg",     ",71)"X")
  ad=td("CDSSRDEF CHAR  M  1           ANY           "sprmcdeg)
  If (BitAnd(SPRMMISC,'08'x)  = '08'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               CHGDC="yes_or_no",       ",71)"X")
  ad=td("*CHGDC                                       "yes_or_no)
  If (BitAnd(SPRMMIS5,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               COMCRIT="yes_or_no",     ",71)"X")
  ad=td("COMCRIT  CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMmsc2,'02'x)  = '02'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               CONTSTOR="yes_or_no",    ",71)"X")
  ad=td("CONTSTOR CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMmsc2,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DBACRVW="yes_or_no",     ",71)"X")
  ad=td("DBACRVW  CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMISC,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DECDIV3="yes_or_no",     ",71)"X")
  ad=td("DECDIV3  CHAR  G  NO          YES           "yes_or_no)
  sprmdfid = Strip(sprmdfid,"B"," ")
  ad=uz(Left("               DEFLTID="sprmdfid",      ",71)"X")
  ad=td("PROTUNKN CHAR  M  NONE        NONE          "sprmdfid)
  If (BitAnd(SPRMMIS2,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DESCSTAT="yes_or_no",    ",71)"X")
  ad=td("DESCSTAT CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMIS4,'04'x)  = '04'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               DISABSCL="yes_or_no",    ",71)"X")
  ad=td("*DISABSCL                                    "yes_or_no)
  sprmdli  = c2d(sprmdli)
  ad=uz(Left("               DLITOUT="sprmdli",       ",71)"X")
  ad=td("DLITOUT  NUM   M  1           254           "sprmdli)
  sprmdsmx = c2d(sprmdsmx)
  ad=uz(Left("               DSMAX="sprmdsmx",        ",71)"X")
  ad=td("OVDSMAX  CHAR  M  NONE        NONE          "sprmdsmx)
  If (BitAnd(SPRMTYP,'10'x)  = '10'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               EDMBFIT="yes_or_no",     ",71)"X")
  ad=td("EDMBFIT  CHAR  M  NO          YES           "yes_or_no)
  edm_ebdc = (c2d(SPRMedbc) / 1024)
  ad=uz(Left("               EDMDBDC="edm_ebdc",      ",71)"X")
  ad=td("*EDMDSMAX                                    "SPRMEDMX)
  edm_pool = c2d(SPRMEDPL) / 1024
  ad=uz(Left("               EDMPOOL="edm_pool",      ",71)"X")
  ad=td("OVEDMPL  CHAR  M  NONE        NONE          "edm_pool)
  edm_cache = (c2d(SPRMestc) / 1024)
  ad=uz(Left("               EDMSTMTC="edm_cache",    ",71)"X")
  If (BitAnd(SPRMMISC,'04'x)  = '04'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               EDPROP="yes_or_no",      ",71)"X")
  ad=td("*EDPROP                                      "yes_or_no)
  If (BitAnd(SPRMMIS3,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               EVALUNC="yes_or_no",     ",71)"X")
  ad=td("EVALUNC  CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMISZ,'40'x)  = '40'x) Then yes_or_no = "BOTH"
  Else                                      yes_or_no = "RUNNER"
  ad=uz(Left("               HOPAUTH="yes_or_no",     ",71)"X")
  ad=td("HOPAUTH  CHAR  G  BOTH        RUNNER        "yes_or_no)
  If (SPRMIAUT = '80'x) Then yes_or_no = "YES"
  Else                       yes_or_no = "NO"
  ad=uz(Left("               IRLMAUT="yes_or_no",     ",71)"X")
  ad=td("IRLMAUTO CHAR  M  NO          YES           "yes_or_no)
  sprmiprc = Strip(sprmiprc,"B"," ")
  ad=uz(Left("               IRLMPRC="sprmiprc",      ",71)"X")
  ad=td("IRLMPROC CHARR M  $           Z9999999      "sprmiprc)
  sprmisid = Strip(sprmisid,"B"," ")
  ad=uz(Left("               IRLMSID="sprmisid",      ",71)"X")
  ad=td("IRLMSSID CHARR M  $           Z999          "sprmisid)
  sprmtout = c2d(SPRMTOUT)
  ad=uz(Left("               IRLMRWT="sprmtout",      ",71)"X")
  ad=td("*IRLMRWT                                     "sprmtout)
  sprmiswt = c2d(SPRMISWT)
  ad=uz(Left("               IRLMSWT="sprmiswt",      ",71)"X")
  ad=td("*IRLMSWT                                     "sprmiswt)
  SPRMLEM  = c2d(SPRMLEM)
  ad=uz(Left("               LEMAX="SPRMLEM",         ",71)"X")
  ad=td("LEMAX    NUM   M  0           50            "SPRMLEM)
  SPRMLRTH = c2d(SPRMLRTH)
  ad=uz(Left("               LRDRTHLD="SPRMLRTH",     ",71)"X")
  main_type = "ERROR "
  If (SPRMMNTY = '0000'x) Then main_type = "NONE"
  If (SPRMMNTY = '0001'x) Then main_type = "SYSTEM"
  If (SPRMMNTY = '0002'x) Then main_type = "USER"
  If (SPRMMNTY = '0003'x) Then main_type = "ALL"
  ad=uz(Left("               MAINTYPE="main_type",    ",71)"X")
  ad=td("MAINTYPE CHAR  M  NONE        NONE          "main_type)
  sprmrmax = c2d(sprmrmax) * (8*4)
  ad=uz(Left("               MAXRBLK="sprmrmax",      ",71)"X")
  ad=td("*MAXRBLK                                     "sprmrmax)
  sprmmxkd = c2d(sprmmxkd)
  ad=uz(Left("               MAXKEEPD="sprmmxkd",     ",71)"X")
  ad=td("MAXKEEPD NUM   M  0           65535         "sprmmxkd)
  sprmmxnc = c2d(sprmmxnc)
  ad=uz(Left("               MAX_NUM_CUR="sprmmxnc",  ",71)"X")
  ad=td("*MAX_NUM_CUR                                 "sprmmxnc)
  sprmmxsp = c2d(sprmmxsp)
  ad=uz(Left("               MAX_ST_PROC="sprmmxsp",  ",71)"X")
  ad=td("*MAX_ST_PROC                                 "sprmmxsp)
  If (SPRMMDSC = '0003'x)  Then mdsc_type = "3"
  Else                          mdsc_type = "NONE"
  If (SPRMMDSC = '0006'x)  Then mdsc_type = "6"
  ad=uz(Left("               MINDVSCL="mdsc_type",    ",71)"X")
  ad=td("*MINDVSCL                                    "mdsc_type)
  If (BitAnd(SPRMMIS3,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               MINSTOR="yes_or_no",     ",71)"X")
  ad=td("MINSTOR  CHAR  M  NO          YES           "yes_or_no)
  sprmnpag = c2d(sprmnpag)
  ad=uz(Left("               NPGTHRSH="sprmnpag",     ",71)"X")
  ad=td("*NPGTRSH                                     "sprmnpag)
  sprmlkts = c2d(sprmlkts)
  ad=uz(Left("               NUMLKTS="sprmlkts",      ",71)"X")
  ad=td("*NUMLKTS                                     "sprmlkts)
  sprmlkus = c2d(sprmlkus)
  ad=uz(Left("               NUMLKUS="sprmlkus",      ",71)"X")
  ad=td("*NUMLKUS                                     "sprmlkus)
  If (BitAnd(SPRMMSC2,'08'x)  = '08'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               OPTHINTS="yes_or_no",    ",71)"X")
  ad=td("OPTHINTS CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMMIS5,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               PADIX="yes_or_no",       ",71)"X")
  ad=td("PADIX    CHAR  G  NO          YES           "yes_or_no)
  sprmmdeg = c2d(sprmmdeg)
  ad=uz(Left("               PARAMDEG="sprmmdeg",     ",71)"X")
  ad=td("PARAMDEG NUM   M  0           254           "sprmmdeg)
  If (SPRMPKYU = "Y") Then yes_or_no = "YES"
  Else                     yes_or_no = "NO"
  ad=uz(Left("               PARTKEYU="yes_or_no",    ",71)"X")
  ad=td("PARTKEYU CHAR  M  NONE        NONE          "yes_or_no)
  If (SPRMHRCL = '80'x) Then yes_or_no = "YES"
  Else                       yes_or_no = "NO"
  ad=uz(Left("               RECALL="yes_or_no",      ",71)"X")
  ad=td("RECALL   CHAR  M  NO          YES           "yes_or_no)
  If (right(SPRMrfsh,1) = '0C'x) Then age_type = "0"
  Else                                age_type = "ANY"
  ad=uz(Left("               REFSHAGE="age_type",     ",71)"X")
  ad=td("REFSHAGE CHAR  M  0           ANY           "age_type)
  sprmhrcd = c2d(sprmhrcd)
  ad=uz(Left("               RECALLD="sprmhrcd",      ",71)"X")
  ad=td("RECALLD  NUM   M  0           32767         "sprmhrcd)
  If (BitAnd(SPRMMIS2,'08'x)  = '08'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RELCURHL="yes_or_no",    ",71)"X")
  ad=td("RELCURHL CHAR  M  NO          YES           "yes_or_no)
  sprmwait = c2d(sprmwait)
  ad=uz(Left("               RETLWAIT="sprmwait",     ",71)"X")
  ad=td("RETLWAIT NUM   M  0           254           "sprmwait)
  If (BitAnd(SPRMMIS2,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RETVLCFK="yes_or_no",    ",71)"X")
  ad=td("RETVLCFK CHAR  G  NO          YES           "yes_or_no)
  sprmregc = Strip(sprmregc,"B"," ")
  ad=uz(Left("               RGFCOLID="sprmregc",     ",71)"X")
  ad=td("RGFCOLID CHAR  G  NONE        NONE          "sprmregc)
  sprmregn = Strip(sprmregn,"B"," ")
  ad=uz(Left("               RGFDBNAM="sprmregn",     ",71)"X")
  ad=td("RGFDBNAM CHAR  G  NONE        NONE          "sprmregn)
  If (BitAnd(SPRMREGF,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RGFDEDPL="yes_or_no",    ",71)"X")
  ad=td("RGFDEDPL CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMREGF,'10'x)  = '10'x) Then dflt_type = "ACCEPT"
  Else                                      dflt_type = "REJECT"
  If (BitAnd(SPRMREGF,'08'x)  = '08'x) Then dflt_type = "APPL"
  ad=uz(Left("               RGFDEFLT="dflt_type",    ",71)"X")
  ad=td("RGFDEFLT CHAR  G  NONE        NONE          "dflt_type)
  rgfescp = Strip(sprmrege,"B"," ")
  ad=uz(Left("               RGFESCP="rgfescp",       ",71)"X")
  ad=td("RGFESCP  CHAR  M  NONE        NONE          "rgfescp)
  If (BitAnd(SPRMREGF,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RGFFULLQ="yes_or_no",    ",71)"X")
  ad=td("RGFFULLQ CHAR  G  NO          YES           "yes_or_no)
  If (BitAnd(SPRMREGF,'80'x)  = '80'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RGFINSTL="yes_or_no",    ",71)"X")
  ad=td("RGFINSTL CHAR  G  NO          YES           "yes_or_no)
  sprmrego = Strip(sprmrego,"B"," ")
  ad=uz(Left("               RGFNMORT="sprmrego",     ",71)"X")
  ad=td("RGFNMORT CHAR  G  NONE        NONE          "sprmrego)
  sprmrega = Strip(sprmrega,"B"," ")
  ad=uz(Left("               RGFNMPRT="sprmrega",     ",71)"X")
  ad=td("RGFNMPRT CHAR  G  NONE        NONE          "sprmrega)
  If (BitAnd(SPRMMISZ,'04'x)  = '04'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               RRULOCK="yes_or_no",     ",71)"X")
  ad=td("RRULOCK  CHAR  M  NO          YES           "yes_or_no)
  sprmsclc = c2d(sprmsclc)
  ad=uz(Left("               SECLCACH="sprmsclc",     ",71)"X")
  ad=td("SECLCACH NUM   M  0           32767         "sprmsclc)
  If (BitAnd(SPRMMISZ,'10'x)  = '10'x) Then cach_type = "SEQ"
  Else                                      cach_type = "BYPASS"
  ad=uz(Left("               SEQCACH="cach_type",     ",71)"X")
  ad=td("SEQCACH  CHAR  M  BYPASS      SEQ           "cach_type)
  If (BitAnd(SPRMMIS2,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               SEQPRES="yes_or_no",     ",71)"X")
  ad=td("SEQPRES  CHAR  M  NO          YES           "yes_or_no)
  If (BitAnd(SPRMTYP,'80'x)  = '80'x) Then site_type = "LOCALSITE"
  Else                                     site_type = "RECOVERYSITE"
  ad=uz(Left("               SITETYP="site_type",     ",71)"X")
  ad=td("SITETYP  CHAR  G  LOCALSITE   RECOVERYSITE  "site_type)
  sprmsjxp = c2d(SPRMsjxp)
  ad=uz(Left("               SJMXPOOL="sprmsjxp",     ",71)"X")
  ad=td("SJMXPOOL NUM   M  0           1024          "sprmsjxp)
  sprmsjtb = c2d(SPRMsjtb)
  ad=uz(Left("               SJTABLES="sprmsjtb",     ",71)"X")
  If (BitAnd(SPRMMIS4,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                      yes_or_no = "NO"
  ad=uz(Left("               SKIPUNCI="yes_or_no",    ",71)"X")
  ad=td("SKIPUNCI CHAR  G  NO          YES           "yes_or_no)
  srt_pool = (c2d(SPRMSORP) / 1024)
  ad=uz(Left("               SRTPOOL="srt_pool",      ",71)"X")
  ad=td("OVSRTPL  CHAR  M  NONE        NONE          "srt_pool)
  If (SPRMSJR  = '0000'x) Then star_type = "ENABLE"
  Else                         star_type = "DISABLE"
  ad=uz(Left("               STARJOIN="star_type",    ",71)"X")
  ad=td("STARJOIN CHAR  M  NONE        NONE          "star_type)
  If (SPRMSTHT = "N") Then stat_type = "NONE"
  Else                     stat_type = Strip(SPRMSTHT,"B"," ")
  ad=uz(Left("               STATHIST="stat_type",    ",71)"X")
  ad=td("STATHIST CHAR  G  NONE        NONE          "stat_type)
  If (SPRMSTRL = "N") Then roll_type = "NO"
  Else                     roll_type = "YES"
  ad=uz(Left("               STATROLL="roll_type",    ",71)"X")
  ad=td("STATROLL CHAR  G  NO          YES           "yes_or_no)
  sprminte = c2d(sprminte)
  ad=uz(Left("               STATSINT="sprminte",     ",71)"X")
  ad=td("STATSINT NUM   G  1           1440          "sprminte)
  If (BitAnd(SPRMTYP,'01'x)  = '01'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               SUPERRS="yes_or_no",     ",71)"X")
  ad=td("SUPERRS  CHAR  M  NO          YES           "yes_or_no)
  sprmsadm = Strip(sprmsadm,"B"," ")
  ad=uz(Left("               SYSADM="sprmsadm",       ",71)"X")
  ad=td("PROTADMN CHARR G  $           Z9999999      "sprmsadm)
  sprmadm2 = Strip(sprmadm2,"B"," ")
  ad=uz(Left("               SYSADM2="sprmadm2",      ",71)"X")
  ad=td("PROTADM2 CHARR G  NONE        Z9999999      "sprmadm2)
  sprmopr1 = Strip(sprmopr1,"B"," ")
  ad=uz(Left("               SYSOPR1="sprmopr1",      ",71)"X")
  ad=td("PROTOPR1 CHARR G  NONE        Z9999999      "sprmopr1)
  sprmopr2 = Strip(sprmopr2,"B"," ")
  ad=uz(Left("               SYSOPR2="sprmopr2",      ",71)"X")
  ad=td("PROTOPR2 CHARR G  NONE        Z9999999      "sprmopr2)
  If (BitAnd(SPRMTYP,'40'x)  = '40'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               TRKRSITE="yes_or_no",    ",71)"X")
  ad=td("TRKRSITE CHAR  G  NO          YES           "yes_or_no)
  sprmuto = c2d(sprmuto)
  ad=uz(Left("               UTIMOUT="sprmuto",       ",71)"X")
  ad=td("UTIMOUT  NUM   M  $           NONE          "sprmuto)
  sprmvdty = Strip(sprmvdty,"B"," ")
  ad=uz(Left("               VOLTDEVT="sprmvdty",     ",71)"X")
  ad=td("VOLTDEVT CHARR M  $           99999999      "sprmvdty)
  If (BitAnd(SPRMTYP,'20'x)  = '20'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               XLKUPDLT="yes_or_no"     ",71))
  ad=td("XLKUPDLT CHAR  M  NONE        NONE          "yes_or_no)
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Decode the load module csect into fields.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
Decode_DSN6ARVP:
  grab_rc = grab_csect("DSN6ARVP")
  Select
    When (ptf_name = "UQ50308") Then Call uq50308_dsn6arvp /* V7R1M0 */
    When (ptf_name = "UQ81450") Then Call uq81450_dsn6arvp /* V8R1M0 */
    Otherwise,
      Nop
  End
  Return 0

uq50308_dsn6arvp:
  Parse Var my_txt,
    ARVPID         +2,
    ARVPLL         +2,
    ARVPEID        +4,
    ARVPBKSZ       +4,
    ARVPRISP       +4,
    ARVPSECS       +4,
    ARVPULN1       +1,
    ARVPUNT1       +8,
    ARVPRE1L       +1,
    ARVPRE1N       +35,
    ARVPRE2L       +1,
    ARVPRE2N       +35,
    ARVPFLG1       +1,
    ARVPULN2       +1,
    ARVPUNT2       +8,
    ARVPFLG2       +1,
    .              +2,
    ARVPRETN       +2,
    ARVPLVL        +8,
    ARVPMSL1       +1,
    ARVPMSV1       +8,
    ARVPMSL2       +1,
    ARVPMSV2       +8,
    ARVPMQP        +2,
    arv_reply_addr +4,
    arv_ecb_addr   +4,
    arv_reply_len  +1,
    arv_text_len   +1,
    arv_mcsflags   +2,
    wto_message    +122,
    arv_desc_codes +2,
    arv_route_code +2,
    .              +25,
    ARVPEND
  If (arvpend >< "") Then,
    Say "ARVPEND("arvpend")"
  If (Bitand(ARVPFLG1,'20'x) = '20'x) Then alcu  = "TRK"
  Else                                     alcu  = "CYL"
  ad=uz(Left("   DSN6ARVP    ALCUNIT="alcu",          ",71)"X")
  ad=td("ARCHUNIT CHAR  M  NONE        NONE          "alcu)
  arv_route_code = c2b(arv_route_code)
  routcd = ""
  Do smf_idx = 1 to 16
    If (Substr(arv_route_code,smf_idx,1) = 1) Then,
      routcd = routcd""smf_idx","
  End
  routcd = Strip(routcd,"B",",")
  ad=uz(Left("               ARCWRTC=("routcd"),     ",71)"X")
  ad=td("ARCHWRTC CHARR M  1           NONE          "routcd)
  If (Bitand(ARVPFLG1,'08'x) = '08'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               ARCWTOR="yes_or_no", ",71)"X")
  ad=td("ARCHWTOR CHAR  M  NO          YES           "yes_or_no)
  arvpre1n = Strip(arvpre1n,"B"," ")
  ad=uz(Left("               ARCPFX1="arvpre1n",      ",71)"X")
  ad=td("ARCHPRE1 CHARR M  $           NONE          "arvpre1n)
  arvpre2n = Strip(arvpre2n,"B"," ")
  ad=uz(Left("               ARCPFX2="arvpre2n",      ",71)"X")
  ad=td("ARCHPRE2 CHARR M  $           NONE          "arvpre2n)
  arvpretn = c2d(arvpretn)
  ad=uz(Left("               ARCRETN="arvpretn",      ",71)"X")
  ad=td("ARCRETN  NUM   M  0           9999          "arvpretn)
  arvpbksz = c2d(arvpbksz)
  ad=uz(Left("               BLKSIZE="arvpbksz",      ",71)"X")
  ad=td("ARCHSIZE NUM   M  8192        28672         "arvpbksz)
  If (Bitand(ARVPFLG1,'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               CATALOG="yes_or_no",     ",71)"X")
  ad=td("ARCHCTLG CHAR  M  NO          YES           "yes_or_no)
  If (Bitand(ARVPFLG1,'04'x) = '04'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               COMPACT="yes_or_no",     ",71)"X")
  ad=td("ARCHCOMP CHAR  M  NO          YES           "yes_or_no)
  arvprisp = c2d(arvprisp)
  ad=uz(Left("               PRIQTY="arvprisp",       ",71)"X")
  ad=td("ARCHPRI  CHAR  M  NONE        NONE          "arvprisp)
  If (Bitand(ARVPFLG1,'10'x) = '10'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               PROTECT="yes_or_no",     ",71)"X")
  ad=td("*PROTECT CHAR  M  NONE        NONE          "yes_or_no)
  arvpmqp = c2d(arvpmqp)
  ad=uz(Left("               QUIESCE="arvpmqp",       ",71)"X")
  ad=td("ARCHMQP  NUM   M  1           999           "arvpmqp)
  arvpsecs = c2d(arvpsecs)
  ad=uz(Left("               SECQTY="arvpsecs",       ",71)"X")
  ad=td("ARCHSEC  CHAR  M  NONE        NONE          "arvpsecs)
  If (Bitand(ARVPFLG2,'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               SVOLARC="yes_or_no",     ",71)"X")
  If (Bitand(ARVPFLG2,'80'x) = '80'x) Then svolarc = 2
  Else                                     svolarc = 1
  ad=td("ARCHTWO  NUM   M  1           2             "svolarc)
  If (Bitand(ARVPFLG1,'02'x) = '02'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               TSTAMP="yes_or_no",      ",71)"X")
  ad=td("ARCHTS   CHAR  M  NONE        NONE          "yes_or_no)
  arvpunt1 = Strip(arvpunt1,"B"," ")
  ad=uz(Left("               UNIT="arvpunt1",         ",71)"X")
  ad=td("ARCHDEVT CHARR M  $           NONE          "arvpunt1)
  arvpunt2 = Strip(arvpunt2,"B"," ")
  ad=uz(Left("               UNIT2="arvpunt2"         ",71))
  ad=td("ARCHDEV2 CHARR M  NONE        NONE          "arvpunt2)
  Return

uq81450_dsn6arvp:
  Parse Var my_txt,
    ARVPID         +2,
    ARVPLL         +2,
    ARVPEID        +4,
    ARVPBKSZ       +4,
    ARVPRISP       +4,
    ARVPSECS       +4,
    ARVPULN1       +1,
    ARVPUNT1       +8,
    ARVPRE1L       +1,
    ARVPRE1N       +35,
    ARVPRE2L       +1,
    ARVPRE2N       +35,
    ARVPFLG1       +1,
    ARVPULN2       +1,
    ARVPUNT2       +8,
    ARVPFLG2       +1,
    .              +2,
    ARVPRETN       +2,
    ARVPLVL        +8,
    ARVPMSL1       +1,
    ARVPMSV1       +8,
    ARVPMSL2       +1,
    ARVPMSV2       +8,
    ARVPMQP        +2,
    arv_reply_addr +4,
    arv_ecb_addr   +4,
    arv_reply_len  +1,
    arv_text_len   +1,
    arv_mcsflags   +2,
    wto_message    +122,
    arv_desc_codes +2,
    arv_route_code +2,
    .              +25,
    ARVPEND
  If (arvpend >< "") Then,
    Say "ARVPEND("arvpend")"
  If (Bitand(ARVPFLG1,'20'x) = '20'x) Then alcu  = "TRK"
  Else                                     alcu  = "CYL"
  ad=uz(Left("   DSN6ARVP    ALCUNIT="alcu",          ",71)"X")
  ad=td("ARCHUNIT CHAR  M  NONE        NONE          "alcu)
  arv_route_code = c2b(arv_route_code)
  routcd = ""
  Do smf_idx = 1 to 16
    If (Substr(arv_route_code,smf_idx,1) = 1) Then,
      routcd = routcd""smf_idx","
  End
  routcd = Strip(routcd,"B",",")
  ad=uz(Left("               ARCWRTC=("routcd"),     ",71)"X")
  ad=td("ARCHWRTC CHARR M  1           NONE          "routcd)
  If (Bitand(ARVPFLG1,'08'x) = '08'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               ARCWTOR="yes_or_no", ",71)"X")
  ad=td("ARCHWTOR CHAR  M  NO          YES           "yes_or_no)
  arvpre1n = Strip(arvpre1n,"B"," ")
  ad=uz(Left("               ARCPFX1="arvpre1n",      ",71)"X")
  ad=td("ARCHPRE1 CHARR M  $           NONE          "arvpre1n)
  arvpre2n = Strip(arvpre2n,"B"," ")
  ad=uz(Left("               ARCPFX2="arvpre2n",      ",71)"X")
  ad=td("ARCHPRE2 CHARR M  $           NONE          "arvpre2n)
  arvpretn = c2d(arvpretn)
  ad=uz(Left("               ARCRETN="arvpretn",      ",71)"X")
  ad=td("ARCRETN  NUM   M  0           9999          "arvpretn)
  arvpbksz = c2d(arvpbksz)
  ad=uz(Left("               BLKSIZE="arvpbksz",      ",71)"X")
  ad=td("ARCHSIZE NUM   M  8192        28672         "arvpbksz)
  If (Bitand(ARVPFLG1,'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               CATALOG="yes_or_no",     ",71)"X")
  ad=td("ARCHCTLG CHAR  M  NO          YES           "yes_or_no)
  If (Bitand(ARVPFLG1,'04'x) = '04'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               COMPACT="yes_or_no",     ",71)"X")
  ad=td("ARCHCOMP CHAR  M  NO          YES           "yes_or_no)
  arvprisp = c2d(arvprisp)
  ad=uz(Left("               PRIQTY="arvprisp",       ",71)"X")
  ad=td("ARCHPRI  CHAR  M  NONE        NONE          "arvprisp)
  If (Bitand(ARVPFLG1,'10'x) = '10'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               PROTECT="yes_or_no",     ",71)"X")
  ad=td("*PROTECT CHAR  M  NONE        NONE          "yes_or_no)
  arvpmqp = c2d(arvpmqp)
  ad=uz(Left("               QUIESCE="arvpmqp",       ",71)"X")
  ad=td("ARCHMQP  NUM   M  1           999           "arvpmqp)
  arvpsecs = c2d(arvpsecs)
  ad=uz(Left("               SECQTY="arvpsecs",       ",71)"X")
  ad=td("ARCHSEC  CHAR  M  NONE        NONE          "arvpsecs)
  If (Bitand(ARVPFLG2,'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               SVOLARC="yes_or_no",     ",71)"X")
  If (Bitand(ARVPFLG2,'80'x) = '80'x) Then svolarc = 2
  Else                                     svolarc = 1
  ad=td("ARCHTWO  NUM   M  1           2             "svolarc)
  If (Bitand(ARVPFLG1,'02'x) = '02'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               TSTAMP="yes_or_no",      ",71)"X")
  ad=td("ARCHTS   CHAR  M  NONE        NONE          "yes_or_no)
  arvpunt1 = Strip(arvpunt1,"B"," ")
  ad=uz(Left("               UNIT="arvpunt1",         ",71)"X")
  ad=td("ARCHDEVT CHARR M  $           NONE          "arvpunt1)
  arvpunt2 = Strip(arvpunt2,"B"," ")
  ad=uz(Left("               UNIT2="arvpunt2"         ",71))
  ad=td("ARCHDEV2 CHARR M  NONE        NONE          "arvpunt2)
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Decode the load module csect into fields.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
Decode_DSN6LOGP:
  grab_rc = grab_csect("DSN6LOGP")
  Select
    When (ptf_name = "UQ50308") Then Call uq50308_dsn6logp /* V7R1M0 */
    When (ptf_name = "UQ81450") Then Call uq81450_dsn6logp /* V8R1M0 */
    Otherwise,
      Nop
  End
  Return 0

uq50308_dsn6logp:
  Parse Var my_txt,
    LOGPID         +2,
    LOGPLL         +2,
    LOGPEID        +4,
    .              +2,
    LOGOPT1        +1,
    LOGOPT2        +1,
    .              +4,
    LOGPOBPS       +4,
    .              +4,
    LOGPARCL       +4,
    LOGPMRTU       +2,
    LOGPWRTH       +2,
    LOGPLVL        +8,
    LOGPDMIN       +2,
    LOGPDSEC       +2,
    .              +212,
    LOGPEND
  If (logpend >< "") Then,
    Say "LOGPEND("logpend")"
  logpdmin = c2d(logpdmin)
  ad=uz(Left("   DSN6LOGP    DEALLCT=("logpdmin"),    ",71)"X")
  ad=td("*DEALLCT                                     "logpdmin)
  logparcl = c2d(logparcl)
  ad=uz(Left("               MAXARCH="logparcl",      ",71)"X")
  ad=td("ARCHMAXV NUM   M  10          10000         "logparcl)
  logpmrtu = c2d(logpmrtu)
  ad=uz(Left("               MAXRTU="logpmrtu",       ",71)"X")
  ad=td("ARCHMRTU NUM   M  1           99            "logpmrtu)
  logpobps = c2d(logpobps)
  ad=uz(Left("               OUTBUFF="logpobps",      ",71)"X")
  If (Bitand(LOGPOPT1,'60'x) = '60'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               TWOACTV="yes_or_no",     ",71)"X")
  ad=td("LOGSTWO  NUM   M  1           2             "logstwo)
  If (Bitand(LOGPOPT2,'80'x) = '80'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               TWOARCH="yes_or_no",     ",71)"X")
  ad=td("ARCHTWO  NUM   M  1           2             "svolarc)
  If (Bitand(LOGPOPT2,'10'x) = '10'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               TWOBSDS="yes_or_no",     ",71)"X")
  If (Bitand(LOGPOPT2,'40'x) = '40'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               ARC2FRST="yes_or_no"     ",71))
  ad=td("ARC2FRST CHAR  M  NO          YES           "yes_or_no)
  Return

uq81450_dsn6logp:
  Parse Var my_txt,
    LOGPID         +2,
    LOGPLL         +2,
    LOGPEID        +4,
    .              +2,
    LOGOPT1        +1,
    LOGOPT2        +1,
    .              +4,
    LOGPOBPS       +4,
    .              +4,
    LOGPARCL       +4,
    LOGPMRTU       +2,
    LOGPWRTH       +2,
    LOGPLVL        +8,
    LOGPDMIN       +2,
    LOGPDSEC       +2,
    .              +212,
    LOGPEND
  If (logpend >< "") Then,
    Say "LOGPEND("logpend")"
  logpdmin = c2d(logpdmin)
  ad=uz(Left("   DSN6LOGP    DEALLCT=("logpdmin"),    ",71)"X")
  ad=td("*DEALLCT                                     "logpdmin)
  logparcl = c2d(logparcl)
  ad=uz(Left("               MAXARCH="logparcl",      ",71)"X")
  ad=td("ARCHMAXV NUM   M  10          10000         "logparcl)
  logpmrtu = c2d(logpmrtu)
  ad=uz(Left("               MAXRTU="logpmrtu",       ",71)"X")
  ad=td("ARCHMRTU NUM   M  1           99            "logpmrtu)
  logpobps = c2d(logpobps)
  ad=uz(Left("               OUTBUFF="logpobps",      ",71)"X")
  If (Bitand(LOGPOPT1,'60'x) = '60'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               TWOACTV="yes_or_no",     ",71)"X")
  ad=td("LOGSTWO  NUM   M  1           2             "logstwo)
  If (Bitand(LOGPOPT2,'80'x) = '80'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               TWOARCH="yes_or_no",     ",71)"X")
  ad=td("ARCHTWO  NUM   M  1           2             "svolarc)
  If (Bitand(LOGPOPT2,'40'x) = '40'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               ARC2FRST="yes_or_no"     ",71))
  ad=td("ARC2FRST CHAR  M  NO          YES           "yes_or_no)
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Decode the load module csect into fields.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
Decode_DSN6SYSP:
  grab_rc = grab_csect("DSN6SYSP")
  Select
    When (ptf_name = "UQ50308") Then Call uq50308_dsn6sysp /* V7R1M0 */
    When (ptf_name = "UQ81450") Then Call uq81450_dsn6sysp /* V8R1M0 */
    Otherwise,
      Nop
  End
  Return 0

uq50308_dsn6sysp:
  Parse Var my_txt,
    SYSPSMRC       +2,
    SYSPTRSZ       +2,
    .              +2,
    SYSPTLSZ       +2,
    SYSPLOGL       +4,
    SYSPIDB        +2,
    SYSPIDF        +2,
    SYSPCT         +2,
    SYSPRMT        +2,
    SYSPLVL        +2,
    SYSPDTIM       +2,
    SYSPDB1M       +4,
    SYSPCRIT       +4,
    SYSPSOS        +4,
    SYSPSTIM       +2,
    SYSPDBPR       +1,
    SYSPFLAG       +1,
    SYSPTRST       +4,
    SYSPSMFS       +4,
    SYSPSMFA       +4,
    SYSPAUDT       +4,
    SYSPRLFA       +8,
    SYSPRLFT       +2,
    .              +1,
    SYSPRLFR       +1,
    sysprlfn       +4,
    SYSPMON        +4,
    SYSPMONS       +4,
    SYSPFRQ        +2,
    SYSPTMR        +2,
    .              +2,
    SYSPDFRQ       +2,
    SYSPSPPN       +8,
    SYSPSPAB       +2,
    SYSPSPTO       +2,
    SYSPLVLC       +8,
    SYSPSCER       +1,
    SYSPURCK       +1,
    SYSPFLBZ       +1,
    SYSPTBPL       +4,
    SYSPIXPL       +4,
    SYSPWLME       +18,
    SYSPLMBO       +4,
    SYSPBDUR       +1,
    SYSPEXBR       +2,
    SYSPEXBS       +2,
    .              +1,
    SYSPSYFL       +1,
    SYSPSYNV       +4,
    SYSPURLW       +4,
    SYSPLVA        +4,
    SYSPLVS        +4,
    SYSPCDB        +4,
    SYSPTSQT       +4,
    SYSPIXQT       +4,
    .              +92,
    SYSPEND
  If (syspend >< "") Then,
    Say "SYSPEND("syspend")"
  Say ,
    SYSPLVLC
  syspaudt = c2b(syspaudt)
  smf_audit = ""
  Do smf_idx = 1 to 32
    If (Substr(syspaudt,smf_idx,1) = 1) Then,
      smf_audit = smf_audit""smf_idx","
  End
  smf_audit = "("Strip(smf_audit,"B",",")")"
  If (smf_audit = "()") Then smf_audit = "NO"
  ad=uz(Left("   DSN6SYSP    AUDITST="smf_audit",     ",71)"X")
  ad=td("OPSMFSTA CHAR  M  NONE        NONE          "yes_or_no)
  syspbdur = c2d(syspbdur)
  ad=uz(Left("               BACKODUR="syspbdur",     ",71)"X")
  ad=td("BACKODUR NUM   M  0           255           "syspbdur)
  sysplogl = c2d(sysplogl)
  ad=uz(Left("               CHKFREQ="sysplogl",      ",71)"X")
  syspcdb  = c2d(syspcdb)
  ad=uz(Left("               CONDBAT="syspcdb",       ",71)"X")
  syspct   = c2d(syspct)
  ad=uz(Left("               CTHREAD="syspct",        ",71)"X")
  If (SYSPDBPR = "P") Then db_protocol = "PRIVATE"
  Else                     db_protocol = "DRDA"
  ad=uz(Left("               DBPROTCL="db_protocol",  ",71)"X")
  ad=td("DBPROTCL CHAR  G  DRDA        PRIVATE       "db_protocol)
  syspdfrq = c2d(syspdfrq)
  ad=uz(Left("               DLDFREQ="syspdfrq",      ",71)"X")
  ad=td("DLDFREQ  NUM   M  0           32767         "syspdfrq)
  syspdtim = c2d(syspdtim)
  ad=uz(Left("               DSSTIME="syspdtim",      ",71)"X")
  ad=td("DSSTIME  NUM   M  1           1440          "syspdtim)
  syspexbr = c2d(syspexbr)
  ad=uz(Left("               EXTRAREQ="syspexbr",     ",71)"X")
  ad=td("EXTRAREQ NUM   M  0           100           "syspexbr)
  syspexbs = c2d(syspexbs)
  ad=uz(Left("               EXTRASRV="syspexbs",     ",71)"X")
  ad=td("EXTRASRV NUM   M  0           100           "syspexbs)
  If (SYSPSCER = "P") Then yes_or_no = "NO"
  Else                     yes_or_no = "YES"
  ad=uz(Left("               EXTSEC="yes_or_no",      ",71)"X")
  ad=td("EXTSEC   CHAR  G  NO          YES           "yes_or_no)
  syspidb  = c2d(syspidb)
  ad=uz(Left("               IDBACK="syspidb",        ",71)"X")
  syspidf  = c2d(syspidf)
  ad=uz(Left("               IDFORE="syspidf",        ",71)"X")
  syspixpl = Strip(syspixpl,"B"," ")
  ad=uz(Left("               IDXBPOOL="syspixpl",     ",71)"X")
  ad=td("IDXBPOOL CHAR  M  NONE        NONE          "syspixpl)
  sysplmbo = Strip(sysplmbo,"B"," ")
  ad=uz(Left("               LBACKOUT="sysplmbo",     ",71)"X")
  ad=td("LBACKOUT CHAR  M  NONE        NONE          "sysplmbo)
  sysplva  = c2d(sysplva)
  ad=uz(Left("               LOBVALA="sysplva",       ",71)"X")
  ad=td("LOBVALA  NUM   M  1           2097152       "sysplva)
  sysplvs  = c2d(sysplvs)
  ad=uz(Left("               LOBVALS="sysplvs",       ",71)"X")
  ad=td("LOBVALS  NUM   M  1           51200         "sysplvs)
  syspflbz = c2d(syspflbz)
  ad=uz(Left("               LOGAPSTG="syspflbz",     ",71)"X")
  ad=td("LOGAPSTG NUM   M  NONE        NONE          "syspflbz)
  sysprmt  = c2d(sysprmt)
  ad=uz(Left("               MAXDBAT="sysprmt",       ",71)"X")
  If (Bitand(Left(SYSPMON,1),'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                            yes_or_no = "NO"
  ad=uz(Left("               MON="yes_or_no",         ",71)"X")
  ad=td("MON      CHAR  M  NONE        NONE          "yes_or_no)
  syspmons = c2d(syspmons)
  ad=uz(Left("               MONSIZE="syspmons",      ",71)"X")
  ad=td("MONSIZE  NUM   M  262144      16777216      "syspmons"K")
  SYSPFRQ  = c2d(SYSPFRQ)
  ad=uz(Left("               PCLOSEN="SYSPFRQ",       ",71)"X")
  ad=td("PCLOSEN  NUM   M  1           32767         "SYSPFRQ)
  sysptmr  = c2d(sysptmr)
  ad=uz(Left"                PCLOSET="sysptmr",       ",71)"X"
  ad=td("PCLOSET  NUM   M  1           32767         "sysptmr)
  If (Bitand(SYSPFLAG,'20'x) = '20'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               PTASKROL="yes_or_no",    ",71)"X")
  sysprlfr = c2d(sysprlfr)
  If (sysprlfr = 0) Then yes_or_no = "NO"
  Else                   yes_or_no = "YES"
  ad=uz(Left("               RLF="yes_or_no",         ",71)"X")
  ad=uz(Left("               RLFTBL="sysprlft",       ",71)"X")
  ad=td("RLFSUFF  CHARR M  AA          99            "sysprlft)
  sysprlfn = c2d(sysprlfn)
  If (sysprlfn = 0) Then sysprlfn = "NOLIMIT"
  ad=uz(Left("               RLFERR="sysprlfn",       ",71)"X")
  ad=td("RLFERROR CHAR  M  NONE        NONE          "facrlfn)
  sysprlfa = Strip(sysprlfa,"B"," ")
  ad=uz(Left("               RLFAUTH="sysprlfa",      ",71)"X")
  syspsmrc = c2b(syspsmrc)
  routcd = ""
  Do smf_idx = 1 to 16
    If (Substr(syspsmrc,smf_idx,1) = 1) Then,
      routcd = routcd""smf_idx","
  End
  routcd = Strip(routcd,"B",",")
  ad=uz(Left("               ROUTCDE=("routcd"),      ",71)"X")
  syspsmfa = c2b(syspsmfa)
  smf_acct = ""
  Do smf_idx = 1 to 32
    If (Substr(syspsmfa,smf_idx,1) = 1) Then,
      smf_acct = smf_acct""smf_idx","
  End
  smf_acct = Strip(smf_acct,"B",",")
  ad=uz(Left("               SMFACCT=("smf_acct"),    ",71)"X")
  ad=td("OPSMFACT CHAR  M  NONE        NONE          "smf_acct)
  If (SYSPSMFS = '00000000'x) Then yes_or_no = "NO"
  Else                       yes_or_no = "YES"
  ad=uz(Left("               SMFSTAT="yes_or_no",     ",71)"X")
  ad=td("OPSMFSTA CHAR  M  NONE        NONE          "yes_or_no)
  syspstim = c2d(syspstim)
  ad=uz(Left("               STATIME="syspstim",      ",71)"X")
  ad=td("OPSTATIM NUM   M  1           1440          "syspstim)
  syspspab = c2d(syspspab)
  ad=uz(Left("               STORMXAB="syspspab",     ",71)"X")
  ad=td("STORMXAB NUM   M  0           255           "syspspab)
  syspsppn = Strip(syspsppn,"B"," ")
  ad=uz(Left("               STORPROC="syspsppn",     ",71)"X")
  ad=td("STORPROC CHARR M  NONE        NONE          "syspsppn)
  syspspto = c2d(syspspto)
  ad=uz(Left("               STORTIME="syspspto",     ",71)"X")
  ad=td("STORTIME CHAR  M  NONE        NONE          "syspspto)
  syspsynv = c2d(syspsynv)
  If (syspsynv = 4294967295) Then syspsynv = "NO"
  ad=uz(Left("               SYNCVAL="syspsynv",      ",71)"X")
  ad=td("SYNCVAL  CHAR  M  NONE        NONE          "yes_or_no)
  sysptbpl = Strip(sysptbpl,"B"," ")
  ad=uz(Left("               TBSBPOOL="sysptbpl",     ",71)"X")
  If (SYSPTRST = '00'x) Then yes_or_no = "YES"
  Else                       yes_or_no = "NO"
  ad=uz(Left("               TRACSTR="yes_or_no",     ",71)"X")
  sysptlsz = c2d(sysptlsz)
  ad=uz(Left("               TRACTBL="sysptlsz",      ",71)"X")
  syspurck = c2d(syspurck)
  ad=uz(Left("               URCHKTH="syspurck",      ",71)"X")
  ad=td("URCHKTH  NUM   M  0           255           "syspurck)
  syspurlw = c2d(syspurlw) / 1000
  ad=uz(Left("               URLGWTH="syspurlw",      ",71)"X")
  ad=td("URLGWTH  NUM   M  NONE        NONE          "syspurlw)
  ad=uz(Left("               WLMENV="syspwlme"        ",71))
  ad=td("WLMENV   CHAR  M  NONE        NONE          "syspwlme)
  Return

uq81450_dsn6sysp:
  Parse Var my_txt,
    SYSPSMRC       +2,
    SYSPTRSZ       +2,
    .              +2,
    SYSPTLSZ       +2,
    SYSPLOGL       +4,
    SYSPIDB        +2,
    SYSPIDF        +2,
    SYSPCT         +2,
    SYSPRMT        +2,
    SYSPLVL        +2,
    SYSPDTIM       +2,
    SYSPDB1M       +4,
    SYSPCRIT       +4,
    SYSPSOS        +4,
    SYSPSTIM       +2,
    SYSPDBPR       +1,
    SYSPFLAG       +1,
    SYSPTRST       +4,
    SYSPSMFS       +4,
    SYSPSMFA       +4,
    SYSPAUDT       +4,
    SYSPRLFA       +8,
    SYSPRLFT       +2,
    .              +1,
    SYSPRLFR       +1,
    sysprlfn       +4,
    SYSPMON        +4,
    SYSPMONS       +4,
    SYSPFRQ        +2,
    SYSPTMR        +2,
    .              +2,
    SYSPDFRQ       +2,
    SYSPSPPN       +8,
    SYSPSPAB       +2,
    SYSPSPTO       +2,
    SYSPLVLC       +8,
    SYSPSCER       +1,
    SYSPURCK       +1,
    SYSPFLBZ       +1,
    SYSPTBPL       +4,
    SYSPIXPL       +4,
    SYSPWLME       +18,
    SYSPLMBO       +4,
    SYSPBDUR       +1,
    SYSPEXBR       +2,
    SYSPEXBS       +2,
    .              +1,
    SYSPSYFL       +1,
    SYSPSYNV       +4,
    SYSPURLW       +4,
    SYSPLVA        +4,
    SYSPLVS        +4,
    SYSPCDB        +4,
    SYSPTSQT       +4,
    SYSPIXQT       +4,
    SYSPRLFA_Off   +2,
    SYSPACCU       +2,
    SYSPACID       +2,
    .              +86,
    SYSPRLFA_Len   +2,
    SYSPRLFA_Var   +128,
    SYSPEND
  If (syspend >< "") Then,
    Say "SYSPEND("syspend")"
  Say ,
    SYSPLVLC
  syspaccu = c2d(syspaccu)
  ad=uz(Left("   DSN6SYSP    ACCUMACC="syspaccu",     ",71)"X")
  ad=td("ACCUMACC CHAR  M  NONE        NONE          "syspaccu)
  syspacid = c2d(syspacid)
  ad=uz(Left("               ACCUMUID="syspacid",     ",71)"X")
  ad=td("ACCUMACC CHAR  M  NONE        NONE          "syspaccu)
  syspaudt = c2b(syspaudt)
  smf_audit = ""
  Do smf_idx = 1 to 32
    If (Substr(syspaudt,smf_idx,1) = 1) Then,
      smf_audit = smf_audit""smf_idx","
  End
  smf_audit = "("Strip(smf_audit,"B",",")")"
  If (smf_audit = "()") Then smf_audit = "NO"
  ad=uz(Left("               AUDITST="smf_audit",     ",71)"X")
  ad=td("OPSMFSTA CHAR  M  NONE        NONE          "yes_or_no)
  syspbdur = c2d(syspbdur)
  ad=uz(Left("               BACKODUR="syspbdur",     ",71)"X")
  ad=td("BACKODUR NUM   M  0           255           "syspbdur)
  sysplogl = c2d(sysplogl)
  ad=uz(Left("               CHKFREQ="sysplogl",      ",71)"X")
  syspcdb  = c2d(syspcdb)
  ad=uz(Left("               CONDBAT="syspcdb",       ",71)"X")
  syspct   = c2d(syspct)
  ad=uz(Left("               CTHREAD="syspct",        ",71)"X")
  If (SYSPDBPR = "P") Then db_protocol = "PRIVATE"
  Else                     db_protocol = "DRDA"
  ad=uz(Left("               DBPROTCL="db_protocol",  ",71)"X")
  ad=td("DBPROTCL CHAR  G  DRDA        PRIVATE       "db_protocol)
  syspdfrq = c2d(syspdfrq)
  ad=uz(Left("               DLDFREQ="syspdfrq",      ",71)"X")
  ad=td("DLDFREQ  NUM   M  0           32767         "syspdfrq)
  syspdtim = c2d(syspdtim)
  ad=uz(Left("               DSSTIME="syspdtim",      ",71)"X")
  ad=td("DSSTIME  NUM   M  1           1440          "syspdtim)
  If (Bitand(SYSPFLAG,'04'x) = '04'x) Then yes_or_no = "NO"
  Else                                     yes_or_no = "YES"
  ad=uz(Left("               DSVCI="yes_or_no",       ",71)"X")
  ad=td("DSVCI    CHAR  G  NO          YES           "yes_or_no)
  syspexbr = c2d(syspexbr)
  ad=uz(Left("               EXTRAREQ="syspexbr",     ",71)"X")
  ad=td("EXTRAREQ NUM   M  0           100           "syspexbr)
  syspexbs = c2d(syspexbs)
  ad=uz(Left("               EXTRASRV="syspexbs",     ",71)"X")
  ad=td("EXTRASRV NUM   M  0           100           "syspexbs)
  If (SYSPSCER = "P") Then yes_or_no = "NO"
  Else                     yes_or_no = "YES"
  ad=uz(Left("               EXTSEC="yes_or_no",      ",71)"X")
  ad=td("EXTSEC   CHAR  G  NO          YES           "yes_or_no)
  syspidb  = c2d(syspidb)
  ad=uz(Left("               IDBACK="syspidb",        ",71)"X")
  syspidf  = c2d(syspidf)
  ad=uz(Left("               IDFORE="syspidf",        ",71)"X")
  syspixpl = Strip(syspixpl,"B"," ")
  ad=uz(Left("               IDXBPOOL="syspixpl",     ",71)"X")
  ad=td("IDXBPOOL CHAR  M  NONE        NONE          "syspixpl)
  syspixqt = c2d(syspixqt)
  ad=uz(Left("               IXQTY="syspixqt",        ",71)"X")
  ad=td("IXQTY    NUM   G  0           4194304       "syspixqt)
  sysplmbo = Strip(sysplmbo,"B"," ")
  ad=uz(Left("               LBACKOUT="sysplmbo",     ",71)"X")
  ad=td("LBACKOUT CHAR  M  NONE        NONE          "sysplmbo)
  sysplva  = c2d(sysplva)
  ad=uz(Left("               LOBVALA="sysplva",       ",71)"X")
  ad=td("LOBVALA  NUM   M  1           2097152       "sysplva)
  sysplvs  = c2d(sysplvs)
  ad=uz(Left("               LOBVALS="sysplvs",       ",71)"X")
  ad=td("LOBVALS  NUM   M  1           51200         "sysplvs)
  syspflbz = c2d(syspflbz)
  ad=uz(Left("               LOGAPSTG="syspflbz",     ",71)"X")
  ad=td("LOGAPSTG NUM   M  NONE        NONE          "syspflbz)
  sysprmt  = c2d(sysprmt)
  ad=uz(Left("               MAXDBAT="sysprmt",       ",71)"X")
  If (Bitand(SYSPFLAG,'04'x) = '04'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               MGEXTSZ="yes_or_no",     ",71)"X")
  ad=td("MGEXTSZ  CHAR  M  NO          YES           "yes_or_no)
  If (Bitand(Left(SYSPMON,1),'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                            yes_or_no = "NO"
  ad=uz(Left("               MON="yes_or_no",         ",71)"X")
  ad=td("MON      CHAR  M  NONE        NONE          "yes_or_no)
  syspmons = c2d(syspmons)
  ad=uz(Left("               MONSIZE="syspmons",      ",71)"X")
  ad=td("MONSIZE  NUM   M  262144      16777216      "syspmons"K")
  SYSPFRQ  = c2d(SYSPFRQ)
  ad=uz(Left("               PCLOSEN="SYSPFRQ",       ",71)"X")
  ad=td("PCLOSEN  NUM   M  1           32767         "SYSPFRQ)
  sysptmr  = c2d(sysptmr)
  ad=uz(Left("               PCLOSET="sysptmr",       ",71)"X")
  ad=td("PCLOSET  NUM   M  1           32767         "sysptmr)
  sysprlfr = c2d(sysprlfr)
  If (sysprlfr = 0) Then yes_or_no = "NO"
  Else                   yes_or_no = "YES"
  ad=uz(Left("               RLF="yes_or_no",         ",71)"X")
  ad=uz(Left("               RLFTBL="sysprlft",       ",71)"X")
  ad=td("RLFSUFF  CHARR M  AA          99            "sysprlft)
  sysprlfn = c2d(sysprlfn)
  If (sysprlfn = 0) Then sysprlfn = "NOLIMIT"
  ad=uz(Left("               RLFERR="sysprlfn",       ",71)"X")
  ad=td("RLFERROR CHAR  M  NONE        NONE          "facrlfn)
  sysprlfa = Strip(sysprlfa,"B"," ")
  ad=uz(Left("               RLFAUTH="sysprlfa",      ",71)"X")
  syspsmrc = c2b(syspsmrc)
  routcd = ""
  Do smf_idx = 1 to 16
    If (Substr(syspsmrc,smf_idx,1) = 1) Then,
      routcd = routcd""smf_idx","
  End
  routcd = Strip(routcd,"B",",")
  ad=uz(Left("               ROUTCDE=("routcd"),      ",71)"X")
  syspsmfa = c2b(syspsmfa)
  smf_acct = ""
  Do smf_idx = 1 to 32
    If (Substr(syspsmfa,smf_idx,1) = 1) Then,
      smf_acct = smf_acct""smf_idx","
  End
  smf_acct = Strip(smf_acct,"B",",")
  ad=uz(Left("               SMFACCT=("smf_acct"),    ",71)"X")
  ad=td("OPSMFACT CHAR  M  NONE        NONE          "smf_acct)
  If (SYSPSMFS = '00000000'x) Then yes_or_no = "NO"
  Else                       yes_or_no = "YES"
  ad=uz(Left("               SMFSTAT="yes_or_no",     ",71)"X")
  ad=td("OPSMFSTA CHAR  M  NONE        NONE          "yes_or_no)
  If (Bitand(SYSPFLAG,'02'x) = '02'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               SMF89="yes_or_no",       ",71)"X")
  syspstim = c2d(syspstim)
  ad=uz(Left("               STATIME="syspstim",      ",71)"X")
  ad=td("OPSTATIM NUM   M  1           1440          "syspstim)
  syspspab = c2d(syspspab)
  ad=uz(Left("               STORMXAB="syspspab",     ",71)"X")
  ad=td("STORMXAB NUM   M  0           255           "syspspab)
  syspsppn = Strip(syspsppn,"B"," ")
  ad=uz(Left("               STORPROC="syspsppn",     ",71)"X")
  ad=td("STORPROC CHARR M  NONE        NONE          "syspsppn)
  syspspto = c2d(syspspto)
  ad=uz(Left("               STORTIME="syspspto",     ",71)"X")
  ad=td("STORTIME CHAR  M  NONE        NONE          "syspspto)
  syspsynv = c2d(syspsynv)
  ad=uz(Left("               SYNCVAL="syspsynv",      ",71)"X")
  ad=td("SYNCVAL  CHAR  M  NONE        NONE          "yes_or_no)
  sysptbpl = Strip(sysptbpl,"B"," ")
  ad=uz(Left("               TBSBPOOL="sysptbpl",     ",71)"X")
  If (SYSPTRST = '00'x) Then yes_or_no = "YES"
  Else                       yes_or_no = "NO"
  ad=uz(Left("               TRACSTR="yes_or_no",     ",71)"X")
  sysptlsz = c2d(sysptlsz) / 4
  ad=uz(Left("               TRACTBL="sysptlsz",      ",71)"X")
  sysptsqt = c2d(sysptsqt)
  ad=uz(Left("               TSQTY="sysptsqt",        ",71)"X")
  ad=td("TSQTY    NUM   G  0           4194304       "sysptsqt)
  If (Bitand(SYSPFLAG,'10'x) = '10'x) Then yes_or_no = "YES"
  Else                                     yes_or_no = "NO"
  ad=uz(Left("               UIFCIDS="yes_or_no",     ",71)"X")
  ad=td("UIFCIDS  CHAR  G  NO          YES           "yes_or_no)
  syspurck = c2d(syspurck)
  ad=uz(Left("               URCHKTH="syspurck",      ",71)"X")
  ad=td("URCHKTH  NUM   M  0           255           "syspurck)
  syspurlw = c2d(syspurlw) / 1000
  ad=uz(Left("               URLGWTH="syspurlw",      ",71)"X")
  ad=td("URLGWTH  NUM   M  NONE        NONE          "syspurlw)
  ad=uz(Left("               WLMENV="syspwlme"        ",71))
  ad=td("WLMENV   CHAR  M  NONE        NONE          "syspwlme)
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Decode the load module csect into fields.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
Decode_DSN6FAC:
  grab_rc = grab_csect("DSN6FAC")
  Select
    When (ptf_name = "UQ50308") Then Call uq50308_dsn6fac  /* V7R1M0 */
    When (ptf_name = "UQ81450") Then Call uq81450_dsn6fac  /* V8R1M0 */
    Otherwise,
      Nop
  End
  Return 0

uq50308_dsn6fac:
  Parse Var my_txt,
    FACID          +2,
    FACLL          +2,
    FACEID         +4,
    FACNM          +2,
    FACTOIN        +2,
    FACNAME        +8,
    FACSTART       +1,
    FACRLFER       +1,
    FACRESYC       +2,
    FACRLFN        +4,
    FACCMST        +8,
    FACMISC        +1,
    .              +3,
    FACMAX1        +4,
    FACTCKA        +2,
    FACINAC        +2,
    .              +40,
    FACEND
  If (facend >< "") Then,
    Say "FACEND("facend")"
  If (facstart = "A") then ddf_start = "AUTO"
  Else                     ddf_start = "NOSTART"
  ad=uz(Left("    DSN6FAC    DDF="ddf_start",         ",71)"X")
  faccmst = Strip(faccmst,"B"," ")
  ad=uz(Left("               CMTSTAT="faccmst",       ",71)"X")
  ad=td("CMTSTAT  CHAR  M  ACTIVE      INACTIVE      "faccmst)
  factoin = c2d(factoin)
  ad=uz(Left("               IDTHTOIN="factoin",      ",71)"X")
  facresyc = c2d(facresyc)
  ad=uz(Left("               RESYNC="facresyc",       ",71)"X")
  facrlfer = c2d(facrlfer)
  facrlfn = c2d(facrlfn)
  If (facrlfer = 128) Then facrlfn = "NOLIMIT"
  ad=uz(Left("               RLFERRD="facrlfn",       ",71)"X")
  If (Bitand(FACMISC,'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                    yes_or_no = "NO"
  ad=uz(Left("               TCPALVER="yes_or_no",    ",71)"X")
  facmax1 = c2d(facmax1)
  ad=uz(Left("               MAXTYPE1="facmax1",      ",71)"X")
  factcka = c2d(factcka)
  Select
    When (factcka = 0)     Then keep_alive = "ENABLE"
    When (factcka = 65535) Then keep_alive = "DISABLE"
    Otherwise,
                                keep_alive = factcka
  End
  ad=uz(Left("               TCPKPALV="keep_alive",   ",71)"X")
  facinac = c2d(facinac)
  ad=uz(Left("               POOLINAC="facinac"       ",71))
  Return

uq81450_dsn6fac:
  Parse Var my_txt,
    FACID          +2,
    FACLL          +2,
    FACEID         +4,
    FACNM          +2,
    FACTOIN        +2,
    FACNAME        +8,
    FACSTART       +1,
    FACRLFER       +1,
    FACRESYC       +2,
    FACRLFN        +4,
    FACCMST        +8,
    FACMISC        +1,
    .              +3,
    FACMAX1        +4,
    FACTCKA        +2,
    FACINAC        +2,
    .              +40,
    FACEND
  If (facend >< "") Then,
    Say "FACEND("facend")"
  If (facstart = "A") then ddf_start = "AUTO"
  Else                     ddf_start = "NOSTART"
  ad=uz(Left("    DSN6FAC    DDF="ddf_start",         ",71)"X")
  faccmst = Strip(faccmst,"B"," ")
  ad=uz(Left("               CMTSTAT="faccmst",       ",71)"X")
  ad=td("CMTSTAT  CHAR  M  ACTIVE      INACTIVE      "faccmst)
  factoin = c2d(factoin)
  ad=uz(Left("               IDTHTOIN="factoin",      ",71)"X")
  facresyc = c2d(facresyc)
  ad=uz(Left("               RESYNC="facresyc",       ",71)"X")
  facrlfer = c2d(facrlfer)
  facrlfn = c2d(facrlfn)
  If (facrlfer = 128) Then facrlfn = "NOLIMIT"
  ad=uz(Left("               RLFERRD="facrlfn",       ",71)"X")
  If (Bitand(FACMISC,'80'x) = '80'x) Then yes_or_no = "YES"
  Else                                    yes_or_no = "NO"
  ad=uz(Left("               TCPALVER="yes_or_no",    ",71)"X")
  facmax1 = c2d(facmax1)
  ad=uz(Left("               MAXTYPE1="facmax1",      ",71)"X")
  factcka = c2d(factcka)
  Select
    When (factcka = 0)     Then keep_alive = "ENABLE"
    When (factcka = 65535) Then keep_alive = "DISABLE"
    Otherwise,
                                keep_alive = factcka
  End
  ad=uz(Left("               TCPKPALV="keep_alive",   ",71)"X")
  facinac = c2d(facinac)
  ad=uz(Left("               POOLINAC="facinac"       ",71))
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Decode the load module csect into fields.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
Decode_DSN6GRP:
  grab_rc = grab_csect("DSN6GRP")
  Select
    When (ptf_name = "UQ50308") Then Call uq50308_dsn6grp  /* V7R1M0 */
    When (ptf_name = "UQ81450") Then Call uq81450_dsn6grp  /* V8R1M0 */
    Otherwise,
      Nop
  End
  Return 0

uq50308_dsn6grp:
  Parse Var my_txt,
    GRPID          +2,
    GRPLEN         +2,
    GRPEYE         +4,
    GRPLVL         +8,
    GRPNAME        +8,
    GRPMNAME       +8,
    GRPDSHR        +1,
    GRPCOOR        +1,
    GRPASST        +1,
    GRPIMMW        +1,
    GRPMAXM        +4,
    GRPSUCV        +4,
    .              +212,
    GRPEND
  If (syspend >< "") Then,
    Say "SYSPEND("syspend")"
  If (grpdshr = '0'x) Then yes_or_no = "NO"
  Else                     yes_or_no = "YES"
  ad=uz(Left("    DSN6GRP    DSHARE="yes_or_no",      ",71)"X")
  grpname = Strip(grpname,"B"," ")
  ad=uz(Left("               GRPNAME="grpname",       ",71)"X")
  grpmname = Strip(grpmname,"B"," ")
  ad=uz(Left("               MEMBNAME="grpmname",     ",71)"X")
  If (grpcoor = "Y") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               COORDNTR="yes_or_no",    ",71)"X")
  If (grpasst = "Y") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               ASSIST="yes_or_no",      ",71)"X")
  If (grpimmw = "Y") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               IMMEDWRI="yes_or_no"     ",71))
  Return

uq81450_dsn6grp:
  Parse Var my_txt,
    GRPID          +2,
    GRPLEN         +2,
    GRPEYE         +4,
    GRPLVL         +8,
    GRPNAME        +8,
    GRPMNAME       +8,
    GRPDSHR        +1,
    GRPCOOR        +1,
    GRPASST        +1,
    GRPIMMW        +1,
    GRPMAXM        +4,
    GRPSUCV        +4,
    .              +212,
    GRPEND
  If (syspend >< "") Then,
    Say "SYSPEND("syspend")"
  If (grpdshr = '0'x) Then yes_or_no = "NO"
  Else                     yes_or_no = "YES"
  ad=uz(Left("    DSN6GRP    DSHARE="yes_or_no",      ",71)"X")
  grpname = Strip(grpname,"B"," ")
  ad=uz(Left("               GRPNAME="grpname",       ",71)"X")
  grpmname = Strip(grpmname,"B"," ")
  ad=uz(Left("               MEMBNAME="grpmname",     ",71)"X")
  If (grpcoor = "Y") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               COORDNTR="yes_or_no",    ",71)"X")
  If (grpasst = "Y") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               ASSIST="yes_or_no",      ",71)"X")
  If (grpimmw = "Y") Then yes_or_no = "YES"
  Else                    yes_or_no = "NO"
  ad=uz(Left("               IMMEDWRI="yes_or_no"     ",71))
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Generic grab of any csect.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
grab_csect:
  Parse Arg parse_csect
  csect_num = named_csect.parse_csect
  my_loc = c2d(csect_loc.csect_num) + 1
  my_len = c2d(csect_len.csect_num)
  If (my_len > 0) Then,
    my_txt = Substr(memory_image,my_loc,my_len)
  Else,
    my_txt = ""
  Return my_len

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Write the binder step.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
write_lked_step:
  ad=uz("    END")
  ad=uz("/*")
  ad=uz("//*")
  ad=uz("//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"||,
                                  ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>")
  ad=uz("//* LINK EDIT THE NEW DSNZPARM MEMBER.",
        "PUT LOAD MODULE IN SDSNEXIT.")
  ad=uz("//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"||,
                                  "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<")
  ad=uz("//DSNTIZL EXEC PGM=IEWL,PARM='LIST,XREF,LET,RENT',")
  ad=uz("//             COND=(4,LT)")
  ad=uz("//ADSNLOAD DD  DISP=SHR,DSN=DB2."sprmlvl".SDSNLOAD")
  ad=uz("//         DD  DISP=SHR,DSN=DB2."sprmlvl".ADSNLOAD")
  ad=uz("//SYSPUNCH DD  DSN=&&LOADSET(DSNTILMM),DISP=(OLD,DELETE)")
  ad=uz("//SYSLMOD  DD  DISP=SHR,DSN="dsname)
  ad=uz("//SYSPRINT DD  SYSOUT=*")
  ad=uz("//SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(50,50))")
  ad=uz("//SYSLIN   DD  *")
  ad=uz("   INCLUDE SYSPUNCH(DSNTILMM)")
  ad=uz("   INCLUDE ADSNLOAD(DSNZPARM)")
  ad=uz("   ORDER DSNAA")
  ad=uz("   INCLUDE ADSNLOAD(DSNAA)")
  ad=uz("   INCLUDE ADSNLOAD(DSNFSYSP)")
  ad=uz("   INCLUDE ADSNLOAD(DSNJARVP)")
  ad=uz("   INCLUDE ADSNLOAD(DSNJLOGP)")
  ad=uz("   INCLUDE ADSNLOAD(DSNTSPRM)")
  ad=uz("   INCLUDE ADSNLOAD(DSNVDIR1)")
  ad=uz("   INCLUDE ADSNLOAD(DSNZMSTR)")
  ad=uz("   INCLUDE ADSNLOAD(DSN3DIR1)")
  ad=uz("   INCLUDE ADSNLOAD(DSN7GRP)")
  ad=uz("   ENTRY   DSNZMSTR")
  ad=uz("   NAME    "mbr_dsnzparm"(R)")
  ad=uz("/*")
  ad=uz("//*")
  ad=uz("//")
  "EXECIO" uz_ctr "DISKW DSNTIJUZ (STEM UZ_TXT.)"
  uz_ctr = 0
  "EXECIO" xx_ctr "DISKW DSNTIDXX (STEM XX_TXT.)"
  xx_ctr = 0
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Write the assembler step.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
write_asm_step:
  uz_ctr = 0
  ad=uz("//DSNTIZA EXEC PGM=ASMA90,PARM='OBJECT,NODECK'")
  ad=uz("//STEPLIB  DD  DISP=SHR,DSN=SYS1.ASM.SASMMOD1")
  ad=uz("//         DD  DISP=SHR,DSN=DB2."sprmlvl".SDSNLOAD")
  ad=uz("//SYSLIB   DD  DISP=SHR,DSN=DB2."sprmlvl".SDSNMACS")
  ad=uz("//         DD  DISP=SHR,DSN=SYS1.MACLIB")
  ad=uz("//SYSLIN   DD  DSN=&&LOADSET(DSNTILMM),DISP=(NEW,PASS),")
  ad=uz("//             UNIT=SYSDA,")
  ad=uz("//             SPACE=(800,(50,50,2)),DCB=(BLKSIZE=800)")
  ad=uz("//SYSPRINT DD  SYSOUT=*")
  ad=uz("//SYSUT1   DD  UNIT=SYSDA,SPACE=(800,(50,50),,,ROUND)")
  ad=uz("//SYSUT2   DD  UNIT=SYSDA,SPACE=(800,(50,50),,,ROUND)")
  ad=uz("//SYSUT3   DD  UNIT=SYSDA,SPACE=(800,(50,50),,,ROUND)")
  ad=uz("//SYSIN    DD  *")
  xx_ctr = 0
  cr_date = ,
    Left(Date("S"),4)"/"SubStr(Date("S"),5,2)"/"Right(Date("S"),2)
  cr_time = Left(Time(),5)
  ad=td("* ********************************************************* *")
  ad=td("* FILE CREATED:" cr_date"  "cr_time,
    "                          *")
  ad=td("* PARM  TYPE  SCP MIN         MAX           CURRENT-VALUE   *")
  ad=td("* ********************************************************* *")
  ad=td("*---+----1----+----2----+----3----+----4----+----5----+----6-")
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Add to the DSNTIJUZ stem.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
uz:
  Parse Arg txt
  uz_ctr = uz_ctr + 1
  uz_txt.0 = uz_ctr
  uz_txt.uz_ctr = txt
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Add to the DSNTIDxx stem.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
td:
  Parse Arg txt
  xx_ctr = xx_ctr + 1
  xx_txt.0 = xx_ctr
  xx_txt.xx_ctr = txt
  Return 0

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-----------------------------------------------------------------------
 Function to turn a character string into binary bits.
-----------------------------------------------------------------------
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
C2B: PROCEDURE EXPOSE bits
  data = ARG(1)
  IF (bits.F <> "1111") THEN DO
    bits.0="0000"; bits.1="0001"; bits.2="0010"; bits.3="0011"
    bits.4="0100"; bits.5="0101"; bits.6="0110"; bits.7="0111"
    bits.8="1000"; bits.9="1001"; bits.A="1010"; bits.B="1011"
    bits.C="1100"; bits.D="1101"; bits.E="1110"; bits.F="1111"
  END
  c2x_data = C2X(data)
  bs = ""
  DO ix = 1 TO LENGTH(c2x_data)
    bx = SUBSTR(c2x_data,ix,1)
    bs =bs||bits.bx
  END
  RETURN bs

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
__DATA__
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LMODNAME CSECT    REL FIELD        Length Mask  DSNTIJUZ DSNTIDxx
-------- -------- --- ------------ ------ ----- -------- --------
dsnzparm
dsnzparm DSN6SPRM
dsnzparm DSN6SPRM     SPRMID            2
dsnzparm DSN6SPRM     SPRMLEN           2
  ad=td("LEMAX    NUM   M  0           50            "SPRMLEM)
dsnzparm DSN6SPRM     SPRMEYE           4
dsnzparm DSN6SPRM     SPRMLVL           8
  ad=td("DB2REL   CHAR  M  NONE        NONE          "sprmlvl)
dsnzparm DSN6SPRM     SPRMMMRB          2
dsnzparm DSN6SPRM     SPRMWREN          2
dsnzparm DSN6SPRM     .                 4
dsnzparm DSN6SPRM     SPRMMVS           3
dsnzparm DSN6SPRM     SPRMCNTL          2
dsnzparm DSN6SPRM     SPRMIDCK          1
dsnzparm DSN6SPRM     SPRMMISC          1
dsnzparm DSN6SPRM     SPRMMISC          1 '10'x xxxxxxxx CACHEDYN
  ad=td("CACHEDYN CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMISC          1 '40'x xxxxxxxx DECDIV3
  ad=td("DECDIV3  CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMISZ          1
dsnzparm DSN6SPRM     SPRMMISZ          1 '80'x ABEXP    ABEXP
  ad=td("ABEXP    CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMISZ          1 '40'x HOPAUTH  HOPAUTH
  ad=td("HOPAUTH  CHAR  G  BOTH        RUNNER        "yes_or_no)
dsnzparm DSN6SPRM     SPRMMISZ          1 '10'x SEQCACH  SEQCACH
  ad=td("SEQCACH  CHAR  M  BYPASS      SEQ           "cach_type)
dsnzparm DSN6SPRM     SPRMMISZ          1 '04'x RRULOCK  RRULOCK
  ad=td("RRULOCK  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMAUTH          1
dsnzparm DSN6SPRM     SPRMSADM          8
  ad=td("PROTADMN CHARR G  $           Z9999999      "sprmsadm)
dsnzparm DSN6SPRM     SPRMMIS2          1
dsnzparm DSN6SPRM     SPRMMIS2          1 '80'x DESCSTAT DESCSTAT
  ad=td("DESCSTAT CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMIS2          1 '40'x SEQPRES  SEQPRES
  ad=td("SEQPRES  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMIS2          1 '08'x RELCURHL RELCURHL
  ad=td("RELCURHL CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMIS2          1 '01'x RETVLCFK RETVLCFK
  ad=td("RETVLCFK CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMIS3          1
dsnzparm DSN6SPRM     SPRMMIS3          1 '80'x EVALUNC  EVALUNC
  ad=td("EVALUNC  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMIS3          1 '40'x MINSTOR  MINSTOR
  ad=td("MINSTOR  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMIS4          1
dsnzparm DSN6SPRM     SPRMMIS4          1 '01'x SKIPUNCI SKIPUNCI
  ad=td("SKIPUNCI CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMEDPL          4
dsnzparm DSN6SPRM     SPRMVCOF          4
dsnzparm DSN6SPRM     SPRMDBOF          4
dsnzparm DSN6SPRM     SPRMDFID          8
  ad=td("PROTUNKN CHAR  M  NONE        NONE          "sprmdfid)
dsnzparm DSN6SPRM     SPRMIPRC          8
  ad=td("IRLMPROC CHARR M  $           Z9999999      "sprmiprc)
  ad=td("IRLMTRAC CHAR  M  NONE        NONE          "yes_or_no)
dsnzparm DSN6SPRM     SPRMISID          4
  ad=td("IRLMSSID CHARR M  $           Z999          "sprmisid)
dsnzparm DSN6SPRM     SPRMTOUT          4
  ad=td("IRLMWAIT NUM   M  1           3600          "sprmtout)
dsnzparm DSN6SPRM     SPRMISWT          4
  ad=td("IRLMSTTO NUM   M  1           3600          "sprmiswt)
dsnzparm DSN6SPRM     SPRMISWI          4
dsnzparm DSN6SPRM     SPRMIAUT          1
dsnzparm DSN6SPRM     SPRMIAUT          1 '80'x IRLMAUTO
  ad=td("IRLMAUTO CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMDBCK          1
dsnzparm DSN6SPRM     SPRMSNWF          2
dsnzparm DSN6SPRM     SPRMSORP          4
  srt_pool = (c2d(SPRMSORP) / 1024)
  ad=td("OVSRTPL  CHAR  M  NONE        NONE          "srt_pool)
dsnzparm DSN6SPRM     SPRMSMXN          4
dsnzparm DSN6SPRM     SPRMBMC1          2
dsnzparm DSN6SPRM     SPRMBMC2          2
dsnzparm DSN6SPRM     SPRMSWT1          2
dsnzparm DSN6SPRM     SPRMSWT2          2
dsnzparm DSN6SPRM     SPRMDWF1          2
dsnzparm DSN6SPRM 71< SPRMDWF2          2
dsnzparm DSN6SPRM     SPRMDWU1          2
dsnzparm DSN6SPRM     SPRMDWU2          2
dsnzparm DSN6SPRM     SPRMVDWT          2
dsnzparm DSN6SPRM     SPRMSTHT          1 'N'
  ad=td("STATHIST CHAR  G  NONE        NONE          "stat_type)
dsnzparm DSN6SPRM     SPRMSTRL          1 'N'
  ad=td("STATROLL CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMKDSA          4
dsnzparm DSN6SPRM     SPRMKDSB          4
dsnzparm DSN6SPRM     SPRMRDEU          2
dsnzparm DSN6SPRM     SPRMLRUT          2
dsnzparm DSN6SPRM     SPRMPF32          2
dsnzparm DSN6SPRM     SPRMPFT1          2
dsnzparm DSN6SPRM     SPRMPFT2          2
dsnzparm DSN6SPRM     SPRMBBTR          2
dsnzparm DSN6SPRM     SPRMLKTR          2
dsnzparm DSN6SPRM     SPRMPSID          4
dsnzparm DSN6SPRM     SPRMDSPM          2
dsnzparm DSN6SPRM     SPRMLKTS          4
dsnzparm DSN6SPRM     SPRMLKUS          4
dsnzparm DSN6SPRM     SPRMADM2          8
dsnzparm DSN6SPRM     SPRMOPR1          8
  ad=td("PROTOPR1 CHARR G  NONE        Z9999999      "sprmopr1)
dsnzparm DSN6SPRM     SPRMOPR2          8
  ad=td("PROTOPR2 CHARR G  NONE        Z9999999      "sprmopr2)
dsnzparm DSN6SPRM     SPRMCHKL          2
dsnzparm DSN6SPRM     SPRMPDQ           2
dsnzparm DSN6SPRM     SPRMPCBS          2
dsnzparm DSN6SPRM 71< SPRMLA1           2
dsnzparm DSN6SPRM 71< SPRMLA2           2
dsnzparm DSN6SPRM     SPRMNCPU          1
dsnzparm DSN6SPRM     SPRMHRCL          1
dsnzparm DSN6SPRM     SPRMHRCL          1 '80'x RECALL   RECALL
  ad=td("RECALL   CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMPCWH          2
dsnzparm DSN6SPRM     SPRMPCRB          2
dsnzparm DSN6SPRM     SPRMMXRB          2
dsnzparm DSN6SPRM     SPRMHRCD          2
  ad=td("RECALLD  NUM   M  0           32767         "sprmhrcd)
dsnzparm DSN6SPRM     SPRMRCST          2
dsnzparm DSN6SPRM     SPRMTRWT          2
dsnzparm DSN6SPRM     SPRMWPFQ          2
dsnzparm DSN6SPRM     SPRMWPFS          2
dsnzparm DSN6SPRM     SPRMSQTM          2
dsnzparm DSN6SPRM     SPRMSQTD          2
dsnzparm DSN6SPRM     SPRMVDTM          2
dsnzparm DSN6SPRM 71< SPRMVDTD          2
dsnzparm DSN6SPRM     SPRMMPFQ          2
dsnzparm DSN6SPRM     SPRMSWFU          2
dsnzparm DSN6SPRM     SPRMTISP          4
dsnzparm DSN6SPRM     SPRMDRBS          4
dsnzparm DSN6SPRM     SPRMRMIN          4
dsnzparm DSN6SPRM     SPRMRMAX          4
dsnzparm DSN6SPRM     SPRMRNLP          2
dsnzparm DSN6SPRM     SPRMAUCA          2
  ad=td("AUTHCACH NUM   M  0           4096          "sprmauca)
dsnzparm DSN6SPRM     SPRMINTV          2
dsnzparm DSN6SPRM     SPRMQCTM          2
dsnzparm DSN6SPRM     SPRMTDDN          2
dsnzparm DSN6SPRM     SPRMMDDN          2
dsnzparm DSN6SPRM     SPRMTXS           4
dsnzparm DSN6SPRM     SPRMSRBT          4
dsnzparm DSN6SPRM     SPRMAND           4
dsnzparm DSN6SPRM     SPRMOR            4
dsnzparm DSN6SPRM     SPRMCPUM          4
dsnzparm DSN6SPRM     SPRMFDP           2
dsnzparm DSN6SPRM     SPRMKNFC          2
dsnzparm DSN6SPRM     SPRMUTO           2
  ad=td("UTIMOUT  NUM   M  $           NONE          "sprmuto)
dsnzparm DSN6SPRM     SPRMEST           2
dsnzparm DSN6SPRM     SPRMCUT           2
dsnzparm DSN6SPRM     SPRMSPC           2
dsnzparm DSN6SPRM     SPRMSPS           2
dsnzparm DSN6SPRM     SPRMAST           2
dsnzparm DSN6SPRM     SPRMBMP           2
  ad=td("BMPTOUT  NUM   M  1           254           "sprmbmp)
dsnzparm DSN6SPRM     SPRMDLI           2
  ad=td("DLITOUT  NUM   M  1           254           "sprmdli)
dsnzparm DSN6SPRM     SPRMXCTH          4
dsnzparm DSN6SPRM     SPRMBNVA          8
  ad=td("BINDNV   CHAR  M  BIND        BINDADD       "sprmbnva)
dsnzparm DSN6SPRM     SPRMSCTM          4
dsnzparm DSN6SPRM     SPRMMDEG          4
  ad=td("PARAMDEG NUM   M  0           254           "sprmmdeg)
dsnzparm DSN6SPRM     SPRMPAC           4
  ad=td("CACHEPAC NUM   M  0           5242880       "sprmpac)
dsnzparm DSN6SPRM     SPRMUBS           2
dsnzparm DSN6SPRM     SPRMAURT          2
dsnzparm DSN6SPRM     SPRMREGF          1
dsnzparm DSN6SPRM     SPRMREGF          1 '80'x RGFINSTL RGFINSTL
  ad=td("RGFINSTL CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMREGF          1 '40'x RGFDEDPL RGFDEDPL
  ad=td("RGFDEDPL CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMREGF          1 '10'x RGFDEFLT RGFDEFLT
dsnzparm DSN6SPRM     SPRMREGF          1 '08'x RGFDEFLT RGFDEFLT
  ad=td("RGFDEFLT CHAR  G  NONE        NONE          "dflt_type)
dsnzparm DSN6SPRM     SPRMREGF          1 '20'x RGFFULL1 RGFFULLQ
  ad=td("RGFFULLQ CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMREGC          8
  ad=td("RGFCOLID CHAR  G  NONE        NONE          "sprmregc)
dsnzparm DSN6SPRM     SPRMREGA         17
  ad=td("RGFNMPRT CHAR  G  NONE        NONE          "sprmrega)
dsnzparm DSN6SPRM     SPRMREGO         17
  ad=td("RGFNMORT CHAR  G  NONE        NONE          "sprmrego)
dsnzparm DSN6SPRM     SPRMTYP           1
dsnzparm DSN6SPRM     SPRMTYP           1 '80'x SITETYP  SITETYP
  ad=td("SITETYP  CHAR  G  LOCALSITE   RECOVERYSITE  "site_type)
dsnzparm DSN6SPRM     SPRMTYP           1 '10'x EDMBFIT  EDMBFIT
  ad=td("EDMBFIT  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMTYP           1 '01'x xxxxxxx  SUPERRS
  If (BitAnd(SPRMTYP,'01'x)  = '01'x) Then yes_or_no = "YES"
  ad=td("SUPERRS  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMREGN          8
  ad=td("RGFDBNAM CHAR  G  NONE        NONE          "sprmregn)
dsnzparm DSN6SPRM     SPRMKSIZ          4
dsnzparm DSN6SPRM     SPRMIFS           4
dsnzparm DSN6SPRM     SPRMABN           1 'E'   ABIND    ABIND
  ad=td("ABIND    CHAR  M  NONE        NONE          "yes_or_no)
dsnzparm DSN6SPRM     SPRMDXTP          1
dsnzparm DSN6SPRM     SPRMRMTI          2
dsnzparm DSN6SPRM     SPRMZTN           2
dsnzparm DSN6SPRM     SPRMZUT           2
dsnzparm DSN6SPRM     SPRMMDE           4
dsnzparm DSN6SPRM     SPRMREGE          1
  ad=td("RGFESCP  CHAR  M  NONE        NONE          "rgfescp)
dsnzparm DSN6SPRM     SPRMCDEG          3
  ad=td("CDSSRDEF CHAR  M  1           ANY           "sprmcdeg)
dsnzparm DSN6SPRM     SPRMCDE1          1
dsnzparm DSN6SPRM     SPRMPKYU          1
  If (SPRMPKYU = "Y") Then yes_or_no = "YES"
dsnzparm DSN6SPRM     SPRMFLMT          1
dsnzparm DSN6SPRM     SPRMFLBS          1
dsnzparm DSN6SPRM     SPRMULBZ          4
dsnzparm DSN6SPRM     SPRMULFR          4
dsnzparm DSN6SPRM     SPRMRHTI          2
dsnzparm DSN6SPRM     SPRMUMD           2
dsnzparm DSN6SPRM     SPRMMXKD          4
  ad=td("MAXKEEPD NUM   M  0           65535         "sprmmxkd)
dsnzparm DSN6SPRM     SPRMREC           2
dsnzparm DSN6SPRM     SPRMLTDM          1
dsnzparm DSN6SPRM     SPRMMS4A          1
dsnzparm DSN6SPRM     SPRMACAN          2
  ad=td("AEXITLIM NUM   M  0           32767         "sprmacan)
dsnzparm DSN6SPRM     SPRMMS4B          1
dsnzparm DSN6SPRM     SPRMMSC2          1
dsnzparm DSN6SPRM     SPRMMSC2          1 '20'x DBACRVW  DBACRVW
  ad=td("DBACRVW  CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMSC2          1 '02'x CONTSTOR CONTSTOR
  ad=td("CONTSTOR CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM     SPRMMSC2          1 '08'x OPTHINTS OPTHINTS
  ad=td("OPTHINTS CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM 71< SPRMCOC1          2
dsnzparm DSN6SPRM 71< SPRMCOC2          2
dsnzparm DSN6SPRM     SPRMWAIT          2
  ad=td("RETLWAIT NUM   M  0           254           "sprmwait)
dsnzparm DSN6SPRM     SPRMCTHR          2
dsnzparm DSN6SPRM     SPRMRAC           4
  ad=td("CACHERAC NUM   M  0           5242880       "sprmrac)
dsnzparm DSN6SPRM     SPRMSTHR          4
dsnzparm DSN6SPRM 71< SPRMEDDS          4
dsnzparm DSN6SPRM     SPRMDSMX          4
  ad=td("OVDSMAX  CHAR  M  NONE        NONE          "sprmdsmx)
dsnzparm DSN6SPRM     SPRMLEM           2
dsnzparm DSN6SPRM     SPRMOZTP          1
dsnzparm DSN6SPRM     .                 1
dsnzparm DSN6SPRM     SPRMPLIM          4
dsnzparm DSN6SPRM     SPRMMDSC          2
dsnzparm DSN6SPRM     SPRMMXTB          2
dsnzparm DSN6SPRM     SPRMMXCE          4
dsnzparm DSN6SPRM     SPRMNPAG          4
dsnzparm DSN6SPRM     SPRMSJR           2
  If (SPRMSJR  = '0000'x) Then star_type = "ENABLE"
  ad=td("STARJOIN CHAR  M  NONE        NONE          "star_type)
dsnzparm DSN6SPRM     SPRMDCFL          8
dsnzparm DSN6SPRM     SPRMDCIX          8
dsnzparm DSN6SPRM     .                 2
dsnzparm DSN6SPRM     SPRMOZUS          8
dsnzparm DSN6SPRM     SPRMOZCI         12
dsnzparm DSN6SPRM     SPRMOZTM          8
dsnzparm DSN6SPRM     SPRMEDMX          4
dsnzparm DSN6SPRM     SPRMINTE          2
  ad=td("STATSINT NUM   G  1           1440          "sprminte)
dsnzparm DSN6SPRM     SPRMSJTB          2
dsnzparm DSN6SPRM     SPRMTJTH          2
dsnzparm DSN6SPRM     SPRMSJXP          2
  ad=td("SJMXPOOL NUM   M  0           1024          "sprmsjxp)
dsnzparm DSN6SPRM     SPRMINLP          4
dsnzparm DSN6SPRM     SPRMFLKT          4
dsnzparm DSN6SPRM 81> SPRMRSMX          2
dsnzparm DSN6SPRM 81> .                16
dsnzparm DSN6SPRM 81> SPRMSADM_Off      2
dsnzparm DSN6SPRM 81> SPRMDFID_Off      2
dsnzparm DSN6SPRM 81> SPRMADM2_Off      2
  ad=td("PROTADM2 CHARR G  NONE        Z9999999      "sprmadm2)
dsnzparm DSN6SPRM 81> SPRMOPR1_Off      2
dsnzparm DSN6SPRM 81> SPRMOPR2_Off      2
dsnzparm DSN6SPRM 81> SPRMREGC_Off      2
dsnzparm DSN6SPRM 81> SPRMREGA_Off      2
dsnzparm DSN6SPRM 81> SPRMREGO_Off      2
dsnzparm DSN6SPRM 81> SPRMOZUS_Off      2
dsnzparm DSN6SPRM 81> SPRMEDBC          4
  ad=td("OVEDMDBC CHAR  M  NONE        NONE          NULL")
dsnzparm DSN6SPRM 81> SPRMESTC          4
  ad=td("OVEDMSTC CHAR  M  NONE        NONE          NULL")
dsnzparm DSN6SPRM 81> SPRMMQTH          2
dsnzparm DSN6SPRM 81> SPRMRFSH         11
dsnzparm DSN6SPRM 81> SPRMRFSH         r1 '0C'x REFSHAGE REFSHAGE
  ad=td("REFSHAGE CHAR  M  0           ANY           "age_type)
dsnzparm DSN6SPRM 81> .                 1
dsnzparm DSN6SPRM 81> SPRMMNTY          2
  If (SPRMMNTY = '0000'x) Then main_type = "NONE"
  If (SPRMMNTY = '0001'x) Then main_type = "SYSTEM"
  If (SPRMMNTY = '0002'x) Then main_type = "USER"
  If (SPRMMNTY = '0003'x) Then main_type = "ALL"
  ad=td("MAINTYPE CHAR  M  NONE        NONE          "main_type)
dsnzparm DSN6SPRM 81> SPRMMXOS          2
dsnzparm DSN6SPRM 81> SPRMMXOC          2
dsnzparm DSN6SPRM 81> SPRMMXOE          2
dsnzparm DSN6SPRM 81> .                 2
dsnzparm DSN6SPRM 81> SPRMLRTH          2
  ad=td("LRDRTHLD NUM   M  0           1439          "SPRMLRTH)
dsnzparm DSN6SPRM 81> SPRMTTRS          2
dsnzparm DSN6SPRM 81> SPRMVDTY          8
  ad=td("VOLTDEVT CHARR M  $           99999999      "sprmvdty)
dsnzparm DSN6SPRM 81> SPRMSCLC          2
  ad=td("SECLCACH NUM   M  0           32767         "sprmsclc)
dsnzparm DSN6SPRM 81> SPRMMIS5          1
dsnzparm DSN6SPRM 81> SPRMMIS5          1 '01'x xxxxxxxx COMCRIT
  ad=td("COMCRIT  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM 81> SPRMMIS5          1 '80'x xxxxxxxx PADIX
  ad=td("PADIX    CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SPRM 81> SPRMMIS6          1
dsnzparm DSN6SPRM 81> SPRMMXNC          4
dsnzparm DSN6SPRM 81> SPRMMXSP          4
dsnzparm DSN6SPRM 81> SPRMSELD          4
dsnzparm DSN6SPRM 81> .                 8
dsnzparm DSN6SPRM 81> SPRMFRLC          2
dsnzparm DSN6SPRM 81> .                38
dsnzparm DSN6SPRM 81> .                 4
dsnzparm DSN6SPRM 81> .                32
dsnzparm DSN6SPRM 81> .                16
dsnzparm DSN6SPRM     SPRMDATE          8
dsnzparm DSN6SPRM 81> SPRMSADM_Len      2
dsnzparm DSN6SPRM 81> SPRMSADM_Var    128
dsnzparm DSN6SPRM 81> SPRMDFID_Len      2
dsnzparm DSN6SPRM 81> SPRMDFID_Var    128
dsnzparm DSN6SPRM 81> SPRMADM2_Len      2
dsnzparm DSN6SPRM 81> SPRMADM2_Var    128
dsnzparm DSN6SPRM 81> SPRMOPR1_Len      2
dsnzparm DSN6SPRM 81> SPRMOPR1_Var    128
dsnzparm DSN6SPRM 81> SPRMOPR2_Len      2
dsnzparm DSN6SPRM 81> SPRMOPR2_Var    128
dsnzparm DSN6SPRM 81> SPRMREGC_Len      2
dsnzparm DSN6SPRM 81> SPRMREGC_Var    128
dsnzparm DSN6SPRM 81> SPRMREGA_Len      2
dsnzparm DSN6SPRM 81> SPRMREGA_Var    128
dsnzparm DSN6SPRM 81> SPRMREGO_Len      2
dsnzparm DSN6SPRM 81> SPRMREGO_Var    128
dsnzparm DSN6SPRM 81> SPRMOZUS_Len      2
dsnzparm DSN6SPRM 81> SPRMOZUS_Var    128
dsnzparm DSN6SPRM 81> hw_adjust         2
dsnzparm DSN6SPRM     SPRMDB            8
dsnzparm DSN6SPRM     SPRMSTRT          1
DBSTADFR CHAR  M  DEFER       RESTART       RESTART
    When (SPRMSTRT = '80'x) Then strt_type = "RESTART"
    When (SPRMSTRT = '40'x) Then strt_type = "DEFER"
    When (SPRMSTRT = '00'x) Then strt_type = "DEFER"
dsnzparm DSN6SPRM     .                 1
dsnzparm DSN6SPRM     SPRMDB#           2
dsnzparm DSN6SPRM     dbname            8
dsnzparm DSN6SPRM     tsname            8
DBSTARTA CHARR M  $           NONE          ALL
DBSTARTB CHAR  M  NONE        NONE          NULL
DBSTARTC CHAR  M  NONE        NONE          NULL
DBSTARTD CHAR  M  NONE        NONE          NULL
DBSTARTE CHAR  M  NONE        NONE          NULL
DBSTARTF CHAR  M  NONE        NONE          NULL
DBSTARTG CHAR  M  NONE        NONE          NULL
DBSTARTH CHAR  M  NONE        NONE          NULL
DBSTARTI CHAR  M  NONE        NONE          NULL
DBSTARTJ CHAR  M  NONE        NONE          NULL
DBSTARTK CHAR  M  NONE        NONE          NULL
DBSTARTL CHAR  M  NONE        NONE          NULL
DBSTARTM CHAR  M  NONE        NONE          NULL
DBSTARTN CHAR  M  NONE        NONE          NULL
DBSTARTO CHAR  M  NONE        NONE          NULL
DBSTARTP CHAR  M  NONE        NONE          NULL
DBSTARTQ CHAR  M  NONE        NONE          NULL
DBSTARTR CHAR  M  NONE        NONE          NULL
DBSTARTS CHAR  M  NONE        NONE          NULL
DBSTARTT CHAR  M  NONE        NONE          NULL
DBSTARTU CHAR  M  NONE        NONE          NULL
DBSTARTV CHAR  M  NONE        NONE          NULL
DBSTARTW CHAR  M  NONE        NONE          NULL
DBSTARTX CHAR  M  NONE        NONE          NULL
DBSTARTY CHAR  M  NONE        NONE          NULL
DBSTARTZ CHAR  M  NONE        NONE          NULL
DBSTART0 CHAR  M  NONE        NONE          NULL
DBSTART1 CHAR  M  NONE        NONE          NULL
DBSTART2 CHAR  M  NONE        NONE          NULL
DBSTART3 CHAR  M  NONE        NONE          NULL
DBSTART4 CHAR  M  NONE        NONE          NULL
DBSTART5 CHAR  M  NONE        NONE          NULL
DBSTART6 CHAR  M  NONE        NONE          NULL
DBSTART7 CHAR  M  NONE        NONE          NULL
DBSTART8 CHAR  M  NONE        NONE          NULL
DBSTART9 CHAR  M  NONE        NONE          NULL
dsnzparm DSN6SPRM     SPRMVCAT          8
dsnzparm DSN6SPRM     SPRMVC#           4
dsnzparm DSN6SPRM     SPRMCATN          8
  ad=td("VCATALOG CHARR G  $           Z9999999      "sprmcatn)
  ad=td("MEMBNAME CHARR M  NONE        NONE          "sprmcatn)
  ad=td("BSDSNAM1 CHARR M  $           NONE          "SPRMCATN".BSDS01")
  ad=td("BSDSNAM2 CHARR M  $           NONE          "SPRMCATN".BSDS02")
  ad=td("LOGSPRE1 CHARR M  $           NONE         ",
    "SPRMCATN".LOGCOPY1")
  ad=td("LOGSPRE2 CHARR M  $           NONE         ",
    "SPRMCATN".LOGCOPY2")
dsnzparm DSN6SPRM     SPRMEND
dsnzparm DSN6SPRM
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LMODNAME CSECT    REL FIELD        Length Mask  DSNTIJUZ DSNTIDxx
-------- -------- --- ------------ ------ ----- -------- --------
dsnzparm DSN6ARVP
dsnzparm DSN6ARVP     ARVPID            2
dsnzparm DSN6ARVP     ARVPLL            2
dsnzparm DSN6ARVP     ARVPEID           4
dsnzparm DSN6ARVP     ARVPBKSZ          4
  ad=td("ARCHSIZE NUM   M  8192        28672         "arvpbksz)
dsnzparm DSN6ARVP     ARVPRISP          4
  ad=td("ARCHPRI  CHAR  M  NONE        NONE          "arvprisp)
dsnzparm DSN6ARVP     ARVPSECS          4
  ad=td("ARCHSEC  CHAR  M  NONE        NONE          "arvpsecs)
dsnzparm DSN6ARVP     ARVPULN1          1
dsnzparm DSN6ARVP     ARVPUNT1          8       UNIT     ARCHDEVT
  ad=td("ARCHDEVT CHARR M  $           NONE          "arvpunt1)
dsnzparm DSN6ARVP     ARVPRE1L          1
dsnzparm DSN6ARVP     ARVPRE1N         35
  ad=td("ARCHPRE1 CHARR M  $           NONE          "arvpre1n)
dsnzparm DSN6ARVP     ARVPRE2L          1
dsnzparm DSN6ARVP     ARVPRE2N         35
  ad=td("ARCHPRE2 CHARR M  $           NONE          "arvpre2n)
dsnzparm DSN6ARVP     ARVPFLG1          1
dsnzparm DSN6ARVP     ARVPFLG1          1 '80'x CATALOG  ARCHCTLG
  ad=td("ARCHCTLG CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6ARVP     ARVPFLG1          1 '20'x ALCUNIT  ARCHUNIT
  ad=td("ARCHUNIT CHAR  M  NONE        NONE          "alcu)
dsnzparm DSN6ARVP     ARVPFLG1          1 '08'x ARCWTOR  ARCHWTOR
  ad=td("ARCHWTOR CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6ARVP     ARVPFLG1          1 '04'x COMPACT  ARCHCOMP
  ad=td("ARCHCOMP CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6ARVP     ARVPFLG1          1 '02'x TSTAMP   ARCHTS
  ad=td("ARCHTS   CHAR  M  NONE        NONE          "yes_or_no)
dsnzparm DSN6ARVP     ARVPULN2          1
dsnzparm DSN6ARVP     ARVPUNT2          8       UNIT2    ARCHDEV2
  ad=td("ARCHDEV2 CHARR M  NONE        NONE          "arvpunt2)
dsnzparm DSN6ARVP     ARVPFLG2          1
dsnzparm DSN6ARVP     ARVPFLG2          1 '80'x SVOLARC  ARCHTWO
  ad=td("ARCHTWO  NUM   M  1           2             "svolarc)
dsnzparm DSN6ARVP     .                 2
dsnzparm DSN6ARVP     ARVPRETN          2
  ad=td("ARCRETN  NUM   M  0           9999          "arvpretn)
dsnzparm DSN6ARVP     ARVPLVL           8
dsnzparm DSN6ARVP     ARVPMSL1          1
dsnzparm DSN6ARVP     ARVPMSV1          8
dsnzparm DSN6ARVP     ARVPMSL2          1
dsnzparm DSN6ARVP     ARVPMSV2          8
dsnzparm DSN6ARVP     ARVPMQP           2
  ad=td("ARCHMQP  NUM   M  1           999           "arvpmqp)
dsnzparm DSN6ARVP     arv_reply_addr    4
dsnzparm DSN6ARVP     arv_ecb_addr      4
dsnzparm DSN6ARVP     arv_reply_len     1
dsnzparm DSN6ARVP     arv_text_len      1
dsnzparm DSN6ARVP     arv_mcsflags      2
dsnzparm DSN6ARVP     wto_message     122
dsnzparm DSN6ARVP     arv_desc_codes    2
dsnzparm DSN6ARVP     arv_route_code    2
  ad=td("ARCHWRTC CHARR M  1           NONE          "routcd)
dsnzparm DSN6ARVP     .                25
dsnzparm DSN6ARVP     ARVPEND
dsnzparm DSN6ARVP
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LMODNAME CSECT    REL FIELD        Length Mask  DSNTIJUZ DSNTIDxx
-------- -------- --- ------------ ------ ----- -------- --------
dsnzparm DSN6LOGP
dsnzparm DSN6LOGP     LOGPID            2
dsnzparm DSN6LOGP     LOGPLL            2
dsnzparm DSN6LOGP     LOGPEID           4
dsnzparm DSN6LOGP     .                 2
dsnzparm DSN6LOGP     LOGOPT1           1
dsnzparm DSN6LOGP     LOGOPT1           1 '60' x
  ad=td("LOGSTWO  NUM   M  1           2             "logstwo)
dsnzparm DSN6LOGP     LOGOPT2           1 '40'x TSOBSDS  ARC2FRST
  ad=td("ARC2FRST CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6LOGP     .                 4
dsnzparm DSN6LOGP     LOGPOBPS          4
dsnzparm DSN6LOGP     .                 4
dsnzparm DSN6LOGP     LOGPARCL          4
  ad=td("ARCHMAXV NUM   M  10          10000         "logparcl)
dsnzparm DSN6LOGP     LOGPMRTU          2
  ad=td("ARCHMRTU NUM   M  1           99            "logpmrtu)
dsnzparm DSN6LOGP     LOGPWRTH          2
dsnzparm DSN6LOGP     LOGPLVL           8
dsnzparm DSN6LOGP     LOGPDMIN          2
dsnzparm DSN6LOGP     LOGPDSEC          2
dsnzparm DSN6LOGP     .               212
dsnzparm DSN6LOGP     LOGPEND
dsnzparm DSN6LOGP
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LMODNAME CSECT    REL FIELD        Length Mask  DSNTIJUZ DSNTIDxx
-------- -------- --- ------------ ------ ----- -------- --------
dsnzparm DSN6SYSP
dsnzparm DSN6SYSP     SYSPSMRC          2
  ad=td("OPROUTCD CHARR M  1           NONE          "routcd)
dsnzparm DSN6SYSP     SYSPTRSZ          2
dsnzparm DSN6SYSP     .                 2
dsnzparm DSN6SYSP     SYSPTLSZ          2
  ad=td("OPTRCSIZ NUM   M  4096        405504        "sysptlsz)
dsnzparm DSN6SYSP     SYSPLOGL          4
  ad=td("OPCHKFRQ NUM   M  1           16000000      "sysplogl)
dsnzparm DSN6SYSP     SYSPIDB           2
dsnzparm DSN6SYSP     SYSPIDF           2
dsnzparm DSN6SYSP     SYSPCT            2
dsnzparm DSN6SYSP     SYSPRMT           2
dsnzparm DSN6SYSP     SYSPLVL           2
dsnzparm DSN6SYSP     SYSPDTIM          2
  ad=td("DSSTIME  NUM   M  1           1440          "syspdtim)
dsnzparm DSN6SYSP     SYSPDB1M          4
dsnzparm DSN6SYSP     SYSPCRIT          4
dsnzparm DSN6SYSP     SYSPSOS           4
dsnzparm DSN6SYSP     SYSPSTIM          2
  ad=td("OPSTATIM NUM   M  1           1440          "syspstim)
dsnzparm DSN6SYSP     SYSPDBPR          1
  ad=td("DBPROTCL CHAR  G  DRDA        PRIVATE       "db_protocol)
dsnzparm DSN6SYSP     SYSPFLAG          1
dsnzparm DSN6SYSP     SYSPFLAG          1 '04'x xxxxxxxx DSVCI
  ad=td("DSVCI    CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SYSP     SYSPFLAG          1 '04'x xxxxxxxx DSVCI
  If (Bitand(SYSPFLAG,'04'x) = '04'x) Then yes_or_no = "YES"
  ad=td("MGEXTSZ  CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6SYSP     SYSPTRST          4
dsnzparm DSN6SYSP     SYSPSMFS          4
  ad=td("OPSMFSTA CHAR  M  NONE        NONE          "yes_or_no)
dsnzparm DSN6SYSP     SYSPSMFA          4
  ad=td("OPSMFACT CHAR  M  NONE        NONE          "smf_acct)
dsnzparm DSN6SYSP     SYSPAUDT          4
dsnzparm DSN6SYSP     SYSPRLFA          8
  ad=td("PROTRLF  CHARR M  $           NONE          "sysprlfa)
dsnzparm DSN6SYSP     SYSPRLFT          2
  ad=td("RLFSUFF  CHARR M  AA          99            "sysprlft)
dsnzparm DSN6SYSP     .                 1
dsnzparm DSN6SYSP     SYSPRLFR          1
dsnzparm DSN6SYSP 71< sysprlfn          4
  ad=td("RLFERRD  CHAR  M  NONE        NONE          "sysprlfn)
dsnzparm DSN6SYSP     SYSPMON           4
dsnzparm DSN6SYSP     SYSPMON           1 '80'x xxxxxxxx MON
  ad=td("MON      CHAR  M  NONE        NONE          "yes_or_no)
dsnzparm DSN6SYSP     SYSPMONS          4
  ad=td("MONSIZE  NUM   M  262144      16777216      "syspmons"K")
dsnzparm DSN6SYSP     SYSPFRQ           2
  ad=td("PCLOSEN  NUM   M  1           32767         "SYSPFRQ)
dsnzparm DSN6SYSP     SYSPTMR           2
  ad=td("PCLOSET  NUM   M  1           32767         "sysptmr)
dsnzparm DSN6SYSP     .                 2
dsnzparm DSN6SYSP     SYSPDFRQ          2
  ad=td("DLDFREQ  NUM   M  0           32767         "syspdfrq)
dsnzparm DSN6SYSP     SYSPSPPN          8
  ad=td("STORPROC CHARR M  NONE        NONE          "syspsppn)
dsnzparm DSN6SYSP     SYSPSPAB          2
  ad=td("STORMXAB NUM   M  0           255           "syspspab)
dsnzparm DSN6SYSP     SYSPSPTO          2
  ad=td("STORTIME CHAR  M  NONE        NONE          "syspspto)
dsnzparm DSN6SYSP     SYSPLVLC          8
dsnzparm DSN6SYSP     SYSPSCER          1
  If (SYSPSCER = "P") Then yes_or_no = "NO"
  ad=td("EXTSEC   CHAR  G  NO          YES           "yes_or_no)
dsnzparm DSN6SYSP     SYSPURCK          1
  ad=td("URCHKTH  NUM   M  0           255           "syspurck)
dsnzparm DSN6SYSP     SYSPFLBZ          1
  ad=td("LOGAPSTG NUM   M  NONE        NONE          "syspflbz)
dsnzparm DSN6SYSP     SYSPTBPL          4
dsnzparm DSN6SYSP     SYSPIXPL          4
  ad=td("IDXBPOOL CHAR  M  NONE        NONE          "syspixpl)
dsnzparm DSN6SYSP     SYSPWLME         18
  ad=td("WLMENV   CHAR  M  NONE        NONE          "syspwlme)
dsnzparm DSN6SYSP     SYSPLMBO          4
  ad=td("LBACKOUT CHAR  M  NONE        NONE          "sysplmbo)
dsnzparm DSN6SYSP     SYSPBDUR          1
  ad=td("BACKODUR NUM   M  0           255           "syspbdur)
dsnzparm DSN6SYSP     SYSPEXBR          2
  ad=td("EXTRAREQ NUM   M  0           100           "syspexbr)
dsnzparm DSN6SYSP     SYSPEXBS          2
  ad=td("EXTRASRV NUM   M  0           100           "syspexbs)
dsnzparm DSN6SYSP     .                 1
dsnzparm DSN6SYSP     SYSPSYFL          1
dsnzparm DSN6SYSP     SYSPSYNV          4
dsnzparm DSN6SYSP     SYSPURLW          4
  ad=td("URLGWTH  NUM   M  NONE        NONE          "syspurlw)
dsnzparm DSN6SYSP     SYSPLVA           4
  ad=td("LOBVALA  NUM   M  1           2097152       "sysplva)
dsnzparm DSN6SYSP     SYSPLVS           4
  ad=td("LOBVALS  NUM   M  1           51200         "sysplvs)
dsnzparm DSN6SYSP     SYSPCDB           4
  ad=td("CONDBAT  NUM   M  0           150000        "syspcdb)
  ad=td("NUMCONDB NUM   M  1           800           "syspcdb)
dsnzparm DSN6SYSP     SYSPTSQT          4
  ad=td("TBSBPOOL CHAR  M  NONE        NONE          "sysptbpl)
dsnzparm DSN6SYSP     SYSPIXQT          4
  ad=td("IXQTY    NUM   G  0           4194304       "syspixqt)
dsnzparm DSN6SYSP 81> SYSPRLFA_Off      2
dsnzparm DSN6SYSP 81> SYSPACCU          2
  ad=td("ACCUMACC CHAR  M  NONE        NONE          "syspaccu)
dsnzparm DSN6SYSP 81> SYSPACID          2
  ad=td("ACCUMUID NUM   M  0           10            "syspacid)
dsnzparm DSN6SYSP     .                86
dsnzparm DSN6SYSP 81> SYSPRLFA_Len      2
dsnzparm DSN6SYSP 81> SYSPRLFA_Var    128
dsnzparm DSN6SYSP     SYSPEND
dsnzparm DSN6SYSP
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LMODNAME CSECT    REL FIELD        Length Mask  DSNTIJUZ DSNTIDxx
-------- -------- --- ------------ ------ ----- -------- --------
dsnzparm DSN6FAC
dsnzparm DSN6FAC      FACID             2
dsnzparm DSN6FAC      FACLL             2
dsnzparm DSN6FAC      FACEID            4
dsnzparm DSN6FAC      FACNM             2
dsnzparm DSN6FAC      FACTOIN           2
  ad=td("IDTHTOIN NUM   M  0           9999          "factoin)
dsnzparm DSN6FAC      FACNAME           8
dsnzparm DSN6FAC      FACSTART          1
  ad=td("RLFSTART CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6FAC      FACRLFER          1
dsnzparm DSN6FAC      FACRESYC          2
  ad=td("RESYNC   NUM   M  $           NONE          "facresyc)
dsnzparm DSN6FAC      FACRLFN           4
  ad=td("RLFERROR CHAR  M  NONE        NONE          "facrlfn)
dsnzparm DSN6FAC      FACCMST           8
  ad=td("CMTSTAT  CHAR  M  ACTIVE      INACTIVE      "faccmst)
dsnzparm DSN6FAC      FACMISC           1
dsnzparm DSN6FAC      .                 3
dsnzparm DSN6FAC      FACMAX1           4
  ad=td("MAXTYPE1 NUM   M  0           NONE          "facmax1)
dsnzparm DSN6FAC      FACTCKA           2
dsnzparm DSN6FAC      FACINAC           2
dsnzparm DSN6FAC      .                40
dsnzparm DSN6FAC      FACEND
dsnzparm DSN6FAC
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LMODNAME CSECT    REL FIELD        Length Mask  DSNTIJUZ DSNTIDxx
-------- -------- --- ------------ ------ ----- -------- --------
dsnzparm DSN6GRP
dsnzparm DSN6GRP      GRPID             2
dsnzparm DSN6GRP      GRPLEN            2
dsnzparm DSN6GRP      GRPEYE            4
dsnzparm DSN6GRP      GRPLVL            8
dsnzparm DSN6GRP      GRPNAME           8
  ad=td("GRPNAME  CHARR G  NONE        NONE          "grpname)
dsnzparm DSN6GRP      GRPMNAME          8
dsnzparm DSN6GRP      GRPDSHR           1
dsnzparm DSN6GRP      GRPCOOR           1 'y'           COORDNTR
  ad=td("COORDNTR CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6GRP      GRPASST           1 'Y'  ASSIST   ASSIST
  ad=td("ASSIST   CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6GRP      GRPIMMW           1 'Y'
  ad=td("IMMEDWRI CHAR  M  NO          YES           "yes_or_no)
dsnzparm DSN6GRP      GRPMAXM           4
dsnzparm DSN6GRP      GRPSUCV           4
dsnzparm DSN6GRP      .               212
dsnzparm DSN6GRP      GRPEND
dsnzparm DSN6GRP
dsnzparm
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
dsnhdecp
dsnhdecp ????????
dsnhdecp ???????? ??? ???????????? llllll
  ad=td("APPENSCH CHAR  G  NONE        NONE          LMOD_xxxxxxxx")
dsnhdecp ????????
dsnhdecp
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

UQ50308 V710
UQ81450 V810

PTF     Panel    Field    DSNTIDxx DSNTIJUZ CSECT    Variable     Loc/M
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPA2 VCATALOG
        DSNTIPA2 VCATSTAT
        DSNTIPA2 VOLSDAT1
        DSNTIPA2 VOLSDAT2
        DSNTIPA2 VOLSDAT3
        DSNTIPA2 VOLSDAT4
        DSNTIPA2 VOLSDAT5
        DSNTIPA2 VOLSDAT6
        DSNTIPA2 VOLSDAT7
        DSNTIPA2 VOLSDEVT
        DSNTIPA2 VOLTDEVT
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPK  GRPNAME
        DSNTIPK  MEMBNAME
        DSNTIPK  WKDBNAME
        DSNTIPK  GRPATTNM
        DSNTIPK  COORDNTR
        DSNTIPK  ASSIST
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPH  BSDSNAM1
        DSNTIPH  BSDSNAM2
        DSNTIPH  LOGSTWO
        DSNTIPH  LOGSPRE1
        DSNTIPH  LOGSPRE2
        DSNTIPH  ARCHTWO
        DSNTIPH  ARCHPRE1
        DSNTIPH  ARCHPRE2
        DSNTIPH  ARCHTS
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPT  NEWCL
        DSNTIPT  NEWSAMP
        DSNTIPT  OUTCL
        DSNTIPT  DBRMLIB
        DSNTIPT  RUNLIB
        DSNTIPT  SRCLIB
        DSNTIPT  DSNLINK
        DSNTIPT  DSNLOAD
        DSNTIPT  DSNMACS
        DSNTIPT  DSNALOAD
        DSNTIPT  DSNEXIT
        DSNTIPT  DSNDBRM
        DSNTIPT  DSNIRLM
        DSNTIPT  DSNIVPD
        DSNTIPT  DSNCHDRS
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPU  LERUN
        DSNTIPU  LELKED
        DSNTIPU  LEPLMSGL
        DSNTIPU  ASMLIB
        DSNTIPU  CPROG
        DSNTIPU  CCOMP
        DSNTIPU  CHDRS
        DSNTIPU  CMSGS
        DSNTIPU  CPPHDRS
        DSNTIPU  CPPAUTCL
        DSNTIPU  CPPCLASS
        DSNTIPU  CPPPROC
        DSNTIPU  ICOBCOMP
        DSNTIPU  FORTCOMP
        DSNTIPU  FORTLINK
        DSNTIPU  PLICOMOD
        DSNTIPU  PLICOMP
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPK  MACLIB
        DSNTIPK  PROCLIB
        DSNTIPK  SORTLIB
        DSNTIPK  RESLIB
        DSNTIPK  ISPLOAD
        DSNTIPK  GDDMMACS
        DSNTIPK  GDDMLOAD
        DSNTIPK  CICSMOD
        DSNTIPK  CICSMAC
        DSNTIPK  CICSCOB
        DSNTIPK  CICSPLI
        DSNTIPK  CICSEXCI
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPD  NUMDATAB
        DSNTIPD  NUMTABLE
        DSNTIPD  NUMCOLUM
        DSNTIPD  NUMVIEWS
        DSNTIPD  NUMTABSP
        DSNTIPD  NUMPLANS
        DSNTIPD  NUMSTMTS
        DSNTIPD  NUMPKGS
        DSNTIPD  NUMPKSTS
        DSNTIPD  NUMPLPL
        DSNTIPD  NUMSTMTE
        DSNTIPD  NUMSTMTL
        DSNTIPD  NUMTEMP1
        DSNTIPD  NUM4KDS
        DSNTIPD  NUMTEMP2
        DSNTIPD  NUM32KDS
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIP7  LOBVALA
        DSNTIP7  LOBVALS
        DSNTIP7  LEMAX
        DSNTIP7  WRNTSQTY * Panel only *
        DSNTIP7  TSQTY
        DSNTIP7  WRNIXQTY * Panel only *
        DSNTIP7  IXQTY
        DSNTIP7  DSVCI
        DSNTIP7  MGEXTSZ
------- -------- -------- -------- -------- -------- ------------ ----
        DSNTIPE  NUMCONDB
        DSNTIPE  NUMCONCR
        DSNTIPE  NUMCONRM
        DSNTIPE  CONDBAT
        DSNTIPE  NUMCONTS
        DSNTIPE  NUMCONBT
        DSNTIPE  SEQCACH
        DSNTIPE  SEQPRES
        DSNTIPE  MAXKEEPD
        DSNTIPE  CONTSTOR
        DSNTIPE  MINSTOR
        DSNTIPE  LRDRTHLD
        DSNTIPE  PADIX
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIP1  TBSBPOOL
        DSNTIP1  IDXBPOOL
        DSNTIP1  BUFMAX00
        DSNTIP1  BUFMAX01
        DSNTIP1  BUFMAX02
        DSNTIP1  BP3
        DSNTIP1  BP4
        DSNTIP1  BP5
        DSNTIP1  BP6
        DSNTIP1  BP7
        DSNTIP1  BP8
        DSNTIP1  BP9
        DSNTIP1  BP10
        DSNTIP1  BP11
        DSNTIP1  BP12
        DSNTIP1  BP13
        DSNTIP1  BP14
        DSNTIP1  BP15
        DSNTIP1  BP16
        DSNTIP1  BP17
        DSNTIP1  BP18
        DSNTIP1  BP19
        DSNTIP1  BP20
        DSNTIP1  BP21
        DSNTIP1  BP22
        DSNTIP1  BP23
        DSNTIP1  BP24
        DSNTIP1  BP25
        DSNTIP1  BP26
        DSNTIP1  BP27
        DSNTIP1  BP28
        DSNTIP1  BP29
        DSNTIP1  BP30
        DSNTIP1  BP31
        DSNTIP1  BP32
        DSNTIP1  BP33
        DSNTIP1  BP34
        DSNTIP1  BP35
        DSNTIP1  BP36
        DSNTIP1  BP37
        DSNTIP1  BP38
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIP2  BP39
        DSNTIP2  BP40
        DSNTIP2  BP41
        DSNTIP2  BP42
        DSNTIP2  BP43
        DSNTIP2  BP44
        DSNTIP2  BP45
        DSNTIP2  BP46
        DSNTIP2  BP47
        DSNTIP2  BP48
        DSNTIP2  BP49
        DSNTIP2  BUFMAX8
        DSNTIP2  BP8K1
        DSNTIP2  BP8K2
        DSNTIP2  BP8K3
        DSNTIP2  BP8K4
        DSNTIP2  BP8K5
        DSNTIP2  BP8K6
        DSNTIP2  BP8K7
        DSNTIP2  BP8K8
        DSNTIP2  BP8K9
        DSNTIP2  BUFMAX16
        DSNTIP2  BP16K1
        DSNTIP2  BP16K2
        DSNTIP2  BP16K3
        DSNTIP2  BP16K4
        DSNTIP2  BP16K5
        DSNTIP2  BP16K6
        DSNTIP2  BP16K7
        DSNTIP2  BP16K8
        DSNTIP2  BP16K9
        DSNTIP2  BUFMAX32
        DSNTIP2  BP32K1
        DSNTIP2  BP32K2
        DSNTIP2  BP32K3
        DSNTIP2  BP32K4
        DSNTIP2  BP32K5
        DSNTIP2  BP32K6
        DSNTIP2  BP32K7
        DSNTIP2  BP32K8
        DSNTIP2  BP32K9
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPN  AUDIT
        DSNTIPN  OPTRCAUT
        DSNTIPN  OPTRCSIZ
        DSNTIPN  OPSMFACT
        DSNTIPN  OPSMFSTA
        DSNTIPN  OPSTATIM
        DSNTIPN  SYNCVAL
        DSNTIPN  DSSTIME
        DSNTIPN  MON
        DSNTIPN  MONSIZE
        DSNTIPN  UIFCIDS
        DSNTIPN  ACCUMACC
        DSNTIPN  ACCUMUID
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPO  OPROUTCD
        DSNTIPO  RECALL
        DSNTIPO  RECALLD
        DSNTIPO  RLFSTART
        DSNTIPO  RLFSUFF
        DSNTIPO  RLFERROR
        DSNTIPO  DSNZPARM
        DSNTIPO  ABIND
        DSNTIPO  ABEXP
        DSNTIPO  DPROP
        DSNTIPO  SITETYP
        DSNTIPO  TRKRSITE
        DSNTIPO  ARC2FRST
        DSNTIPO  STATHIST
        DSNTIPO  STATROLL
        DSNTIPO  STATSINT
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPF  DEFLANG
        DSNTIPF  DECPOINT
        DSNTIPF  DEFSTRNG
        DSNTIPF  DEFSQSTR
        DSNTIPF  DECPDSSD
        DSNTIPF  DEFMIXED
        DSNTIPF  DEFCCSID
        DSNTIPF  ASCCCSID
        DSNTIPF  UNICCSID
        DSNTIPF  ENSCHEME
        DSNTIPF  APPENSCH
        DSNTIPF  LCCTYPE
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIP4  DECDIV3
        DSNTIP4  DECARTH
        DSNTIP4  DYNRULS
        DSNTIP4  DESCSTAT
        DSNTIP4  DEFDATE
        DSNTIP4  DEFTIME
        DSNTIP4  DEFDATEL
        DSNTIP4  DEFTIMEL
        DSNTIP4  DEFSQLVL
        DSNTIP4  PADNTSTR
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIP8  CDSSRDEF
        DSNTIP8  CACHEDYN
        DSNTIP8  OPTHINTS
        DSNTIP8  RETVLCFK
        DSNTIP8  RELCURHL
        DSNTIP8  PARAMDEG
        DSNTIP8  PARTKEYU
        DSNTIP8  EDMBFIT
        DSNTIP8  IMMEDWRI
        DSNTIP8  EVALUNC
        DSNTIP8  SKIPUNCI
        DSNTIP8  REFSHAGE
        DSNTIP8  MAINTYPE
        DSNTIP8  STARJOIN
        DSNTIP8  SJMXPOOL
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPI  IRLMINST
        DSNTIPI  IRLMSSID
        DSNTIPI  IRLMWAIT
        DSNTIPI  IRLMAUTO
        DSNTIPI  IRLMPROC
        DSNTIPI  IRLMSTTO
        DSNTIPI  UTIMOUT
        DSNTIPI  RRULOCK
        DSNTIPI  XLKUPDLT
        DSNTIPI  IRLMTRAC
        DSNTIPI  BMPTOUT
        DSNTIPI  DLITOUT
        DSNTIPI  RETLWAIT
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPJ  IRLMPGPR
        DSNTIPJ  IRLMMLMT
        DSNTIPJ  IRLMLKTS
        DSNTIPJ  IRLMLKUS
        DSNTIPJ  IRLMDEDT
        DSNTIPJ  IRLMDEDC
        DSNTIPJ  IRLMIDEN
        DSNTIPJ  IRLMGRPN
        DSNTIPJ  IRLMLKSZ
        DSNTIPJ  IRLMLTE
        DSNTIPJ  IRLMDISC
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPP  PROTARAC
        DSNTIPP  PROTAUTH
        DSNTIPP  PROTADMN
        DSNTIPP  PROTADM2
        DSNTIPP  PROTOPR1
        DSNTIPP  PROTOPR2
        DSNTIPP  PROTUNKN
        DSNTIPP  PROTRLF
        DSNTIPP  BINDNV
        DSNTIPP  AUTHCACH
        DSNTIPP  CACHPAC
        DSNTIPP  CACHERAC
        DSNTIPP  DBACRVW
        DSNTIPP  AEXITLIM
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPM  MVSSNAME
        DSNTIPM  MVSSPREF
        DSNTIPM  MVSSMEMB
        DSNTIPM  MVSSSEQN
        DSNTIPM  MVSAMEMB
        DSNTIPM  MVSASEQN
        DSNTIPM  MVSLMEMB
        DSNTIPM  MVSLSEQN
        DSNTIPM  MVSSMSC
        DSNTIPM  SUPERRS
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPL  LOGSNUM
        DSNTIPL  LOGOUTPT
        DSNTIPL  NUMHRARC
        DSNTIPL  NUMCOMHR
        DSNTIPL  LOGAPSTG
        DSNTIPL  OPCHKFRQ
        DSNTIPL  FREQTYPE
        DSNTIPL  URCHKTH
        DSNTIPL  URLGWTH
        DSNTIPL  LBACKOUT
        DSNTIPL  BACKODUR
        DSNTIPL  PCLOSEN
        DSNTIPL  PCLOSET
        DSNTIPL  DLDFREQ
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPA  ARCHUNIT
        DSNTIPA  ARCHPRI
        DSNTIPA  ARCHSEC
        DSNTIPA  ARCHCTLG
        DSNTIPA  ARCHDEVT
        DSNTIPA  ARCHDEV2
        DSNTIPA  ARCHSIZE
        DSNTIPA  ARCHMRTU
        DSNTIPA  ARCHDEAP
        DSNTIPA  ARCHMAXV
        DSNTIPA  ARCHWTOR
        DSNTIPA  ARCHWRTC
        DSNTIPA  ARCRETN
        DSNTIPA  ARCHMQP
        DSNTIPA  ARCHCOMP
        DSNTIPA  SVOLARC
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPS  DBSTADFR
        DSNTIPS  DBSTARTA
        DSNTIPS  DBSTARTB
        DSNTIPS  DBSTARTC
        DSNTIPS  DBSTARTD
        DSNTIPS  DBSTARTE
        DSNTIPS  DBSTARTF
        DSNTIPS  DBSTARTG
        DSNTIPS  DBSTARTH
        DSNTIPS  DBSTARTI
        DSNTIPS  DBSTARTJ
        DSNTIPS  DBSTARTK
        DSNTIPS  DBSTARTL
        DSNTIPS  DBSTARTM
        DSNTIPS  DBSTARTN
        DSNTIPS  DBSTARTO
        DSNTIPS  DBSTARTP
        DSNTIPS  DBSTARTQ
        DSNTIPS  DBSTARTR
        DSNTIPS  DBSTARTS
        DSNTIPS  DBSTARTT
        DSNTIPS  DBSTARTU
        DSNTIPS  DBSTARTV
        DSNTIPS  DBSTARTW
        DSNTIPS  DBSTARTX
        DSNTIPS  DBSTARTY
        DSNTIPS  DBSTARTZ
        DSNTIPS  DBSTART0
        DSNTIPS  DBSTART1
        DSNTIPS  DBSTART2
        DSNTIPS  DBSTART3
        DSNTIPS  DBSTART4
        DSNTIPS  DBSTART5
        DSNTIPS  DBSTART6
        DSNTIPS  DBSTART7
        DSNTIPS  DBSTART8
        DSNTIPS  DBSTART9
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPR  DDSTART
        DSNTIPR  DDLOC
        DSNTIPR  DDLUNAM
        DSNTIPR  DDPASS
        DSNTIPR  RLFERRD
        DSNTIPR  RESYNC
        DSNTIPR  CMTSTAT
        DSNTIPR  MAXTYPE1
        DSNTIPR  GENLUNM
        DSNTIPR  IDTHTOIN
        DSNTIPR  EXTSEC
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIP5  DRDAPRT
        DSNTIP5  RESYNPRT
        DSNTIP5  TCPALVER
        DSNTIP5  EXTRAREQ
        DSNTIP5  EXTRASRV
        DSNTIP5  DBPROTCL
        DSNTIP5  HOPAUTH
        DSNTIP5  TCPKPALV
        DSNTIP5  POOLINAC
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPX  STORWLM
        DSNTIPX  STORPROC
        DSNTIPX  STORTCBS
        DSNTIPX  STORMXAB
        DSNTIPX  STORTIME
        DSNTIPX  WLMENV
        DSNTIPX  MXNUMCUR
        DSNTIPX  MXSTPROC
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPZ  RGFINSTL
        DSNTIPZ  RGFDEDPL
        DSNTIPZ  RGFFULLQ
        DSNTIPZ  RGFDEFLT
        DSNTIPZ  RGFESCP
        DSNTIPZ  RGFCOLID
        DSNTIPZ  DGFDBNAM
        DSNTIPZ  RGFNMPRT
        DSNTIPZ  RGFNMORT
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPY  DDSAMPL
        DSNTIPY  JOB1
        DSNTIPY  JOB2
        DSNTIPY  JOB3
        DSNTIPY  JOB4
        DSNTIPY  JOB5
        DSNTIPY  JOB6
        DSNTIPY  JOB7
------- -------- -------- -------- -------- -------- ------------ -----
        DSNTIPC  OVDSMAX
        DSNTIPC  OVDEMPL
        DSNTIPC  OVDSTMTC
        DSNTIPC  OVEDMDBC
        DSNTIPC  OVSRTPL
        DSNTIPC  OVRIDPL
        DSNTIPC  OVTREG
------- -------- -------- -------- -------- -------- ------------ -----
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  ad=td("ASMLIB   DSET  M  NULL                       NULL")
  ad=td("CCOMP    DSET  M  CBC.SCCNCMP                NULL")
  ad=td("CHDRS    DSET  M  SYS1.CEE.SCEEH.H           NULL")
  ad=td("CICSCOB  DSET  G  NULL                       NULL")
  ad=td("CICSCOB2 DSET  G  CICS.TEST.TS13.SDFHCOB     NULL")
  ad=td("CICSEXCI DSET  G  CICS.TEST.TS13.SDFHEXCI    NULL")
  ad=td("CICSMAC  DSET  G  CICS.TEST.TS13.SDFHMAC     NULL")
  ad=td("CICSMOD  DSET  G  CICS.TEST.TS13.SDFHLOAD    NULL")
  ad=td("CICSPLI  DSET  G  CICS.TEST.TS13.SDFHPL1     NULL")
  ad=td("CLINK    DSET  M  SYS1.CEE.SCEELKED          NULL")
  ad=td("CMSGS    DSET  M  NULL                       NULL")
  ad=td("COBCOMP  DSET  M  NULL                       NULL")
  ad=td("COBLINK  DSET  M  NULL                       NULL")
  ad=td("COB2COMP DSET  M  NULL                       NULL")
  ad=td("COB2LINK DSET  M  NULL                       NULL")
  ad=td("CPMSGS   DSET  M  NULL                       NULL")
  ad=td("CPPAUTCL DSET  M  NULL                       NULL")
  ad=td("CPPCHDRS DSET  M  NULL                       NULL")
  ad=td("CPPCLASS DSET  M  NULL                       NULL")
  ad=td("CPPCMP   DSET  M  NULL                       NULL")
  ad=td("CPPCMSGS DSET  M  NULL                       NULL")
  ad=td("CPPHDRS  DSET  M  NULL                       NULL")
  ad=td("CPPLINK  DSET  M  NULL                       NULL")
  ad=td("CPPPMSGS DSET  M  NULL                       NULL")
  ad=td("CPPPROC  DSET  M  NULL                       NULL")
  ad=td("CPPRUN   DSET  M  SYS1.CEE.SCEERUN           NULL")
  ad=td("CRUN     DSET  M  SYS1.CEE.SCEERUN           NULL")
  ad=td("DBRMLIB  DSET  M  DB2.TEST.DBRMLIB.DATA      NULL")
  ad=td("DSNALOAD DSET  M  DB2.V7R1M0.ADSNLOAD        NULL")
  ad=td("DSNCHDRS DSET  M  DB2.TEST.SDSNC.H           NULL")
  ad=td("DSNDBRM  DSET  M  DB2.TEST.SDSNDBRM          NULL")
  ad=td("DSNEXIT  DSET  M  DB2.TEST.SDSNEXIT          NULL")
  ad=td("DSNIRLM  DSET  M  DB2.TEST.SDXRRESL          NULL")
  ad=td("DSNIVPD  DSET  M  DB2.TEST.SDSNIVPD          NULL")
  ad=td("DSNLINK  DSET  M  DB2.TEST.SDSNLINK          NULL")
  ad=td("DSNLOAD  DSET  M  DB2.TEST.SDSNLOAD          NULL")
  ad=td("DSNMACS  DSET  M  DB2.TEST.SDSNMACS          NULL")
  ad=td("FORTCOMP DSET  M  NULL                       NULL")
  ad=td("FORTLINK DSET  M  NULL                       NULL")
  ad=td("GDDMMACS DSET  M  SYS1.GDDM.SADMSAM          NULL")
  ad=td("GDDMLOAD DSET  M  SYS1.GDDM.SADMMOD          NULL")
  ad=td("ICOBCOMP DSET  M  SYS1.IGY.SIGYCOMP          NULL")
  ad=td("ICOBRUN  DSET  M  SYS1.CEE.SCEERUN           NULL")
  ad=td("ICOBPMSG DSET  M  SYS1.CEE.SCEEMSGP          NULL")
  ad=td("ICOBLINK DSET  M  SYS1.CEE.SCEELKED          NULL")
  ad=td("ISPLOAD  DSET  M  ISP.SISPLOAD               NULL")
  ad=td("LELKED   DSET  M  SYS1.CEE.SCEELKED          NULL")
  ad=td("LEPLMSGL DSET  M  SYS1.CEE.SCEEMSGP          NULL")
  ad=td("LERUN    DSET  M  SYS1.CEE.SCEERUN           NULL")
  ad=td("MACLIB   DSET  M  SYS1.MACLIB                NULL")
  ad=td("NEWCL    DSET  M  DB2.TEST.SDSNTEMP.IPCO     NULL")
  ad=td("NEWSAMP  DSET  M  DB2.TEST.SDSNSAMP.IPCO     NULL")
  ad=td("OUTCL    DSET  M  &PREF.NEW.SDSNCLST         NULL")
  ad=td("PLICOMOD DSET  M  SYS1.IEL.V1R1M1.SIELCOMP   NULL")
  ad=td("PLICOMP  DSET  M  NULL                       NULL")
  ad=td("PLILINKB DSET  M  NULL                       NULL")
  ad=td("PLILINKC DSET  M  NULL                       NULL")
  ad=td("PLIRUNB  DSET  M  NULL                       NULL")
  ad=td("PLIRUNC  DSET  M  NULL                       NULL")
  ad=td("PROCLIB  DSET  M  SYS1.PROCLIB               NULL")
  ad=td("RESLIB   DSET  M  NULL                       NULL")
  ad=td("RUNLIB   DSET  M  &PREF.RUNLIB.LOAD&SUFF     NULL")
  ad=td("SORTLIB  DSET  M  SYS1.SORTLIB               NULL")
  ad=td("SRCLIB   DSET  M  &PREF.SRCLIB.DATA&SUFF     NULL")
  ad=td("SOMDLLI  DSET  M  SYS1.SOMMVS.SGOSIMP        NULL")
  ad=td("VOLSDAT1 CHARR M  $           999999        DSNV01")
  ad=td("VOLSDAT2 CHARR M  NONE        999999        DSNV01")
  ad=td("VOLSDAT3 CHARR M  NONE        999999        DSNV02")
  ad=td("VOLSDAT4 CHARR M  NONE        999999        NULL")
  ad=td("VOLSDAT5 CHARR M  NONE        999999        NULL")
  ad=td("VOLSDAT6 CHARR M  NONE        999999        NULL")
  ad=td("VOLSDAT7 CHARR M  NONE        999999        NULL")
  ad=td("VOLSDEVT CHARR M  $           99999999      3390")
  ad=td("WKDBNAME CHARR M  NONE        NONE          DSN1_or_no")
  ad=td("BP10     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP11     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP12     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP13     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP14     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP15     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP16     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP16K1   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K2   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K3   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K4   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K5   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K6   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K7   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K8   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP16K9   NUM   M  0           62500000      JOB_DSNTIJTM")
  ad=td("BP17     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP18     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP19     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP20     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP21     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP22     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP23     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP24     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP25     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP26     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP27     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP28     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP29     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP3      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP30     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP31     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP32     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP32K1   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K2   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K3   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K4   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K5   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K6   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K7   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K8   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP32K9   NUM   M  0           31250000      JOB_DSNTIJTM")
  ad=td("BP33     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP34     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP35     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP36     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP37     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP38     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP39     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP4      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP40     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP41     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP42     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP43     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP44     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP45     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP46     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP47     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP48     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP49     NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP5      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP6      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP7      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP8      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BP8K1    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K2    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K3    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K4    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K5    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K6    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K7    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K8    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP8K9    NUM   M  0           125000000     JOB_DSNTIJTM")
  ad=td("BP9      NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BUFMAX00 NUM   M  2000        250000000     JOB_DSNTIJTM")
  ad=td("BUFMAX01 NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BUFMAX02 NUM   M  0           250000000     JOB_DSNTIJTM")
  ad=td("BUFMAX16 NUM   M  500         62500000      JOB_DSNTIJTM")
  ad=td("BUFMAX32 NUM   M  250         31250000      JOB_DSNTIJTM")
  ad=td("BUFMAX8  NUM   M  1000        125000000     JOB_DSNTIJTM")

  ad=td("DSNZPARM CHARR M  $           NONE          "mbr_dsnzparm)
  ad=td("DYNRULS  CHAR  G  NO          YES           "yes_or_no)
  ad=td("FREQTYPE CHAR  M  LOGRECS     MINUTES       LOGRECS")
  ad=td("LCCTYPE  STR   G  NULL                      "yes_or_no)
  ad=td("LOGOUTPT NUM   M  40960       409600000     4000K")
  ad=td("NUMCOMHR NUM   M  1           16777216      3600")
  ad=td("NUMCONBT NUM   M  1           2000          50")
  ad=td("NUMCONCR NUM   M  1           2000          200")
  ad=td("NUMCONRM NUM   M  0           1999          200")
  ad=td("NUMCONTS NUM   M  1           2000          50")
  ad=td("NUMHRARC NUM   M  1           200           24")
  ad=td("OPTRCAUT CHAR  M  NONE        NONE          "yes_or_no)
  ad=td("OVRIDPL  CHAR  M  NONE        NONE          NULL")
  ad=td("PADNTSTR CHAR  M  NO          YES           "yes_or_no)
  ad=td("POOLINAC NUM   M  0           9999          120")
  ad=td("PROTARAC CHAR  M  NO          YES           "yes_or_no)
  ad=td("PROTAUTH CHAR  M  NO          YES           "yes_or_no)
  ad=td("RESYNPRT CHAR  M  NONE        NONE          NULL")
  ad=td("RLFSTART CHAR  M  NO          YES           "yes_or_no)
  ad=td("STORTCBS NUM   M  1           1000          8")
ken=>
  ad=td("STORWLM  CHARR M  NONE        NONE          NULL")
  ad=td("SVOLARC  CHAR  M  NO          YES           "yes_or_no)
  ad=td("SYNCVAL  CHAR  M  NONE        NONE          "yes_or_no)
  ad=td("TCPALVER CHAR  G  NO          YES           "yes_or_no)
  ad=td("TCPKPALV CHAR  M  NONE        NONE          "keep_alive)
  ad=td("TRKRSITE CHAR  G  NO          YES           "yes_or_no)
  ad=td("UIFCIDS  CHAR  G  NO          YES           "yes_or_no)
  ad=td("UNICCSID NUM   G  NONE        NONE          1208")
  ad=td("VCATSTAT CHAR  G  NO          YES           "yes_or_no)
  ad=td("XLKUPDLT CHAR  M  NONE        NONE          "yes_or_no)
  ad=td("ARCHDEAP CHARR M  $           NONE          0")
  ad=td("ASCCCSID NUM   G  1           65533          null")
  ad=td("AUDIT    CHAR  M  NONE        NONE          "yes_or_no)

DB2T 710
* ********************************************************* *
* FILE CREATED: 2002/06/18  12:45                           *
* PARM  TYPE  SCP MIN         MAX           CURRENT-VALUE   *
* ********************************************************* *
ABEXP    CHAR  M  NO          YES           YES
ABIND    CHAR  M  NONE        NONE          YES
APPENSCH CHAR  G  NONE        NONE          EBCDIC
ARCHCOMP CHAR  M  NO          YES           YES
ARCHCTLG CHAR  M  NO          YES           YES
ARCHDEAP CHARR M  $           NONE          0
ARCHDEVT CHARR M  $           NONE          3390
ARCHDEV2 CHARR M  NONE        NONE          3390
ARCHMAXV NUM   M  10          1000          1000
ARCHMQP  NUM   M  1           999           5
ARCHMRTU NUM   M  1           99            3
ARCHPRE1 CHARR M  $           NONE          DB2T.ARCHLOG1
ARCHPRE2 CHARR M  $           NONE          DB2T.ARCHLOG2
ARCHPRI  CHAR  M  NONE        NONE          250
ARCHSEC  CHAR  M  NONE        NONE          50
ARCHSIZE NUM   M  8192        28672         24576
ARCHTS   CHAR  M  NONE        NONE          YES
ARCHTWO  NUM   M  1           2             2
ARCHUNIT CHAR  M  NONE        NONE          CYL
ARCHWRTC CHARR M  1           NONE          1,3,4
ARCHWTOR CHAR  M  NO          YES           NO
ARCRETN  NUM   M  0           9999          35
ARC2FRST CHAR  M  NO          YES           NO
ASCCCSID NUM   G  0           65533         437
ASSIST   CHAR  M  NO          YES           NO
ASMLIB   DSET  M  NULL
AUDIT    CHAR  M  NONE        NONE          YES
AUTHCACH NUM   M  0           4096          0
BACKODUR NUM   M  0           255           5
BINDNV   CHAR  M  BIND        BINDADD       BINDADD
BMPTOUT  NUM   M  1           254           4
BP3      NUM   M  0           8000000       1000
BP4      NUM   M  0           8000000       3000
BP5      NUM   M  0           8000000       2500
BP6      NUM   M  0           8000000       0
BP7      NUM   M  0           8000000       5000
BP8      NUM   M  0           8000000       1000
BP9      NUM   M  0           8000000       0
BP10     NUM   M  0           8000000       0
BP11     NUM   M  0           8000000       0
BP12     NUM   M  0           8000000       0
BP13     NUM   M  0           8000000       0
BP14     NUM   M  0           8000000       0
BP15     NUM   M  0           8000000       0
BP16     NUM   M  0           8000000       0
BP17     NUM   M  0           8000000       0
BP18     NUM   M  0           8000000       0
BP19     NUM   M  0           8000000       0
BP20     NUM   M  0           8000000       0
BP21     NUM   M  0           8000000       0
BP22     NUM   M  0           8000000       0
BP23     NUM   M  0           8000000       0
BP24     NUM   M  0           8000000       0
BP25     NUM   M  0           8000000       0
BP26     NUM   M  0           8000000       0
BP27     NUM   M  0           8000000       0
BP28     NUM   M  0           8000000       0
BP29     NUM   M  0           8000000       0
BP30     NUM   M  0           8000000       0
BP31     NUM   M  0           8000000       0
BP32     NUM   M  0           8000000       0
BP33     NUM   M  0           8000000       0
BP34     NUM   M  0           8000000       0
BP35     NUM   M  0           8000000       0
BP36     NUM   M  0           8000000       0
BP37     NUM   M  0           8000000       0
BP38     NUM   M  0           8000000       0
BP39     NUM   M  0           8000000       0
BP40     NUM   M  0           8000000       0
BP41     NUM   M  0           8000000       0
BP42     NUM   M  0           8000000       0
BP43     NUM   M  0           8000000       0
BP44     NUM   M  0           8000000       0
BP45     NUM   M  0           8000000       0
BP46     NUM   M  0           8000000       0
BP47     NUM   M  0           8000000       0
BP48     NUM   M  0           8000000       0
BP49     NUM   M  0           8000000       0
BP8K1    NUM   M  0           8000000       0
BP8K2    NUM   M  0           8000000       0
BP8K3    NUM   M  0           8000000       0
BP8K4    NUM   M  0           8000000       0
BP8K5    NUM   M  0           8000000       0
BP8K6    NUM   M  0           8000000       0
BP8K7    NUM   M  0           8000000       0
BP8K8    NUM   M  0           8000000       0
BP8K9    NUM   M  0           8000000       0
BP16K1   NUM   M  0           8000000       0
BP16K2   NUM   M  0           8000000       0
BP16K3   NUM   M  0           8000000       0
BP16K4   NUM   M  0           8000000       0
BP16K5   NUM   M  0           8000000       0
BP16K6   NUM   M  0           8000000       0
BP16K7   NUM   M  0           8000000       0
BP16K8   NUM   M  0           8000000       0
BP16K9   NUM   M  0           8000000       0
BP32K1   NUM   M  0           8000000       0
BP32K2   NUM   M  0           8000000       0
BP32K3   NUM   M  0           8000000       0
BP32K4   NUM   M  0           8000000       0
BP32K5   NUM   M  0           8000000       0
BP32K6   NUM   M  0           8000000       0
BP32K7   NUM   M  0           8000000       0
BP32K8   NUM   M  0           8000000       0
BP32K9   NUM   M  0           8000000       0
BSDSNAM1 CHARR M  $           NONE          DB2T.BSDS01
BSDSNAM2 CHARR M  $           NONE          DB2T.BSDS02
BUFMAX00 NUM   M  56          8000000       4000
BUFMAX01 NUM   M  0           8000000       4000
BUFMAX02 NUM   M  0           8000000       4000
BUFMAX8  NUM   M  0           8000000       0
BUFMAX16 NUM   M  0           8000000       0
BUFMAX32 NUM   M  0           8000000       1500
CACHEDYN CHAR  M  NO          YES           YES
CACHEPAC NUM   M  0           2097152       32768
CACHERAC NUM   M  0           2097152       32768
CCOMP    DSET  M  SYS1.SCBCCMP
CDSSRDEF CHAR  M  1           ANY           1
CHDRS    DSET  M  SYS1.CEE.SCEEH.H
CICSCOB  DSET  G  NULL
CICSCOB2 DSET  G  CICS.TEST.TS13.SDFHCOB
CICSEXCI DSET  G  CICS.TEST.TS13.SDFHEXCI
CICSMAC  DSET  G  CICS.TEST.TS13.SDFHMAC
CICSMOD  DSET  G  CICS.TEST.TS13.SDFHLOAD
CICSPLI  DSET  G  CICS.TEST.TS13.SDFHPL1
CLINK    DSET  M  SYS1.CEE.SCEELKED
CMSGS    DSET  M  NULL
CMTSTAT  CHAR  M  ACTIVE      INACTIVE      INACTIVE
COBCOMP  DSET  M  NULL
COBLINK  DSET  M  NULL
COB2COMP DSET  M  NULL
COB2LINK DSET  M  NULL
CONDBAT  NUM   M  0           150000        50
CONTSTOR CHAR  M  NO          YES           NO
COORDNTR CHAR  M  NO          YES           NO
CPMSGS   DSET  M  NULL
CPPAUTCL DSET  M  NULL
CPPCHDRS DSET  M  NULL
CPPCLASS DSET  M  NULL
CPPCMP   DSET  M  NULL
CPPCMSGS DSET  M  NULL
CPPHDRS  DSET  M  NULL
CPPLINK  DSET  M  NULL
CPPPMSGS DSET  M  NULL
CPPPROC  DSET  M  NULL
CPPPROG  CHARR M  NONE        NONE          NULL
CPPRUN   DSET  M  SYS1.CEE.SCEERUN
CPROG    CHARR M  NONE        NONE          NULL
CRUN     DSET  M  SYS1.CEE.SCEERUN
DATASHR  CHAR  M  NONE        NONE          NO
DBACRVW  CHAR  G  NO          YES           NO
DBPROTCL CHAR  G  DRDA        PRIVATE       DRDA
DBSTADFR CHAR  M  DEFER       RESTART       RESTART
DBSTARTA CHARR M  $           NONE          ALL
DBSTARTB CHAR  M  NONE        NONE          NULL
DBSTARTC CHAR  M  NONE        NONE          NULL
DBSTARTD CHAR  M  NONE        NONE          NULL
DBSTARTE CHAR  M  NONE        NONE          NULL
DBSTARTF CHAR  M  NONE        NONE          NULL
DBSTARTG CHAR  M  NONE        NONE          NULL
DBSTARTH CHAR  M  NONE        NONE          NULL
DBSTARTI CHAR  M  NONE        NONE          NULL
DBSTARTJ CHAR  M  NONE        NONE          NULL
DBSTARTK CHAR  M  NONE        NONE          NULL
DBSTARTL CHAR  M  NONE        NONE          NULL
DBSTARTM CHAR  M  NONE        NONE          NULL
DBSTARTN CHAR  M  NONE        NONE          NULL
DBSTARTO CHAR  M  NONE        NONE          NULL
DBSTARTP CHAR  M  NONE        NONE          NULL
DBSTARTQ CHAR  M  NONE        NONE          NULL
DBSTARTR CHAR  M  NONE        NONE          NULL
DBSTARTS CHAR  M  NONE        NONE          NULL
DBSTARTT CHAR  M  NONE        NONE          NULL
DBSTARTU CHAR  M  NONE        NONE          NULL
DBSTARTV CHAR  M  NONE        NONE          NULL
DBSTARTW CHAR  M  NONE        NONE          NULL
DBSTARTX CHAR  M  NONE        NONE          NULL
DBSTARTY CHAR  M  NONE        NONE          NULL
DBSTARTZ CHAR  M  NONE        NONE          NULL
DBSTART0 CHAR  M  NONE        NONE          NULL
DBSTART1 CHAR  M  NONE        NONE          NULL
DBSTART2 CHAR  M  NONE        NONE          NULL
DBSTART3 CHAR  M  NONE        NONE          NULL
DBSTART4 CHAR  M  NONE        NONE          NULL
DBSTART5 CHAR  M  NONE        NONE          NULL
DBSTART6 CHAR  M  NONE        NONE          NULL
DBSTART7 CHAR  M  NONE        NONE          NULL
DBSTART8 CHAR  M  NONE        NONE          NULL
DBSTART9 CHAR  M  NONE        NONE          NULL
DB2REL   CHAR  M  NONE        NONE          710
DDLOC    CHARR G  NONE        NONE          IDPODB2TDDF
DDLUNAM  CHARR M  NONE        NONE          DB2TDDF
DDPASS   CHARR M  NONE        NONE          NULL
DDSAMPL  CHARR M  NONE        NONE          NULL
DDSTART  CHARR M  NONE        NONE          AUTO
DECARTH  CHAR  G  NONE        NONE          DEC15
DECDIV3  CHAR  G  NO          YES           YES
DECPDSSD CHAR  G  APOST       QUOTE         APOST
DECPOINT CHAR  G  PERIOD      COMMA         PERIOD
DEFCCSID NUM   G  0           65533         37
DEFDATE  CHAR  G  NONE        NONE          ISO
DEFDATEL NUM   G  0           254           0
DEFLANG  CHAR  G  NONE        NONE          IBMCOB
DEFMIXED CHAR  G  NO          YES           NO
DEFSQLVL CHAR  G  NONE        NONE          NO
DEFSQSTR CHAR  G  NONE        NONE          DEFAULT
DEFSTRNG CHAR  G  NONE        NONE          DEFAULT
DEFTIME  CHAR  G  NONE        NONE          ISO
DEFTIMEL NUM   G  0           254           0
DESCSTAT CHAR  G  NO          YES           YES
DLDFREQ  NUM   M  0           32767         5
DLITOUT  NUM   M  1           254           6
DPROP    NUM   M  1           3             1
DRDAPRT  CHAR  G  NONE        NONE          448
DBRMLIB  DSET  M  DB2.TEST.DBRMLIB.DATA
DSNALOAD DSET  M  DB2.V7R1M0.ADSNLOAD
DSNCHDRS DSET  M  DB2.TEST.SDSNC.H
DSNDBRM  DSET  M  DB2.TEST.SDSNDBRM
DSNEXIT  DSET  M  DB2.TEST.SDSNEXIT
DSNIRLM  DSET  M  DB2.TEST.SDXRRESL
DSNIVPD  DSET  M  DB2.TEST.SDSNIVPD
DSNLINK  DSET  M  DB2.TEST.SDSNLINK
DSNLOAD  DSET  M  DB2.TEST.SDSNLOAD
DSNMACS  DSET  M  DB2.TEST.SDSNMACS
DSNZPARM CHARR M  $           NONE          DSNZPARM
DSSTIME  NUM   M  1           1440          5
DYNRULS  CHAR  G  NO          YES           YES
EDMBFIT  CHAR  M  NO          YES           NO
ENSCHEME CHAR  G  NONE        NONE          EBCDIC
EVALUNC  CHAR  M  NO          YES           NO
EXTRAREQ NUM   M  0           100           100
EXTRASRV NUM   M  0           100           100
EXTSEC   CHAR  G  NO          YES           YES
FORTCOMP DSET  M  NULL
FORTLINK DSET  M  NULL
FREQTYPE CHAR  M  LOGRECS     MINUTES       LOGRECS
GDDMMACS DSET  M  SYS1.GDDM.SADMSAM
GDDMLOAD DSET  M  SYS1.GDDM.SADMMOD
GENLUNM  CHARR M  NONE        NONE          NULL
GRPATTNM CHAR  G  NONE        NONE          NULL
GRPNAME  CHARR G  NONE        NONE          DSNCAT
HOPAUTH  CHAR  G  BOTH        RUNNER        BOTH
HP0      NUM   M  0           2097152       1000
HP1      NUM   M  0           2097152       2000
HP2      NUM   M  0           2097152       2000
HP3      NUM   M  0           2097152       0
HP4      NUM   M  0           2097152       0
HP5      NUM   M  0           2097152       0
HP6      NUM   M  0           2097152       0
HP7      NUM   M  0           2097152       0
HP8      NUM   M  0           2097152       0
HP9      NUM   M  0           2097152       0
HP10     NUM   M  0           2097152       0
HP11     NUM   M  0           2097152       0
HP12     NUM   M  0           2097152       0
HP13     NUM   M  0           2097152       0
HP14     NUM   M  0           2097152       0
HP15     NUM   M  0           2097152       0
HP16     NUM   M  0           2097152       0
HP17     NUM   M  0           2097152       0
HP18     NUM   M  0           2097152       0
HP19     NUM   M  0           2097152       0
HP20     NUM   M  0           2097152       0
HP21     NUM   M  0           2097152       0
HP22     NUM   M  0           2097152       0
HP23     NUM   M  0           2097152       0
HP24     NUM   M  0           2097152       0
HP25     NUM   M  0           2097152       0
HP26     NUM   M  0           2097152       0
HP27     NUM   M  0           2097152       0
HP28     NUM   M  0           2097152       0
HP29     NUM   M  0           2097152       0
HP30     NUM   M  0           2097152       0
HP31     NUM   M  0           2097152       0
HP32     NUM   M  0           2097152       0
HP33     NUM   M  0           2097152       0
HP34     NUM   M  0           2097152       0
HP35     NUM   M  0           2097152       0
HP36     NUM   M  0           2097152       0
HP37     NUM   M  0           2097152       0
HP38     NUM   M  0           2097152       0
HP39     NUM   M  0           2097152       0
HP40     NUM   M  0           2097152       0
HP41     NUM   M  0           2097152       0
HP42     NUM   M  0           2097152       0
HP43     NUM   M  0           2097152       0
HP44     NUM   M  0           2097152       0
HP45     NUM   M  0           2097152       0
HP46     NUM   M  0           2097152       0
HP47     NUM   M  0           2097152       0
HP48     NUM   M  0           2097152       0
HP49     NUM   M  0           2097152       0
HP8K0    NUM   M  0           1048576       0
HP8K1    NUM   M  0           1048576       0
HP8K2    NUM   M  0           1048576       0
HP8K3    NUM   M  0           1048576       0
HP8K4    NUM   M  0           1048576       0
HP8K5    NUM   M  0           1048576       0
HP8K6    NUM   M  0           1048576       0
HP8K7    NUM   M  0           1048576       0
HP8K8    NUM   M  0           1048576       0
HP8K9    NUM   M  0           1048576       0
HP16K0   NUM   M  0           524288        0
HP16K1   NUM   M  0           524288        0
HP16K2   NUM   M  0           524288        0
HP16K3   NUM   M  0           524288        0
HP16K4   NUM   M  0           524288        0
HP16K5   NUM   M  0           524288        0
HP16K6   NUM   M  0           524288        0
HP16K7   NUM   M  0           524288        0
HP16K8   NUM   M  0           524288        0
HP16K9   NUM   M  0           524288        0
HP32K    NUM   M  0           262144        0
HP32K1   NUM   M  0           262144        0
HP32K2   NUM   M  0           262144        0
HP32K3   NUM   M  0           262144        0
HP32K4   NUM   M  0           262144        0
HP32K5   NUM   M  0           262144        0
HP32K6   NUM   M  0           262144        0
HP32K7   NUM   M  0           262144        0
HP32K8   NUM   M  0           262144        0
HP32K9   NUM   M  0           262144        0
ICOBCOMP DSET  M  SYS1.IGY.SIGYCOMP
ICOBRUN  DSET  M  SYS1.CEE.SCEERUN
ICOBPMSG DSET  M  SYS1.CEE.SCEEMSGP
ICOBLINK DSET  M  SYS1.CEE.SCEELKED
IDTHTOIN NUM   M  0           9999          0
IDXBPOOL CHAR  M  NONE        NONE          BP2
IMMEDWRI CHAR  M  NONE        NONE          NO
IRLMAUTO CHAR  M  NO          YES           YES
IRLMDEDC NUM   M  NONE        NONE          4
IRLMDEDT NUM   M  1           5000          5
IRLMDISC CHAR  M  NO          YES           YES
IRLMGRPN CHARR G  NONE        NONE          DXRGROUP
IRLMIDEN NUM   M  1           255           1
IRLMINST CHAR  M  NO          YES           YES
IRLMLTE  NUM   M  0           1024          0
IRLMLKSZ NUM   M  2           8             2
IRLMLKTS NUM   M  0           2097152       1000
IRLMLKUS NUM   M  0           2097152       10000
IRLMMCSA NUM   M  1048576     1047527424    5242880
IRLMPC   CHAR  M  NO          YES           NO
IRLMPGPR CHAR  M  NO          YES           YES
IRLMPROC CHARR M  $           Z9999999      DB2TIRLM
IRLMSSID CHARR M  $           Z999          DBTL
IRLMSTTO NUM   M  1           3600          300
IRLMTRAC CHAR  M  NO          YES           NO
IRLMWAIT NUM   M  1           3600          90
ISPLOAD  DSET  M  SYS1.ISP.SISPLOAD
JOB1     STR   M  //DJG1853T JOB (S88400R0364,SYSTEMS),'DB2T MAINT',
JOB2     STR   M  // CLASS=3,REGION=0M,TIME=1440,MSGCLASS=X,NOTIFY=DJG1853
JOB4     STR   M  NULL
JOB5     STR   M  NULL
JOB6     STR   M  NULL
LBACKOUT CHAR  M  NONE        NONE          AUTO
LELKED   DSET  M  SYS1.CEE.SCEELKED
LEMAX    NUM   M  0           50            20
LEPLMSGL DSET  M  SYS1.CEE.SCEEMSGP
LERUN    DSET  M  SYS1.CEE.SCEERUN
LOBVALA  NUM   M  1           2097152       2048
LOBVALS  NUM   M  1           51200         2048
LCCTYPE  STR   G  NULL
LOGAPSTG NUM   M  NONE        NONE          0
LOGOUTPT NUM   M  40960       409600000     614400
LOGSNUM  NUM   M  2           31            3
LOGSPRE1 CHARR M  $           NONE          DB2T.LOGCOPY1
LOGSPRE2 CHARR M  $           NONE          DB2T.LOGCOPY2
LOGSTWO  NUM   M  1           2             2
MACLIB   DSET  M  SYS1.MACLIB
MAXKEEPD NUM   M  0           65535         5000
MAXTYPE1 NUM   M  0           NONE          18
MEMBNAME CHARR M  NONE        NONE          DB2T
MINSTOR  CHAR  M  NO          YES           NO
MON      CHAR  M  NONE        NONE          NO
MONSIZE  NUM   M  8192        2097152       8192
MVSAMEMB CHARR M  $$          99            00
MVSASEQN NUM   M  1           99999995      88888888
MVSCMSC  CHAR  M  NONE        NONE          SYSTEM
MVSLMEMB CHARR M  $$          99            00
MVSLSEQN NUM   M  1           99999999      88888888
MVSSMEMB CHARR M  $$          99            00
MVSSNAME CHARR M  $           Z999          DB2T
MVSSPREF CHARR M  NONE        NONE          -DB2T
MVSSSEQN NUM   M  1           99999995      88888888
NEWCL    DSET  M  DB2.TEST.SDSNTEMP.IPCO
NEWSAMP  DSET  M  DB2.TEST.SDSNSAMP.IPCO
NUMCOLUM NUM   M  1           750           10
NUMCOMHR NUM   M  1           16777216      3600
NUMCONBT NUM   M  1           2000          30
NUMCONCR NUM   M  1           2000          100
NUMCONDB NUM   M  1           800           50
NUMCONRM NUM   M  0           1999          18
NUMCONTS NUM   M  1           2000          100
NUMDATAB NUM   M  1           64000         200
NUMHRARC NUM   M  1           200           24
NUMPKGS  NUM   M  1           256000        1000
NUMPKSTS NUM   M  1           32000         10
NUMPLANS NUM   M  1           32000         200
NUMPLPL  NUM   M  1           32000         2
NUMSTMTE NUM   M  1           32000         15
NUMSTMTL NUM   M  1           16            2
NUMSTMTS NUM   M  1           32000         30
NUMTABLE NUM   M  1           400           10
NUMTABSP NUM   M  1           400           10
NUMTEMP1 NUM   M  1           2000000       2000000
NUMTEMP2 NUM   M  0           2000000       2000000
NUMVIEWS NUM   M  1           200           3
NUM32KDS NUM   M  0           99            1
NUM4KDS  NUM   M  1           99            1
OPCHKFRQ NUM   M  1           16000000      100000
OPROUTCD CHARR M  1           NONE          1
OPSMFACT CHAR  M  NONE        NONE          1,4,7,8
OPSMFSTA CHAR  M  NONE        NONE          YES
OPSTATIM NUM   M  1           1440          30
OPTHINTS CHAR  M  NO          YES           YES
OPTRCAUT CHAR  M  NONE        NONE          NO
OPTRCSIZ NUM   M  4096        405504        16384
OUTCL    DSET  M  DB2.TEST.NEW.SDSNCLST
OVDSMAX  CHAR  M  NONE        NONE          8000
OVEDMPL  CHAR  M  NONE        NONE          45000
OVEDMDS  CHAR  M  NONE        NONE          0
OVEDMDSM CHAR  M  NONE        NONE          NULL
OVRIDPL  CHAR  M  NONE        NONE          40184
OVSRTPL  CHAR  M  NONE        NONE          11236
PARAMDEG NUM   M  0           254           0
PARTKEYU CHAR  M  NONE        NONE          YES
PCLOSEN  NUM   M  1           32767         5
PCLOSET  NUM   M  1           32767         10
PLICOMOD DSET  M  SYS1.IEL.V1R1M1.SIELCOMP
PLICOMP  DSET  M  NULL
PLILINKB DSET  M  NULL
PLILINKC DSET  M  NULL
PLIRUNB  DSET  M  NULL
PLIRUNC  DSET  M  NULL
POOLINAC NUM   M  0           9999          120
PROCLIB  DSET  M  SYS1.PROCLIB
PROTADMN CHARR G  $           Z9999999      INSYSAD
PROTADM2 CHARR G  NONE        Z9999999      ZTSPC0
PROTARAC CHAR  M  NO          YES           NO
PROTAUTH CHAR  M  NO          YES           YES
PROTOPR1 CHARR G  NONE        Z9999999      ZTSPC3
PROTOPR2 CHARR G  NONE        Z9999999      SYSOPR
PROTRLF  CHARR M  $           NONE          ZTSPC4
PROTUNKN CHAR  M  NONE        NONE          ZTSPC4
RECALL   CHAR  M  NO          YES           YES
RECALLD  NUM   M  0           32767         1200
SUPERRS  CHAR  M  NO          YES           YES
RELCURHL CHAR  M  NO          YES           NO
RESLIB   DSET  M  NULL
RESYNC   NUM   M  $           NONE          2
RESYNPRT CHAR  M  NONE        NONE          3522
RETLWAIT NUM   M  0           254           0
RETVLCFK CHAR  G  NO          YES           NO
RGFDBNAM CHAR  G  NONE        NONE          DSNRGFDB
RGFCOLID CHAR  G  NONE        NONE          DSNRGCOL
RGFDEDPL CHAR  G  NO          YES           NO
RGFDEFLT CHAR  G  NONE        NONE          ACCEPT
RGFESCP  CHAR  M  NONE        NONE          NULL
RGFFULLQ CHAR  G  NO          YES           YES
RGFINSTL CHAR  G  NO          YES           NO
RGFNMORT CHAR  G  NONE        NONE          DSN_REGISTER_OBJT
RGFNMPRT CHAR  G  NONE        NONE          DSN_REGISTER_APPL
RLFERRD  CHAR  M  NONE        NONE          4500000
RLFERROR CHAR  M  NONE        NONE          4500000
RLFSTART CHAR  M  NO          YES           NO
RLFSUFF  CHARR M  AA          99            01
RRULOCK  CHAR  M  NO          YES           NO
RUNLIB   DSET  M  DB2.TEST.RUNLIB.LOAD
SAMPCOB  CHAR  M  NONE        NONE          IBMCOB
SEQCACH  CHAR  M  BYPASS      SEQ           SEQ
SEQPRES  CHAR  M  NO          YES           YES
SITETYP  CHAR  G  LOCALSITE   RECOVERYSITE  LOCALSITE
SORTLIB  DSET  M  SYS1.SORTLIB
SRCLIB   DSET  M  DB2.TEST.SRCLIB.DATA
SOMDLLI  DSET  M  SYS1.SOMMVS.SGOSIMP
STATHIST CHAR  G  NONE        NONE          NONE
STATROLL CHAR  G  NO          YES           NO
STATSINT NUM   G  1           1440          30
STORMXAB NUM   M  0           255           10
STORPROC CHARR M  NONE        NONE          DB2TSPAS
STORTCBS NUM   M  1           1000          8
STORTIME CHAR  M  NONE        NONE          60
STORWLM  CHARR M  NONE        NONE          DB2TWLM
SYNCVAL  CHAR  M  NONE        NONE          NO
TBSBPOOL CHAR  M  NONE        NONE          BP0
TCPALVER CHAR  G  NO          YES           NO
TCPKPALV CHAR  M  NONE        NONE          ENABLE
TRKRSITE CHAR  G  NO          YES           NO
URCHKTH  NUM   M  0           255           0
URLGWTH  NUM   M  NONE        NONE          0
UNICCSID NUM   G  NONE        NONE          1208
UTIMOUT  NUM   M  $           NONE          6
VCATALOG CHARR G  $           Z9999999      DB2T
VCATSTAT CHAR  G  NO          YES           NO
VOLSDAT1 CHARR M  $           999999        SMSP09
VOLSDAT2 CHARR M  NONE        999999        SMSP10
VOLSDAT3 CHARR M  NONE        999999        SMSP08
VOLSDAT4 CHARR M  NONE        999999        SMSP07
VOLSDAT5 CHARR M  NONE        999999        SMSP06
VOLSDAT6 CHARR M  NONE        999999        SMSP05
VOLSDAT7 CHARR M  NONE        999999        SMSP04
VOLSDEVT CHARR M  $           99999999      3390
VOLTDEVT CHARR M  $           99999999      SYSDA
VP0      CHAR  M  P           D             P
VP1      CHAR  M  P           D             P
VP2      CHAR  M  P           D             P
VP3      CHAR  M  P           D             P
VP4      CHAR  M  P           D             P
VP5      CHAR  M  P           D             P
VP6      CHAR  M  P           D             P
VP7      CHAR  M  P           D             P
VP8      CHAR  M  P           D             P
VP9      CHAR  M  P           D             P
VP10     CHAR  M  P           D             P
VP11     CHAR  M  P           D             P
VP12     CHAR  M  P           D             P
VP13     CHAR  M  P           D             P
VP14     CHAR  M  P           D             P
VP15     CHAR  M  P           D             P
VP16     CHAR  M  P           D             P
VP17     CHAR  M  P           D             P
VP18     CHAR  M  P           D             P
VP19     CHAR  M  P           D             P
VP20     CHAR  M  P           D             P
VP21     CHAR  M  P           D             P
VP22     CHAR  M  P           D             P
VP23     CHAR  M  P           D             P
VP24     CHAR  M  P           D             P
VP25     CHAR  M  P           D             P
VP26     CHAR  M  P           D             P
VP27     CHAR  M  P           D             P
VP28     CHAR  M  P           D             P
VP29     CHAR  M  P           D             P
VP30     CHAR  M  P           D             P
VP31     CHAR  M  P           D             P
VP32     CHAR  M  P           D             P
VP33     CHAR  M  P           D             P
VP34     CHAR  M  P           D             P
VP35     CHAR  M  P           D             P
VP36     CHAR  M  P           D             P
VP37     CHAR  M  P           D             P
VP38     CHAR  M  P           D             P
VP39     CHAR  M  P           D             P
VP40     CHAR  M  P           D             P
VP41     CHAR  M  P           D             P
VP42     CHAR  M  P           D             P
VP43     CHAR  M  P           D             P
VP44     CHAR  M  P           D             P
VP45     CHAR  M  P           D             P
VP46     CHAR  M  P           D             P
VP47     CHAR  M  P           D             P
VP48     CHAR  M  P           D             P
VP49     CHAR  M  P           D             P
VP8K0    CHAR  M  P           D             P
VP8K1    CHAR  M  P           D             P
VP8K2    CHAR  M  P           D             P
VP8K3    CHAR  M  P           D             P
VP8K4    CHAR  M  P           D             P
VP8K5    CHAR  M  P           D             P
VP8K6    CHAR  M  P           D             P
VP8K7    CHAR  M  P           D             P
VP8K8    CHAR  M  P           D             P
VP8K9    CHAR  M  P           D             P
VP16K0   CHAR  M  P           D             P
VP16K1   CHAR  M  P           D             P
VP16K2   CHAR  M  P           D             P
VP16K3   CHAR  M  P           D             P
VP16K4   CHAR  M  P           D             P
VP16K5   CHAR  M  P           D             P
VP16K6   CHAR  M  P           D             P
VP16K7   CHAR  M  P           D             P
VP16K8   CHAR  M  P           D             P
VP16K9   CHAR  M  P           D             P
VP32K0   CHAR  M  P           D             P
VP32K1   CHAR  M  P           D             P
VP32K2   CHAR  M  P           D             P
VP32K3   CHAR  M  P           D             P
VP32K4   CHAR  M  P           D             P
VP32K5   CHAR  M  P           D             P
VP32K6   CHAR  M  P           D             P
VP32K7   CHAR  M  P           D             P
VP32K8   CHAR  M  P           D             P
VP32K9   CHAR  M  P           D             P
WKDBNAME CHARR M  NONE        NONE          DB2T
WLMENV   CHAR  M  NONE        NONE          DB2TENV1
XLKUPDLT CHAR  M  NO          YES           NO


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
DB2T 810
* ********************************************************* *
* FILE CREATED: 2007/07/03  13:53                           *
* PARM  TYPE  SCP MIN         MAX           CURRENT-VALUE   *
* ********************************************************* *
ABEXP    CHAR  M  NO          YES           YES
ABIND    CHAR  M  NONE        NONE          YES
ACCUMACC CHAR  M  NONE        NONE          10
ACCUMUID NUM   M  0           10            0
AEXITLIM NUM   M  0           32767         10
APPENSCH CHAR  G  NONE        NONE          EBCDIC
ARCHCOMP CHAR  M  NO          YES           NO
ARCHCTLG CHAR  M  NO          YES           YES
ARCHDEAP CHARR M  $           NONE          0
ARCHDEVT CHARR M  $           NONE          3390
ARCHDEV2 CHARR M  NONE        NONE          3390
ARCHMAXV NUM   M  10          10000         1000
ARCHMQP  NUM   M  1           999           5
ARCHMRTU NUM   M  1           99            3
ARCHPRE1 CHARR M  $           NONE          DB2T.ARCHLOG1
ARCHPRE2 CHARR M  $           NONE          DB2T.ARCHLOG2
ARCHPRI  CHAR  M  NONE        NONE          100
ARCHSEC  CHAR  M  NONE        NONE          5
ARCHSIZE NUM   M  8192        28672         24576
ARCHTS   CHAR  M  NONE        NONE          YES
ARCHTWO  NUM   M  1           2             2
ARCHUNIT CHAR  M  NONE        NONE          CYL
ARCHWRTC CHARR M  1           NONE          1,3,4
ARCHWTOR CHAR  M  NO          YES           NO
ARCRETN  NUM   M  0           9999          35
ARC2FRST CHAR  M  NO          YES           NO
ASCCCSID NUM   G  1           65533         437
ASSIST   CHAR  M  NO          YES           NO
ASMLIB   DSET  M  SYS1.ASM.SASMMOD1
AUDIT    CHAR  M  NONE        NONE          NO
AUTHCACH NUM   M  0           4096          0
BACKODUR NUM   M  0           255           5
BINDNV   CHAR  M  BIND        BINDADD       BINDADD
BMPTOUT  NUM   M  1           254           4
BP3      NUM   M  0           250000000     5000
BP4      NUM   M  0           250000000     6000
BP5      NUM   M  0           250000000     5000
BP6      NUM   M  0           250000000     6000
BP7      NUM   M  0           250000000     5000
BP8      NUM   M  0           250000000     5000
BP9      NUM   M  0           250000000     0
BP10     NUM   M  0           250000000     0
BP11     NUM   M  0           250000000     0
BP12     NUM   M  0           250000000     0
BP13     NUM   M  0           250000000     0
BP14     NUM   M  0           250000000     0
BP15     NUM   M  0           250000000     0
BP16     NUM   M  0           250000000     0
BP17     NUM   M  0           250000000     0
BP18     NUM   M  0           250000000     0
BP19     NUM   M  0           250000000     0
BP20     NUM   M  0           250000000     0
BP21     NUM   M  0           250000000     0
BP22     NUM   M  0           250000000     0
BP23     NUM   M  0           250000000     0
BP24     NUM   M  0           250000000     0
BP25     NUM   M  0           250000000     0
BP26     NUM   M  0           250000000     0
BP27     NUM   M  0           250000000     0
BP28     NUM   M  0           250000000     0
BP29     NUM   M  0           250000000     0
BP30     NUM   M  0           250000000     0
BP31     NUM   M  0           250000000     0
BP32     NUM   M  0           250000000     0
BP33     NUM   M  0           250000000     0
BP34     NUM   M  0           250000000     0
BP35     NUM   M  0           250000000     0
BP36     NUM   M  0           250000000     0
BP37     NUM   M  0           250000000     0
BP38     NUM   M  0           250000000     0
BP39     NUM   M  0           250000000     0
BP40     NUM   M  0           250000000     0
BP41     NUM   M  0           250000000     0
BP42     NUM   M  0           250000000     0
BP43     NUM   M  0           250000000     0
BP44     NUM   M  0           250000000     0
BP45     NUM   M  0           250000000     0
BP46     NUM   M  0           250000000     0
BP47     NUM   M  0           250000000     0
BP48     NUM   M  0           250000000     0
BP49     NUM   M  0           250000000     0
BP8K1    NUM   M  0           125000000     0
BP8K2    NUM   M  0           125000000     0
BP8K3    NUM   M  0           125000000     0
BP8K4    NUM   M  0           125000000     0
BP8K5    NUM   M  0           125000000     0
BP8K6    NUM   M  0           125000000     0
BP8K7    NUM   M  0           125000000     0
BP8K8    NUM   M  0           125000000     0
BP8K9    NUM   M  0           125000000     0
BP16K1   NUM   M  0           62500000      0
BP16K2   NUM   M  0           62500000      0
BP16K3   NUM   M  0           62500000      0
BP16K4   NUM   M  0           62500000      0
BP16K5   NUM   M  0           62500000      0
BP16K6   NUM   M  0           62500000      0
BP16K7   NUM   M  0           62500000      0
BP16K8   NUM   M  0           62500000      0
BP16K9   NUM   M  0           62500000      0
BP32K1   NUM   M  0           31250000      0
BP32K2   NUM   M  0           31250000      0
BP32K3   NUM   M  0           31250000      0
BP32K4   NUM   M  0           31250000      0
BP32K5   NUM   M  0           31250000      0
BP32K6   NUM   M  0           31250000      0
BP32K7   NUM   M  0           31250000      0
BP32K8   NUM   M  0           31250000      0
BP32K9   NUM   M  0           31250000      0
BSDSNAM1 CHARR M  $           NONE          DB2T.BSDS01
BSDSNAM2 CHARR M  $           NONE          DB2T.BSDS02
BUFMAX00 NUM   M  2000        250000000     10000
BUFMAX01 NUM   M  0           250000000     10000
BUFMAX02 NUM   M  0           250000000     5000
BUFMAX8  NUM   M  1000        125000000     1000
BUFMAX16 NUM   M  500         62500000      500
BUFMAX32 NUM   M  250         31250000      1500
CACHEDYN CHAR  M  NO          YES           YES
CACHEPAC NUM   M  0           5242880       102400
CACHERAC NUM   M  0           5242880       102400
CCOMP    DSET  M  SYS1.SCBCCMP
CDSSRDEF CHAR  M  1           ANY           1
CHDRS    DSET  M  SYS1.CEE.SCEEH.H
CICSCOB  DSET  G  CICS.TEST.TS22.SDFHCOB
CICSEXCI DSET  G  CICS.TEST.TS22.SDFHEXCI
CICSMAC  DSET  G  CICS.TEST.TS22.SDFHMAC
CICSMOD  DSET  G  CICS.TEST.TS22.SDFHLOAD
CICSPLI  DSET  G  CICS.TEST.TS22.SDFHPL1
CMSGS    DSET  M  NULL
CMTSTAT  CHAR  M  ACTIVE      INACTIVE      INACTIVE
COMCRIT  CHAR  M  NO          YES           NO
CONDBAT  NUM   M  0           150000        256
CONTSTOR CHAR  M  NO          YES           NO
COORDNTR CHAR  M  NO          YES           NO
CPPAUTCL DSET  M  SYS1.CEE.SCEECPP
CPPCLASS DSET  M  SYS1.CBC.SCLBCPP
CPPHDRS  DSET  M  SYS1.CBC.SCLBH.H
CPPPROC  DSET  M  SYS1.CEE.SCEEPROC
CPROG    CHARR M  NONE        NONE          CBCDRVR
DATASHR  CHAR  M  NONE        NONE          NO
DBACRVW  CHAR  G  NO          YES           NO
DBPROTCL CHAR  G  DRDA        PRIVATE       DRDA
DBSTADFR CHAR  M  DEFER       RESTART       RESTART
DBSTARTA CHARR M  $           NONE          ALL
DBSTARTB CHAR  M  NONE        NONE          NULL
DBSTARTC CHAR  M  NONE        NONE          NULL
DBSTARTD CHAR  M  NONE        NONE          NULL
DBSTARTE CHAR  M  NONE        NONE          NULL
DBSTARTF CHAR  M  NONE        NONE          NULL
DBSTARTG CHAR  M  NONE        NONE          NULL
DBSTARTH CHAR  M  NONE        NONE          NULL
DBSTARTI CHAR  M  NONE        NONE          NULL
DBSTARTJ CHAR  M  NONE        NONE          NULL
DBSTARTK CHAR  M  NONE        NONE          NULL
DBSTARTL CHAR  M  NONE        NONE          NULL
DBSTARTM CHAR  M  NONE        NONE          NULL
DBSTARTN CHAR  M  NONE        NONE          NULL
DBSTARTO CHAR  M  NONE        NONE          NULL
DBSTARTP CHAR  M  NONE        NONE          NULL
DBSTARTQ CHAR  M  NONE        NONE          NULL
DBSTARTR CHAR  M  NONE        NONE          NULL
DBSTARTS CHAR  M  NONE        NONE          NULL
DBSTARTT CHAR  M  NONE        NONE          NULL
DBSTARTU CHAR  M  NONE        NONE          NULL
DBSTARTV CHAR  M  NONE        NONE          NULL
DBSTARTW CHAR  M  NONE        NONE          NULL
DBSTARTX CHAR  M  NONE        NONE          NULL
DBSTARTY CHAR  M  NONE        NONE          NULL
DBSTARTZ CHAR  M  NONE        NONE          NULL
DBSTART0 CHAR  M  NONE        NONE          NULL
DBSTART1 CHAR  M  NONE        NONE          NULL
DBSTART2 CHAR  M  NONE        NONE          NULL
DBSTART3 CHAR  M  NONE        NONE          NULL
DBSTART4 CHAR  M  NONE        NONE          NULL
DBSTART5 CHAR  M  NONE        NONE          NULL
DBSTART6 CHAR  M  NONE        NONE          NULL
DBSTART7 CHAR  M  NONE        NONE          NULL
DBSTART8 CHAR  M  NONE        NONE          NULL
DBSTART9 CHAR  M  NONE        NONE          NULL
DB2REL   CHAR  M  NONE        NONE          810
DDLOC    CHARR G  NONE        NONE          IDPODB2TDDF
DDLUNAM  CHARR M  NONE        NONE          DB2TDDF
DDPASS   CHARR M  NONE        NONE          NULL
DDSAMPL  CHARR M  NONE        NONE          IDPODB2DDDF
DDSTART  CHARR M  NONE        NONE          AUTO
DECARTH  CHAR  G  NONE        NONE          DEC15
DECDIV3  CHAR  G  NO          YES           YES
DECPDSSD CHAR  G  APOST       QUOTE         APOST
DECPOINT CHAR  G  PERIOD      COMMA         PERIOD
DEFCCSID NUM   G  1           65533         37
DEFDATE  CHAR  G  NONE        NONE          ISO
DEFDATEL NUM   G  0           254           0
DEFLANG  CHAR  G  NONE        NONE          IBMCOB
DEFMIXED CHAR  G  NO          YES           NO
DEFSQLVL CHAR  G  NONE        NONE          NO
DEFSQSTR CHAR  G  NONE        NONE          DEFAULT
DEFSTRNG CHAR  G  NONE        NONE          DEFAULT
DEFTIME  CHAR  G  NONE        NONE          ISO
DEFTIMEL NUM   G  0           254           0
DESCSTAT CHAR  G  NO          YES           YES
DLDFREQ  NUM   M  0           32767         5
DLITOUT  NUM   M  1           254           6
DPROP    NUM   M  1           3             1
DRDAPRT  CHAR  G  NONE        NONE          448
DBRMLIB  DSET  M  DB2.TESTNW.DBRMLIB.DATA
DSNALOAD DSET  M  DB2.ZONE81D.ADSNLOAD
DSNCHDRS DSET  M  DB2.TESTNW.SDSNC.H
DSNDBRM  DSET  M  DB2.TESTNW.SDSNDBRM
DSNEXIT  DSET  M  DB2.TESTNW.SDSNEXIT
DSNIRLM  DSET  M  DB2.TESTNW.SDXRRESL
DSNIVPD  DSET  M  DB2.TESTNW.SDSNIVPD
DSNLINK  DSET  M  DB2.TESTNW.SDSNLINK
DSNLOAD  DSET  M  DB2.TESTNW.SDSNLOAD
DSNMACS  DSET  M  DB2.TESTNW.SDSNMACS
DSNZPARM CHARR M  $           NONE          DSNZPARM
DSSTIME  NUM   M  1           1440          5
DSVCI    CHAR  G  NO          YES           YES
DYNRULS  CHAR  G  NO          YES           YES
EDMBFIT  CHAR  M  NO          YES           NO
ENSCHEME CHAR  G  NONE        NONE          EBCDIC
EVALUNC  CHAR  M  NO          YES           NO
EXTRAREQ NUM   M  0           100           100
EXTRASRV NUM   M  0           100           100
EXTSEC   CHAR  G  NO          YES           YES
FORTCOMP DSET  M  NULL
FORTLINK DSET  M  SYS1.CEE.SAFHFORT
FREQTYPE CHAR  M  LOGRECS     MINUTES       MINUTES
GDDMMACS DSET  M  SYS1.GDDM.SADMSAM
GDDMLOAD DSET  M  SYS1.GDDM.SADMMOD
GENLUNM  CHARR M  NONE        NONE          NULL
GRPATTNM CHAR  G  NONE        NONE          NULL
GRPNAME  CHARR G  NONE        NONE          DSNCAT
HOPAUTH  CHAR  G  BOTH        RUNNER        BOTH
ICDSDEV  CHARR G  $           99999999      3390
ICDSNPRE DSET  G  DB2.TESTNW.IMAGCOPY
ICOBCOMP DSET  M  SYS1.IGY.SIGYCOMP
IDTHTOIN NUM   M  0           9999          0
IDXBPOOL CHAR  M  NONE        NONE          BP2
IMMEDWRI CHAR  M  NO          YES           NO
IRLMAUTO CHAR  M  NO          YES           YES
IRLMDEDC NUM   M  NONE        NONE          4
IRLMDEDT NUM   M  1           5000          5
IRLMDISC CHAR  M  NO          YES           YES
IRLMGRPN CHARR G  NONE        NONE          DXRGROUP
IRLMIDEN NUM   M  1           255           1
IRLMINST CHAR  M  NO          YES           YES
IRLMLKSZ NUM   M  2           8             2
IRLMLKTS NUM   M  0           104857600     1000
IRLMLKUS NUM   M  0           104857600     10000
IRLMLTE  NUM   M  0           1024          0
IRLMMLMT NUM   M  2           100           2
IRLMPGPR CHAR  M  NO          YES           YES
IRLMPROC CHARR M  $           Z9999999      DB2TIRLM
IRLMSSID CHARR M  $           Z999          DBTL
IRLMSTTO NUM   M  1           3600          300
IRLMTRAC CHAR  M  NONE        NONE          NO
IRLMWAIT NUM   M  1           3600          60
ISPLOAD  DSET  M  SYS1.ISP.SISPLOAD
IXQTY    NUM   G  0           4194304       4
JOB1     STR   M  //JOBNAME  JOB ()'DB2 VERSION 8'
JOB2     STR   M  NULL
JOB3     STR   M  NULL
JOB4     STR   M  NULL
JOB5     STR   M  NULL
JOB6     STR   M  NULL
LBACKOUT CHAR  M  NONE        NONE          AUTO
LELKED   DSET  M  SYS1.CEE.SCEELKED
LEMAX    NUM   M  0           50            20
LERUN    DSET  M  SYS1.CEE.SCEERUN
LOBVALA  NUM   M  1           2097152       2048
LOBVALS  NUM   M  1           51200         2048
LCCTYPE  STR   G  NULL
LEPLMSGL DSET  M  SYS1.CEE.SCEEMSGP
LOGAPSTG NUM   M  NONE        NONE          0
LOGOUTPT NUM   M  40960       409600000     614400
LOGSNUM  NUM   M  2           31            3
LOGSPRE1 CHARR M  $           NONE          DB2T.LOGCOPY1
LOGSPRE2 CHARR M  $           NONE          DB2T.LOGCOPY2
LOGSTWO  NUM   M  1           2             2
LRDRTHLD NUM   M  0           1439          0
MACLIB   DSET  M  SYS1.MACLIB
MAINTYPE CHAR  M  NONE        NONE          SYSTEM
MAXKEEPD NUM   M  0           65535         5000
MAXTYPE1 NUM   M  0           NONE          0
MEMBNAME CHARR M  NONE        NONE          DB2T
MGEXTSZ  CHAR  M  NO          YES           NO
MINSTOR  CHAR  M  NO          YES           NO
MON      CHAR  M  NONE        NONE          NO
MONSIZE  NUM   M  262144      16777216      262144
MVSAMEMB CHARR M  $$          99            00
MVSASEQN NUM   M  1           99999995      88888888
MVSCMSC  CHAR  M  NONE        NONE          SYSTEM
MVSLMEMB CHARR M  $$          99            00
MVSLSEQN NUM   M  1           99999999      88888888
MVSSMEMB CHARR M  $$          99            00
MVSSNAME CHARR M  $           Z999          DB2T
MVSSPREF CHARR M  NONE        NONE          -DB2T
MVSSSEQN NUM   M  1           99999995      88888888
MXNUMCUR NUM   M  0           99999         500
MXSTPROC NUM   M  0           99999         2000
NEWCL    DSET  M  DB2.TESTNW.NEW.V8MIG.SDSNTEMP
NEWFUN   CHAR  M  NO          YES           NO
NEWSAMP  DSET  M  DB2.TESTNW.NEW.V8MIG.SDSNSAMP
NUMCOLUM NUM   M  1           750           10
NUMCOMHR NUM   M  1           16777216      3600
NUMCONBT NUM   M  1           2000          64
NUMCONCR NUM   M  1           2000          256
NUMCONDB NUM   M  1           800           64
NUMCONRM NUM   M  0           1999          18
NUMCONTS NUM   M  1           2000          32
NUMDATAB NUM   M  1           64000         200
NUMHRARC NUM   M  1           200           24
NUMPKGS  NUM   M  1           256000        1000
NUMPKSTS NUM   M  1           32000         10
NUMPLANS NUM   M  1           32000         200
NUMPLPL  NUM   M  1           32000         2
NUMSTMTE NUM   M  1           32000         15
NUMSTMTL NUM   M  1           16            2
NUMSTMTS NUM   M  1           32000         30
NUMTABLE NUM   M  1           400           10
NUMTABSP NUM   M  1           400           10
NUMTEMP1 NUM   M  1           2000000       2000000
NUMTEMP2 NUM   M  0           2000000       2000000
NUMVIEWS NUM   M  1           200           3
NUM32KDS NUM   M  0           99            1
NUM4KDS  NUM   M  1           99            1
OPCHKFRQ NUM   M  1           16000000      10
OPROUTCD CHARR M  1           NONE          1
OPSMFACT CHAR  M  NONE        NONE          1,4,7,8
OPSMFSTA CHAR  M  NONE        NONE          YES
OPSTATIM NUM   M  1           1440          30
OPTHINTS CHAR  M  NO          YES           YES
OPTRCAUT CHAR  M  NONE        NONE          NO
OPTRCSIZ NUM   M  4096        405504        16384
OUTCL    DSET  M  DB2T.V8.MIG.SDSNCLST
OVDSMAX  CHAR  M  NONE        NONE          4096
OVEDMDBC CHAR  M  NONE        NONE          NULL
OVEDMPL  CHAR  M  NONE        NONE          80000
OVEDMSTC CHAR  M  NONE        NONE          NULL
OVRIDPL  CHAR  M  NONE        NONE          40960
OVSRTPL  CHAR  M  NONE        NONE          24576
PADIX    CHAR  G  NO          YES           YES
PADNTSTR CHAR  M  NO          YES           NO
PARAMDEG NUM   M  0           254           0
PARTKEYU CHAR  M  NONE        NONE          YES
PCLOSEN  NUM   M  1           32767         5
PCLOSET  NUM   M  1           32767         10
PLICOMOD CHARR M  NONE        NONE          IBMZPLI
PLICOMP  DSET  M  NULL                      SYS1.IEL.SIELCOMP
POOLINAC NUM   M  0           9999          120
PROCLIB  DSET  M  SYS1.PROCLIB
PROTADMN CHARR G  $           Z9999999      INSYSAD
PROTADM2 CHARR G  NONE        Z9999999      ZTSPC0
PROTARAC CHAR  M  NO          YES           NO
PROTAUTH CHAR  M  NO          YES           YES
PROTOPR1 CHARR G  NONE        Z9999999      SYSOPR
PROTOPR2 CHARR G  NONE        Z9999999      ZTSPC3
PROTRLF  CHARR M  $           NONE          ZTSPC4
PROTUNKN CHAR  M  NONE        NONE          ZTSPC4
RECALL   CHAR  M  NO          YES           YES
RECALLD  NUM   M  0           32767         420
REFSHAGE CHAR  M  0           ANY           0
SUPERRS  CHAR  M  NO          YES           YES
RELCURHL CHAR  M  NO          YES           NO
RESLIB   DSET  M  NULL
RESYNC   NUM   M  $           NONE          2
RESYNPRT CHAR  M  NONE        NONE          3522
RETLWAIT NUM   M  0           254           0
RETVLCFK CHAR  G  NO          YES           NO
RGFDBNAM CHAR  G  NONE        NONE          DSNRGFDB
RGFCOLID CHAR  G  NONE        NONE          DSNRGCOL
RGFDEDPL CHAR  G  NO          YES           NO
RGFDEFLT CHAR  G  NONE        NONE          ACCEPT
RGFESCP  CHAR  M  NONE        NONE          NULL
RGFFULLQ CHAR  G  NO          YES           YES
RGFINSTL CHAR  G  NO          YES           NO
RGFNMORT CHAR  G  NONE        NONE          DSN_REGISTER_OBJT
RGFNMPRT CHAR  G  NONE        NONE          DSN_REGISTER_APPL
RLFERRD  CHAR  M  NONE        NONE          NOLIMIT
RLFERROR CHAR  M  NONE        NONE          NOLIMIT
RLFSTART CHAR  M  NO          YES           YES
RLFSUFF  CHARR M  AA          99            01
RRULOCK  CHAR  M  NO          YES           NO
RUNLIB   DSET  M  DB2.TESTNW.RUNLIB.LOAD
SECLCACH NUM   M  0           32767         255
SEQCACH  CHAR  M  BYPASS      SEQ           SEQ
SEQPRES  CHAR  M  NO          YES           NO
SHDDBASE CHARR G  $           99999999      3390
SHDDBAUT CHARR G  $           99999999      3390
SHDDDF   CHARR G  $           99999999      3390
SHDGPAUT CHARR G  $           99999999      3390
SHDGROUP CHARR G  $           99999999      3390
SHDGRTNS CHARR G  $           99999999      3390
SHDHIST  CHARR G  $           99999999      3390
SHDINDEX CHARR G  $           99999999      3390
SHDJAVA  CHARR G  $           99999999      3390
SHDOBJ   CHARR G  $           99999999      3390
SHDPKAGE CHARR G  $           99999999      3390
SHDPLAN  CHARR G  $           99999999      3390
SHDSEQ   CHARR G  $           99999999      3390
SHDSEQ2  CHARR G  $           99999999      3390
SHDSPTR  CHARR G  $           99999999      3390
SHDSTATS CHARR G  $           99999999      3390
SHDSTR   CHARR G  $           99999999      3390
SHDUSER  CHARR G  $           99999999      3390
SHDVIEWS CHARR G  $           99999999      3390
SHPDBASE NUM   G  1           999999        114
SHPDBAUT NUM   G  1           999999        114
SHPDDF   NUM   G  1           999999        114
SHPGPAUT NUM   G  1           999999        114
SHPGROUP NUM   G  1           999999        114
SHPGRTNS NUM   G  1           999999        114
SHPHIST  NUM   G  1           999999        114
SHPJAVA  NUM   G  1           999999        114
SHPOBJ   NUM   G  1           999999        114
SHPPKAGE NUM   G  1           999999        114
SHPPLAN  NUM   G  1           999999        114
SHPSEQ   NUM   G  1           999999        114
SHPSEQ2  NUM   G  1           999999        114
SHPSPTR  NUM   G  1           999999        114
SHPSTATS NUM   G  1           999999        10
SHPSTR   NUM   G  1           999999        10
SHPUSER  NUM   G  1           999999        10
SHPVIEWS NUM   G  1           999999        10
SHSDBASE NUM   G  1           999999        30
SHSDBAUT NUM   G  1           999999        30
SHSDDF   NUM   G  1           999999        30
SHSGPAUT NUM   G  1           999999        30
SHSGROUP NUM   G  1           999999        30
SHSGRTNS NUM   G  1           999999        30
SHSHIST  NUM   G  1           999999        30
SHSJAVA  NUM   G  1           999999        30
SHSOBJ   NUM   G  1           999999        30
SHSPKAGE NUM   G  1           999999        30
SHSPLAN  NUM   G  1           999999        30
SHSSEQ   NUM   G  1           999999        30
SHSSEQ2  NUM   G  1           999999        30
SHSSPTR  NUM   G  1           999999        30
SHSSTATS NUM   G  1           999999        10
SHSSTR   NUM   G  1           999999        10
SHSUSER  NUM   G  1           999999        10
SHSVIEWS NUM   G  1           999999        10
SHVDBASE CHARR G  $           999999        TEST08
SHVDBAUT CHARR G  $           999999        TEST08
SHVDDF   CHARR G  $           999999        TEST08
SHVGPAUT CHARR G  $           999999        TEST08
SHVGROUP CHARR G  $           999999        TEST08
SHVGRTNS CHARR G  $           999999        TEST08
SHVHIST  CHARR G  $           999999        TEST08
SHVINDEX CHARR G  $           999999        TEST08
SHVJAVA  CHARR G  $           999999        TEST08
SHVOBJ   CHARR G  $           999999        TEST08
SHVPKAGE CHARR G  $           999999        TEST08
SHVPLAN  CHARR G  $           999999        TEST08
SHVSEQ   CHARR G  $           999999        TEST08
SHVSEQ2  CHARR G  $           999999        TEST08
SHVSPTR  CHARR G  $           999999        TEST08
SHVSTATS CHARR G  $           999999        TEST08
SHVSTR   CHARR G  $           999999        TEST08
SHVUSER  CHARR G  $           999999        TEST08
SHVVIEWS CHARR G  $           999999        TEST08
SITETYP  CHAR  G  LOCALSITE   RECOVERYSITE  LOCALSITE
SJMXPOOL NUM   M  0           1024          20
SKIPUNCI CHAR  G  NO          YES           NO
SORTLIB  DSET  M  SYS1.SORTLIB
SRCLIB   DSET  M  DB2.TESTNW.SRCLIB.DATA
STARJOIN CHAR  M  NONE        NONE          DISABLE
STATHIST CHAR  G  NONE        NONE          NONE
STATROLL CHAR  G  NO          YES           NO
STATSINT NUM   G  1           1440          30
STORMXAB NUM   M  0           255           10
STORPROC CHARR M  NONE        NONE          DB2TSPAS
STORTCBS NUM   M  1           1000          8
STORTIME CHAR  M  NONE        NONE          60
STORWLM  CHARR M  NONE        NONE          DB2TWLM
SVOLARC  CHAR  M  NO          YES           NO
SYNCVAL  CHAR  M  NONE        NONE          0
TBSBPOOL CHAR  M  NONE        NONE          BP1
TCPALVER CHAR  G  NO          YES           NO
TCPKPALV CHAR  M  NONE        NONE          ENABLE
TRKRSITE CHAR  G  NO          YES           NO
TSQTY    NUM   G  0           4194304       4
UIFCIDS  CHAR  G  NO          YES           NO
URCHKTH  NUM   M  0           255           0
URLGWTH  NUM   M  NONE        NONE          0
UNICCSID NUM   G  NONE        NONE          1208
UTIMOUT  NUM   M  $           NONE          6
VCATALOG CHARR G  $           Z9999999      DB2T
VCATSTAT CHAR  G  NO          YES           NO
VOLSDAT1 CHARR M  $           999999        NSMS01
VOLSDAT2 CHARR M  NONE        999999        TEST10
VOLSDAT3 CHARR M  NONE        999999        TEST08
VOLSDAT4 CHARR M  NONE        999999        TEST07
VOLSDAT5 CHARR M  NONE        999999        TEST06
VOLSDAT6 CHARR M  NONE        999999        TEST05
VOLSDAT7 CHARR M  NONE        999999        TEST04
VOLSDEVT CHARR M  $           99999999      3390
VOLTDEVT CHARR M  $           99999999      SYSDA
WKDBNAME CHARR M  NONE        NONE          DB2T
WLMENV   CHAR  M  NONE        NONE          DB2TENV1
XLKUPDLT CHAR  M  NONE        NONE          NO
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
