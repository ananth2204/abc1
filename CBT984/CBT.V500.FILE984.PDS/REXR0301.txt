/* We first need rexx in comment if compiled or read from SYSPROC. */
pgm_REXR0301:
  rexxpgm_version = "01.00"          /* Set with 'ver 1' and 'lev 2'. */

  SAY ""
  SAY "REXR0301: ADDRESS"
  SAY "================="

  showed_commands. = 0
  current_address = ADDRESS()                    /* Built-in function */
  function_rc = What_can_I_do()

  ADDRESS CONSOLE                                  /* Issue commands */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS                                       /* Toggle back to TSO */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS ISPEXEC                             /* ISPF Dialog Services */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS ISREDIT                               /* ISPF Edit Services */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS CPICOMM                    /* SAA CPI  Communications calls */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS LU62                       /* SAA CPI  Communications calls */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS APPCMVS                    /* SAA CPI  Communications calls */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS MVS                                     /* Stack and Buffer */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS TSO                          /* TSO/E commands and services */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  ADDRESS                                      /* Toggles back to MVS */
  current_address = ADDRESS()
  function_rc = What_can_I_do()

  RETURN 0

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Internal routine to show what the current ADDRESS environment can do.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
What_can_I_do:
  SAY ""
  SAY "The current ADDRESS environment is:" current_address"."
  SAY "----------------------------------- --------"
  SELECT
    WHEN ( current_address = "TSO" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  Built-in functions"
      END
    END
    WHEN ( current_address = "CONSOLE" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  ACTIVATE DEACTIVATE"
        SAY "  An MVS command (e.g. D A,L)"
        SAY "  CART     GETMSG   SYSCMD (e.g. $S PRT2)"
      END
    END
    WHEN ( current_address = "ISPEXEC" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  Any of the ISPF Dialog services."
        SAY "    PANEL, Skeleton (file tailoring), and TABLE"
        SAY "    processing are jsut a hint at what you can use."
      END
    END
    WHEN ( current_address = "ISREDIT" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  A wide variety of primary and line commands just as"
        SAY "  If you were in an EDIT session."
      END
    END
    WHEN ( current_address = "CPICOMM" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  The CPICOMM environment supports the starter set and"
        SAY "  advanced function set of the SAA CPI Communications calls."
        SAY "    CMACCP    (Accept_Conversation)"
        SAY "    CMALLC    (Allocate)"
        SAY "    CMCFM     (Confirm)"
        SAY "    CMCFMD    (Confirmed)"
        SAY "    CMDEAL    (Deallocate)"
        SAY "    CMECS     (Extract_Conversation_State)"
        SAY "    CMECT     (Extract_Conversation_Type)"
        SAY "    CMEMN     (Extract_Mode_Name)"
        SAY "    CMEPLN    (Extract_Partner_LU_Name)"
        SAY "    CMESL     (Extract_Sync_Level)"
        SAY "    CMFLUS    (Flush)"
        SAY "    CMINIT    (Initialize_Conversation)"
        SAY "    CMPTR     (Prepare_To_Receive)"
        SAY "    CMRCV     (Receive)"
        SAY "    CMRTS     (Request_To_Send)"
        SAY "    CMSCT     (Set_Conversation_Type)"
        SAY "    CMSDT     (Set_Deallocate_Type)"
        SAY "    CMSED     (Set_Error_Direction)"
        SAY "    CMSEND    (Send_Data)"
        SAY "    CMSERR    (Send_Error)"
        SAY "    CMSF      (Set_Fill)"
        SAY "    CMSLD     (Set_Log_Data)"
        SAY "    CMSMN     (Set_Mode_Name)"
        SAY "    CMSPLN    (Set_Partner_LU_Name)"
        SAY "    CMSPTR    (Set_Prepare_To_Receive_Type)"
        SAY "    CMSRC     (Set_Return_Control)"
        SAY "    CMSRT     (Set_Receive_Type)"
        SAY "    CMSSL     (Set_Sync_Level)"
        SAY "    CMSST     (Set_Send_Type)"
        SAY "    CMSTPN    (Set_TP_Name)"
        SAY "    CMTRTS    (Test_Request_To_Send_Received)"
      END
    END
    WHEN ( current_address = "LU62" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  The LU62 environment supports the APPC/MVS calls."
        SAY "    ATBALLC   (Allocate)"
        SAY "    ATBCFM    (Confirm)"
        SAY "    ATBCFMD   (Confirmed)"
        SAY "    ATBDEAL   (Deallocate)"
        SAY "    ATBFLUS   (Flush)"
        SAY "    ATBGETA   (Get_Attributes)"
        SAY "    ATBGETC   (Get_Conversation)"
        SAY "    ATBGETP   (Get_TP_Properties)"
        SAY "    ATBGETT   (Get_Type)"
        SAY "    ATBPTR    (Prepare_to_Receive)"
        SAY "    ATBRCVI   (Receive_Immediate)"
        SAY "    ATBRCVW   (Receive_and_Wait)"
        SAY "    ATBRTS    (Request_to_Send)"
        SAY "    ATBSEND   (Send_Data)"
        SAY "    ATBSERR   (Send_Error)"
      END
    END
    WHEN ( current_address = "APPCMVS" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  The APPCMVS host command environment supports the"
        SAY "  following advanced callable services:"
        SAY "    ATBRFA2   (Register_for_Allocates)"
        SAY "    ATBRAL2   (Receive_Allocate)"
        SAY "    ATBRJC2   (Reject_Conversation)"
        SAY "    ATBSTE2   (Set_Event_Notification)"
        SAY "    ATBGTE2   (Get_Event)"
        SAY "    ATBQAQ2   (Query_Allocate_Queue)"
        SAY "    ATBSAQ2   (Set_Allocate_Queue_Attributes)"
        SAY "    ATBSCA2   (Set_Conversation_Accounting_Information)"
        SAY "    ATBURA2   (Unregister_for_Allocates)"
        SAY "    ATBPOR2   (Post_on_Receipt)"
        SAY ""
        SAY "  And these listed in manual with some of the above:"
        SAY "    ATBTER1   (Register_Test)"
        SAY "    ATBTEA1   (Accept_Test)"
        SAY "    ATBTEU1   (Unregister_Test)"
        SAY "    ATBCUC1   (Cleanup_TP (Unauthorized))"
        SAY "    ATBVERS   (APPC_Version_Service)"
      END
    END
    WHEN ( current_address = "MVS" ) THEN DO
      IF ( showed_commands.current_address = 0 ) THEN DO
        showed_commands.current_address = 1
        SAY "You can use:"
        SAY "  DELSTACK DROPBUF  EXECIO   EXECUTIL"
        SAY "  HE       HI       HT       RT       TE       TS"
        SAY "  MAKEBUF  NEWSTACK QBUF     QELEM    QSTACK   SUBCOM"
      END
    END
    OTHERWISE DO
      SAY "Did IBM really add a new ADDRESS environment?"
    END
  END
  RETURN 0

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  REXX(REXR0301)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Manual:   ikj4a3a0.pdf
           SA22-7790-10 z/OS TSO/E REXX Reference
           Version 1 Release 13
           Chapter 3. Keyword instructions
           Instructions
           ADDRESS
 Overview: Use expanded environments beyond TSO.
           Executing this will show them.

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm WHEN     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.01 20171004 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original base code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so If you use it, you DO so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

