rexx_LMSEQ:    /* We still need rexx in comment if read from SYSPROC */
/*

   Author: Kenneth E TOMIAK
   DOC: THIS Code USES ISPF LIBRARY SERVICES TO GATHER ALL
        MEMBERS AND CREATES A SEQUENTIAL DATA WITH IEBUPDTE
        CONTROL CARDS AHEAD OF EACH ONE.
   Warning: USE AT YOUR OWN RISK
                                                                     */
  parse arg dataset nothing
  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  MYCTR = 0
  PDSDSN = STRIP(DATASET,"B","'")
  ADDRESS ISPEXEC "LMINIT DATAID(DATAID)",
    "DATASET('"PDSDSN"') ENQ(SHR)"
  MYCC = RC
  IF (MYCC >< 0) THEN ,
    DO
      ZERRSM = "FILE IN USE"
      ZERRLM = "THE FILE" PDSDSN "IS IN USE"
      ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
      SIGNAL ABNEXIT
    END
      X = LISTDSI("'"PDSDSN"'")
  SAY PDSDSN
  ADDRESS ISPEXEC "LMOPEN DATAID("DATAID")",
    "OPTION(INPUT)"
  MYCC = RC
  IF (MYCC > 0) THEN ,
    DO
      ZERRSM = "FILE FAILED TO OPEN"
      ZERRLM = "THE FILE" PDSDSN "FAILED TO OPEN RC="MYCC
      ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
      SIGNAL ABNEXIT
    END
  NUM_LVLS = 0
  REAL_DSN = pdsdsn
  DO WHILE REAL_DSN <> ""
    NUM_LVLS = NUM_LVLS + 1
    PARSE VAR REAL_DSN LQ '.' REAL_DSN
    LQ.NUM_LVLS = LQ
  END
  sysuid = sysvar("SYSUID")
  LQ.0 = NUM_LVLS
  OUT_DSN = SYSUID".SEQOUT"
  DO IX = 1 TO NUM_LVLS
    Ll = LQ.IX
    IF Ll = SYSUID THEN ITERATE
    OUT_DSN = OUT_DSN"."Ll
  END
  say out_dsn
  DSN_OK = SYSDSN("'"OUT_DSN"'")
  IF DSN_OK = "OK" THEN,
    DO
      ADDRESS TSO "ALLOC FILE(SEQOUT) DA('"OUT_DSN"') MOD",
        "TRACKS SPACE(250 150) REUSE"
      MYRC=RC
    END
  ELSE,
    DO
      ADDRESS TSO "ALLOC FILE(SEQOUT) DA('"OUT_DSN"')",
        "NEW CATALOG RECFM(V B) REUSE",
        "BLKSIZE(32760) LRECL(32756)",
        "TRACKS SPACE(250 150)",
        "UNIT(SYSALLDA)"
   /*   "UNIT(SYSALLDA) VOLUME("SYSVOLUME")"  */
      MYRC=RC
    END
  IF MYRC > 0 THEN,
    DO
          SAY "COULD NOT CREATE" out_dsN "RC="MYRC
          SIGNAL FREE_FILES
    END
  PDSMBR = ""

PDSREAD:
  ADDRESS ISPEXEC "LMMLIST DATAID("DATAID")",
    "OPTION(LIST) MEMBER(PDSMBR) STATS(YES)"
  MYCC = RC
  IF (MYCC > 0) THEN ,
    DO
      SIGNAL NORMEXIT
    END
  MEMBR       = PDSMBR
  isp_cmd = "LMMFind"
  Address IspExec,
    "LMMFIND DATAID("dataid") MEMBER("pdsmbr")",
    "LRECL(reclen) RECFM(recfmvr)",
    "STATS(NO)"
  IspExec_rc = rc
  Call check_IspExec
/* Return codes                          */
/*  8 - Member not found                 */
/* 10 - No data set or file associated   */
/*      with the given data-id           */
/* 12 - Data set or file not open or     */
/*      not open for input               */
/*    - Data set is not an ISPF library  */
/*      or MVS partitioned data set      */
/*    - CMS file is not a maclib, txtlib,*/
/*      or ISPF library                  */
/*    - Invalid parameter value          */
/*    - LOCK specified                   */
/* 16 - Truncation or translation        */
/*      error in accessing dialog        */
/*      variables                        */
/* 20 - Severe error                     */
  MYCTR = MYCTR + 1
  SSI = ZLCNORC
  seq = right("0000"myctr,4)
  if (zluser >< "") then,
    do
      parse var zlcdate yy "/" mm "/" dd
      udate = mm"/"dd"/"yy
      zlcjdate = yy""Right("000"Date("D",udate,"U"),3)
      parse var zlmdate yy "/" mm "/" dd
      udate = mm"/"dd"/"yy
      zlmjdate = yy""Right("000"Date("D",udate,"U"),3)
      zlmdtime = Left(zlmtime,2)""Right(zlmtime,2)
      zlidnorc = right("00000"space(zlinorc,0),5)
      zlcdnorc = right("00000"space(zlcnorc,0),5)
      zlmdnorc = right("00000"space(zlMnorc,0),5)
      ispf_stats = ZLVERS""ZLMOD"-"ZLCJDATE"-"ZLMJDATE"-"ZLMdTIME
      ispf_stats = ispf_stats"-"ZLIdNORC"-"ZLCdNORC
      ispf_stats = ispf_stats"-"ZLMdNORC"-"ZLUSER
    end
  QUEUE "./ ADD NAME="LEFT(MEMBR,8) ISPF_STATS
  isp_cmd = "LMGet  "
lmget_loop:
  Address IspExec,
    "LMGET DATAID("dataid") MODE(INVAR) DATALOC(locvar)",
    "DATALEN(lenvar) MAXLEN(32760)"
  IspExec_rc = rc
  If (IspExec_rc = 8) Then,
    Do
      Signal lmget_End
    End
  QUEUE LOCVAR
/* Return codes                     */
/*  8 - End-of-file condition       */
/* 10 - No data set or file         */
/*      associated with the dataid  */
/* 12 - Data file not open          */
/*    - Data file not open for      */
/*      input                       */
/*    - LMMFIND was not done for a  */
/*      partitioned data set        */
/*    - Invalid parameter value     */
/* 16 - Truncation or translation   */
/*      error in accessing dialog   */
/*      variables                   */
/* 20 - Severe error                */
  loadmem.0 = lmget_ctr
  Signal lmget_loop

lmget_End:
  "EXECIO" QUEUED() "DISKW SEQOUT"
  SIGNAL PDSREAD

ABNEXIT:
  RC = 4
NORMEXIT:
  QUEUE "./ ENDUP"
  SAY  MYCTR "MEMBERS PROCESSED"
  "EXECIO" QUEUED() "DISKW SEQOUT (FINIS"
free_files:
  "FREE FILE(SEQOUT)"
  ADDRESS ISPEXEC "LMMLIST DATAID("DATAID") OPTION(FREE)"
  ADDRESS ISPEXEC "LMCLOSE DATAID("DATAID")"
  ADDRESS ISPEXEC "LMFREE DATAID("DATAID")"
EXITIT:
  SAY "EXITING LMSEQ."
  EXIT RC

check_IspExec:
  If (IspExec_rc >< 0) Then,
    Do
      ZERRSM = "IspExec" IspExec_rc
      ZERRLM = "IspExec"isp_cmd "request failed, rc="IspExec_rc"."
      If (jobtype = "TSU") Then,
        Do
          isp_cmd = "SetMsg"
          Address IspExec "SETMSG MSG(ISRZ002)"
        End
      Else,
        Do
          Say ZERRLM
        End
      exit ispexec_rc
    End
  Return
