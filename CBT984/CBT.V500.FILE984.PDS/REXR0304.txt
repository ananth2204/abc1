/* We first need rexx in comment if compiled or read from SYSPROC. */
pgm_REXR0304:
  rexxpgm_version = "01.03"          /* Set with 'ver 1' and 'lev 2'. */

  SAY ""
  SAY "REXR0304: DO"
  SAY "============"
  IF ( rexxpgm_version = "01.00" ) THEN DO
    SAY "This is the original version."
  END
  ELSE Do
    SAY "This is a modified version."
  END
  SELECT
    WHEN ( rexxpgm_version = "01.00" ) THEN DO
      SAY "This is the original version."
    END
    WHEN ( rexxpgm_version = "01.01" ) THEN DO
      SAY "This has been modified once."
    END
    WHEN ( rexxpgm_version = "01.02" ) THEN DO
      SAY "This has been modified twice."
    END
    OTHERWISE DO
      changed_times = rexxpgm_version - 01.00
      SAY "This has been modified from 01.00 by" changed_times
    END
  END

  SAY ""
  SAY "Repetitive DO loops"
  SAY "==================="

  /* repetitor defaults to 1, thus instructions are executed once." */
  DO
    SAY ""
    SAY "Grouping instructions"
    SAY "====================="
    SAY "Typically used as part of an IF or SELECT WHEN clause."
    SAY "However, you can group instructions for the joy of it."
    SAY "This series of SAY instructions did just that."
  END

  SAY "Counter:"
  SAY "--------"
  /* Displays: "Hello" three times */
  DO 3
    SAY 'Hello'
  END

  SAY ""
  SAY "Controlled repetitive loops:"
  SAY "----------------------------"
  SAY "UNTIL is checked just before END, all others are checked"
  SAY "before the instruction block. That can give you an iteration"
  SAY "you had not planned on. It will always do the instruction"
  SAY "block one time. Cide UNTIL carefully!"

  SAY ""
  SAY "Counter to max:"
  SAY "---------------"
  double_spaced = ""
  msg_text = "Hello stranger."
  /* Displays: "H e l l o   s t r a n g e r ." ix reaches 16 */
  DO ix = 1 TO Length(msg_text) BY 1
    double_spaced = double_spaced || SubStr(msg_text,ix,1) || " "
  END
  SAY "ix reached" ix
  SAY double_spaced

  SAY ""
  SAY "Counter with FOR = To 2.5):"
  SAY "---------------------------"
  /* Displays: "1" "1.5" "2.0" "2.5" ix reaches 3.0 */
  DO ix = 1 BY .5 FOR 4
    SAY ix
  END
  SAY "ix reached" ix

  SAY ""
  SAY "Conditional phrases - UNTIL:"
  SAY "----------------------------"
  SAY = "       Until meets condition before TO value is reached"
  SAY = "       ------------------------------------------------"
  /* Displays: "1" "3" "5" "7" "9" ix reaches 9 */
  DO ix = 1 tO 100 BY 2 UNTIL ix > 8
    SAY ix
  END
  SAY "ix reached" ix

  SAY ""
  SAY "Conditional phrases - WHILE:"
  SAY "----------------------------"
  SAY = "       WHILE meets condition before TO value is reached"
  SAY = "       ------------------------------------------------"
  /* Displays: "1" "3" "5" "7" "9" ix reaches 11 */
  DO ix = 1 TO 100 BY 2 WHILE ix < 10
    SAY ix
  END
  SAY "ix reached" ix

  SAY ""
  SAY "Conditional phrases (ITERATE and LEAVE):"
  SAY "----------------------------------------"
  SAY "  IF meets condition before UNTIL is reached"
  SAY "  ------------------------------------------"
  SAY "  A poorly written loop. ix should start with 11 and go to 15."
  SAY "  But this is meant to show how ITERATE and LEAVE can be used."
  /* Displays: "11" "13" "15" ix reaches 17 */
  DO ix = 1 TO 100 BY 2 UNTIL ix > 20
    IF (ix < 10) Then ITERATE
    IF (ix > 15) Then LEAVE
    SAY ix
  END
  SAY "ix reached" ix

  SAY ""
  SAY "FOREVER:"
  SAY "----------------------------------------"
  SAY "  You code when to LEAVE"
  SAY "  ----------------------"
  an_answer = ""
  /* Displays: "Hello" plus whater you typed */
  DO Forever
    SAY "Please enter your name:"
    PARSE PULL an_answer
    IF ( an_answer <> "" ) THEN DO
      SAY "Hello" an_answer
      LEAVE
    END
  END

  RETURN 0

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  REXX(REXR0304)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Manual:   ikj4a3a0.pdf
           SA22-7790-10 z/OS TSO/E REXX Reference
           Version 1 Release 13
           Chapter 3. Keyword instructions
           Instructions
           DO
 Overview: Group instructions into a pseudo-routine like block.
           Also allows for a repetitious looping using a counter.
           Also allows for conditional looping.

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm When     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.03 20171006 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original base code.
               2) rexxpgm_version = "01.03" to assist with the
                  SELECT WHEN clauses.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

