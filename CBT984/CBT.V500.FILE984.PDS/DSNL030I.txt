/* rexx */
Rexx_DSNL030I:
  rexxpgm_version = "01.03"           /* ver lev */

  PARSE ARG all_my_arguments
  NUMERIC DIGITS 24

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

 Dataset:  DEMO.REXX(DSNL030I)
 Author:   KTomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Syntax:   DSNL030I |luwid|
 Overview: Convert the LUWID into a real TCPIP ADDRESS and port number.
           %dsnl030i J56F045C.G422.B6D833AB804D
                   ip_address.port.sequence_number

=======================================================================

 History of Modifications
 ------------------------
vv.mm WHEN     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.03 20180429 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Updated Ctlblk_Jobspecs.
----- -------- --------------------------------------------------------
01.02 20180428 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Stylize using template $putktm:
                  Programming Using The Kenneth Tomiak Method.
               2) Stylize using Edit Macro @putktm:
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.01 20090423 KTomiak  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
                        1) Do NSLOOKUP after getting the IP address.
----- -------- --------------------------------------------------------
01.00 20071009 KTomiak  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
                        Original code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  PARSE VERSION,
    rexx_version,
    rexx_level,
    rexx_date
  PARSE SOURCE,
    source_host_env,
    source_call_type,
    source_uc_exec_name,
    source_hostdd,
    source_hostdsn,
    source_nf_exec_name,
    source_initial_cmd_env,
    source_asid_name,
    source_char8_user_token,
    source_hostother
  sysvar_sysuid = SYSVAR("SYSUID")
  sysvar_sysenv = SYSVAR("SYSENV")
  job_specs = Ctlblk_Jobspecs()
  SAY ""
  SAY COPIES("=",79)
  SAY LEFT("=" jobspecs_jobname ,
    jobspecs_ssibjbid jobspecs_stepname ,
    jobspecs_procname,77) "="
  SAY LEFT("=" source_uc_exec_name rexxpgm_version,77) "="
  SAY LEFT("= executing under" source_host_env,77) "="
  SAY LEFT("= as a" source_call_type,77) "="
  SAY LEFT("= on" DATE() "at" TIME()".",77) "="
  SAY COPIES("=",79)
  SAY ""

  IF (source_host_env <> "TSO") THEN DO
    SAY "Wrong host environment" source_host_env
    return_code = 16
    RETURN return_code
  END

  xlat_in = "0123456789ABCDEFGHIJKLMNOP"
  xlat_ot = "0123456789ABCDEF0123456789"
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
/*trace ?ilrs*/
  PARSE VAR all_my_arguments,
    input_ip "." input_port "." input_sequence .
  xlat_ip = TRANSLATE(input_ip,xlat_ot,xlat_in)
  xlat_port = TRANSLATE(input_port,xlat_ot,xlat_in)
  xlat_sequence = C2D(X2C(input_sequence))
  DO ip_x = 1 TO (LENGTH(input_ip)-1) BY 2
    PARSE VAR input_ip =(ip_x) hx_octet.ip_x +2 .
  END
  SAY "IP("input_ip")",
    RIGHT(hx_octet.1,3) ".",
    RIGHT(hx_octet.3,3) ".",
    RIGHT(hx_octet.5,3) ".",
    RIGHT(hx_octet.7,3),
    "  Port("input_port")",
    "  Sequence#("input_sequence")"
  DO ip_x = 1 TO (LENGTH(xlat_ip)-1) BY 2
    PARSE VAR xlat_ip =(ip_x) hx_octet.ip_x +2 .
    ip_octet.ip_x = C2D(X2C(hx_octet.ip_x))
  END
  SAY "IP("xlat_ip")",
    RIGHT(ip_octet.1,3) ".",
    RIGHT(ip_octet.3,3) ".",
    RIGHT(ip_octet.5,3) ".",
    RIGHT(ip_octet.7,3),
    "  Port("xlat_port")",
    "  Sequence#("xlat_sequence")"
  IF ((DATATYPE(ip_octet.1) = "NUM") & ,
      (DATATYPE(ip_octet.3) = "NUM") & ,
      (DATATYPE(ip_octet.5) = "NUM") & ,
      (DATATYPE(ip_octet.7) = "NUM")) THEN DO
    SAY ""
    SAY "Output from NSLOOKUP:"
    "NSLOOKUP" ip_octet.1"."ip_octet.3"."ip_octet.5"."ip_octet.7
    SAY ""
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  RETURN return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 Follow control blocks to identify jobname, type, and JES number.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
CtlBlk_JobSpecs:
  ptr2psa = 0
  cvtptr = STORAGE(D2X(ptr2psa + 16),4)
  cvtsmca = STORAGE(D2X(C2D(cvtptr)+197),3)
  smfid = STORAGE(D2X(C2D(cvtsmca)+16),4)
  psatold = STORAGE(21C,4)
  ptr2tiot = STORAGE(D2X(C2D(psatold)+12),4)
  jobspecs_jobname = STORAGE(D2X(C2D(ptr2tiot)),8)
  jobspecs_stepname = STORAGE(D2X(C2D(ptr2tiot)+8),8)
  jobspecs_procname = STORAGE(D2X(C2D(ptr2tiot)+16),8)
  tcbjscbb = STORAGE(D2X(C2D(psatold)+181),3)
  jscbssib = STORAGE(D2X(C2D(tcbjscbb)+316),4)
  jobspecs_ssibjbid = STORAGE(D2X(C2D(jscbssib)+12),8)
  RETURN jobspecs_jobname jobspecs_ssibjbid ,
    jobspecs_stepname jobspecs_procname

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
