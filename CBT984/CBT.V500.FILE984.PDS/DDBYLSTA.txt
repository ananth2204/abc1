/* rexx */
Rexx_DDBYLSTA:
  rexxpgm_version = "01.01"           /* ver lev */

  PARSE UPPER ARG match_dd .
  IF (match_dd = "") THEN DO
    match_dd = "*"
  END

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  DEMO.REXX(DDBYLSTA)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Overview: Trap the output from LISTALC STATUS and capture the
           DDNAME to data set name allocation(s).

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm WHEN     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.01 20180505 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
         -     1) Stylize using Edit Macro @putktm:
      20180423    Programming Using The Kenneth Tomiak Method.
               2) Stylize using template $putktm:
                  Programming Using The Kenneth Tomiak Method.
               3) Stylize using Edit Macro %putktm:
                  Programming Using The Kenneth Tomiak Method.
               4) Stylize using the
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.00 20180111 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original base code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  sp8 = COPIES(" ",8)
  ds8 = COPIES("-",8)
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
  all_ddnames = Retrieve_Allocations() /* Run through LISTALC output. */
  return_code = Show_Allocations()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  RETURN return_code

/*-------------------------------------------------------------------*/
/*    Sample output from listalc status
--DDNAME---DISP--
SYS1.HELP
  SYSHELP  KEEP
SYS1.BRODCAST
  SYSLBC   KEEP
TERMFILE  SYSTERM
USERID2.IDAT.ISPF.ISPPROF
  ISPPROF  KEEP
USERID2.ISPLLIB
  ISPLLIB  KEEP
SYS1.DGTLLIB
           KEEP
SYS1.SCBDHENU
           KEEP
*/
/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Issue LISTALC STATUS and parse the output.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Retrieve_Allocations:
  RC = OUTTRAP("ln.")                 /* OPEN trap                  */
  "LISTALC STATUS"
  RC = OUTTRAP("OFF")                 /* close trap                 */
  dd_names = 0
  DO trapx = 2 TO ln.0                  /* SKIP heading         */
    ln.trapx = SPACE(ln.trapx)
    PARSE VAR ln.trapx tempname tempddnm
    SELECT
      WHEN (tempddnm <> " ") THEN DO
        PARSE VAR ln.trapx fullname tiotddnm
        dd_names = dd_names + 1       /* DDName index         */
        dd_name.dd_names = tiotddnm
        dd_nnbr.tiotddnm = dd_names
        dsname.dd_names.0 = 0
        ds_temp = dsname.dd_names.0 + 1
        dsname.dd_names.0 = ds_temp
        dsname.dd_names.ds_temp = fullname
      END
      WHEN ((LEFT(ln.trapx,3) <> " ") &,
            (WORDS(ln.trapx) = 1)) THEN DO
        PARSE VAR ln.trapx fullname .
        trapx = trapx + 1
        ln.trapx = SPACE(ln.trapx)
        PARSE VAR ln.trapx tempddnm " " final_disp " " .
        IF ((tempddnm <> " ") &,
            (final_disp <> " ")) THEN DO
          tiotddnm = tempddnm
          dd_names = dd_names + 1   /* DDName index         */
          dd_name.dd_names = tiotddnm
          dd_nnbr.tiotddnm = dd_names
          dsname.dd_names.0 = 0
        END
        ds_temp = dsname.dd_names.0 + 1
        dsname.dd_names.0 = ds_temp
        dsname.dd_names.ds_temp = fullname
      END
      OTHERWISE DO
        SAY "*ERR*" ln.trapx
      END
    END
  END                                 /* TRAPX                      */
  RETURN dd_names

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Show the datastream in dd_names.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Show_Allocations:
  SELECT
    WHEN ((match_dd <> "") & (match_dd <> "*")) THEN DO
      dd# = dd_nnbr.match_dd
      dn = dd_name.dd#
      SAY "DDNAME(" dn ")"
      nd = dsname.dd#.0
      DO ds# = 1 TO nd
        SAY COPIES(" ",7) dsname.dd#.ds#
      END
      erc = nd
    END
    WHEN (match_dd = "*") THEN DO
      SAY "All ddnames allocated"
      DO dd# = 1 TO dd_names
        dn = dd_name.dd#
        SAY "DDNAME(" dn ")"
        nd = dsname.dd#.0
        DO ds# = 1 TO nd
          IF ((dn = match_DD) | (match_dd = "*")) THEN DO
            SAY COPIES(" ",7) dsname.dd#.ds#
          END
        END
      END
      erc = dd_names
    END
    OTHERWISE DO
      erc = dd_names
      DO dd# = 1 TO dd_names
        dn = dd_name.dd#
        nd = dsname.dd#.0
        erc = erc";"dd#";"dn";"nd
        DO ds# = 1 TO nd
          erc = erc";"ds#";"dsname.dd#.ds#
        END
      END
    END
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
