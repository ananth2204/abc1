/* rexx */
Rexx_DISKRVBS:
  rexxpgm_version = "01.01"           /* ver lev */

  PARSE ARG all_my_arguments

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  DEMO.REXX(DISKRVBS)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Syntax:   DISKRVBS |input_dsn|
 Overview: This job will demonstrate using REXX to read
           VBS (SMF) data showing the minimum and maximum
           LRECL found.
 JCL:      DEMO.CNTL(DISKRVBS)

    //jobname  JOB ...
    //ST01#01 EXEC PGM=IKJEFT1B,PARM='',DYNAMNBR=20
    //SYSTSIN   DD DATA,DLM='!!'
    %DISKRVBS KTOMIAK.SMF.ACCT
    LOGOFF
    !!
    //SYSTSPRT  DD SYSOUT=*
    //SYSEXEC   DD DISP=(SHR,PASS),DSN=&SYSUID..DEMO.REXX

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm When     Who / What you did
----- -------- --------------------------------------------------------
01.01 20180510 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
         -     1) Added sample JCL.
      20180427 2) Stylize using:
                  Programming Using The Kenneth Tomiak Method.
                 a) Remove unused NUMERIC DIGITS.
                 c) Parentheses on DO WHILE.
               3) Stylize using template $putktm:
                  Programming Using The Kenneth Tomiak Method.
               4) Stylize using Edit Macro @putktm:
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.00 20170518 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  PARSE SOURCE,
    source_host_env,
    source_call_type,
    source_uc_exec_name,
    source_hostdd,
    source_hostdsn,
    source_nf_exec_name,
    source_initial_cmd_env,
    source_asid_name,
    source_char8_user_token,
    source_hostother
  job_specs = Ctlblk_Jobspecs()
  SAY ""
  SAY COPIES("=",79)
  SAY LEFT("=" jobspecs_jobname ,
    jobspecs_ssibjbid jobspecs_stepname ,
    jobspecs_procname,77) "="
  SAY LEFT("=" source_uc_exec_name rexxpgm_version,77) "="
  SAY LEFT("= executing under" source_host_env,77) "="
  SAY LEFT("= as a" source_call_type,77) "="
  SAY LEFT("= on" DATE() "at" TIME()".",77) "="
  SAY COPIES("=",79)
  SAY ""

  MAKEBUF
  PARSE VAR all_my_arguments input_dsn .

  IF (LEFT(input_dsn,1) <> "'") THEN input_dsn = "'"input_dsn"'"
  "ALLOC FILE(VBS)" ,
    "DATASET("input_dsn") SHR REUSE"
  alloc_rc = RC
  IF (alloc_rc <> 0) THEN DO
    SAY "The file" input_dsn "failed allocation, RC("alloc_rc")."
    return_code = 24
    RETURN return_code
  END

  SAY "Process dsn("input_dsn")."
  rec_ctr = 0
  diskr_rc = 0
  min_length = 65000
  max_length = 0

  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
  DO WHILE (diskr_rc = 0)
    ADDRESS MVS "EXECIO 1 DISKR VBS (STEM vbs_data."
    diskr_rc = RC
    IF (diskr_rc <> 0) THEN DO
      LEAVE
    end
    rec_ctr = rec_ctr + 1
    cur_length = LENGTH(vbs_data.1)
    IF (cur_length > 14) THEN DO
      IF (cur_length < min_length) THEN DO
        min_length = cur_length
      END
      IF (cur_length > max_length) THEN DO
        max_length = cur_length
      END
    END
  END
  ADDRESS MVS "EXECIO 0 DISKR VBS (FINIS"
  SAY "Read" rec_ctr "record(s)."
  SAY " min" min_length
  SAY " max" max_length
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  "FREE FILE(VBS)"
  SAY ""
  SAY COPIES("=",79)
  SAY LEFT("= RC=" return_code,77) "="
  SAY COPIES("=",79)
  SAY ""
  DROPBUF
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
