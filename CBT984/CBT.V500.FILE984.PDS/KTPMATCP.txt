/* rexx */
Rexx_KTPMATCP:
  rexxpgm_version = "01.08"           /* ver lev */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  Dataset:  KTPM.REXX(KTPMATCP)
  Contact: "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
  Overview: Kenneth Tomiak Programming Method (KTPM) collection.
            This is a REXX program to demonstrate using the REXX
            ADDRESS ATTACHPGM environment.
            ATTACHPGM unauthorized programs on a different task level.
            R1 P1 points to the length and parameter string.
            Internally the parameter string contains pairs of length
            and VALUE strings. There is a firm dependency on passing
            the maximum variable length (pad with spaces if you want).

  Syntax:   %KTPMATCP

=======================================================================

  History of Modifications
  ------------------------
vv.mm When     Who  /  What you did
----- -------- --------------------------------------------------------
01.08 20180630 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Kenneth Tomiak Programming Method (KTPM) collection.
----- -------- --------------------------------------------------------
01.07 20180505 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Change SYSISPF = ACTIVE to SYSENV = FORE
----- -------- --------------------------------------------------------
01.06 20180428 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) If TSOLIB has DB2 SDSNLOAD and/or
                  KTPM.LOADLIB then attempt ATTCHPGM.
----- -------- --------------------------------------------------------
01.05 20180427 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Stylize using Edit Macro @putktm:
                  Programming Using The Kenneth Tomiak Method.
               2) Stylize using template $putktm:
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.04 20171001 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Used SNAP to confirm the manual is correct. Fixed
                  my code to use R1 and the parameter list of
                  parameter length VALUE setup
----- -------- --------------------------------------------------------
01.03 20170929 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Lots of experimentation fails to get more than one
                  parameter string. Thus I built my own method of
                  what would be a multi-parameter list of length and
                  VALUE pairs.
----- -------- --------------------------------------------------------
01.02 20170929 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Add IBM's example for IEBGENER using alternate DD.
----- -------- --------------------------------------------------------
01.01 20170929 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Corrected spelling of variable.
----- -------- --------------------------------------------------------
01.00 20170928 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original code.
----- -------- --------------------------------------------------------

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  sdsnload_good = 0
  loadlib_good = 0

  SAY ""
  SAY "KTPMATCP beginning:"
  SAY "ISPF availability:" SYSVAR("SYSISPF")
  SAY "Checking for SDSNLOAD in //STEPLIB:"

  IF (SYSVAR("SYSISPF") = "ACTIVE") THEN DO
    db2check_rc = Scan_Steplib_And_Tsolib()
    SAY ""
    SELECT
      WHEN (db2check_rc = 0) THEN DO
        SAY "Unable to fully demonstrate ATTCHPGM under ISPF" ,
          "at this time."
        SAY "There is a STEPLIB/TSOLIB type of issue."
        SAY ""
        SAY "Your options are:"
        SAY "1) Update and submit KTPM.CNTL(KTPMATCP)."
        SAY "2) Alter your TSO/E logon procedure so" ,
          "that STEPLIB includes:"
        SAY "  a) DB2 library SDSNLOAD"
        SAY "  b) KTPM.LOADLIB"
        SAY "3) Prior to launching ISPF" ,
          "(from the TSO/E READY prompt) issue TSOLIB:"
        SAY "  a) KTPM.CLIST(ADDTSOLB) is an example of how to use"
        SAY "     TSOLIB before ISPF is started."
      END
      WHEN (db2check_rc = 1) THEN DO
        SAY "Only the ATTCHPGM for DSNTIAR can be" ,
          "demonstrated at this time."
        SAY "There is a STEPLIB/TSOLIB type of issue."
        SAY ""
        SAY "Your options are:"
        SAY "1) Update and submit KTPM.CNTL(KTPMATCP)."
        SAY "2) Alter your TSO/E logon procedure so" ,
          "that STEPLIB includes:"
        SAY "  a) KTPM.LOADLIB"
        SAY "3) Prior to launching ISPF" ,
          "(from the TSO/E READY prompt) issue TSOLIB:"
        SAY "  a) KTPM.CLIST(ADDTSOLB) is an example of how to use"
        SAY "     TSOLIB before ISPF is started."
      END
      WHEN (db2check_rc = 2) THEN DO
        SAY "Only the ATTCHPGM for KTPMATCP can be" ,
          "demonstrated at this time."
        SAY "There is a STEPLIB/TSOLIB type of issue."
        SAY ""
        SAY "Your options are:"
        SAY "1) Update and submit KTPM.CNTL(KTPMATCP)."
        SAY "2) Alter your TSO/E logon procedure so" ,
          "that STEPLIB includes:"
        SAY "  a) DB2 library SDSNLOAD"
        SAY "3) Prior to launching ISPF" ,
          "(from the TSO/E READY prompt) issue TSOLIB:"
        SAY "  a) KTPM.CLIST(ADDTSOLB) is an example of how to use"
        SAY "     TSOLIB before ISPF is started."
      END
      OTHERWISE DO
        SAY "An attempt to demonstrate ATTCHPGM to both" ,
          "DSNTIAR and KTPMATCP will now occur."
      END
    END
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
  IF (sdsnload_good = 1) THEN DO
    SAY ""
    SAY "ATTCHPGM DSNTIAR"
    SAY "================="
    SQLCODE = -913
    SQLC = D2X(SQLCODE,8)
    SQLC = X2C(SQLC)
    SAY "SQLC("sqlc")" ,
      "converted from D2X and then X2C yields:" C2X(sqlc) ,
      "in hex."

    SQLCA = "SQLCA   "
    SQLCA = SQLCA ||  X2C(00000088)
    SQLCA = SQLCA ||  SQLC
    SQLCA = SQLCA ||  X2C(0000)
    SQLCA = SQLCA ||  COPIES(" ",78)
    SQLCA = SQLCA ||  COPIES(X2C(00),24)
    SQLCA = SQLCA ||  COPIES(" ",16)
    TIAR_MSG = X2C(0190)COPIES(" ",400)
    TEXT_LEN = X2C(00000050) ;
    ADDRESS ATTCHPGM "DSNTIAR SQLCA TIAR_MSG TEXT_LEN"
    attchpgm_rc = RC
    SAY "ATTCHPGM DSNTIAR RC("attchpgm_rc")."
    SAY "Message text follows:"
    IF (attchpgm_rc = 0) THEN DO
      DO msgx = 1 TO 400 BY 80
        IF (STRIP(SUBSTR(TIAR_MSG,msgx,80),"T"," ") <> "") THEN DO
          SAY SUBSTR(TIAR_MSG,msgx,80)
        END
      END
    END
  END

  IF (loadlib_good = 2) THEN DO
    IF (SYSVAR("SYSENV") = "FORE") THEN DO
      "ALLOC FILE(SNAPSHOT) NEW DELETE REUSE" ,
        "UNIT(SYSDA) TRACKS SPACE(5,5)" ,
        "DSORG(PS) RECFM(V B A) BLKSIZE(0) LRECL(125)"
    END
    SAY ""
    SAY "ATTCHPGM KTPMATCP"
    SAY "================="
    SAY ""
    msg1 = LEFT("If you mimic JCL's PARM= then the limit is" ,
      "100 characters",100)
    msg2 = "Unlike JCL, more than one parm can be passed."
    msg3 = "I use 1 to see how that looks."
    parms = "msg1 msg2 msg3"
    SAY 'ADDRESS ATTCHPGM "KTPMATCP"' parms
    SAY "Look at the system log to confirm KTPMATCP ran okay."
    ADDRESS ATTCHPGM "KTPMATCP" parms
    SAY "       " msg1
    return_code = RC
    SAY "ATTCHPGM KTPMATCP RC("return_code")."
    IF (SYSVAR("SYSENV") = "FORE") THEN DO
      ADDRESS ISPEXEC ,
        "LMINIT DATAID(fileid) DDNAME(SNAPSHOT) ENQ(SHR)"
      lminit_rc = RC
      ADDRESS ISPEXEC ,
        "VIEW DATAID("fileid")"
      ADDRESS ISPEXEC ,
        "LMCLOSE DATAID("fileid")"
      lmclose_rc = RC
      "FREE FILE(SNAPSHOT)"
    END
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 This routine searches STEPLIB/TSOLIB for SDSNLOAD and KTPM.LOADLIB.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Scan_Steplib_And_Tsolib:
  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  ADDRESS ISPEXEC,
    "QBASELIB STEPLIB ID(dsnames)"
  qbaselib_rc = RC
  IF (qbaselib_rc = 0) THEN DO
    list_of_dsnames = dsnames
    DO WHILE list_of_dsnames <> ""
      PARSE VAR list_of_dsnames dsn "," list_of_dsnames
      IF (POS("SDSNLOAD",dsn) > 0) THEN DO
        sdsnload_good = 1
      END
      IF (POS("KTPM.LOADLIB",dsn) > 0) THEN DO
        loadlib_good = 1
      END
    END
  END

  @trap_state = TRAPMSG("ON")
  @msg_state = MSG("ON")
  @outtrap_state = OUTTRAP(caughtit.)
  ADDRESS TSO "TSOLIB DISPLAY"
  tsolib_rc = RC
  @outtrap = OUTTRAP("OFF")
  @msg_state = MSG(@msg_state)
  @trap_state = TRAPMSG(@trap_state)
  IF (caughtit.0 > 2) THEN DO
    DO cx = 1 TO caughtit.0
      IF (POS("= ",caughtit.cx) = 0) THEN ITERATE cx
      PARSE VAR caughtit.cx . "= " ddname .
      ADDRESS ISPEXEC,
        "QBASELIB" ddname "ID(dsnames)"
      qbaselib_rc = RC
      IF (qbaselib_rc = 0) THEN DO
        list_of_dsnames = dsnames
        DO WHILE list_of_dsnames <> ""
          PARSE VAR list_of_dsnames dsn "," list_of_dsnames
          IF (POS("SDSNLOAD",dsn) > 0) THEN DO
            sdsnload_good = 1
          END
          IF (POS("KTPM.LOADLIB",dsn) > 0) THEN DO
            loadlib_good = 2
          END
        END
      END
    END
  END
  RETURN VALUE(sdsnload_good + loadlib_good)

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 Types of messages from TSOLIB DISPLAY:

 IDY00029I There are no libraries identified for TSOLIB being searched.

 IDY00028I Current load library not established by TSOLIB.
 IDY00022I TSOLIB search order (by DDNAME) is:
 IDY00023I DDNAME = SYS00165

 IDY00022I TSOLIB search order (by DDNAME) is:
 IDY00023I DDNAME = SYS00176
 IDY00022I TSOLIB search order (by DDNAME) is:
 IDY00023I DDNAME = SYS00191
 IDY00024I DDNAME = SYS00176 (Stacked)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
