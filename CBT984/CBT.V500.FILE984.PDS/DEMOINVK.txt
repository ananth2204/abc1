/* We first need rexx in comment if compiled or read from SYSPROC. */
rexx_demoinvk:
  rexxpgm_version = "01.01"          /* Set with 'ver 1' and 'lev 2'. */

  pds_sysexec = "'!HLQ!.TSO.REXX'"
  pds_ispmlib = "'!HLQ!.ISPF.MSGS'"
  pds_ispplib = "'!HLQ!.ISPF.PANELS'"
  pds_ispslib = "'!HLQ!.ISPF.SKELS'"
  tso_command = "%DEMO"

  sysvar_sysispf = SYSVAR("SYSISPF")
  IF (sysvar_sysispf <> "ACTIVE") THEN DO
    Say "You first need to start ISPF and then you can execute" ,
      "this DEMO tool."
    RETURN 16
  END

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Rexx_Main_Code:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  Dataset:  TSO.REXX(DEMOINVK)
  Contact:  "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
  Overview: This is a REXX invocation program. It will dynamically
            ALTLIB your REXX pds and LIBDEF your PANELS pds.
  Syntax:   %demoinvk

=======================================================================

  History of Modifications
  ------------------------
vv.mm When     Who  /  What you did
----- -------- --------------------------------------------------------
01.01 20180423 "Kenneth E Tomiak"<KenTomiak@KTomiak.org>
               1) Added MSGS and SKELS to LIBDEF processing.
               2) Stylize using the
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.00 20170808 "Kenneth E Tomiak"<KenTomiak@KTomiak.org>
               1) Original code.
----- -------- --------------------------------------------------------

=======================================================================

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */


/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  return_code = 0

  ZERRHM = ""
  ZERRALRM = "Yes"
  ZERRSM = "Press HELP"
  ZERRLM = ""

  altlib_exec = 0
  ispmlib_libdef = 0
  ispplib_libdef = 0
  ispslib_libdef = 0
  good_to_go = 1

  IF (POS("!HLQ!",pds_sysexec pds_ispmlib pds_ispplib pds_ispslib) > 0) ,
  THEN DO
    sysvar_sysuid = SYSVAR("SYSUID")
    IF (sysvar_sysuid = "KTOMIAK") THEN DO
      pds_sysexec = "DEMO.REXX"
      pds_ispmlib = "DEMO.MSGS"
      pds_ispplib = "DEMO.PANELS"
      pds_ispslib = "DEMO.SKELS"
    END
    ELSE DO
      good_to_go = 0
      ZERRLM = "You failed to customize DEMO.REXX(DEMOINVK)" ,
        "to use your data set names."
      ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
      return_code = 4
      RETURN return_code
    END
  END

  sysdsn_altlib = Sysdsn(pds_sysexec)
  IF (sysdsn_altlib <> "OK") THEN DO
    good_to_go = 0
    ZERRLM = ZERRLM|| ,
      LEFT("Error:" pds_sysexec "("sysdsn_altlib")",79)
  END

  sysdsn_msgs = Sysdsn(pds_ispmlib)
  IF (sysdsn_msgs <> "OK") THEN DO
    good_to_go = 0
    ZERRLM = ZERRLM|| ,
      LEFT("Error:" pds_ispmlib "("sysdsn_msgs")",79)
  END

  sysdsn_panels = Sysdsn(pds_ispplib)
  IF (sysdsn_panels <> "OK") THEN DO
    good_to_go = 0
    ZERRLM = ZERRLM|| ,
      LEFT("Error:" pds_ispplib "("sysdsn_panels")",79)
  END

  sysdsn_skels = Sysdsn(pds_ispslib)
  IF (sysdsn_skels <> "OK") THEN DO
    good_to_go = 0
    ZERRLM = ZERRLM|| ,
      LEFT("Error:" pds_ispslib "("sysdsn_skels")",79)
  END

  IF (good_to_go = 0) THEN DO
    ZERRLM = ZERRLM|| ,
      LEFT("Fix the above errors and try again.",79)
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = 4
    RETURN return_code
  END

  ADDRESS TSO "ALTLIB Activate Application(EXEC)" ,
    "DATASET("pds_sysexec") UNCOND"
  altlib_rc = RC
  IF (altlib_rc <> 0) THEN DO
    ZERRSM = "Severe error!"
    ZERRLM = "ALTLIB of" pds_sysexec "failed, rc("altlib_rc")."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = altlib_rc
    RETURN return_code
  END
  altlib_exec = 1

  ADDRESS ISPEXEC "LIBDEF ISPMLIB DATASET",
    "ID("pds_ispmlib") STACK"
  libdef_rc = RC
  IF (libdef_rc <> 0) THEN DO
    ZERRSM = "Severe error!"
    ZERRLM = "LIBDEF of" pds_ispmlib "failed, rc("libdef_rc")."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = libdef_rc
    RETURN return_code
  END
  ispmlib_libdef = 1

  ADDRESS ISPEXEC "LIBDEF ISPPLIB DATASET",
    "ID("pds_ispplib") STACK"
  libdef_rc = RC
  IF (libdef_rc <> 0) THEN DO
    ZERRSM = "Severe error!"
    ZERRLM = "LIBDEF of" pds_ispplib "failed, rc("libdef_rc")."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = libdef_rc
    RETURN return_code
  END
  ispplib_libdef = 1

  ADDRESS ISPEXEC "LIBDEF ISPSLIB DATASET",
    "ID("pds_ispslib") STACK"
  libdef_rc = RC
  IF (libdef_rc <> 0) THEN DO
    ZERRSM = "Severe error!"
    ZERRLM = "LIBDEF of" pds_ispslib "failed, rc("libdef_rc")."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = libdef_rc
    RETURN return_code
  END
  ispslib_libdef = 1
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
  ADDRESS ISPEXEC "SELECT" ,
    "CMD("tso_command")"
  select_rc = RC
  IF (select_rc <> 0) THEN DO
    ZERRSM = "Trouble?"
    ZERRLM = "Select CMD("tso_command") yielded rc("select_rc")."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = select_rc
    RETURN return_code
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does any pre-termination cleanup.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  IF (altlib_exec = 1) THEN DO
    ADDRESS TSO "ALTLIB DeActivate Application(EXEC)"
    altlib_rc = RC
    IF (altlib_rc = 0) THEN DO
      altlib_exec = 0
    END
  END
  IF (ispmlib_libdef = 1) THEN DO
    ADDRESS ISPEXEC "LIBDEF ISPMLIB"
    libdef_rc = RC
    IF (libdef_rc = 0) THEN DO
      ispmlib_libdef = 0
    END
  END
  IF (ispplib_libdef = 1) THEN DO
    ADDRESS ISPEXEC "LIBDEF ISPPLIB"
    libdef_rc = RC
    IF (libdef_rc = 0) THEN DO
      ispplib_libdef = 0
    END
  END
  IF (ispslib_libdef = 1) THEN DO
    ADDRESS ISPEXEC "LIBDEF ISPSLIB"
    libdef_rc = RC
    IF (libdef_rc = 0) THEN DO
      ispslib_libdef = 0
    END
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
