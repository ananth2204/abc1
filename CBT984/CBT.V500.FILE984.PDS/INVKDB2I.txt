rexx_INVKDB2I: /* We still need rexx in comment if read from SYSPROC */
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

 Dataset:  KET2812.MIS.REXX(INVKDB2I)
 Author:   KTomiak
 Contact:  "Kenneth Tomiak"<KenTomiak@KTomiak.org>
 Syntax:   INVKDB2I {db2_ssid}
 Overview: Allocate the subsystem specific datasets, set the DSNEOV01
           to ensure a match, launch the DB2I dialog, and free
           everything at the end

=======================================================================

 History of Modifications
 ------------------------
  When     Who      What you did
  -------- -------- ---------------------------------------------------
  20070601 KET2812  Original code.

=======================================================================

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

  Arg all_my_arguments
  Numeric Digits 12

rexx_Main_INVKDB2I:
  return_code = rexx_Initialize()
  If ((db2_debug_option = "ON") &,
      (sysvar_sysenv = "FORE")) then,
    trace ?ilrs
  else,
  If (db2_debug_option = "ON") then,
    trace ilrs
  If (return_code = 0) then,
    Do
      return_code = rexx_Process()
      return_code = rexx_Termination()
    End
  Return 0

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this routine we open any files and initialize any
 constants we might need.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_Initialize:
  return_code = 0
  Parse var all_my_arguments,
    . "SSID=" db2_ssid " ",
    =1 . "DEBUG=" db2_debug_option " " .
  sysvar_sysenv = SYSVAR("SYSENV")
  sysvar_sysuid = SYSVAR("SYSUID")
  mvsvar_sysname = MVSVAR("SYSNAME")
  ssid_on_sysname. = ""
  ssid_on_sysname.DB2P = "IPCO"
  ssid_on_sysname.DB2C = "IPCO"
  ssid_on_sysname.DB2W = "IPCO"
  ssid_on_sysname.DB2M = "IDAT"
  ssid_on_sysname.DB2D = "IDAT"
  ssid_on_sysname.DB2T = "IDAT"
  db2_mlq. = ""
  db2_mlq.DB2M = "MAINT"
  db2_mlq.DB2D = "DEV"
  db2_mlq.DB2T = "TEST"
  db2_mlq.DB2P = "PROD"
  db2_mlq.DB2C = "CISP"
  db2_mlq.DB2W = "DW"
  if (mvsvar_sysname = "ISYS") then,
    do
      ssid_on_sysname.DB2M = "ISYS"
      db2_mlq.DB2M = "SANDBOX"
    end
  ADDRESS ISPEXEC,
    "CONTROL ERRORS RETURN"
  msg_line.  = ""
  Return return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this routine we do our processing.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_Process:
  if (ssid_on_sysname.db2_ssid >< mvsvar_sysname) then,
    do
      ZEDSMSG = "Wrong selection!"
      msg_line.1 = "DB2 subsystem" db2_ssid","
      msg_line.3 = "does not run on" mvsvar_sysname"."
      HX00 = '00'X
      ZEDLMSG = CENTER(msg_line.1,76,HX00),
                CENTER(msg_line.2,76,HX00),
                CENTER(msg_line.3,76,HX00),
                CENTER(msg_line.4,76,HX00),
                CENTER(msg_line.5,76,HX00)
      ADDRESS ISPEXEC,
        'SETMSG MSG(ISRZ001)'      /* SET MESSAGE WITH ALARM       */
      return 12
    end
  dsnetbls_dsname = SYSVAR_SYSUID".DSNSPFT"
  DSNEXT = SYSDSN("'"dsnetbls_dsname"'")
  IF (DSNEXT = 'DATASET NOT FOUND') THEN,
    DO
      Address TSO,
        "ALLOC DD(DSNETBLS)",
        "DATASET('"dsnetbls_dsname"')",
        "NEW CATALOG",
        "UNIT(SYSALLDA) TRACKS SPACE(2 1) DIR(10)",
        "DSORG(PO) RECFM(F B) BLKSIZE(0) LRECL(80)"
      END
  ELSE
    DO
      Address TSO,
        "ALLOC DD(DSNETBLS) DATASET('"dsnetbls_dsname"') SHR"
    END
  ADDRESS ISPEXEC,
    "LIBDEF ISPLLIB DATASET",
      "ID('DB2."db2_mlq.db2_ssid".RUNLIB.LOAD'",
         "'DB2."db2_mlq.db2_ssid".SDSNEXIT'",
         "'DB2."db2_mlq.db2_ssid".SDSNLOAD')"
  ADDRESS ISPEXEC,
    "LIBDEF ISPMLIB DATASET",
      "ID('DB2."db2_mlq.db2_ssid".SDSNSPFM')"
  ADDRESS ISPEXEC,
    "LIBDEF ISPPLIB DATASET",
      "ID('DB2."db2_mlq.db2_ssid".SDSNSPFP'",
         "'DB2."db2_mlq.db2_ssid".SDSNPFPE')"
  ADDRESS TSO,
    "ALTLIB ACTIVATE APPLICATION(CLIST)",
      "DATASET('DB2."db2_mlq.db2_ssid".SDSNTEMP.IPCO'",
              "'DB2."db2_mlq.db2_ssid".SDSNCLST')"
  ADDRESS ISPEXEC,
    "SELECT CMD(%SETSSID" db2_ssid")",
    "NEWAPPL("db2_ssid") PASSLIB"
  ADDRESS ISPEXEC,
    "SELECT PANEL(DSNEPRI)",
    "NEWAPPL("db2_ssid") NEWPOOL PASSLIB"
  ADDRESS TSO,
    "ALTLIB DEACTIVATE APPLICATION(CLIST)"
  ADDRESS ISPEXEC,
    "LIBDEF  ISPPLIB"
  ADDRESS ISPEXEC,
    "LIBDEF  ISPMLIB"
  ADDRESS ISPEXEC,
    "LIBDEF  ISPLLIB"
  Address TSO,
    "FREE DD(DSNETBLS)"
  Return return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 In this routine we close files and finish up.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
rexx_Termination:
  Return return_code

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
 Place any of your subroutines and procedures below this.
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
=======================================================================
__DATA__
=======================================================================
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */
