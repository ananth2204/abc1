/* We first need rexx in comment if compiled or read from SYSPROC. */
pgm_REXR0322:
  rexxpgm_version = "01.00"          /* Set with 'ver 1' and 'lev 2'. */

  SAY ""
  SAY "REXR0322: SIGNAL"
  SAY "================"

  SAY ""
  SAY "Example: Trapping conditions SIGNAL"
  SAY "=================================="
  return_code = 0

  SIGNAL ON ERROR
  SIGNAL ON FAILURE
  SIGNAL ON HALT
  SIGNAL ON NOVALUE
  SIGNAL ON SYNTAX

  signal_type = ""
  come_back = "000"
  SAY "Cause a negative RC:"
  SAY "--------------------"
  Address MVS "EXECIO 1 DISKr Apple (STEM pits. FINIS)"

Recover_Error:

noerror_000:
  IF ( signal_type <> "" ) THEN DO
    SAY "I came back to the Process_routine after an" signal_type"."
  END
  SIGNAL OFF ERROR
  SIGNAL OFF FAILURE
  SIGNAL OFF HALT
  SIGNAL OFF NOVALUE
  SIGNAL OFF SYNTAX

  function_rc = localized_return()

  SAY "Done experimenting."
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This sub-routine handles several conditions using a named routine.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
localized_return:
  SAY ""
  SAY "Setting local SIGNAL ON conditions:"
  SAY "================================="
  SIGNAL ON ERROR    NAME Error_Handler_Routine
  SIGNAL ON FAILURE  NAME Error_Handler_Routine
  SIGNAL ON HALT     NAME Error_Handler_Routine
  SIGNAL ON NOVALUE  NAME Error_Handler_Routine
  SIGNAL ON SYNTAX   NAME Error_Handler_Routine

  signal_type = ""
  SAY "Cause an error:"
  SAY "---------------"
  ADDRESS TSO "ALLOC FILE(Apple) DA(TSO.REXX(ERRHNDLR)) SHR REUSE"
  ADDRESS MVS "EXECIO * DISKR Apple (STEM pits. )"
  SAY "Read" pits.0 "record(s)"
  SAY "An attempt to read from APPLE will fail."
  ADDRESS MVS "EXECIO 1 DISKR Apple (STEM pits. FINIS)"
  SAY "I came back to the localized_return routine."

  ADDRESS TSO "FREE FILE(Apple)"

  SIGNAL OFF ERROR
  SIGNAL OFF FAILURE
  SIGNAL OFF HALT
  SIGNAL OFF NOVALUE
  SIGNAL OFF SYNTAX

  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine handles several conditions and returns after the fault.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Error_Handler_Routine:
  err_sigl = Sigl
  err_rc   = RC
  SAY "  I came to the Error_Handler_Routine."
  signal_type = To_UpperCase(CONDITION("C"))
  signal_desc = CONDITION("D")
  signal_inst = CONDITION("I")
  signal_stat = CONDITION("S")
  SAY "EHR c:" signal_type "at" err_sigl
  SAY "    d:" signal_desc
  SAY "    i:" signal_inst
  SAY "    s:" signal_stat", RC("err_rc")"
  error_code = -1
  SELECT
    WHEN ( signal_type = "ERROR" ) THEN DO
      error_code = 8
      signal_type = "Error"
    END
    WHEN ( signal_type = "FAILURE" ) THEN DO
      error_code = 8
      signal_type = "FAILURE"
    END
    WHEN ( signal_type = "HALT" ) THEN DO
      error_code = 8
      signal_type = "HALT"
    END
    WHEN ( signal_type = "NOVALUE" ) THEN DO
      error_code = 8
      signal_type = "NOVALUE"
    END
    WHEN ( signal_type = "SYNTAX" ) THEN DO
      error_code = 8
      signal_type = "SYNTAX"
    END
    OTHERWISE DO
      error_code = 32
      signal_type = "Unknown" signal_type
    END
  END
  result = -1
  SAY "  RETURN to" signal_type"_"come_back
  RETURN error_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
ERROR:
  SIGNAL OFF ERROR
  SAY "    I came to the ERROR ROUTINE."
  err_sigl = Sigl
  signal_type = "Error"
  SAY signal_type "at" err_sigl
  return_code = 5
  SIGNAL Recover_Error

FAILURE:
  SIGNAL OFF FAILURE
  SAY "    I came to the FAILURE ROUTINE."
  err_sigl = Sigl
  signal_type = "FAILURE"
  SAY signal_type "at" err_sigl
  return_code = 6
  RETURN return_code

HALT:
  SIGNAL OFF HALT
  SAY "    I came to the HALT ROUTINE."
  err_sigl = Sigl
  signal_type = "HALT"
  SAY signal_type "at" err_sigl
  return_code = 7
  RETURN return_code

NOVALUE:
  SIGNAL OFF NOVALUE
  SAY "    I came to the NOVALUE ROUTINE."
  err_sigl = Sigl
  signal_type = "NOVALUE"
  SAY signal_type "at" err_sigl
  return_code = 7
  RETURN return_code

SYNTAX:
  SIGNAL OFF SYNTAX
  SAY "    I came to the SYNTAX ROUTINE."
  err_sigl = Sigl
  signal_type = "SYNTAX"
  SAY signal_type "at" err_sigl
  return_code = 7
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Convert string to uppercase.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
To_Uppercase:
  PARSE ARG myarg
  SAY "Cause a NOVALUE condition"
  SAY "-------------------------"
  IF ( lowercase_letters = "LOWERCASE_LETTERS" ) THEN DO
    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
  END
  IF ( uppercase_letters = "UPPERCASE_LETTERS" ) THEN DO
    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  END
  RETURN TRANSLATE(myarg,uppercase_letters,lowercase_letters)

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  REXX(REXR0322)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Manual:   ikj4a3a0.pdf
           SA22-7790-10 z/OS TSO/E REXX Reference
           Version 1 Release 13
           Chapter 3. Keyword instructions
           Instructions
           SIGNAL
 Overview: Trap certain conditions.

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm WHEN     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.00 20171204 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original base code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

