/* rexx */
Rexx_DDBYQLIB:
  rexxpgm_version = "01.01"           /* ver lev */

  PARSE UPPER ARG match_dd .

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  DEMO.REXX(DDBYQLIB)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Overview: Use ISPF Service QBASELIB to discover
           DDNAME to data set name allocation(s).

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm WHEN     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.01 20180505 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
         -     1) Stylize using Edit Macro @putktm:
      20180423    Programming Using The Kenneth Tomiak Method.
               2) Stylize using template $putktm:
                  Programming Using The Kenneth Tomiak Method.
               3) Stylize using Edit Macro %putktm:
                  Programming Using The Kenneth Tomiak Method.
               4) Stylize using the
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.00 20180111 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original base code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  sp8 = COPIES(" ",8)
  ds8 = COPIES("-",8)
  IF (match_dd = "") THEN DO
    match_dd = "SYSEXEC"
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
  all_ddnames = Retrieve_Allocations(match_dd)
  IF (return_code = 0) THEN DO
    return_code = Show_Allocations()
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  SAY "Ending run."
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Retrieve the known DD names allocated.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Retrieve_Allocations:
  PARSE ARG ddname .
  IF (SYSVAR("SYSISPF") <> "ACTIVE") THEN DO
    SAY "You need to run this from an ISPF session."
    RETURN 16
  END
  IF (ddname = "") THEN DO
    ddname = "SYSPROC"
  END
  PARSE SOURCE,
    source_host_env,         /* TSO */
    source_call_type,        /* COMMAND */
    source_uc_exec_name,     /* GENIE */
    source_hostdd,           /* SYSEXEC */
    source_hostdsn,          /* ? */
    source_nf_exec_name,     /* ? */
    source_initial_cmd_env,  /* TSO */
    source_asid_name,        /* ISPF */
    source_char8_user_token, /* ? */
    source_hostother         /* "" */
  SAY source_uc_exec_name "starting..."
  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  ADDRESS ISPEXEC,
    "QBASELIB" ddname "ID(IDVAR)"
  q_rc = RC
  IF (q_rc <> 0) THEN DO /* Return codes                              */
                        /*  4  - Specified dd-name is not defined     */
                        /*                                            */
                        /* 16  - Dialog variable translation or       */
                        /*       truncation error.                    */
                        /* 20 -  Severe error.                        */
    SAY "Nope, RC("q_rc")."
  END
  RETURN q_rc

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Show the data set(s) allocated.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Show_Allocations:
  list_of_dsnames = IDVAR
  DO WHILE (list_of_dsnames <> "")
    PARSE VAR list_of_dsnames dsn "," list_of_dsnames
    SAY dsn
  END
  RETURN 0

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
