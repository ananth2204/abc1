/* We first need rexx in comment if compiled or read from SYSPROC. */
REXX_ISPG0210:
  rexxpgm_version = "01.00"          /* Set with 'ver 1' and 'lev 0'. */

  SAY "EDIT-edit a data set"
  SAY "===================="

  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  done = 0
  DO WHILE done = 0
    ADDRESS ISPEXEC "EDREC QUERY"
    IF (RC = 4) THEN DO
      ADDRESS ISPEXEC "EDREC DEFER"
    END
    ELSE DO
      done = 1
    END
  END

Example_1:
  SAY "EDIT DATASET(DEMO.REXX(ISPG0210)"
  ADDRESS ISPEXEC "EDIT DATASET(DEMO.REXX(ISPG0210))"
  edit_rc = RC
  SELECT
    WHEN (edit_rc = 0) THEN DO
      /* Normal completion; data was saved. */
      NOP
    END
    WHEN (edit_rc = 4) THEN DO
      /* Normal completion; data was not saved for one of these
         reasons:

         -> No data changes were made during the EDIT session.

         -> The CANCEL command was used to exit EDIT.

         -> Browse was substituted for EDIT because insufficient
            storage was available to read in the requested data. */
      NOP
    END
    WHEN (edit_rc = 10) THEN DO
      /* Member or generation (if specified) not found. */
      SAY "Ask your programmer to handle this condition using SETMSG."
      SAY ZERRSM
      SAY ZERRLM
    END
    WHEN (edit_rc = 12) THEN DO
      /* YES was specified for the LOCK parameter. */
      SAY "Ask your programmer to use" ,
        "QUERYENQ to see who owns the lock."
      SAY ZERRSM
      SAY ZERRLM
    END
    WHEN (edit_rc = 14) THEN DO
      /* Member, sequential data set, or z/OS UNIX file in use. */
      SAY "Ask your programmer to use" ,
        "QUERYENQ to see who has the blocking ENQUEUE."
      SAY "Then handle this condition using SETMSG."
      SAY ZERRSM
      SAY ZERRLM
    END
    WHEN (edit_rc = 16) THEN DO
      /* Either:

         -> No members matched the specified pattern.

         -> No members in the partitioned data set. */
      SAY "Ask your programmer to redrive the prompt for a member."
      SAY ZERRSM
      SAY ZERRLM
    END
    WHEN (edit_rc = 18) THEN DO
      /* A VSAM data set was specified but the ISPF Configuration
         Table does not allow VSAM processing. */
      SAY "Ask your programmer to handle this condition using SETMSG."
      SAY ZERRSM
      SAY ZERRLM
    END
    WHEN (edit_rc = 20) THEN DO
      /* Severe error; unable to continue. */
      SAY "Ask your programmer to fix error."
      SAY ZERRSM
      SAY ZERRLM
    END
    OTHERWISE DO
      SAY "Something very unexpected happened, RC("edit_rc")."
    END
  END

  SAY "Next, get a member list of ISPG*."
  ADDRESS ISPEXEC "EDIT DATASET(DEMO.REXX(ISPG*))"

Example_2:
  SAY "EDIT DATAID(&DDBROW) MEMBER(ISPG020*)"
  ADDRESS ISPEXEC "LMINIT DATAID(DDBROW)" ,
    "DATASET(DEMO.REXX)"
  ADDRESS ISPEXEC "EDIT DATAID(&DDBROW) MEMBER(ISPG020*)"
  ADDRESS ISPEXEC "LMFREE DATAID(&DDBROW)"

Example_3:
  SAY "EDIT FILE(FILEVAR)"
  lower_sysuid = To_Lowercase(SYSVAR("SYSUID"))
  filevar = "/u/"lower_sysuid
  ADDRESS ISPEXEC "EDIT FILE(FILEVAR)" /* Must be a variable name. */
  edit_rc = RC
  SELECT
    WHEN (edit_rc = 0) THEN DO
      /* Normal completion. */
      NOP
    END
    WHEN (edit_rc = 12) THEN DO
      /* Zero-length data; empty sequential data set or z/OS UNIX
         file, or zero-length member of a partitioned data set. */
      SAY "Ask your programmer to handle this condition."
    END
    WHEN (edit_rc = 14) THEN DO
      /* Specified member not found. */
      SAY "Ask your programmer to fix the logic."
      SAY "Use SYSDSN('dsname(member)') to verify existence."
    END
    WHEN (edit_rc = 16) THEN DO
      /* Either:
         -> No members matched the specified pattern.
         -> No members in the partitioned data set. */
      SAY "Use SETMSG() to let the user know what happened."
    END
    WHEN (edit_rc = 18) THEN DO
      /* A VSAM data set was specified but the ISPF Configuration
         Table does not allow VSAM processing. */
      SAY "Use SETMSG() to let the user know what happened."
    END
    WHEN (edit_rc = 20) THEN DO
      /* Severe error; unable to continue. */
      SAY "Ask your system programmer to report this bug to IBM."
      SAY "ISPEXEC EDIT FILE("filevar") does not work."
      ZERRHM = "*"
      ZERRALRM = "YES"
      ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    END
    OTHERWISE DO
      SAY "Something very unexpected happened, RC("edit_rc")."
    END
  END

  RETURN 0

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Convert string to lowercase.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
To_Lowercase: Parse arg myarg
  IF (lowercase_letters = "LOWERCASE_LETTERS") THEN DO
    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
  END
  IF (uppercase_letters = "UPPERCASE_LETTERS") THEN DO
    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  END
  RETURN Translate(myarg,lowercase_letters,uppercase_letters)
