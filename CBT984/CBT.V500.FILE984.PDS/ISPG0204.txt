/* We first need rexx in comment if compiled or read from SYSPROC. */
REXX_ISPG0204:
  rexxpgm_version = "01.00"          /* Set with 'ver 1' and 'lev 0'. */

  SAY "CONTROL-set processing modes"
  SAY "============================"

Example_1:
  SAY "CONTROL ERRORS RETURN"
  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  control_rc = RC
  say "CONTROL ERRORS RETURN RC("control_rc")."

Example_2:
  SAY "CONTROL DISPLAY LOCK AND THEN MSG"
  ADDRESS ISPEXEC "CONTROL DISPLAY LOCK"
  control_rc = RC
  ADDRESS ISPEXEC "DISPLAY PANEL(ISPG204A)"
  ADDRESS ISPEXEC "DISPLAY MSG(ISPG204C)"
  display_rc = RC
  say "DISPLAY MSG RC("display_rc")."

Example_3:
  SAY "CONTROL NONDISPL"
  ADDRESS ISPEXEC "CONTROL NONDISPL"
  control_rc = RC
  ADDRESS ISPEXEC "DISPLAY PANEL(ISPG201A)"
  display_rc = RC
  say "DISPLAY PANEL RC("display_rc")."

Example_7:
  SAY "CONTROL TSOGUI QUERY"
  ADDRESS ISPEXEC "CONTROL TSOGUI QUERY"
  control_rc = RC
  say "TSOGUI QUERY RC("control_rc")."

Example_8:
  SAY "CONTROL REFLIST "
  ADDRESS ISPEXEC "CONTROL REFLIST NOUPDATE"
  control_rc = RC
  say "CONTROL REFLIST NOUPDATE RC("control_rc")."
  ADDRESS ISPEXEC "BROWSE DATASET(DEMO.REXX(ISP*))"
  browse_rc = RC
  ADDRESS ISPEXEC "CONTROL REFLIST UPDATE"
  say "CONTROL REFLIST UPDATE RC("control_rc")."
  control_rc = RC

Example_9:
  SAY "CONTROL LE ON"
  SAY "This requires someone writing the READRTN and CMDRTN routines"
  SAY "specified in the IBM example."

Example_10:
  SAY "CONTROL PASSTHRU LRSCROLL PASQUERY"
  ADDRESS ISPEXEC "CONTROL PASSTHRU LRSCROLL PASQUERY"
  control_rc = RC
  SELECT
    WHEN (control_rc = 0) THEN DO
      /* The LEFT and RIGHT scroll commands are not being passed to
         the dialog program. */
      SAY "LEFT/RIGHT scrolling are not passed thru."
    END
    WHEN (control_rc = 1) THEN DO
      /* The LEFT and RIGHT scroll commands are being passed to the
         dialog program for processing. */
      SAY "LEFT/RIGHT scrolling are passed thru."
    END
    OTHERWISE DO
      SAY "Something very unexpected happened, RC("control_rc")."
      SAY ZERRSM
      SAY ZERRLM
    END
  END

  RETURN 0
