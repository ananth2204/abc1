/* rexx */
Rexx_KTPMCNSL:
  rexxpgm_version = "01.04"           /* ver lev */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  KTPM.REXX(KTPMCNSL)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Syntax:   %KTPMCNSL
 Overview: Kenneth Tomiak Programming Method (KTPM) collection.
           Use CONSOLE to discover attached disk.

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm WHEN     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.04 20180630 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Kenneth Tomiak Programming Method (KTPM) collection.
----- -------- --------------------------------------------------------
01.03 20180505 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Stylize using Edit Macro @putktm:
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.02 20180428 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Touch up IF statements.
               2) Remove unused statements PARSE and NUMERIC DIGITS.
               3) ADDRESS MVS before EXECIO.
----- -------- --------------------------------------------------------
01.01 20180427 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Stylize using template KTPM.REXX($PUTKTM)
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.00 20171207 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  SAY ""
  SAY "KTPMCNSL: Demonstrate using CONSOLE to get Disk sizes."
  SAY "======================================================"
  SAY LEFT(DATE() DATE("W"),25) TIME()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:
/* sample output from devserv command:
z/OS 2.3
DS QD,TYPE=ALL,DEFINED
----+----1----+----2----+----3----+----4----+----5----+----6----+----7---+----8
 IEE459I 12.43.28 DEVSERV QDASD 482
  UNIT VOLSER SCUTYPE DEVTYPE       CYL  SSID SCU-SERIAL DEV-SERIAL EFC
 00220 VTW90A 2107951 2107900      6000* D380 0175-XD721 0175-XD721 BYP
 00221 VDW90A 2107951 2107900      5000* D380 0175-XD721 0175-XD721 BYP
 00222 VPW90A 2107961 2107900     10017* 3580 0175-BTM91 0175-BTM91 BYP
 0022D VTCTGJ 2107961 2107900      1200* 3480 0175-BTM91 0175-BTM91 BYP
 0022E VPCTGJ 2107961 2107900       100* 3400 0175-BTM91 0175-BTM91 BYP
 0038A VTDFSA 2107961 2107900      5000* 3380 0175-BTM91 0175-BTM91 BYP
 ...
 003DF VPMVSF 2107961 2107900       600* 3400 0175-BTM91 0175-BTM91 BYP
 **** UNLISTED DEVICE(S) AND REASON CODES :
  00223(02) 00224(02) 00225(02) 00226(02) 00227(02) 00228(02) 00229(02)
  0022A(02) 0022B(02) 0022C(02) 0022F(02) 00230(02) 00231(02) 00232(02)
  00B16(02) 00B17(02)
 **** (02) - UCB NOT CONNECTED
  UNIT VOLSER SCUTYPE DEVTYPE       CYL  SSID SCU-SERIAL DEV-SERIAL EFC
 00B1C VPI12A 2107961 2107900      1000* 3580 0175-BTM91 0175-BTM91 BYP
 00B1D VPI12B 2107961 2107900      1000* 3580 0175-BTM91 0175-BTM91 BYP
 **** (02) - UCB NOT CONNECTED
 ****    162 DEVICE(S) MET THE SELECTION CRITERIA
 ****      0 DEVICE(S) FAILED EXTENDED FUNCTION CHECKING

*/
  devserv_cmd="DS QD,TYPE=ALL,DEFINED"
  wait_time = 60                   /*  seconds to wait for reply */
  myid = SYSVAR("SYSUID")
  "CONSOLE ACTIVATE NAME("myid"2)"
  lastrc = RC
  IF (lastrc <> 0) THEN DO
    SAY ""
    SAY "*** Unable to activate TSO CONSOLE services!"
    SAY "*** The return code from 'CONSOLE activate' was:" lastrc
    SAY "*** Attempting to recover..."
    "CONSOLE DEACT"
    lastrc = RC
    SAY "*** CONSOLE DEACT return code was:" lastrc
    "CONSOLE ACTIVATE"
    lastrc = RC
    IF (lastrc = 0) THEN DO
      SAY "*** Recovery successful!"
    END
    ELSE DO
      SAY "*** Recovery attempt failed (I issued CONSOLE DEACT)",
        "return code was:" lastrc;
      SAY "*** Perhaps you don't have TSO CONSOLE authority?"
      how_many = QUEUED()
      ADDRESS MVS "EXECIO" ,
        how_many " DISKW EMAIL (FINIS"
      EXIT 16
    END
  END
  "CONSPROF SOLDISPLAY(NO)  SOLNUM(1000)"
  cart="DS" || TIME('M')
  ADDRESS "TSO"
  "CONSOLE SYSCMD("devserv_cmd") CART('"cart"')"
  getcode = GETMSG("rec.","SOL",cart,,wait_time)
  IF (getcode <> 0) THEN DO
    QUEUE "*** GETMSG return code was:" lastrc
    "CONSPROF SOLDISPLAY(YES) SOLNUM(1000)"
    "CONSOLE DEACTIVATE"
    EXIT 12
  END
  ADDRESS "TSO"
  "CONSPROF SOLDISPLAY(YES) SOLNUM(1000)"
  SAY "devserv lines("rec.0")"
  "CONSOLE DEACTIVATE"

  fmt = POS(" SCU-SERIAL",rec.2)
  IF (fmt <> 46) THEN DO
    SAY "Display output has changed, update REXX code."
    SAY "blank-S-C-U---S-E-R-I-A-L found at" fmt"."
    SAY "----+----1----+----2----+----3----+----4----+----5----+----6"
    SAY rec.2
  END
  ELSE DO
    DO i = 3 TO rec.0
      PARSE VAR rec.i . +2,
                ucb     " " . ,
           =8   volser  " " . ,
           =15  scutype " " . ,
           =23  devtype " " . ,
           =31  cyl     +10 . ,
           =42  ssid    " " . ,
           =47  scuserial " " . ,
           =58  devserial " " . ,
           =69  efchk   " " .
    IF (ucb = "****") THEN DO
      ITERATE
    END
    IF (LEFT(ucb,2) = "  ") THEN DO
      ITERATE
    END
    SAY volser cyl ucb
  END
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
