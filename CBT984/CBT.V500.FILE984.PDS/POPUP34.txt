rexx_MYDS34:   /* We still need rexx in comment if read from SYSPROC */
/*                                       */
/* LIB: REXX(MYDS)                       */
/* GDE: MANY SOURCES                     */
/*      PLACED HERE BY KEN TOMIAK        */
/* DOC: EXTRACT dataset pattern near     */
/*      CURSOR LOCATION AND INVOKE 3.4.  */
/*                                       */
THE_BEGINNING:
  ADDRESS ISPEXEC 'CONTROL ERRORS RETURN'
  parse upper arg zdldsnlv zdlpvl junk
  ZDLDSNLV = strip(ZDLDSNLV, 'B' , "'" )
  call launch_it
  exit 0

launch_it:
  Address IspExec,
    "CONTROL NONDISPL ENTER" /* simulate ENTER on next panel */
  if (ZDLDSNLV = "*") then ZDLDSNLV = ""
  Address IspExec,
    "VPUT (ZDLPVL ZDLDSNLV)"       /* VPUT the volser and dsn mask */
  Address IspExec,
    "SELECT PGM(ISRUDL) PARM(ISRUDLP)"  /* invoke normal 3.4 */
  MYRC=RC
  IF (MYRC > 4) THEN,
    DO
      ZERRHM = "*"
      ZERRALRM = "YES"
      ZERRSM = "NOT RIGHT NOW"
      ZERRLM = "Check Mask("ZDLDSNLV") or VOL("ZDLPVL") ,RC="MYRC
      ADDRESS ISPEXEC "VPUT (ZERRSM ZERRLM ZERRHM ZERRALRM) SHARED"
      ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
      LRC=myrc
    END
  return
/*                                                    */
/*                                                    */
/*                                                    */
/*                                                    */
/*                                                    */
/*                                                    */
scanforname:
  trypos = 0
  ZDLDSNLV = ""
  nextone = pos("DSNAME=",justonerow) + 6
  if (nextone > 6) then,
    do
      trypos = nextone
    end
  else,
    do
      nextone = pos("DSN=",justonerow) + 3
      if (nextone > 3) then,
        do
          trypos = nextone
        end
      else,
        do
          nextone = pos("ORDER=(",justonerow) + 6
          if (nextone > 6) then,
            do
              trypos = nextone
            end
          else,
            do
              nextone = pos("ORDER=",justonerow) + 5
              if (nextone > 5) then,
                do
                  trypos = nextone
                end
              else,
                do
                  nextone = nextpos("=" 1 justonerow)
                  if (nextone > 0) then,
                    do
                      trypos = nextone
                    end
                  else,
                    do
                      nextone = prevpos("=" zscreenw justonerow)
                      if (nextone > 0) then,
                        do
                          trypos = nextone
                        end
                    end
                end
            end
        end
    end
  call extract_name
  Return
/*                                                    */
/*                                                    */
/*                                                    */
extract_name:
  if trypos = 0 then return
  beginofname = trypos
  endofname = trypos + 1
  onepos = substr(justonerow,endofname,1)
  do while (pos(onepos,delim) > 0)
    endofname = endofname + 1
    if (endofname > zscreenw) then leave
    onepos = substr(justonerow,endofname,1)
  end
  l_ZDLDSNLV = endofname - beginofname - 1
  parse var justonerow . +(beginofname) ZDLDSNLV +(l_ZDLDSNLV) .
  memberinit = pos("(",ZDLDSNLV)
  if (memberinit = 0) then,
    do
      ZDLDSNLV = strip(ZDLDSNLV, 'T' , ")" )
    end
  ZDLDSNLV = strip(ZDLDSNLV, 'B' , "'" )
  ZDLDSNLV = strip(ZDLDSNLV, 'B' , "." )
  Return
/*                                                    */
/*                                                    */
/*                                                    */
get_out_of_here:
  ZERRHM = "*"
  ZERRALRM = "YES"
  ZERRSM = "get out"
  ZERRLM = "DOES" ZDLDSNLV "EXIST?, RC="
  ADDRESS ISPEXEC "VPUT (ZERRSM ZERRLM ZERRHM ZERRALRM) SHARED"
  ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
  Exit 0
/*                                                    */
/*                                                    */
/*                                                    */
go_on_get_out:
  ZERRHM = "*"
  ZERRALRM = "YES"
  ZERRSM = "go on"
  ZERRLM = "DOES" ZDLDSNLV "EXIST?, RC="
  ADDRESS ISPEXEC "VPUT (ZERRSM ZERRLM ZERRHM ZERRALRM) SHARED"
  ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
  Exit 0
/*                                                    */
/*                                                    */
/*                                                    */
nextpos: Procedure
  parse arg string location source
  l_string = length(string)
  l_source = length(source)
  next_pos = 0
  do curr_pos = location to (l_source - l_string)
    next_pos = pos(string,source,curr_pos)
    if next_pos > 0 then return next_pos
    curr_pos = curr_pos + 1
  end
  return next_pos
/*                                                    */
/*                                                    */
/*                                                    */
prevpos: Procedure
  parse arg string location source
  l_string = length(string)
  l_source = length(source)
  prev_pos = 0
  do curr_pos = location to (l_source - l_string)
    prev_pos = pos(string,source,curr_pos)
    if prev_pos > 0 then return prev_pos
    curr_pos = curr_pos - 1
  end
  return prev_pos
/*                                                    */
/*                                                    */
/*                                                    */
int: Procedure
  parse arg yournumber
  parse var yournumber intpart "." decpart
  return intpart
