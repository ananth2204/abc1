/* rexx */
Rexx_BIORYTHM:
  rexxpgm_version = "01.01"           /* ver lev */

  PARSE ARG bioy bm bd
  ADDRESS ISPEXEC "CONTROL ERRORS Return"
  NUMERIC DIGITS 20

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Main_Routine:
  return_code = Initialization_Routine()
  IF (return_code = 0) THEN DO
    return_code = Process_Routine()
  END
  return_code = Termination_Routine()
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================

 Dataset:  REXX(BIORYTHM)
 Author:   Kenneth Tomiak
 Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
 Overview: Weave a biorythm chart of a person's emotional (E),
           Intelligence (I), and physical (P) levels.

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm When     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.01 20180505 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
         -     1) Handle start with no date to use today.
      20180407 2) Handle RC(12) on display panel.
               3) Stylize using Edit Macro @putktm:
                  Programming Using The Kenneth Tomiak Method.
               4) Stylize using Edit Macro $putktm:
                  Programming Using The Kenneth Tomiak Method.
               5) Stylize using the
                  Programming Using The Kenneth Tomiak Method.
----- -------- --------------------------------------------------------
01.00 20180111 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original base code.
----- -------- --------------------------------------------------------

-----------------------------------------------------------------------

STANDARD GLOBAL DISCLAIMER
--------------------------
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it. I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_Routine:
  return_code = 0
  m_2_pi = 2 * 3.14159265359

  dy.1 = 31 ; dy.2 = 28  ; dy.3 = 31  ; dy.4 = 30
  dy.5 = 31 ; dy.6 = 30  ; dy.7 = 31  ; dy.8 = 31
  dy.9 = 30 ; dy.10 = 31 ; dy.11 = 30 ; dy.12 = 31
  mnth.1  = 'Jan'
  mnth.2  = 'Feb'
  mnth.3  = 'Mar'
  mnth.4  = 'Apr'
  mnth.5  = 'May'
  mnth.6  = 'Jun'
  mnth.7  = 'Jul'
  mnth.8  = 'Aug'
  mnth.9  = 'Sep'
  mnth.10 = 'Oct'
  mnth.11 = 'Nov'
  mnth.12 = 'Dec'

  ZERRALRM = "NO"
  ZERRHELP = "*"
  ZERRSM = ""
  ZERRLM = ""
  bioc = "bioy"

  IF (bioy = "") THEN DO
    todays_date = DATE("S")
    PARSE VAR todays_date bioy +4 bm +2 bd +2 .
  END
  CALL Init_Bio
  CALL Build_Graph
  today_since = DATE("BASE")
  bioage = 0
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_Routine:

/* Validate the entered bith date. */
Validate_Input:
  IF (bioy < 1582 | bioy > 4747) THEN DO
    bioc = "bioy"
    ZERRSM = "Fix year"
    SIGNAL Show_Panel
  END
  IF (bm < 1 | bm > 12) THEN DO
    ZERRSM = "Fix month"
    bioc = "BM"
    SIGNAL Show_Panel
  END
  bm = bm + 0
  IF ( ( ( bioy // 4 ) = 0 ) && ,
     ( ( ( bioy // 100 ) <> 0 ) | ( bioy // 400 ) = 0 ) ) THEN DO
    dy.2   = 29 ;
  END
  ELSE DO
    dy.2 = 28
  END
  IF ( ( bd < 1 ) | ( bd > dy.bm ) ) THEN DO
    ZERRS< = "Fix day"
    bioc = "BD"
    SIGNAL Show_Panel
  END
  CALL Init_Bio
  CALL Calc_Bio
  CALL Build_Graph
  ZERRSM = LEFT("Another?",74)
  ZERRLM = LEFT("Go ahead and enter another birth date.",74)
  SIGNAL Show_Panel
  RETURN return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does cleanup before exiting.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_Routine:
  RETURN return_code

/* Initialize the graph with dots. */
Init_Bio:
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.0.x = "..."
  END
  bio.0.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.1.x = "..."
  END
  bio.1.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.2.x = "..."
  END
  bio.2.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.3.x = "..."
  END
  bio.3.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.4.x = "..."
  END
  bio.4.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.5.x = "..."
  END
  bio.5.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.6.x = "..."
  END
  bio.6.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.7.x = "..."
  END
  bio.7.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.8.x = "..."
  END
  bio.8.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.9.x = "..."
  END
  bio.9.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.10.x = "---"
  END
  bio.10.8 = "-|-"
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.11.x = "..."
  END
  bio.11.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.12.x = "..."
  END
  bio.12.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.13.x = "..."
  END
  bio.13.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.14.x = "..."
  END
  bio.14.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.15.x = "..."
  END
  bio.15.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.16.x = "..."
  END
  bio.16.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.17.x = "..."
  END
  bio.17.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.18.x = "..."
  END
  bio.18.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.19.x = "..."
  END
  bio.19.8 = ".|."
  x = 0
  DO WHILE (x < 15)
    x = x + 1 ; bio.20.x = "..."
  END
  bio.20.8 = ".|."
  RETURN

/* Build the graph. */
Build_Graph:
  bio0 = bio.0.1 bio.0.2 bio.0.3 bio.0.4 bio.0.5 bio.0.6 bio.0.7,
         bio.0.8 bio.0.9 bio.0.10 bio.0.11 bio.0.12 bio.0.13,
         bio.0.14 bio.0.15
  bio1 = bio.1.1 bio.1.2 bio.1.3 bio.1.4 bio.1.5 bio.1.6 bio.1.7,
         bio.1.8 bio.1.9 bio.1.10 bio.1.11 bio.1.12 bio.1.13,
         bio.1.14 bio.1.15
  bio2 = bio.2.1 bio.2.2 bio.2.3 bio.2.4 bio.2.5 bio.2.6 bio.2.7,
         bio.2.8 bio.2.9 bio.2.10 bio.2.11 bio.2.12 bio.2.13,
         bio.2.14 bio.2.15
  bio3 = bio.3.1 bio.3.2 bio.3.3 bio.3.4 bio.3.5 bio.3.6 bio.3.7,
         bio.3.8 bio.3.9 bio.3.10 bio.3.11 bio.3.12 bio.3.13,
         bio.3.14 bio.3.15
  bio4 = bio.4.1 bio.4.2 bio.4.3 bio.4.4 bio.4.5 bio.4.6 bio.4.7,
         bio.4.8 bio.4.9 bio.4.10 bio.4.11 bio.4.12 bio.4.13,
         bio.4.14 bio.4.15
  bio5 = bio.5.1 bio.5.2 bio.5.3 bio.5.4 bio.5.5 bio.5.6 bio.5.7,
         bio.5.8 bio.5.9 bio.5.10 bio.5.11 bio.5.12 bio.5.13,
         bio.5.14 bio.5.15
  bio6 = bio.6.1 bio.6.2 bio.6.3 bio.6.4 bio.6.5 bio.6.6 bio.6.7,
         bio.6.8 bio.6.9 bio.6.10 bio.6.11 bio.6.12 bio.6.13,
         bio.6.14 bio.6.15
  bio7 = bio.7.1 bio.7.2 bio.7.3 bio.7.4 bio.7.5 bio.7.6 bio.7.7,
         bio.7.8 bio.7.9 bio.7.10 bio.7.11 bio.7.12 bio.7.13,
         bio.7.14 bio.7.15
  bio8 = bio.8.1 bio.8.2 bio.8.3 bio.8.4 bio.8.5 bio.8.6 bio.8.7,
         bio.8.8 bio.8.9 bio.8.10 bio.8.11 bio.8.12 bio.8.13,
         bio.8.14 bio.8.15
  bio9 = bio.9.1 bio.9.2 bio.9.3 bio.9.4 bio.9.5 bio.9.6 bio.9.7,
         bio.9.8 bio.9.9 bio.9.10 bio.9.11 bio.9.12 bio.9.13,
         bio.9.14 bio.9.15
  bio10 = bio.10.1 bio.10.2 bio.10.3 bio.10.4 bio.10.5 bio.10.6 bio.10.7,
         bio.10.8 bio.10.9 bio.10.10 bio.10.11 bio.10.12 bio.10.13,
         bio.10.14 bio.10.15
  bio11 = bio.11.1 bio.11.2 bio.11.3 bio.11.4 bio.11.5 bio.11.6 bio.11.7,
         bio.11.8 bio.11.9 bio.11.10 bio.11.11 bio.11.12 bio.11.13,
         bio.11.14 bio.11.15
  bio12 = bio.12.1 bio.12.2 bio.12.3 bio.12.4 bio.12.5 bio.12.6 bio.12.7,
         bio.12.8 bio.12.9 bio.12.10 bio.12.11 bio.12.12 bio.12.13,
         bio.12.14 bio.12.15
  bio13 = bio.13.1 bio.13.2 bio.13.3 bio.13.4 bio.13.5 bio.13.6 bio.13.7,
         bio.13.8 bio.13.9 bio.13.10 bio.13.11 bio.13.12 bio.13.13,
         bio.13.14 bio.13.15
  bio14 = bio.14.1 bio.14.2 bio.14.3 bio.14.4 bio.14.5 bio.14.6 bio.14.7,
         bio.14.8 bio.14.9 bio.14.10 bio.14.11 bio.14.12 bio.14.13,
         bio.14.14 bio.14.15
  bio15 = bio.15.1 bio.15.2 bio.15.3 bio.15.4 bio.15.5 bio.15.6 bio.15.7,
         bio.15.8 bio.15.9 bio.15.10 bio.15.11 bio.15.12 bio.15.13,
         bio.15.14 bio.15.15
  bio16 = bio.16.1 bio.16.2 bio.16.3 bio.16.4 bio.16.5 bio.16.6 bio.16.7,
         bio.16.8 bio.16.9 bio.16.10 bio.16.11 bio.16.12 bio.16.13,
         bio.16.14 bio.16.15
  bio17 = bio.17.1 bio.17.2 bio.17.3 bio.17.4 bio.17.5 bio.17.6 bio.17.7,
         bio.17.8 bio.17.9 bio.17.10 bio.17.11 bio.17.12 bio.17.13,
         bio.17.14 bio.17.15
  bio18 = bio.18.1 bio.18.2 bio.18.3 bio.18.4 bio.18.5 bio.18.6 bio.18.7,
         bio.18.8 bio.18.9 bio.18.10 bio.18.11 bio.18.12 bio.18.13,
         bio.18.14 bio.18.15
  bio19 = bio.19.1 bio.19.2 bio.19.3 bio.19.4 bio.19.5 bio.19.6 bio.19.7,
         bio.19.8 bio.19.9 bio.19.10 bio.19.11 bio.19.12 bio.19.13,
         bio.19.14 bio.19.15
  bio20 = bio.20.1 bio.20.2 bio.20.3 bio.20.4 bio.20.5 bio.20.6 bio.20.7,
         bio.20.8 bio.20.9 bio.20.10 bio.20.11 bio.20.12 bio.20.13,
         bio.20.14 bio.20.15
  RETURN

/* Calculate the biorhythm values. */
Calc_Bio:
  birth_since = DATE("B",bioy||RIGHT("0"bm,2)||RIGHT("0"bd,2),"S")
  dydif = today_since - birth_since - 8
  bioage = dydif + 8
  x = 0
  DO WHILE (x < 15)
    x = x + 1
    dydif = dydif + 1
    p = 20 - Int(((Sine((dydif / 23) * m_2_pi)) * 10) + 10)
    bio.p.x = OVERLAY('p',bio.p.x,1,1)
    e = 20 - Int(((Sine((dydif / 28) * m_2_pi)) * 10) + 10)
    bio.e.x = OVERLAY('e',bio.e.x,2,1)
    i = 20 - Int(((Sine((dydif / 33) * m_2_pi)) * 10) + 10)
    bio.i.x = OVERLAY('i',bio.i.x,3,1)
  END /* DO WHILE x < 15 */
  RETURN

/* Display the panel. */
Show_Panel:
  IF (ZERRSM <> "") THEN DO
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
  END
  ADDRESS ISPEXEC "DISPLAY PANEL(BIORYTHM)"
  panel_rc = RC
  IF (panel_rc = 12) THEN DO
    SAY "DEMO.PANELS does not seem to be allocted to ISPPLIB."
    SIGNAL Exit_Main
  END
  IF (panel_rc <> 0) THEN DO
    SIGNAL Exit_Main
  END
  ZERRSM = LEFT("Another?",74)
  ZERRLM = LEFT("Go ahead and enter another birth date.",74)
  SIGNAL Validate_Input

/* No reason to keep running, so exit. */
Exit_Main:
  RETURN return_code

/* Find the Sine of t (usual series expansion). */
Sine:
  PARSE ARG t
  pi =  3.1415926535897932
  t = t // (2 * pi)  /* Adjust between pi and -pi, for convergence. */
  IF (ABS(t) > pi) THEN DO
    t = t - SIGN(t) * 2 * pi
  END
  f = t
  y = t
  t = t ** 2
  old = y
  DO n = 2 BY 2
    f = -f * t / (n * (n + 1))
    y = y + f
    IF (y = old) THEN DO
      LEAVE
    END
    old = y
  END /* do n = 2 by 2 */
  RETURN y

/* Truncate whole number to an Integer. */
Int:
  PARSE ARG ival
  PARSE VAR ival RESULT '.' trailer
  RETURN RESULT

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
