In 1998 I, along with most of the rest of the world, was thinking
about the approach of the year 2000 and the implications that
held for incompatible two digit years.  I brought together some
routines I had written earlier in several languages (COBOL,
BASIC, and Assembler) and the result was this group of Assembler
subroutines that can be used to perform any required date format
conversion:

    Y2KATOG.ALC         Astronomical number to Gregorian
    Y2KCONV.ALC         2 digit year to 4 digit year - various
                        formats
    Y2KDFMT.ALC         Gregorian date to various output formats
    Y2KDOWN.ALC         Day of week number for Gregorian date
    Y2KESTR.ALC         Easter date for given year
    Y2KGETD.ALC         Return system date in various formats
    Y2KGTOA.ALC         Gregorian to astronomical number
    Y2KGTOJ.ALC         Gregorian to Julian (day of year)
    Y2KJTOG.ALC         Julian (day of year) to Gregorian
    Y2KLAGE.ALC         Large span age between Gregorian dates
    Y2KLEAP.ALC         Determines if given year is a leap year
    Y2KPROJ.ALC         Derives target date forward/back from
                        given date
    Y2KSAGE.ALC         Small span age between Gregorian dates
    Y2KTDOW.ALC         Derives target date for given date and
                        day of week

For several financial applications I had written in the past, I
required a date record to be provided from which interest would
be calculated either from the prior run date to the current run
date or from the current run date forward to the next run date.
I wrote a program that utilized the date routines above to derive
such a date record using the current system date and a file of
rules to specify the observed holidays:

    RUNDATES.CBL        Program to build run dates record
    RUNDATES.CPY        Copy book for run dates record

In addition to the date routines, I wrote a COBOL program to scan
source code for likely date references.  The program is based
upon the design of a BASIC program that was placed in the public
domain by the National Institute of Standards.  The program is
driven by a glossary table read in at run time.

    Y2KSCAN.CBL
