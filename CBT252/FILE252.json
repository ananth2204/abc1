{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011601000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1293292, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 16, "INMDSNAM": "CBT.V500.FILE252.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1293292, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1293292, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE252.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x15\\x0c'", "DS1TRBAL": "b'&\\x84'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xbe\\x00\\x01\\x01\\xbf\\x00\\x07\\x00\\x16'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x96\\x00O\\x01\\x00)\\x9f\\x114\\x00\"\\x00\"\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1996-01-04T00:00:00", "modifydate": "2000-10-25T11:34:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "WSBG"}, "text": "This is the SOURCE library for Jeff Kaplan's collection of software.\n\nThis collection is currently in the condition of 'hodge-podge',\nhowever, there is much useful material here.\n\n    File 252 contains Jeff Kaplan's   SOURCE   library\n    File 253 contains Jeff Kaplan's   EXEC     library\n    File 254 contains Jeff Kaplan's   CNTL     library\n    File 255 contains Jeff Kaplan's   ISPPLIB  library\n    File 256 contains Jeff Kaplan's   ISPTLIB  library\n\nNothing is GUARANTEED to work anywhere else.  The user will have to\n-------\n              \"look and try\".......    However, there is much good\n              code in this collection, including numerous direct\n              calls to SVC 26.\n\n   I am (sort of) an intermediary between Jeff Kaplan and the public.\nHowever, his direct work phone is:  215-633-4614.\n\n   If you can't reach Jeff at work, please try:\n\n          Sam Golob\n          P.O. Box 906\n          Tallman, New York 10982-0906\n\n          sbgolob@attglobal.net\n\nNote:  Jeff's CNTL library also contains Assembler Source and REXX\n       execs.  Please explore ALL files in this collection.  As of\n       this cut of the tape, I have not sifted through all of Jeff's\n       stuff and straightened it out.  There may also be some\n       duplication of source code or REXX execs.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$#DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x952_\\x00\\x96\\x00O\\x18#\\x00P\\x00%\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-11-21T00:00:00", "modifydate": "1996-01-04T18:23:00", "lines": 80, "newlines": 37, "modlines": 0, "user": "SBGCSC"}, "text": " This is a partial list of some of the things in this collection.\n\n\n     ABENDWTO  -  Somewhat shop-dependent code which shows how\n                  to scan for abends and return codes from\n                  previous steps in the same job.  Then, if\n                  there is a bad return code or abend, save all\n                  the temporary files.\n\n     ABINDEX   -  Shop-dependent.  Shows how to create hiperspace\n                  etc.\n\n     B2C       -  REXX binary-to-character conversion function.\n\n     CATEDIT   -  Update an ICF Catalog in-place using QSAM\n                  PUTX.  Purpose is to convert all files\n                  cataloged to 3480's or 3490's into 3490e's.\n                  (Interesting code.  Has to be authorized nowadays.)\n\n     DYNADSN   -  Dynamically alters dsnames in succeeding\n                  steps of a job.\n\n     DYNATEST  -  JCL to test DYNADSN.\n\n     FINDEXEC  -  EXEC to find where an EXEC is.\n\n     FINDLLIB  -  EXEC to find an ISPLLIB member.\n\n     FINDLOAD  -  EXEC to find a load module in the link list.\n\n     FINDMLIB  -  EXEC to find an ISPF message member.\n\n     FINDPLIB  -  Exec to find an ISPF panel.\n\n     FINDSLIB  -  Exec to find an ISPF skeleton.\n\n     FINDTLIB  -  Exec to find an ISPF table.\n\n     FREEALL   -  TSO Free All command\n\n     GRSUSER   -  TSO Command that can be used from an ISPF\n                  3.4 list to determine who has the file.\n\n     IGDACSMC  -  SMS ACS management class exit that can\n                  dynamically change ACS variables.\n\n     LINKLIST  -  Lists libraries in the link list.\n\n     LPAR      -  (Modify to work in another shop)\n                  Tells CPUID, etc.\n\n     RACFUSER  -  TSO Command to display some RACF user data.\n\n     RACFUSR1  -  Similar to RACFUSER.\n\n     SLEEPSRC  -  SLEEP command from REXX.\n\n     TIMEOUT   -  TSO/E Command to dynamically set TIME=1440\n                  for your id.\n\n     VMFCLEAR  -  TSO/E Clear Screen - like VM.\n\n     XDSL      -\n\n     XDSLSRC   -  External 3.4.  But shop dependent.  See\n                  catalog access code in this member.  Direct\n                  SVC 26 calls.\n\n     XLIBALLD  -  TSO doesn't support SUBSYS= accesses that JCL\n                  supports.  This allows these allocations in TSO.\n                  Used for allocation LIBRARIAN datasets on TSO.\n\n     XLIBALLS  -\n\n     XLIBMEML  -  \"Member Exists\" REXX function.\n\n     XLIBMEMX  -  \"Member Exists\" REXX function.\n\n     XLISTA    -  LISTALC with a better format.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ABENDWTO": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01L\\x00\\x00\\x00\\x93\\x06\\x9f\\x00\\x93(O\\t4\\x01\\xc6\\x00c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.76", "flags": 0, "createdate": "1993-03-10T00:00:00", "modifydate": "1993-10-11T09:34:00", "lines": 454, "newlines": 99, "modlines": 0, "user": "TECH110"}, "text": "//TECH110M JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//S EXEC ASMHCL\n//C.SYSLIB DD\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN DD *\nABENDWTO TITLE 'PRODUCTION JOB ABEND PROCESSOR'\nABENDWTO CSECT ,\n         SYSSTATE ASCENV=P PRIMARY ASC MODE\nABENDWTO AMODE 31\nABENDWTO RMODE 24\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14\n         LA    RA,0(,RF) SETUP ADDRESSING REGS\n         USING ABENDWTO,RA\n         L     R0,=A(WORKLEN)\n         LR    R1,R0 MAXREQ SIZE\n         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(BELOW,ANY)  WORKAREA\n         LA    RD,0(,R1) PTR TO MY SAVEAREA\n         USING WORKAREA,RD\n         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK\n         USING PSA,R0\n         L     R3,PSATOLD TCB\n         DROP  R0\n         USING TCB,R3\n         L     R2,TCBTIO TIOT\n         USING TIOT1,R2\n         MVC   JOBNAME(8),TIOCNJOB SAVE JOBNAME\n         SLR   R4,R4\n         ICM   R4,7,TCBJSCBB JSCB\n         DROP  R3\n         USING IEZJSCB,R4\n         SLR   R5,R5\n         ICM   R5,7,JSCSCTP TTR OF CURRENT SCT\n         LR    RF,R5 SAVE FOR SCT SCAN LATER\n         L     R7,JSCBJCT JCT PER JOB\n         USING INSMSCT,R5\n         USING INJMJCT,R7\n         LA    R5,16(,R5) BYPASS QMGR PREFIX\n         LA    R7,16(,R7) BYPASS QMGR PREFIX\n         SLR   R6,R6\n         ICM   R6,7,SCTXBTTR SCTX\n         DROP  R5 , R5 IS CURRENT SCT PTR; RF IS PRIOR TO ADJUSTMENT\n         USING SCTXIN,R6\n         LA    R6,16(,R6) BYPASS QMGR PREFIX\n         CLI   SCTXPARM,X'00' ANY PARM ON EXEC STMT\n         BE    TERMEXIC NO, OLD STYLE CALL; FORCE ABEND\n         CLC   =C'FAILRC',SCTXPARM VALIDITY CHECK\n         BNE   PARMERR NG\n         CLI   SCTXPARM+6,C'0' SIMPLE VALID CHECK\n         BL    PARMERR NG\n         CLI   SCTXPARM+7,C'0' SIMPLE VALID CHECK\n         BL    PARMERR NG\n         CLI   SCTXPARM+8,X'00' MUST BE\n         BNE   PARMERR NG\n         PACK  DWORK1(8),SCTXPARM+6(2) CONVERT TO BINARY\n         CVB   R0,DWORK1 AND THEN SAVE\n         ST    R0,PARMRC SAVE HERE\n         DROP  R6\n         SLR   R8,R8 ACQUIRE JOBS FIRST SCT\n         ICM   R8,7,JCTSDKAD SVA OF FIRST SCT; FORWARD CHAIN\nSCTSCAN  LA    R8,16(,R8) SKIP QMGR PREFIX\n         USING INSMSCT,R8\n         CLM   RF,7,SCTANSCT IS THIS PREVIOUS STEP TO US\n         BE    CHECKRC YES; GO CHECK RETURN CODES\n         ICM   R8,7,SCTANSCT NEXT SCT IN CHAIN\n         BNZ   SCTSCAN CONTINUE\n         WTO   TEXT=ABMSG5,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 24,DUMP,STEP,USER , SHOULD NOT OCCUR\nCHECKRC  SLR   R6,R6\n         ICM   R6,7,SCTXBTTR SCTX\n         USING SCTXIN,R6\n         LA    R6,16(,R6) BYPASS QMGR PREFIX\n         ICM   R0,15,SCTXABCC DID THIS STEP ABEND\n         BNZ   RESTART YES\n         DROP  R6\n         CLC   SCTSEXEC(2),PARMRC+2 COMPARE RETURN CODES\n         BL    EXIT SUCCESSFUL EXECUTION\n         OI    FLAGS,X'80' INDICATE CC FAILURE\nRESTART  LA    R9,TIOELNGH PTR TO DD ENTRIES\n         MVC   ABENDSTP(8),SCTSNAME SAVE STEP NAME\n         CLI   ABENDSTP,C' ' ANY NAME\n         BNE   FILLPST YES\n         MVC   ABENDSTP(8),=CL8'????????'\nFILLPST  MVC   ABENDPST(8),SCTSCLPC SAVE NAME OF STEP CALLED PROC\n         CLI   ABENDPST,C' ' ANY NAME\n         BNE   FILLPGM YES\n         MVC   ABENDPST(8),=CL8'????????'\nFILLPGM  MVC   ABENDPGM(8),SCTPGMNM SAVE PROGRAM NAME\nTIOTLOOP SLR   RB,RB WORK\n         ICM   RB,1,0(R9) ENTRY LEN\n         BZ    TERMEXIT END OF TIOT DD ENTRIES\n         CLC   TIOEDDNM-TIOELNGH(4,R9),=C'SAVE' SAVE REQUIRED\n         BE    SAVEDDNM YES\nTIOTNEXT LA    R9,0(RB,R9) NEXT ENTRY\n         B     TIOTLOOP CONTINUE\nSAVEDDNM MVC   DDNAME(8),TIOEDDNM-TIOELNGH(R9) SAVE THIS DDNAME\n         NI    FLAGS,X'FF'-X'60' RESET EOV SCAN FLAGS\n         L     RC,=A(MODELDCB) PTR\n         MVC   INPUTDCB(DCBLEN),0(RC)    POSITION BELOW LINE DCB\n         LA    RC,INPUTDCB MAP\n         USING IHADCB,RC\n         MVC   DCBDDNAM(8),DDNAME\n         MVC   EXLSTL(8),EXLSTM POSITION EXLST\n         LA    R0,JFCB PER EXLST REQ\n         STCM  R0,7,EXLSTL+1 ...\n         MVC   EODADL(4),EODADM POSITION EODAD EXIT\n         LA    R0,EODADL 24 BIT PTR\n         STCM  R0,7,DCBEODA ...\n         LA    R0,EXLSTL UPDATE DCB WITH EXLST PTR\n         STCM  R0,7,DCBEXLSA ...\n         MVC   RDJFCBL(RDJFCBML),RDJFCBM POSITION RDJFCB PARAM LIST\n         RDJFCB ((RC)),MF=(E,RDJFCBL)\n         LTR   RF,RF CHECK\n         BNZ   FRDJFCB ...\n         LA    RF,JFCB CHECK DSNAME\n         USING INFMJFCB,RF\n         TM    JFCBIND2,JFCTEMP TEMP DATASET\n         BNO   TIOTNEXT NO, SKIP THIS FILE\n         DROP  RF\n         OPEN  ((RC),INPUT),MODE=31 , FILL DEB\n         LTR   RF,RF CHECK\n         LR    RF,RC DCB PTR\n         BNZ   FOPEN   ...\n         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL\n         BZ    FOPEN NO\n         XC    TRACKSUM,TRACKSUM TOTAL TRACK COUNT\nEOVLOOP  TM    FLAGS,X'20' EODAD ACTIVE\n         BO    EOVCLOSE YES, TERM SCAN\n         SLR   RB,RB WORK\n         ICM   RB,7,DCBDEBA DEB PTR\n         USING DEBBASIC,RB\n         TM    DEBDEBID,X'0F' VERIFY THIS IS A DEB\n         BNO   FDEB LOGIC ERROR\n         SLR   RF,RF EXTENT COUNT\n         IC    RF,DEBNMEXT EXTENTS COUNT\n         LTR   RF,RF VALIDATE\n         BZ    FDEB ERROR\n         LA    RB,32(,RB) PTR TO DASD SECTION\n         DROP  RB\n         USING DEBDASD,RB\n         SLR   RE,RE SUM UP 3390 TRACKS REQUIRED\n         OI    FLAGS,X'40' WERE SCANNING DEB NOW\nDEBLOOP  AH    RE,DEBNMTRK TRACK COUNT PER EXTENT\n         LA    RB,16(,RB) LOOP\n         BCT   RF,DEBLOOP ...\n         DROP  RB\n         USING DEBACSMD,RB\n         L     RF,TRACKSUM ACCUM ACROSS ALL VOLS OF MULTIVOL FILE\n         AR    RF,RE ...\n         ST    RF,TRACKSUM SAVE TOTAL TRACK COUNT\n         CLC   DEBVOLSQ+1(1),DEBVOLNM+1 AT END OF VOLUMES\n         BNL   EOVCLOSE YES\n         FEOV  ((RC)) EOV WILL UPDATE NEXT VOLS EXTENTS\n         B     EOVLOOP LOOP THROUGH ALL VOLUMES\n         DROP  RB\nEOVCLOSE MVC   OUTRECFM+6(1),DCBRECFM COPY RECFM FROM INPUT TO SVC99\n         MVC   OUTLRECL+6(2),DCBLRECL COPY LRECL FROM INPUT TO SVC99\n         NI    FLAGS,X'FF'-X'60' RESET EOV SCAN FLAGS\n         CLOSE ((RC)),MODE=31 , CLOSE AFTER EOV PROCESSING\n         L     RF,=A(PFREEP1) SWITCH TO 24 BIT MODE\n         L     RF,0(,RF)     SWITCH TO 24 BIT MODE\n         BASSM R3,RF ...\n         B     TRKSUM CONTINUE\nFREEP1   FREEPOOL ((RC)) , RELEASE SYSTEM ACQUIRED BUFFER POOL\n         BSM   R0,R3 RESTORE ...\nTRKSUM   L     R1,TRACKSUM ROUND TRACK SUM UP TO MULTI OF 8\n         LA    R1,7(,R1) ...\n         SRL   R1,3\n         SLL   R1,3\n         CH    R1,=H'3200' TRK CTR GT THAN THIS\n         BNL   VLCNT8 VOLCNT OF 8\n         CH    R1,=H'1600' TRK CTR GT THAN THIS\n         BNL   VLCNT4 VOLCNT OF 4\n         CH    R1,=H'800' TRK CTR GT THAN THIS\n         BNL   VLCNT2 VOLCNT OF 1\n         LA    R0,1 VOLC\n         STC   R0,OUTVOLC+6 ...\n         B     STORSPAC CONTINUE\nVLCNT2   LA    R0,2 VOLC\n         STC   R0,OUTVOLC+6 ...\n         SRL   R1,1 DIVIDE TRACK COUNT BY 2\n         B     STORSPAC CONTINUE\nVLCNT4   LA    R0,4 VOLC\n         STC   R0,OUTVOLC+6 ...\n         SRL   R1,2 DIVIDE TRACK COUNT BY 4\n         B     STORSPAC CONTINUE\nVLCNT8   LA    R0,8 VOLC\n         STC   R0,OUTVOLC+6 ...\n         SRL   R1,3 DIVIDE TRACK COUNT BY 8\nSTORSPAC STCM  R1,7,OUTPRIM+6 STORE IN DYNALLOC SPACE OUTPUT PARM\n         LA    RF,JFCB CHECK DSNAME\n         USING INFMJFCB,RF\n         MVC   OUTDSN+6(44),=CL44'RESTART.' MOVE RESTART HLQ TO DSN\n         MVC   OUTDSN+14(8),JOBNAME POSITION JOBNAME\n         LA    R1,OUTDSN+15 LOOK FOR NEXT POSITION\nSTAMP1   CLI   0(R1),C' ' SCAN\n         BE    POSTIME GO POSITION TIMESTAMP\n         LA    R1,1(,R1) NEXT\n         B     STAMP1 ...\nPOSTIME  MVC   0(2,R1),=C'.D' START DATE AND TIME\n         MVC   2(14,R1),JFCBDSNM+3 TIMESTAMP\n         LA    RE,JFCBDSNM+43 SCAN BACKWARDS LOOKING FOR LASTQUAL\nQUALSCAN CLI   0(RE),C'.' SCAN BACKWARDS\n         BE    QUALPER YES\n         BCT   RE,QUALSCAN LOOP\nQUALPER  MVC   16(8,R1),1(RE) MOVE TO NEW DSNAME\n         MVC   LOGDSN1(8),1(RE) FOR MESSAG TO OPER\n         MVC   LOGDSN2(44),OUTDSN+6 ...\n         LA    RE,OUTDSN+49 SCAN BACKWARDS TO DETRMINE TRUE DSNLEN\nLOOPDLEN CLI   0(RE),C' ' END\n         BNE   CALCDLEN GO CALC LEN\n         BCT   RE,LOOPDLEN LOOP\nCALCDLEN LA    R1,OUTDSN+5 ADJUSTED DSN START\n         SLR   RE,R1 HAVE TRUE LEN NOW\n         STCM  RE,3,OUTDSN+4 SAVE IN SVC99 PARMLIST\n         DROP  RF\n         XC    OUTRB+2(2),OUTRB+2   CLEAR\n         XC    OUTRB+4(4),OUTRB+4   CLEAR\n         XC    OUTRB+12(8),OUTRB+12   CLEAR\n         MVC   ABMSG4P(44),OUTDSN+6 SAVE DSN FOR MSG\n         LA    R1,OUTRBPTR POINT TO SVC 99 PARM\n         DYNALLOC , REQUEST SVC 99 SERVICES\n         LTR   RF,RF FAILURE\n         BNZ   FSVC99 YES\n         OPEN  ((RC),INPUT),MODE=31 , FILL DEB\n         LTR   RF,RF CHECK\n         LR    RF,RC DCB PTR\n         BNZ   FOPEN   ...\n         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL\n         BZ    FOPEN NO\n         MVC   OUTDCBL(OUTDCBML),OUTDCBM MOVE OUTPUT DCB MODEL\n         LA    RC,OUTDCBL OPEN\n         OPEN  ((RC),OUTPUT),MODE=31 , OUTPUT DCB\n         LTR   RF,RF CHECK\n         LR    RF,RC DCB PTR\n         BNZ   FOPEN   ...\n         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL\n         BZ    FOPEN NO\n         LR    RB,RC OUTPUT DCB\n         LA    RC,INPUTDCB RESTORE\n         L     RF,=A(PGETPUT) SWITCH TO 24 BIT MODE\n         L     RF,0(,RF)     SWITCH TO 24 BIT MODE\n         BASSM R3,RF ...\n         B     CLOSGP CONTINUE\nGETPUT   LA    R0,BUFFER PER GET\n         GET   ((RC)),((0)) COPY DATASET\n         LH    R0,DCBLRECL COPY LRECL TO OUTPUT DCB FOR RECFM=U\n         DROP  RC\n         USING IHADCB,RB\n         STH   R0,DCBLRECL ...\n         DROP  RB\n         USING IHADCB,RC\n         LA    R0,BUFFER PER PUT\n         PUT   ((RB)),((0))  ...\n         B     GETPUT LOOP\nEODAD    OI    FLAGS,X'20' EODAD ACTIVE FLAG\n         TM    FLAGS,X'40' ARE WE IN EOV SCAN CODE\n         BO    EOVLOOP YES\n         BSM   R0,R3 RESTORE ...\nCLOSGP   CLOSE ((RB),FREE,(RC),FREE),MODE=31 , RELEASE\n         WTO   TEXT=LOGMSG,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         L     RF,=A(PFREEP2) SWITCH TO 24 BIT MODE\n         L     RF,0(,RF)     SWITCH TO 24 BIT MODE\n         BASSM R3,RF ...\n         B     NTIOT  CONTINUE\nFREEP2   FREEPOOL ((RB)) , RELEASE SYSTEM ACQUIRED BUFFER POOL\n         FREEPOOL ((RC)) , RELEASE SYSTEM ACQUIRED BUFFER POOL\n         BSM   R0,R3 RESTORE ...\nNTIOT    SLR   RB,RB WORK\n         ICM   RB,1,0(R9) ENTRY LEN FOR TIOT\n         B     TIOTNEXT PROCESS NEXT TIOT DD ENTRY\nTERMEXIC MVC   ABENDJOC(8),JOBNAME INTO OLD MSG\n         SLR   R0,R0 CLEAR AS PER WTO\n         WTO   TEXT=ABENDMSC,ROUTCDE=(2),DESC=(11)\n         ABEND 0,,STEP,USER\nTERMEXIT MVC   ABENDJOB(8),JOBNAME INTO MSG\n         SLR   R0,R0 CLEAR AS PER WTO\n         WTO   TEXT=ABENDMSG,ROUTCDE=(2),DESC=(11)\n         TM    FLAGS,X'80' PRIOR ABEND IN PROGRESS\n         BNO   EXIT YES\n         ABEND 0,,STEP,USER\nEXIT     L     R0,=A(WORKLEN) LEN\n         LR    R1,RD\n         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE SAVEAREA\n         SLR   RF,RF RC=0\n         PR    , RESTORE CALLERS STATUS\n         DROP  RC\nPARMERR  WTO   TEXT=ABMSG1,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 28,DUMP,STEP,USER\nFRDJFCB  WTO   TEXT=ABMSG2,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 32,DUMP,STEP,USER\n         USING IHADCB,RF\nFOPEN    MVC   ABMSG3P(8),DCBDDNAM SAVE FOR MSG\n         DROP  RF\n         WTO   TEXT=ABMSG3,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 36,DUMP,STEP,USER\nFDEB     WTO   TEXT=ABMSG2,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 40,DUMP,STEP,USER\nFSVC99   WTO   TEXT=ABMSG4,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 44,DUMP,STEP,USER\nDCBABEND OI    FLAGS,X'10' INDICATE DCB ABEND TAKEN\n         STM   RE,R1,TEMPSAVE SAVE SOME REGS\n         WTO   TEXT=ABMSG6,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         LM    RE,R1,TEMPSAVE SAVE SOME REGS\n         SLR   RF,RF CONTINUE\n         BR    RE RETURN\nSYNADX   OI    FLAGS,X'10' INDICATE DCB ABEND TAKEN\n         STM   RE,R1,TEMPSAVE SAVE SOME REGS\n         WTO   TEXT=ABMSG7,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         LM    RE,R1,TEMPSAVE SAVE SOME REGS\n         SLR   RF,RF CONTINUE\n         BR    RE RETURN\nOUTDCBM  DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),BUFNO=32\nOUTDCBML EQU   *-OUTDCBM LEN\nRDJFCBM  RDJFCB 0,MF=L\nRDJFCBML EQU   *-RDJFCBM\nEXLSTM   DC    X'07',AL3(0) JFCB PTR\n         DC    X'91',AL3(DCBABEND) DCB ABEND EXIT\nTRACKSUM DC    F'0' ACCUM TRACK COUNT\nPGETPUT  DC    A(GETPUT) ADDRESS OF AMODE 24 ROUTINE\nPFREEP1  DC    A(FREEP1) ADDRESS OF AMODE 24 ROUTINE\nPFREEP2  DC    A(FREEP2) ADDRESS OF AMODE 24 ROUTINE\nEODADM   B     EODAD EOF FOR SEQ INPUT\nOUTRBPTR DC    A(OUTRB+X'80000000') SVC 99 PARAM LIST\nOUTRB    DC    X'14',AL1(S99VRBAL),X'0000',A(0,OUTTUPL,OUTRBX,0)\nOUTRBX   DC    C'S99RBX',AL1(S99RBXVR),AL1(S99EIMSG+S99EWTP)\n         DC    AL1(0),AL1(0),AL1(S99XWARN),AL1(0)\n         DC    AL4(0),AL4(0),AL4(0),AL4(0),AL4(0),AL4(0)\nOUTTUPL  DC    A(OUTDDN)\n         DC    A(OUTDSN)\n         DC    A(OUTSTAT)\n         DC    A(OUTNDISP)\n         DC    A(OUTADISP)\n         DC    A(OUTTRK)\n         DC    A(OUTPRIM)\n         DC    A(OUTRLSE)\n         DC    A(OUTLRECL)\n         DC    A(OUTVOLC)\n         DC    A(OUTSC)\n         DC    A(OUTDC)\n         DC    A(OUTMC)\n         DC    A(OUTRECFM+X'80000000')\nOUTDDN   DC    0H'0',AL2(DALDDNAM,1,6),C'OUTPUT' DDNAME\nOUTDSN   DC    0H'0',AL2(DALDSNAM,1,*-*),CL44' ' DSN\nOUTSTAT  DC    0H'0',AL2(DALSTATS,1,1),X'04'   DISP=NEW\nOUTNDISP DC    0H'0',AL2(DALNDISP,1,1),X'02'   DISP=CATLG\nOUTADISP DC    0H'0',AL2(DALCDISP,1,1),X'02'   DISP=CATLG\nOUTTRK   DC    0H'0',AL2(DALTRK,0)  TRACK REQUEST\nOUTPRIM  DC    0H'0',AL2(DALPRIME,1,3),AL3(*-*)  PRIMARY SPACEREQ\nOUTRLSE  DC    0H'0',AL2(DALRLSE,0)  RLSE  REQUEST\nOUTLRECL DC    0H'0',AL2(DALLRECL,1,2),AL2(*-*)  LRECL\nOUTVOLC  DC    0H'0',AL2(DALVLCNT,1,1),AL1(*-*)  VOLUME COUNT\nOUTSC    DC    0H'0',AL2(DALSTCL,1,8),C'PREALLOC' STORCLAS\nOUTDC    DC    0H'0',AL2(DALDACL,1,7),C'SMSUSER' DATACLAS\nOUTMC    DC    0H'0',AL2(DALMGCL,1,4),C'TEMP'     MGMTCLAS\nOUTRECFM DC    0H'0',AL2(DALRECFM,1,1),AL1(*-*)  RECFM\nABENDMSC DC    AL2(ABENDMCE-ABENDMSC-2),C'JOB '\nABENDJOC DC    C'XXXXXXXX HAS ABENDED OR HAS TERMINATED WITH A FAILING X\n               RETURN CODE.'\nABENDMCE EQU   *\nABENDMSG DC    AL2(ABENDMSE-ABENDMSG-2),C'JOB '\nABENDJOB DC    C'XXXXXXXX PROCSTEP '\nABENDPST DC    C'XXXXXXXX STEPNAME '\nABENDSTP DC    C'XXXXXXXX PROGRAM '\nABENDPGM DC    C'XXXXXXXX HAS ABENDED OR HAS TERMINATED WITH A FAILING X\n               RETURN CODE.'\nABENDMSE EQU   *\nLOGMSG   DC    AL2(LOGMSGE-LOGMSG-2),C'DATASET &&&&'\nLOGDSN1  DC    C'XXXXXXXX SAVED AS '\nLOGDSN2  DC    CL44' ',C'.'\nLOGMSGE  EQU   *\nABMSG1   DC    AL2(ABMSG1E-ABMSG1-2)\n         DC    C'EXEC JCL STATEMENT PARM IS INVALID.'\nABMSG1E  EQU   *\nABMSG2   DC    AL2(ABMSG2E-ABMSG2-2)\n         DC    C'INTERNAL LOGIC ERROR. NOTIFY TECH SUPPORT.'\nABMSG2E  EQU   *\nABMSG3   DC    AL2(ABMSG3E-ABMSG3-2)\n         DC    C'OPEN FAILURE FOR DDNAME: '\nABMSG3P  DC    CL8' '\nABMSG3E  EQU   *\nABMSG4   DC    AL2(ABMSG4E-ABMSG4-2)\n         DC    C'DYNAMIC ALLOCATION FAILURE FOR DSNAME: '\nABMSG4P  DC    CL44' '\nABMSG4E  EQU   *\nABMSG5   DC    AL2(ABMSG5E-ABMSG5-2)\n         DC    C'ABENDWTO CANNOT BE INVOKED AS THE FIRST STEP OF A JOB'\nABMSG5E  EQU   *\nABMSG6   DC    AL2(ABMSG6E-ABMSG6-2)\n         DC    C'EMPTY DATASET OR DCB RECFM/LRECL/BLKSZ INVALID'\nABMSG6E  EQU   *\nABMSG7   DC    AL2(ABMSG7E-ABMSG7-2)\n         DC    C'EMPTY DATASET OR I/O ERROR READING INPUT DATASET'\nABMSG7E  EQU   *\nFLAGS    DC    X'00' X80 IF CONDCODE FAILURE ELSE ABEND\n*                    X40 EOV DEB SCAN IN PROGRESS\n*                    X20 EOV EODAD PRESENT\n*                    X10 DCB ABEND COND INDICATED\n         LTORG\nMODELDCB DCB   DDNAME=SAVE????,DSORG=PS,MACRF=(GM),EXLST=EXLSTM,       X\n               BUFNO=32,SYNAD=SYNADX\nDCBLEN   EQU   *-MODELDCB\nWORKAREA DSECT\nSAVEAREA DS    9D LINKAGE\nDWORK1   DS    D\nDWORK2   DS    D\nJOBNAME  DS    CL8\nDDNAME   DS    CL8\nTEMPSAVE DS    4F SOME REG SAVE\nJFCB     DS    CL176\nPARMRC   DS    F\nINPUTDCB DCB   DDNAME=SAVE????,DSORG=PS,MACRF=(GM),EXLST=EXLSTM,       X\n               BUFNO=32,SYNAD=SYNADX\nOUTDCBL  DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),BUFNO=32\nEXLSTL   DC    X'07',AL3(0) JFCB PTR\n         DC    X'91',AL3(DCBABEND) DCB ABEND EXIT\nRDJFCBL  RDJFCB 0,MF=L\nEODADL   B     *-* FILL IN WITH PROPER ADDRESS\nBUFFER   DS    32760C MAX BUFFER\nWORKLEN  EQU   *-WORKAREA\n         IHAPSA\n         IKJTCB\nIEFTIOT1 DSECT\n         IEFTIOT1\n         IEFASCTB\n         IEFAJCTB\n         DSECT\n         IEFJFCBN\n         IEZJSCB\n         IEFSCTX\n         DCBD  DSORG=PS\n         IEZDEB\n         IEFZB4D0\n         IEFZB4D2\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.PROD.BATCH.LOADLIB(ABENDWTO),UNIT=,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABINDEX": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&\\x00\\x00\\x00\\x930\\x9f\\x00\\x933\\x7f\\x12\\x14\\x00\\xdc\\x01M\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.38", "flags": 0, "createdate": "1993-11-05T00:00:00", "modifydate": "1993-12-03T12:14:00", "lines": 220, "newlines": 333, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//ASM EXEC ASMHCL\n//C.SYSIN DD *\nBINDEX   TITLE 'BIT MANIPULATION AND INDEX SUBROUTINE'\nBINDEX   CSECT ,\n         SYSSTATE ASCENV=P PRIMARY ASC MODE\nBINDEX   AMODE 31\nBINDEX   RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nARA      EQU   10\nARB      EQU   11\nARC      EQU   12\nARD      EQU   13\nARE      EQU   14\nARF      EQU   15\n         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14\n         LAE   RA,0(,RF) SETUP ADDRESSING REGS GR/AR PRMY SPACE MODE\n         USING BINDEX,RA\n         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'\n         LA    RD,SAVEAREA PTR TO MY SAVEAREA\n         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK\n         TM    0(R1),X'80' MAKE SURE ONLY 1 PARM PASSED\n         BZ    PARMERR FAILURE\n         L     RB,0(,R1) PASSED PARM PTR\n         LA    RC,1(,RB) RETURN CODE PTR\n         LA    R3,4(,RC) DATASPACE PTR\n         LA    R9,12(,R3) OPTIONAL FUNCTION PARM\n         MVC   DWORK1(1),0(RB) FUNCTION CODE\n         TR    DWORK1(1),FUNCTAB\n         SLR   RF,RF\n         IC    RF,DWORK1\n         B     *+4(RF)\n         B     INVPARM1\n         B     PINIT\n         B     PTERM\n         B     PBITON\n         B     PBITOFF\n         B     PBITTEST\nINVPARM1 LA    RF,24 INVALID PARM RC\nINVPEXIT STCM  RF,15,0(RC) RC\n         B     EXITNORM\nINVPARM2 LA    RF,28 INVALID PARM RC\n         B     INVPEXIT\nINVPARM3 LA    RF,32 INVALID PARM RC\n         B     INVPEXIT\nSETRC4   LA    RF,4  FOR BIT TEST; BIT IS OFF\n         B     INVPEXIT USE THIS EXIT FOR NORMAL RETURN\nPINIT    ICM   R4,15,0(R9) PASSED BINARY DIGIT COUNT\n         BZ    INVPARM2\n         CL    R4,=F'9' MAX VALUE\n         BH    INVPARM2\n         BCTR  R4,0 -1\n         SLL   R4,2 X4\n         ST    R4,IXOFF SAVE OFFSET TO INDEX\n         LA    R4,BLKTAB(R4) INDEX TO BLOCK COUNT\n         DSPSERV CREATE,STOKEN=DSTOKEN,TYPE=BASIC,NAME=DSTRNAME,       X\n               GENNAME=YES,OUTNAME=DGENNAME,BLOCKS=((R4),(R4)),        X\n               ORIGIN=DORIGIN,NUMBLKS=DNUMBLKS,SCOPE=SINGLE\n         LTR   R2,RF CREATED?\n         BNZ   ABEND1\n         ALESERV ADD,STOKEN=DSTOKEN,ALET=DALET,AL=WORKUNIT,            X\n               ACCESS=PUBLIC\n         LTR   R2,RF CREATED?\n         BNZ   ABEND2\n         MVC   0(12,R3),DSPPTRS RETURN TO CALLER DATASPACE PTRS\nSETRC0   XC    0(4,RC),0(RC) SET RC TO 0\n         B     EXITNORM\nPBITON   ICM   R5,15,0(R9) PASSED BINARY DIGIT PTR\n         BZ    INVPARM3\n         L     R4,IXOFF SAVED OFFSET\n         L     R4,MAXINDEX(R4) MAX VAL OF PASSED DIGIT PTR\n         CLR   R5,R4 CHECK VAL\n         BH    INVPARM3\n         BCTR  R5,0 -1 AND USE AS OFFSET\n         SLR   R4,R4 CALC BIT OFFSET\n         D     R4,=F'8' INTO BITS\n         ICM   R7,15,8(R3) ACQUIRE ALET\n         SAR   AR7,R7 LOAD DATASPACE ALET\n         L     R7,DORIGIN DATASPACE ORIGIN ADDRESS\n         ALR   R7,R5 OFFSET INTO SPACE\n         SLR   R6,R6 FOR EX\n         IC    R6,ORS(R4) ...\n         SAC   512 SWITCH TO AR MODE, CODE=X'001000000000'\n         EX    R6,ORON\n         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'\n         B     SETRC0\nPBITOFF  ICM   R5,15,0(R9) PASSED BINARY DIGIT PTR\n         BZ    INVPARM3\n         L     R4,IXOFF SAVED OFFSET\n         L     R4,MAXINDEX(R4) MAX VAL OF PASSED DIGIT PTR\n         CLR   R5,R4 CHECK VAL\n         BH    INVPARM3\n         BCTR  R5,0 -1 AND USE AS OFFSET\n         SLR   R4,R4 CALC BIT OFFSET\n         D     R4,=F'8' INTO BITS\n         ICM   R7,15,8(R3) ACQUIRE ALET\n         SAR   AR7,R7 LOAD DATASPACE ALET\n         L     R7,DORIGIN DATASPACE ORIGIN ADDRESS\n         ALR   R7,R5 OFFSET INTO SPACE\n         SLR   R6,R6 FOR EX\n         IC    R6,ANDS(R4) ...\n         SAC   512 SWITCH TO AR MODE, CODE=X'001000000000'\n         EX    R6,ANDOFF\n         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'\n         B     SETRC0\nPBITTEST ICM   R5,15,0(R9) PASSED BINARY DIGIT PTR\n         BZ    INVPARM3\n         L     R4,IXOFF SAVED OFFSET\n         L     R4,MAXINDEX(R4) MAX VAL OF PASSED DIGIT PTR\n         CLR   R5,R4 CHECK VAL\n         BH    INVPARM3\n         BCTR  R5,0 -1 AND USE AS OFFSET\n         SLR   R4,R4 CALC BIT OFFSET\n         D     R4,=F'8' INTO BITS\n         ICM   R7,15,8(R3) ACQUIRE ALET\n         SAR   AR7,R7 LOAD DATASPACE ALET\n         L     R7,DORIGIN DATASPACE ORIGIN ADDRESS\n         ALR   R7,R5 OFFSET INTO SPACE\n         SLR   R6,R6 FOR EX\n         IC    R6,ORS(R4) ...\n         SAC   512 SWITCH TO AR MODE, CODE=X'001000000000'\n         EX    R6,TMTEST\n         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'\n         BO    SETRC0 BIT IS ON\n         B     SETRC4 BIT IS OFF\nPTERM    ICM   R2,15,8(R3) ALET\n         ALESERV DELETE,ALET=((R2))\n         LTR   R2,RF CREATED?\n         BNZ   ABEND2\n         DSPSERV DELETE,STOKEN=((R3))\n         LTR   R2,RF CREATED?\n         BNZ   ABEND1\n         B     SETRC0\nEXITNORM SAC   0 SWITCH TO PRIMARY MODE\n         SLR   RF,RF RC=0\n         PR    , RESTORE CALLERS STATUS\nABEND1   LR    R3,R0 SAVE POSSIBLE REASON CODE\n         ABEND 1024,DUMP SEVERE ERROR\nABEND2   LR    R3,R0 SAVE POSSIBLE REASON CODE\n         ABEND 1028,DUMP SEVERE ERROR\nPARMERR  LR    R3,R1 SAVE POSSIBLE REASON CODE\n         ABEND 1032,DUMP SEVERE ERROR\nORON     OI    0(AR7),*-* OR BIT ON\nANDOFF   NI    0(AR7),*-* AND BIT OFF\nTMTEST   TM    0(AR7),*-* TEST BIT\nSAVEAREA DS    9D LINKAGE\nDSTRNAME DC    CL8'@' GENERATE DATASPACE NAME WITH PREFIX\nDWORK1   DC    D'0'\nDWORK2   DC    D'0'\nDGENNAME DC    D'0' GENERATED DATASPACE NAME\nDSPPTRS  EQU   * *  DATASPACE PTRS\nDSTOKEN  DC    D'0' DSP STOKEN\nDALET    DC    F'0' DATASPACE ACCESS LIST ENTRY\nDORIGIN  DC    A(0) RETURNED DATASPACE VIRT ADDR ORIGIN\nDNUMBLKS DC    F'0' NUMBER OF BLOCKS MADE AVAILABLE\nIXOFF    DC    F'0' SAVED OFFSET TO INDEX TABLES\n* DATASPACE BLOCKS FOR GIVEN DIGIT REQUIREMENTS\nBLKTAB   DC    A((((10+7)/8)+4095)/4096)           BLKS FOR 1 DIGIT\n         DC    A((((100+7)/8)+4095)/4096)          BLKS FOR 2 DIGITS\n         DC    A((((1000+7)/8)+4095)/4096)         BLKS FOR 3 DIGITS\n         DC    A((((10000+7)/8)+4095)/4096)        BLKS FOR 4 DIGITS\n         DC    A((((100000+7)/8)+4095)/4096)       BLKS FOR 5 DIGITS\n         DC    A((((1000000+7)/8)+4095)/4096)      BLKS FOR 6 DIGITS\n         DC    A((((10000000+7)/8)+4095)/4096)     BLKS FOR 7 DIGITS\n         DC    A((((100000000+7)/8)+4095)/4096)    BLKS FOR 8 DIGITS\n         DC    A((((1000000000+7)/8)+4095)/4096)   BLKS FOR 9 DIGITS\nMAXINDEX DC    A(10) MAX INDEX VAL ACCEPTED\n         DC    A(100) MAX INDEX VAL ACCEPTED\n         DC    A(1000) MAX INDEX VAL ACCEPTED\n         DC    A(10000) MAX INDEX VAL ACCEPTED\n         DC    A(100000) MAX INDEX VAL ACCEPTED\n         DC    A(1000000) MAX INDEX VAL ACCEPTED\n         DC    A(10000000) MAX INDEX VAL ACCEPTED\n         DC    A(100000000) MAX INDEX VAL ACCEPTED\n         DC    A(1000000000) MAX INDEX VAL ACCEPTED\nORS      DC    X'8040201008040201'\nANDS     DC    X'7FBFDFEFF7FBFDFE'\nFUNCTAB  DC    256X'00'\n         ORG   FUNCTAB+C'I'\n         DC    X'04'\n         ORG   FUNCTAB+C'T'\n         DC    X'08'\n         ORG   FUNCTAB+C'O'\n         DC    X'0C'\n         ORG   FUNCTAB+C'N'\n         DC    X'10'\n         ORG   FUNCTAB+C'M'\n         DC    X'14'\n         ORG\n         LTORG\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(BINDEX),DISP=SHR,UNIT=\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASREXIT": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x19/\\x00\\x94\\x19/\\x16\\x19\\x00\\t\\x01D\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-07-11T00:00:00", "modifydate": "1994-07-11T16:19:00", "lines": 9, "newlines": 324, "modlines": 4, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//* ASREXIT REF SYS1.SAMPLIB(ASREXT1) AS PER CICS ESA 3.3 REQ\n//S EXEC ASMHCL,PARM.L='AC=1,XREF,LIST,RENT'\n//C.SYSLIB DD\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD DSN=SYS1.SAMPLIB(ASREXT1),DISP=SHR\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(ASREXIT),DISP=SHR,UNIT=\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "B2C": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93!o\\x00\\x93!o\\x15\\x17\\x00\\x85\\x00\\x85\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-08-04T00:00:00", "modifydate": "1993-08-04T15:17:00", "lines": 133, "newlines": 133, "modlines": 1, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.J.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nB2C      TITLE 'REXX BINARY TO CHAR CONVERSION FUNCTION'\nB2C      CSECT , /* B2C */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nB2C      AMODE 24\nB2C      RMODE 24\n         SAVE  (14,12),,B2C*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING B2C,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         LM    R4,R6,K0(R2) A(BIN) L(BIN) XFF\n         CL    R4,=A(X'FFFFFFFF') PARMLIST END\n         BE    RC4  YES\n         CL    R6,=A(X'FFFFFFFF') PARMLIST END\n         BE    BINCHAR YES\n         B     RC4  YES\nBINCHAR  C     R5,=A(K4) ONLY BIN LEN\n         BNE   RC8\n         ICM   R8,K15,K0(R4) PICKUP BINARY VAL\n         CVD   R8,WORK  MAKE CHAR\n         UNPK  WORK2(K8),WORK+K4(K4)\n         OI    WORK2+K7,C'0' SIGN PRINTABLE\n         USING EVALBLOCK,R3\n         LA    R0,K8 CHAR RETURNED LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K8),WORK2\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\nWORK     DC    D'0'\nWORK2    DC    D'0'\n         LTORG\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(B2C),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CATEDIT": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x11\\x8f\\x00\\x94\\x11\\x9f\\x10\\x03\\x00D\\x00!\\x00,\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-04-28T00:00:00", "modifydate": "1994-04-29T10:03:00", "lines": 68, "newlines": 33, "modlines": 44, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL,PARM.L='AC=1,XREF,LIST'\n//C.SYSIN DD *\nCATEDIT  CSECT , /* CATEDIT EDIT AND UPDATE */\n         SAVE  (14,12),,CATEDIT*&SYSDATE\n         LR    12,15\n         USING CATEDIT,12\n         LR    11,13 /* CHAIN */\n         CNOP  0,4\n         BAL   13,*+76\n         DC    18F'0'\n         ST    13,8(,11)\n         ST    11,4(,13)\n         OPEN  (CATALOG,(UPDAT))\n         TM    CATALOG+48,X'10' OPEN OK\n         BZ    FAILOPEN NO\nCATSCAN  GET   CATALOG\n         LR    4,1 RCD PTR TO TRANSLATE\n         LH    5,CATALOG+82 DCBLRECL\n         LA    6,0(5,4) END POINT\n         SH    6,=H'4' WE MUST NOT LOOK PAST END OF BUFFER, DO -4\n         LR    8,4 STARTING SCAN POINT\n         LR    9,5 WORKING LEN\nNEXTLCHK LTR   9,9 ANY LEFT\n         BNP   DOPUT NO\n         C     9,=F'256' MAX AT A TIME\n         BL    MINLOOK NEAR END\n         TRT   0(256,8),SCANLOOK\nTRTDONE  BZ    NEXTSECT LOOP\n         CLC   =X'78008080',0(1) MATCH\n         BE    REPL\n         CLC   =X'78048080',0(1) MATCH\n         BE    REPL\n         LA    8,1(,1) NEXT START SCAN\nCALCWLEN LR    9,6 WORK LEN\n         SR    9,8\n         B     NEXTLCHK\nREPL     MVC   0(4,1),=X'78048081' 3490E DEVT\n         LA    8,4(,1) FOR NEXT SCAN\n         B     CALCWLEN ...\nMINLOOK  BCTR  9,0 FOR EX\n         EX    9,EXTRT DO\n         B     TRTDONE\nEXTRT    TRT   0(*-*,8),SCANLOOK\nNEXTSECT LA    8,256(,8) NEXT FULL SECT\n         B     CALCWLEN\nDOPUT    PUTX  CATALOG UPDATE CAT IN PLACE\n         B     CATSCAN\nCATEND   CLOSE (CATALOG)\n         FREEPOOL CATALOG\n         SLR   15,15\nRETURN   L     13,4(,13)\n         RETURN (14,12),RC=(15)\nFAILOPEN LA    15,24 /* OPEN FAILED */\n         B     RETURN\n         LTORG\nCATALOG  DCB   DDNAME=CATALOG,MACRF=(GL,PL),EODAD=CATEND,RECFM=U,      X\n               BLKSIZE=32760,DSORG=PS\nSCANLOOK DC    256X'00'\n         ORG   SCANLOOK+X'78'\n         DC    X'FF'\n         ORG\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(CATEDIT),DISP=SHR,UNIT=\n//*G.CATALOG DD DSN=SYS1.UCATTSM.CLUSTER,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CCSCANSP": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x017\\x00\\x00\\x00\\x91\\x02_\\x00\\x93\\t\\x0f\\x142\\x00\\xde\\x01\\xe2\\x00\\x80\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.55", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1993-03-31T14:32:00", "lines": 222, "newlines": 482, "modlines": 128, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nPDS      TITLE 'PDS DATASET TO SEQUENTIAL DATASET UTILITY'\nPDSTOSEQ CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPDSTOSEQ AMODE 24\nPDSTOSEQ RMODE 24\n         SAVE  (14,12),,PDSTOSEQ*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING PDSTOSEQ,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K3,R3),K8(R4) SAVE MEMBER TTR\n         MVC   K4(K8,R3),K0(R4) SAVE MEMBER NAME\n         MVI   K3(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */\n         LA    R3,K12(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         CLC   DIRBLOCK(K8),K0(R4) BLOCK END\n         BE    GETDIR YES\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LA    R6,SYSUT2 /* OUTPUT DCB */\n         USING IHADCB,R6\n         LH    R8,DCBBLKSI /* INPUT BLOCKSIZE FROM OUTPUT */\n         LH    R9,DCBLRECL /* INPUT LRECL FROM OUTPUT */\n         MVC   SAVRECFM,DCBRECFM /* SAVE OUT PUT RECFM\n         DROP  R6\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R8,=A(TTRLIST) /* START OF DIR LIST */\nMEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\n         MVC   MEMNAME+K7(K8),K4(R8) GET MEMBER NAME\n         PUT   SYSUT2,MEMNAME\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         TM    SAVRECFM,X80+X40 /* RECFM=U */\n         BO    RECFMU YES\n         TM    SAVRECFM,X80 /* RECFM=F */\n         BO    RECFMF YES\n         TM    SAVRECFM,X08 /* DONT SUPPORT VS OR VBS */\n         BO    FVBS EXIT\n         LH    R2,IOAREA /* INPUT VAR BLKSIZE */\n         SH    R2,=H'4' /* CALC OUT BDW LEN */\n         LA    R6,IOAREA+K4 /* A RECORD */\nPUTVARCD LH    R3,K0(,R6) /* RDW */\n         SR    R2,R3 /* CALC OUT RCD */\n         PUT   SYSUT2,(R6) /* OUTPUT 1 VAR LEN RCD */\n         LA    R6,K0(R3,R6) NEXT RCD\n         LTR   R2,R2 ANYMORE\n         BP    PUTVARCD YES\n         B     GETMEM   /* CONTINUE */\nRECFMU   LA    R6,SYSUT2\n         USING IHADCB,R6\n         STH   R3,DCBLRECL /* SET OUTPUT BLKSIZE */\n         DROP  R6\n         PUT   SYSUT2,IOAREA /*UIS1 RCD PER BLOCK */\n         B     GETMEM   /* CONTINUE */\nRECFMF   SLR   R2,R2\n         DR    R2,R9 /* BLOCKING FACTOR ON INPUT */\n         L     R2,=A(IOAREA) /* INPUT BLOCK */\nWRITERCD PUT   SYSUT2,(R2)    /* OUTPUT RCD */\n         LA    R2,K0(R9,R2) /* NEXT DEBLOCKED RCD */\n         BCT   R3,WRITERCD /* LOOP */\n         B     GETMEM /* NEXT BLOCK READ */\nMEMEND   LA    R8,K12(,R8) /* NEXT TTR */\n         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */\n         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */\n         FREEPOOL SYSUT2\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\nFVBS     LA    RF,K40 /* INPUT VS OR VBS    */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X\n               KEYLEN=0,LRECL=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)\nSAVRECFM DC    AL1(K0)\nMEMNAME  DC    CL80'MEMBER='\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K32760)CL12' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(CCSCANP),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CCSCANSQ": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01<\\x00\\x00\\x00\\x91\\x02_\\x00\\x93\\t\\x0f\\x123\\x00\\xdd\\x01\\xe2\\x00\\x80\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.60", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1993-03-31T12:33:00", "lines": 221, "newlines": 482, "modlines": 128, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nPDS      TITLE 'PDS DATASET TO SEQUENTIAL DATASET UTILITY'\nPDSTOSEQ CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX00      EQU   X'00'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPDSTOSEQ AMODE 24\nPDSTOSEQ RMODE 24\n         SAVE  (14,12),,PDSTOSEQ*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING PDSTOSEQ,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K2  /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K8,R3),K0(R4) SAVE MEMBER TTR\n         LA    R3,K8(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         CLI   K0(R4),X00 BLOCK END\n         BE    GETDIR YES\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LA    R6,SYSUT2 /* OUTPUT DCB */\n         USING IHADCB,R6\n         LH    R8,DCBBLKSI /* INPUT BLOCKSIZE FROM OUTPUT */\n         LH    R9,DCBLRECL /* INPUT LRECL FROM OUTPUT */\n         MVC   SAVRECFM,DCBRECFM /* SAVE OUT PUT RECFM\n         DROP  R6\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R8,=A(TTRLIST) /* START OF DIR LIST */\nMEMLOOP  FIND  MEMREAD,(R8),D /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\n         MVC   MEMNAME+K7(K8),K0(R8) GET MEMBER NAME\n         PUT   SYSUT2,MEMNAME\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         TM    SAVRECFM,X80+X40 /* RECFM=U */\n         BO    RECFMU YES\n         TM    SAVRECFM,X80 /* RECFM=F */\n         BO    RECFMF YES\n         TM    SAVRECFM,X08 /* DONT SUPPORT VS OR VBS */\n         BO    FVBS EXIT\n         LH    R2,IOAREA /* INPUT VAR BLKSIZE */\n         SH    R2,=H'4' /* CALC OUT BDW LEN */\n         LA    R6,IOAREA+K4 /* A RECORD */\nPUTVARCD LH    R3,K0(,R6) /* RDW */\n         SR    R2,R3 /* CALC OUT RCD */\n         PUT   SYSUT2,(R6) /* OUTPUT 1 VAR LEN RCD */\n         LA    R6,K0(R3,R6) NEXT RCD\n         LTR   R2,R2 ANYMORE\n         BP    PUTVARCD YES\n         B     GETMEM   /* CONTINUE */\nRECFMU   LA    R6,SYSUT2\n         USING IHADCB,R6\n         STH   R3,DCBLRECL /* SET OUTPUT BLKSIZE */\n         DROP  R6\n         PUT   SYSUT2,IOAREA /*UIS1 RCD PER BLOCK */\n         B     GETMEM   /* CONTINUE */\nRECFMF   SLR   R2,R2\n         DR    R2,R9 /* BLOCKING FACTOR ON INPUT */\n         L     R2,=A(IOAREA) /* INPUT BLOCK */\nWRITERCD PUT   SYSUT2,(R2)    /* OUTPUT RCD */\n         LA    R2,K0(R9,R2) /* NEXT DEBLOCKED RCD */\n         BCT   R3,WRITERCD /* LOOP */\n         B     GETMEM /* NEXT BLOCK READ */\nMEMEND   LA    R8,K8(,R8) /* NEXT TTR */\n         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */\n         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */\n         FREEPOOL SYSUT2\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\nFVBS     LA    RF,K40 /* INPUT VS OR VBS    */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X\n               KEYLEN=0,LRECL=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)\nSAVRECFM DC    AL1(K0)\nMEMNAME  DC    CL80'MEMBER='\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K32760)CL8' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(CCSCANL),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CDRSDASD": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x924\\x9f\\x00\\x93\\x12_\\t\\x12\\x00\\x92\\x00\\x9e\\x006\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1992-12-14T00:00:00", "modifydate": "1993-05-05T09:12:00", "lines": 146, "newlines": 158, "modlines": 54, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//         DD DSN=SYSM.AMACLIB,DISP=SHR\n//C.SYSIN  DD *\nCDRSSCAN CSECT , /*DASD ANALYSIS*/\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nCDRSSCAN AMODE 24\nCDRSSCAN RMODE 24\n         SAVE  (14,12),,CDRSSCAN*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING CDRSSCAN,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         OPEN  (WORKDCB,(OUTPUT))\n         LA    R2,WORKDCB\n         USING IHADCB,R2\n         TM    DCBOFLGS,DCBOFOPN OPEN OKAY\n         BZ    FWORK\n         DROP  R2\nIOSVSCAN EQU   * *\n         UCBSCAN COPY,WORKAREA=UCBWORK,UCBAREA=UCBAREA,CMXTAREA=TOKEN, X\n               DYNAMIC=YES,RANGE=ALL,DEVNCHAR=DEVN,DEVCLASS=DASD,      X\n               IOCTOKEN=IOCTOKEN\n*IOSVSCAN LA    R1,IOSVPARM /* SCAN UCBS */\n*        L     RF,CVTPTR\n*        USING CVTMAP,RF\n*        L     RF,CVTUCBSC /* IOSVSUCB EP PTR */\n*        DROP  RF\n*        BALR  RE,RF /* SCAN FOR DASD ONLY */\n*        LTR   RF,RF /* SCAN END */\n*        BNZ   ENDIOSV\n*        L     R8,IOSVPARM+12 /* PICKUP UCB PTR */\n         B     *+4(RF) INDEX\n         B     UOK\n         B     ENDIOSV\n         B     ERRUCBS\n         B     ERRUCBS\n         B     ERRUCBS\n         B     ERRUCBS\n         USING UCBOB,R8\nUOK      LA    R8,UCBAREA\n         TM    UCBSTAT,UCBONLI ONLINE\n         BZ    IOSVSCAN NO\n         MVC   WORKOUT(6),UCBVOLI  /* VOLSER */\n         MVC   FDEVT+8(6),UCBVOLI /* IFF ERROR */\n         MVC   FLSPACE+8(6),UCBVOLI /* IFF ERROR */\n         ST    R8,UCBLIST FOR DEVTYPE\n         DEVTYPE ,(DEVTYPE,24),UCBLIST=(UCBLIST,1)\n         LTR   RF,RF\n         BNZ   FDEVT\n         LH    RF,DEVTYPE+8 DASD PHYS CYL COUNT\n         BCTR  RF,0 SUBTRACT CE CYL\n         CVD   RF,WORK\n         UNPK  WORK+0(5),WORK+5(3)\n         OI    WORK+4,C'0'\n         MVC   WORKOUT+7(4),WORK+1\n         LSPACE UCB=((R8)),DATA=LSPACE\n         LTR   RF,RF\n         BNZ   FLSPACE\n         L     RF,LSPACE+8 TOTAL FREE CYL\n         CVD   RF,WORK\n         UNPK  WORK+0(5),WORK+5(3)\n         OI    WORK+4,C'0'\n         MVC   WORKOUT+12(4),WORK+1\n         L     RF,LSPACE+32 FRAGMENTATION INDEX 0-999 (HIGH=BAD FRAG)\n         CVD   RF,WORK\n         UNPK  WORK+0(5),WORK+5(3)\n         OI    WORK+4,C'0'\n         MVC   WORKOUT+17(4),WORK+1\n         PUT   WORKDCB,WORKOUT SAVE DATA\n         B     IOSVSCAN CONTINUE\n         DROP  R8\nENDIOSV  EQU   * *\nBREAKOUT CLOSE (WORKDCB)\n         L     RD,4(RD)\n         RETURN (14,12),RC=0\nFWORK    L     RD,4(RD)\n         RETURN (14,12),RC=28\nFDEVT    WTO   'VOLSER ******** DEVTYPE FAILURE ********'\n         L     RD,4(RD)\n         RETURN (14,12),RC=32\nFLSPACE  WTO   'VOLSER ******** LSPACE FAILURE ********'\n         L     RD,4(RD)\n         RETURN (14,12),RC=36\nERRUCBS  L     RD,4(RD)\n         SLL   RF,4 *16\n         AR    RF,R0\n         RETURN (14,12),RC=(15)\nWORK     DC    D'0'\nLSPACE   DC    36X'00'\nUCBWORK  DC    100X'00'\nUCBAREA  DC    48X'00'\nTOKEN    DC    32X'00'\nDEVN     DC    4X'00'\nIOCTOKEN DC    48X'00'\n*IOSVPARM DC    A(IOSVWORK,IOSVDEVT),X'80',AL3(IOSVPARM+12),A(0)\n*IOSVWORK DC    512X'00'\nUCBLIST  DC    A(*-*) FOR DEVTYPE\nDEVTYPE  DC    24X'00' DEVTYPE RESPONSE AREA\nWORKOUT  DC    CL26' '\nIOSVDEVT DC    AL1(UCB3DACC) DASD CLASS\n         LTORG\n         PRINT NOGEN\nWORKDCB  DCB   DDNAME=WORK,DSORG=PS,MACRF=(GM,PM),RECFM=FB,LRECL=26\n         CVT   DSECT=YES\n         DSECT\n         IEFUCBOB\n         DSECT\n         IEZCOM\n         DSECT\n         IEZCIB\n         DCBD  DSORG=QS,DEVD=DA\n         END\n/*\n//*L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(DASDSCAN),DISP=SHR,\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(DASDSCAN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.WORK DD SYSOUT=*\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DATACLAS": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x00\\x94\\x04\\x9f\\x00\\x94\"/\\x197\\x00\\x17\\x00%\\x00\\x14\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1994-02-18T00:00:00", "modifydate": "1994-08-10T19:37:00", "lines": 23, "newlines": 37, "modlines": 20, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS DATACLASS ROUTINE                 */\nPROC &DATACLAS\nSELECT (&DSORG)\n     WHEN ('PS') DO\n                    SET &DATACLAS = 'SEQ'\n                 END\n     WHEN ('PO') DO\n                    SET &DATACLAS = 'PDS'\n                 END\n     WHEN ('VS') DO\n            SELECT (&RECORG)\n                  WHEN ('KS') SET &DATACLAS = 'KSDS'\n                  WHEN ('ES') SET &DATACLAS = 'ESDS'\n                  WHEN ('RR') SET &DATACLAS = 'RRDS'\n                  WHEN ('LS') SET &DATACLAS = 'LSDS'\n/* IDCAMS DEFAULT OF RECORG INDEXED CAUSES ACS INPUT OF NULL        */\n                  OTHERWISE   SET &DATACLAS = 'KSDS'\n            END\n         END\n     OTHERWISE SET &DATACLAS = 'SEQ'\nEND\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DATACLSO": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x903?\\x00\\x94\\x18\\x9f\\x13P\\x01\\x9d\\x00@\\x01\\x8e\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1990-11-29T00:00:00", "modifydate": "1994-07-08T13:50:00", "lines": 413, "newlines": 64, "modlines": 398, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS DATACLASS ROUTINE                 */\nPROC &DATACLAS\n/* LIST OF ACCEPTED DSNAME HIGH LEVEL QUALIFIERS                    */\nFILTLIST &VALID_DSNHLQ_VALUES INCLUDE(\n/* PRODUCTION SYSTEM HLQ SET                                        */\n     'DB2A',\n     'DB2B',\n     'DB2X',\n     'DB2Y',\n     PACCT%,\n     PAPPL%,\n     PAUDT%,\n     PCORP%,\n     PCRDT%,\n     PDATA%,\n     PDIST%,\n     PEXEC%,\n     PFINL%,\n     PHKNG%,\n     PINFO%,\n     PMANI%,\n    'PMERC7',\n     PREAL%,\n     PSTOP%,\n     PSTOR%,\n     PTECH%,\n     'QMFA',\n     'QMFB',\n     'VAPSCD00',\n     'VUDS',\n/* QA SYSTEM HLQ SET                                                */\n     'DB2Q',\n     QACCT%,\n     QAPPL%,\n     QAUDT%,\n     QCORP%,\n     QCRDT%,\n     QDATA%,\n     QDIST%,\n     QEXEC%,\n     QFINL%,\n     QHKNG%,\n     QINFO%,\n     QMANI%,\n     QMERC%,\n     QREAL%,\n     QSTOP%,\n     QSTOR%,\n     QTECH%,\n/* TEST SYSTEM HLQ SET                                              */\n     'DB2M',\n     TACCT%,\n     TAPPL%,\n     TAUDT%,\n     TCORP%,\n     TCRDT%,\n     TDATA%,\n     TDIST%,\n     TEXEC%,\n     TFINL%,\n     THKNG%,\n     TINFO%,\n     TMANI%,\n    'TMERC7',\n     TREAL%,\n     TSTOP%,\n     TSTOR%,\n     TTECH%,\n/* TSO USER HLQ SET - ALL DSN ARE USERID.*                          */\n     'ACCT0',\n     'APPL0',\n     'APPL1',\n     'APPL100',\n     'APPL2',\n     'APPL200',\n     'APPL3',\n     'CORP1',\n     'CORP2',\n     'CORP4',\n     'CRDT1',\n     DATA*,\n     'DIST0',\n     'DIST1',\n     'DIST2',\n     'DIST3',\n     'EXEC0',\n     'FINL6',\n     'FINL7',\n     HKNG*,\n     'INFOV01',\n     'INFO0',\n     'INFO002',\n     'INFO005',\n     'INFO1',\n     'JCITRAN',\n     'MANI1',\n     'MERCA',\n     'MERC5',\n     'MERC8',\n     'MERC9',\n     'REAL0',\n     'REAL1',\n     'RECEIV',\n     'STOP1',\n     'STOR0',\n     'STOR001',\n     SYSADM*,\n     TECH0*,\n     TECH1*,\n     TECHT*,\n     TECH2*,\n     TECH3*,\n     TECH4*,\n     TECH5*,\n     TECH6*,\n     'WHSE001',\n/* SYSTEM HLQ SET - SYS% INCLUDES SYS1., SYSA.,...SYSM.             */\n     'MODEL',FDR*,SYS%,'IBMUSER','DUMY')\n/* LIST OF ACCEPTED JCL DATACLAS= VALUES                            */\nFILTLIST &VALID_DATACLAS_VALUES INCLUDE(\n     'ASSEMBLE',  /* ASSEMBLER LANGUAGE SOURCE                      */\n     'BACKUP',    /* FILE BACKUP                                    */\n     'BRODCAST',  /* SYSTEM BRODCAST                                */\n     'CATALOG',   /* SYSTEM ICF CATALOG                             */\n     'CKPT',      /* JES2 CHECKPOINT DATASET                        */\n     'CLIST',     /* TSO CLIST SOURCE                               */\n     'CLISTSEQ',  /* TSO CLIST SOURCE                               */\n     'CNTL',      /* GENERAL JCL/SOURCE/PARAMETERS                  */\n     'COBOL',     /* COBOL LANGUAGE SOURCE                          */\n     'COPY',      /* LANGUAGE COPY BOOK SOURCE                      */\n     'CSI',       /* SMP CSI DATASET                                */\n     'DATADA',    /* APPLICATION DATA                               */\n     'DATAES',    /* APPLICATION DATA                               */\n     'DATAIN',    /* APPLICATION DATA                               */\n     'DATAKS',    /* APPLICATION DATA                               */\n     'DATALS',    /* APPLICATION DATA                               */\n     'DATAPO',    /* APPLICATION DATA                               */\n     'DATAPS',    /* APPLICATION DATA                               */\n     'DATARR',    /* APPLICATION DATA                               */\n     'DB2',       /* DB2                                            */\n     'DMS',       /* DEVELOPMENT MANAGEMENT SYSTEM                  */\n     'DOC',       /* DOCUMENTS AND MEMOS                            */\n     'DTL',       /* DIALOG TAG LANGUAGE                            */\n     'DYLAKOR',   /* DYLAKOR LANGUAGE SOURCE                        */\n     'EXEC',      /* TSO REXX LANGUAGE SOURCE                       */\n     'FDRABR',    /* FDRABR MANAGED DATASET OR MODEL                */\n     'FORTRAN',   /* FORTRAN LANGUAGE SOURCE                        */\n     'HELP',      /* TSO HELP SOURCE                                */\n     'IMAGE',     /* SYSTEM IMAGELIB                                */\n     'IODF',      /* SYSTEM IODF FILE                               */\n     'JCL',       /* JCL SOURCE                                     */\n     'LIBRARY',   /* LIBRARIAN FILE                                 */\n     'LISTING',   /* OUTPUT LISTING                                 */\n     'LOGREC',    /* SYSTEM LOGREC                                  */\n     'MACRO',     /* LANGUAGE MACRO SOURCE                          */\n     'MESSAGE',   /* PDF MESSAGE LIBRARY                            */\n     'MODULE',    /* LOAD MODULE LIBRARY                            */\n     'NONSMS',    /* FORCE NON-SMS DATASET                          */\n     'OBJ',       /* OBJECT CODE                                    */\n     'PAGE',      /* SYSTEM PAGE DATASET                            */\n     'PANEL',     /* PDF PANEL LIBRARY                              */\n     'PARM',      /* PARAMETER LIBRARY                              */\n     'PLI',       /* PLI LANGUAGE SOURCE                            */\n     'PROC',      /* PROCLIB                                        */\n     'RACF',      /* SYSTEM RACF                                    */\n     'RAMIS',     /* RAMIS LANGUAGE SOURCE                          */\n     'RPG',       /* RPG LANGUAGE SOURCE                            */\n     'SDUMP',     /* SYSTEM DUMP DATASETS                           */\n     'SKELETON',  /* PDF SKELETON LIBRARY                           */\n     'SMF',       /* SYSTEM SMF CLUSTER                             */\n     'SMPTLIB',   /* SMP/E TLIB                                     */\n     'SMSUSER',   /* TEMP                                           */\n     'SMS',       /* SYSTEM SMS CONTROL CLUSTER                     */\n     'SOURCE',    /* GENERAL LANGUAGE SOURCE                        */\n     'SPOOL',     /* SYSTEM SPOOL FILE                              */\n     'STGINDEX',  /* SYSTEM STGINDEX DATASET                        */\n     'SYSWDBA',   /* SYSTEM W DATABASE                              */\n     'SYSWMODL',  /* SYSTEM W MODEL                                 */\n     'TABLE',     /* PDF TABLE LIBRARY                              */\n     'UADS',      /* SYSTEM UADS                                    */\n     'XCF',       /* SYSTEM XCF DATASET                             */\n/* NULL IS ALSO ACCEPTED AS A VALID DATACLAS VALUE AT THIS TIME     */\n     '')\n/* LIST OF ACCEPTED DSN LLQ VALUES USED AS DEFAULT DATACLAS VALUES  */\nFILTLIST &LLQ_ASSEMBLE  INCLUDE('ASMLIB')\nFILTLIST &LLQ_BACKUP    INCLUDE('BACKUP')\nFILTLIST &LLQ_CKPT      INCLUDE('HASPCKPT')\nFILTLIST &LLQ_CLIST     INCLUDE('CLISTLIB')\nFILTLIST &LLQ_CLISTSEQ  INCLUDE('CLIST')\nFILTLIST &LLQ_CNTL      INCLUDE('CNTLLIB')\nFILTLIST &LLQ_COBOL     INCLUDE('COBLIB')\nFILTLIST &LLQ_COPY      INCLUDE('COPYLIB')\nFILTLIST &LLQ_CSI       INCLUDE('CSI')\nFILTLIST &LLQ_DMS       INCLUDE('DMSLIB')\nFILTLIST &LLQ_DOC       INCLUDE('DOCLIB','MEMOLIB')\nFILTLIST &LLQ_DTL       INCLUDE('ISPGLIB')\nFILTLIST &LLQ_DYLAKOR   INCLUDE('DYLLIB')\nFILTLIST &LLQ_EXEC      INCLUDE('EXECLIB')\nFILTLIST &LLQ_FORTRAN   INCLUDE('FORLIB')\nFILTLIST &LLQ_HELP      INCLUDE('HELP','HELPLIB')\nFILTLIST &LLQ_IMAGE     INCLUDE('IMAGELIB')\nFILTLIST &QUAL_IODF     INCLUDE(IODF%%)\nFILTLIST &LLQ_JCL       INCLUDE('JCLLIB')\nFILTLIST &LLQ_LIBRARY   INCLUDE('MASTER')\nFILTLIST &LLQ_LISTING   INCLUDE('LISTING','SYSOUT')\nFILTLIST &LLQ_MACRO     INCLUDE('MACLIB')\nFILTLIST &LLQ_MESSAGE   INCLUDE('ISPMLIB')\nFILTLIST &LLQ_MODULE    INCLUDE('ISPLLIB','LINKLIB','LOADLIB','MODLIB')\nFILTLIST &LLQ_OBJ       INCLUDE('OBJLIB','TXTLIB')\nFILTLIST &LLQ_PANEL     INCLUDE('ISPPLIB','ISPPPLIB')\nFILTLIST &LLQ_PARM      INCLUDE('PARMLIB')\nFILTLIST &LLQ_PLI       INCLUDE('PLILIB')\nFILTLIST &LLQ_PROC      INCLUDE('PROCLIB')\nFILTLIST &LLQ_RACF      INCLUDE('RACF')\nFILTLIST &LLQ_RAMIS     INCLUDE('RAMLIB')\nFILTLIST &LLQ_RPG       INCLUDE('RPGLIB')\nFILTLIST &LLQ_SKELETON  INCLUDE('ISPSLIB')\nFILTLIST &LLQ_SMF       INCLUDE(MAN%)\nFILTLIST &LLQ_SOURCE    INCLUDE('SRCELIB')\nFILTLIST &LLQ_SPOOL     INCLUDE('HASPACE')\nFILTLIST &LLQ_STGINDEX  INCLUDE('STGINDEX')\nFILTLIST &LLQ_SYSWDBA   INCLUDE('DBA')\nFILTLIST &LLQ_SYSWMODL  INCLUDE('MODEL')\nFILTLIST &LLQ_TABLE     INCLUDE('ISPTLIB')\nFILTLIST &LLQ_UADS      INCLUDE('UADS')\nFILTLIST &QUAL_VVDS     INCLUDE('VVDS')\nFILTLIST &LLQ_XCF       INCLUDE(XCF%)\n/* DASD UNITS                                                       */\nFILTLIST DASD_UNITS INCLUDE(\n    '3380','3390','DISK','PAGEIO','SYSDA','SYSSQ','SYSTEST',\n    'SMS','QA','PARTH',\n    'VIO','SYSALLDA','APPLTA','SEQDA','SYSTA','USRDA','')\n/* SMPE RELFILES                                                    */\nFILTLIST &SYSHLQ   INCLUDE(SYS%)\nFILTLIST &DB2HLQ   INCLUDE(DB2%)\nFILTLIST &RELFILES INCLUDE(F%*)\nFILTLIST &VALID_ARTHUR INCLUDE(PARTH.DATA%*.DBA)\n/* IGNORE IF NON-DASD ALLOCATION                                    */\nIF &UNIT \u00ac= &DASD_UNITS THEN DO\n     SET &DATACLAS = 'NONSMS'\n     EXIT CODE(0)\n     END\n/* IGNORE IF USER CODED DATACLAS=NONSMS                             */\nIF &DATACLAS = 'NONSMS' THEN DO\n     SET &DATACLAS = 'NONSMS'\n     EXIT CODE(0)\n     END\n/* SYST TEMP FIX                                                    */\nIF &HLQ = 'SYST' | &HLQ = 'RESTART' | &HLQ = 'SYSY' | &HLQ = 'SYSZ' | +\n    &DSN(2) = 'SOURCING' | &DSN(2) = 'JARSCHRG' | +\n    &DSN(2) = 'JOBACCT' THEN DO\n     SET &DATACLAS = 'SMS'\n     EXIT CODE(0)\n     END\n/* IGNORE IF VVDS                                                   */\nIF &DSN(2) = &QUAL_VVDS THEN DO\n     SET &DATACLAS = 'VVDS'\n     WRITE '** STATUS  - DATACLAS VALUE (' &DATACLAS ') ASSIGNED **'\n     EXIT CODE(0)\n     END\n/* LOOK FOR IODF DATASET                                            */\nIF &DSN(2) = &QUAL_IODF THEN DO\n     SET &DATACLAS = 'IODF'\n     WRITE '** STATUS  - DATACLAS VALUE (' &DATACLAS ') ASSIGNED **'\n     EXIT CODE(0)\n     END\n/* IGNORE IF TRUE TEMP DATASET                                      */\nIF &DSTYPE = 'TEMP' THEN DO\n     IF &DATACLAS \u00ac= '' THEN SET &DATACLAS = &DATACLAS\n             ELSE DO\n                   WRITE '** WARNING - DATACLAS VALUE DEFAULTED **'\n                   SELECT (&DSORG)\n                     WHEN ('PS') SET &DATACLAS = 'DATAPS'\n                     WHEN ('PO') SET &DATACLAS = 'DATAPO'\n                     WHEN ('DA') SET &DATACLAS = 'DATADA'\n                     WHEN ('VS') DO\n                            SELECT (&RECORG)\n                               WHEN ('KS') SET &DATACLAS = 'DATAKS'\n                               WHEN ('ES') SET &DATACLAS = 'DATAES'\n                               WHEN ('RR') SET &DATACLAS = 'DATARR'\n                               WHEN ('LS') SET &DATACLAS = 'DATALS'\n                               OTHERWISE   SET &DATACLAS = 'DATAIN'\n                            END\n                          END\n                     OTHERWISE   SET &DATACLAS = 'DATAIN'\n                   END\n              END\n     WRITE '** STATUS  - DATACLAS VALUE (' &DATACLAS ') ASSIGNED **'\n     EXIT CODE(0)\n     END\n/* IF FDRABR HLQ THEN SET DATACLAS = FDRABR                         */\nIF &HLQ = 'FDRABR' | &HLQ = 'FDR' THEN DO\n     SET &DATACLAS = 'SMS'\n     WRITE '** STATUS  - DATACLAS VALUE (' &DATACLAS ') ASSIGNED **'\n     EXIT CODE(0)\n     END\n/* PERFORM THE ACTUAL DSNAME HIGH LEVEL QUALIFIER VALIDATION        */\nSELECT (&HLQ)\n     WHEN (&VALID_DSNHLQ_VALUES) DO\n/* CURRENTLY PERFORM NO ACTION WHEN VALID DSN HLQ SPECIFIED         */\n          END\n     OTHERWISE DO\n/* FOR INVALID DSN HLQ IGNORE ANY DATACLAS SPECIFIED                */\n             IF &DSN = &VALID_ARTHUR THEN DO\n                  END\n               ELSE DO\n                  SET &DATACLAS = ''\n                  END\n/* IF INVALID DSNAME HLQ IS SPECIFIED WITH A PERM PDSE DATASET THEN */\n/* FAIL THE ALLOCATION BECAUSE PDSE FILES MUST BE SMS DATASETS      */\n             IF &DSNTYPE = 'LIBRARY' AND &DSTYPE = 'PERM' THEN DO\n                   WRITE '** ERROR   - INVALID DSN HLQ VALUE ' +\n                   'ASSIGNED WITH A PDSE DATASET **'\n                   EXIT CODE(16)\n                   END\n          END\nEND\n/* PERFORM THE ACTUAL DATACLAS VALUE VALIDATION                     */\nSELECT (&DATACLAS)\n     WHEN (&VALID_DATACLAS_VALUES) DO\n/* WE HAVE A VALID DATACLAS OR NULL VALUE                           */\n/* IF NULL DATACLAS AND OLD HLQ THEN SET CLASS TO NONSMS; ELSE      */\n/*  IF NULL DATACLAS WITH AN SMS-DEFINED HLQ THEN SET DEFAULT       */\n             IF &DATACLAS = '' THEN DO\n                   SELECT (&HLQ)\n                       WHEN(&VALID_DSNHLQ_VALUES) DO\n/* NULL DATACLAS VALUE; SET VALUE TO 'NULLDFLT' FOR LATTER PROCESS  */\n                       SET &DATACLAS = 'NULLDFLT'\n                       END /* END OF VALID DSNHLQ IN NULL DATACLAS*/\n                   OTHERWISE DO\n                       SET &DATACLAS = 'NONSMS'\n                       END /* NULL DATACLAS WITH INVALID HLQ */\n                  END /* END OF SELECT HLQ GROUP */\n                 END /* END OF NULL DATACLAS DO GROUP */\n          END /* END OF MAJOR VALID_DATCLAS GROUP */\n     OTHERWISE DO\n/* WE HAVE AN INVALID DATACLAS VALUE CODED IN THE JCL               */\n/* CAUSE ALLOCATION FAILURE WITH NON-ZERO EXIT CODE                 */\n             WRITE '** ERROR   - INVALID DATACLAS VALUE (' &DATACLAS +\n             ') ASSIGNED **'\n             EXIT CODE(16)\n          END\nEND\nIF &DATACLAS = 'NULLDFLT' THEN DO\n            SELECT (&LLQ)\n               WHEN (&LLQ_ASSEMBLE) SET &DATACLAS = 'ASSEMBLE'\n               WHEN (&LLQ_BACKUP)   SET &DATACLAS = 'BACKUP'\n               WHEN (&LLQ_CKPT)     SET &DATACLAS = 'CKPT'\n               WHEN (&LLQ_CLIST)    SET &DATACLAS = 'CLIST'\n               WHEN (&LLQ_CLISTSEQ) SET &DATACLAS = 'CLISTSEQ'\n               WHEN (&LLQ_CNTL)     SET &DATACLAS = 'CNTL'\n               WHEN (&LLQ_COBOL)    SET &DATACLAS = 'COBOL'\n               WHEN (&LLQ_COPY)     SET &DATACLAS = 'COPY'\n               WHEN (&LLQ_CSI)      SET &DATACLAS = 'CSI'\n               WHEN (&LLQ_DMS)      SET &DATACLAS = 'DMS'\n               WHEN (&LLQ_DOC)      SET &DATACLAS = 'DOC'\n               WHEN (&LLQ_DTL)      SET &DATACLAS = 'DTL'\n               WHEN (&LLQ_DYLAKOR)  SET &DATACLAS = 'DYLAKOR'\n               WHEN (&LLQ_EXEC)     SET &DATACLAS = 'EXEC'\n               WHEN (&LLQ_FORTRAN)  SET &DATACLAS = 'FORTRAN'\n               WHEN (&LLQ_HELP)     SET &DATACLAS = 'HELP'\n               WHEN (&LLQ_IMAGE)    SET &DATACLAS = 'IMAGE'\n               WHEN (&LLQ_JCL)      SET &DATACLAS = 'JCL'\n               WHEN (&LLQ_LIBRARY)  SET &DATACLAS = 'LIBRARY'\n               WHEN (&LLQ_LISTING)  SET &DATACLAS = 'LISTING'\n               WHEN (&LLQ_MACRO)    SET &DATACLAS = 'MACRO'\n               WHEN (&LLQ_MESSAGE)  SET &DATACLAS = 'MESSAGE'\n               WHEN (&LLQ_MODULE)   SET &DATACLAS = 'MODULE'\n               WHEN (&LLQ_OBJ)      SET &DATACLAS = 'OBJ'\n               WHEN (&LLQ_PANEL)    SET &DATACLAS = 'PANEL'\n               WHEN (&LLQ_PARM)     SET &DATACLAS = 'PARM'\n               WHEN (&LLQ_PLI)      SET &DATACLAS = 'PLI'\n               WHEN (&LLQ_PROC)     SET &DATACLAS = 'PROC'\n               WHEN (&LLQ_RACF)     SET &DATACLAS = 'RACF'\n               WHEN (&LLQ_RAMIS)    SET &DATACLAS = 'RAMIS'\n               WHEN (&LLQ_RPG)      SET &DATACLAS = 'RPG'\n               WHEN (&LLQ_SKELETON) SET &DATACLAS = 'SKELETON'\n               WHEN (&LLQ_SMF)      SET &DATACLAS = 'SMF'\n               WHEN (&LLQ_SOURCE)   SET &DATACLAS = 'SOURCE'\n               WHEN (&LLQ_SPOOL)    SET &DATACLAS = 'SPOOL'\n               WHEN (&LLQ_STGINDEX) SET &DATACLAS = 'STGINDEX'\n               WHEN (&LLQ_SYSWDBA)  SET &DATACLAS = 'SYSWDBA'\n               WHEN (&LLQ_SYSWMODL) SET &DATACLAS = 'SYSWMODL'\n               WHEN (&LLQ_TABLE)    SET &DATACLAS = 'TABLE'\n               WHEN (&LLQ_UADS)     SET &DATACLAS = 'UADS'\n               WHEN (&LLQ_XCF)      SET &DATACLAS = 'XCF'\n               OTHERWISE DO\n                   WRITE '** WARNING - DATACLAS VALUE DEFAULTED **'\n                   SELECT (&DSORG)\n                     WHEN ('PS') SET &DATACLAS = 'DATAPS'\n                     WHEN ('PO') SET &DATACLAS = 'DATAPO'\n                     WHEN ('DA') SET &DATACLAS = 'DATADA'\n                     WHEN ('VS') DO\n                            SELECT (&RECORG)\n                               WHEN ('KS') SET &DATACLAS = 'DATAKS'\n                               WHEN ('ES') SET &DATACLAS = 'DATAES'\n                               WHEN ('RR') SET &DATACLAS = 'DATARR'\n                               WHEN ('LS') SET &DATACLAS = 'DATALS'\n                               OTHERWISE   SET &DATACLAS = 'DATAIN'\n                            END\n                          END\n                     OTHERWISE   SET &DATACLAS = 'DATAIN'\n                   END\n                   END /* IF NOT VALID LLQ, LEAVE AS 'DATAXX' */\n            END /* SELECT LLQ END */\n            IF (&HLQ = &SYSHLQ) && (&LLQ = &RELFILES) +\n                THEN SET &DATACLAS = 'SMPTLIB'\n            IF (&HLQ = &DB2HLQ) +\n                THEN SET &DATACLAS = 'DB2'\n          END /* END OF NULLDFLT DO GROUP */\nWRITE '** STATUS  - DATACLAS VALUE (' &DATACLAS ') ASSIGNED **'\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSAOPT": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\"/\\x00\\x93\"/\\x159\\x00\\n\\x00\\n\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-08-10T00:00:00", "modifydate": "1993-08-10T15:39:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "TECH114"}, "text": "         CAIJA1 MF=L,                                                  X\n               SMFNO=230,  <=== CHANGE PER INSTALL WKSHEET             X\n               MAXCSA=8K,                                              X\n               TEMP=NO,                                                X\n               RPERM=(KB,1.00000),                                     X\n               R3350=(KB,1.00000),                                     X\n               R3380=(KB,1.00000),                                     X\n               R3390=(KB,1.00000),                                     X\n               SELECT=(*)\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSATOPMA": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\"/\\x00\\x93\"/\\x150\\x00[\\x00[\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-08-10T00:00:00", "modifydate": "1993-08-10T15:30:00", "lines": 91, "newlines": 91, "modlines": 0, "user": "TECH114"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DSATOPMA.\n      * THIS PROGRAM WILL READ THE SUMOUT FILE CREATED IN THE FINAL\n      * DSA MONTHLY STEP AND WILL REFORMAT IT TO A SMALL FILE CONTAINING\n      * ONLY THE ACCOUNT NUMBER, TRACK HOURS, AND THE EVENT DATE TIME\n      * STAMPS\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PARAMETER-FILE  ASSIGN TO INCARD\n                 ORGANIZATION IS SEQUENTIAL\n                 FILE STATUS IS PARAMETER-STAT.\n           SELECT SUMOUT-IN       ASSIGN TO DSASUMIN\n                 ORGANIZATION IS SEQUENTIAL\n                 FILE STATUS IS SUMOUT-IN-STAT.\n           SELECT PMACB-FILE-OUT  ASSIGN TO DSAPMACB\n                 ORGANIZATION IS SEQUENTIAL\n                 FILE STATUS IS PMACB-OUT-STAT.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PARAMETER-FILE\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PARAMETER-RECORD.\n           05 PARM-MO             PIC X(02).\n           05 PARM-YR             PIC X(04).\n           05 FILLER              PIC X(74).\n       FD  SUMOUT-IN\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  SUMOUT-IN-RECORD.\n           05 FILLER              PIC X(60).\n           05 SUMOUT-IN-KBHOURS   PIC S9(13)V99 COMP-3.\n           05 FILLER              PIC X(20).\n           05 SUMOUT-IN-ACCOUNT   PIC X(16).\n       FD  PMACB-FILE-OUT\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PMACB-OUT-RECORD.\n           05 PMACB-KBHOURS       PIC S9(15).\n           05 PMACB-ACCOUNT       PIC X(16).\n           05 DO-DATA-2.\n              10 DO-DATA-2-MO     PIC X(02).\n              10 DO-DATA-2-DA     PIC X(02).\n              10 DO-DATA-2-YR     PIC X(04).\n           05 DO-DATA-3           PIC X(06).\n           05 DO-DATA-4           PIC X(06).\n           05 DO-JOB              PIC X(08).\n       WORKING-STORAGE SECTION.\n       01  SUMOUT-IN-STAT         PIC X(2)               VALUE SPACES.\n       01  PMACB-OUT-STAT         PIC X(2)               VALUE SPACES.\n       01  PARAMETER-STAT         PIC X(2)               VALUE SPACES.\n       01  NOT-FOUND              PIC X(2)               VALUE SPACES.\n       01  FIRST-RECORD           PIC X                  VALUE 'N'.\n           88 THIS-IS-FIRST-RECORD                       VALUE 'N'.\n           88 FILE-HAS-BEEN-OPENED                       VALUE 'Y'.\n       PROCEDURE DIVISION.\n           OPEN INPUT SUMOUT-IN\n                      PARAMETER-FILE\n               OUTPUT PMACB-FILE-OUT.\n           IF SUMOUT-IN-STAT NOT EQUAL '00'\n              DISPLAY 'SUMOUT-IN-STAT ' SUMOUT-IN-STAT\n              GO TO EOJ\n           .\n           IF PMACB-OUT-STAT NOT EQUAL '00'\n              DISPLAY 'PMACB-OUT-STAT ' PMACB-OUT-STAT\n              GO TO EOJ\n           .\n           IF PARAMETER-STAT NOT EQUAL '00'\n              DISPLAY 'PARAMETER-STAT ' PARAMETER-STAT\n              GO TO EOJ\n           .\n           READ PARAMETER-FILE.\n       READ-LOOP.\n           READ SUMOUT-IN AT END GO TO EOJ.\n           MOVE SUMOUT-IN-KBHOURS TO PMACB-KBHOURS.\n           MOVE SUMOUT-IN-ACCOUNT TO PMACB-ACCOUNT.\n           MOVE PARM-MO       TO DO-DATA-2-MO.\n           MOVE PARM-YR       TO DO-DATA-2-YR.\n           MOVE '01'          TO DO-DATA-2-DA.\n           MOVE '000001'      TO DO-DATA-3.\n           MOVE '000001'      TO DO-DATA-4.\n           MOVE 'DSASTRGE'    TO DO-JOB.\n           WRITE PMACB-OUT-RECORD.\n           GO TO READ-LOOP.\n       EOJ.\n           CLOSE SUMOUT-IN\n                 PARAMETER-FILE\n                 PMACB-FILE-OUT.\n           STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYNADSN": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x94\\x13/\\x00\\x94\\x13o\\x10\\x19\\x01D\\x01\\r\\x00g\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1994-05-12T00:00:00", "modifydate": "1994-05-16T10:19:00", "lines": 324, "newlines": 269, "modlines": 103, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL,PARM.L='AC=1,XREF,LIST'\n//C.SYSLIB DD\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nDYNA     TITLE 'DYNAMIC DSNAME SUBSTITUTION'\nDYNADSN  CSECT , /* DYNAMIC DSN CREATE     */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK45      EQU   45\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nDYNADSN  AMODE 31\nDYNADSN  RMODE 24\n         SAVE  (14,12),,DYNADSN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING DYNADSN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         OPEN  (SYSIN,(INPUT),SYSPRINT,(OUTPUT)),MODE=31\n         TM    SYSPRINT+K48,X10  OPEN\n         BZ    FSYSPRNT NO\n         TM    SYSIN+K48,X10 DID SYSIN OPEN\n         BZ    FSYSIN   NO\n         USING PSA,R0\n         L     R8,PSATOLD MAP CURRENT TCB AND SAVE\n         DROP  R0\n         USING TCB,R8\n         MVC   MOTHER,TCBOTC MOTHERS TCB\n         L     R2,TCBJSCB MAP JSCB\n         USING IEZJSCB,R2\n         L     R2,JSCBJCT MAP JCT\n         DROP  R2\nMODESUPV MODESET MODE=SUP,RELATED=('MODEPROB')\n         LA    R3,EPA MAP QMGR EPA\n         USING ZB505,R3\n         XC    SWAEPA,SWAEPA INIT QMGR EPA\n         STCM  R2,K7,SWVA JCT SVA TOKEN\n         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA JCT\n         LTR   RF,RF RC\n         BNZ   FSWAREQR ERROR\n         L     R2,SWBLKPTR MAP JCT\n         USING INJMJCT,R2\n         L     R7,JCTSDKAD SVA OF FIRST SCT\n         ST    R7,FIRSTSCT SAVE\n         DROP  R2\nPROCESS  L     R7,FIRSTSCT RESTORE\n         L     RF,=A(PPROCESS) 24 BIT MODE\n         L     RF,K0(,RF) DITTO\n         BASSM R9,RF ...\n         TM    FLAGS,X80 EOF ON SYSIN\n         BO    NORMEXIT YES\n         B     FINDPATL CONTINUE\nPROCESSG TM    FLAGS,X40 WRITE REQ FROM PREV PROCESS\n         BZ    PROCGET NO\n         PUT   SYSPRINT,OUTPUT TELL USER WHAT HAPPENED\n         NI    FLAGS,XFF-X40 DONE WITH THAT PROCESS\nPROCGET  GET   SYSIN,INPUT ACQUIRE ONE CONTROL CARD\n         BSM   R0,R9 RESTORE ADDR MODE\nFINDPATL CLI   FILLER1,C' ' OK\n         BNE   INPERROR SIMPLE ERROR CHEK\n         CLI   FILLER2,C' ' OK\n         BNE   INPERROR SIMPLE ERROR CHEK\n         LA    RF,8 MAX PATTERN LEN\n         LA    RE,PATTERN+K7 SCAN BACK\nSCANPAT  CLI   K0(RE),C' ' SCAN BACK FOR BLANKS\n         BNE   GETPL DONE\n         BCTR  RE,K0 BACK 1\n         BCT   RF,SCANPAT LOOP\n         B     PATERROR ALL BLANK PATTERN\nGETPL    ST    RF,PATTERNL SAVE\nSWASCAN  XC    SWAEPA,SWAEPA INIT QMGR EPA\n         STCM  R7,K14,SWVA       SCT  SVA TOKEN\n         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA SCT\n         LTR   RF,RF RC\n         BNZ   FSWAREQR ERROR\n         L     R7,SWBLKPTR MAP SCT\n         USING INSMSCT,R7\n         L     R6,SCTFSIOT SVA IF FIRST CHAINED SIOT\n         CLM   R6,K14,=XL3'000000' JUST IN CASE\n         BE    NEXTSCT CONTINUE\nNEXTSIOT XC    SWAEPA,SWAEPA INIT QMGR EPA\n         STCM  R6,K14,SWVA       SIOT SVA TOKEN\n         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA SIOT\n         LTR   RF,RF RC\n         BNZ   FSWAREQR ERROR\n         L     R6,SWBLKPTR MAP SIOT\n         USING INDMSIOT,R6\n         XC    SWAEPA,SWAEPA INIT QMGR EPA\n         MVC   SWVA,SCTPJFCB+K0 JFCB SVA TOKEN FROM SIOT\n         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA JFCB\n         LTR   RF,RF RC\n         BNZ   FSWAREQR ERROR\n         L     R4,SWBLKPTR MAP JFCB\n         USING INFMJFCB,R4\n         LA    RF,K45 MAX FOR DSN PAT TO SCAN\n         SL    RF,PATTERNL MINUS PATLEN\n         LA    RE,JFCBDSNM SCAN\n         L     R1,PATTERNL FOR EX\n         BCTR  R1,K0\n         NI    FLAGS,XFF-X20 SET NO MATCHES FOUND BIT\nDOPSCAN  EX    R1,PATMATCH\n         BNE   NEXTSPAT CONTINUE\nKEYZERO  MODESET EXTKEY=ZERO,RELATED=('KEYTCB')\n         EX    R1,PATMOVE MOVE PAT IN\nKEYTCB   MODESET EXTKEY=TCB,WORKREG=5,RELATED=('KEYZERO')\n         OI    FLAGS,X20 SET MATCH ON\nNEXTSPAT LA    RE,K1(,RE) NEXT SPOT TO SCAN\n         BCT   RF,DOPSCAN LOOP\n         TM    FLAGS,X20 ANY SUBSTITUTE DONE\n         BZ    NOSUB NONE\n         SWAREQ FCODE=WL,MF=(E,SWAREQL) WRITE LOCATE SWA JFCB\n         LTR   RF,RF RC\n         BNZ   FSWAREQW ERROR\n         LA    R1,ENQS ASSUME SHARE NEEDED\n         TM    JFCBIND2,JFCSHARE SHARE ON DISP\n         BO    ENQDSN YES\n         LA    R1,ENQE REQUEST EXCL CONTROL\nENQDSN   LA    R5,K44 MAX DSN RNAME LEN\n         LA    RE,JFCBDSNM+K43 LAST BYTE OF DSN\nDSNSCAN  CLI   K0(RE),C' ' END OF DSN\n         BNE   DSNLEN YES\n         BCTR  RE,K0 -1\n         BCT   R5,DSNSCAN LOOP\n         B     DSNBLANK ???\nDSNLEN   L     R2,MOTHER MOTHERS TCB\n* NOTE THAT ENQ IS DONE EVEN IF DSN STILL HAS SYMBOLICS UNRESOLVED\n* UNTIL FUTURE PASS THRU CONTROL CARDS\n         ENQ   (,(R4),,(R5)),RET=USE,TCB=((R2)),MF=(E,(1))\n         LTR   RE,RF RC\n         BZ    NOSUB OK\n         SLR   RF,RF ACQUIRE ACTUAL FAILING RC\n         IC    RF,K3(,RE) 1 BYTE CODE\n         CL    RF,=F'4' SOMEONE ELSE\n         BE    FENQR LEAVE\n         CL    RF,=F'8' DO WE HAVE ALREADY\n         BE    NOSUB YES\n         B     IENQR ERROR\nNOSUB    CLC   SWVA,SCTLSIOT CHECK FOR LAST CHAINED SIOT\n         BE    NEXTSCT IT IS THE LAST\n         ICM   R6,K14,SCTPSIOT NEXT SIOT IN CHAIN FROM SIOT\n         BZ    NEXTSCT CONTINUE WITH NEXT SCT\n         B     NEXTSIOT CONTINUE\nPATMATCH CLC   PATTERN(*-*),K0(RE) MATCH ON PATTERN\nPATMOVE  MVC   K0(*-*,RE),ZAPPAT  MOVE IN\nNEXTSCT  ICM   R7,K14,SCTANSCT NEXT SCT SVA\n         DROP  R3,R4,R6,R7,R8\n         BZ    WRITEPRC NEXT CONTROL CARD\n         B     SWASCAN CONTINUE\nWRITEPRC MVC   OUTPUT(K52),=CL52'PROCESSED'\n         OI    FLAGS,X40 CONTROL CARD WRITE REQ\n         B     PROCESS ...\nEOFSYSIN OI    FLAGS,X80 INDICATE EOF\n         BSM   R0,R9 RESTORE ADDR MODE\nNORMEXIT SLR   R2,R2 NORMAL RC\n         B     MODEPROB CONTINUE\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFSWAREQR LR    R2,RF SAVE RC FOR SWAREQ READ FAILURE\n         MVC   OUTPUT(K52),=CL52'INTERNAL SWAREQ READ FAILURE'\n         B     COMMON\nPATERROR LA    R2,K32 PATTERN ERROR\n         MVC   OUTPUT(K52),=CL52'PATTERN ERROR OR PATTERN NOT FOUND'\n         B     COMMON\nDSNBLANK LA    R2,K40 DSNAME ERROR\n         MVC   OUTPUT(K52),=CL52'DSNAME SUBSTITUTION ERROR'\n         B     COMMON\nFENQR    LA    R2,K44 ENQ ERROR\n         MVC   OUTPUT(K52),=CL52'ENQ SERIALIZATION FAILURE'\n         B     COMMON\nIENQR    LA    R2,K48 ENQ ERROR\n         MVC   OUTPUT(K52),=CL52'ENQ SERIALIZATION FAILURE'\n         B     COMMON\nINPERROR LA    R2,K52 INPUT ERROR\n         MVC   OUTPUT(K52),=CL52'CONTROL CARD ERROR'\n         B     COMMON\nFSWAREQW LR    R2,RF SAVE RC FOR SWAREQ WRITE FAILURE\n         MVC   OUTPUT(K52),=CL52'INTERNAL SWAREQ WRITE FAILURE'\nCOMMON   L     RF,=A(PCOMMON)  24 BIT MODE\n         L     RF,K0(,RF) DITTO\n         BASSM R9,RF ...\n         B     MODEPROB CONTINUE\nCOMMONPT PUT   SYSPRINT,OUTPUT\nMODEPROB MODESET MODE=PROB,RELATED=('MODESUPV')\n         CLOSE (SYSIN,,SYSPRINT),MODE=31\n         FREEPOOL SYSIN\n         FREEPOOL SYSPRINT\n         LR    RF,R2 RESTORE RC\n         B     MAINEXIT\nFSYSPRNT LA    RF,K24 SYSPRINT OPEN ERROR\n         TM    SYSIN+K48,X10 DID SYSIN OPEN\n         BZ    MAINEXIT NO\n         CLOSE (SYSIN),MODE=31\n         FREEPOOL SYSIN\n         B     FSYSPRNT RESET\nFSYSIN   PUT   SYSPRINT,MSGSYSIN\n         CLOSE (SYSPRINT),MODE=31\n         FREEPOOL SYSPRINT\n         LA    RF,K28 SYSIN OPEN ERROR\n         B     MAINEXIT\nPPROCESS DC    A(PROCESSG) MODE24 ROUTINE\nPCOMMON  DC    A(COMMONPT) MODE24 ROUTINE\nSWAREQL  SWAREQ EPA=EPAPTR,MF=L\nENQE     ENQ   (SYSDSN,,E,,SYSTEM),RET=USE,MF=L  EXCLUSIVE\nENQS     ENQ   (SYSDSN,,S,,SYSTEM),RET=USE,MF=L  SHARED\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=80,     X\n               EODAD=EOFSYSIN\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=132\nFIRSTSCT DC    A(0) SAVED SVA OF FIRST SCT\nMOTHER   DC    A(0) MOTHERS TCB\nEPAPTR   DC    A(EPA) EPA PTR\nPATTERNL DC    F'0' PATTERN LEN\nEPA      DS    CL16' ' QMGR EPA\nSYSDSN   DC    CL8'SYSDSN' QNAME\nOUTPUT   DC    CL52' ' LEAVE CONTIG WITH INPUT FIELD\nINPUT    DC    CL80' ' INPUT MOVE AREA\n         ORG   INPUT+K0\nPATTERN  DS    CL8' ' INPUT PATTERN TO BE PROCESSED\nFILLER1  DS    C' ' FILLER\nZAPPAT   DS    CL8' ' PATTERN REPLACEMENT\nFILLER2  EQU   * *\n         ORG\nMSGSYSIN DC    CL132'OPEN FAILURE ON SYSIN DDNAME'\nFLAGS    DC    X'00' X80 EOF ON SYSIN, X40 CC WRITE REQ, X20 MATCHES\n         LTORG\n         CVT   DSECT=YES\n         IHADSAB\n         IEFJESCT\n         IEZJSCB\nTIOT     DSECT\n         IEFTIOT1\n         IHAPSA\n         IKJTCB\n         IEFZB505\n         IEFQMIDS\nJFCBMAP  DSECT\n         IEFJFCBN\nJCTMAP   DSECT\n         IEFAJCTB\nSCTMAP   DSECT\n         IEFASCTB\nSIOTMAP  DSECT\n         IEFASIOT\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(DYNADSN),DISP=SHR,UNIT=\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDSCAN": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01:\\x00\\x00\\x00\\x91\\x02_\\x00\\x923/\\x11D\\x00\\xec\\x01\\xe2\\x00\\x8f\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.58", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1992-11-27T11:44:00", "lines": 236, "newlines": 482, "modlines": 143, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nPDS      TITLE 'SCAN LOADLIB PDS FOR VSCOB FIB FILE ACCES'\nFDSCAN   CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nFDSCAN   AMODE 24\nFDSCAN   RMODE 24\n         SAVE  (14,12),,FDSCAN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING FDSCAN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K3,R3),K8(R4) SAVE MEMBER TTR\n         MVC   K4(K8,R3),K0(R4) MEMBER NAME\n         MVI   K3(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */\n         LA    R3,K12(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         CLC   DIRBLOCK(K8),K0(R4) BLOCK END\n         BE    GETDIR YES\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R8,=A(TTRLIST) /* START OF DIR LIST */\nMEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         LR    R7,R3       /* SCAN FOR FIB */\n         SLR   R6,R6\n         LA    R9,IOAREA SCAN AREA\n         D     R6,=F'256' MAX TRT LEN\n         LTR   R7,R7 MAJOR SCAN\n         BZ    LASTSEG\n         SLR   R1,R1\nSCAN     TRT   K0(K256,R9),SCANF\n         BZ    NOTFOUND\n         CLC   =C'FIB',K0(R1) FIB WORD\n         MVI   K0(R1),C'X' REPLACE AND RESUME SCAN\n         BNE   SCAN ...\n         MVC   DDNAME(K8),K6(R1) SAVE DDNAME\n         MVC   MEMNAME(K8),K4(R8)\n         MVC   ACCESS(K6),=CL6'INPUT'\n         TM    K48(R1),X80\n         BO    DOWRT\n         MVC   ACCESS(K6),=CL6'OUTPUT'\nDOWRT    PUT   SYSUT2,RESULT\n         B     SCAN\nNOTFOUND LA    R9,K256(,R9) NEXT\n         BCT   R7,SCAN\nLASTSEG  LTR   R6,R6 REMAINDER\n         BZ    GETMEM\n         BCTR  R6,0\n         EX    R6,LASTTRT\n         LA    R6,K1(,R6) FOR RESCAN\n         BZ    GETMEM\n         CLC   =C'FIB',K0(R1) FIB WORD\n         MVI   K0(R1),C'X' REPLACE AND RESUME SCAN\n         BNE   LASTSEG ...\n         MVC   DDNAME(K8),K6(R1) SAVE DDNAME\n         MVC   MEMNAME(K8),K4(R8)\n         MVC   ACCESS(K6),=CL6'INPUT'\n         TM    K48(R1),X80\n         BO    DOWRTL\n         MVC   ACCESS(K6),=CL6'OUTPUT'\nDOWRTL   PUT   SYSUT2,RESULT\n         B     LASTSEG\nLASTTRT  TRT   K0(*-*,R9),SCANF\nMEMEND   LA    R8,K12(,R8) /* NEXT TTR */\n         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */\n         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */\n         FREEPOOL SYSUT2\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X\n               KEYLEN=0,LRECL=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM),LRECL=24\nSCANF    DC    256X'00'\n         ORG   SCANF+C'F'\n         DC    X'FF'\n         ORG\nRESULT   DC    CL24' '\n         ORG   RESULT\nMEMNAME  DC    CL8' '\n         DC    C' '\nDDNAME   DC    CL8' '\n         DC    C' '\nACCESS   DC    CL6' '\n         ORG\nSAVRECFM DC    AL1(K0)\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K32760)CL12' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(FDSCAN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.SYSUT1 DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//*G.SYSUT2 DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FREEALL": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x13O\\x00\\x91\\x13O\\x14G\\x00s\\x00o\\x00\\x07\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-05-14T00:00:00", "modifydate": "1991-05-14T14:47:00", "lines": 115, "newlines": 111, "modlines": 7, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nFREEALL  CSECT\n* SCAN TIOT AND SET ALL DSAB INUSE BITS ON CAUSING ALL DYNALLOC\n* REQUESTS TO BE TREATED AS IF REGULAR JCL IN TERMS OF TSO/E\n* FREE ALL COMMAND.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nFREEALL  AMODE 24\nFREEALL  RMODE 24\n         SAVE  (14,12),,FREEALL*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING FREEALL,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         USING PSA,R0\n         L     R2,PSATOLD\n         DROP  R0\n         USING TCB,R2\n         L     R2,TCBTIO\n         DROP  R2\n         USING TIOT1,R2\n         LA    R3,TIOENTRY\n         DROP  R2\n         USING TIOENTRY,R3\n         SLR   R4,R4 WORK\nLOOPTIOT IC    R4,TIOELNGH\n         LTR   R4,R4 TIOT END\n         BZ    ENDTIOT\n         CLI   TIOEDDNM,C' '\n         BE    SCANTIOT\n         CLI   TIOEDDNM,X'00'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'SYS'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'ISP'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'ISR'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(4),=C'STEP'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'JOB'\n         BE    SCANTIOT\n         MVC   DRETDDNM+6(8),=CL8' '\n         LA    RF,8\n         LA    R1,TIOEDDNM+7\nLOOPSIZE CLI   0(R1),C' '\n         BNE   SIZEDDNM\n         BCTR  RF,0\n         BCT   R1,LOOPSIZE\nSIZEDDNM STC   RF,DRETDDNM+5\n         MVC   DRETDDNM+6(8),TIOEDDNM\n         LA    R1,DSVC99P\n         SVC   99\n         TM    DRESP,X'40' INUSE ALREADY OR JCL ALLOC\n         BO    SCANTIOT\n         TM    DRESP,X'08' INUSE ALREADY OR JCL ALLOC\n         BZ    SCANTIOT\n         LA    R1,ASVC99P\n         SVC   99\nSCANTIOT LA    R3,0(R4,R3) NEXT TIOT ENTRY\n         B     LOOPTIOT\nENDTIOT  L     RD,4(RD)\n         RETURN (14,12),RC=0\nASVC99P  DC    0F'0',X'80',AL3(ARB)\nARB      DC    X'1402000000000000'\n         DC    A(ATEXTP),8X'00'\nATEXTP   DC    X'00',AL3(DRETDDNM)\n         DC    X'80',AL3(PERMALLC)\nPERMALLC DC    X'00070000'\nDSVC99P  DC    0F'0',X'80',AL3(DRB)\nDRB      DC    X'1407000000000000'\n         DC    A(DTEXTP),8X'00'\nDTEXTP   DC    X'00',AL3(DRETATTR)\n         DC    X'80',AL3(DRETDDNM)\nDRETDDNM DC    X'000100010008',C'????????'\nDRETATTR DC    X'000C00010001'\nDRESP    DC    X'00' REQUEST RESP HERE\n         LTORG\n         PRINT NOGEN\n         IHAPSA\n         IKJTCB\n         DSECT\n         IEFTIOT1\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(FREEALL),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GRSUSER": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x91\\x08O\\x00\\x91\\x17\\x7f\\x12!\\x00\\xcc\\x00\\xad\\x009\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1991-03-25T00:00:00", "modifydate": "1991-06-26T12:21:00", "lines": 204, "newlines": 173, "modlines": 57, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nGRS      TITLE 'GQSCAN SERVICES'\nGRSUSER  CSECT , /* GRSUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nGRSUSER  AMODE 24\nGRSUSER  RMODE 24\n         SAVE  (14,12),,GRSUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING GRSUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         MODESET KEY=ZERO,MODE=SUP\n         SLR   R9,R9 RC\n         L     R0,=A(DWORDS)\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING GRSWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         TM    USERPARM+K6,X80 DSN FOUND\n         BZ    DSNERROR\n         L     R5,USERPARM DSN PTR\n*        TM    USERPARM+K6,X40 DSN IN QUOTES\n*        BZ    NODSNQ    NO\n*        LA    R5,K1(,R5) POSITION DSN PTR PAST FIRST QUOTE\n*NODSNQ  EQU   * *\n         LH    R6,USERPARM+K4 DSN LEN - NEVER INCL QUOTES\n         MVC   GQSCANLX(GQSCANLL),GQSCANL\n         GQSCAN AREA=(GQRESP,K4095),                                   X\n               RESNAME=(QNAME,(R5),(R6),SPECIFIC,K8),MF=(E,GQSCANLX)\n         LR    R9,RF SAVE RC\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         DROP  R4\n         LTR   R9,R9 CHEK RC\n         BZ    GQ0\n         CH    R9,=H'8' TOOO MUCH DATA\n         BE    GQ0\n         B     NODATA   ERROR\nGQ0      MVC   MSGRESP,=CL24' ' FILLER\n         LA    R7,GQRESP\n         USING RIB,R7\n         L     R4,RIBNRIBE RIBE COUNT RETURNED\n         LTR   R4,R4 CHECK\n         BZ    NODATA\n         LH    R5,RIBVLEN VAR RIB SECTION LEN\n         LA    R7,RIBEND-RIB(R5,R7) /* START OF RIBES */\n         DROP  R7\n         USING RIBE,R7\nDORIBE   TM    RIBESFLG,RIBESTAT RES OWNER\n         BO    ISOWNER YES\nNEXTRIBE LA    R7,RIBEEND-RIBE(,R7) NEXT RIBE\n         BCT   R4,DORIBE LOOP\n         B     MAINEXIT ALL DONE\nISOWNER  MVC   MSGRESP(L'RIBEJBNM),RIBEJBNM OWNER NAME\n         MVC   MSGRESP+L'RIBEJBNM+K2(K9),=CL9'Exclusive' ASSUME\n         TM    RIBERFLG,RIBETYPE CHECK SHR OR EXCL\n         BZ    ISEXCL OK\n         MVC   MSGRESP+L'RIBEJBNM+K2(K9),=CL9'Share'\nISEXCL   LA    R1,MSGRESP\n         LA    R0,K24\n         TPUT  (1),(0)\n         LTR   R9,RF\n         BZ    NEXTRIBE CONTINUE\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         L     R0,=A(DWORDS)\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nDSNERROR LA    R9,K255 DSN NOT FOUND\n         B     MAINEXIT\nNODATA   TPUT  NODMSG,L'NODMSG\n         B     MAINEXIT\nNODMSG   DC    C'Dsname is not currently being used; not serialized.'\n         LTORG\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT DSNAME,UPPERCASE,PROMPT='Required dsname ?'\n         IKJENDP\nGQSCANL  GQSCAN SCOPE=ALL,MF=L\nGQSCANLL EQU    *-GQSCANL\nQNAME    DC    CL8'SYSDSN'\nGRSWMAP  DSECT\nSAVEAREA DC    18F'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nGQSCANLX GQSCAN SCOPE=ALL,MF=L\nMSGRESP  DC    (K24)C' '\nGQRESP   DC    (K4095)AL1(K0)\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         ISGRIB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(WHOHAS),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ICHRDSNT": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91#O\\x00\\x91#O\\x126\\x00\\x12\\x00!\\x00\\x07\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-08-22T00:00:00", "modifydate": "1991-08-22T12:36:00", "lines": 18, "newlines": 33, "modlines": 7, "user": "IBMUSER"}, "text": "//ICHRDSNT JOB 53040105300000000,'J KAPLAN',NOTIFY=IBMUSER,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//STEP1 EXEC ASMHCL,PARM.L=(RENT,XREF,LIST,LET,NCAL)\n//C.SYSIN DD  *\nICHRDSNT CSECT\n         DC    AL1(1)             INDICATES ONE RACF DATA SET\n         DC    CL44'SYS1.RACF1'   PRIMARY RACF DS NAME\n         DC    CL44'SYS1.RACF2'   BACKUP RACF DS NAME\n         DC    AL1(255)           # RESIDENT INDEX AND DATA BLOCKS\n         DC    X'81'              ALL UPDATES DUPLICATED ON BACKUP DS  X\n                                  USE RESIDENT DATA BLOCKS        @A2C\n         END\n/*\n//L.SYSLMOD DD DSN=SYSM.TECH.COMMON.LPALIB,DISP=SHR,UNIT=,SPACE=\n//L.SYSIN   DD  *\n       ENTRY ICHRDSNT\n      NAME ICHRDSNT(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ICHRFR01": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x92\\x18O\\x00\\x94\\x07\\x0f\\x13V\\x00B\\x00*\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf3@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "1994-03-11T13:56:00", "lines": 66, "newlines": 42, "modlines": 0, "user": "TECH103"}, "text": "//ICHRFRSA JOB 5305010530000000,'TECH.SUPP.DANBOWEN',NOTIFY=TECH103,\n//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//*\n//* MEMBER: SYS1.SAMPLIB(RACINSTL)\n//*\n//* DOC: THIS JOB IS USED TO PERFORM THE ASSEMBLY AND LINKEDIT OF\n//*      RACF USER INSTALLATION-DEFINED SAF ROUTER TABLE\n//*      ENTRIES PER INSTALL OF CA-LIBRARIAN 3.9 ISPF/CCF.\n//*      THE RFT ENTRIES ARE REQUIRED TO ALLOW THE RACF EXTERNAL\n//*      SECURITY INTERFACE TO FUNCTION FOR CCF AUTHORIZATION.\n//* NOTE: ENTRY FOR ( JOBCLASS ) DEFINES GENERAL RESOURCE THAT WILL BE\n//*       USED TO PROTECT JES2 INITIATOR JOBCLASS VIA TSO SUBMIT EXIT.\n//*\n//ASSEM     EXEC PGM=IEV90,PARM=(OBJECT,NODECK)\n//SYSPRINT  DD SYSOUT=*\n//SYSLIB    DD DSN=SYSM.CALIBR.V3R9M0.CAIMAC.MACLIB,DISP=SHR\n//          DD DSN=SYSS.APCDDS.V1R0M0.CAIMAC,DISP=SHR\n//          DD DSN=SYST.MACLIB,DISP=SHR\n//          DD DSN=SYST.MODGEN,DISP=SHR\n//SYSUT1    DD UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT2    DD UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT3    DD UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSLIN    DD DSN=&&OBJECT,UNIT=VIO,DISP=(,PASS),SPACE=(80,(60,5))\n//SYSIN     DD *\nICHRFR01 CSECT\nCA@EMCCF ICHRFRTB CLASS=CA@EMCCF,ACTION=RACF\nCA@SNCCF ICHRFRTB CLASS=CA@SNCCF,ACTION=RACF\nCA@MD    ICHRFRTB CLASS=CA@MD,ACTION=RACF\nCA@DS    ICHRFRTB CLASS=CA@DS,ACTION=RACF\nT@T1TRN  ICHRFRTB CLASS=T@T1TRN,ACTION=RACF\nG@T1TRN  ICHRFRTB CLASS=G@T1TRN,ACTION=RACF\nT@T2TRN  ICHRFRTB CLASS=T@T2TRN,ACTION=RACF\nG@T2TRN  ICHRFRTB CLASS=G@T2TRN,ACTION=RACF\nT@T3TRN  ICHRFRTB CLASS=T@T3TRN,ACTION=RACF\nG@T3TRN  ICHRFRTB CLASS=G@T3TRN,ACTION=RACF\nT@T8TRN  ICHRFRTB CLASS=T@T8TRN,ACTION=RACF\nG@T8TRN  ICHRFRTB CLASS=G@T8TRN,ACTION=RACF\nT@T9TRN  ICHRFRTB CLASS=T@T9TRN,ACTION=RACF\nG@T9TRN  ICHRFRTB CLASS=G@T9TRN,ACTION=RACF\nT@A1TRN  ICHRFRTB CLASS=T@A1TRN,ACTION=RACF\nG@A1TRN  ICHRFRTB CLASS=G@A1TRN,ACTION=RACF\nT@Q1TRN  ICHRFRTB CLASS=T@Q1TRN,ACTION=RACF\nG@Q1TRN  ICHRFRTB CLASS=G@Q1TRN,ACTION=RACF\nT@P1TRN  ICHRFRTB CLASS=T@P1TRN,ACTION=RACF\nG@P1TRN  ICHRFRTB CLASS=G@P1TRN,ACTION=RACF\nT@P2TRN  ICHRFRTB CLASS=T@P2TRN,ACTION=RACF\nG@P2TRN  ICHRFRTB CLASS=G@P2TRN,ACTION=RACF\nT@P3TRN  ICHRFRTB CLASS=T@P3TRN,ACTION=RACF\nG@P3TRN  ICHRFRTB CLASS=G@P3TRN,ACTION=RACF\nT@P4TRN  ICHRFRTB CLASS=T@P4TRN,ACTION=RACF\nG@P4TRN  ICHRFRTB CLASS=G@P4TRN,ACTION=RACF\nT@P5TRN  ICHRFRTB CLASS=T@P5TRN,ACTION=RACF\nG@P5TRN  ICHRFRTB CLASS=G@P5TRN,ACTION=RACF\nENDTAB   ICHRFRTB TYPE=END\n         END   ICHRFR01\n/*\n//LNKEDT  EXEC PGM=IEWL,PARM='LIST,RENT',COND=(0,LT,ASSEM)\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD UNIT=VIO,SPACE=(1024,(50,20))\n//SYSLIN    DD DSN=&&OBJECT,DISP=(OLD,DELETE)\n//          DD DDNAME=SYSIN\n//SYSLMOD   DD DSN=SYS1.LINKLIB,DISP=SHR\n//SYSIN     DD *\n      NAME    ICHRFR01(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ICHRIN03": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01,\\x00\\x00\\x00\\x91!O\\x00\\x92\\x07\\x1f\\t!\\x01\\xd5\\x08\\xc4\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf0\\xf0\\xf1@@@'", "ispf": {"version": "01.44", "flags": 0, "createdate": "1991-08-02T00:00:00", "modifydate": "1992-03-11T09:21:00", "lines": 469, "newlines": 2244, "modlines": 0, "user": "TECH001"}, "text": "//ICHRIN03 JOB 53050105300000000,'T FINNER',NOTIFY=TECH001,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//*******************************************************************//\n//*   THE FORMAT OF THE TABLE IS AS FOLLOWS -                       *//\n//*     . 2 BYTE NUMBER OF ENTRIES FIELD, ZERO IF NO ENTRIES.       *//\n//*       THE VALUE OF THE HIGH ORDER BIT IN THIS FIELD             *//\n//*       INDICATES THE FORMAT OF THE TABLE:                        *//\n//*                 '0'B - OLD TABLE FORMAT                         *//\n//*                 '1'B - NEW TABLE FORMAT                         *//\n//*     . ARRAY OF STARTED PROC/USERID/GROUP NAMES IN FOLLOWING     *//\n//*       FORMAT -                                                  *//\n//*       . 8 CHARACTER STARTED PROC NAME, LEFT JUSTIFIED AND PADDED*//\n//*         ON THE RIGHT WITH BLANKS.                               *//\n//*       . 8 CHARACTER USERID NAME, LEFT JUSTIFIED AND PADDED ON   *//\n//*         THE RIGHT WITH BLANKS.                                  *//\n//*       . 8 CHARACTER GROUP NAME, LEFT JUSTIFIED AND PADDED ON    *//\n//*         RIGHT WITH BLANKS. IF THE DEFAULT GROUP DEFINED IN THE  *//\n//*         USER ENTRY IS TO BE USED, THIS FIELD SHOULD CONTAIN ALL *//\n//*         BLANKS.                                                 *//\n//*                                                                 *//\n//*         THE FOLLOWING FIELDS ARE AVAILABLE ONLY IN THE NEW      *//\n//*         TABLE FORMAT:                                           *//\n//*                                                                 *//\n//*       . ONE BYTE OF FLAGS:                                      *//\n//*             BIT  0   - VALUE OF '1'B INDICATES THIS ENTRY       *//\n//*                        WILL HAVE THE 'PRIVILEGED' ATTRIBUTE.    *//\n//*             BIT  1   - VALUE OF '1'B INDICATES THIS ENTRY       *//\n//*                        WILL HAVE THE 'TRUSTED' ATTRIBUTE.       *//\n//*             BITS 2-7 - RESERVED FLAG BITS. EACH OF THESE BITS   *//\n//*                        MUST HAVE A VALUE OF ZERO.               *//\n//*             NOTE:IF BOTH BIT 0 AND BIT 1 HAVE THE VALUE OF '1'B *//\n//*             THEN THE 'PRIVILEGED' OVERRIDES THE 'TRUSTED'       *//\n//*             ATTRIBUTE.                                          *//\n//*       . 7 BYTES OF RESERVED STORAGE WHICH MUST BE SET TO        *//\n//*         BINARY ZEROES.                                          *//\n//*                                                             @A1A*//\n//*******************************************************************//\n//STEP1 EXEC ASMHCL,PARM.L=(RENT,XREF,LIST,LET,NCAL)\n//C.SYSIN DD   *\nICHRIN03 CSECT\n         TITLE 'ICHRIN03 - STARTED PROCEDURES TABLE'\n         DC    XL2'8045'          NEW FORMAT - 69 ENTRIES\n*\n* THIS RACF STARTED TASK TABLE IS MAINTAINED IN ALPHABETICAL ORDER\n*\n         DC    CL8'ACTTSO  '      PROCNAME\n         DC    CL8'ACTTSO  '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'APPC    '      PROCNAME\n         DC    CL8'APPC    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'ASCH    '      PROCNAME\n         DC    CL8'ASCH    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'BLSJPRMI'      PROCNAME\n         DC    CL8'BLSJPRMI'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CADSXTD1'      PROCNAME\n         DC    CL8'DISPATCH'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CADSXTD2'      PROCNAME\n         DC    CL8'DISPATCH'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CADSXTD3'      PROCNAME\n         DC    CL8'DISPATCH'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CADSXTD4'      PROCNAME\n         DC    CL8'DISPATCH'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CAS9    '      PROCNAME\n         DC    CL8'CAS9    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CATALOG '      PROCNAME\n         DC    CL8'CATALOG '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICSAT1 '      PROCNAME\n         DC    CL8'CICSTEST'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICSP2  '      PROCNAME\n         DC    CL8'CICSPROD'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICSQA1 '      PROCNAME\n         DC    CL8'CICSPROD'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICSSALE'      PROCNAME\n         DC    CL8'CICSPROD'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICSTECH'      PROCNAME\n         DC    CL8'CICSPROD'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICST1  '      PROCNAME\n         DC    CL8'CICSTEST'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICST2  '      PROCNAME\n         DC    CL8'CICSTEST'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICST3  '      PROCNAME\n         DC    CL8'CICSTEST'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'CICST9  '      PROCNAME\n         DC    CL8'CICSTEST'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'DFHSM   '      PROCNAME\n         DC    CL8'DFHSM   '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'DISPATCH'      PROCNAME\n         DC    CL8'DISPATCH'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'DLF     '      PROCNAME\n         DC    CL8'DLF     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'DOCMANIG'      PROCNAME\n         DC    CL8'DOCMANIG'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'DOCMAN17'      PROCNAME\n         DC    CL8'DOCMAN17'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'DUMPSRV '      PROCNAME\n         DC    CL8'DUMPSRV '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'ELD     '      PROCNAME\n         DC    CL8'ELD     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'GTF     '      PROCNAME\n         DC    CL8'GTF     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'IAMSTART'      PROCNAME\n         DC    CL8'IAMSTART'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'ICAS17  '      PROCNAME\n         DC    CL8'ICAS17  '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'IEEVMPCR'      PROCNAME\n         DC    CL8'IEEVMPCR'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'IRRDPTAB'      PROCNAME\n         DC    CL8'IRRDPTAB'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'JES2    '      PROCNAME\n         DC    CL8'JES     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'40'            TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'JES328SA'      PROCNAME\n         DC    CL8'JES328X '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'40'            TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'JESX    '      PROCNAME\n         DC    CL8'JES     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'40'            TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'JESY    '      PROCNAME\n         DC    CL8'JES     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'40'            TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'JESZ    '      PROCNAME\n         DC    CL8'JES     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'40'            TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'LLA     '      PROCNAME\n         DC    CL8'LLA     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NET     '      PROCNAME\n         DC    CL8'NET     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NPMSA   '      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NPMSM   '      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVAAAUTO'      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVAASSI '      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVAVVTAM'      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVAVSSI '      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVMAAUTO'      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVMASSI '      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVMVVTAM'      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'NVMVSSI '      PROCNAME\n         DC    CL8'NETVIEW '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'OLTEC   '      PROCNAME\n         DC    CL8'OLTEC   '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'PCICS1  '      PROCNAME\n         DC    CL8'CICSPROD'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'PHOENIX '      PROCNAME\n         DC    CL8'PHOENIX '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'RESOLVE '      PROCNAME\n         DC    CL8'RESOLVE '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'RMF     '      PROCNAME\n         DC    CL8'RMF     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'SAMON   '      PROCNAME\n         DC    CL8'SAMON   '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'SMF     '      PROCNAME\n         DC    CL8'SMF     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'SPMSINIT'      PROCNAME\n         DC    CL8'SPMS    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'TLMS    '      PROCNAME\n         DC    CL8'TLMS    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'TMONA   '      PROCNAME\n         DC    CL8'TMON    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'TMONDLSA'      PROCNAME\n         DC    CL8'TMON    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'TMONM   '      PROCNAME\n         DC    CL8'TMON    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'TMONDLSM'      PROCNAME\n         DC    CL8'TMON    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'TSO     '      PROCNAME\n         DC    CL8'TSO     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'VAPS    '      PROCNAME\n         DC    CL8'VAPS    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'VCS1    '      PROCNAME\n         DC    CL8'VCS1    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'VLF     '      PROCNAME\n         DC    CL8'VLF     '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'VSAMTUNE'      PROCNAME\n         DC    CL8'VSAMTUNE'      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'XCOM    '      PROCNAME\n         DC    CL8'XCOM    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'ZEKE    '      PROCNAME\n         DC    CL8'ZEKE    '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n         DC    CL8'*       '      GENERIC PROCNAME\n         DC    CL8'STCUSER '      USERID\n         DC    CL8'STCGROUP'      GROUP\n         DC    XL1'00'            NOT PRIVILEGED, NOT TRUSTED\n         DC    XL7'00'            RESERVED\n*\n* THIS RACF STARTED TASK TABLE IS MAINTAINED IN ALPHABETICAL ORDER\n*\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LPALIB,DISP=SHR,UNIT=,SPACE=\n//L.SYSIN   DD  *\n       ENTRY ICHRIN03\n       NAME ICHRIN03(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ICHRRCDE": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01F\\x00\\x00\\x00\\x92\\x18O\\x00\\x94\\x07\\x0f\\x13X\\x01S\\x00K\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf3@@@'", "ispf": {"version": "01.70", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "1994-03-11T13:58:00", "lines": 339, "newlines": 75, "modlines": 0, "user": "TECH103"}, "text": "//ICHRRCSA JOB 5305010530000000,'TECH.SUPP.DANBOWEN',NOTIFY=TECH103,\n//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//*\n//* MEMBER: SYS1.SAMPLIB(RACINSTL)\n//*\n//* DOC: THIS JOB IS USED TO PERFORM THE ASSEMBLY AND LINKEDIT OF\n//*      RACF USER INSTALLATION-DEFINED CLASS DESCRIPTOR TABLE\n//*      ( CDT ) ENTRIES PER INSTALL OF CA-LIBRARIAN 3.9 ISPF/CCF.\n//*      THE CDT ENTRIES ARE REQUIRED TO ALLOW THE RACF EXTERNAL\n//*      SECURITY INTERFACE TO FUNCTION FOR CCF AUTHORIZATION.\n//*\n//* NOTE: THE ( JOBCLASS ) ENTRY IS USED DEFINE THE GENERAL RESOURCE\n//*       CLASS TO PROTECT THE JES2 INITIATOR JOBCLASS.\n//*       ***  LINKAGE EDITOR ORDER STATEMENTS ... ***\n//*       THE CSECTS NAMES ARE COMPRISED OF ALL ICHERCDE MACRO\n//*       ENTRIES WHICH CONTAIN A CLASS= SPECIFICATION.\n//*            ORDER  ****THE CSECTS CAN BE IN ANY ORDER\n//*            ORDER  ****BUT THE ICHRRCDE CSECT MUST BE LAST.\n//*\n//ASSEM     EXEC PGM=IEV90,PARM=(OBJECT,NODECK)\n//SYSPRINT  DD SYSOUT=*\n//SYSLIB    DD DSN=SYSM.CALIBR.V3R9M0.CAIMAC.MACLIB,DISP=SHR\n//          DD DSN=SYST.MACLIB,DISP=SHR\n//          DD DSN=SYST.MODGEN,DISP=SHR\n//SYSUT1    DD UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT2    DD UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSUT3    DD UNIT=VIO,SPACE=(CYL,(1,1))\n//SYSLIN    DD DSN=&&OBJECT,UNIT=VIO,DISP=(,PASS),SPACE=(80,(60,5))\n//SYSIN     DD *\nCA@EMCCF ICHERCDE CLASS=CA@EMCCF,                                      +\n               ID=254,                                                 +\n               MAXLNTH=17,                                             +\n               FIRST=ALPHA,                                            +\n               OTHER=ANY,                                              +\n               POSIT=19,                                               +\n               OPER=NO\nCA@SNCCF ICHERCDE CLASS=CA@SNCCF,                                      +\n               ID=253,                                                 +\n               MAXLNTH=39,                                             +\n               FIRST=ALPHA,                                            +\n               OTHER=ANY,                                              +\n               POSIT=19,                                               +\n               OPER=NO\nCA@MD    ICHERCDE CLASS=CA@MD,                                         +\n               ID=252,                                                 +\n               MAXLNTH=8,                                              +\n               FIRST=ALPHA,                                            +\n               OTHER=ALPHANUM,                                         +\n               POSIT=19,                                               +\n               OPER=NO\nCA@DS    ICHERCDE CLASS=CA@DS,                                         +\n               ID=251,                                                 +\n               MAXLNTH=8,                                              +\n               FIRST=ALPHA,                                            +\n               OTHER=ALPHANUM,                                         +\n               POSIT=19,                                               +\n               OPER=NO\nT@T1TRN  ICHERCDE CLASS=T@T1TRN,                                       +\n               ID=250,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=22,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@T1TRN\nG@T1TRN  ICHERCDE CLASS=G@T1TRN,                                       +\n               ID=250,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=22,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@T1TRN\nT@T2TRN  ICHERCDE CLASS=T@T2TRN,                                       +\n               ID=249,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=23,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@T2TRN\nG@T2TRN  ICHERCDE CLASS=G@T2TRN,                                       +\n               ID=249,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=23,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@T2TRN\nT@T3TRN  ICHERCDE CLASS=T@T3TRN,                                       +\n               ID=248,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=24,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@T3TRN\nG@T3TRN  ICHERCDE CLASS=G@T3TRN,                                       +\n               ID=248,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=24,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@T3TRN\nT@T8TRN  ICHERCDE CLASS=T@T8TRN,                                       +\n               ID=247,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=25,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@T8TRN\nG@T8TRN  ICHERCDE CLASS=G@T8TRN,                                       +\n               ID=247,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=25,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@T8TRN\nT@T9TRN  ICHERCDE CLASS=T@T9TRN,                                       +\n               ID=246,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=26,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@T9TRN\nG@T9TRN  ICHERCDE CLASS=G@T9TRN,                                       +\n               ID=246,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=26,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@T9TRN\nT@A1TRN  ICHERCDE CLASS=T@A1TRN,                                       +\n               ID=245,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=27,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@A1TRN\nG@A1TRN  ICHERCDE CLASS=G@A1TRN,                                       +\n               ID=245,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=27,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@A1TRN\nT@Q1TRN  ICHERCDE CLASS=T@Q1TRN,                                       +\n               ID=244,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=28,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@Q1TRN\nG@Q1TRN  ICHERCDE CLASS=G@Q1TRN,                                       +\n               ID=244,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=28,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@Q1TRN\nT@P1TRN  ICHERCDE CLASS=T@P1TRN,                                       +\n               ID=243,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=29,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@P1TRN\nG@P1TRN  ICHERCDE CLASS=G@P1TRN,                                       +\n               ID=243,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=29,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@P1TRN\nT@P2TRN  ICHERCDE CLASS=T@P2TRN,                                       +\n               ID=242,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=30,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@P2TRN\nG@P2TRN  ICHERCDE CLASS=G@P2TRN,                                       +\n               ID=242,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=30,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@P2TRN\nT@P3TRN  ICHERCDE CLASS=T@P3TRN,                                       +\n               ID=241,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=31,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@P3TRN\nG@P3TRN  ICHERCDE CLASS=G@P3TRN,                                       +\n               ID=241,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=31,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@P3TRN\nT@P4TRN  ICHERCDE CLASS=T@P4TRN,                                       +\n               ID=240,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=32,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@P4TRN\nG@P4TRN  ICHERCDE CLASS=G@P4TRN,                                       +\n               ID=240,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=32,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@P4TRN\nT@P5TRN  ICHERCDE CLASS=T@P5TRN,                                       +\n               ID=239,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=33,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               GROUP=G@P5TRN\nG@P5TRN  ICHERCDE CLASS=G@P5TRN,                                       +\n               ID=239,                                                 +\n               MAXLNTH=13,                                             +\n               FIRST=ANY,                                              +\n               OTHER=ANY,                                              +\n               POSIT=33,                                               +\n               OPER=NO,                                                +\n               RACLIST=ALLOWED,                                        +\n               DFTUACC=NONE,                                           +\n               MEMBER=T@P5TRN\n         ICHERCDE\n         END\n/*\n//LNKEDT  EXEC PGM=IEWL,PARM='LIST,RENT',COND=(0,LT,ASSEM)\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD UNIT=VIO,SPACE=(1024,(50,20))\n//SYSLIN    DD DSN=&&OBJECT,DISP=(OLD,DELETE)\n//          DD DDNAME=SYSIN\n//SYSLMOD   DD DSN=SYS1.LINKLIB,DISP=SHR\n//SYSIN     DD *\n      ORDER   CA@EMCCF\n      ORDER   CA@SNCCF\n      ORDER   CA@MD\n      ORDER   CA@DS\n      ORDER   T@T1TRN\n      ORDER   G@T1TRN\n      ORDER   T@T2TRN\n      ORDER   G@T2TRN\n      ORDER   T@T3TRN\n      ORDER   G@T3TRN\n      ORDER   T@T8TRN\n      ORDER   G@T8TRN\n      ORDER   T@T9TRN\n      ORDER   G@T9TRN\n      ORDER   T@A1TRN\n      ORDER   G@A1TRN\n      ORDER   T@Q1TRN\n      ORDER   G@Q1TRN\n      ORDER   T@P1TRN\n      ORDER   G@P1TRN\n      ORDER   T@P2TRN\n      ORDER   G@P2TRN\n      ORDER   T@P3TRN\n      ORDER   G@P3TRN\n      ORDER   T@P4TRN\n      ORDER   G@P4TRN\n      ORDER   T@P5TRN\n      ORDER   G@P5TRN\n      ORDER   ICHRRCDE\n      NAME    ICHRRCDE(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ICHSECOP": {"ttr": 2058, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91&/\\x00\\x91&/\\x16H\\x00\\x0c\\x00\\x12\\x00\\x0b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-09-19T00:00:00", "modifydate": "1991-09-19T16:48:00", "lines": 12, "newlines": 18, "modlines": 11, "user": "TECH110"}, "text": "//ICHSECOP JOB 53040105300000000,'J KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=T,MSGLEVEL=(1,1),REGION=8M\n//STEP1 EXEC PGM=AMASPZAP\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SYSM.TECH.COMMON.LPALIB,DISP=SHR\n//SYSIN    DD *\n  NAME  ICHSEC07 ICHSECOP\n  VER   0000   0000 0000 0A00 0000\n  REP   0000   8000 0000 0A00 0000\n  DUMPT ICHSEC07 ICHSECOP\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGDACSDC": {"ttr": 2060, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93 \\x8f\\x00\\x93 \\x9f\\x18S\\x00\\x9e\\x03\\x0f\\x00;\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-07-27T00:00:00", "modifydate": "1993-07-28T18:53:00", "lines": 158, "newlines": 783, "modlines": 59, "user": "TECH110"}, "text": "//TECH110F JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nIGD      TITLE 'IGDACSDC DATACLAS INSTALLATION EXIT'\nIGDACSDC CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIGDACSDC AMODE 31\nIGDACSDC RMODE ANY\n         SAVE  (14,12),,IGDACSDC*&SYSDATE*&SYSTIME\n         USING ACSPMD,R3\n         L     R3,K0(R1) ADDRESS PASSED PARAM LIST\n         USING ACSWORK,R4\n         L     R4,ACSPWORK MAP PASSED WORKAREA\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IGDACSDC,RA\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         LA    RD,SAVEAREA\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         USING ACERO,R5\n         L     R5,ACSPERO MAP READ ONLY VARS\n         USING ACERW,R6\n         L     R6,ACSPERW MAP R/W VARS\n         CLC   =AL2(K0),ACERODCL LEN OF CLASS NAME ASSIGNED\n         BE    EXIT LEAVE, NULL ASSIGNED\n         CLI   ACERODCV,C'$' REPLACEABLE VALUE ASSIGNED\n         BNE   EXIT NO\n         CLC   =AL2(K8),ACERODCL $DSOWNER\n         BNE   CHEK$5  CONTINUE\n         CLC   =C'$DSOWNER',ACERODCV\n         BNE   EXIT LEAVE\n         MVC   ACERWNCS(K4),=A(K1) 1 CLASS VAL\n         MVC   ACERWVAL(L'ACERODSO),ACERODSO RACF DSOWNER\n         LA    R7,K8 MAX LEN\n         LA    R8,ACERWVAL+K7 LAST POSSIBLE CHAR\nCHEK$2   CLI   K0(R8),C' ' BLANK\n         BNE   CHEK$3 NO\n         BCTR  R8,K0 -1\n         BCT   R7,CHEK$2 LOOP BACKWARDS\nCHEK$3   STCM  R7,K3,ACERWVLN STORE LEN\n         B     EXIT OKAY\nCHEK$5   CLC   =AL2(K5),ACERODCL $USER\n         BNE   EXIT  CONTINUE\n         CLC   =C'$USER',ACERODCV\n         BNE   EXIT LEAVE\n         MVC   ACERWNCS(K4),=A(K1) 1 CLASS VAL\n         MVC   ACERWVAL(L'ACERODSO),ACEROUSR USERID\n         LA    R7,K8 MAX LEN\n         LA    R8,ACERWVAL+K7 LAST POSSIBLE CHAR\nCHEK$7   CLI   K0(R8),C' ' BLANK\n         BNE   CHEK$8 NO\n         BCTR  R8,K0 -1\n         BCT   R7,CHEK$7 LOOP BACKWARDS\nCHEK$8   STCM  R7,K3,ACERWVLN STORE LEN\nEXIT     L     RD,K4(,RD) EXIT PROCESSING\n         RETURN (14,12),RC=0\n         LTORG\nACSWORK  DSECT , MAP ACS PASSED WORKAREA\nSAVEAREA DS    18F SAVEAREA\nIGDACSPM IGDACSPM ACS EXIT PARAM LIST\nIGDACERO IGDACERO ACS READ ONLY VARIABLES\nIGDACERW IGDACERW ACS READ WRITE VARIABLES\n         END\n/*\n//L.SYSLMOD DD DSN=SYST.LPALIB(IGDACSDC),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGDACSMC": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x93 \\x8f\\x00\\x94&?\\x15(\\x00\\x96\\x00\\x9e\\x00\\x14\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1993-07-27T00:00:00", "modifydate": "1994-09-20T15:28:00", "lines": 150, "newlines": 158, "modlines": 20, "user": "TECH110"}, "text": "//TECH110F JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nIGD      TITLE 'IGDACSMC MGMTCLAS INSTALLATION EXIT'\nIGDACSMC CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIGDACSMC AMODE 31\nIGDACSMC RMODE ANY\n         SAVE  (14,12),,IGDACSMC*&SYSDATE*&SYSTIME\n         USING ACSPMD,R3\n         L     R3,K0(R1) ADDRESS PASSED PARAM LIST\n         USING ACSWORK,R4\n         L     R4,ACSPWORK MAP PASSED WORKAREA\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IGDACSMC,RA\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         LA    RD,SAVEAREA\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         USING ACERO,R5\n         L     R5,ACSPERO MAP READ ONLY VARS\n         USING ACERW,R6\n         L     R6,ACSPERW MAP R/W VARS\n         CLC   =AL2(K0),ACEROMCL LEN OF CLASS NAME ASSIGNED\n         BE    EXIT LEAVE, NULL ASSIGNED\n         CLI   ACEROMCV,C'$' REPLACEABLE VALUE ASSIGNED\n         BNE   EXIT NO\n         CLC   =AL2(K7),ACEROMCL $USERID\n         BE    CHEKU   CONTINUE WITH USERID\n         CLC   =AL2(K8),ACEROMCL $DSOWNER\n         BNE   EXIT    CONTINUE\n         CLC   =C'$DSOWNER',ACEROMCV\n         BNE   EXIT LEAVE\n         MVC   ACERWVAL(L'ACERODSO),ACERODSO RACF DSOWNER\nCOMMONS  MVC   ACERWNCS(K4),=A(K1) 1 CLASS VAR\n         LA    R7,K8 MAX LEN\n         LA    R8,ACERWVAL+K7 LAST POSSIBLE CHAR\nCHEK$2   CLI   K0(R8),C' ' BLANK\n         BNE   CHEK$3 NO\n         BCTR  R8,K0 -1\n         BCT   R7,CHEK$2 LOOP BACKWARDS\nCHEK$3   STCM  R7,K3,ACERWVLN STORE LEN\nEXIT     L     RD,K4(,RD) EXIT PROCESSING\n         RETURN (14,12),RC=0\nCHEKU    CLC   =C'$USERID',ACEROMCV\n         BNE   EXIT LEAVE\n         MVC   ACERWVAL(L'ACERODSO),ACEROUSR CODED USERID\n         B     COMMONS CONTINUE\n         LTORG\nACSWORK  DSECT , MAP ACS PASSED WORKAREA\nSAVEAREA DS    18F SAVEAREA\nIGDACSPM IGDACSPM ACS EXIT PARAM LIST\nIGDACERO IGDACERO ACS READ ONLY VARIABLES\nIGDACERW IGDACERW ACS READ WRITE VARIABLES\n         END\n/*\n//L.SYSLMOD DD DSN=SYST.LPALIB(IGDACSMC),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISPDCNCT": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x91%o\\x00\\x91%\\x7f\\x11!\\x00\\x91\\x00\\xcc\\x00?\\xe3\\xc5\\xc3\\xc8\\xf0\\xf0\\xf1@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-09-13T00:00:00", "modifydate": "1991-09-14T11:21:00", "lines": 145, "newlines": 204, "modlines": 63, "user": "TECH001"}, "text": "//IBMUSERZ JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=IBMUSER,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nISP      TITLE 'TSO/E ISPF/PDF DYNAMIC CONCATENATION'\nISPDCNCT CSECT , /* ISPDCNCT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK90      EQU   90\nK92      EQU   92\nK96      EQU   96\nK104     EQU   104\nK117     EQU   117\nK160     EQU   160\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nISPDCNCT AMODE 24\nISPDCNCT RMODE 24\n         SAVE  (14,12),,ISPDCNCT*&SYSDATE*&SYSTIME\n         SPLEVEL SET=4 , /* MVS/ESA EXPANSION */\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING ISPDCNCT,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD\n         LA    RD,SAVEAREA\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         LA    R1,MESSAGE /* DYNALLOC ISPMLIB */\n         SVC   99\n         LA    R1,PANEL   /* DYNALLOC ISPPLIB */\n         SVC   99\n         LA    R1,SKELETON /*DYNALLOC ISPSLIB */\n         SVC   99\n         LA    R1,TABLE   /* DYNALLOC ISPTLIB */\n         SVC   99\n         LA    R1,PROC    /* DYNALLOC SYSPROC */\n         SVC   99\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=0\nSAVEAREA DC    (K9)D'0' /*SAVEAREA */\nMESSAGE  DC    AL1(X80),AL3(MSGRB)\nMSGRB    DC    AL1(K20,K3),AL2(K0),AL4(K0)\n         DC    AL4(MSGTXTP),AL4(K0,K0)\nMSGTXTP  DC    AL4(MSGTU1),AL1(X80),AL3(MSGTU2)\nMSGTU1   DC    AL2(K4,K0) /* PERM CONCAT */\nMSGTU2   DC    AL2(K1,K2),AL2(K7),C'ISPMLIB',AL2(K7),C'MESSAGE'\nPANEL    DC    AL1(X80),AL3(PNLRB)\nPNLRB    DC    AL1(K20,K3),AL2(K0),AL4(K0)\n         DC    AL4(PNLTXTP),AL4(K0,K0)\nPNLTXTP  DC    AL4(PNLTU1),AL1(X80),AL3(PNLTU2)\nPNLTU1   DC    AL2(K4,K0) /* PERM CONCAT */\nPNLTU2   DC    AL2(K1,K2),AL2(K7),C'ISPPLIB',AL2(K5),C'PANEL'\nSKELETON DC    AL1(X80),AL3(SKLRB)\nSKLRB    DC    AL1(K20,K3),AL2(K0),AL4(K0)\n         DC    AL4(SKLTXTP),AL4(K0,K0)\nSKLTXTP  DC    AL4(SKLTU1),AL1(X80),AL3(SKLTU2)\nSKLTU1   DC    AL2(K4,K0) /* PERM CONCAT */\nSKLTU2   DC    AL2(K1,K2),AL2(K7),C'ISPSLIB',AL2(K8),C'SKELETON'\nTABLE    DC    AL1(X80),AL3(TBLRB)\nTBLRB    DC    AL1(K20,K3),AL2(K0),AL4(K0)\n         DC    AL4(TBLTXTP),AL4(K0,K0)\nTBLTXTP  DC    AL4(TBLTU1),AL1(X80),AL3(TBLTU2)\nTBLTU1   DC    AL2(K4,K0) /* PERM CONCAT */\nTBLTU2   DC    AL2(K1,K2),AL2(K7),C'ISPTLIB',AL2(K5),C'TABLE'\nPROC     DC    AL1(X80),AL3(PRCRB)\nPRCRB    DC    AL1(K20,K3),AL2(K0),AL4(K0)\n         DC    AL4(PRCTXTP),AL4(K0,K0)\nPRCTXTP  DC    AL4(PRCTU1),AL1(X80),AL3(PRCTU2)\nPRCTU1   DC    AL2(K4,K0) /* PERM CONCAT */\nPRCTU2   DC    AL2(K1,K2),AL2(K7),C'SYSPROC',AL2(K4),C'PROC'\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(ISPDCNCT),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JARACCTC": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\"/\\x00\\x93\"/\\x152\\x00J\\x00J\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-08-10T00:00:00", "modifydate": "1993-08-10T15:32:00", "lines": 74, "newlines": 74, "modlines": 0, "user": "TECH114"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. JARACCTC.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT ACCOUNT-IN      ASSIGN TO JARACCTI\n                 ORGANIZATION IS SEQUENTIAL\n                 ACCESS IS SEQUENTIAL\n                 FILE STATUS IS ACCOUNT-STAT-IN.\n           SELECT ACCOUNT-FILE    ASSIGN TO JARACCTS\n                 ORGANIZATION IS INDEXED\n                 ACCESS IS SEQUENTIAL\n                 RECORD KEY IS ACCOUNT-KEY\n                 FILE STATUS IS ACCOUNT-STAT.\n           SELECT SORT-FILE       ASSIGN TO SORTWK1.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  ACCOUNT-FILE\n           BLOCK CONTAINS 0 CHARACTERS\n           LABEL RECORDS ARE STANDARD.\n       01  ACCOUNT-RECORD.\n           05 ACCOUNT-NAME        PIC X(38).\n           05 ACCOUNT-KEY         PIC X(16).\n           05 FILLER              PIC X(26).\n       FD  ACCOUNT-IN\n           BLOCK CONTAINS 0 CHARACTERS\n           LABEL RECORDS ARE STANDARD.\n       01  ACCOUNT-IN-RECORD.\n           05 ACCOUNT-IN-NAME        PIC X(38).\n           05 ACCOUNT-IN-KEY         PIC X(16).\n           05 FILLER                 PIC X(26).\n       SD  SORT-FILE\n           BLOCK CONTAINS 0 CHARACTERS\n           LABEL RECORDS ARE STANDARD.\n       01  SORT-RECORD.\n           05 SORT-NAME              PIC X(38).\n           05 SORT-KEY               PIC X(16).\n           05 FILLER                 PIC X(26).\n       WORKING-STORAGE SECTION.\n       01  ACCOUNT-STAT-IN        PIC X(2)               VALUE SPACES.\n       01  ACCOUNT-STAT           PIC X(2)               VALUE SPACES.\n       01  NOT-FOUND              PIC X(2)               VALUE SPACES.\n       01  SUB1                   PIC S9(4)  COMP        VALUE ZEROES.\n       PROCEDURE DIVISION.\n           OPEN INPUT ACCOUNT-IN\n                OUTPUT ACCOUNT-FILE.\n           IF ACCOUNT-STAT-IN  NOT EQUAL '00'\n              DISPLAY 'ACCOUNT-STAT-IN' ACCOUNT-STAT-IN\n              GO TO EOJ.\n           IF ACCOUNT-STAT     NOT EQUAL '00'\n              DISPLAY 'ACCOUNT-STAT   ' ACCOUNT-STAT\n              GO TO EOJ.\n           SORT SORT-FILE ON ASCENDING KEY SORT-KEY\n              INPUT PROCEDURE SORT-IN\n              OUTPUT PROCEDURE SORT-OUT.\n       EOJ.\n           CLOSE ACCOUNT-IN ACCOUNT-FILE.\n           STOP RUN.\n       SORT-IN SECTION.\n       READ-LOOP.\n           READ ACCOUNT-IN INTO SORT-RECORD AT END  GO TO SORT-IN-EXIT.\n           RELEASE SORT-RECORD.\n           GO TO READ-LOOP.\n       SORT-IN-EXIT.\n           EXIT.\n       SORT-OUT SECTION.\n       RETURN-LOOP.\n           RETURN SORT-FILE INTO ACCOUNT-RECORD\n                       AT END  GO TO SORT-OUT-EXIT.\n           WRITE ACCOUNT-RECORD.\n           GO TO RETURN-LOOP.\n       SORT-OUT-EXIT.\n           EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JAXXA01": {"ttr": 2319, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\"/\\x00\\x93%?!\\x14\\x00F\\x00<\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-08-10T00:00:00", "modifydate": "1993-09-10T21:14:00", "lines": 70, "newlines": 60, "modlines": 0, "user": "TECH114"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. JAXXA01.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT ACCOUNT-FILE    ASSIGN TO JARACCTS\n                 ORGANIZATION IS INDEXED\n                 ACCESS IS RANDOM\n                 RECORD KEY IS ACCOUNT-KEY\n                 FILE STATUS IS ACCOUNT-STAT.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  ACCOUNT-FILE\n           LABEL RECORDS ARE STANDARD.\n       01  ACCOUNT-RECORD.\n           05 ACCOUNT-NAME        PIC X(38).\n           05 ACCOUNT-KEY         PIC X(16).\n           05 FILLER              PIC X(26).\n       WORKING-STORAGE SECTION.\n       01  ACCOUNT-STAT           PIC X(2)               VALUE SPACES.\n       01  NOT-FOUND              PIC X(2)               VALUE SPACES.\n       01  FIRST-RECORD           PIC X                  VALUE 'N'.\n           88 THIS-IS-FIRST-RECORD                       VALUE 'N'.\n           88 FILE-HAS-BEEN-OPENED                       VALUE 'Y'.\n       LINKAGE SECTION.\n       01  DELETE-EOF-INDICATOR   PIC X.\n       01  INSERT-INDICATOR       PIC X.\n       01  INPUT-RECORD.\n           05 FILLER              PIC X(76).\n           05 JARS-ACCOUNT        PIC X(16).\n           05 FILLER              PIC X(347).\n           05 JARS-GROUP6         PIC X(1).\n           05 FILLER              PIC X(46).\n           05 JARS-ACCOUNT2       PIC X(16).\n           05 JARS-ACCOUNT3.\n               10 FILLER          PIC X(15).\n               10 JARS-DISP-IND   PIC X(01).\n           05 FILLER              PIC X(3478).\n       PROCEDURE DIVISION  USING\n                                    INPUT-RECORD\n                                    DELETE-EOF-INDICATOR\n                                    INSERT-INDICATOR\n           .\n           IF DELETE-EOF-INDICATOR EQUAL HIGH-VALUES\n              CLOSE ACCOUNT-FILE\n              GOBACK\n           .\n           IF THIS-IS-FIRST-RECORD\n               PERFORM OPEN-PARA\n           .\n           IF JARS-DISP-IND EQUAL '*'\n                 MOVE JARS-ACCOUNT2 TO JARS-ACCOUNT\n           .\n           INSPECT JARS-ACCOUNT REPLACING ALL SPACES BY ZEROS.\n           MOVE JARS-ACCOUNT      TO ACCOUNT-KEY.\n           READ ACCOUNT-FILE INVALID KEY MOVE 'Y' TO NOT-FOUND.\n           IF ACCOUNT-STAT NOT EQUAL '00'\n               MOVE 'E' TO JARS-GROUP6\n           ELSE\n               MOVE ' ' TO JARS-GROUP6\n           .\n           GOBACK.\n       OPEN-PARA.\n           OPEN INPUT ACCOUNT-FILE\n           IF ACCOUNT-STAT NOT EQUAL '00'\n                 DISPLAY 'ACCOUNT-STAT  ' ACCOUNT-STAT\n           ELSE\n                 MOVE 'Y' TO FIRST-RECORD\n           .\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JESEXIT3": {"ttr": 2321, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x92\\x05\\x8f\\x00\\x92\\x06O\\x15U\\x000\\x01\\xc0\\x00*\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1992-02-27T00:00:00", "modifydate": "1992-03-04T15:55:00", "lines": 48, "newlines": 448, "modlines": 42, "user": "TECH110"}, "text": "//JESEXIT3 JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1,REUS'\n//C.SYSLIB DD DSN=SYSM.MVSESA.SMPMTS,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYSM.AMODGEN,DISP=SHR\n//         DD DSN=SYSM.HASPSRC,DISP=SHR\n//C.SYSIN  DD *\n         TITLE 'JES2 UEXIT3 JOB CLASS VALIDATION'\n         PRINT NOGEN\n         COPY  $HASPGBL\nJESEXIT3 $MODULE NOTICE=NONE,ENVIRON=JES2,                             X\n               TITLE='JES2 UEXIT3 JOB CLASS VALIDATION',               X\n               $HASPEQU,           JES2 HASPEQU DSECT                  X\n               $HCT,               JES2 HCT DSECT                      X\n               $JCT                JES2 JCT DSECT\nJESEXIT3 AMODE 31\nJESEXIT3 RMODE ANY\n**************\n************** LOADMOD(JESEXIT3) STORAGE=PVT\n************** EXIT(3) ROUTINE=J2UEXIT3,STATUS=ENABLED,TRACE=NO\n**************\n************** IF THE RACF USERID OF THE JOB SUBMITTED IS\n************** RMAX??? THEN THE JOB IS PRESUMED TO HAVE COME\n************** FROM A REMOTE LINE WHERE THE JOBCLASS MUST\n************** BE FORCED TO \"9\" AS AN XBM CLASS.\n************** THE USERID IS FORCED TO A VALUE THROUGH RACF\n************** JESINPUT RDEFINES AND PERMITS\n**************\n         USING JCT,R10             ESTABLISH ADDRESSABILITY TO JCT\nJ2UEXIT3 $ENTRY BASE=R12           BASE MAP\n         $SAVE NAME=J2UEXIT3       SAVE CALLERS REGS\n         LR    R12,R15             PROVIDE ADDRESS\n         CLI   JCTJOBID,C'J'       IS THIS A 'JOB'?\n         BNE   EXIT0               IF NOT LEAVE THIS EXIT\n         CLC   =C'RMAX',JCTENCKY   RACF USERID = RMAX???\n         BNE   EXIT0               NO, NOT REMOTE LINE USERID\n         CLI   JCTJCLAS,C'9'       IS JOBCLASS = XBM CLASS \"9\"\n         BE    EXIT0               YES\n         LA    R15,12              ELSE CANCEL JOB WITH ILLEGAL ACCT\n         B     RETURN              RETURN TO CALLER\nEXIT0    SLR   R15,R15             SET RETURN CODE TO ZERO = NORMAL\nRETURN   $RETURN RC=(R15)          RETURN TO CALLER\n         LTORG\n         $MODEND\n         END\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(JESEXIT3),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JSDPX01": {"ttr": 2562, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\"/\\x00\\x93\"/\\x156\\x00\\x8f\\x00\\x8f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-08-10T00:00:00", "modifydate": "1993-08-10T15:36:00", "lines": 143, "newlines": 143, "modlines": 0, "user": "TECH114"}, "text": "DISPEXIT CSECT\n         USING *,R15\n         B     ENTRY\n*\n         DC    C'INPUTV1.0-&SYSDATE-&SYSTIME'  EYE CATCHER\n*\n*  ENTRY LOGIC\n*\nENTRY     STM   R14,R12,12(R13)   STORE REGS\n          LR    R12,R15\n          USING DISPEXIT,R12\n          DROP  R15\n          LA    R14,SAVEAREA\n          ST    R13,4(R14)\n          ST    R14,8(R13)\n          LR    R13,R14\n*\n*  THESE ARE THE PASSED PARMS\n*  SEE THE SYSPROG GD FOR MORE INFO\n*\n* R2 = A(SMF RECORD)\n* R3 = A(1 CHAR DDISP INDIC)\n* R4 = A(1 CHAR INSERTION INDIC)\n* R5 = A(USER DATA AREA)\n*\n          LM    R2,R5,0(R1)   GET PASSED PARMS\n*\n*  IF R3 = 'FF' THIS IS EOF\n*\n          CLI    0(R3),X'FF'    IS THIS EOF CALL?\n          BE     FINISH   YES - FIN\n*  SEE IF RECORD TYPE = 6 (PRINT RECORD)\n*\n          USING SMFDSECT,R2   ADDRESS THE SMF REC\n          CLI   SMFTYPE,X'06'   IS IT A TYPE 6 REC?\n          BNE   FINISH   NO- LEAVE EXIT\n*\n*   GOT A TYPE 6 REC\n*\n          CLC   SM6SBS,=X'0010'   DISPATCH REC?\n          BE    DISPATCH    YES - GO PROCESS IT\n          CLC   SM6JBN,=C'DISPATCH'    JES RECORD FOR DISPATCH?\n          BE    DISPREC\n          CLC   SM6JBN,=C'CADSXTD1'   EXTERNAL WRITER FROM DISPATCH?\n          BE    DISPREC\n          CLC   SM6JBN,=C'CADSXTD2'            \"\n          BE    DISPREC\n          CLC   SM6JBN,=C'CADSXTD3'            \"\n          BE    DISPREC\n          CLC   SM6JBN,=C'CADSXTD4'            \"\n          BE    DISPREC\n          B     FINISH    NOT A DISPATCH-PRODUCED RECORD--KEEP IT\nDISPREC   CNOP  2,4\n          MVI   0(R3),X'FF'    YES - TELL JARS TO KILL THIS REC\n          B     FINISH     FINISHED\n*\n*   CHECK HERE IF DISPATHC IS CREATING USER RECS INSTEAD OF TYPE 6'S\n*\nDISPATCH  EQU   *\n*\n*  MOVE WHAT IS DESIRED TO USER AREA HERE\n*\n*  FINISHED\nFINISH    L     R13,4(R13)   GET ADDR OF CALLING SA\n          LM    R14,R12,12(R13)    RESTORE CALLING REGS TO CALLING PGM\n          BR    R14\n          EJECT\n*\n*  CONSTANTS AND WORK AREAS\n*\nSAVEAREA  DC    18F'0'\nR0        EQU   0\nR1        EQU   1\nR2        EQU   2\nR3        EQU   3\nR4        EQU   4\nR5        EQU   5\nR6        EQU   6\nR7        EQU   7\nR8        EQU   8\nR9        EQU   9\nR10       EQU   10\nR11       EQU   11\nR12       EQU   12\nR13       EQU   13\nR14       EQU   14\nR15       EQU   15\n          EJECT\n          LTORG\n*\n*   CA DISPATCH SMF RECORD DSECT\n*\nSMFDSECT  DSECT\n          SPACE  2\nSM6LEN    DS     H        RECORD LENGTH\nSM6SEG    DS     H        SEG DESCRIPTOR\nSM6FLG    DS     XL1      X'02' FOR VS2 SYS\nSMFTYPE   DS     XL1      REC TYPE\nSM6TIMRP  DS     XL4      TIME REC DUMPED TO SMF BUFFER\nSM6DATRP  DS     PL4      DATE REC DUMPED TO SMF BUFFER\nSM6SID    DS     CL4      SYSTEM ID - FROM CVT\nSM6JBLOG  DS     0CL16    JOB LOG FROM ORIG JOB\nSM6JBN    DS     CL8      JOB NAME\nSM6RST    DS     XL4      READER START NAME\nSM6RSD    DS     PL4      READER START TIME  - 100S OF SEC\nSM6UIF    DS     CL8      NOT USED - SPACES\nSM6WC     DS     CL1      SYSOUT CLASS - USER DEFINED\nSM6WST    DS     XL4      SAME AS SM6TIMRP\nSM6WSD    DS     PL4      SAME AS SM6DATRP\nSM6NLR    DS     XL4      NUMBER OF LINES - CALCULATED\nSM6IOE    DS     XL1      NOT USED - BIN 0\nSM6NDS    DS     XL1      SET TO X'01'\nSM6FMN    DS     CL4      SYSOUT FORM # - USER DEFINED\nSM6PAD1   DS     XL1      NOT USED -  BIN 0\nSM6SBS    DS     XL2      X'0010'  - INDICATE DISPATCH\nSM6LN1    DS     XL2      LENGTH OF REST OF RECORD\nSM6DCI    DS     XL2      X'0010' - PLACED IN A BUNDLE\nSM6JESNM  DS     CL4      JES JB#  FOR ORIGINAL JOB\nSM6OUT    DS     CL8      NOT USED - SPACES\nSM6FCB    DS     CL4      FCB - USER DEFINED\nSM6UCS    DS     CL4      NOT USED - SPACES\nSM6PGE    DS     XL4      PAGE COUNT- CALCULATED\nSM6RTE    DS     XL2      NOT USED (X'0100')\nSM6COPY   DS     PL2      NUMBER OF REPORT COPIES\n*                         FOR 4.1 AND HIGHER, THIS NUMBER WILL\n*                         ALWAYS BE 1 AND MULTIPLE TYPE 6'S WILL\n*                         BE PRODUCED LIKE IBM DOES IT.\n*\n*\n*  THE REMAINDER OF THE REC IS SPECIFIC TODCDS AND CONTAINS\n*  DATA SPECIFIC TO A RECIPIENT\n*\nSM6DROP   DS     CL8      MAILDROP\nSM6DEST   DS     CL8      DESTINATION\nSM6JBNAM  DS     CL8      JOB NAME\nSM6RTNAM  DS     CL8      REPORT NAME\nSM6RCPNM  DS     CL16     RECIPIENT ID\nSM6DESC   DS     CL64     RECIPIENT DESCRIPTION\nSM6PHONE  DS     CL10     RECIPIENT PHNE NUM\nSM6MINOR  DS     CL32     MINOR CHARGE CODE\nSM6RPTDS  DS     CL32     REPORT DESCRIPTION\nSMSIZE    EQU    *-SM6LEN SM6 LENGTH\n          END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JSIXT03A": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\"/\\x00\\x93\"/\\x156\\x003\\x003\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-08-10T00:00:00", "modifydate": "1993-08-10T15:36:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "TECH114"}, "text": "R0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nJSIXT03A CSECT\n         USING *,15\n         ST    R2,R2SAVE              SAVE CALLER REG\n         ST    R3,R3SAVE              SAVE CALLER REG\n         LR    R3,15                  SETUP BASE REG\n         USING JSIXT03A,R3            ESTABLISH ADDRESSABILITY\n         DROP  15                     RELEASE 15 AS BASE\n         L     R2,0(R1)               LOAD ADDRESS OF MAIN RECORD SEG\n         USING JSIOPTRE,R2            SET R2 AS DSECT BASE\n         MVC   SAVEJOB,JSIOPTHJ       SAVE JOBNAME FOR LATER USE\n         MVC   JSIOPTHU,=C'DONDONDO'  MOVE CICSJOBNAME (REGION)\n         LA    R2,JSIOPTRL(R2)        ESTABLISH START POINT OF\n         AH    R2,0(R2)                 TERMINAL STATISTICS\n         AH    R2,0(R2)                 SUBSET RECORD\n         USING JSIOPTT$,R2            SET R2 AS DSECT BASE FOR SUBSET\n*        CLC   JSIOOP8C,=C'        '  CHECK IF USER ID FIELD IS BLANK\n*        BE    XLATE                  TRANSLATE IF TRUE\n*        CLC   JSIOOP8C,=X'0000000000000000'   USER LOW VALUES?\n*        BE    XLATE                  TRANSLATE IF TRUE\n*        B     XLATEX                 BYPASS TRANSLATION\nXLATE    EQU   *\n         MVC   JSIOOP8C,SAVEJOB       MOVE CICSJOBNAME (REGION)\n*                                     INTO USER ID\nXLATEX   EQU   *\n         L     R2,R2SAVE\n         L     R3,R3SAVE\n*        DC    XL2'00'  CAUSES DUMP\n         SLR   15,15\n         BR    14\nR2SAVE   DS    F\nR3SAVE   DS    F\nSAVEJOB  DS    CL8\n         LTORG\n         JSIDS OPT=DS\n         END   JSIXT03A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MGMTCLAS": {"ttr": 2568, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94\\x04\\x9f\\x00\\x94\"\\x8f\\x14E\\x00&\\x00#\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-02-18T00:00:00", "modifydate": "1994-08-16T14:45:00", "lines": 38, "newlines": 35, "modlines": 7, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS MGMTCLASS ROUTINE                 */\n/*                                                                  */\nPROC &MGMTCLAS\n/*                                                                  */\n/* ASSIGN A NEW MANAGMT CLASS ONLY IF THIS IS NEW SMS ALLOCATION    */\n/* I.E. IF RECALL OR ETC. THEN KEEP PREV ASSIGNED VALUE             */\n/*                                                                  */\n/* NEW ALLOC ARE ACSENVIR OF ALLOC OR RECOVER                       */\nFILTLIST &ALLOC INCLUDE('ALLOC','RECOVER')\n/*                                                                  */\nSELECT (&ACSENVIR)\n/*                                                                  */\n      WHEN (&ALLOC) DO\n/* PROCESS THE CODED MGMTCLAS VALUE                                 */\n               SELECT (&MGMTCLAS)\n/* USER CODED MGMTCLAS; USE THAT VALUE IF TEMP                      */\n                     WHEN ('TEMP') DO\n                          SET &MGMTCLAS = 'TEMP'\n                          EXIT CODE(0)\n                          END\n/* ASSIGN SOMETHING IF MGMTCLAS NOT CODED OR FORCE VALUE OF DSOWNER */\n                     OTHERWISE DO\n/* USER DID NOT CODE MGMTCLAS; USE THE RACF DFP RESOWNER VALUE      */\n                          SET &MGMTCLAS = '$DSOWNER'\n                          EXIT CODE(0)\n                          END\n               END\n      END\n/*                                                                  */\n/*                                                                  */\n/* FALL THROUGH FOR RECALLS, ETC.                                   */\n      OTHERWISE DO\n           SET &MGMTCLAS = &MGMTCLAS\n           EXIT CODE(0)\n           END\nEND\n/*                                                                  */\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MGMTCLSO": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01>\\x00\\x00\\x00\\x905O\\x00\\x94\\x10_\\x11V\\x00\\x9a\\x00\\xdf\\x00\\x9a\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.62", "flags": 0, "createdate": "1990-12-20T00:00:00", "modifydate": "1994-04-15T11:56:00", "lines": 154, "newlines": 223, "modlines": 154, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS MGMTCLASS ROUTINE                 */\nPROC &MGMTCLAS\n/* LIST OF VALID MANAGEMENT CLASSES                                 */\n/* ALL CLASSES HAVE PARTIAL RELEASE = NO                            */\nFILTLIST &VALID_MANAGEMENT_CLASSES INCLUDE(\n   'INTERIM',\n   'NOACTION',\n   'INFREQBK',\n   'STANDARD',\n   'NOMIG',\n   'TEMP')\n/* FDR                                                              */\nFILTLIST &FDRABRM    INCLUDE(FDR.PASSWORD.VMNT*.**,FDRABR.VMNT*.**)\nFILTLIST &FDRABR     INCLUDE(FDR.PASSWORD.**,FDRABR.V*.**)\n/* SYS1 HLQ                                                         */\nFILTLIST &SYSTEM_HLQ INCLUDE('SYS1')\n/* LIST OF VALID AUTHORIZED RACF GROUPS THAT ARE PERMITTED TO       */\n/* REQUEST A SPECIFIC MANAGEMENT CLASS ASSIGNMENT                   */\nFILTLIST &VALID_AUTHORIZED_RACF_GROUPS INCLUDE('TECHSUPT',\n                                               'STCGROUP',\n                                               'SECURITY',\n                                               'DB2ADMIN',\n                                               'OPERATON',\n                                               'PRODCNTL')\n/* UTILITY PROGRAMS                                                 */\nFILTLIST &COPYPGM INCLUDE(FDR*,ARC*,'ADRDSSU')\n/* TEST SYSTEM HLQ SET                                              */\nFILTLIST &TEST_DSNHLQ_VALUES INCLUDE(\n     TACCT*,\n     TAPPL*,\n     TAUDT*,\n     TCORP*,\n     TCRDT*,\n     TDATA*,\n     TDIST*,\n     TEXEC*,\n     TFINL*,\n     THKNG*,\n     TINFO*,\n     TMANI*,\n    'TMERC7',\n     TREAL*,\n     TSTOP*,\n     TSTOR*,\n     TTECH*)\n/* ASSIGN A NEW MGMT    CLASS ONLY IF THIS IS NEW SMS ALLOCATION    */\n/* I.E. IF RECALL OR RECOVER OR ETC. THEN KEEP PREV ASSIGNED VALUE  */\nIF (&ACSENVIR \u00ac= 'ALLOC') THEN DO\n      SET &MGMTCLAS = &MGMTCLAS\n      EXIT CODE(0)\n   END\n/* UTILITY PROGRAM                                                  */\nIF (&MGMTCLAS \u00ac= '') && (&PGM = &COPYPGM) THEN DO\n      SET &MGMTCLAS = &MGMTCLAS\n      EXIT CODE(0)\n   END\n/* TEMP SYST FIX                                                    */\nIF &HLQ = 'SYST' OR &HLQ = 'SYSY' OR &HLQ = 'SYSZ' OR +\n     &DSN = &FDRABRM THEN DO\n      SET &MGMTCLAS = 'MVSMAINT'\n      EXIT CODE(0)\n   END\nIF &MGMTCLAS = 'MVSPROD' OR &DSN = &FDRABR THEN DO\n      SET &MGMTCLAS = 'MVSPROD'\n      EXIT CODE(0)\n   END\nIF &DSN(2) = 'SOURCING' | &DSN(2) = 'JARSCHRG' | +\n   &DSN(2) = 'JOBACCT' THEN DO\n  SELECT (&HLQ)\n     WHEN ('PACCT') SET &MGMTCLAS = 'PACCT'\n     WHEN ('PAUDT') SET &MGMTCLAS = 'PAUDT'\n     WHEN ('PCORP') SET &MGMTCLAS = 'PCORP'\n     WHEN ('PCRDT') SET &MGMTCLAS = 'PCRDT'\n     WHEN ('PDIST') SET &MGMTCLAS = 'PDIST'\n     WHEN ('PFINL') SET &MGMTCLAS = 'PFINL'\n     WHEN ('PMERC') SET &MGMTCLAS = 'PMERC'\n     WHEN ('PREAL') SET &MGMTCLAS = 'PREAL'\n     WHEN ('PSTOP') SET &MGMTCLAS = 'PSTOP'\n     WHEN ('PSTOR') SET &MGMTCLAS = 'PSTOR'\n     WHEN ('PTECH') SET &MGMTCLAS = 'PTECH'\n     OTHERWISE SET &MGMTCLAS = 'STANDARD'\n  END\n  EXIT CODE(0)\nEND\n/* ALLOCATION MANAGEMENT CLASS PROCESSING                           */\n/* IF AUTHORIZED TSO USERID THEN ENABLE REQUESTED MANAGEMENT CLASS  */\n/* IF VALID NONNULL VALUE SPECIFIED OR FAIL IF INVALID VALUE        */\n/* IF NONNULL VALUE SPECIFIED FOR NON-AUTHORIZED TSO USER THEN      */\n/* FAIL ALLOCATION                                                  */\n/* IF TEST DATASET SET AS 'INTERIM'                                 */\n/* ELSE SET AS 'STANDARD'                                           */\n/* PERMIT MANAGEMENT CLASS OF TEMP FOR EVERYBODY                    */\nIF (&MGMTCLAS \u00ac= '') && (&PGM = 'GVRESTOR') THEN DO\n                   SET &MGMTCLAS = &MGMTCLAS\n                   WRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n                         ') ASSIGNED **'\n                   EXIT CODE(0)\n                END\nIF (&MGMTCLAS = 'TEMP') THEN DO\n      SET &MGMTCLAS = &MGMTCLAS\n      WRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n                 ') ASSIGNED **'\n      EXIT CODE(0)\n   END\nIF (&MGMTCLAS \u00ac= '') THEN DO\n      SELECT (&MGMTCLAS)\n         WHEN(&VALID_MANAGEMENT_CLASSES)\n             SELECT (&GROUP)\n                WHEN(&VALID_AUTHORIZED_RACF_GROUPS) DO\n                   SET &MGMTCLAS = &MGMTCLAS\n                   WRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n                         ') ASSIGNED **'\n                   EXIT CODE(0)\n                END\n                OTHERWISE DO\n      WRITE '** ERROR   - UNAUTHORIZED MGMTCLAS VALUE (' &MGMTCLAS +\n                   ') ASSIGNED **'\n                EXIT CODE(16)\n                END\n             END\n         OTHERWISE DO\n             WRITE '** ERROR   - INVALID MGMTCLAS VALUE (' &MGMTCLAS +\n                   ') ASSIGNED **'\n             EXIT CODE(16)\n             END\n      END /* END OF MAJOR SELECT */\n   END /* END OF MAJOR MGMTCLAS NONNULL GROUP */\nIF (&DATACLAS = 'IODF') THEN DO\n    SET &MGMTCLAS = 'NOMIG'\n    WRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n      ') ASSIGNED **'\n    EXIT CODE(0)\n    END\nIF (&DATACLAS = 'XCF') THEN DO\n    SET &MGMTCLAS = 'INFREQBK'\n    WRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n      ') ASSIGNED **'\n    EXIT CODE(0)\n    END\nIF (&DATACLAS = 'DB2') THEN DO\n    SET &MGMTCLAS = 'NOMIG'\n    WRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n      ') ASSIGNED **'\n    EXIT CODE(0)\n    END\nSELECT (&HLQ)\n    WHEN(&TEST_DSNHLQ_VALUES) SET &MGMTCLAS = 'INTERIM'\n    WHEN(&SYSTEM_HLQ) SET &MGMTCLAS = 'NOMIG'\n    OTHERWISE SET &MGMTCLAS = 'STANDARD'\nEND\nWRITE '** STATUS  - MGMTCLAS VALUE (' &MGMTCLAS +\n      ') ASSIGNED **'\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSTOSEQ": {"ttr": 2574, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x015\\x00\\x00\\x00\\x91\\x02_\\x00\\x91\\x06\\x7f\\x12\\x04\\x00\\xda\\x01\\xe2\\x00z\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.53", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1991-03-08T12:04:00", "lines": 218, "newlines": 482, "modlines": 122, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nPDS      TITLE 'PDS DATASET TO SEQUENTIAL DATASET UTILITY'\nPDSTOSEQ CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPDSTOSEQ AMODE 24\nPDSTOSEQ RMODE 24\n         SAVE  (14,12),,PDSTOSEQ*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING PDSTOSEQ,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K3,R3),K8(R4) SAVE MEMBER TTR\n         MVI   K3(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */\n         LA    R3,K4(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         CLC   DIRBLOCK(K8),K0(R4) BLOCK END\n         BE    GETDIR YES\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LA    R6,SYSUT2 /* OUTPUT DCB */\n         USING IHADCB,R6\n         LH    R8,DCBBLKSI /* INPUT BLOCKSIZE FROM OUTPUT */\n         LH    R9,DCBLRECL /* INPUT LRECL FROM OUTPUT */\n         MVC   SAVRECFM,DCBRECFM /* SAVE OUT PUT RECFM\n         DROP  R6\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R8,=A(TTRLIST) /* START OF DIR LIST */\nMEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         TM    SAVRECFM,X80+X40 /* RECFM=U */\n         BO    RECFMU YES\n         TM    SAVRECFM,X80 /* RECFM=F */\n         BO    RECFMF YES\n         TM    SAVRECFM,X08 /* DONT SUPPORT VS OR VBS */\n         BO    FVBS EXIT\n         LH    R2,IOAREA /* INPUT VAR BLKSIZE */\n         SH    R2,=H'4' /* CALC OUT BDW LEN */\n         LA    R6,IOAREA+K4 /* A RECORD */\nPUTVARCD LH    R3,K0(,R6) /* RDW */\n         SR    R2,R3 /* CALC OUT RCD */\n         PUT   SYSUT2,(R6) /* OUTPUT 1 VAR LEN RCD */\n         LA    R6,K0(R3,R6) NEXT RCD\n         LTR   R2,R2 ANYMORE\n         BP    PUTVARCD YES\n         B     GETMEM   /* CONTINUE */\nRECFMU   LA    R6,SYSUT2\n         USING IHADCB,R6\n         STH   R3,DCBLRECL /* SET OUTPUT BLKSIZE */\n         DROP  R6\n         PUT   SYSUT2,IOAREA /*UIS1 RCD PER BLOCK */\n         B     GETMEM   /* CONTINUE */\nRECFMF   SLR   R2,R2\n         DR    R2,R9 /* BLOCKING FACTOR ON INPUT */\n         L     R2,=A(IOAREA) /* INPUT BLOCK */\nWRITERCD PUT   SYSUT2,(R2)    /* OUTPUT RCD */\n         LA    R2,K0(R9,R2) /* NEXT DEBLOCKED RCD */\n         BCT   R3,WRITERCD /* LOOP */\n         B     GETMEM /* NEXT BLOCK READ */\nMEMEND   LA    R8,K4(,R8) /* NEXT TTR */\n         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */\n         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */\n         FREEPOOL SYSUT2\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\nFVBS     LA    RF,K40 /* INPUT VS OR VBS    */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X\n               KEYLEN=0,LRECL=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)\nSAVRECFM DC    AL1(K0)\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K32760)CL4' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(PDSTOSEQ),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLDOWN": {"ttr": 2820, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x00\\x00\\x91\\x02_\\x00\\x91\\x13?\\x120\\x03\\x0f\\x01\\xe2\\x01t\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1991-05-13T12:30:00", "lines": 783, "newlines": 482, "modlines": 372, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN  DD *\nPLB      TITLE 'STORE POLL DOWNLOAD DATA BREAKOUT'\nPOLLDOWN CSECT , /* STORE POLL DOWNLOAD DATA FILE BREAKOUT'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPOLLDOWN AMODE 24\nPOLLDOWN RMODE 24\n         SAVE  (14,12),,POLLDOWN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING POLLDOWN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TESTAUTH FCTN=1 , /* APF AUTHORIZED */\n         LTR   RF,RF\n         BNZ   FAUTH\n         MODESET KEY=ZERO,MODE=SUP,RELATED=('STATE SWITCH')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT DONTSWAP,ENTRY=BRANCH , /* NOSWAP SHORT-TERM */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFIX */\n         L     R2,=A(ENDFIX) ...\n         PGSER R,FIX,A=(1),EA=(2),RELEASE=N,LONG=Y,BACKOUT=Y,          X\n               BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n         LTR   RF,RF\n         BNZ   FPGSER\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\n         RDJFCB BREAKER , /* ACQUIRE OUTPUT FILE JFCB */\n         LTR   RF,RF\n         BNZ   FRDJFCB\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         TM    JFCDSRG1,JFCORGPO /* DSORG=PO */\n         BZ    FNOTPO /* NO */\n         TM    JFCBIND2,JFCNEW /* DISP=NEW */\n         BNO   FNOTNEW /* NO */\n         DROP  RF\nOPENLIST OPEN  (DMASTER,(INPUT),BREAKER,(OUTPUT),REPORT,(OUTPUT),      X\n               EMASTER,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R9,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R9\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         SLR   R5,R5 /* OUTSTAND NCP WRITE COUNTER */\nPGETLOOP LA    R6,INAREA /* DOWNLOAD FILE HAS SETS OF 4 RCDS*/\n         GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         NI    FLAGS,XFF-X40 /* SET NEW MEMBER FLAG OFF */\n         OI    FLAGS,X80 /* SET UNEXPECTED EOF; MUST HAVE SETS OF 4*/\n         TM    FLAGS,X08 /* MID TYPE 30 FILE */\n         BO    MIDTYP30 /* YES */\n         CLC   =C'30',INAREA+K7 /* NEW TYPE 30 SET */\n         BE    SET30MOD /* YES */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         LA    R7,K3 /* CTR FOR NEXT 3 RECORDS */\nGETLOOP  GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         BCT   R7,GETLOOP  ...\n         MVC   INAREA+K80(K64),INAREA+K96 /*BUILD */\n         MVC   INAREA+K144(K64),INAREA+K176 /* SHIFT RECORD AREAS */\n         MVC   INAREA+K208(K64),INAREA+K256\nLAST30SG MVC   SEQFIELD(K1),INAREA+K16 /* INPUT RECORD SEQ # */\nPROCE0   NI    FLAGS,XFF-X80 /* RESET EXPECTED EOF BIT */\n         NI    SEQFIELD,XFF-X80 /* SHUT DOWN HI SET END BIT */\n         TM    FLAGS,X20 /* EXPECTED WRAPAROUND MODE */\n         BO    DOWRAP /* YES */\n         CLC   EXPSEQ,SEQFIELD /* MATCH ON EXPECTED SEQ # */\n         BNE   SEQERR /* ERROR */\n         CLI   SEQFIELD,X01 /* FIRST OF SET */\n         BNE   BUILDRCD /* NO, ELSE SAVE MEMBER NAME */\n         CLC   STOWLIST+K1(K4),INAREA+K2 /* COMPARE STORE ID */\n         BNE   RESETSEQ /* MEMBER BREAK */\n         TM    FLAGS,X04 /* E0 UP */\n         BZ    CHKDFID NO\n         CLC   STOWLIST+K5(K3),INAREA+K9 /* E0 FID */\n         BNE   RESETSEQ /* BREAK */\n         B     SEQERR /* OUT OF SEQ */\nCHKDFID  CLC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VAL DOWN CMPR*/\n         BNE   RESETSEQ /* MEMBER BREAK */\n         CLC   =C'50',INAREA+K7  /* FILEID WITH SUBGROUP */\n         BE    BUILDMEM /* YES */\n         CLC   =C'60',INAREA+K7 /* THIS ONE TOO */\n         BE    BUILDMEM /* CONTINUE */\n         B     SEQERR /* OUT OF SEQ */\nRESETSEQ MVI   DUPLSEQ,C'0' /* RESET MEMBER NAME SUFFIX */\nBUILDMEM MVC   STOWLIST+K1(K4),INAREA+K2 /* SAVE STORE ID */\n         CLC   STOWLIST+K1(K4),=C'0000' /* INVALID VALUE STOREID*/\n         BE    INVSTID /* BAD*/\n         TRT   STOWLIST+K1(K4),NUMSONLY /* NUMERICS ONLY */\n         BNZ   INVSTID /* BAD*/\n         TM    FLAGS,X04 /* E0 CODE */\n         BZ    MOVDFID /* NO */\n         MVC   STOWLIST+K5(K3),INAREA+K9 /* FID FOR E0 */\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* GET FIRST REAL RCD OF SET */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nMOVDFID  MVC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VALUE DOWNDATA*/\n         CLC   STOWLIST+K5(K2),=C'50'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'60'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'30'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'25'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'27'   /* VALID VALUE */\n         BNE   INVFT /* ERROR */\nVALIDFT  SLR   RF,RF /* BUILD UNIQUE SUFFIX */\n         IC    RF,DUPLSEQ /* INCR BY 1 FOR UNIQUE MEMBER NAME */\n         LA    RF,K1(,RF)\n         CLM   RF,K1,=C'9'    /* EXCEEDED SUFFIX MAX */\n         BH    HISUBEOF /* YES */\n         STC   RF,DUPLSEQ /* SAVE NEW UNIQUE MEMBER NAME SUFFIX */\n         STC   RF,STOWLIST+K7 ...\nPRIMCOMM XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nBUILDRCD LH    RF,K0(,R3) /* CURRENT VAR BLOCK SIZE */\n         SLR   R0,R0 /* PICKUP RECORD SET LEN */\n         TM    FLAGS,X04 /* E0 */\n         BZ    RCDLD /* NO */\n         ICM   R0,3,INAREA+K19  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         CLM   R0,K3,=AL2(K255) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\n         B     RCDLE\nRCDLD    ICM   R0,3,INAREA+17  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         AL    R0,=A(K3) /* FACTOR IN 1BYTE SEQ#AND 2BYTELEN*/\n         CLM   R0,K3,=AL2(K256) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\nRCDLE    AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         C     RF,=A(K32760) /* MAX BLOCKSIZE */\n         BH    DONTFIT /* THIS RECORD CANT BE ADDED */\n         STH   RF,K0(,R3) /* UPDATE BDW */\n         LH    RF,K4(,R3) /* CURRENT VAR RCD SIZE */\n         AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         STH   RF,K4(,R3) /* UPDATE RDW */\n         L     R6,TCHAR# /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,TCHAR# ...\n         L     R6,XBUILDEM /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,XBUILDEM ...\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PROPD /* MOVE D0 */\n         LA    R8,INAREA+K21 /* SOURCE AREA */\n         B     PROPE /* CONTINUE */\nPROPD    MVC   0(K3,R4),INAREA+K16 /* MOVE 3BYTE HDR FIELD */\n         LA    R4,K3(,R4) /* + */\n         LA    R8,INAREA+K19 /* SOURCE AREA */\nPROPE    LR    R6,R4 /* TARGET FOR RCD MOVE */\n         LR    R9,R7  /* AS PER MVCL MAX PER RCD */\n         MVCL  R6,R8 /* MOVE RECORD INTO OUTPUT BUFFER */\n         LR    R4,R6 /* SAVE POSITION OF NEXT RCD TO BE BUILT */\n         TM    FLAGS,X04 /* E0 */\n         BZ    LRCDD /* NO */\n         TM    INAREA+K18,X80 /* SET END */\n         BO    E0SETEND /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE WRAP */\n         BNE   PGETE /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETE /* CONTINUE */\nE0SETEND LH    RF,K0(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* BDW -2 */\n         STH   RF,K0(,R3)\n         LH    RF,K4(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* RDW -2 */\n         STH   RF,K4(,R3)\n         L     RF,TCHAR#\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,TCHAR#\n         L     RF,XBUILDEM\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,XBUILDEM\n         B     BREAKIT /* CONTINUE */\nLRCDD    TM    INAREA+K16,X80 /* LAST RECORD IN SET */\n         BO    BREAKIT /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE POLL */\n         BNE   PGETLOOP /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETLOOP /* CONTINUE */\nDOWRAP   NI    FLAGS,XFF-X20 /* SET WRAP MODE OFF */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         CLI   SEQFIELD,X01 /* EXPECTED WRAP; MUST BE 01 */\n         BE    BUILDRCD /* OK */\n         B     WRAPERR /* FAILURE IN INPUT */\nSET30MOD OI    FLAGS,X08 /* TYPE 30 FILE PROCESS ACTIVE */\n         GET   DMASTER,(R6) /*IGNORE SET HDR - MAJOR SEQ# 001*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\nMIDTYP30 GET   DMASTER,(R6) /* FIRST OF SET */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         SLR   R6,R6 /* WORK */\n         ICM   R6,K3,INAREA+K17 /* RCD LEN */\n         LA    R7,K57 /* MAX DATA LEN ON FIRST RCD-INCL $$A$ TRLR*/\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         LA    R7,K60 /* SECONDARY RCD MAX */\n         GET   DMASTER,INAREA+K76 /* RCD SEG# 2*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K76(K60),INAREA+K92 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K136 /* RCD SEG# 3*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K136(K60),INAREA+K152 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K196 /* RCD SEG# 4*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K196(K60),INAREA+K212 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K256 /* RCD SEG# 5*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K256(K60),INAREA+K272 /* SHIFT IGN HDR/TRLR */\n         B     LAST30SG /* LENGTH EXHAUSTED */\nDONTFIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DONTFIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDONTFIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         B     PRIMCOMM /* CONTINUE */\nBREAKIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    BREAKIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nBREAKIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE BEFORE STOW */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         OI    FLAGS,X40 /* SET STOW DOWN; MEMBER CREATED */\n         NI    FLAGS,XFF-X08 /* RESET TYP30 PROCESS OFF */\n         L     RF,MEMLISTP /* UPDATE DIRECTORY MEMBER */\n         MVC   K0(K8,RF),STOWLIST /* MEMBER NAME */\n         L     R0,XBUILDEM /* MEMBER BYTE COUNT */\n         CVD   R0,WORK ...\n         UNPK  K8(K9,RF),WORK+K3(K5)\n         MVC   K8(K8,RF),K9(RF) ...\n         OI    K15(RF),C'0' ....\n         TR    K0(K16,RF),EBCASCII /* CHANGE TO ASCII */\n         LA    RF,K16(,RF) /* SET NEXT DIR ENTRY PTR */\n         ST    RF,MEMLISTP /* UPDATE PTR */\n         L     RF,MEMBER# /* INCR MEMBER COUNTER */\n         LA    RF,K1(,RF)\n         ST    RF,MEMBER# ...\n         CLC   XBUILDEM,MBUILDEM /* IS THIS LARGEST MEM */\n         BNH   RESETIND /* NO */\n         MVC   MBUILDEM,XBUILDEM /* RESET MAX FOUND */\n         MVC   MNAMEMEM,STOWLIST /* MEMBER NAME */\nRESETIND XC    XBUILDEM,XBUILDEM /* RESET INDIV TOTAL */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PGETLOOP /* CONTINUE */\n         B     PGETE /* CONTINUE E0 */\nEOD      TM    FLAGS,X80 /* UNEXPECTED */\n         BO    SNOEOF /* YES */\n         TM    FLAGS,X40 /* SEE IF STOW FLAG ON */\n         BZ    SNOEOF /* YES */\n         NI    FLAGS,XFF-X40 /* SET NEW MEM OFF */\n         OI    FLAGS,X04 /* INDICATE E0 PROCESSING ACTIVE */\n         MVC   STOWLIST(K8),=C'E???????' /* PREP FOR E0 MEMBERS */\nPGETE    OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* RETRIEVE E0 RCD */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nEOE      MVC   STOWLIST(K8),=C'DIRECTRY' /* INTERNAL DIRNAME */\n         SLR   R5,R5 /* CURRENT WRITE CHECK CTR */\n         L     R3,CURAREAP /* PREP DIR HDR */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K4(K2,R3),=AL2(K84) /* RDW */\n         MVC   K0(K2,R3),=AL2(K88) /* BDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         MVC   K32(K4,R4),=C'DSN=' /* HARD CODE */\n         L     RF,MEMBER# /* MEMBER ENTRY CTR */\n         CVD   RF,WORK ...\n         UNPK  K16(K8,R4),WORK+K4(K4)\n         OI    K23(R4),C'0'\n         MVC   K24(K8,R4),=C'00000000' /* RESERVED */\n         MVC   K0(K16,R4),=C'19YY.DDDHH:MM:SS' /* LITERAL */\n         TIME  DEC\n         STCM  R1,K7,WORK+K5 /* DATE */\n         UNPK  WORK(K5),WORK+K5(K3) ...\n         OI    WORK+4,C'0'\n         MVC   K2(K2,R4),WORK /* YY */\n         MVC   K5(K3,R4),WORK+K2 /* DDD */\n         CLM   R1,K8,=AL1(K0) /* CENTURY 19 OR 20 */\n         BE    DOTIME /* 19 */\n         MVC   K0(K2,R4),=C'20' /* ELSE */\nDOTIME   ST    R0,WORK /* PACKED TIME */\n         MVI   WORK+K3,K15 /* MAKE LIKE PACKED */\n         UNPK  K36(K7,R4),WORK(K4) /* USE TEMP WORK */\n         MVC   K8(K2,R4),K36(R4) HH\n         MVC   K11(K2,R4),K38(R4) MM\n         MVC   K14(K2,R4),K40(R4) SS\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   K36(K44,R4),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         TR    K0(K80,R4),EBCASCII /* CHANGE TO ASCII */\n         WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R6,MEMBER# /* PRODUCE OUR DIRECTORY MEMBER */\n         L     R7,=A(MEMLIST) /* TABLE START */\nDODIR0   LA    R8,K2047 /* MAX # DIR ENTRY IN 1 VAR LEN BLK */\n         SLR   R9,R9 /* CURRENT BLK ENTRY COUNT */\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nDODIR1   MVC   K0(K16,R4),K0(R7) /* POSITION 1 MEMBER ENTRY */\n         LA    R9,K1(,R9) /* INCR ENTRY COUNT */\n         LA    R4,K16(,R4) /* NEXT OUTPUT SPOT */\n         LA    R7,K16(,R7) /* NEXT INPUT SPOT */\n         BCT   R8,DODIR3 /* COUNT FOR # ENTRIES IN BLK */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR2   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDODIR2   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         B     DODIR0   /* CONTINUE */\nDODIR3   BCT   R6,DODIR1 /* MEMBER COUNT */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR5   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nDODIR5   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         CLOSE (BREAKER) /* MAKE AVAIL FOR XCOMM */\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   SDSNAME+K6(L'JFCBDSNM),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         LA    R1,SVC99PRM /* DYNALLOC PARM */\n         DYNALLOC\n         LTR   RF,RF\n         BNZ   FSVC99\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   FXCOMM /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nERREXIT  MVC   OUTMSG(L'HEADER),HEADER\n         PUT   REPORT,OUTMSG\n         L     RF,MEMBER# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMEM#),MSGMEM#\n         MVC   OUTMSG+L'MSGMEM#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMEM#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TDIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGDIN#),MSGDIN#\n         MVC   OUTMSG+L'MSGDIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGDIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TEIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGEIN#),MSGEIN#\n         MVC   OUTMSG+L'MSGEIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGEIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TCHAR# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGTCH#),MSGTCH#\n         MVC   OUTMSG+L'MSGTCH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGTCH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         SLR   R6,R6\n         L     R7,TCHAR#\n         L     R8,MEMBER#\n         LTR   R8,R8 /* DONT GET ERROR FOR DIVIDE BY 0 */\n         BNZ   CALCAVGC  /* ELSE FORCE THIS MESSAGE */\n         SLR   R7,R7\n         B     CALCAVG2\nCALCAVGC DR    R6,R8\nCALCAVG2 ST    R7,TAVCH#\n         L     RF,TAVCH# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGACH#),MSGACH#\n         MVC   OUTMSG+L'MSGACH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGACH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,MBUILDEM /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMCH#1),MSGMCH#1\n         MVC   OUTMSG+L'MSGMCH#1(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMCH#1(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         MVC   OUTMSG(L'MSGMCH#2),MSGMCH#2\n         MVC   OUTMSG+K17(K8),MNAMEMEM\n         PUT   REPORT,OUTMSG\n         TM    FLAGS,X10 /* SEVERE ERROR OCCURED */\n         BZ    DOCLOSE /* NO */\n         MVC   OUTMSG(L'MERRMSG),MERRMSG\n         PUT   REPORT,OUTMSG\nDOCLOSE  CLOSE (DMASTER,,REPORT,,EMASTER)\n         FREEPOOL DMASTER , /*NO FREEPOOL FOR BREAKER;DYNBUFF USED*/\n         FREEPOOL EMASTER ,\n         FREEPOOL REPORT  ,\n         MODESET EXTKEY=ZERO,WORKREG=2,RELATED=('SUPVR KEY')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFREE*/\n         L     R2,=A(ENDFIX) ...\n         PGSER R,FREE,A=(1),EA=(2),RELEASE=N,ANYWHER=Y,                X\n               BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n         LTR   RF,RF\n         BNZ   FPGSER\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT OKSWAP,ENTRY=BRANCH , /* SWAP AGAIN */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\nXEXIT    L     RF,SYSTEMRC /* SET OS RC */\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nSNOEOF   LA    RF,K28 /* UNEXPECTED EOF ON INPUT */\n         B     DUMPEXIT\nWRAPERR  LA    RF,K32 /* X7F NOT FOLLOWED BY X01 */\n         B     DUMPEXIT\nSEQERR   LA    RF,K36 /* SEQUENCE NUMBER OUT OF ORDER */\n         B     DUMPEXIT\nINVRCDLN LA    RF,K40 /* INDIV RCD LEN=0 OR GT>253 */\n         B     DUMPEXIT\nHISUBEOF LA    RF,K44 /* TOO MANY >9 MULTIPLE 50/60 SUBFILES */\n         B     DUMPEXIT\nINVFT    LA    RF,K48 /* INVALID INPUT RCD FILETYPE(25,27,30,50,60)\n         B     DUMPEXIT\nINVSTID  LA    RF,K52 /* INVALID STOR ID=0 OR NOT NUMERIC */\n         B     DUMPEXIT\nFRDJFCB  LA    RF,K56 /* READ JFCB FAILURE */\n         B     MAINEXIT\nFNOTPO   LA    RF,K60 /* BREAKER NOT PO */\n         B     MAINEXIT\nFNOTNEW  LA    RF,K64 /* DISP=NEW MUST BE FOR BREAKER */\n         B     MAINEXIT\nFAUTH    LA    RF,K68 /* NOT AUTH */\n         B     MAINEXIT\nFSWAP    LA    RF,K72 /* DONTSWAP FAIL */\n         B     MAINEXIT\nFPGSER   LA    RF,K76 /* PAGEFIX FAIL  */\n         B     MAINEXIT\nFSVC99   LA    RF,K80 /* SVC99 ALLOC FAIL */\n         B     DUMPEXIT\nFXCOMM   LA    RF,200(,RF) /* 200+XCOM FAILURE */\n         B     DUMPEXIT\nFSTOW    LA    RF,100(,RF) /* 100+STOW FAILURE CODE+REASON CODE*/\n         ALR   RF,R0 /* ADD IN REASON CODE */\nDUMPEXIT OI    FLAGS,X10 /* SEVERE ERROR BIT */\n         ST    RF,SYSTEMRC /* BINARY RC */\n         CVD   RF,WORK /* PREP ERROR MSG */\n         UNPK  WORK(K3),WORK+K6(K2)\n         OI    WORK+K2,C'0'\n         MVC   MERRMSG+K13(K3),WORK\n         MVC   MERRMSG+K27(K8),STOWLIST\n         B     ERREXIT\n         LTORG\n         PRINT NOGEN\n         WRITE DECB,SF,BREAKER,MF=L    /* OUTPUT A BLOCK */\nWORK     DC    D'0'\nJFCBEXIT DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    CL176' ' /* A JFCB AREA */\nSAVEAREA DC    (K18)A(K0) /* SPECIAL SAVE AREA */\nFIXECB   DC    A(K0) /* PGSER ECB */\nBREAKER  DCB   DDNAME=BREAKER,DSORG=PO,MACRF=(R,W),NCP=5,RECFM=VB,     X\n               LRECL=32756,BLKSIZE=32760,BUFNO=11,EXLST=JFCBEXIT\nDMASTER  DCB   DDNAME=DMASTER,DSORG=PS,EODAD=EOD,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=80\nEMASTER  DCB   DDNAME=EMASTER,DSORG=PS,EODAD=EOE,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=550\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(GM,PM),                   X\n               RECFM=FBA,LRECL=133,BLKSIZE=133\nSVC99PRM DC    X'80',AL3(SVC99RB)\nSVC99RB  DC    X'14014000'\n         DC    X'00000000'\n         DC    A(S99TXTPR)\n         DC    X'00000000'\n         DC    X'40000000' /* WAIT ON DSN */\nS99TXTPR DC    X'00',AL3(SDDNAME)\n         DC    X'00',AL3(SDSNAME)\n         DC    X'00',AL3(SMEMBER)\n         DC    X'80',AL3(SDISP)\nSDDNAME  DC    X'000100010008',CL8'LCLDS01'\nSDSNAME  DC    X'00020001002C',CL44' '\nSMEMBER  DC    X'000300010008',CL8'DIRECTRY'\nSDISP    DC    X'000400010001',X'01' /* OLD */\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE'\nSTOWLIST DC    (K0)A(K0),C'D???????',A(K0) /* TTRC OF ZERO */\nCURAREAP DC    A(OUTAREA1) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA2) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA3) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA4) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA5) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA6) /* CURRENT WORKING ON OUTPUT PTR */\nSTAGEPTR DC    A(*-*) /* WHERE UP TO IN STAGING AREA */\nMEMBER#  DC    A(K0) /* NUMBER OF PROCESSED MEMBERS */\nTDIN#    DC    A(K0) /* PRICE/PROMO CHARS IN */\nTEIN#    DC    A(K0) /* EO/MISC     CHARS IN */\nTCHAR#   DC    A(K0) /* TOTAL NUMBER OF DATA CHARACTERS TO BE SENT*/\nTAVCH#   DC    A(K0) /* APPROX AVG NUMBER CHARS PER MEMBER */\nXBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMEMLISTP DC    A(MEMLIST) /* PTR TO INTERNAL DIRECTORY */\nSYSTEMRC DC    A(K0) /* RC */\nMNAMEMEM DC    CL8' ' ...\nDUPLSEQ  DC    C'0' /* MEMBER NAME SUFFIX FOR ID50/60 SUBGROUPS */\nFLAGS    DC    AL1(K0)\n* X80 UNEXPECTED EOF; SHOULD NOT OCCUR\n* X40 LAST RECORD WAS SUBEOF - MEMBER CREATED\n* X20 MEMBER RCD WRAPAROUND FROM X7F TO X01 ...\n* X10 SEVERE ERROR FLAG USED BY EOJ ROUTINE\n* X08 TYPE 30 PROCESSING ACTIVE\n* X04 D0 PROCESSING COMPLETE; E0 PROCESSING ACTIVE\nSEQFIELD DC    AL1(K0) /* USED TO HOLD SEQUENCE NUMBER */\nEXPSEQ   DC    AL1(K1) /* EXPECTED SEQ # NEXT - MAKE SURE ORDER */\nMSGPAT   DC    X'4B2020206B2020206B202120'\nOUTMSG   DC    CL133' '\nHEADER   DC    C'1POLLDOWN BREAKOUT REPORT'\nMSGMEM#  DC    CL40'0# OF PDS MEMBERS CREATED................'\nMSGDIN#  DC    CL40'0TOTAL PRICE/PROMO DATA IN...............'\nMSGEIN#  DC    CL40'0TOTAL E0/MISC DATA IN...................'\nMSGTCH#  DC    CL40'0TOTAL # DOWNLOADED CHARACTERS...........'\nMSGACH#  DC    CL40'0APPROX. AVG. # CHARACTERS PER MEMBER....'\nMSGMCH#1 DC    CL40'0MAX. # CHARS. PER INDIVIDUAL MEMBER.....'\nMSGMCH#2 DC    CL52' MEMBER NAME IS: XXXXXXXX'\nMERRMSG  DC    CL52'0** ERROR RC:??? ** MEMBER:????????'\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nNUMSONLY DC    (K256)AL1(XFF) /* CHECK FOR DIGITS ONLY */\n         ORG   NUMSONLY+C'0'\n         DC    (K10)AL1(K0)\n         ORG\nINAREA   DC    (K550)AL1(K0) /* INPUT WORKAREA */\nOUTAREA1 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA2 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA3 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA4 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA5 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA6 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nMEMLIST  DS    (K32760)CL16' ' /* INCORE DIRECTORY */\nENDFIX   EQU   *-K1\n* 8 BYTE ASCII MEMBER NAME; 8 BYTE ASCII MEMBER CHAR COUNT\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         DSECT\n         IEFJFCBN\n         CVT   DSECT=YES\n         IKJTCB\n         IHAPSA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.LPALIB(POLLUT1),DISP=SHR,\n// UNIT=,SPACE=\n//*G.WORK DD DSN=JEFFK.VTOC.DATA,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRODXASM": {"ttr": 3079, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01#\\x00\\x00\\x00\\x921\\x8f\\x00\\x933_\\x15W\\x01~\\x00r\\x01\\x10\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.35", "flags": 0, "createdate": "1992-11-13T00:00:00", "modifydate": "1993-12-01T15:57:00", "lines": 382, "newlines": 114, "modlines": 272, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYSS.DSSI.V5R6M2.SAMPLIB,DISP=SHR\n//C.SYSIN  DD *\nPXF      TITLE 'PRODUCTION JOB/PROC/DSN XREF'\nPRODXREF CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPRODXREF AMODE 24\nPRODXREF RMODE 24\n         SAVE  (14,12),,PRODXREF*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING PRODXREF,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         L     R3,K0(,R1) SAVE PARAM PTR\n         USING USERPRMS,R3\n         CLI   C1TYPE,C1TYDD DD STMT\n         BE    DODD ...\n         CLI   C1TYPE,C1TYJOB STMT\n         BE    DOJOB ...\n         CLI   C1TYPE,C1TYPROC STMT\n         BE    DOPROC ...\n         CLI   C1TYPE,C1TYPGM  STMT\n         BE    DOEXEC ...\n         CLI   C1TYPE,C1TYINIT INITIAL CALL\n         BE    DOIN ...\n         CLI   C1TYPE,C1TYFINL EXIT CALL\n         BE    DOEX ...\n         B     EXIT\n         DROP  R3\nDOEX     CLOSE (TECHXREF)\n         FREEPOOL TECHXREF\n         B     EXIT\nDOIN     OPEN  (TECHXREF,(OUTPUT))\n         B     EXIT\nDOJOB    LR    R4,R3 PARAM BASE\n         AL    R4,AJBSEG OFFSET TO PROPER SEG\n         MVC   XREFDATA(116),=CL116' '\n         USING JB,R4\n         MVC   JOBNAME(K8),JBJOBNM\n         MVC   JOBCLASS(K1),JBCLASS\n         DROP  R4\n         PUT   TECHXREF,XREFDATA\n         B     EXIT\nDOPROC   LR    R4,R3 PARAM BASE\n         AL    R4,APRSEG OFFSET TO PROPER SEG\n         MVC   XREFDATA(116),=CL116' '\n         USING PR,R4\n         MVC   PROCSTEP(8),PRSTPNM\n         MVC   PROCNAME(8),PREXNM\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         AL    R4,AJBSEG OFFSET TO PROPER SEG\n         USING JB,R4\n         MVC   JOBNAME(K8),JBJOBNM\n         MVC   JOBCLASS(K1),JBCLASS\n         DROP  R4\n         PUT   TECHXREF,XREFDATA\n         B     EXIT\nDOEXEC   LR    R4,R3 PARAM BASE\n         AL    R4,AEXSEG OFFSET TO PROPER SEG\n         MVC   XREFDATA(116),=CL116' '\n         USING EX,R4\n         MVC   EXECSTEP(8),EXSTPNM\n         MVC   EXECPGM(8),EXPGMNM\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         USING USERPRMS,R4\n         UNPK  PROCJSTP+K0(K3),C1GDXJST(K2) STEP WITHIN PROC\n         OI    PROCJSTP+K2,C'0'\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         USING USERPRMS,R4\n         UNPK  EXECPSTP+K0(K3),C1GDXPST(K2) STEP WITHIN JOB\n         OI    EXECPSTP+K2,C'0'\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         AL    R4,APRSEG OFFSET TO PROPER SEG\n         USING PR,R4\n         MVC   PROCSTEP(8),PRSTPNM\n         MVC   PROCNAME(8),PREXNM\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         AL    R4,AJBSEG OFFSET TO PROPER SEG\n         USING JB,R4\n         MVC   JOBNAME(K8),JBJOBNM\n         MVC   JOBCLASS(K1),JBCLASS\n         DROP  R4\n         PUT   TECHXREF,XREFDATA\n         B     EXIT\nDODD     LR    R4,R3 PARAM BASE\n         AL    R4,ADDSEG OFFSET TO PROPER SEG\n         LA    R1,4095(,R4) MORE ADDRESS\n         LA    R1,1(,R1)\n         MVC   XREFDATA(116),=CL116' '\n         USING DD,R4,R1\n         MVC   FILEDISP(K3),DDDISP FILE DISPOSITION\n         CLC   DDDDNAM(K8),=CL8' ' CONCAT\n         BE    CHKDDN YES\n         MVC   WDDNAME(K8),DDDDNAM SAVE\nCHKDDN   MVC   FILEDDNM(K8),WDDNAME DDNAME USED\n         MVC   FILEDSN(44),DDDSNAM\n         CLI   FILEDSN,C' '  NO DSN SPEC\n         BNE   DSNSPEC\n         MVC   FILEDSN(28),=C'&&&&SYSTEM TIMESTAMPED DATASET'\nDSNSPEC  MVC   FILEMEM(8),DDMEMGN\n         CLI   DDSYSOCL,C'V' SYSOUT=V CODED FOR DISPATCH\n         BNE   DSNSPEC3 NO\n         MVC   FILEMEM(8),DDWTRNAM SAVE DISPATCH XWTR NAME\n         DROP  R4,R1\nDSNSPEC3 LR    R4,R3 PARAM BASE\n         USING USERPRMS,R4\n         UNPK  PROCJSTP+K0(K3),C1GDXJST(K2) STEP WITHIN PROC\n         OI    PROCJSTP+K2,C'0'\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         USING USERPRMS,R4\n         UNPK  EXECPSTP+K0(K3),C1GDXPST(K2) STEP WITHIN JOB\n         OI    EXECPSTP+K2,C'0'\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         AL    R4,APRSEG OFFSET TO PROPER SEG\n         USING PR,R4\n         MVC   PROCSTEP(8),PRSTPNM\n         MVC   PROCNAME(8),PREXNM\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         AL    R4,AJBSEG OFFSET TO PROPER SEG\n         USING JB,R4\n         MVC   JOBNAME(K8),JBJOBNM\n         MVC   JOBCLASS(K1),JBCLASS\n         DROP  R4\n         LR    R4,R3 PARAM BASE\n         AL    R4,AEXSEG OFFSET TO PROPER SEG\n         USING EX,R4\n         MVC   EXECSTEP(8),EXSTPNM\n         MVC   EXECPGM(8),EXPGMNM\n         CLC   WDDNAME(K8),=CL8'JOBLIB'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'JOBCAT'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'STEPLIB'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'STEPCAT'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SYSLIN'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SYSLIB'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SYSLMOD'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'SYSPRINT'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'SYSTSPRT'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'SYSOUT'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'SYSIN'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SYSTSIN'\n         BE    ACCIN\nCHKIDCAM CLC   EXPGMNM(K8),=CL8'IDCAMS'\n         BNE   CHKFDR\n*        CLC   WDDNAME(K8),=CL8'SYSIN'\n*        BE    ACCIN\nCHKFDR   CLC   EXPGMNM(K8),=CL8'FDR'\n         BNE   CHKGVEXP\n*        CLC   WDDNAME(K8),=CL8'SYSIN'\n*        BE    ACCIN\n         B     CMPJOBN CONTINUE\nCHKGVEXP CLC   EXPGMNM(K8),=CL8'GVEXPORT'\n         BE    GVCOMM\n         CLC   EXPGMNM(K8),=CL8'GVRESTOR'\n         BE    GVCOMM\n         CLC   EXPGMNM(K8),=CL8'GVBLDIX'\n         BE    GVCOMM\n         CLC   EXPGMNM(K8),=CL8'GVMAP'\n         BE    GVCOMM\n         CLC   EXPGMNM(K8),=CL8'GVCOPY'\n         BE    GVCOMM\n         B     CHKGENER CONTINUE\nGVCOMM   EQU   * *\n*        CLC   WDDNAME(K8),=CL8'SYSIN'\n*        BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'FVRIN0'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'FVRFILE'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'BASE'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'TAPE0'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'TAPE'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'FVROUT'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'FVROUT0'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'FVROUT1'\n         BE    ACCOUT\n         CLC   WDDNAME(K8),=CL8'AIX1'\n         BE    ACCOUT\n         B     CMPJOBN\nCHKGENER CLC   EXPGMNM(K8),=CL8'IEBGENER'\n         BNE   CHKESORT\n         CLC   WDDNAME(K8),=CL8'SYSUT1'\n         BE    ACCIN\n*        CLC   WDDNAME(K8),=CL8'SYSIN'\n*        BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SYSUT2'\n         BE    ACCOUT\n         B     CMPJOBN\nCHKESORT CLC   EXPGMNM(K8),=CL8'SORT'\n         BE    DOSORTDD\n         CLC   EXPGMNM(K8),=CL8'SYNCSORT'\n         BNE   CHKADRSU\nDOSORTDD CLC   WDDNAME(K8),=CL8'SORTIN'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SORTLIB'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SYSIN'\n         BE    ACCIN\n         CLC   WDDNAME(K8),=CL8'SORTOUT'\n         BE    ACCOUT\n         CLC   WDDNAME(K6),=CL6'SORTWK'\n         BE    ACCOUT\n         B     CMPJOBN\nCHKADRSU CLC   EXPGMNM(K8),=CL8'ADRDSSU'\n         BNE   CHKEBR14\n         B     CMPJOBN\nCHKEBR14 CLC   EXPGMNM(K8),=CL8'IEFBR14'\n         BNE   CMPJOBN NO\n         MVC   FILEACC(K6),=CL6'OUTPUT'\n         B     PUTREP\nACCIN    MVC   FILEACC(K6),=CL6'INPUT'\n         B     PUTREP\nACCOUT   MVC   FILEACC(K6),=CL6'OUTPUT'\n         B     PUTREP\nCMPJOBN  CLI   FILEDISP,DDDISP1N\n         BE    ACCOUT\n         CLI   FILEDISP,DDDISP1M\n         BE    ACCOUT\n         CLC   EXPGMNM(K8),=CL8'FDR' FDR WITH INPUT TAPE\n         BNE   PUTREP NO\n         CLC   WDDNAME(K4),=CL4'TAPE' INPUT TAPE'\n         BE    ACCIN MUST BE INPUT\n         B     PUTREP NO\n         DROP  R4\nPUTREP   PUT   TECHXREF,XREFDATA\nEXIT     L     RD,K4(,RD)\n         RETURN (14,12),RC=0\nWORK     DS    D\nAJBSEG   DC    A(JBDSP) JOB SEG OFFSET\nAPRSEG   DC    A(PRDSP) PROC SEG OFFSET\nAEXSEG   DC    A(EXDSP) EXEC SEG OFFSET\nADDSEG   DC    A(DDDSP) DD SEG OFFSET\nTECHXREF DCB   DDNAME=TECHXREF,DSORG=PS,MACRF=(PM),LRECL=116,RECFM=FB\nXREFDATA EQU   * *\nXRFJOB   EQU   * *\nJOBNAME  DS    CL8\nJOBCLASS DS    CL1\nXRFPROC  EQU   * *\nPROCSTEP DS    CL8\nPROCNAME DS    CL8\nXRFEXEC  EQU   * *\nEXECSTEP DS    CL8\nEXECPGM  DS    CL8\nPROCJSTP DS    CL3 /* STEP WITHIN PROC */\nEXECPSTP DS    CL3 /* STEP WITHIN JOB */\nXRFFILE  EQU   * *\nFILEDDNM DS    CL8\nFILEDSN  DS    CL44\nFILEMEM  DS    CL8\nFILEDISP DS    CL3\nFILEACC  DS    CL6\nWDISP    DS    CL3 DISP PARAM CODED\nWDDNAME  DS    CL8 DDNAME OR PREV DDNAME IF CONCAT\n         LTORG\n         EXIT$PRM LIST=YES\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(PRODXREF),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACFUSER": {"ttr": 3332, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x00\\x00\\x91\\x07?\\x00\\x92\\x11?\\x17\\x03\\x00\\xbf\\x00l\\x00e\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1991-03-14T00:00:00", "modifydate": "1992-04-22T17:03:00", "lines": 191, "newlines": 108, "modlines": 101, "user": "TECH110"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRCF      TITLE 'REXX RACFUSER PROFILE RETRIEVAL'\nRACFUSER CSECT , /* RACFUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nRACFUSER AMODE 24\nRACFUSER RMODE 24\n         SAVE  (14,12),,RACFUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING RACFUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING RACFWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         L     R5,USERPARM\n         LH    R6,USERPARM+K4\n         TM    USERPARM+K6,X80 UID FOUND\n         BZ    UIDERROR\n         STC   R6,USERID /* FOR RACF */\n         BCTR  R6,K0\n         EX    R6,MOVEUID\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         LA    R5,RACFWORK\n         MVC   RACFWORK(K4),=A(K96)\n         LA    R6,LXTEINTY\n         LA    R7,LXTFNAME\n         MVC   K0(LLLEINTY,R6),LSTEINTY MAKE RENT\n         MVC   K0(LLLFNAME,R7),FNAME\n         DROP  R4\n         LA    R4,USERID\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=(R4),RELEASE=1.8.1,          X\n               WKAREA=(R5),ACTIONS=(FNAME),OPTIONS=(ACTION),MF=(E,(R6))\n         LTR   R9,RF\n         BNZ   NOUSER\n         LA    R1,RACFWORK+K32\n         CLI   K0(R1),C' ' ANYTHING THERE\n         BE    NODATA\n         LA    R0,K20\n         TPUT  (1),(0)\n         LTR   R9,RF\n         B     MAINEXIT\nNOUSER   TPUT  NOUSERM,L'NOUSERM\n         B     MAINEXIT\nNODATA   TPUT  NODATAM,L'NODATAM\n         B     MAINEXIT\nUIDERROR LA    R9,K255 /* UID NOT PRESENT */\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nMOVEUID  MVC   USERID+K1(*-*),K0(R5) ACQUIRE USERID\nNOUSERM  DC    C'Invalid TSO/E userid entered.'\nNODATAM  DC    C'RACF database programmer name field missing.'\n         LTORG\nFNAME    ICHEACTN FIELD=PGMRNAME,RELEASE=1.8.1\nLLLFNAME EQU   *-FNAME\nLSTEINTY ICHEINTY LOCATE,TYPE='USR',ENTRY=*-*,RELEASE=1.8.1,           X\n               WKAREA=*-*,ACTIONS=(FNAME),MF=L\nLLLEINTY EQU   *-LSTEINTY\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT USERID,UPPERCASE,PROMPT='Required TSO/E userid ?'\n         IKJENDP\nRACFWMAP DSECT\nSAVEAREA DC    18F'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nLXTEINTY DC    (LLLEINTY)AL1(K0)\nRACFWORK DC    A(K96),(K92)AL1(K0)\nLXTFNAME DC    (LLLFNAME)AL1(K0)\nUSERID   DC    AL1(*-*),CL8' '\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WHOIS),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACFUSR1": {"ttr": 3336, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x91\\x07?\\x00\\x92\\x11O\\x16C\\x00\\xd0\\x00l\\x00y\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1991-03-14T00:00:00", "modifydate": "1992-04-23T16:43:00", "lines": 208, "newlines": 108, "modlines": 121, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRCF      TITLE 'REXX RACFUSER PROFILE RETRIEVAL'\nRACFUSER CSECT , /* RACFUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nRACFUSER AMODE 31\nRACFUSER RMODE 24\n         SAVE  (14,12),,RACFUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING RACFUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING RACFWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         L     R5,USERPARM\n         LH    R6,USERPARM+K4\n         TM    USERPARM+K6,X80 UID FOUND\n         BZ    UIDERROR\n         STC   R6,USERID /* FOR RACF */\n         BCTR  R6,K0\n         EX    R6,MOVEUID\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         LA    R5,RACFWORK\n         MVC   RACFWORK(K4),=A(K96)\n         LA    R6,LXTEINTY\n         LA    R7,LXTFNAME\n         MVC   K0(LLLEINTY,R6),LSTEINTY MAKE RENT\n         MVC   K0(LLLFNAME,R7),FNAME\n         DROP  R4\n         LA    R4,USERID\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=(R4),RELEASE=1.8.1,          X\n               WKAREA=(R5),ACTIONS=(FNAME),OPTIONS=(ACTION),MF=(E,(R6))\n         LTR   R9,RF\n         BNZ   NOUSER\n         LA    R1,RACFWORK+K32\n         CLI   K0(R1),C' ' ANYTHING THERE\n         BE    NODATA\n         LA    R0,K20\n         STM   R0,R1,VALUELEN ...\n*        TPUT  (1),(0)\nMAINEXT1 LINK  EP=IKJCT441,PARAM=(ECODE,NAMEPTR,NAMELEN,VALUEPTR,      X\n               VALUELEN,TOKEN),VL=1\n*        LTR   R9,RF ignore this RC\n         B     MAINEXIT\n*OUSER   TPUT  NOUSERM,L'NOUSERM\nNOUSER   LA    R0,L'NOUSERM\n         LA    R1,NOUSERM\n         STM   R0,R1,VALUELEN ...\n         B     MAINEXT1\n*ODATA   TPUT  NODATAM,L'NODATAM\nNODATA   LA    R0,L'NODATAM\n         LA    R1,NODATAM\n         STM   R0,R1,VALUELEN ...\n         B     MAINEXT1\nUIDERROR LA    R9,K255 /* UID NOT PRESENT */\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nMOVEUID  MVC   USERID+K1(*-*),K0(R5) ACQUIRE USERID\nNOUSERM  DC    C'Invalid TSO/E userid entered.'\nNODATAM  DC    C'RACF database programmer name field missing.'\n         LTORG\nECODE    DC    A(TSVEUPDT) Set value\nNAMEPTR  DC    A(NAME)\nNAMELEN  DC    F'5'\nVALUELEN DC    A(*-*) Keep together\nVALUEPTR DC    A(*-*)\nTOKEN    DC    F'0'\nNAME     DC    C'WHOIS' Rexx var name\nFNAME    ICHEACTN FIELD=PGMRNAME,RELEASE=1.8.1\nLLLFNAME EQU   *-FNAME\nLSTEINTY ICHEINTY LOCATE,TYPE='USR',ENTRY=*-*,RELEASE=1.8.1,           X\n               WKAREA=*-*,ACTIONS=(FNAME),MF=L\nLLLEINTY EQU   *-LSTEINTY\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT USERID,UPPERCASE,PROMPT='Required TSO/E userid ?'\n         IKJENDP\nRACFWMAP DSECT\nSAVEAREA DC    18F'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nLXTEINTY DC    (LLLEINTY)AL1(K0)\nRACFWORK DC    A(K96),(K92)AL1(K0)\nLXTFNAME DC    (LLLFNAME)AL1(K0)\nUSERID   DC    AL1(*-*),CL8' '\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IKJTSVT\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WHOISX),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SLEEPSRC": {"ttr": 3340, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x91\\x07?\\x00\\x925o\\x15F\\x00\\x99\\x00l\\x00G\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1991-03-14T00:00:00", "modifydate": "1992-12-21T15:46:00", "lines": 153, "newlines": 108, "modlines": 71, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nSLP      TITLE 'Sleep user spec amount of time'\nSLEEP    CSECT , /* SLEEP */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nSLEEP    AMODE 24\nSLEEP    RMODE 24\n         SAVE  (14,12),,SLEEP*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING SLEEP,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING SLEPWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING PARSEL,R4\n         L     R5,PARSEL+K16\n         MVC   DINTVL(K8),K0(R5) save time to sleep hhmmssth\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         DROP  R4\n         STIMER WAIT,DINTVL=DINTVL sleep user spec time\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\n         LTORG\nIKJPARM  IKJPARM DSECT=PARSEL\nUSERPARM IKJTERM 'Sleep Time',UPPERCASE,TYPE=CNST,PROMPT='HHMMSSth'\n         IKJENDP\nSLEPWMAP DSECT\nSAVEAREA DC    18F'0'\nDINTVL   DC    D'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(SLEEP),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFUJI": {"ttr": 3588, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x92\\x18O\\x00\\x92\"?\\x15V\\x00\\xb1\\x00\\xae\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf3@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1992-07-02T00:00:00", "modifydate": "1992-08-10T15:56:00", "lines": 177, "newlines": 174, "modlines": 0, "user": "TECH103"}, "text": "//SMFUJI   JOB 5304010530000000,'TECH.SUPP.DANBOWEN',NOTIFY=TECH103,\n//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=4096K\n//*\n//*********************************************************************\n//* DOC: THIS JOB WILL ASSEMBLE THE SMF ( IEFUJI ) INSTALLATION EXIT\n//*      INTO ( SYS1.TECH.COMMON.LPALIB ).\n//*      THIS SMF EXIT ROUTINE WILL PERFORM THE FOLLOWING FUNCTION:\n//*      1. BUILD THE RACROUTE PARAMETER LIST TO PERFORM AUTHORIZATION\n//*         VERIFICATION TO DETERMINE IF THE JOB SUBMITTOR IS\n//*         AUTHORIZED TO USE THE SPECIFIED INITIATOR JOB CLASS.\n//*\n//*      THE RACROUTE SAF IS USED FOR USER AUTHORIZATION CHECKING VIA\n//*      RACF DEFINED GENERAL RESOURCE ( FACILITY ).\n//*      EACH INITIATOR JOBCLASS IS A 1 BYTE MATCHED PROFILE WITH A\n//*      UACC OF ( NONE ).\n//*      THE PROFILE IS DEFINED WITH THE PREFIX ( $JOBCLAS ) AND THE\n//*      THE JMR JOB CLASS: ( $JOBCLAS.J ).\n//*      THE USER MUST BE ON THE PROFILE ACCESS LIST WITH AT LEAST\n//*      ( READ ) AUTHORITY.\n//*\n//*      REGISTER 1 PARAMETER LIST:\n//*      . WORD 1 0(0)    ( ADDRESS OF COMMON SMF PARM LIST )\n//*      . WORD 2 4(4)    ( ADDRESS OF PROGRAMMER'S NAME 20 BYTES )\n//*      . WORD 3 8(8)    ( ADDRESS OF 1 BYTE JOB PRTY IN BIN )\n//*      . WORD 4 12(C)   ( ADDRESS OF JOB ACCOUNTING INFO )\n//*\n//*      EXIT RETURN CODES:\n//*      . R15 = 0        ( USER JOB CLASS OK, ALLOW JOB TO PROCESS )\n//*      . R15 = 4        ( USER NOT AUTH FOR JOB CLASS, CANCEL JOB )\n//*********************************************************************\n//*\n//ASSEM  EXEC  PGM=IEV90,\n//        PARM='OBJECT,XREF(SHORT),NODECK,LIST,RENT'\n//SYSLIB   DD  DSN=SYSM.MVSESA.SMPSTS,DISP=SHR\n//         DD  DSN=SYSM.MVSESA.SMPMTS,DISP=SHR\n//         DD  DSN=SYSM.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(3,1)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(1,1,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//SYSIN    DD  *\nIEFUJI   TITLE 'SMF JOB INITIATION EXIT ROUTINE                '\n         SPACE 3\nIEFUJI   CSECT ,                       CSECT NAME DECLARED\nIEFUJI   AMODE 31\nIEFUJI   RMODE ANY\n         EJECT\n         SAVE  (14,12),,IEFUJI_&SYSDATE._&SYSTIME\n         LR    R12,R15               LOAD BASE REG WITH ENTRY POINT\n         USING IEFUJI,R12            SET UP BASE ADDRESSABILITY\n         L     R2,0(,R1)             GET PARM LIST ADDRESSES\n         USING JMR,R2                JMR DSECT ADDRESSABILITY PARM LIST\n*\n* ISSUE RACROUTE TO CHECK AUTHORITY TO USE INITIATOR JOB CLASS\n*\nRACFCHK  DS    0H\n         L     R0,WRKSIZE          SAF WORK AREA SIZE TO R0\n         GETMAIN RU,LV=(0),SP=252  GETMAIN FOR SAF WORK AREA\n         LTR   R15,R15             GETMAIN SUCCESSFUL?\n         BNZ   GETMERR             NO, EXIT WITH WTO ERROR MSG\n         LR    R11,R1              SAF WORK AREA ADDRESSABILITY\n         USING RACDSECT,R11\n         ST    R13,SAVEAREA+4      SAVE CALLER'S SAVEAREA ADDRESS\n         ST    R11,8(,R13)         SAVE OUR SAVEAREA ADDRESS\n         LR    R13,R11             LOAD OUR SAVE AREA ADDRESS IN R13\n         MVC   AUTHCHK(LRACROUT),RACROUTL    INIT RACROUTE MACRO\n         MVC   PROFILE,RACPROF     INIT RACROUTE PROFILE\n         MVC   RJOBCLAS(1),JMRCLASS  RACROUTE PROFILE JOB CLASS\n         RACROUTE REQUEST=AUTH,    RACHECK REQUEST.                    X\n               CLASS=RACLASS,      RESOURCE CLASS.                     X\n               ATTR=READ,          INSURE AT LEAST READ AUTHORITY.     X\n               ENTITY=PROFILE,     RESOURCE PROFILE.                   X\n               LOG=ASIS,           LOG ACCESS ATTEMPT PER PROFILE.     X\n               WORKA=SAFWORK,      SAF WORK AREA.                      X\n               MF=(E,AUTHCHK)\n*\n*  PROCESS RACHECK RETURN CODE\n*\n         LR    R4,R15              SAVE RACROUTE SAF RETURN CODE\n         C     R4,=F'0'            USER AUTHORIZED FOR JOB CLASS?\n         BE    ALLOWJOB            YES, ALLOW JOB, EXIT RC=0\n*\n         C     R4,=F'4'            PROFILE NOT FOUND\n         BE    ALLOWJOB            NO PROFILE, ALLOW JOB, EXIT RC=0\n*\n         C     R4,=F'8'          USER NOT AUTHORIZED FOR JOB CLASS?\n         BE    SETFAIL           USER NOT AUTH, CANCEL JOB, EXIT RC=4\n         B     ALLOWJOB          UNEXPECTED RETURN CODE, ALLOW JOB\n*\nSETFAIL  DS    0H                   REJECT USER JOBCLASS - NOT AUTH\n         LA    R5,4                 SET RETURN CODE TO FAIL REQUEST\n         WTO   'CHRM100E - JOB CANCELLED, USER NOT AUTH FOR JOBCLASS.',X\n               ROUTCDE=(2,11)\n         B     FINAL\n*\nGETMERR  DS    0H                      ALLOW JOB TO RUN - EXIT RC=0\n         WTO   'CHRM101I - GETMAIN FAILED FOR RACROUTE SAF BUFFER. ',  X\n               ROUTCDE=(2,11)\n         LM    R14,R12,12(R13)         RESTORE CALLER REGISTERS\n         SLR   R15,R15                 SET RETURN CODE TO ZERO\n         BSM   0,14                    RETURN TO CALLER IN ITS MODE\n*\nALLOWJOB SLR    R5,R5               SET RETURN CODE TO ALLOW REQUEST\n*\nFINAL    DS    0H\n         L     R13,SAVEAREA+4      RESTORE CALLER'S REG 13\n         L     R0,WRKSIZE          SAF WORK AREA SIZE TO R0\n         LR    R1,R11              DYNAMIC DATA ADDRESS TO R1\n         FREEMAIN RU,LV=(0),A=(1),SP=252  FREE SAF WORK AREA\n         LR    R15,R5              LOAD RETURN CODE\n         RETURN (14,12),T,RC=(15)  RESTORE CALLER REGISTERS, RETURN\n         EJECT\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0                       REGISTER 0\nR1       EQU   1                       REGISTER 1\nR2       EQU   2                       REGISTER 2\nR3       EQU   3                       REGISTER 3\nR4       EQU   4                       REGISTER 4\nR5       EQU   5                       REGISTER 5\nR6       EQU   6                       REGISTER 6\nR7       EQU   7                       REGISTER 7\nR8       EQU   8                       REGISTER 8\nR9       EQU   9                       REGISTER 9\nR10      EQU   10                      REGISTER 10\nR11      EQU   11                      REGISTER 11\nR12      EQU   12                      REGISTER 12\nR13      EQU   13                      REGISTER 13\nR14      EQU   14                      REGISTER 14\nR15      EQU   15                      REGISTER 15\n*\n*  DATA AREAS FOR RACROUTE SAF MACRO\n*\n         DS    0D\nWRKSIZE  DC    AL4(SIZEDATD)       DYN AREA SIZE\nRACLASS  DC    AL1(L'RACLASSN)     CLASS NAME FOR RACROUTE\nRACLASSN DC    C'FACILITY'         CLASS NAME FOR RACROUTE\nRACPROF  DC    CL39'$JOBCLAS. '    PROFILE JOBCLASS\nRACROUTL RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L\nLRACROUT EQU   *-RACROUTL          LENGTH OF RACROUTE MACRO.\n         LTORG\n*\n*  DSECT DATA AREAS FOR RACROUTE SAF MACRO\n*\nRACDSECT DSECT\nSAVEAREA DS    18F                 REGISTER SAVE AREA.\nSAFWORK  DS    CL512               SAF WORK AREA.\n         DS    0D\nDOUBLE   DC    D'0'\nPROFILE  DS    CL39                PROFILE FOR RACROUTE\n         ORG   PROFILE\nRACFPRFX DC    C'$JOBCLAS.'        PROFILE PREFIX\nRJOBCLAS DS    CL1                 JOB CLASS\n         ORG\n         DS    0D\nAUTHCHK  RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*\nSIZEDATD EQU   *-RACDSECT          LENGTH OF DSECT\n         IEFJMR  ,                 JMR DSECT MAPPING\n         END   IEFUJI\n/*\n//LNKEDT   EXEC  PGM=IEWL,PARM='MAP,LET,LIST,NCAL,XREF,RENT',\n//           COND=(4,LT,ASSEM),REGION=256K\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLIB   DD DSN=SYS1.TECH.COMMON.LPALIB,DISP=SHR\n//SYSLMOD  DD DSN=SYS1.TECH.COMMON.LPALIB(IEFUJI),DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n  ENTRY   IEFUJI\n  NAME    IEFUJI(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFUSI": {"ttr": 3592, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x915\\x0f\\x00\\x921o\\x16P\\x01\\x9e\\x01\\x9e\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf3@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-12-16T00:00:00", "modifydate": "1992-11-11T16:50:00", "lines": 414, "newlines": 414, "modlines": 0, "user": "TECH103"}, "text": "//SMFUSI   JOB 5304010530000000,'TECH.SUPP.DANBOWEN',NOTIFY=TECH103,\n//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=4096K\n/*JOBPARM SYSAFF=SYSA\n//*\n//* DOC: THIS JOB WILL ASSEMBLE THE SMF ( IEFUSI ) INSTALLATION EXIT\n//*      INTO ( SYS1.TECH.COMMON.LPALIB ).\n//*      THIS SMF EXIT ROUTINE WILL SET THE DEFAULT/LIMIT REGION SIZE\n//*      AND GETMAIN REQUESTS BELOW AND ABOVE 16MB FOR ALL JOBS.\n//*      THE REGION AND GETMAIN LIMITS BELOW 16MB WILL BE DEFINED\n//*      AS FOLLOWS:\n//*      . BATCH, TSO, AND STC - SET TO REGION SIZE REQUESTED, BUT NOT\n//*        TO EXCEED THE SIZE OF THE SYSTEM'S PRIVATE AREA.\n//*      THE REGION AND GETMAIN LIMITS ABOVE 16MB WILL BE DEFINED\n//*      AS FOLLOWS:\n//*      . BATCH = 128MB   ( BATMAXA )\n//*      . STC   = 256MB   ( STCMAXA )\n//*      . TSO   = 32MB    ( TSOMAXA )\n//*\n//ASSEM  EXEC  PGM=IEV90,\n//        PARM='OBJECT,XREF(SHORT),NODECK,LIST,RENT'\n//SYSLIB   DD  DSN=SYSM.MVSESA.SMPSTS,DISP=SHR\n//         DD  DSN=SYSM.MVSESA.SMPMTS,DISP=SHR\n//         DD  DSN=SYSM.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(3,1)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(1,1,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//SYSIN    DD  *\nIEFUSI   TITLE 'SMF STEP INITIATION EXIT ROUTINE                '\n         SPACE 3\nIEFUSI   CSECT ,                       CSECT NAME DECLARED\nIEFUSI   AMODE 31\nIEFUSI   RMODE ANY\n         EJECT\n         SAVE  (14,12),,IEFUSI_&SYSDATE._&SYSTIME\n         LR    R12,R15                 LOAD BASE REG WITH ENTRY POINT\n         USING IEFUSI,R12              SET UP BASE ADDRESSABILITY\n*\n* NOTE THAT NO SAVE_AREA WAS GETMAINED SINCE THIS ROUTINE\n*      CALLS NO OTHER ROUTINE OR ISSUES ANY SVC'S\n*\n         LR    R08,R01                 LOAD ADDRESS PARM LIST\n         USING EXTPARM,R08           ADDRESSABILITY TO PARM LIST DSECT\n         L     R11,EXTAEPA           LOAD ADDRESS OF EXIT PARM AREA\n         USING JMR,R11               MAP SMF EXIT PARM AREA TO JMR\n         CLC   EXTASTPN(8),=C'TECHSERV'  CHECK FOR MAINT STEP NAME\n         BE    EXITRET                   IF MAINT STEP NAME THEN EXIT\n**********************************************************************\n*  HANDLE REGION / GETMAIN LIMITS - CHECK ASID REGION TYPE           *\n**********************************************************************\n         ICM   R07,15,EXTAVSMP       FETCH POINTER TO VSM PARM LIST\n         USING VSMPARM,R07           ADDRESSABILITY TO VSM PARMS DSECT\n         BZ    EXITRET               BYPASS IF NOT PROVIDED\n         ICM   R01,15,EXTASRMI       FETCH POINTER TO SRM INFO WORD\n         BZ    EXITRET               BYPASS IF NOT PROVIDED\n         TM    0(R01),X'80'          TEST IF V=R JOB?\n         BO    EXITRET               BYPASS IF V=R JOB\n         L     R05,CVTPTR            LOAD ADDRESS OF CVT\n         USING CVTMAP,R05            ADDRESSABILITY TO CVT\n*\n*        FETCH PRIVATE AREA SIZE FROM GDA.\n*\n         L     R14,CVTGDA              LOAD ADDRESS OF GDA\n         L     R14,GDAPVTSZ-GDA(,R14)\n         DROP  R05                     RELEASE CVT BASE REG\n         L     R05,PSATOLD-PSA         LOAD ADDRESS OF OUR ASCB\n         USING ASCB,R05                ADDRESSABILITY TO ASCB\n         L     R05,ASCBOUCB            LOAD ADDRESS OF OUCB\n         DROP  R05                     RELEASE ASCB BASE REG\n         USING OUCB,R05                ADDRESSABILITY TO OUCB\n         LA    R15,1                   PRESET STC SWITCH (R15 > 0)\n         CLC   OUCBSUBN(3),=C'STC'     TEST IF STARTED TASK?\n         BE    STCRGNB1                YES, GO SET STC LIMITS\n         LNR   R15,R15                 PRESET TSO SWITCH (R15 < 0)\n         CLC   OUCBSUBN(3),=C'TSO'     TEST IF TSO SESSION?\n         BE    TSORGNB1                YES, GO SET TSO LIMITS\n         SR    R15,R15                 SET BATCH SWITCH (R15 = 0)\n         DROP  R05                     RELEASE OUCB BASE REG\n         B     BATRGNB1                GO SET BATCH LIMITS\n**********************************************************************\n*  HANDLE STC REGION LIMITS BELOW 16MB                               *\n*  -----------------------------------                               *\n*  . SET REGION SIZE EQUAL TO SYSTEM'S PRIVATE AREA SIZE MINUS 64KB. *\n*  . SET GETMAIN LIMIT EQUAL TO SYSTEM'S PRIVATE AREA SIZE.          *\n**********************************************************************\nSTCRGNB1 DS    0H\n         LTR   R01,R14                FETCH SYSTEM'S PRIVATE AREA SIZE\n         BZ    STCRGNB2               BYPASS IF 0 OR NOT AVAILABLE\n         S     R01,K64                SUBTRACT 64KB FOR REGION SIZE\n         LR    R02,R14                SET GETMAIN TO LIMIT PRIVATE AREA\n         ST    R01,VSMRLIMB           STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB           STORE GETMAIN LIMIT BELOW 16M\n         B     STCRGNA1               GO SET LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE STC REGION LIMITS BELOW 16MB                               *\n*  -----------------------------------                               *\n*  . SET REGION SIZE BELOW 16M TO INSTALLATION DEFINED VALUE - 8MB.  *\n*  . SET GETMAIN LIMIT TO REGION SIZE LIMIT + 64KB.                  *\n**********************************************************************\nSTCRGNB2 DS    0H\n         L     R00,MAXBELOW          LOAD INSTALLATION MAX BELOW 16MB\n         LR    R01,R00               SET REGION SIZE BELOW 16MB\n         LR    R02,R00               SET GETMAIN LIMIT BELOW 16MB\n         A     R02,K64               ADD 64KB TO GETMAIN LIMIT\n         ST    R01,VSMRLIMB          STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB          STORE GETMAIN LIMIT BELOW 16M\n**********************************************************************\n*  HANDLE STC REGION LIMITS ABOVE 16MB                               *\n*  -----------------------------------                               *\n*  . SET REGION SIZE ABOVE 16M TO INSTALLATION DEFINED VALUE - 96MB. *\n*  . SET GETMAIN LIMIT TO REGION SIZE LIMIT.                         *\n**********************************************************************\nSTCRGNA1 DS    0H\n         L     R03,STCMAXA            LOAD STC MAX ABOVE 16MB\n         LR    R01,R03                SET REGION SIZE ABOVE 16MB\n         ST    R01,VSMRLIMA           STORE EXTENDED REGION LIMIT\n         ST    R01,VSMGLIMA           USE SAME VALUE FOR EXT. GETMAIN\n         OI    VSMFLAGW,X'80'         SET FLAGS TO USE DEFINED LIMITS\n         NI    VSMFLAGW,255-X'40'     CHECK IF REGION < 16MB FITS\n         OI    VSMFLAGW,X'20'         CHECK IF REGION > 16MB FITS\n         B     EXITRET                EXIT, USE DEFINED VALUES\n**********************************************************************\n*  HANDLE BATCH REGION LIMITS BELOW 16MB                             *\n*  -------------------------------------                             *\n*  . SET REGION SIZE EQUAL TO SYSTEM'S PRIVATE AREA SIZE MINUS 64KB. *\n*  . SET GETMAIN LIMIT EQUAL TO SYSTEM'S PRIVATE AREA SIZE.          *\n**********************************************************************\nBATRGNB1 DS    0H\n         ICM   R00,15,VSMREGRQ        FETCH REQUESTED REGION SIZE\n         BNZ   BATRGNB2               BYPASS IF REGION > 0\n         LTR   R01,R14                FETCH SYSTEM'S PRIVATE AREA SIZE\n         BZ    BATRGNB4               BYPASS IF 0 OR NOT AVAILABLE\n         S     R01,K64                SUBTRACT 64KB FOR REGION SIZE\n         LR    R02,R14                SET GETMAIN TO LIMIT PRIVATE AREA\n         ST    R01,VSMRLIMB           STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB           STORE GETMAIN LIMIT BELOW 16M\n         B     BATRGNA1               GO SET LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE BATCH REGION LIMITS BELOW 16MB                             *\n*  -------------------------------------                             *\n*  . USE REQUESTED REGION SIZE IF > MINBELOW, AND < MAXBELOW.        *\n*  . IF < MINBELOW, SET TO INSTALLATION DEFINED MINIMUM.             *\n*  . IF > MAXBELOW, SET TO INSTALLATION DEFINED MAXIMUM.             *\n*  . ADD 64KB FOR THE GETMAIN LIMIT.                                 *\n**********************************************************************\nBATRGNB2 DS    0H\n         C     R00,MINBELOW            IS REGION REQUEST < MINBELOW?\n         BNL   BATRGNB3                NOT LESS, GO CHECK LIMITS\n         L     R00,MINBELOW            USE INSTALLATION MINBELOW\n         LR    R01,R00                 SET REGION SIZE BELOW 16MB\n         LR    R02,R00                 SET GETMAIN LIMIT BELOW 16MB\n         A     R02,K64                 ADD 64KB TO GETMAIN LIMIT\n         ST    R01,VSMRLIMB            STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB            STORE GETMAIN LIMIT BELOW 16M\n         B     BATRGNA1                GO SET LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE BATCH REGION LIMITS BELOW 16MB                             *\n*  -------------------------------------                             *\n*  . CHECK REQUESTED REGION SIZE.                                    *\n*  . IF < PRIVATE AREA SIZE, USE REQUESTED REGION SIZE.              *\n*  . IF > PRIVATE AREA SIZE, SET TO PRIVATE AREA SIZE.               *\n*  . IF PRIVATE AREA SIZE NOT AVAILABLE, USE INSTALLATION MAXBELOW.  *\n**********************************************************************\nBATRGNB3 DS    0H\n         LR    R02,R00                SET GETMAIN TO REQUESTED SIZE\n         LTR   R01,R14                FETCH SYSTEM'S PRIVATE AREA SIZE\n         BZ    BATRGNB4               BYPASS IF 0 OR NOT AVAILABLE\n         CR    R02,R14                IS GETMAIN LIMIT > PRIVATE AREA?\n         BNH   BATRGNB5               NOT HIGH, GO USE REQUESTED SIZE\n**********************************************************************\n*  HANDLE BATCH REGION LIMITS BELOW 16MB                             *\n*  -------------------------------------                             *\n*  . SET REGION SIZE TO MAXBELOW.                                    *\n*  . SET GETMAIN LIMIT EQUAL TO REGION SIZE + 64KB.                  *\n**********************************************************************\nBATRGNB4 DS    0H\n         L     R00,MAXBELOW          LOAD INSTALLATION MAX BELOW 16MB\n         LR    R01,R00               SET REGION SIZE BELOW 16MB\n         LR    R02,R00               SET GETMAIN LIMIT BELOW 16MB\n         A     R02,K64               ADD 64KB TO GETMAIN LIMIT\n         ST    R01,VSMRLIMB          STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB          STORE GETMAIN LIMIT BELOW 16M\n         B     BATRGNA1              GO SET BATCH LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE BATCH REGION LIMITS BELOW 16MB                             *\n*  -------------------------------------                             *\n*  . USE REQUESTED REGION SIZE.                                      *\n*  . SET GETMAIN LIMIT TO REGION SIZE REQUESTED.                     *\n**********************************************************************\nBATRGNB5 DS    0H\n         LR    R01,R00                 SET REGION SIZE BELOW 16MB\n         LR    R02,R00                 SET GETMAIN LIMIT BELOW 16MB\n         ST    R01,VSMRLIMB            STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB            STORE GETMAIN LIMIT BELOW 16M\n**********************************************************************\n*  HANDLE BATCH REGION LIMITS ABOVE 16MB                             *\n*  -------------------------------------                             *\n*  . SET REGION SIZE ABOVE 16M TO INSTALLATION DEFINED VALUE - 32MB. *\n*  . SET GETMAIN LIMIT TO REGION SIZE LIMIT.                         *\n**********************************************************************\nBATRGNA1 DS    0H\n         L     R03,BATMAXA            LOAD BATCH MAX ABOVE 16MB\n         LR    R01,R03                SET REGION SIZE ABOVE 16MB\n         ST    R01,VSMRLIMA           STORE EXTENDED REGION LIMIT\n         ST    R01,VSMGLIMA           USE SAME VALUE FOR EXT. GETMAIN\n         OI    VSMFLAGW,X'80'         SET FLAGS TO USE DEFINED LIMITS\n         NI    VSMFLAGW,255-X'40'     CHECK IF REGION < 16MB FITS\n         OI    VSMFLAGW,X'20'         CHECK IF REGION > 16MB FITS\n         B     EXITRET                EXIT, USE DEFINED VALUES\n**********************************************************************\n*  HANDLE TSO REGION LIMITS BELOW 16MB                               *\n*  -------------------------------------                             *\n*  . SET REGION SIZE EQUAL TO SYSTEM'S PRIVATE AREA SIZE MINUS 64KB. *\n*  . SET GETMAIN LIMIT EQUAL TO SYSTEM'S PRIVATE AREA SIZE.          *\n**********************************************************************\nTSORGNB1 DS    0H\n         ICM   R00,15,VSMREGRQ        FETCH REQUESTED REGION SIZE\n         BNZ   TSORGNB2               BYPASS IF REGION > 0\n         LTR   R01,R14                FETCH SYSTEM'S PRIVATE AREA SIZE\n         BZ    TSORGNB4               BYPASS IF 0 OR NOT AVAILABLE\n         S     R01,K64                SUBTRACT 64KB FOR REGION SIZE\n         LR    R02,R14                SET GETMAIN TO LIMIT PRIVATE AREA\n         ST    R01,VSMRLIMB           STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB           STORE GETMAIN LIMIT BELOW 16M\n         B     TSORGNA1               GO SET LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE TSO REGION LIMITS BELOW 16MB                               *\n*  -------------------------------------                             *\n*  . USE REQUESTED REGION SIZE IF > MINBELOW, AND < MAXBELOW.        *\n*  . IF < MINBELOW, SET TO INSTALLATION DEFINED MINIMUM.             *\n*  . IF > MAXBELOW, SET TO INSTALLATION DEFINED MAXIMUM.             *\n*  . ADD 64KB FOR THE GETMAIN LIMIT.                                 *\n**********************************************************************\nTSORGNB2 DS    0H\n         C     R00,MINBELOW            IS REGION REQUEST < MINBELOW?\n         BNL   TSORGNB3                NOT LESS, GO CHECK LIMITS\n         L     R00,MINBELOW            USE INSTALLATION MINBELOW\n         LR    R01,R00                 SET REGION SIZE BELOW 16MB\n         LR    R02,R00                 SET GETMAIN LIMIT BELOW 16MB\n         A     R02,K64                 ADD 64KB TO GETMAIN LIMIT\n         ST    R01,VSMRLIMB            STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB            STORE GETMAIN LIMIT BELOW 16M\n         B     TSORGNA1                GO SET LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE TSO REGION LIMITS BELOW 16MB                               *\n*  -------------------------------------                             *\n*  . CHECK REQUESTED REGION SIZE.                                    *\n*  . IF < PRIVATE AREA SIZE, USE REQUESTED REGION SIZE.              *\n*  . IF > PRIVATE AREA SIZE, SET TO PRIVATE AREA SIZE.               *\n*  . IF PRIVATE AREA SIZE NOT AVAILABLE, USE INSTALLATION MAXBELOW.  *\n**********************************************************************\nTSORGNB3 DS    0H\n         LR    R02,R00                SET GETMAIN TO REQUESTED SIZE\n         LTR   R01,R14                FETCH SYSTEM'S PRIVATE AREA SIZE\n         BZ    TSORGNB4               BYPASS IF 0 OR NOT AVAILABLE\n         CR    R02,R14                IS GETMAIN LIMIT > PRIVATE AREA?\n         BNH   TSORGNB5               NOT HIGH, GO USE REQUESTED SIZE\n**********************************************************************\n*  HANDLE TSO REGION LIMITS BELOW 16MB                               *\n*  -------------------------------------                             *\n*  . SET REGION SIZE TO MAXBELOW.                                    *\n*  . SET GETMAIN LIMIT EQUAL TO REGION SIZE + 64KB.                  *\n**********************************************************************\nTSORGNB4 DS    0H\n         L     R00,MAXBELOW          LOAD INSTALLATION MAX BELOW 16MB\n         LR    R01,R00               SET REGION SIZE BELOW 16MB\n         LR    R02,R00               SET GETMAIN LIMIT BELOW 16MB\n         A     R02,K64               ADD 64KB TO GETMAIN LIMIT\n         ST    R01,VSMRLIMB          STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB          STORE GETMAIN LIMIT BELOW 16M\n         B     TSORGNA1              GO SET TSO LIMITS ABOVE 16MB\n**********************************************************************\n*  HANDLE TSO REGION LIMITS BELOW 16MB                               *\n*  -------------------------------------                             *\n*  . USE REQUESTED REGION SIZE.                                      *\n*  . SET GETMAIN LIMIT TO REGION SIZE REQUESTED.                     *\n**********************************************************************\nTSORGNB5 DS    0H\n         LR    R01,R00                 SET REGION SIZE BELOW 16MB\n         LR    R02,R00                 SET GETMAIN LIMIT BELOW 16MB\n         ST    R01,VSMRLIMB            STORE REGION LIMIT BELOW 16M\n         ST    R02,VSMGLIMB            STORE GETMAIN LIMIT BELOW 16M\n**********************************************************************\n*  HANDLE TSO REGION LIMITS ABOVE 16MB                               *\n*  -------------------------------------                             *\n*  . SET REGION SIZE ABOVE 16M TO INSTALLATION DEFINED VALUE - 32MB. *\n*  . SET GETMAIN LIMIT TO REGION SIZE LIMIT.                         *\n**********************************************************************\nTSORGNA1 DS    0H\n         L     R03,TSOMAXA            LOAD TSO MAX ABOVE 16MB\n         LR    R01,R03                SET REGION SIZE ABOVE 16MB\n         ST    R01,VSMRLIMA           STORE EXTENDED REGION LIMIT\n         ST    R01,VSMGLIMA           USE SAME VALUE FOR EXT. GETMAIN\n         OI    VSMFLAGW,X'80'         SET FLAGS TO USE DEFINED LIMITS\n         NI    VSMFLAGW,255-X'40'     CHECK IF REGION < 16MB FITS\n         OI    VSMFLAGW,X'20'         CHECK IF REGION > 16MB FITS\n*\n* RETURN TO CALLER\n*\nEXITRET  DS    0H\n         LM    R14,R12,12(R13)         RESTORE CALLER REGISTERS\n         SLR   R15,R15                 SET RETURN CODE TO ZERO\n         BSM   0,14                    RETURN TO CALLER IN ITS MODE\n         EJECT\n*\n*   CONSTANTS TO DEFINE INSTALLATION DEFAULT MINIMUM AND MAXIMUM SIZES\n*\nK64      DC    A(64*1024)              64KB CONSTANT\nMINBELOW DC    A(6*1024*1024-64*1024)  MAX BELOW 16MB = 6MB MINUS 64KB\nMAXBELOW DC    A(8*1024*1024-64*1024)  MAX BELOW 16MB = 8MB MINUS 64KB\nBATMAXA  DC    A(128*1024*1024)        BATCH MAX EXTENDED ABOVE = 128MB\nSTCMAXA  DC    A(256*1024*1024)        STC MAX EXTENDED ABOVE = 256MB\nTSOMAXA  DC    A(32*1024*1024)         TSO MAX EXTENDED ABOVE = 32MB\n         LTORG\n*\n*   REGISTER EQUATES\n*\nR00      EQU   00                      REGISTER 0\nR01      EQU   01                      REGISTER 1\nR02      EQU   02                      REGISTER 2\nR03      EQU   03                      REGISTER 3\nR04      EQU   04                      REGISTER 4\nR05      EQU   05                      REGISTER 5\nR06      EQU   06                      REGISTER 6\nR07      EQU   07                      REGISTER 7\nR08      EQU   08                      REGISTER 8\nR09      EQU   09                      REGISTER 9\nR10      EQU   10                      REGISTER 10\nR11      EQU   11                      REGISTER 11\nR12      EQU   12                      REGISTER 12\nR13      EQU   13                      REGISTER 13\nR14      EQU   14                      REGISTER 14\nR15      EQU   15                      REGISTER 15\n*\n*   EXIT PARAMATER LIST DSECT\n*\nEXTPARM  DSECT                     POINTED BY REGISTER ONE (R1)\nEXTAEPA  DS    A                   ADDRESS OF SMF EXIT PARAMETER LIST\nEXTASTPN DS    A                   POINTER TO JOB STEP NAME\nEXTAPGM  DS    A                   POINTER TO PROGRAM NAME FROM EXEC\nEXTASACI DS    A                   POINTER TO STEP ACCOUNTING INFO\nEXTAVSMP DS    A                   POINTER TO VSM PARM LIST (VSMPARM)\nEXTASRMI DS    A                   POINTER TO SRM INFO FULLWORD\nEXTARSMP DS    A                   POINTER TO RSM PARM LIST (RSMPARM)\n*\n*   VIRTUAL STORAGE MANAGEMENT (VSM) PARM LIST DSECT\n*\nVSMPARM  DSECT                     POINTED TO BY EXTAVSMP\nVSMFLAGW DS    F                   VSM FLAG WORD\nVSMREGRQ DS    F                   REGION SIZE REQUESTED\nVSMGLIMB DS    F                   GETMAIN LIMIT BELOW 16MB\nVSMRLIMB DS    F                   REGION LIMIT BELOW 16MB\nVSMGLIMA DS    F                   GETMAIN LIMIT ABOVE 16MB\nVSMRLIMA DS    F                   REGION LIMIT ABOVE 16MB\n*\n*   DSECT FOR COMMUNICATION VECTOR TABLE (CVT)\n*\n         PUSH  PRINT\n         PRINT OFF\n         CVT   DSECT=YES,PREFIX=YES,LIST=YES\n         POP   PRINT\n*\n*   DSECT FOR ADDRESS SPACE CONTROL BLOCK (ASCB)\n*\n         PUSH  PRINT\n         PRINT OFF\n         IHAASCB\n         POP   PRINT\n*\n*   DSECT FOR RESOURCES MANAGER USER CONTROL BLOCK (OUCB)\n*\n         PUSH  PRINT\n         PRINT OFF\n         IRAOUCB\n         POP   PRINT\n*\n*   DSECT FOR PREFIXED SAVE AREA (PSA)\n*\n         PUSH  PRINT\n         PRINT OFF\n         IHAPSA\n         POP   PRINT\n*\n*   DSECT FOR VSM GLOBAL DATA AREA (GDA)\n*\n         PUSH  PRINT\n         PRINT OFF\n         IHAGDA\n         POP   PRINT\n*\n*   DSECT FOR SMF JOB MANAGEMENT RECORD (JMR)\n*\n         PUSH  PRINT\n         PRINT OFF\n         IEFJMR\n         POP   PRINT\n         END   IEFUSI\n/*\n//LNKEDT   EXEC  PGM=IEWL,PARM='MAP,LET,LIST,NCAL,XREF,RENT',\n//           COND=(4,LT,ASSEM),REGION=256K\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLIB   DD DSN=SYS1.TECH.COMMON.LPALIB,DISP=SHR\n//SYSLMOD  DD DSN=SYS1.TECH.COMMON.LPALIB(IEFUSI),DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n  ENTRY   IEFUSI\n  NAME    IEFUSI(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STOPX37A": {"ttr": 3843, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x93(\\x0f\\x00\\x94)\\x1f\\x11\\x19\\x00\\x97\\x00\\xea\\x00c\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-10-07T00:00:00", "modifydate": "1994-10-18T11:19:00", "lines": 151, "newlines": 234, "modlines": 99, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYSS.STOPX37.V3R5M4.MACLIB,DISP=SHR\n//C.SYSIN DD *\nSMFPROC  CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,SMFPROC*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING SMFPROC,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (SMFIN,(INPUT),REPORT,(OUTPUT))\n         PUT   REPORT,OUTHDR1\n         PUT   REPORT,OUTHDR2\nLOOPIN   GET   SMFIN,INPUT\n         LA    R4,INPUT\n         USING GWA,R4\n         CLI   GWASMFRT,201 STOPX37 RECORD\n         BNE   LOOPIN\n         CLI   GWAFFLAG,GWAFSWI VOL SWITCH\n         BNE   LOOPIN NO\n         MVC   OUTDATE,GWAMDATE\n         MVC   OUTTIME,GWAMTIME\n         MVC   OUTJOB,GWAJNAME\n         MVC   OUTPROCS,GWAPROCS\n         MVC   OUTSTEP,GWASTEP\n         MVC   OUTPGM,GWAPROG\n         MVC   OUTDD,GWADDNM\n         MVC   OUTDSN,GWADSNM\n         L     R9,GWANVOL\n         CVD   R9,WORK\n         UNPK  OUTVOL(3),WORK+6(2)\n         OI    OUTVOL+2,C'0'\n         L     R9,GWATEXT\n         CVD   R9,WORK\n         UNPK  OUTEXT(3),WORK+6(2)\n         OI    OUTEXT+2,C'0'\n         PUT   REPORT,OUTREC\n         B     LOOPIN LOOP\nEODAD    EQU   * *\n         CLOSE (SMFIN,,REPORT)\n         FREEPOOL SMFIN\n         FREEPOOL REPORT\n         SLR   R9,R9\nMAINEXIT L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    D\nOUTREC   DC    CL115' '\n         ORG   OUTREC\nOUTDATE  DS    CL8 GWAMDATE\n         DC    CL1' '\nOUTTIME  DS    CL8 GWAMTIME\n         DC    CL1' '\nOUTJOB   DS    CL8 GWAJNAME\n         DC    CL1' '\nOUTPROCS DS    CL8 GWAPROCS\n         DC    CL1' '\nOUTSTEP  DS    CL8 GWASTEP\n         DC    CL1' '\nOUTPGM   DS    CL8 GWAPROG\n         DC    CL1' '\nOUTDD    DS    CL8 GWADDNM\n         DC    CL1' '\nOUTDSN   DS    CL44 GWADSNM\n         DC    CL1' '\nOUTVOL   DS    CL3  GWANVOL\n         DC    CL1' '\nOUTEXT   DS    CL3  GWATEXT\n         ORG\nOUTHDR1  DC    CL115' '\n         ORG   OUTHDR1\n         DC    CL8'JOBDATE'\n         DC    CL1' '\n         DC    CL8'JOBTIME'\n         DC    CL1' '\n         DC    CL8'JOBNAME'\n         DC    CL1' '\n         DC    CL8'PROCSTEP'\n         DC    CL1' '\n         DC    CL8'STEPNAME'\n         DC    CL1' '\n         DC    CL8'PROGRAM'\n         DC    CL1' '\n         DC    CL8'DDNAME'\n         DC    CL1' '\n         DC    CL44'DATASET NAME'\n         DC    CL1' '\n         DC    CL3'VOL'\n         DC    CL1' '\n         DC    CL3'EXT'\n         ORG\nOUTHDR2  DC    CL115' '\n         ORG   OUTHDR2\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    44CL1'-'\n         DC    CL1' '\n         DC    CL3'---'\n         DC    CL1' '\n         DC    CL3'---'\n         ORG\nSMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=EODAD\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=115\n         LTORG\nINPUT    DS    0D'0',32767C\n         COPY  DSRWORK\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(X37VOLSW),DISP=SHR,UNIT=\n//*G.SMFIN DD DSN=SYSS.SMFDUMP.DLY.FILE,DISP=SHR\n//*G.SMFIN DD DSN=SYSS.SMFDUMP.WKLY.ACCUM,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n//*G.REPORT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STOPX37B": {"ttr": 3847, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94)/\\x00\\x94)/\\x16B\\x00\\x99\\x00\\x97\\x00\\x19\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-10-19T00:00:00", "modifydate": "1994-10-19T16:42:00", "lines": 153, "newlines": 151, "modlines": 25, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYSS.STOPX37.V3R5M4.MACLIB,DISP=SHR\n//C.SYSIN DD *\nSMFPROC  CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,SMFPROC*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING SMFPROC,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (SMFIN,(INPUT),REPORT,(OUTPUT))\n         PUT   REPORT,OUTHDR1\n         PUT   REPORT,OUTHDR2\nLOOPIN   GET   SMFIN,INPUT\n         LA    R4,INPUT\n         USING GWA,R4\n         CLI   GWASMFRT,201 STOPX37 RECORD\n         BNE   LOOPIN\n         CLI   GWAFFLAG,GWAFRCAT RECAT SWITCH\n         BNE   LOOPIN NO\n         MVC   OUTDATE,GWAMDATE\n         MVC   OUTTIME,GWAMTIME\n         MVC   OUTJOB,GWAJNAME\n         MVC   OUTPROCS,GWAPROCS\n         MVC   OUTSTEP,GWASTEP\n         MVC   OUTPGM,GWAPROG\n         MVC   OUTDD,GWADDNM\n         MVC   OUTDSN,GWADSNM\n         MVC   OUTVOLS1,GWARVOL\n         MVC   OUTVOLS2,GWADVOL\n*        L     R9,GWANVOL\n*        CVD   R9,WORK\n*        UNPK  OUTVOL(3),WORK+6(2)\n*        OI    OUTVOL+2,C'0'\n*        L     R9,GWATEXT\n*        CVD   R9,WORK\n*        UNPK  OUTEXT(3),WORK+6(2)\n*        OI    OUTEXT+2,C'0'\n         PUT   REPORT,OUTREC\n         B     LOOPIN LOOP\nEODAD    EQU   * *\n         CLOSE (SMFIN,,REPORT)\n         FREEPOOL SMFIN\n         FREEPOOL REPORT\n         SLR   R9,R9\nMAINEXIT L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    D\nOUTREC   DC    CL121' '\n         ORG   OUTREC\nOUTDATE  DS    CL8 GWAMDATE\n         DC    CL1' '\nOUTTIME  DS    CL8 GWAMTIME\n         DC    CL1' '\nOUTJOB   DS    CL8 GWAJNAME\n         DC    CL1' '\nOUTPROCS DS    CL8 GWAPROCS\n         DC    CL1' '\nOUTSTEP  DS    CL8 GWASTEP\n         DC    CL1' '\nOUTPGM   DS    CL8 GWAPROG\n         DC    CL1' '\nOUTDD    DS    CL8 GWADDNM\n         DC    CL1' '\nOUTDSN   DS    CL44 GWADSNM\n         DC    CL1' '\nOUTVOLS1 DS    CL6  GWARVOL\n         DC    CL1' '\nOUTVOLS2 DS    CL6  GWADVOL\n         ORG\nOUTHDR1  DC    CL121' '\n         ORG   OUTHDR1\n         DC    CL8'JOBDATE'\n         DC    CL1' '\n         DC    CL8'JOBTIME'\n         DC    CL1' '\n         DC    CL8'JOBNAME'\n         DC    CL1' '\n         DC    CL8'PROCSTEP'\n         DC    CL1' '\n         DC    CL8'STEPNAME'\n         DC    CL1' '\n         DC    CL8'PROGRAM'\n         DC    CL1' '\n         DC    CL8'DDNAME'\n         DC    CL1' '\n         DC    CL44'DATASET NAME'\n         DC    CL1' '\n         DC    CL6'ORGVOL'\n         DC    CL1' '\n         DC    CL6'NEWVOL'\n         ORG\nOUTHDR2  DC    CL121' '\n         ORG   OUTHDR2\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    CL8'--------'\n         DC    CL1' '\n         DC    44CL1'-'\n         DC    CL1' '\n         DC    CL6'------'\n         DC    CL1' '\n         DC    CL6'------'\n         ORG\nSMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=EODAD\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=121\n         LTORG\nINPUT    DS    0D'0',32767C\n         COPY  DSRWORK\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(X37RECAT),DISP=SHR,UNIT=\n//*G.SMFIN DD DSN=TECH104.SMF.STOPX37,DISP=SHR\n//*G.SMFIN DD DSN=SYSS.SMFDUMP.WKLY.ACCUM,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n//*G.REPORT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORCLAS": {"ttr": 3851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x94\\x04\\x9f\\x00\\x94\"\\x8f\\x144\\x00\\x89\\x00\\x91\\x00J\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1994-02-18T00:00:00", "modifydate": "1994-08-16T14:34:00", "lines": 137, "newlines": 145, "modlines": 74, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORCLASS ROUTINE                 */\n/*                                                                  */\nPROC &STORCLAS\n/*                                                                  */\n/* LIST OF VALID STORAGE CLASSES THAT MAY BE CODED WITHOUT RESTRICTN*/\nFILTLIST &VALID_PUBLIC_STORAGE_CLASSES INCLUDE(\n   'ANYWHERE',\n   'PREALLOC',\n   'NONSMS',\n   '')\n/* LIST OF VALID RESTRICTED STORAGE CLASSES                         */\nFILTLIST &VALID_NONPUBLIC_STORAGE_CLASSES INCLUDE(\n   'FASTREAD',\n   'FASTWRIT')\n/* COMPATABILITY MODE                                               */\nFILTLIST &COMPAT_ANYWHERE INCLUDE(\n   'SCSTNRD')\nFILTLIST &COMPAT_PREALLOC INCLUDE(\n   'SCSTNRDG','CICSR','CICSW','SYSSHARE','SYSMAINT')\n/* DASD UNITS                                                       */\nFILTLIST DASD_UNITS INCLUDE(\n    '3380','3390','DISK','PAGEIO','SYSDA','SYSSQ','SYSTEST',\n    'SMS','QA','PARTH',\n    'VIO','SYSALLDA','APPLTA','SEQDA','SYSTA','USRDA','')\n/*                                                                  */\n/* TECHNOLOGY SERVICES TSO/E USERIDS AND PROD ZEKE SUBMITTOR        */\nFILTLIST &TECH_SERV INCLUDE(TECH*,'ZEKE')\n/*                                                                  */\n/* SYSTEM DATASETS THAT DEFAULT TO PREALLOC                         */\nFILTLIST &SYSHLQ INCLUDE(SYS%,DB2%,FDR*)\n/*                                                                  */\n/* NEW ALLOC HAVE ACSENVIR OF ALLOC OR RECOVER                      */\nFILTLIST &ALLOC INCLUDE('ALLOC','RECOVER')\n/*                                                                  */\n/* ASSIGN A NEW STORAGE CLASS ONLY IF THIS IS NEW SMS ALLOCATION    */\n/* I.E. IF RECALL THEN KEEP PREV ASSIGNED VALUE                     */\n/* IF CONVERT PROCESS IN PLACE THEN SET STORCLAS=NULL; SO THAT      */\n/* THIS WILL IN EFFECT PREVENT USAGE OF THIS FACILITY               */\n/* ALL CONVERSIONS TO SMS SHOULD BE DONE BY DATASET                 */\n/*                                                                  */\nSELECT (&ACSENVIR)\n/*                                                                  */\n/* ALLOC=NEW DATASET ALLOC; RECOVER=DFDSS/FDR DATASET RESTORES      */\n      WHEN (&ALLOC) DO\n/* IGNORE IF NON-DASD ALLOCATION AND SET STORCLASS TO NULL          */\n               IF &UNIT NE &DASD_UNITS THEN DO\n                  SET &STORCLAS = ''\n                  EXIT CODE(0)\n                  END\n/* FORCE ANYWHERE OR PREALLOC FOR ALL TRUE TEMP DATASETS            */\n               ELSE IF &DSTYPE = 'TEMP' THEN DO\n                  IF &ALLVOL = '' THEN SET &STORCLAS = 'PREALLOC'\n                       ELSE SET &STORCLAS = 'ANYWHERE'\n                  EXIT CODE(0)\n                  END\n/* RACF DFP RESOWNER INDICATES NONSMS                               */\n                         ELSE IF &DSOWNER = 'NONSMS' THEN DO\n                                 SET &STORCLAS = ''\n                                 EXIT CODE(0)\n                                 END\n/* PERFORM AUTHORIZATION CHECKS IF RESTRICTED STORCLAS VALUE CODED  */\n           ELSE IF &STORCLAS EQ &VALID_NONPUBLIC_STORAGE_CLASSES AND +\n                  &XMODE NE 'TASK' AND +\n                  &USER  NE &TECH_SERV THEN DO\n                           SET &STORCLAS = 'ANYWHERE'\n                           EXIT CODE(0)\n                           END\n/* PERMIT UNAUTH USERS TO CODE PREALLOC ONLY IF NO VOLSERS CODED    */\n               ELSE IF &STORCLAS = 'PREALLOC' AND +\n                  &ALLVOL NE '' AND +\n                  &XMODE NE 'TASK' AND +\n                  &USER  NE &TECH_SERV THEN DO\n                           SET &STORCLAS = 'ANYWHERE'\n                           EXIT CODE(0)\n                           END\n/*                                                                  */\n/* PROCESS THE CODED STORCLAS VALUE                                 */\n               ELSE SELECT (&STORCLAS)\n/* FIRST PROCESS ALL NON-SMS DATASETS                               */\n                     WHEN ('NONSMS') DO\n                           SET &STORCLAS = ''\n                           EXIT CODE(0)\n                           END\n/* ASSIGN SOMETHING IF STORCLAS NOT CODED                           */\n                     WHEN ('') DO\n/*      GIVE A BASIC DEFAULT OF ANYWHERE OR PREALLOC AS STORCLAS    */\n                            IF &HLQ = &SYSHLQ THEN DO\n                                   SET &STORCLAS = 'PREALLOC'\n                                   EXIT CODE(0)\n                                 END\n                              ELSE DO\n                                   IF &ALLVOL = '' THEN +\n                                     SET &STORCLAS = 'PREALLOC'\n                                   ELSE SET &STORCLAS = 'ANYWHERE'\n                                 EXIT CODE(0)\n                               END\n                           END\n/* ELSE PROCESS COMPATABILITY MODE                                  */\n                     WHEN (&COMPAT_ANYWHERE) DO\n                              SET &STORCLAS = 'ANYWHERE'\n                              EXIT CODE(0)\n                           END\n                     WHEN (&COMPAT_PREALLOC) DO\n                              SET &STORCLAS = 'PREALLOC'\n                              EXIT CODE(0)\n                           END\n/* ELSE PROCESS VALID REMAINING STORAGE CLASSES                     */\n                     WHEN (&VALID_PUBLIC_STORAGE_CLASSES) DO\n                              SET &STORCLAS = &STORCLAS\n                              EXIT CODE(0)\n                           END\n                     WHEN (&VALID_NONPUBLIC_STORAGE_CLASSES) DO\n                              SET &STORCLAS = &STORCLAS\n                              EXIT CODE(0)\n                           END\n/* OTHERWISE GARBAGE STORAGE CLASS WAS CODED; WE WILL OVERRIDE IT   */\n                     OTHERWISE DO\n                           SET &STORCLAS = 'ANYWHERE'\n                           EXIT CODE(0)\n                           END\n                 END\n           END\n/*                                                                  */\n/* IGNORE CONVERT REQUESTS                                          */\n      WHEN ('CONVERT') DO\n           SET &STORCLAS = ''\n           EXIT CODE(0)\n           END\n/*                                                                  */\n/* FALL THROUGH FOR RECALLS, ETC.                                   */\n      OTHERWISE DO\n           SET &STORCLAS = &STORCLAS\n           EXIT CODE(0)\n           END\nEND\n/*                                                                  */\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORCLSO": {"ttr": 3854, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01N\\x00\\x00\\x00\\x905O\\x00\\x94 o\\x16\\x07\\x00\\x9d\\x00\\xdf\\x00\\x9d\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.78", "flags": 0, "createdate": "1990-12-20T00:00:00", "modifydate": "1994-07-25T16:07:00", "lines": 157, "newlines": 223, "modlines": 157, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORCLASS ROUTINE                 */\nPROC &STORCLAS\n/* LIST OF VALID STORAGE CLASSES                                    */\n/* SMS VOLUME VTOC AND VVDS ARE ALWAYS CACHED                       */\nFILTLIST &VALID_STORAGE_CLASSES INCLUDE(\n   'ANYWHERE',\n   'CICSR',\n   'CICSW',\n   'SCPERFR',\n   'SCPERFW',\n   'SCCACHR',\n   'SCCACHW',\n   'SCSTNRD',\n   'SCSTNRDG',\n   'SCTEMP',\n   'SYSSHARE',\n   'SYSMAINT',\n   'SMSTEST',\n   'SCDPLXR',\n   'SCDPLXW')\n/* LIST OF VALID AUTHORIZED TSO USERIDS THAT ARE PERMITTED TO       */\n/* REQUEST A SPECIFIC STORAGE CLASS ASSIGNMENT                      */\nFILTLIST &VALID_AUTHORIZED_RACF_GROUPS INCLUDE('TECHSUPT',\n                                               'STCGROUP',\n                                               'SECURITY',\n                                               'DB2ADMIN',\n                                               'OPERATON',\n                                               'PRODCNTL')\nFILTLIST &SYSHLQ INCLUDE(SYS%)\n/* SORTWORK DDNAMES AND SORTOUT DDNAMES                             */\nFILTLIST &VALID_SORTWORK_DDNAMES INCLUDE(SORT*)\n/* SMPE RELFILES                                                    */\nFILTLIST &RELFILES INCLUDE(F%*)\n/* FDR                                                              */\nFILTLIST &FDRABR   INCLUDE(FDR.PASSWORD.**,FDRABR.V*.**)\n/* UTILITY PROGRAMS                                                 */\nFILTLIST &COPYPGM INCLUDE(FDR*,ARC*,'ADRDSSU','GIMSMP')\n/* FDR SPECIAL MUST CHEK BEFORE ACSENVIR CHECK                      */\n/* EXIT HERE FOR NON-SMS */\nIF (&STORCLAS = 'NONSMS') THEN DO\n      SET &STORCLAS = ''\n      EXIT CODE(0)\n   END\nIF (&DSN = &FDRABR) THEN DO\n    SET &STORCLAS = 'PREALLOC'\n      EXIT CODE(0)\n   END\n/* ASSIGN A NEW STORAGE CLASS ONLY IF THIS IS NEW SMS ALLOCATION    */\n/* I.E. IF RECALL OR RECOVER OR ETC. THEN KEEP PREV ASSIGNED VALUE  */\nIF (&ACSENVIR = 'RECALL' | &ACSENVIR = 'RECOVER') THEN DO\n      SET &STORCLAS = &STORCLAS\n      EXIT CODE(0)\n   END\nIF (&ACSENVIR \u00ac= 'ALLOC' && &ACSENVIR \u00ac= 'CONVERT') THEN DO\n      SET &STORCLAS = &STORCLAS\n      EXIT CODE(0)\n   END\n/* IF CONVERT PROCESS IN PLACE THEN SET STORCLAS=NULL               */\n/* THIS WILL IN EFFECT PREVENT USAGE OF THIS FACILITY               */\n/* ALL CONVERSIONS TO SMS SHOULD BE DONE BY DATASET                 */\nIF (&ACSENVIR = 'CONVERT') THEN DO\n      SET &STORCLAS = ''\n      EXIT CODE(0)\n   END\n/* EXIT HERE FOR NON-SMS */\nIF (&DATACLAS = 'NONSMS' | &DATACLAS = 'VVDS' | &DATACLAS = '') +\n     THEN DO\n      SET &STORCLAS = ''\n      EXIT CODE(0)\n   END\n/* CHECK FOR UTILITY                                                */\nIF (&STORCLAS \u00ac= '') && (&PGM = &COPYPGM) THEN DO\n      SET &STORCLAS = &STORCLAS\n      EXIT CODE(0)\n   END\nIF (&HLQ = 'SYST' | &HLQ = 'RESTART' | &STORCLAS = 'PREALLOC') THEN DO\n    SET &STORCLAS = 'PREALLOC'\n      EXIT CODE(0)\n   END\nIF (&HLQ = 'SYSY' | &HLQ = 'SYSZ') THEN DO\n    SET &STORCLAS = 'ANYWHERE'\n      EXIT CODE(0)\n   END\nIF (&STORCLAS = 'FASTREAD' | &STORCLAS = 'FASTWRIT') THEN DO\n    SET &STORCLAS = &STORCLAS\n      EXIT CODE(0)\n   END\nIF &DSN(2) = 'SOURCING' | &DSN(2) = 'JARSCHRG' | +\n   &DSN(2) = 'JOBACCT' THEN DO\n    SET &STORCLAS = 'SCSTNRDG'\n    EXIT CODE(0)\n   END\n/* TRUE TEMPORARY DATASET PROCESSING; TRY TO GET VIO                */\nIF &DSTYPE = 'TEMP' THEN DO\n   IF (&DD \u00ac= &VALID_SORTWORK_DDNAMES) &&\n      (&PGM \u00ac= 'GIMSMP') &&\n      (&PGM \u00ac= 'IEBCOPY') THEN DO\n          SET &STORCLAS = 'SCTEMP'\n          WRITE '** STATUS  - STORCLAS VALUE (' &STORCLAS +\n             ') ASSIGNED **'\n          EXIT CODE(0)\n          END\n   END\n/* ALLOCATION STORAGE CLASS PROCESSING                              */\n/* IF AUTHORIZED RACF GROUP THEN ENABLE REQUESTED STORAGE CLASS     */\n/* IF VALID NONNULL VALUE SPECIFIED OR FAIL IF INVALID VALUE        */\n/* IF NONNULL VALUE SPECIFIED FOR NON-AUTHORIZED TSO USER THEN      */\n/* FAIL ALLOCATION                                                  */\n/* ELSE SET STANDARD VALUE OF 'SCSTNRD'                             */\nIF &ANYVOL = MIGR* THEN DO\n      SET &STORCLAS = ''\n      EXIT CODE(0)\n   END\nIF (&STORCLAS \u00ac= '') && (&PGM = 'GVRESTOR') THEN DO\n                   SET &STORCLAS = &STORCLAS\n                   WRITE '** STATUS  - STORCLAS VALUE (' &STORCLAS +\n                         ') ASSIGNED **'\n                   EXIT CODE(0)\n                END\nIF (&STORCLAS \u00ac= '') THEN DO\n      SELECT (&STORCLAS)\n         WHEN(&VALID_STORAGE_CLASSES)\n             SELECT (&GROUP)\n                WHEN(&VALID_AUTHORIZED_RACF_GROUPS) DO\n                   SET &STORCLAS = &STORCLAS\n                   WRITE '** STATUS  - STORCLAS VALUE (' &STORCLAS +\n                         ') ASSIGNED **'\n                   EXIT CODE(0)\n                END\n                OTHERWISE DO\n      WRITE '** ERROR   - UNAUTHORIZED STORCLAS VALUE (' &STORCLAS +\n                   ') ASSIGNED **'\n                EXIT CODE(16)\n                END\n             END\n         OTHERWISE DO\n             WRITE '** ERROR   - INVALID STORCLAS VALUE (' &STORCLAS +\n                   ') ASSIGNED **'\n             EXIT CODE(16)\n             END\n      END /* END OF MAJOR SELECT */\n   END /* END OF MAJOR STORCLAS NONNULL GROUP */\nIF (&HLQ = &SYSHLQ) | (&DATACLAS = 'DB2') +\n  THEN SET &STORCLAS = 'SCSTNRDG'\n   ELSE IF &ALLVOL = '' +\n         THEN SET &STORCLAS = 'SCSTNRDG'\n   ELSE SET &STORCLAS = 'SCSTNRD'\nIF (&HLQ = &SYSHLQ) && (&LLQ = &RELFILES) +\n   THEN SET &STORCLAS = 'SCSTNRD'\nIF (&HLQ = &SYSHLQ) | (&DATACLAS = 'XCF') | (&DATACLAS = 'IODF') +\n   THEN SET &STORCLAS = 'SYSSHARE'\nIF (&HLQ = 'SYST') +\n   THEN SET &STORCLAS = 'SYSMAINT'\nWRITE '** STATUS  - STORCLAS VALUE (' &STORCLAS +\n      ') ASSIGNED **'\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRP": {"ttr": 4100, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00\\x00\\x00\\x94\\x04\\x9f\\x00\\x952o\\x10F\\x00b\\x00A\\x00S\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf5@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "1994-02-18T00:00:00", "modifydate": "1995-11-22T10:46:00", "lines": 98, "newlines": 65, "modlines": 83, "user": "TECH105"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE                   */\nPROC &STORGRP\nFILTLIST &ALLPOOLS INCLUDE(FDR*.**)\nFILTLIST &HIPERF   INCLUDE('FASTREAD','FASTWRIT')\nFILTLIST &SYSPARTH INCLUDE(PPLAN.**)\nFILTLIST &SYSQARTH INCLUDE(QPLAN.**)\nFILTLIST &SYSTARTH INCLUDE(TPLAN.**,MERC002.**,MERC101.**,MERC606.**)\nFILTLIST &SYSTAPPL INCLUDE(APPL1.**)\nFILTLIST &SYSPDB2  INCLUDE(DB2A.**)\nFILTLIST &SYSQDB2  INCLUDE(DB2X.**)\nFILTLIST &SYSTDB2  INCLUDE(DB2Y.**)\nFILTLIST &SYSPSYS  INCLUDE(SYSP.**)\nFILTLIST &SYSTSYS  INCLUDE(SYST.**)\nFILTLIST &SYSMSYS  INCLUDE(SYSM.**)\nFILTLIST &SYSPOOL  INCLUDE(SYS%.**)\nFILTLIST &SYSQUSER INCLUDE(QAPPL2.**,QFINL1.**,QFINL8.**,QMERC1.**)\nSELECT\n/* TRUE TEMPORARY DATASETS                                          */\n   WHEN (&DSTYPE = 'TEMP') DO\n      SET &STORGRP = 'VIOPOOL','TEMP'\n      EXIT CODE(0)\n      END\n/* HIGH PERF (FASTREAD/FASTWRIT) DATASETS ON SYSP ONLY FOR CICS/SYS */\n   WHEN (&STORCLAS = &HIPERF) DO\n      SET &STORGRP = 'SYSPPERF','SYSPUSER'\n      EXIT CODE(0)\n      END\n/* SYSTEM DATASETS                                                  */\n   WHEN (&DSN = &SYSPSYS) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTSYS) DO\n      SET &STORGRP = 'SYSTSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSMSYS) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSPOOL) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n/* MERC PLANNING ARTHUR DATABASE                                    */\n   WHEN (&DSN = &SYSPARTH) DO\n      SET &STORGRP = 'SYSPARTH'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQARTH) DO\n      SET &STORGRP = 'SYSQARTH'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTARTH) DO\n      SET &STORGRP = 'SYSTARTH'\n      EXIT CODE(0)\n      END\n/* DB2 APPLICATION DATABASE                                         */\n   WHEN (&DSN = &SYSPDB2) DO\n      SET &STORGRP = 'SYSPDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQDB2) DO\n      SET &STORGRP = 'SYSQDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTDB2) DO\n      SET &STORGRP = 'SYSTDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTAPPL) DO\n      SET &STORGRP = 'SYSTAPPL'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQUSER) DO\n      SET &STORGRP = 'SYSQUSER'\n      EXIT CODE(0)\n      END\n/* SYSTEM UTIL,LIKE FDR, FILES TO BE ALLOC ON ANY VOLUME            */\n/*   REMOVED SYSTARTH FROM BELOW MM 10/16/95                        */\n   WHEN (&DSN = &ALLPOOLS) DO\n      SET &STORGRP='SYSPUSER','USER',  +\n                   'SYSPARTH','SYSQARTH',          +\n                   'SYSPDB2','SYSQDB2','SYSTDB2',  +\n                   'SYSPSYS','SYSTSYS','SYSMSYS',  +\n                   'SYSPPERF','SYSTAPPL','SYSTARTH','SYSQUSER'\n      EXIT CODE(0)\n      END\n/* ELSE GENERAL POOL                                                */\n   OTHERWISE DO\n      IF &USER = 'TECH105' THEN\n         SET &STORGRP = 'USER','SYSPUSER'\n         ELSE\n      SET &STORGRP = 'USER'\n      EXIT CODE(0)\n      END\nEND\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRPM": {"ttr": 4103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92(\\x0f\\x00\\x93\\x14\\x1f\\x156\\x00\\x12\\x00\\x10\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-10-06T00:00:00", "modifydate": "1993-05-21T15:36:00", "lines": 18, "newlines": 16, "modlines": 2, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE                   */\n/********************************************************************/\n/*                         L O G I C                                */\n/*    SET APPROPRIATE STORAGE GROUP PER STORAGE CLASS               */\n/*    ATTEMPT SGVIO FOR MOST TRUE TEMP DATASETS                     */\n/*    SET SPECIAL STORAGE GROUP FOR DUPLEXED DATASETS               */\n/*    SYSTEM MAINT SPECIAL STORGRP PROCESSING                       */\n/********************************************************************/\nPROC &STORGRP\nIF (&STORCLAS = 'SCTEMP') THEN\n    SET &STORGRP = 'VIOPOOL','USRPOOL'\nELSE IF (&STORCLAS = 'SMSTEST') THEN\n       SET &STORGRP = 'SMSTEST'\nELSE\n             SET &STORGRP =\n                   'USRPOOL'\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRPO": {"ttr": 4105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x00\\x00\\x92%O\\x00\\x94\\x02o\\x15W\\x002\\x00#\\x00*\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1992-09-10T00:00:00", "modifydate": "1994-01-26T15:57:00", "lines": 50, "newlines": 35, "modlines": 42, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE                   */\nPROC &STORGRP\nFILTLIST &VALID_ARTHUR INCLUDE(PARTH.DATA%*.DBA)\nFILTLIST &VALID_SYSTEM INCLUDE(SYS%)\nFILTLIST &VALID_FDRAUTH INCLUDE(FDR.PASSWORD.V%%%%%%,FDRABR.V*.**)\nFILTLIST &DB2_PROD INCLUDE('DB2A','DB2B')\nFILTLIST &DB2_TEST INCLUDE('DB2X','DB2Y')\nFILTLIST &ESA43M   INCLUDE('SYST','SYSZ')\nFILTLIST &PERFCLAS INCLUDE('FASTREAD','FASTWRIT')\nIF (&STORCLAS = 'SCTEMP') THEN\n    SET &STORGRP = 'USRPOOL','VIOPOOL'\nELSE\n     IF (&STORCLAS = &PERFCLAS && &ANYVOL \u00ac= '') THEN\n         SET &STORGRP = 'PERFPOOL'\nELSE\n     IF (&DSN = &VALID_FDRAUTH) THEN\nSET &STORGRP = 'USRPOOL','SYSPOOL','DB2PPOOL','CICSPOOL','ARTHPOOL', +\n               'DB2TPOOL','PERFPOOL'\nELSE\n     IF (&STORCLAS = 'SYSSHARE') THEN\n         SET &STORGRP = 'SYSPOOL'\nELSE\n     IF (&HLQ = &DB2_PROD) THEN\n         SET &STORGRP = 'DB2PPOOL'\nELSE\n     IF (&HLQ = &DB2_TEST) THEN\n         SET &STORGRP = 'DB2TPOOL'\nELSE\n     IF (&DSN = &VALID_ARTHUR) THEN\n         SET &STORGRP = 'ARTHPOOL'\nELSE\n     IF (&STORCLAS = 'SMSTEST') THEN\n         SET &STORGRP = 'SMSTEST'\nELSE\n     IF (&MGMTCLAS = 'MVSMAINT') THEN\n         SET &STORGRP = 'MNTPOOL'\nELSE\n     IF (&HLQ = &ESA43M) THEN\n         SET &STORGRP = 'SYSMSYS'\nELSE\n     IF (&STORCLAS = 'CICSR' OR &STORCLAS = 'CICSW') THEN\n         SET &STORGRP = 'CICSPOOL'\nELSE\n     IF (&HLQ = &VALID_SYSTEM) THEN\n         SET &STORGRP = 'SYSPOOL'\nELSE\n             SET &STORGRP =\n                   'USRPOOL'\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRPT": {"ttr": 4107, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x941?\\x00\\x941?\\x01@\\x00Z\\x00Z\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-11-09T00:00:00", "modifydate": "1994-11-09T01:40:00", "lines": 90, "newlines": 90, "modlines": 0, "user": "TECH104"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE                   */\nPROC &STORGRP\nFILTLIST &ALLPOOLS INCLUDE(FDR*.**)\nFILTLIST &HIPERF   INCLUDE('FASTREAD','FASTWRIT')\nFILTLIST &LIBRARY  INCLUDE(SYS%.**.MASTER)\nFILTLIST &SYSPARTH INCLUDE(PPLAN.**)\nFILTLIST &SYSQARTH INCLUDE(QPLAN.**)\nFILTLIST &SYSTARTH INCLUDE(TPLAN.**)\nFILTLIST &SYSPDB2  INCLUDE(DB2A.**)\nFILTLIST &SYSQDB2  INCLUDE(DB2X.**)\nFILTLIST &SYSTDB2  INCLUDE(DB2Y.**)\nFILTLIST &SYSPSYS  INCLUDE(SYSP.**)\nFILTLIST &SYSTSYS  INCLUDE(SYST.**)\nFILTLIST &SYSMSYS  INCLUDE(SYSM.**)\nFILTLIST &SYSPOOL  INCLUDE(SYS%.**)\nSELECT\n/* TRUE TEMPORARY DATASETS                                          */\n   WHEN (&DSTYPE = 'TEMP') DO\n      SET &STORGRP = 'VIOPOOL','SYSPUSER','SYSTUSER'\n      EXIT CODE(0)\n      END\n/* CA LIBRARIAN MASTER FILES THAT ARE SHARED AMONG SYSP AND SYST    */\n   WHEN (&DSN = &LIBRARY) DO\n      SET &STORGRP = 'LIBRARY'\n      EXIT CODE(0)\n      END\n/* HIGH PERF (FASTREAD/FASTWRIT) DATASETS ON SYSP ONLY FOR CICS/SYS */\n   WHEN (&STORCLAS = &HIPERF) DO\n      SET &STORGRP = 'SYSPPERF','SYSPUSER','SYSTUSER'\n      EXIT CODE(0)\n      END\n/* SYSTEM DATASETS                                                  */\n   WHEN (&DSN = &SYSPSYS) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTSYS) DO\n      SET &STORGRP = 'SYSTSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSMSYS) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSPOOL) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n/* MERC PLANNING ARTHUR DATABASE                                    */\n   WHEN (&DSN = &SYSPARTH) DO\n      SET &STORGRP = 'SYSPARTH'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQARTH) DO\n      SET &STORGRP = 'SYSQARTH'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTARTH) DO\n      SET &STORGRP = 'SYSTARTH'\n      EXIT CODE(0)\n      END\n/* DB2 APPLICATION DATABASE                                         */\n   WHEN (&DSN = &SYSPDB2) DO\n      SET &STORGRP = 'SYSPDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQDB2) DO\n      SET &STORGRP = 'SYSQDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTDB2) DO\n      SET &STORGRP = 'SYSTDB2'\n      EXIT CODE(0)\n      END\n/* SYSTEM UTIL,LIKE FDR, FILES TO BE ALLOC ON ANY VOLUME            */\n   WHEN (&DSN = &ALLPOOLS) DO\n      SET &STORGRP='SYSPUSER','SYSTUSER',  +\n                   'SYSPARTH','SYSQARTH','SYSTARTH',  +\n                   'SYSPDB2','SYSQDB2','SYSTDB2',  +\n                   'SYSPSYS','SYSTSYS','SYSMSYS',  +\n                   'SYSPPERF','LIBRARY'\n      EXIT CODE(0)\n      END\n/* ELSE GENERAL POOL                                                */\n   OTHERWISE DO\n      SET &STORGRP = 'SYSPUSER','SYSTUSER'\n      EXIT CODE(0)\n      END\nEND\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRPX": {"ttr": 4110, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95(\\x9f\\x00\\x95(\\x9f\\tD\\x00a\\x00a\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-10-16T00:00:00", "modifydate": "1995-10-16T09:44:00", "lines": 97, "newlines": 97, "modlines": 0, "user": "TECH105"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE                   */\nPROC &STORGRP\nFILTLIST &ALLPOOLS INCLUDE(FDR*.**)\nFILTLIST &HIPERF   INCLUDE('FASTREAD','FASTWRIT')\nFILTLIST &SYSPARTH INCLUDE(PPLAN.**)\nFILTLIST &SYSQARTH INCLUDE(QPLAN.**)\nFILTLIST &SYSTARTH INCLUDE(TPLAN.**,MERC002.**,MERC101.**,MERC606.**)\nFILTLIST &SYSTAPPL INCLUDE(APPL1.**)\nFILTLIST &SYSPDB2  INCLUDE(DB2A.**)\nFILTLIST &SYSQDB2  INCLUDE(DB2X.**)\nFILTLIST &SYSTDB2  INCLUDE(DB2Y.**)\nFILTLIST &SYSPSYS  INCLUDE(SYSP.**)\nFILTLIST &SYSTSYS  INCLUDE(SYST.**)\nFILTLIST &SYSMSYS  INCLUDE(SYSM.**)\nFILTLIST &SYSPOOL  INCLUDE(SYS%.**)\nFILTLIST &DB2V31   INCLUDE(DB2P.**)\nSELECT\n/* TRUE TEMPORARY DATASETS                                          */\n   WHEN (&DSTYPE = 'TEMP') DO\n      SET &STORGRP = 'VIOPOOL','TEMP'\n      EXIT CODE(0)\n      END\n/* HIGH PERF (FASTREAD/FASTWRIT) DATASETS ON SYSP ONLY FOR CICS/SYS */\n   WHEN (&STORCLAS = &HIPERF) DO\n      SET &STORGRP = 'SYSPPERF','SYSPUSER'\n      EXIT CODE(0)\n      END\n/* SYSTEM DATASETS                                                  */\n   WHEN (&DSN = &SYSPSYS) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTSYS) DO\n      SET &STORGRP = 'SYSTSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSMSYS) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSPOOL) DO\n      SET &STORGRP = 'SYSPSYS'\n      EXIT CODE(0)\n      END\n/* MERC PLANNING ARTHUR DATABASE                                    */\n   WHEN (&DSN = &SYSPARTH) DO\n      SET &STORGRP = 'SYSPARTH'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQARTH) DO\n      SET &STORGRP = 'SYSQARTH'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTARTH) DO\n      SET &STORGRP = 'SYSTARTH'\n      EXIT CODE(0)\n      END\n/* DB2 APPLICATION DATABASE                                         */\n   WHEN (&DSN = &SYSPDB2) DO\n      SET &STORGRP = 'SYSPDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSQDB2) DO\n      SET &STORGRP = 'SYSQDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTDB2) DO\n      SET &STORGRP = 'SYSTDB2'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &SYSTAPPL) DO\n      SET &STORGRP = 'SYSTAPPL'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &DB2V31) DO\n      SET &STORGRP = 'DB2V31'\n      EXIT CODE(0)\n      END\n/* SYSTEM UTIL,LIKE FDR, FILES TO BE ALLOC ON ANY VOLUME            */\n   WHEN (&DSN = &ALLPOOLS) DO\n      SET &STORGRP='SYSPUSER','USER',  +\n                   'SYSPARTH','SYSQARTH','SYSTARTH',  +\n                   'SYSPDB2','SYSQDB2','SYSTDB2',  +\n                   'SYSPSYS','SYSTSYS','SYSMSYS',  +\n                   'SYSPPERF','SYSTAPPL','DB2V31'\n      EXIT CODE(0)\n      END\n/* ELSE GENERAL POOL                                                */\n   OTHERWISE DO\n      IF &USER = 'TECH105' THEN\n         SET &STORGRP = 'USER','SYSPUSER'\n         ELSE\n      SET &STORGRP = 'USER'\n      EXIT CODE(0)\n      END\nEND\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TIMEOUT": {"ttr": 4113, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x17o\\x00\\x91\\x17\\x7f\\x12\\x14\\x00\\x8e\\x00\\x8d\\x00\\x05\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-06-25T00:00:00", "modifydate": "1991-06-26T12:14:00", "lines": 142, "newlines": 141, "modlines": 5, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nTIM      TITLE 'DYNAMIC TIME=1440'\nTIMEOUT  CSECT , /* TIMEOUT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nTIMEOUT  AMODE 24\nTIMEOUT  RMODE 24\n         SAVE  (14,12),,TIMEOUT*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING TIMEOUT,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING TIMEWMAP,RD\n         MODESET KEY=ZERO\n         USING PSA,R0\n         L     R4,PSAAOLD CURRENT ASCB\n         DROP  R0\n         USING ASCB,R4\n         L     R6,ASCBFW1 COMAPRE/SWAP LABEL\nCSLOOP   LR    R7,R6 CS\n         TM    ASCBRCTF,ASCBTOFF TIMING STATUS NOW\n         BZ    NOTCHEK NOT TIME=1440 NOW; ELSE TIME=1440 NOW\n         N     R7,=A(X'FFFFFEFF') ASCBTOFF OFF\n         B     PERFCS\nNOTCHEK  O     R7,=A(X'00000100') ASCBTOFF ON\nPERFCS   CS    R6,R7,ASCBFW1 SET/RESET ASCBTOFF\n         BNZ   CSLOOP TRY AGAIN\n         MODESET KEY=NZERO\n         TM    ASCBRCTF,ASCBTOFF TIMING STATUS NOW\n         BZ    TELLN144 NO\n         DROP  R4\n         LM    R0,R1,=A(L'ONMSG,ONMSG)\n         B     SAY\nTELLN144 LM    R0,R1,=A(L'OFFMSG,OFFMSG)\nSAY      TPUT  (1),(0)\n         LTR   R9,RF\n         L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\n         LTORG\nONMSG    DC    C'Time=1440 in effect.'\nOFFMSG   DC    C'Wait state timing in effect.'\nTIMEWMAP DSECT\nSAVEAREA DC    18F'0'\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IHAPSA\n         IHAASCB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(TIMEOUT),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "VMFCLEAR": {"ttr": 4356, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x11?\\x00\\x91\\x11?\\x12\\x03\\x00w\\x00p\\x00\\x07\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-04-23T00:00:00", "modifydate": "1991-04-23T12:03:00", "lines": 119, "newlines": 112, "modlines": 7, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nCLR      TITLE 'VMFCLR SERVICES'\nVMFCLEAR CSECT , /* VMFCLEAR*/\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nVMFCLEAR AMODE 24\nVMFCLEAR RMODE 24\n         SAVE  (14,12),,VMFCLEAR*&SYSDATE*&SYSTIME\n         LR    RC,RF /*ADDRESSABILITY*/\n         USING VMFCLEAR,RC\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         L     R0,=A(DWORDS)\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING CLRWMAP,RD\n         LA    R3,DTPUTL PTR TO LIST FORM\n         MVC   K0(TPUTLL,R3),TPUTL BUILD RENT LIST FORM\n         STFSMODE ON,INITIAL=YES\n         TPUT  BUFFER,K3,MF=(E,(R3))\n         LR    R9,RF SAVERC\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         L     R0,=A(DWORDS)\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nTPUTL    TPUT  ,,FULLSCR,NOWAIT,MF=L\nTPUTLL   EQU   *-TPUTL\nBUFFER   DC    X'27F5C3' ESCAPE,ERASE/WRITE,RESET\n         LTORG\nCLRWMAP  DSECT\nSAVEAREA DC    18F'0'\nDTPUTL   TPUT  ,,FULLSCR,NOWAIT,MF=L\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(VMFCLEAR),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WDUMPSRC": {"ttr": 4359, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\x00\\x00\\x93\\x00\\x7f\\x00\\x93\\t\\x7f\\x19\\x00\\x02\\x14\\x00n\\x01\\xab\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1993-01-07T00:00:00", "modifydate": "1993-04-07T19:00:00", "lines": 532, "newlines": 110, "modlines": 427, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nDMP      TITLE 'Dump monitor'\nWDUMP    CSECT , /* WDUMP */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK26      EQU   26\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nWDUMP    AMODE 24\nWDUMP    RMODE 24\n         SAVE  (14,12),,WDUMP*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING WDUMP,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         LA    RD,SAVEAREA+K4\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         STFSMODE ON,INITIAL=YES\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKUCAT CLC   CAXCNAM(K44),=CL44'SYS1.UCATABR.CLUSTER'\n         BE    LOCUCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKUCAT /* Loop */\nLOCUCAT  MVC   UCATACB,CAXACB /* Save user catalog ACB ptr */\n         DROP  R4\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,UCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */\n         LA    R0,K512      /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\nBIGLOOP  MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKDUMP.V' /*scan    */\n         MVI   CTGTYPE,C'A'    /* Nvsam code */\n         LA    R8,BUFFER+K3\nCATSCANA LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CAEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(K44),K0(R7)  /* Als for cat scan;up key*/\n         CLC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKDUMP.V' /*scan    */\n         BNE   CAEND end loop\n         MVC   K3(K6,R8),CTGENTP+K26 volser\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+K44-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+K44-K1\n         LA    R4,RESPOWNR /* Map ownerid response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVI   K2(R8),C'5' aqua\n         CLI   K0(R7),C'N'\n         BE    NEXT\n         MVI   K2(R8),C'6' yellow\n         CLI   K0(R7),C'I'\n         BE    NEXT\n         MVI   K2(R8),C'4' green\n         CLI   K0(R7),C'C'\n         BE    NEXT\n         MVI   K2(R8),C'2' failed\nNEXT     LA    R8,K11(,R8) next\n         DROP  R4\n         B     CATSCANA loop\nCAEND    EQU   * *\n         TIME  DEC\n         ST    R0,TIMEWORK\n         UNPK  WORK(K7),TIMEWORK(K4)\n         MVC   TIME+K0(K2),WORK+K0\n         MVC   TIME+K3(K2),WORK+K2\n         MVC   TIME+K6(K2),WORK+K4\n         TPUT  BUFFER,BUFFERL,FULLSCR\n         STIMER WAIT,DINTVL=DINTVL sleep user spec time\n         TGET  DUMMYIN,K3,NOWAIT\n         CLM   RF,K1,=AL1(K4) okay\n         BNE   MAINEXIT\n*        B     BIGLOOP ...\nMAINEXIT L     RD,K4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\n         LTORG\nTIMEWORK DC    D'0'\nWORK     DC    D'0'\nSAVEAREA DC    18F'0'\nDINTVL   DC    C'00003000'\nBUFFER   DC    X'27F5C3'\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F7'\nTIME     DC    C'??:??:??     '\n         DC    X'2842F5',C'(Waiting)       '\n         DC    X'2842F6',C'(Active)        '\n         DC    X'2842F4',C'(Normal end)      '\n         DC    X'2842F2',C'(Abnormal end)'\nBUFFERL  EQU   *-BUFFER\nDUMMYIN  DC    CL3' '\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nOWNERID  DC    CL8'OWNERID'    /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\nUCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\nRESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\nRESPOWNR DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\n         DC    CL256' ' /* Cat serv response area */\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IHAPSA\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGTALL  EQU   X'00'  /* Search all */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WDUMP),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "WRESTSRC": {"ttr": 4612, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x93\\x01?\\x00\\x93\\x13\\x7f\\x14Q\\x023\\x02\\x14\\x00.\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-01-13T00:00:00", "modifydate": "1993-05-17T14:51:00", "lines": 563, "newlines": 532, "modlines": 46, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRST      TITLE 'Rest monitor'\nWREST    CSECT , /* WREST */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK26      EQU   26\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nWREST    AMODE 24\nWREST    RMODE 24\n         SAVE  (14,12),,WREST*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING WREST,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         LA    RD,SAVEAREA+K4\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         STFSMODE ON,INITIAL=YES\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKUCAT CLC   CAXCNAM(K44),=CL44'SYS1.UCATABR.CLUSTER'\n         BE    LOCUCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKUCAT /* Loop */\nLOCUCAT  MVC   UCATACB,CAXACB /* Save user catalog ACB ptr */\n         DROP  R4\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,UCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */\n         LA    R0,K512      /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\nBIGLOOP  MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKREST.V' /*scan    */\n         MVI   CTGTYPE,C'A'    /* Nvsam code */\n         LA    R8,BUFFER+K3\nCATSCANA LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CAEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(K44),K0(R7)  /* Als for cat scan;up key*/\n         CLC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKREST.V' /*scan    */\n         BNE   CAEND end loop\n         MVC   K3(K6,R8),CTGENTP+K26 volser\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+K44-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+K44-K1\n         LA    R4,RESPOWNR /* Map ownerid response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         LA    RF,CBWAIT counter\n         MVI   K2(R8),C'5' aqua\n         CLI   K0(R7),C'N'\n         BE    NEXT\n         LA    RF,CBACT  counter\n         MVI   K2(R8),C'6' yellow\n         CLI   K0(R7),C'I'\n         BE    NEXT\n         LA    RF,CBNOR  counter\n         MVI   K2(R8),C'4' green\n         CLI   K0(R7),C'C'\n         BE    NEXT\n         LA    RF,CBABN  counter\n         MVI   K2(R8),C'2' failed\nNEXT     LA    R8,K11(,R8) next\n         L     R1,K0(,RF) incr counter\n         LA    R1,K1(,R1) +1\n         ST    R1,K0(,RF) ...\n         DROP  R4\n         B     CATSCANA loop\nCAEND    EQU   * *\n         TIME  DEC\n         ST    R0,TIMEWORK\n         UNPK  WORK(K7),TIMEWORK(K4)\n         MVC   TIME+K0(K2),WORK+K0\n         MVC   TIME+K3(K2),WORK+K2\n         MVC   TIME+K6(K2),WORK+K4\n         L     RF,CBWAIT show counter\n         CVD   RF,WORK\n         UNPK  CWAIT+K3(K3),WORK+K6(K2)\n         OI    CWAIT+K5,C'0' ...\n         L     RF,CBACT  show counter\n         CVD   RF,WORK\n         UNPK  CACT+K3(K3),WORK+K6(K2)\n         OI    CACT+K5,C'0' ...\n         L     RF,CBNOR  show counter\n         CVD   RF,WORK\n         UNPK  CNOR+K3(K3),WORK+K6(K2)\n         OI    CNOR+K5,C'0' ...\n         L     RF,CBABN  show counter\n         CVD   RF,WORK\n         UNPK  CABN+K3(K3),WORK+K6(K2)\n         OI    CABN+K5,C'0' ...\n         TPUT  BUFFER,BUFFERL,FULLSCR\n         STIMER WAIT,DINTVL=DINTVL sleep user spec time\n         XC    CBWAIT,CBWAIT\n         XC    CBACT,CBACT\n         XC    CBNOR,CBNOR\n         XC    CBABN,CBABN\n         TGET  DUMMYIN,K3,NOWAIT\n         CLM   RF,K1,=AL1(K4) okay\n         BNE   MAINEXIT\n         B     BIGLOOP ...\nMAINEXIT L     RD,K4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\n         LTORG\nTIMEWORK DC    D'0'\nWORK     DC    D'0'\nSAVEAREA DC    18F'0'\nDINTVL   DC    C'00020000'\nBUFFER   DC    X'27F5C3'\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F7'\nTIME     DC    C'??:??:??   '\nCWAIT    DC    X'2842F5',C'XXX (Waiting)   '\nCACT     DC    X'2842F6',C'XXX (Active)    '\nCNOR     DC    X'2842F4',C'XXX (Normal end)  '\nCABN     DC    X'2842F2',C'XXX (Abnormal end)'\nBUFFERL  EQU   *-BUFFER\nDUMMYIN  DC    CL3' '\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nOWNERID  DC    CL8'OWNERID'    /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\nUCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nCBWAIT   DC    F'0' counter\nCBACT    DC    F'0' counter\nCBNOR    DC    F'0' counter\nCBABN    DC    F'0' counter\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\nRESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\nRESPOWNR DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\n         DC    CL256' ' /* Cat serv response area */\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IHAPSA\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGTALL  EQU   X'00'  /* Search all */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WREST),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XCOMCOMM": {"ttr": 4868, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x93\\x14_\\x00\\x93\\x14o\\x14W\\x00\\xd9\\x01\\x17\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1993-05-25T00:00:00", "modifydate": "1993-05-26T14:57:00", "lines": 217, "newlines": 279, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nXCM      TITLE 'XCOM SYSA/SYSB NEGOTIATOR'\nXCOMCOMM CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK28      EQU   28\nK29      EQU   29\nK30      EQU   30\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nXCOMCOMM AMODE 24\nXCOMCOMM RMODE 24\n         SAVE  (14,12),,XCOMCOMM*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING XCOMCOMM,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         LTR   R1,R1 TEST PARAM\n         BZ    FPARAM1\n         TM    K0(R1),X'80' LAST PARAM\n         BNO   FPARAM2\n         L     R3,K0(,R1) PASSED PARAM PTR\n         LH    R4,K0(,R3) LEN OF PARM\n         LTR   R4,R4\n         BZ    FPARAM3\n         CH    R4,=H'9' MIN LEN = XCO?APPL/ TRANSMITTING XCOM\n         BL    FPARAM4\n         CLC   =C'XCO',K2(R3)\n         BNE   FPARAM5\n         CLC   =C'APPL',K6(R3)\n         BNE   FPARAM6\n         CLI   K10(R3),C'/' MUST BE\n         BNE   FPARAM7\n         SLR   R2,R2\n         TRT   K5(K1,R3),SYSPARM\n         LTR   R5,R2 SAVE TRANSM XCOM SYSNAME\n         BZ    FPARAM8 ERROR\n         STC   R5,XCOMSKEL+K11 PREP STCAPPL PARAM\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         L     RE,K16 CVT\n         ICM   RE,K7,197(RE) CVTSMCA\n         LA    RE,K0(,RE) CLEAR HI\n         MVI   XCOMSKEL+K28,C'M' ACBNAME/JOBACB\n         CLC   =C'SYSA',K16(RE) IS SYSA\n         BE    GOSCHED YES\n         MVI   XCOMSKEL+K28,C'T' ACBNAME/JOBACB\n         CLC   =C'SYSM',K16(RE) IS SYSM\n         BE    GOSCHED YES\n         MVI   XCOMSKEL+K28,C'E' ACBNAME/JOBACB\n         CLC   =C'SYSE',K16(RE) IS SYSE\n         BE    GOSCHED YES\n         MVI   XCOMSKEL+K28,C'B' ACBNAME/JOBACB\n         CLC   =C'SYSB',K16(RE) IS SYSB\n         BNE   FSMCA  UNKNOWN SYSTEM\nGOSCHED  LA    R1,L'XCOMSKEL GET LEN OF OUR PARAM\n         STH   R1,XCOMPRM SAVE OUR LEN\n         MVC   XCOMPRML(L'XCOMSKEL),XCOMSKEL MOVE BASE PARAM\n         SH    R4,=H'9' OFF OUR FIXED PARM\n         LA    R3,K11(,R3) PTR TO USER PARM\n         LTR   R4,R4 ANY USER PARM\n         BNP   GOXCOM PROCESS\n         LA    R1,K1(R4,R1) NEW COMBINED LEN INCL COMMA WE ADD\n         CH    R1,=H'100' MAX PARM LEN\n         BH    FPARAM9 ERROR\n         STH   R1,XCOMPRM SAVE OUR LEN\n         MVI   XCOMPRML+K29,C',' EXTEND OUR PARM\n         LA    R5,XCOMPRML+K30 POSITION FOR USER PARM\n         BCTR  R4,K0 FOR EXEC\n         EX    R4,MOVEUPRM MOVE USER PARM\nGOXCOM   LA    R1,=A(XCOMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LR    R9,RF /* RC */\n         DELETE EPLOC=XCOMMEP\nMAINEXIT LR    RF,R9 RESTORE RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nMOVEUPRM MVC   K0(*-*,R5),K0(R3) MOVE USER PARAM\nFSMCA    LA    R9,K32 /* SMCA   FAILURE */\n         B     MAINEXIT\nFPARAM1  LA    R9,K36 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM2  LA    R9,K40 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM3  LA    R9,K44 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM4  LA    R9,K48 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM5  LA    R9,K52 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM6  LA    R9,K56 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM7  LA    R9,K60 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM8  LA    R9,K64 /* PARM   FAILURE */\n         B     MAINEXIT\nFPARAM9  LA    R9,K68 /* PARM   FAILURE */\n         B     MAINEXIT\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMPRM  DC    AL2(*-*)\nXCOMPRML DC    100C' ' BUILD XCOMJOB EXEC PARAM HERE\nXCOMSKEL DC    C'STCAPPL=XCO?APPL,ACBNAME=XCO?'\nSYSPARM  DC    256X'00'\n         ORG   SYSPARM+C'T'\n         DC    C'T'\n         ORG   SYSPARM+C'B'\n         DC    C'B'\n         ORG   SYSPARM+C'M'\n         DC    C'M'\n         ORG   SYSPARM+C'E'\n         DC    C'E'\n         ORG\n         LTORG\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(XCOMCOMM),DISP=SHR,\n//* UNIT=,SPACE=\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(XCOMCOMM),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XDSLSRC": {"ttr": 4873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x92(?\\x00\\x92)\\x0f\\x16(\\x02\\x8f\\x02\\x0e\\x01\\x88\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1992-10-09T00:00:00", "modifydate": "1992-10-16T16:28:00", "lines": 655, "newlines": 526, "modlines": 392, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//         DD DSN=SYSM.AMACLIB,DISP=SHR\n//C.SYSIN  DD *\nDsserv   TITLE 'Extended Dataset Services TSO/E Command'\nDSSERV   CSECT , /* Dataset Services */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK45      EQU   45\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK59      EQU   59\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK100     EQU   100\nK128     EQU   128\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nDSSERV   AMODE 31\nDSSERV   RMODE 24\n         SAVE  (14,12),,DSSERV*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* Cppl */\n         USING CPPL,R3\n         DROP  R3\n         L     R3,K0(,R3) /* parm */\n         LA    R3,K0(,R3) /* strip */\n         LR    RA,RF /* Addressability */\n         USING DSSERV,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0),LOC=BELOW\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING DSRVWMAP,RD\n         MVC   QUALL(K2),K0(R3) ...parmlen\n         MVC   QUAL2(K8),=CL8' '\n         LH    R4,K0(,R3) len\n         BCTR  R4,K0 ...\n         EX    R4,MOVEQUAL\n         MVC   VDSL(K5),=C'SYS%.'\n         MVC   VDSL+K0(K8),QUAL2 panel heading\n         MVC   ISPLINKL(CALLISTL),CALLIST /* Reentrant call list */\n         CALL  ISPQRY , /* Verify ISPF active */\n         LTR   RF,RF ...\n         BNZ   ISPINACT /* ISPF inactive */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,TABLCOLS,VARIABLE,VFORMAT,VLENGTH,LIST)X\n               ,MF=(E,(1)),VL , /* Function variable pool table cols */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,SYSNAMES,SYSVARS,ZFORMAT,ZLENGTH,LIST),X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,PNAMES,PVARS,PFORMAT,PLENGTH,LIST),    X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         MVC   TABLNAME(K8),TABLNAMC setup\nTBCRETRY LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBCREATE,TABLNAME,NULL,TABLCOLS,NOWRITE),      X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF\n         BZ    TBCOK\n         CLM   RF,K1,=AL1(K8) /* Rc = 8 duplic tabname */\n         BNE   FTBCREAT /* Table creation failed */\n         SLR   RF,RF\n         IC    RF,TABLNAME+K7 incr tablename\n         LA    RF,K1(,RF)\n         STC   RF,TABLNAME+K7 ...\n         B     TBCRETRY\nTBCOK    LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBSORT,TABLNAME,SORTLIST),   /* Sort table */  X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF ...\n         BNZ   FTBSORT /* Table sort failed */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VREPLACE,PNAMES,PLENGTH,PVARS),                X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R8,CVTSMCA /* Ptr to SMCA */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING SMCABASE,R8\n         MVC   CATS+K4(L'SMCASID),SMCASID /* Save system ID */\n         DROP  R8\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKMCAT TM    CAXFLGS,CAXMCT /* Master catalog entry */\n         BO    LOCMCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKMCAT /* Loop */\nLOCMCAT  MVC   MCATDSN(L'MCATDSN),CAXCNAM /* Save catalog name */\n         MVC   CATS+K8(L'MCATDSN),CAXCNAM /* Save catalog name */\n         MVC   MCATACB,CAXACB /* Save master catalog ACB ptr */\n         MVC   CATS(K4),CAXACB /* Save master catalog ACB ptr */\n         LA    R8,CATS+K52 /* Ptr savearea for catnames */\n         XC    K0(K8,R8),K0(R8) /* init */\n         L     R4,CAXUCB /* Map UCB of mcat volume */\n         DROP  R4\n         USING UCBOB,R4\n         MVC   MCATVSER(L'MCATVSER),UCBVOLI /* Save DASD volume ser */\n         DROP  R4\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,MCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */\n         LA    R0,K512      /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\nCUEND    MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVC   CTGENTP(K4),=C'SYSA' /*Beginscan at first SYS% alias */\n         MVI   CTGTYPE,CTGTANM /* Alias code */\nCATSCANX LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CXEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* Als for cat scan;up key*/\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+L'MCATDSN-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+L'MCATDSN-K1\n         CLC   =C'SYSZ',K0(R7) /* Proper alias format */\n         BL    CXEND    /* Terminate scan */\n         CLC   =C'SYS',K0(R7) /* Proper alias format */\n         BNE   CATSCANX /* Ignore */\n         CLI   K3(R7),C' ' ...\n         BE    CATSCANX /* Ignore */\n         CLI   K4(R7),C' ' ...\n         BNE   CATSCANX /* Ignore */\n         ICM   R0,K15,K0(R7) /* Save alias name */\n         LA    R4,RESPNMDS /* Map true name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         CLI   K0(R7),CTGTUCAT /* Ucat code */\n         BNE   CATSCANX /* Skip over non-ucat alias assoc */\n         STCM  R0,K15,K4(R8) /* Store alias name */\n         MVC   K8(K44,R8),K1(R7) /* Save cat name */\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKUCAT CLC   CAXCNAM(L'MCATDSN),K8(R8) /* UCAT */\n         BE    LOCUCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKUCAT /* Loop */\n         B     CATSCANX /* Not open catalog */\nLOCUCAT  MVC   K0(K4,R8),CAXACB /* Save user catalog ACB ptr */\n         LA    R8,K52(,R8) /* Next */\n         XC    K0(K8,R8),K0(R8) /* init */\n         B     CATSCANX /* Next   */\n         DROP  R4\nCXEND    EQU   * *\n         LA    R8,CATS /* Loop thru all cats */\nCATLOC   ST    R8,CTGCAT /* Tell locate */\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVC   CTGENTP(K4),K4(R8)   /* Begin scan */\n         MVI   CTGENTP+K4,C'.' /* second qual */\n         MVC   CTGENTP+K5(K8),QUAL2\n         MVI   CTGTYPE,CTGTALL  /* Generic    */\nCATSCANA LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    ARC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CAEND ...\n         USING CTGFL,R4\nARC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         CLC   K4(K4,R8),K0(R7) /* Valid name */\n         BNE   CAEND ...\n         CLI   K4(R7),C'.' /* qual */\n         BNE   CAEND ...\n         LH    RF,QUALL compare\n         BCTR  RF,K0 ...\n         EX    RF,CLCQUAL\n         BNE   CAEND ...\n         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* Als for cat scan;up key*/\n         MVC   SCTGENTP(L'MCATDSN),K0(R7)  /*Als for cat scan;up key*/\n         CLC   =C'SYS1',K4(R8) is this a SYS1 scan\n         BNE   NOALTNM no\n         MVC   SCTGENTP(K4),SAVEHQUL alter name to SYS% name\nNOALTNM  EQU   * *\n         MVC   VVOLSER(K6),=CL6' ' volser\n         MVC   VNAME(L'MCATDSN),SCTGENTP\n         MVC   VMSG(K8),=CL8' '\n         LA    R4,RESPENTT /* Map response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         SLR   R2,R2 index by entry type\n         TRT   K0(K1,R7),ENTLIST-C'A'\n         SLL   R2,2 *4\n         B     *+K4(R2)   ...\n         B     ENINV\n         B     ENA\n         B     ENB\n         B     ENC\n         B     END\n         B     ENF\n         B     ENG\n         B     ENI\n         B     ENM\n         B     ENP\n         B     ENR\n         B     ENU\n         B     ENV\n         B     ENX\n         B     ENY\nENINV    MVC   VTYPE(K8),=CL8' ' type\n         B     PVSER continue\nENA      MVC   VTYPE(K8),=CL8'Non-VSAM' type\n         B     PVSER continue\nENB      MVC   VTYPE(K8),=CL8'GDG-base' type\n         B     PTADD continue\nENC      MVC   VTYPE(K8),=CL8'Cluster' type\n         B     PTADD continue\nEND      MVC   VTYPE(K8),=CL8'D-Compnt' type\n         B     PVSER continue\nENF      MVC   VTYPE(K8),=CL8'Free' type\n         B     PVSER continue\nENG      MVC   VTYPE(K8),=CL8'Altindex' type\n         B     PTADD continue\nENI      MVC   VTYPE(K8),=CL8'I-Compnt' type\n         B     PVSER continue\nENM      MVC   VTYPE(K8),=CL8'MastrCat' type\n         B     PVSER continue\nENP      MVC   VTYPE(K8),=CL8'Pagespac' type\n         B     PVSER continue\nENR      MVC   VTYPE(K8),=CL8'Path' type\n         B     PTADD continue\nENU      MVC   VTYPE(K8),=CL8'UserCat' type\n         B     PVSER continue\nENV      MVC   VTYPE(K8),=CL8'Volume' type\n         B     PVSER continue\nENX      MVC   VTYPE(K8),=CL8'Alias' type\n         B     PTADD\nENY      MVC   VTYPE(K8),=CL8'Upgrade' type\n*VSER    LA    R4,RESPNMDS /* Map response */\n*        LM    R6,R7,CTGFLDAT /* Acquire len and address */\n*        MVC   VVOLSER(K6),K6(R7) volser\nPVSER    MVC   VVOLSER(K6),K7(R7) volser\nPTADD    LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),           X\n               MF=(E,(1)),VL ,\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+L'MCATDSN-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+L'MCATDSN-K1\n         B     CATSCANA\n         DROP  R4\nCAEND    EQU   * *\n         CLC   =C'MCAT',K13(R8) /* was this mcat */\n         BNE   CACNXT no\n         MVC   SAVEHQUL(K4),K4(R8) save\n         MVC   K4(K4,R8),=C'SYS1' next scan\n         MVC   K13(K4,R8),=C'SYS1' next scan will be done\n         B     CATLOC\nCACNXT   LA    R8,K52(,R8) /* Next */\n         CLC   =XL8'00',K0(R8) /* end */\n         BNE   CATLOC /* continue */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBTOP,TABLNAME),                               X\n               MF=(E,(1)),VL ,\n         LTR   RF,RF ...\n         BNZ   FTBTOP /* Table top post failed */\n         MVC   SMSG,=CL8' '  reset\nREDISPLY LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBDISPL,TABLNAME,PANELID,SMSG),                X\n               MF=(E,(1)),VL ,\n         LR    R9,RF saverc\n         MVC   SMSG,=CL8' '  reset\n         C     R9,=F'8' exit\n         BNL   DISPRET\nPROCESS  ICM   R4,K15,UTDSELS /* How many rows selected */\n         BZ    REDISPLY /* None */\n         CLI   VCMD,C'E'\n         BE    PED\nPBR      CLC   VTYPE(K8),=CL8'Non-VSAM' type\n         BNE   INVALIDT\n         MVI   QVNAME,C''''\n         MVC   QVNAME+K1(K44),VNAME\n         MVI   QVNAME+K45,C' '\n         LA    R1,QVNAME+K45 backscan\nPBR1     CLI   K0(R1),C' '\n         BNE   PBR2\n         BCT   R1,PBR1\nPBR2     MVI   K1(R1),C''''\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(CONTROL,DISPLAY,SAVE),                         X\n               MF=(E,(1)),VL , /* Function variable pool table cols */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(BROWSE,QVNAME),                                X\n               MF=(E,(1)),VL , /* Function variable pool table cols */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(CONTROL,DISPLAY,RESTORE),                      X\n               MF=(E,(1)),VL , /* Function variable pool table cols */\n         MVC   VMSG(K8),=CL8'Browsed'\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBPUT,TABLNAME),                               X\n               MF=(E,(1)),VL ,\n         B     PROCNXTR\nPED      CLC   VTYPE(K8),=CL8'Non-VSAM' type\n         BNE   INVALIDT\n         MVI   QVNAME,C''''\n         MVC   QVNAME+K1(K44),VNAME\n         MVI   QVNAME+K45,C' '\n         LA    R1,QVNAME+K45 backscan\nPED1     CLI   K0(R1),C' '\n         BNE   PED2\n         BCT   R1,PED1\nPED2     MVI   K1(R1),C''''\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(CONTROL,DISPLAY,SAVE),                         X\n               MF=(E,(1)),VL , /* Function variable pool table cols */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(EDIT,QVNAME),                                  X\n               MF=(E,(1)),VL , /* Function variable pool table cols */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(CONTROL,DISPLAY,RESTORE),                      X\n               MF=(E,(1)),VL , /* Function variable pool table cols */\n         MVC   VMSG(K8),=CL8'Edited'\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBPUT,TABLNAME),                               X\n               MF=(E,(1)),VL ,\nPROCNXTR ICM   R4,K15,UTDSELS /* How many rows selected */\n         BZ    REDISPLY /* None */\n         C     R4,=F'1'\n         BE    REDISPLY ...\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBDISPL,TABLNAME),                             X\n               MF=(E,(1)),VL ,\n         LR    R9,RF saverc\n         C     R9,=F'8' exit\n         BNL   DISPRET\n         B     PROCESS /* Loop processing all selected rows */\nINVALIDT MVC   SMSG(K8),=CL8'XDSL001'\n         B     REDISPLY\nDISPRET  LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(TBCLOSE,TABLNAME),   /* Close open table */    X\n               MF=(E,(1)),VL ,\n         SLR   R9,R9 rc\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nISPINACT LA    R9,K20\n         B     MAINEXIT\nFVDEF    LA    R9,K24\n         B     MAINEXIT\nFTBCREAT LA    R9,K28\n         B     MAINEXIT\nFTBSORT  LA    R9,K32\n         B     MAINEXIT\nFTBADD   LA    R9,K36\n         B     MAINEXIT\nFTBTOP   LA    R9,K40\n         B     MAINEXIT\nFTBDISPL LA    R9,K44\n         B     MAINEXIT\nMOVEQUAL MVC   QUAL2(*-*),K2(R3) ...parm\nCLCQUAL  CLC   K5(*-*,R7),QUAL2\n         DROP  R9\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nENTLIST  DC X'01020304000506000700000000000000'\n         DC X'00000008000009000A0000000000000000'\n         DC X'00000B0C000D0E00'\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nCATVOL   DC    CL8'CATVOL'     /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\nVLENGTH  DC    A(K44,K8,K6,K8) /* Variable lens */\nZLENGTH  DC    A(K8,K3),(K9)A(K4) /* Variable lens */\nPLENGTH  DC    A(K8,K13) /* Variable lens */\nCALLIST  CALL  ,(,,,,,,,,,,,,,,),MF=L,VL\nCALLISTL EQU   *-CALLIST\nVFORMAT  DC    (K4)CL8'CHAR' /* All charac formats */\nPFORMAT  DC    (K2)CL8'CHAR' /* All charac formats */\nZFORMAT  DC    (K2)CL8'CHAR',(K9)CL8'FIXED' /* formats */\nMULTROWS DC    A(K60) /* Assume TBADD of 60 rows at a time */\nCONTROL  DC    CL8'CONTROL' /* ISPF service */\nDISPLAY  DC    CL8'DISPLAY' /* ISPF service */\nRESTORE  DC    CL8'RESTORE' /* ISPF service */\nSAVE     DC    CL8'SAVE' /* ISPF service */\nTBCREATE DC    CL8'TBCREATE' /* ISPF service */\nTBSORT   DC    CL8'TBSORT' /* ISPF service */\nTBADD    DC    CL8'TBADD' /* ISPF service */\nTBPUT    DC    CL8'TBPUT' /* ISPF service */\nSHR      DC    CL8'SHR'   /* ISPF service */\nTBTOP    DC    CL8'TBTOP' /* ISPF service */\nVDEFINE  DC    CL8'VDEFINE' /* ISPF service */\nVRESET   DC    CL8'VRESET' /* ISPF service */\nLMINIT   DC    CL8'LMINIT' /* ISPF service */\nBROWSE   DC    CL8'BROWSE' /* ISPF service */\nVPUT     DC    CL8'VPUT' /* ISPF service */\nEDIT     DC    CL8'EDIT' /* ISPF service */\nVREPLACE DC    CL8'VREPLACE' /* ISPF service */\nTBDISPL  DC    CL8'TBDISPL' /* ISPF service */\nTBCLOSE  DC    CL8'TBCLOSE' /* ISPF service */\nTABLNAMC DC    CL8'DSSERVT0' /* ISPF tablename */\nPANELID  DC    CL8'DSSERVP' /* ISPF panelname */\nTABLCOLS DC    C'(NAME,MESSAGE,VOLSER,TYPE)'\nPNAMES   DC    C'(CMD,DSL)'\nSYSNAMES DC    C'(ZTDRET,ZTDADD,ZTDSCRP,ZTDSRID,ZTDAMT,ZTDSIZE,ZTDLTOP,X\n               ZTDLROWS,ZTDROWS,ZTDSELS,ZTDTOP)'\nSORTLIST DC    C'(NAME,C,A)'\nNOWRITE  DC    CL8'NOWRITE' /* Temporary ISPF table */\nORDER    DC    CL8'ORDER' /* Sort ISPF table */\nREPLACE  DC    CL8'REPLACE' /* Replace existing table */\nLIST     DC    CL8'LIST' /* VDEFINE list */\nNULL     DC    C' ' /* Dummy positional call parameter */\n         LTORG\nDSRVWMAP DSECT\nSAVEAREA DC    (K18)A(K0)\nTABLNAME DC    CL8'DSSERVT0' /* ISPF tablename */\nSMSG     DC    CL8' '  /* message */\nQUAL2    DC    CL8' '  /* passed qualifier */\nSAVEHQUL DC    CL4' ' save high qual\nCATS     DC    (K16)CL52' ' /* Map acb/alias/ catnames */\nMCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nMCATDSN  DC    CL44' ' /* Master catalog dsname */\nMCATVSER DC    CL6' ' /* Master catalog volume serial */\nQUALL    DC    H'0' /* parm len */\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\nRESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nSCTGENTP DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\n         DC    CL256' ' /* Cat serv response area */\nISPLINKL CALL  ,(,,,,,,,,,,,,,,),MF=L,VL\nQVNAME   DC    CL47' '\n*********************** Contiguous storage required *******************\nALIGN    DC    0D'0' /* Alignment for variable pool */\nPVARS    EQU   * * /* Begin ISPF function variables */\nVCMD     DC    CL8' '  /* Name col */\nVDSL     DC    CL13' '  /* DSL  col */\nVARIABLE EQU   * * /* Begin ISPF function variables */\nVNAME    DC    CL44' '  /* Name col */\nVMSG     DC    CL8' '  /* Msg  col */\nVVOLSER  DC    CL6' '  /* Ser  col */\nVTYPE    DC    CL8' '  /* Typ  col */\nSYSVARS  EQU   * * /* Begin ISPF function variables */\nUTDRET   DC    CL8' ' /* ISPF system variables */\nUTDADD   DC    CL3' '\nUTDSCRP  DC    F'0'\nUTDSRID  DC    F'0'\nUTDAMT   DC    F'0'\nUTDSIZE  DC    F'0'\nUTDLTOP  DC    F'0'\nUTDLROWS DC    F'0'\nUTDROWS  DC    F'0'\nUTDSELS  DC    F'0'\nUTDTOP   DC    F'0'\nDWORDS   EQU   ((((*-SAVEAREA)+K7)/K8)*K8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         DSECT\n         IEFUCBOB\n         IHAPSA\n         CVT   DSECT=YES\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGTALL  EQU   X'00'  /* Search all */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         IEESMCA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(XDSL),DISP=SHR,\n// UNIT=,SPACE=\n//L.SYSLIB DD DSN=SYS1.ISPF.V3R3M0.ISPLOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XLIBALLD": {"ttr": 5128, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x19\\x9f\\x00\\x94\\x19\\x9f\\x17&\\x00\\xc2\\x00\\xb4\\x00\\x15\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-07-18T00:00:00", "modifydate": "1994-07-18T17:26:00", "lines": 194, "newlines": 180, "modlines": 21, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nLIBALLOC TITLE 'ALLOCATE LIBMASTER AS PS FILE'\nLIBALLOC CSECT , /* LIBALLOC */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nLIBALLOC AMODE 24\nLIBALLOC RMODE 24\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SAVE  (14,12),,LIBALLOC*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING LIBALLOC,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         LM    R4,R5,K0(R2) A(DDNAME) L(DDNAME)\n         CL    R4,=A(X'FFFFFFFF') PARMLIST END\n         BE    RC4  YES\n         CL    R5,=A(X'FFFFFFFF') PARMLIST END\n         BE    RC4  YES\n         C     R5,=A(K8) MAX DDNAME LEN\n         BH    RC8\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         STCM  R5,K3,PDDN+K4 DDN LEN\n         BCTR  R5,K0 PER EX\n         EX    R5,MOVEDDN\n         LM    R4,R6,K8(R2) A(DSN) L(DSN) A(MEMBER) L(MEM) XFF\n         CL    R4,=A(X'FFFFFFFF') PARMLIST END\n         BE    RC4  YES\n         CL    R6,=A(X'FFFFFFFF') PARMLIST END\n         BE    ONLYDSN YES\n         LM    R7,R8,K20(R2) A(DSN) L(DSN) A(MEMBER) L(MEM) XFF\n         CL    R8,=A(X'FFFFFFFF') PARMLIST END\n         BE    FMEM YES\n         B     RC4  YES\nONLYDSN  C     R5,=A(K44) MAX DSN LEN\n         BH    RC8\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         STCM  R5,K3,PDSN+K4 DSN LEN\n         BCTR  R5,K0 PER EX\n         EX    R5,MOVEDSN\n         OI    DSNONLY,X80 SHORTEN SVC 99 LIST\n         B     DYNAM ...\nFMEM     C     R5,=A(K44) MAX DSN LEN\n         BH    RC8\n         C     R7,=A(K8) MAX MEM NAME LEN\n         BH    RC12\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         LTR   R7,R7 NULLS\n         BZ    RC20\n         STCM  R5,K3,PDSN+K4 DSN LEN\n         STCM  R7,K3,PMEMB+K4 MEMBER NAME LEN\n         BCTR  R5,K0 PER EX\n         BCTR  R7,K0 PER EX\n         EX    R5,MOVEDSN\n         EX    R7,MOVEMEM\nDYNAM    LA    R1,DYNPARM SVC 99\n         SVC   99\n         LTR   R9,RF\n         BNZ   RC24 ERROR\n         USING EVALBLOCK,R3\n         LA    R0,K8 DDNAME LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K8),PDDN+K6\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nRC24     LA    R9,K4(,R9)\nRC20     LA    R9,K4(,R9)\nRC16     LA    R9,K4(,R9)\nRC12     LA    R9,K4(,R9)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\nMOVEDSN  MVC   PDSNN(*-*),K0(R4)\nMOVEDDN  MVC   PDDN+K6(*-*),K0(R4)\nMOVEMEM  MVC   PMEMBN(*-*),K0(R6)\nDYNPARM  DC    0F'0',X'80',AL3(S99RBP)\nS99RBP   DC    X'14010000'\n         DC    X'00000000'\n         DC    A(S99TXTP)\n         DC    8X'00'\nS99TXTP  DC    A(PDSN)\n         DC    A(PDISP)\n         DC    A(PUNAL)\n         DC    A(PSUBS)\nDSNONLY  DC    A(PDDN)\n         DC    X'80',AL3(PMEMB)\nPDDN     DC    X'000100010008',C'XXXXXXXX'\nPDSN     DC    X'00020001',AL2(*-*)\nPDSNN    DC    CL44'  '\nPDISP    DC    X'00040001000108'\nPUNAL    DC    X'001C0000' FREE=CLOSE\nPSUBS    DC    X'005F00010003',C'LAM'\nPMEMB    DC    X'00030001',AL2(*-*)\nPMEMBN   DC    CL8' '\n         LTORG\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(XLIBALLD),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XLIBALLS": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x91\\x15\\x7f\\x00\\x91\\x17\\x1f\\x14@\\x00\\xb4\\x00\\xbb\\x00\\x1e\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1991-06-06T00:00:00", "modifydate": "1991-06-20T14:40:00", "lines": 180, "newlines": 187, "modlines": 30, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nLIBALLOC TITLE 'ALLOCATE LIBMASTER AS PS FILE'\nLIBALLOC CSECT , /* LIBALLOC */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nLIBALLOC AMODE 24\nLIBALLOC RMODE 24\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SAVE  (14,12),,LIBALLOC*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING LIBALLOC,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         LM    R4,R8,K0(R2) A(DSN) L(DSN) A(MEMBER) L(MEM) XFF\n         CL    R4,=A(X'FFFFFFFF') PARMLIST END\n         BE    RC4  YES\n         CL    R6,=A(X'FFFFFFFF') PARMLIST END\n         BE    ONLYDSN YES\n         CL    R8,=A(X'FFFFFFFF') PARMLIST END\n         BE    FMEM YES\n         B     RC4  YES\nONLYDSN  C     R5,=A(K44) MAX DSN LEN\n         BH    RC8\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         STCM  R5,K3,PDSN+K4 DSN LEN\n         BCTR  R5,K0 PER EX\n         EX    R5,MOVEDSN\n         OI    DSNONLY,X80 SHORTEN SVC 99 LIST\n         B     DYNAM ...\nFMEM     C     R5,=A(K44) MAX DSN LEN\n         BH    RC8\n         C     R7,=A(K8) MAX MEM NAME LEN\n         BH    RC12\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         LTR   R7,R7 NULLS\n         BZ    RC20\n         STCM  R5,K3,PDSN+K4 DSN LEN\n         STCM  R7,K3,PMEMB+K4 MEMBER NAME LEN\n         BCTR  R5,K0 PER EX\n         BCTR  R7,K0 PER EX\n         EX    R5,MOVEDSN\n         EX    R7,MOVEMEM\nDYNAM    LA    R1,DYNPARM SVC 99\n         SVC   99\n         LTR   R9,RF\n         BNZ   RC24 ERROR\n         USING EVALBLOCK,R3\n         LA    R0,K8 DDNAME LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K8),PDDN+K6\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nRC24     LA    R9,K4(,R9)\nRC20     LA    R9,K4(,R9)\nRC16     LA    R9,K4(,R9)\nRC12     LA    R9,K4(,R9)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\nMOVEDSN  MVC   PDSNN(*-*),K0(R4)\nMOVEMEM  MVC   PMEMBN(*-*),K0(R6)\nDYNPARM  DC    X'80',AL3(S99RBP)\nS99RBP   DC    X'14010000'\n         DC    X'00000000'\n         DC    A(S99TXTP)\n         DC    8X'00'\nS99TXTP  DC    A(PDSN)\n         DC    A(PDISP)\n         DC    A(PUNAL)\n         DC    A(PSUBS)\nDSNONLY  DC    A(PDDN)\n         DC    X'80',AL3(PMEMB)\nPDDN     DC    X'005500010008',C'XXXXXXXX'\nPDSN     DC    X'00020001',AL2(*-*)\nPDSNN    DC    CL44'  '\nPDISP    DC    X'00040001000108'\nPUNAL    DC    X'001C0000' FREE=CLOSE\nPSUBS    DC    X'005F00010003',C'LAM'\nPMEMB    DC    X'00030001',AL2(*-*)\nPMEMBN   DC    CL8' '\n         LTORG\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(XLIBALLC),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XLIBMEML": {"ttr": 5381, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x16_\\x00\\x91\\x16_\\x10\\x11\\x00\\x95\\x00\\x95\\x00\\x01\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-06-14T00:00:00", "modifydate": "1991-06-14T10:11:00", "lines": 149, "newlines": 149, "modlines": 1, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nXLIBLOAD TITLE 'MEMBER EXISTS REXX FUNCTION'\nXLIBLOAD CSECT , /* LIBMEMX */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nXLIBLOAD AMODE 24\nXLIBLOAD RMODE 24\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SAVE  (14,12),,XLIBLOAD*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING XLIBLOAD,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         LM    R4,R6,K0(R2) A(MEMBER) L(MEM) XFF\n         CL    R6,=A(X'FFFFFFFF') PARMLIST END\n         BNE   RC4  NO\n         C     R5,=A(K8) MAX MEM NAME LEN\n         BH    RC8\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         BCTR  R5,K0 PER EX\n         EX    R5,MOVEMEM\n         BLDL  0,BLDLLIST\n         LTR   RF,RF ERROR BLDL\n         BNZ   BADMEM\n         USING EVALBLOCK,R3\n         LA    R0,K76 BLDL RESP LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K76),MEMBER\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nBADMEM   SLR   R0,R0 RETURN NULL\n         ST    R0,EVALBLOCK_EVLEN\n         B     EXIT WITH RC=0\nRC28     LA    R9,K4(,R9)\nRC24     LA    R9,K4(,R9)\nRC20     LA    R9,K4(,R9)\nRC16     LA    R9,K4(,R9)\nRC12     LA    R9,K4(,R9)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\nMOVEMEM  MVC   MEMBER(*-*),K0(R4)\n         PRINT NOGEN\nBLDLLIST DC    AL2(K1),AL2(K76)\nMEMBER   DC    CL8' ' A MEMBER NAME\nTTR      DC    AL3(K0)\nK        DC    AL1(K0)\nZ        DC    AL1(K0)\nC        DC    AL1(K0)\nUSERDATA DC    62AL1(K0)\n         LTORG\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(XLIBLOAD),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XLIBMEMX": {"ttr": 5385, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x16?\\x00\\x91\\x16?\\x17\\x15\\x00\\xa8\\x00\\xa4\\x00\\x06\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-06-12T00:00:00", "modifydate": "1991-06-12T17:15:00", "lines": 168, "newlines": 164, "modlines": 6, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nXLIBEMEM TITLE 'MEMBER EXISTS REXX FUNCTION'\nXLIBEMEM CSECT , /* LIBMEMX */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nXLIBEMEM AMODE 24\nXLIBEMEM RMODE 24\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SAVE  (14,12),,XLIBEMEM*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING XLIBEMEM,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         LM    R4,R8,K0(R2) A(DDN) L(DDN) A(MEMBER) L(MEM) XFF\n         CL    R8,=A(X'FFFFFFFF') PARMLIST END\n         BNE   RC4  NO\n         C     R5,=A(K8) MAX DDNAME LEN\n         BH    RC8\n         C     R7,=A(K8) MAX MEM NAME LEN\n         BH    RC12\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         LTR   R7,R7 NULLS\n         BZ    RC20\n         BCTR  R5,K0 PER EX\n         BCTR  R7,K0 PER EX\n         EX    R5,MOVEDDN\n         EX    R7,MOVEMEM\n         LA    R4,BPAMDCB MAP FOR DDNAME\n         USING IHADCB,R4\n         MVC   DCBDDNAM,DDNAME\n         OPEN  ((R4),(INPUT))\n         TM    DCBOFLGS,X10\n         DROP  R4\n         BZ    RC24\n         BLDL  (R4),BLDLLIST\n         LR    R5,RF SAVE HERE TEMP\n         CLOSE ((R4))\n         LTR   R5,R5 ERROR BLDL\n         BNZ   BADMEM\n         USING EVALBLOCK,R3\n         LA    R0,K76 BLDL RESP LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K76),MEMBER\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nBADMEM   SLR   R0,R0 RETURN NULL\n         ST    R0,EVALBLOCK_EVLEN\n         B     EXIT WITH RC=0\nRC28     LA    R9,K4(,R9)\nRC24     LA    R9,K4(,R9)\nRC20     LA    R9,K4(,R9)\nRC16     LA    R9,K4(,R9)\nRC12     LA    R9,K4(,R9)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\nMOVEDDN  MVC   DDNAME(*-*),K0(R4)\nMOVEMEM  MVC   MEMBER(*-*),K0(R6)\n         PRINT NOGEN\nBPAMDCB  DCB   DDNAME=????????,DSORG=PO,MACRF=(R)\nDDNAME   DC    CL8' ' A DDNAME\nBLDLLIST DC    AL2(K1),AL2(K76)\nMEMBER   DC    CL8' ' A MEMBER NAME\nTTR      DC    AL3(K0)\nK        DC    AL1(K0)\nZ        DC    AL1(K0)\nC        DC    AL1(K0)\nUSERDATA DC    62AL1(K0)\n         LTORG\n         DCBD  DSORG=PO,DEVD=DA\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(XLIBEMEM),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT252/FILE252.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT252", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}