{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011407000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE170.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE170.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x02'", "DS1TRBAL": "b'\\xd6\\x18'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01)\\x00\\x02\\x01)\\x00\\x05\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00\\x12\\x01\\x19#\\x7f\\x01\\x19#\\x7f\\x01\"\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-08-25T00:00:00", "modifydate": "2019-08-25T01:22:12", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-498"}, "text": "REGULAR CBT TAPE - VERSION 498    FILE:  170\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT498.FILE170\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 5 MEMBERS COUNTED; CUMULATIVE SIZE IS 591 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   08/25/19    01:22:12    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE170": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00\\x03\\x01\\x19#\\x7f\\x01\\x19#\\x7f\\x01\"\\x00\\x10\\x00\\x10\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-08-25T00:00:00", "modifydate": "2019-08-25T01:22:03", "lines": 16, "newlines": 16, "modlines": 0, "user": "CBT-498"}, "text": "//***FILE 170 is from Frank O'Quinn of Louisiana State University   *   FILE 170\n//*           and contains several programs from him.               *   FILE 170\n//*                                                                 *   FILE 170\n//*           email:    butch@lsu.edu                               *   FILE 170\n//*                                                                 *   FILE 170\n//*           USERS   - A TSO command which tells you the name      *   FILE 170\n//*                     of all TSO users currently logged on.       *   FILE 170\n//*                                                                 *   FILE 170\n//*           DUMPCSA - This is a program which I figured might     *   FILE 170\n//*                     be useful to people for the ideas within    *   FILE 170\n//*                     it.  This program \"SNAP dumps\" all          *   FILE 170\n//*                     allocated CSA, so that the material may be  *   FILE 170\n//*                     scanned for strings.  There is food for     *   FILE 170\n//*                     thought in the coding, which was done       *   FILE 170\n//*                     by Frank O'Quinn of LSU in Baton Rouge, LA. *   FILE 170\n//*                                                                 *   FILE 170\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DUMPCSA": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00V\\x00\\x91\\x13o\\x01\\x19#\\x7f\\x01\\t\\x00\\xb8\\x00\\xb8\\x00\\x01\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-05-16T00:00:00", "modifydate": "2019-08-25T01:09:56", "lines": 184, "newlines": 184, "modlines": 1, "user": "SBGOLOB"}, "text": "//DUMPCSA JOB  (2205,07600),'FRANK O''QUINN',CLASS=9,\n//  NOTIFY=BUTCH,MSGCLASS=S\n/*JOBPARM L=250\n//*********************************************************************\n//*                                                                   *\n//*   TO BROWSE CSA/ECSA, JUST SNAP IT THEN BROWSE THE PRINTOUT.      *\n//*   USEFUL WHEN CSA SIZE IS CREEPING UP.                            *\n//*   RUDE AND CRUDE, BUT IT WORKS.                                   *\n//*                                                                   *\n//*   SYSLMOD MUST BE APF-AUTHORIZED.                                 *\n//*   GENERATES ABOUT 175K LINES PER APPROX 7MB OF CSA/ECSA ALLOCATED.*\n//*                                                                   *\n//*   IT SHOULD BE FAIRLY EASY FOR ONE TO CHANGE THE 'SNAP' MACRO     *\n//*   TO A ROUTINE WHICH WOULD COMPARE FOR A STRING, IF THAT WERE     *\n//*   THE REQUIREMENT.                                                *\n//*                                                                   *\n//*********************************************************************\n//AAA   EXEC  ASMHCLG,MAC1='SYS1.AMODGEN',\n//  PARM.LKED='MAP,LIST,LET,AC(1)'\n//SYSIN  DD  *\nDUMPCSA  CSECT\nDUMPCSA  AMODE 31\nDUMPCSA  RMODE 24\n         USING DUMPCSA,R15\n         B     BEGIN                BRANCH AROUND EYECATCHER\nBEGINS   DC    AL1(BEGIN-BEGINS)\n         DC    C' DUMPCSA ROUTINE'\n         DC    C' &SYSDATE &SYSTIME'\n         DC    C' FRANK O''QUINN'\n         DC    C' LOUISIANA STATE UNIVERSITY'\n         DC    C' SYSTEM NETWORK COMPUTER CENTER'\n*-------------------------------------------------*\nBEGIN    DS    0H\n         STM   R14,R12,12(R13)      SAVE THE REGISTERS\n         LR    R12,R15              SET UP BASE REG\n         DROP  R15\n         USING DUMPCSA,R12\n         LA    R2,SAVE              ADDRESS OF MY SAVE AREA\n         ST    R2,8(R13)            CHAIN SAVE AREAS BACK...\n         ST    R13,SAVE+4           ...AND FORWARD\n         LR    R13,R2               SET UP SAVE REG\n*-------------------------------------------------*\n         MODESET KEY=ZERO,MODE=SUP  NEEDED TO READ PROT STORAGE\n         OPEN  (SNAPDCB,OUTPUT)\n         SPACE 1\n         L     R2,16                GET ADDRESS OF CVT\n         USING CVT,R2               ADDRESSABILITY\n         L     R3,CVTGDA            GET ADDRESS OF GDA\n         USING GDA,R3               ADDRESSABILITY\n         L     R4,GDASPT            GET ADDRESS OF SUB POOL TABLE\n         SPACE 1\n         SPACE 1\n         USING SPT,R4               ADDRESSABILITY\n         LA    R5,SPTNTRY           GET ADDRESS OF SPT ENTRIES\n         LA    R3,1540(R4)          END OF SPT+1\n*\nNEXTPOOL DS    0H\n*\n*   ---------- FOR EACH KEY OF THIS SUBPOOL\n*\n*---------------------------------- CSA BACKED BELOW THE LINE\n         LA    R6,SPTFBDQE(,R5)     GET ADDRESS OF POINTER\n         L     R7,0(,R6)            GET POINTER\n         CR    R6,R7                Q. SAME VALUE?\n         BE    SKIPBDQE             A. YES, SKIP IT\n         L     R8,SPTLBDQE(,R5)     GET ADDRESS OF LAST DQE\n         BAL   R11,SHOWDQE          DISPLAY IT\nSKIPBDQE DS    0H\n*\n*---------------------------------- CSA BACKED ANYWHERE\n         LA    R6,SPTFADQE(,R5)     GET ADDRESS OF POINTER\n         L     R7,0(,R6)            GET POINTER\n         CR    R6,R7                Q. SAME VALUE?\n         BE    SKIPADQE             A. YES, SKIP IT\n         L     R8,SPTLADQE(,R5)     GET ADDRESS OF LAST DQE\n         BAL   R11,SHOWDQE          DISPLAY IT\nSKIPADQE DS    0H\n*\n*---------------------------------- ECSA\n         LA    R6,SPTFEDQE(,R5)     GET ADDRESS OF POINTER\n         L     R7,0(,R6)            GET POINTER\n         CR    R6,R7                Q. SAME VALUE?\n         BE    SKIPEDQE             A. YES, SKIP IT\n         L     R8,SPTLEDQE(,R5)     GET ADDRESS OF LAST DQE\n         BAL   R11,SHOWDQE          ELSE DISPLAY IT\nSKIPEDQE DS    0H\n*-------------------------------------------------*\n         LA    R5,24(R5)            POINT TO NEXT KEY/SUBPOOL\n         CR    R5,R3                Q. REACHED THE END YET\n         BL    NEXTPOOL             A. NO, THEN LOOP\n*-------------------------------------------------*\n         CLOSE SNAPDCB\n         SPACE 1\n         L     R13,SAVE+4           ADDRESS OF LAST SAVE AREA\n         LM    R14,R12,12(R13)      RESTORE THE REGISTERS\n         XR    R15,R15              SET RETURN CODE\n         BR    R14                  RETURN TO CALLER\n         TITLE 'DUMP DQE STORAGE'\n***********************************************************************\n*                                                                     *\n*        SNAP THE ALLOCATED STORAGE OF A DQE                          *\n*                                                                     *\n*        R7  - DQE                                                    *\n*        R8  - LAST DQE IN CHAIN                                      *\n*        R11 - RETURN ADDRESS                                         *\n*        MUST PRESERVE  R5                                            *\n*                                                                     *\n***********************************************************************\nSHOWDQE  DS    0H\n         USING DQE,R7               ADDRESSABILITY\n         LA    R14,START0           BEGINNING OF LIST\n         ST    R14,START0\n         LA    R1,MAXPAIR           PLACE FOR LAST PAIR\nNEXTDQE  DS    0H\n         CR    R1,R14               Q. TOO MANY PAIRS\n         BL    DOSNAP               A. YES, QUIT NOW\n         LA    R14,8(R14)           POINT TO NEXT PAIR OF ADDRESSES\n         ST    R7,0(R14)\n         LA    R15,23(,R7)          END OF DQE\n         ST    R15,4(R14)\n         CR    R1,R14               Q. TOO MANY PAIRS\n         BL    DOSNAP               A. YES, QUIT NOW\n         LA    R14,8(R14)           POINT TO NEXT PAIR OF ADDRESSES\n         L     R15,DQEFFQE          GET ADDRESS OF FQE\n         USING FQE,R15\nDUMPFQE  DS    0H\n         ST    R15,0(R14)\n         LA    R0,15(R15)           GET END OF FQE\n         ST    R0,4(R14)\n         CR    R1,R14               Q. TOO MANY PAIRS\n         BL    DOSNAP               A. YES, QUIT NOW\n         LA    R14,8(R14)           POINT TO NEXT PAIR OF ADDRESSES\n         C     R15,DQELFQE          Q. WAS THAT LAST FQE\n         BE    DUMPDQE              A. YES, BRANCH\n         L     R15,FQENEXT\n         B     DUMPFQE              AND LOOP\nDUMPDQE  DS    0H\n         L     R15,DQEAREA          GET START OF REGION\n         ST    R15,0(R14)\n         A     R15,DQESIZE          GET END OF REGION+1\n         BCTR  R15,R0\n         ST    R15,4(R14)\n         CR    R7,R8                Q. WAS THAT THE LAST IN THE CHAIN\n         BE    DOSNAP               A. YES, GO SNAP IT.\n         L     R7,DQENEXT           ELSE GET NEXT DQE\n         B     NEXTDQE              AND LOOP\nDOSNAP   DS    0H\n         OI    4(R14),X'80'         SET LAST PARM INDICATOR\n         LA    R14,7(,R14)          ADDRESS OF LAST BYTE OF LIST\n         ST    R14,END0             SAVE IT\n         SPACE 1\n         SNAP  DCB=SNAPDCB,ID=(9),LIST=SNAPLIST\n         SPACE 1\n         BR    R11                  AND RETURN\n         TITLE 'STORAGE'\n***********************************************************************\n*                                                                     *\n*        STORAGE                                                      *\n*                                                                     *\n***********************************************************************\n         PRINT NOGEN\nSNAPDCB  DCB   DSORG=PS,RECFM=VBA,LRECL=125,BLKSIZE=1632,MACRF=(W), XXXX\n               DDNAME=SNAPOUT\nSAVE     DS    20F\nSNAPLIST DS    0F\nSTART0   DS    F\nEND0     DS    F\n         DS    200F                100 PAIRS OF ADDRESSES\n         DS    200F                100 PAIRS OF ADDRESSES\n         DS    200F                100 PAIRS OF ADDRESSES\n         DS    200F                100 PAIRS OF ADDRESSES\nMAXPAIR  DS    4F\n*\n         REGISTER                  , REGISTER EQUATES\n         IHASPT\n         CVT   DSECT=YES,LIST=NO\n         IHADQE\n         IHAFQE\n         IHAGDA\n         END\n//LKED.SYSLMOD DD  DSN=SNCC.LOADLIB(DUMPCSA),SPACE=,DISP=SHR,UNIT=3380\n//GO.SYSUDUMP DD  SYSOUT=*\n//GO.SNAPOUT  DD  SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERS": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00F\\x01\\x19#\\x1f\\x01\\x19#\\x1f\\x14\\x07\\x01[\\x01[\\x00\\x00\\xd6}\\xd8\\xe4\\xc9\\xd5\\xd5@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2019-08-19T00:00:00", "modifydate": "2019-08-19T14:07:46", "lines": 347, "newlines": 347, "modlines": 0, "user": "O'QUINN"}, "text": "USERS    TITLE 'USERS     -   DISPLAYS ACTIVE TSO USER IDS'\n***********************************************************************\n*                                                                     *\n*        MODULE NAME = USERS                                          *\n*                                                                     *\n*        DESCRIPTIVE NAME = USERS   - DISPLAYS ACTIVE TSO USERIDS     *\n*                                                                     *\n*                                                                     *\n*        AUTHOR   =    UNKNOWN                                        *\n*                                                                     *\n*        FUNCTION =                                                   *\n*                                                                     *\n*                  THIS ROUTINE DISPLAYS THE NUMBER OF TSO USERS      *\n*                  CURRENTLY LOGGED ON AND THEIR USERIDS IN SORTED    *\n*                  ORDER.                                             *\n*                                                                     *\n*        OPERATION =                                                  *\n*                                                                     *\n*                ESTIMATE STORAGE REQUIRED AND ALLOCATE IT            *\n*                EXAMINE CSCB (HANDLE TO CSCB CHAIN IN MS RESIDENT    *\n*                DATA AREA) CHAIN AND GET TSO USERIDS. USERIDS ARE    *\n*                OBTAINED FROM CHKEY IN CSCB, ALSO CHTRKID =1 FOR     *\n*                TSO USERS.                                           *\n*                STORE USERIDS IN A TABLE TO BE SORTED LATER ON       *\n*                DISPLAY THE NUMBER OF ACTIVE TSO USERS AND THEIR     *\n*                 USERIDS                                             *\n*                FREE ALLOCATED AREAS                                 *\n*                                                                     *\n*                REGISTER CONVENTIONS = STANDARD CONVENTIONS.         *\n*                   REGISTER  0 WORK REGISTER                         *\n*                   REGISTER  1 WORK REGISTER                         *\n*                   REGISTER  2 ADDRESS OF CVTMSER                    *\n*                   REGISTER  3 ADDRESS OF CVT                        *\n*                   REGISTER  4 ADDRESS OF CVTASVT                    *\n*                   REGISTERS 5,6,7,8,9,10,11 WORK REGISTERS          *\n*                   REGISTER 12 BASE REGISTER                         *\n*                   REGISTER 13 ADDRESS OF SAVE AREA                  *\n*                   REGISTER 14 RETURN ADDRESS                        *\n*                   REGISTER 15 ENTRY POINT ADDRESS                   *\n*                                                                     *\n*        MODULE TYPE = CP                                             *\n*                                                                     *\n*               PROCESSOR = ASM                                       *\n*                                                                     *\n*               MODULE SIZE = 0248 BYTES                              *\n*                                                                     *\n*               ATTRIBUTES = REENTRANT                                *\n*                                                                     *\n*        ENTRY POINT  = USERS                                         *\n*                                                                     *\n*                                                                     *\n*        INPUT = NONE                                                 *\n*                                                                     *\n*        OUTPUT = REGISTER 15 - RETURN CODE = 0                       *\n*                                                                     *\n*        EXIT - NORMAL = AT PROGRAM END VIA BR  14                    *\n*                                                                     *\n*               OUTPUT =                                              *\n*                    1) NUMBER OF TSO ACTIVE TSO USERS                *\n*                    2) USERIDS OF ACTIVE TSO USERS                   *\n*                                                                     *\n*               RETURN CODE =  0                                      *\n*                                                                     *\n*                                                                     *\n*        EXIT - ERROR = NONE                                          *\n*                                                                     *\n*               OUTPUT = NONE                                         *\n*                                                                     *\n*                                                                     *\n*        EXTERNAL REFERENCES =                                        *\n*                                                                     *\n*               ROUTINES = NONE                                       *\n*                                                                     *\n*                                                                     *\n*        MACROS USED =                                                *\n*                                                                     *\n*             MACRO                   DSNAME                          *\n*             -----                   -------                         *\n*                                                                     *\n*              CVT                    SYS1.AMODGEN                    *\n*              IHAASVT                SYS1.AMODGEN                    *\n*              IKJCPPL                SYS1.AMODGEN                    *\n*              IKJIOPL                SYS1.AMODGEN                    *\n*              IEEBASEA               SYS1.AMODGEN                    *\n*              IEECHAIN               SYS1.AMODGEN                    *\n*              REGISTER               SYS2.MACLIB                     *\n*              FREEMAIN               SYS1.MACLIB                     *\n*              GETMAIN                SYS1.MACLIB                     *\n*              PUTLINE                SYS1.MACLIB                     *\n*                                                                     *\n*                                                                     *\n*        ABEND CODES = NONE                                           *\n*                                                                     *\n*        RESTRICTIONS = NONE                                          *\n*                                                                     *\n*        CHANGE ACTIVITY =                                            *\n*                                                                     *\n*      DATE    NAME                     CHANGE                        *\n*      -----   ----                     _______                       *\n*                                                                     *\n*    07/09/86  NICK    CODE MODIFIED TO BE REENTRANT, USED PUTLINE'S  *\n*                      IN PLACE OF TPUT'S, CORRECTED CODE             *\n*                                                                     *\n*    05/12/2005 Frank  fix bug when only one logged on user.          *\n*                                                                     *\n***********************************************************************\nUSERS    CSECT\nUSERS    AMODE 31\nUSERS    RMODE ANY\n         USING USERS,R15\n         B     BEGIN\nBEGINS   DS    0H\n         DC    AL1(BEGIN-BEGINS)\n         DC    CL8'USERS'\n         DC    C'  &SYSDATE   &SYSTIME '\n         DC    C'  LOUISIANA STATE UNIVERSITY'\n         DC    C'  SYSTEM NETWORK COMPUTER CENTER'\n         SPACE 2\n*\n*\n**********************************************************************\n*       SETUP ADDRESSABILITY TO DSECTS, SAVE REGISTERS               *\n**********************************************************************\n*\n*\nBEGIN    DS    0H\n         STM   R14,R12,12(R13)    SAVE REGISTERS\n         LR    R12,R15            PUT BASE ADDRESS IN R12\n         DROP  R15\n         USING USERS,R12          USE R12 AS BASE ADDRESS\n         SPACE 2\n         L     R15,CVTPTR         LOAD ADDRESS OF CVT\n         USING CVTMAP,R15         ADDRESS CVT DSECT\n         L     R4,CVTASVT         LOAD ADDRESS OF ASVT\n         USING ASVT,R4            ADDRESS ASVT DSECT\n         L     R7,ASVTMAXU        GET MAXIMUM NUMBER OF ADDRESS SPACES\n         DROP  R4\n         L     R2,CVTMSER         CVTMSER IS ADDRESS OF MS RES. DATA\n         USING BASE,2             ADDRESS MS RESIDENT AREA\n         LA    R4,10              LOAD MAXIMUM LENGTH OF A USERID\n         MR    R6,R4              FIND LENGTH OF TABLE TO STORE USERIDS\n         LA    R8,WORKLEN         LOAD LENGTH OF REMAINING WORK AREA\n         LA    R8,0(R7,R8)        TOTAL AREA REQUIRED FOR GET MAIN\n*\n*\n***********************************************************************\n*        DO A GETMAIN TO OBTAIN STORAGE AREA FOR TASK, GETMAIN        *\n*        RETURNS ADDRESS OF AREA IN R1. STORAGE IS ALLOCATED FOR      *\n*        A TABLE (TO STORE USERIDS), PUTLINE AND OTHER WORK AREAS.    *\n*        IT IS ASSUMED THAT THE MAX. NUMBER OF USERIDS POSSIBLE       *\n*        IS EQUAL TO THE MAXIMUM NUMBER OF ADDRESS SPACES (ASVTMAXU)  *\n***********************************************************************\n*\nGET      GETMAIN  R,LV=(8),LOC=(ANY,ANY)  ALLOCATE STORAGE TO TASK\n         LR    R10,R1             R1 POINTS TO STORAGE RETURNED\n         ST    R10,8(,R13)        SAVE PTR TO SAVE AREA\n         ST    R13,4(,R10)        SAVE PTR TO OLD SAVE AREA\n         L     R1,24(,R13)        RESTORE R1\n         LR    R13,R10            LOAD MYSAVE AREA IN R13\n         USING WORKAREA,R13       ADDRESS GETMAINED AREA\n         LR    R11,R7             SAVE LENGTH OF TABLE\n         ST    R8,MYLEN           SAVE LENGTH OF AREA TO BE FREEMAINED\n         ST    R1,CPPLADDR        SAVE ADDRESS OF CPPL\n*\n**********************************************************************\n*        INITIALIZE TABLE TO BLANKS                                  *\n**********************************************************************\n*\n         LM    R8,R9,CLEARREG     PREPARE FOR MOVE CHARACTER LONG\n         LA    R6,TABLE           LOAD ADDRESS OF AREA TO BE CLEARED\n         MVCL  R6,R8              MOVE BLANK SPACES TO TABLE\n*\n***********************************************************************\n*       GET ACTIVE TSO USERIDS FROM CSCB AND KEEP COUNT               *\n***********************************************************************\n*\n         LA    R3,TABLE           LOAD PTR TO START OF TABLE\n         LA    R5,TABLE(R11)      LOAD PTR TO END OT TABLE\n         SR    R6,R6              INITIALIZE USERID COUNTER\n         L     R2,BACHN           HANDLE TO CSCB CHAIN\n         DROP  R2\nCSCBLOOP DS    0H\n         USING CHAIN,R2           ADDRESS USERS CSCB\n         ICM   R2,15,CHPTR        ANY MORE USERIDS LEFT\n         BZ    CSCBEND            IF NO, QUIT LOOKING\n         CLI   CHTRKID,1          MAKE SURE IT IS A TSO USER\n         BNE   CSCBLOOP           IF NOT, SKIP THIS ADDRESS SPACE\n         CLI   8(R2),C'$'         IS THE USERID FIELD BLANK\n         BL    CSCBLOOP           IF YES, SKIP THIS ADDRESS SPACE\n         LA    R6,1(,R6)          BUMP USER COUNT\n         MVC   0(8,R3),CHKEY      MOVE USERID INTO TABLE\n         BXLE  R3,R4,CSCBLOOP     IS THE END OF THE TABLE REACHED\n         MVC   MSGOUT(L'MSGOV),MSGOV  IF YES, DISPLAY OVERFLOW MESSAGE\n         BAL   R14,PUTLINE\n*\n*\n***********************************************************************\n*      CONVERT USER COUNT TO DECIMAL, EDIT IT, AND DISPLAY IT         *\n**********************************************************************\n*\nCSCBEND  DS    0H\n         CVD   R6,DOUBLE         CONVERT COUNT TO DECIMAL\n         MVC   COUNT(4),=X'40202020'   PREPARE FOR EDITING\n         ED    COUNT(4),DOUBLE+6       EDIT, SUPPRESS ZEROS\n         MVC   MSGOUT(4),COUNT MOVE COUNT TO OUTPUT AREA\n         MVC   MSGOUT+4(21),NUMUSERS   MOVE TO OUTPUT AREA\n         BAL   R14,PUTLINE             DISPLAY NUMBER OF USERS\n         SPACE 2\n*\n**********************************************************************\n*                  PREPARE TO SORT THE USERID TABLE                  *\n**********************************************************************\n*\n         SR    R3,R4             BACK PTR TO LAST USER IN TABLE   FJO-1\n         LR    R5,R3             SAVE PTR TO LAST USER IN TABLE\n         LA    R2,TABLE          LOAD PTR TO START OF TABLE\n         LR    R6,R4             LOAD LENGTH OF EACH USERID\n         LR    R7,R5             LOAD PTR TO END OF TABLE\n         SH    R7,=H'10'         BACK UP ONE ENTRY\n         LR    R8,R2\n         CR    R2,R3             Start = End ? (just one entry)   FJO-1\n         BE    PRNTLOOP          Yes, nothing to sort             FJO-1\n*\n***********************************************************************\n*                 SORT THE USERIDS                                    *\n***********************************************************************\n*\n*\nSORTLOOP DS    0H                SORT USERID'S IN TABLE\n         CLC   0(8,R2),10(R2)    COMPARE TWO USERID'S\n         BNH   SORTBXLE          IN SORTED ORDER, NO SWAP REQUIRED\n         LR    R8,R2             SWAP THE TWO USERIDS COMPARED\n         XC    0(8,R2),10(R2)\n         XC    10(8,R2),0(R2)\n         XC    0(8,R2),10(R2)\nSORTBXLE DS    0H\n         BXLE  R2,R6,SORTLOOP    END OF INNER LOOP\n         LR    R7,R8\n         LA    R2,TABLE          LOAD PTR TO START OF TABLE\n         LR    R8,R2\nCOMPARE  DS    0H\n         CR    R2,R7             MORE PASSES REQUIRED\n         BL    SORTLOOP          END OF OUTER LOOP\n*\n**********************************************************************\n*                 DISPLAY USERIDS, 8 PER LINE                        *\n**********************************************************************\n*\nPRNTLOOP DS    0H\n         MVC   MSGOUT(82),0(R2) MOVE 8 USERIDS TO OUTPUT AREA\n         BAL   R14,PUTLINE      DISPLAY A LINE OF USERIDS\n         LA    R2,80(,R2)       SET PTR TO NEXT GROUP OF 8 USERIDS\n         CR    R2,R5            HAVE ALL USERIDS BEEN DISPLAYED\n         BNH   PRNTLOOP         IF NOT, DISPLAY NEXT LINE         FJO-1\n*\n**********************************************************************\n*                   FREE THE GETMAINED AREA AND EXIT                 *\n**********************************************************************\n*\n         L     R0,MYLEN         LOAD LENGTH OF GETMAINED AREA\n         LR    R1,R13           LOAD ADDRESS OF GETMAINED AREA\n         L     R13,SAVEAREA+4   RESTORE SAVE AREA PTR\n         FREEMAIN R,LV=(0),A=(1)  FREE AREA\n         RETURN (14,12),RC=0    RETURN CODE =0\n*\n***********************************************************************\n*                                                                     *\n*      PUTLINE ROUTINE, USER MUST MOVE MESSAGE TO BE DISPLAYED IN     *\n*      MSGWORK. USES R14 TO RETURN TO CALLER, ALL REGISTERS RESTORED  *\n*      UPON RETURN                                                    *\n***********************************************************************\n*\n*\nPUTLINE  MVC   MSGCNTL,PUTCNTL    MOVE IN PUTLINE CONTROL CHARS\n         STM   R0,R15,SAVEREGS    SAVE CALLER'S REGS\n         LA    R5,MSGWORK         ADDR OF MSG BUFFER\n         L     R2,CPPLADDR        ADDR OF CPPL\n         USING CPPL,R2\n         LA    R1,PUTLPARM        ADDR OF PLIST\n         USING IOPL,R1\n         MVC   IOPLECT,CPPLECT    MOVE ADDR OF ECT TO PLIST\n         MVC   IOPLUPT,CPPLUPT    MOVE ADDR OF UPT TO PLIST\n         LA    R0,ECB             ADDR OF ECB\n         ST    R0,IOPLECB         STORE INTO PLIST\n         XC    ECB,ECB            CLEAR ECB TO ZEROS\n         XC    PTPB(16),PTPB      CLEAR PLIST TO ZEROS\n         PUTLINE PARM=PTPB,ECB=ECB,                                    X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X\n               OUTPUT=((R5),TERM,SINGLE,DATA),                         X\n               MF=(E,(1))\n         MVI   MSGWORK,X'40'      CLEAR BUFFER TO SPACES\n         MVC   MSGWORK+1(82),MSGWORK\n         LM    R0,R15,SAVEREGS    RESTORE CALLER'S REGS\n         BR    R14                RETURN TO CALLER\n*\n*\n***********************************************************************\n*                      CONSTANTS                                      *\n***********************************************************************\n*\n*\n         LTORG\nNUMUSERS DC    C'  USERS LOGGED ON     '\nMSGOV    DC    C'*  TABLE OVERFLOW   *'\nCLEARREG DC    A(0),X'40000000'\nPUTCNTL  DC    H'82'              CONTROL CHARS LENGTH + OFFSET + TEXT\n         DC    H'0'\n*\n*\n**********************************************************************\n*        WORK AREA TO BE ALLOCATED DYNAMICALLY                       *\n**********************************************************************\n*\nWORKAREA DSECT                    AREA TO BE GETMAINED\nSAVEAREA DS    18F                SAVE AREA\nSAVEREGS DS    16F                FOR PUTLINE ROUTINE\nCPPLADDR DS    F                  SAVE AREA FOR PTR TO CPPL\nMSGWORK  DS    0CL82\nMSGCNTL  DS    F                  CONTROL WORD FOR PUTLINE\nMSGOUT   DS    CL82               MESSAGE AREA FOR PUTLINE + 2\nPUTLPARM DS    10A                SPACE FOR PULINE PARMS\nECB      DS    F\nPTPB     DS    4F\n         DS    0D\nDOUBLE   DS    D                  USED FOR CVD\nMYLEN    DS    F                  STORAGE GETMAINED\nCOUNT    DS    F                  NUMBER OF USERIDS\nTABLE    DS    F                  AREA FOR SAVING USERIDS\nWORKLEN  EQU   *-WORKAREA         SIZE OF GETMAINED AREA\n         SPACE 3\n         PRINT NOGEN\n         SPACE 3\n*        REGISTER\n         YREGS\n         SPACE 3\n         CVT   DSECT=YES\n         SPACE 3\n         IKJCPPL\n         SPACE 3\n         IKJIOPL\n         SPACE 3\n         IHAASVT\n         SPACE 3\n         IEEBASEA\n         SPACE 3\n         IEECHAIN\n         END   USERS\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "USERS$": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00#\\x01\\x055O\\x01\\x19#\\x1f\\x14\\x17\\x00 \\x00\\x1d\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2005-12-20T00:00:00", "modifydate": "2019-08-19T14:17:23", "lines": 32, "newlines": 29, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT498.FILE170(USERS)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT,REUS'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB498170\n SETCODE AC(0)\n ENTRY   USERS\n NAME    USERSFR(R)\n/*\n//\n//* NOTE THAT I ALREADY HAVE A USERS COMMAND SO I HAD TO\n//* GIVE THIS ONE A DIFFERENT NAME.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT170/FILE170.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT170", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}