{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011510000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE208.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE208.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\t'", "DS1TRBAL": "b'=:'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x8f\\x00\\x07\\x01\\x8f\\x00\\x0b\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x00o\\x00\\x94\\x00\\x7f\\x105\\x00-\\x00\\x1e\\x00\\x00\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-01-06T00:00:00", "modifydate": "1994-01-07T10:35:00", "lines": 45, "newlines": 30, "modlines": 0, "user": "VGCART"}, "text": "     LSPC is a TSO command highly modified from its origins in TSSPACE\n(from file 127 of the CBT tape).  The LSPC command displays attributes\nof devices.  If the device is direct access (DASD), space information\nand mount status (private, storage, or public) will be displayed.  Space\nwill be displayed in format of free cyls, free trks, no. of free\nextents, contiguous cyls and contiguous trks.\n     Full information as to options, and the meanings of the flags (I\nran out of room on the output line) is in the help member (LSPCHELP)\n\n     NOTE:  It would appear that this version will NOT work when using\nHCD (dynamic IOCP).  I expect the next version will.  If anyone has a\nsample program with UCBSCAN, or can update this program to use it,\nplease let me know.  Otherwise, I'll muddle through, myself.\n\n     If anyone has ANY updates to be made to this code, please send such\nto me rather than having several versions of this program running\naround.\n\n     Standard disclaimer:\n\n     This code has worked at Sungard.  There is no guarantee that the\n  code will work anywhere else.  Neither Sungard nor the author may be\n  held reponsible for any damage caused by this code.\n\n\n     I can be reached at:\nSunGard\n600 Laurel Oak Road\nVoorhees, NJ 08043\n(609) 566-3611\n(609) 566-3656 (fax)\n\n\nArt Tansky.\n\n\n     To assemble and link the source, use the ASMJCL member, making\nnecessary dataset name changes.\n\nThe members included are:\n     $$DOC       This member\n     ASMJCL      Assemble and link JCL\n     lspchelp    Help member\n     LSPC        Source for the LSPC command\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMJCL": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x00\\x00\\x94\\x00\\x7f\\x00\\x94\\x00\\x7f\\t'\\x00%\\x00!\\x00\\x06\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-01-07T00:00:00", "modifydate": "1994-01-07T09:27:00", "lines": 37, "newlines": 33, "modlines": 6, "user": "VGCART"}, "text": "//JOBNAME  JOB ...\n//*\n//ASM      PROC APARM=\n//ASM      EXEC PGM=IEV90,\n//             PARM='BATCH,TERM,DECK,NOLOAD,LINECNT=55,&APARM'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=VGCART.TEMP.LSPC.TOCBT,DISP=SHR         <== THIS DSN\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT2   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT3   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSPUNCH DD  DSN=&SYSGO,SPACE=(TRK,(10,10),RLSE),\n//             DCB=(LRECL=80,BLKSIZE=2560,RECFM=FB),\n//             UNIT=SYSDA,DISP=(,PASS)\n//   PEND\n//*\n//LKED     PROC LPARM=\n//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET,MAP,&LPARM'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SYSLMOD  DD  DSN=VGCART.AEMC.LINKLIB(&MEM),DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&SYSGO,DISP=(SHR,DELETE)\n//         DD  DDNAME=SYSIN\n//          PEND\n//*\n//*\n//*  EXPECT SEVERAL ALIGNMENT ERRORS.  THEY CAN BE IGNORED.\n//*\n//*\n//STEP1    EXEC ASM\n//ASM.SYSIN DD DSN=VGCART.TEMP.LSPC.TOCBT(LSPC),     <== THIS DSN\n//             DISP=SHR\n//*\n//STEP2   EXEC LKED,MEM=LSPC\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LSPC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x00o\\x00\\x94\\x00o\\x10\\x07\\x05\\xb3\\x05\\xb3\\x00\\x00\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-06T00:00:00", "modifydate": "1994-01-06T10:07:00", "lines": 1459, "newlines": 1459, "modlines": 0, "user": "VGCART"}, "text": "LSPC     TITLE 'TSO CP TO PRINT DASD SPACE INFO  12JUN94 - HUNTER'\n********************************************************************\n*      PROGRAM TO PRINTOUT AVAILABLE SPACE ON A DISK DRIVE\n*      USES LSPACE (SVC 78)  FUNCTION\n*      ALSO DETERMINES IF PACK HAS INDEXED VTOC\n*      PRODUCED FROM DISASEMBLY OF ORIGINAL OBJECT MODULE\n*      W F HARTMAN MAY 1981\n*            CODE FROM CBTV224   - CLARK\n*      RE-WORKED:\n*        RENT; %FREE SPACE; UNIT NAME; NO. USERS;ALT PATH, PATH MASK\n*        ADDED XA SUPPORT                                      DDMMM84\n********************************************************************\n*\n*         THIS CODE HAS WORKED AT SUNGARD.  THERE IS NO GUARANTEE\n*      THAT THE CODE WILL WORK ANYWHERE ELSE.  NEITHER SUNGARD\n*      NOR THE AUTHOR MAY BE HELD REPONSIBLE FOR ANY DAMAGE\n*      CAUSED BY THIS CODE.\n*\n********************************************************************\n*      CHANGED TO USE PUTLINE INSTEAD OF TPUT   10/85              A.T.\n*      CHANGED TO ALLOW MINPCT AND MAXPCT       01/86              A.T.\n*      CHANGED TO CLEAR SCREEN FIRST            01/86              A.T.\n*      CHANGED TO SUPPORT 3380 MODEL E          02/86              A.T.\n*      CHANGED TO SUPPORT 3380 MODEL K          ??/88?             A.T.\n*      CHANGED TO SUPPORT 3390                  05/90              A.T.\n*      CORRECTED MINPATH SUPPORT                11/91              A.T.\n*      ADDED MAXPATH SUPPORT                    11/91              A.T.\n*      PROPER SUPPORT FOR ODD SIZED 80'S & 90'S 01/92              A.T.\n*      ALLOW \"VOLSER\" TO BE ADDRESS INSTEAD     02/92              A.T.\n*      ALLOW \"VOLSER\" TO BE GENERIC UNITNAME    04/92              A.T.\n*      SHOW MOUNT ATTRIBUTE.  ALLOW SELECTION ON SAME  04/92  V3.2 A.T.\n*      COUNT VOLUMES FOR TOTAL LINE                    03/93  V3.3 A.T.\n*      ONLY ISSUE LSPACE SVC FOR DASD                  04/93  V3.3 A.T.\n*      FIX 0C4 IF NO ENTRIES IN A GENERIC              04/93  V3.4 A.T.\n*      LEAVE \"NO. USERS\" BLANK IF NOT DASD             05/93  V3.4 A.T.\n*      SHOW SMS INDICATOR, LINE FORMAT CHANGES         06/93  V4.0 A.T.\n*      ALLOW SMS AND NONSMS KEYWORDS                   06/93  V4.0 A.T.\n*      SHOW FLAGS FOR MISC. VALUES                     10/93  V4.2 A.T.\n*      ADD SELECTION FOR SOME OF THOSE FLAGS           10/93  V4.2 A.T.\n*      ALLOW CHPID KEYWORD                             10/93  V4.2 A.T.\n*      ALLOW NOHEADER KEYWORD (BY REQUEST)             10/93  V4.3 A.T.\n********************************************************************\n         MACRO\n&SUBR    @ENT  &BASES,&SAVE,&CSECT,&DSA=NO\n.*\n.* THIS MACRO COURTESY OF SHARE INC.\n.* MVS PERFORMANCE PROJECT, CBT MODS TAPE, VTOC SYSTEM\n.* SUBMITTER RODGER MILLER, FIREMANS FUND\n.*\n.*   THIS MACRO, USED WITH THE @RET  MACRO, WILL PERFORM\n.*   STANDARD HOUSEKEEPING FOR A CSECT, INCLUDING SAVEAREA\n.*   CONSTRUCTION AND CHAINING, AND GETTING SOME STORAGE,\n.*   IF THAT IS DESIRED.\n.*   THE LEAVE MACRO WILL FREE THE GOTTEN STORAGE\n.*   THE OPERANDS ARE\n.*       &SUBR    @ENT   &BASES,&SAVE,&CSECT\n.*    WHERE\n.*       &SUBR    IS THE NAME OF THE CSECT\n.*       &BASES   ARE THE BASE REGISTERS FOR THE ROUTINE\n.*       &SAVE    IS THE LABEL FOR A SAVEAREA, OR A SUBPOOL\n.*                AND LENGTH FOR THE GETMAIN\n.*       &CSECT   TO CONTINUE AN EXISTING CSECT WITH ENTRY\n.*                POINT &SUBR\n.*\n.*    EXAMPLES -\n.*               @ENT 13,*\n.*\n.*       THIS WILL GENERATE NON-REENTRANT CODE, USING SAVEAREA\n.*       AS THE SAVE AREA LABEL, AND REGISTER 13 FOR THE BASE\n.*       REGISTER.\n.*\n.*       RENTMOD  @ENT (12,11),(,LDSECT)\n.*\n.*       THIS WILL GENERATE REENTRANT CODE WITH REGISTERS 12 AND\n.*       11 FOR BASE REGISTERS.  A GETMAIN WILL BE DONE FOR THE\n.*       DEFAULT SUBPOOL (0) WITH A LENGTH 'LDSECT'.\n.*\n         GBLC  &LV,&SP\n         LCLA  &K,&N\n         LCLC  &AREA,&B(16),&SUBNAME,&S\n&SUBNAME SETC  '&SUBR'\n         AIF   ('&SUBNAME' NE '').SUBSPEC\n&SUBNAME SETC  'MAIN'         DEFAULT CSECT NAME\n.SUBSPEC AIF   ('&CSECT' EQ '').NOTENT  IS IT AN ENTRY POINT?\n&CSECT   CSECT\n&SUBNAME DS    0F\n         AGO   .CSSPEC\n.NOTENT  ANOP\n&SUBNAME CSECT\n.CSSPEC  ANOP\n         SAVE  (14,12),T,CBT-FILE127-&SUBNAME-&SYSDATE-&SYSTIME\n         AIF   ('&BASES(1)' EQ '15' OR '&BASES' EQ '').R15SET\n         AIF   ('&BASES(1)' EQ '13' AND '&SAVE' NE '').R15SET\n         LR    &BASES(1),15  SET FIRST BASE REG\n.R15SET  CNOP  0,4\n&S       SETC  '&SUBNAME'\n         AIF   (N'&SAVE EQ 2).P4   SUBPOOL, SIZE SPEC?\n         AIF   ('&SAVE' EQ '').P3  NO SAVEAREA - DEFAULT\n&AREA    SETC  '&SAVE'\n         AIF   ('&SAVE' NE '*').P2\n&AREA    SETC  'SAVEAREA'\n.P2      AIF   ('&BASES(1)' NE '13').P4\n&S       SETC  '*'\n         USING &SUBNAME,15\n         ST    14,&AREA+4\n         LA    14,&AREA\n         ST    14,8(13)\n         L     14,&AREA+4\n         ST    13,&AREA+4\n         BAL   13,*+76        SKIP AROUND THE SAVEAREA\n         DROP  15\n         AGO   .P4\n.P3      AIF   ('&BASES(1)' NE '13').P4\n         MNOTE 8,'*** CONTENTS OF REG 13 ARE LOST.  NO SAVE AREA WAS ESX\n               TABLISHED.'\n.P4      AIF   ('&BASES(1)' NE '14' OR '&SAVE' EQ '').P5\n         MNOTE 8,'*** MACRO RESTRICTION - REG 14 MUST NOT BE USED AS THX\n               E FIRST BASE REGISTER IF A SAVE AREA IS USED.'\n.P5      AIF   ('&BASES' EQ '').P9\n&N       SETA  N'&BASES\n.P6      ANOP\n&K       SETA  &K+1\n&B(&K)   SETC  ','.'&BASES(&K)'\n         AIF   (N'&SAVE EQ 1).PE\n         AIF   ('&BASES(&K)' NE '13').P7\n         MNOTE 8,'*** REG 13 MAY NOT BE USED AS A BASE REGISTER FOR REEX\n               NTRANT CODE.'\n         AGO   .P7\n.PE      AIF   ('&BASES(&K+1)' NE '13' OR '&SAVE' EQ '').P7\n         MNOTE 8,'*** WHEN USING A SAVE AREA, REG 13 MAY NOT BE USED ASX\n                A SECONDARY BASE REGISTER.'\n.P7      AIF   ('&BASES(&K+1)' NE '').P6\n         USING &S&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)&B(9)&B(10)&B(X\n               11)&B(12)&B(13)&B(14)&B(15)&B(16)\n&K       SETA  1\n         AIF   ('&BASES(1)' NE '13' OR '&SAVE' EQ '').P8\n&AREA    DC    18F'0'\n.P8      AIF   (&K GE &N).P10\n         LA    &BASES(&K+1),X'FFF'(&BASES(&K))\n         LA    &BASES(&K+1),1(&BASES(&K+1))\n&K       SETA  &K+1\n         AGO   .P8\n.P9      USING &SUBNAME,15\n.P10     AIF   (N'&SAVE GE 2).P13\n         AIF   ('&SAVE' EQ '' OR '&BASES(1)' EQ '13').P12\n         AIF   ('&SAVE'(1,1) GE '0').P16  NUMERIC MEANS A PASSED AREA\n         ST    14,&AREA+4\n         LA    14,&AREA\n         ST    14,8(13)\n         L     14,&AREA+4\n         ST    13,&AREA+4\n.P11     BAL   13,*+76       SKIP AROUND THE SAVEAREA\n&AREA    DC    18F'0'\n.P12     MEXIT\n.P13     ANOP\n&LV      SETC  '&SAVE(2)'\n&SP      SETC  '0'\n         AIF   ('&SAVE(1)' EQ '').P14\n&SP      SETC  '&SAVE(1)'\n.P14     CNOP  0,4          DO A GETMAIN FOR THE AREA\n         BAL   1,*+8          POINT THE SP AND LV\nENT&SYSNDX DC  AL1(&SP)       SUBPOOL FOR THE GETMAIN\n         DC    AL3(&LV)       LENGTH OF THE GETMAIN\n         L     0,0(1)         GET THE DATA IN REG 1\n         SVC   10             ISSUE THE GETMAIN\n.*                            CHAIN THE SAVEAREAS\n         ST    13,4(1)        PRIOR SAVEAREA ADDRESS TO MINE\n         ST    1,8(13)        MY SAVEAREA ADDRESS TO HIS\n         LR    2,13           KEEP THE SAVEAREA ADDRESS FOR REGS\n         LR    13,1           THIS IS MY SAVEAREA\n         AIF   ('&DSA' NE 'YES').NODSA                        11/04/79\nDSA      DSECT                                                11/04/79\n         DS    9D                  INITIAL SAVE AREA          11/04/79\n         USING DSA,13              TELL ASM                   11/04/79\n         AIF   ('&CSECT' NE '').DSA1 NO MAINLINE CSECT        11/04/79\n&SUBNAME CSECT                     CONTINUE NORMAL CSECT      11/04/79\n         AGO   .NODSA              EXIT                       11/04/79\n.DSA1    ANOP                                                 11/04/79\n&CSECT   CSECT                     CONTINUE NORMAL CSECT      11/04/79\n.NODSA   ANOP                                                 11/04/79\n         AIF   ('&SAVE(3)' NE 'C').P15   CLEAR THE SAVEAREA?\n         LA    4,12(13)       YES, POINT PAST THE CHAIN\n         L     5,ENT&SYSNDX   GET THE SIZE\n         LA    6,12           MINUS THE CHAIN AREA (12 BYTES )\n         SR    5,6            GIVES THE AMOUNT TO CLEAR\n         SR    7,7            CLEAR THE FROM COUNT AND CLEAR BYTE\n         MVCL  4,6            WHEE, CLEAR IT OUT\n         LM    0,7,20(2)      RESTORE THE ORIGINAL REGISTERS\n         MEXIT\n.P15     ANOP\n         LM    0,2,20(2)      RESTORE ORIGINAL REGS\n         MEXIT\n.P16     L     1,&AREA+0(1)   NUMERIC &SAVE IMPLIES A PASSED SAVEAREA\n         ST    13,4(1)        PRIOR SAVEAREA ADDRESS TO MINE\n         ST    1,8(13)        MY SAVEAREA ADDRESS TO HIS\n         LR    2,13           KEEP THE SAVEAREA ADDRESS FOR REGS\n         LR    13,1           THIS IS MY SAVEAREA\n         LM    0,2,20(2)      RESTORE ORIGINAL REGS\n         MEND\n         MACRO\n&NAME    @RET  &EQ,&RC=,&FREE=YES\n.*..................................>> SEE @ENT MACRO FOR CREDITS\n         GBLC  &LV,&SP                 GLOBALS-SET IN @ENT\n&NAME    LR    2,13                    SAVE CURRENT SAVE AREA\n         L     13,4(13)                GET CALLER SAVE AREA\n         AIF   ('&RC' EQ '').L0        SKIP IF R15 ALREADY SET\n         LA    15,&RC                  LOAD THE RETURN CODE\n.L0      STM   15,1,16(13)             STORE RETURN REGS\n         AIF   ('&LV' EQ '').L1        ANYTHING TO FREE?\n         AIF   ('&FREE' EQ 'NO').L1    OVERRIDE FREE CODE?     25JUL84\n         FREEMAIN R,LV=&LV,SP=&SP,A=(2) FREE THE AREA\n.L1      RETURN (14,12),T              RETURN TO CALLER\n         AIF   ('&EQ' NE 'EQ').L4      REGISTERS TOO?\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n.L4      MEND\n         MACRO\n&N       @ED   &OU,&WK\n&N       MVC   &OU,OTMASK               MOVE MASK\n         L     R0,&WK                   GET DATA\n         CVD   R0,WD                    MAKE PACKED\n         ED    &OU,WD+4                 EDIT IT\n         MEND\n         MACRO\n&NAME    TPUT2 &MSG,&LENGTH\n.*   TPUT MACRO WHICH ACTUALLY DOES A \"PUTLINE\" MACRO CALL\n.*   USED WHEN CONVERTING PROGRAMS WHICH USED TO DO REAL TPUTS\n.*   LENGTH IS IGNORED.  JUST FOR COMPATIBLITY WITH TPUT MACRO\n         PUSH  PRINT\n&NAME    STM   R11,R15,DSAREGS          SAVE SOME REGISTERS\n         LA    R15,&MSG-4\n         BAL   R11,DOTPUT\n         LM    R11,R15,DSAREGS          RESTORE SOME REGISTERS\n         MEND\n         MACRO\n&NAME    PUTLDC &VALUE\n.*   MACRO TO REPLACE DC INSTRUCTION WHEN CONVERTING TPUTS TO\n.*   PUTLINES.  CAN ALSO BE USED WHEN CODING NEW PUTLINE CALLS\n         PUSH  PRINT\n         PRINT GEN\n         DC    AL2(L'&NAME+4),AL2(0)\n&NAME    DC    &VALUE\n         POP   PRINT\n         MEND\n         MACRO\n&LABEL   DEVTAB &CLASS,&TYPE,&CYL,&NAME,&MODEL,&TRK\n&LABEL   DC    AL1(&CLASS)\n         DC    X'&TYPE'\n         DC    H'&CYL'\n         DC    CL4'&NAME'\n         DC    CL3&MODEL\n         DC    H'&TRK'\n         DC    AL2(&CYL*&TRK)\n         MEND\n         PRINT NOGEN\nLSPC    @ENT   R12,(0,DSAEND-DSA+8,C),DSA=YES\n         XC    WKCLRS(WKCLRL),WKCLRS   CLEAR COUNTERS\n         MVC   VLINK(VLINKLEN),ZLINK INITIALIZE IT\n         MVC   NOVOL,ZOVOL\n         MVC   OFFSET,ZFFSET\n         LA    R2,PPL                  GET ADDRESS OF PPL\n         USING PPL,R2                  TELL ASSEMBLER\n         MVC   UPT,4(R1)               COPY  UPT\n         MVC   ECT,12(R1)              COPY  ECT\n         LA    R0,ECB                  GET ADDRESS OF NEW ECB\n         ST    R0,ECBP                 SAVE ECB ADDRESS\n         XC    ECB,ECB                 ZERO ECB\n         MVC   DSAPUTL(DSAPUTLL),PUTLINE COPY PUTLINE\n         MVC   OUTMESS-4(4),OUTMESSA-4 COPY LENGTH\n         MVC   OTTOTS-4(4),OTTOTSA-4   COPY LENGTH\n         LA    R14,DSAPUTL\n         ST    R14,IOPLIOPB\n         MVC   IOPLUPT,UPT\n         MVC   IOPLECT,ECT\n         MVC   IOPLECB,ECB\n         MVC   PCL,ADDPCL              GET ADD OF PCL\n         LA    R0,ANS                  GET ADD OF ANSWER WORD\n         ST    R0,ANSW                 PUT IN PPL\n         MVC   COMBUF,0(R1)            PUT ADD OF CBUFF IN PPL\n         XC    WK,WK                   ZERO USER WORK AREA\n         LA    R1,PPL                  GET ADD OF PPL\n         CALLTSSR EP=IKJPARS           GO PARSE IT\n         DROP  R2\n         LTR   R15,R15                 TEST  RETURN CODE\n         BNZ   ERROR                   ERROR GO TELL USER\n*\n         MVI   UNIT,C' '               UNIT=C' '=NO HITS\n         MVC   MINPCTD,=C'00'     INITIALIZE\n         MVC   MAXPCTD,=C'99'     INITIALIZE\n*\n         L     R6,ANS                  GET ADDRESS OF ANSWER AREA\n*---                                   PROCESS PATH INFO       25JUN84\n         USING IKJPARMD,R6                                     25JUN84\n         CLI   MOUNTALL+1,X'00'    ALL SPECIFIED?\n         BNE   PARSMNAL              YES, USE ALL\n         CLI   MOUNTPRI+1,X'00'    PRIVATE SPECIFIED?\n         BE    PARSMNPR              B IF NO\n         OI    MOUNTWNT,UCBBPRV    FLAG TO CHECK PRIVATE\nPARSMNPR DS    0H\n         CLI   MOUNTPUB+1,X'00'    PUBLIC SPECIFIED?\n         BE    PARSMNPU              B IF NO\n         OI    MOUNTWNT,UCBBPUB    FLAG TO CHECK PUBLIC\nPARSMNPU DS    0H\n         CLI   MOUNTSTG+1,X'00'    STORAGE SPECIFIED?\n         BE    PARSMNST              B IF NO\n         OI    MOUNTWNT,UCBBSTR    FLAG TO CHECK STORAGE\nPARSMNST DS    0H\n         B     PARSMNEN            B TO END OF MOUNT CHECKING\nPARSMNAL DS    0H                  USE ALL MOUNT ATTRIBUTES\n         MVI   MOUNTWNT,UCBBPRV+UCBBPUB+UCBBSTR   ALL FLAGS\nPARSMNEN DS    0H\n         MVI   UNITSTR,UCB3DACC    START OUT WITH JUST DASD\n         CLI   UNITWANT+1,X'00'    UNIT SPECIFIED?\n         BE    PARSNOUN              NO, JUST DASD\n         MVI   UNITSTR,X'00'       START FROM SCRATCH\n         CLI   UNITALL+1,X'01'     ALL UNITS WANTED?\n         BNE   PARSNOAL              NO\n         MVI   UNITSTR,X'FF'         YES, START OUT WITH ALL UNITS\nPARSNOAL DS    0H\n         SPACE 1\n         CLI   DASD+1,X'00'\n         BE    PARSDACC\n         OI    UNITSTR,UCB3DACC\n         CLI   DASD+1,X'02'\n         BNE   PARSDACC\n         NI    UNITSTR,X'FF'-UCB3DACC\nPARSDACC DS      0H\n         SPACE 1\n         CLI   TAPE+1,X'00'\n         BE    PARSTAPE\n         OI    UNITSTR,UCB3TAPE\n         CLI   TAPE+1,X'02'\n         BNE   PARSTAPE\n         NI    UNITSTR,X'FF'-UCB3TAPE\nPARSTAPE DS      0H\n         SPACE 1\n         CLI   COMM+1,X'00'\n         BE    PARSCOMM\n         OI    UNITSTR,UCB3COMM\n         CLI   COMM+1,X'02'\n         BNE   PARSCOMM\n         NI    UNITSTR,X'FF'-UCB3COMM\nPARSCOMM DS      0H\n         SPACE 1\n         CLI   DISP+1,X'00'\n         BE    PARSDISP\n         OI    UNITSTR,UCB3DISP\n         CLI   DISP+1,X'02'\n         BNE   PARSDISP\n         NI    UNITSTR,X'FF'-UCB3DISP\nPARSDISP DS      0H\n         SPACE 1\n         CLI   UREC+1,X'00'\n         BE    PARSUREC\n         OI    UNITSTR,UCB3UREC\n         CLI   UREC+1,X'02'\n         BNE   PARSUREC\n         NI    UNITSTR,X'FF'-UCB3UREC\nPARSUREC DS      0H\n         SPACE 1\n         B     PARSEEND\nPARSNOUN DS      0H\n*   NO UNIT SPECIFIED.  SET A DEFAULT BASED UPON:\n*        WE ALREADY HAVE UNIT=DASD SET UP\n*        IF VOLSER (AS OPPOSED TO CUU)\n*          END USING UNIT=DASD\n*        ELSE IF CHPID\n*          USE UNIT=ALL\n*        ELSE (CUU)\n*          IF CUU = ALL OR CUU IS OMITTED\n*            END USING UNIT=DASD\n*        UNIT=ALL\n*\n         CLI   CHPID+1,X'00'       CHPID SPECIFIED?\n         BNE   USEALL               YES\n         CLI   CUU+1,X'00'         CUU SPECIFIED?\n         BE    PARSEEND              NO, VOLSER DEFAULTS TO DASD\n         TM    VOL+6,X'80'         SPECIFIC CUU?\n         BNO   PARSEEND              NO, USE JUST DASD\n         L     R14,VOL             @CUU\n         LH    R15,VOL+4           LENGTH OF VOLSER SPECIFIED\n         BCTR  R15,0               MINUS 1 FOR EX INSTRUCTION\n         CH    R15,=H'2'           3 CHARACTERS?\n         BNE   USEALL                NO, CAN'T BE \"ALL\"\nCLCALL1  CLC   0(*-*,R14),=CL8'ALL' \"ALL\"?\n         EX    R15,CLCALL1         CHECK FOR \"ALL\"\n         BE    PARSEEND              YES, JUST DASD AGAIN\nUSEALL   DS    0H\n         MVI   UNITSTR,X'FF'         NO, USE ALL UNIT TYPES\nPARSEEND DS      0H\n         OC    FLAGFLAG,SMSKEYWD+1  KEEP SMS KEYWORDS IN FLAG BYTE\n         IC    R14,IXKEYWD+1       IX OR NONIX\n         SLL   R14,2               PAST THE BITS FOR PREV. FLAGS\n         O     R14,FLAGFLAG-3      ADD IN PREV. FLAGS\n         STC   R14,FLAGFLAG        AND SAVE IT THAT WAY\n         IC    R14,ALKEYWD+1       ALLOC OR NONALLOC\n         SLL   R14,4               PAST THE BITS FOR PREV. FLAGS\n         O     R14,FLAGFLAG-3      ADD IN PREV. FLAGS\n         STC   R14,FLAGFLAG        AND SAVE IT THAT WAY\n         IC    R14,RSVKEYWD+1      RESERVED OR NON-RESERVED\n         SLL   R14,6               PAST THE BITS FOR PREV. FLAGS\n         O     R14,FLAGFLAG-3      ADD IN PREV. FLAGS\n         STC   R14,FLAGFLAG        AND SAVE IT THAT WAY\n         SPACE 1\n         OC    FLAGFLA2,CONKEYWD+1 CONSOLE OR NONCONSOLE\n         IC    R14,IDRKEYWD+1     IDRC OR NOT\n         SLL   R14,2               PAST THE BITS FOR PREV. FLAGS\n         O     R14,FLAGFLA2-3      ADD IN PREV. FLAGS\n         STC   R14,FLAGFLA2        AND SAVE IT THAT WAY\n         IC    R14,ALCKEYWD+1      AUTOLOADER AVAILABLE\n         SLL   R14,4               PAST THE BITS FOR PREV. FLAGS\n         O     R14,FLAGFLA2-3      ADD IN PREV. FLAGS\n         STC   R14,FLAGFLA2        AND SAVE IT THAT WAY\n         CLI   GENERIC+1,X'01'     GENERIC SPECIFIED?\n         BNE   PARSNOGN              NO, KEEP GOING\n         OI    FLAGMISC,GENSW     SHOW GENERIC\n         MVI   UNITSTR,X'FF'       YES, ALL UNIT TYPES WANTED\n         MVC   NOVOL(L'GENMESS),GENMESS\nPARSNOGN DS    0H\n         CLI   CHPID+1,X'01'       CHPID SPECIFIED?\n         BNE   PARSNOCH              NO, KEEP GOING\n         OI    FLAGMISC,CHPIDSW   SHOW CHPID\n         MVC   NOVOL(L'CHPIDMES),CHPIDMES\nPARSNOCH DS    0H\n         CLI   NOHEADER+1,X'01'   NOHEADER SPECIFIED?\n         BNE   PARSNOHD              NO, KEEP GOING\n         OI    FLAGMISC,NOHEADSW  SHOW IT\nPARSNOHD DS    0H\n*\n**       SAY   HELLO\n*\n         TPUT  CLEAR,L'CLEAR,FULLSCR\n         TM    FLAGMISC,NOHEADSW   HEADERS WANTED?\n         BO    NOHEAD1               NO\n         TPUT2 HDR1S\n         TPUT2 HDR2S     TPUT  MESSAGE\nNOHEAD1  DS    0H\n         SPACE 1\n*  SET AN OFFSET VALUE OF THE FIELD IN THE UCB WE WANT TO TEST.\n*  I.E.  UCBVOLI IF VOLSER AND UCBNAME IF CUU\n*  THE FIELD DEFAULTS TO UCBVOLI AT ASSEMBLY TIME.\n*  ALSO SET THE MESSAGE TO ADDRESS RATHER THAN VOLUME\n         CLI   CUU+1,X'00'         CUU?\n         BE    PARSVOLS              NO, NO CHANGE\n         LA    R14,UCBNAME-UCBCMSEG OFFSET OF EBCDIC CUU\n         ST    R14,OFFSET\n         MVC   NOVOL(L'UNITMESS),UNITMESS\nPARSVOLS DS    0H\n         CLI   OFFLINE+1,2        OFFLINE WANTED?\n         BNE   SKPOFF             NO\n         OI    FLAGMISC,OFFSW     YES, SET SWITCH\nSKPOFF   DS    0H\n         CLC   =H'1',MAXPATHK          FIRST KEYWORD SPEC'D    25JUN84\n         BNE   SKPPATH1                NO-SKIP                 25JUN84\n         L     R14,MAXPATHI            DATA ADR                25JUN84\n         LH    R15,MAXPATHI+4          L'                      25JUN84\n         BCTR  R15,0                   L' -1                   25JUN84\nMAXPATHX PACK  WD,0(*-*,R14)           EXECUTED                25JUN84\n         EX    R15,MAXPATHX             \"\"\"\"\"\"                 25JUN84\n         CVB   R0,WD                                           25JUN84\n         ST    R0,MAXPATHD             SAVE MAX PATHS REQD     25JUN84\nSKPPATH1 DS    0H                                              25JUN84\n         CLC   =H'1',MINPATHK          FIRST KEYWORD SPEC'D    25JUN84\n         BNE   SKPPATH2                NO-SKIP                 25JUN84\n         L     R14,MINPATHI            DATA ADR                25JUN84\n         LH    R15,MINPATHI+4          L'                      25JUN84\n         BCTR  R15,0                   L' -1                   25JUN84\nMINPATHX PACK  WD,0(*-*,R14)           EXECUTED                25JUN84\n         EX    R15,MINPATHX             \"\"\"\"\"\"                 25JUN84\n         CVB   R0,WD                                           25JUN84\n         ST    R0,MINPATHD             SAVE MIN PATHS REQD     25JUN84\nSKPPATH2 DS    0H                                              25JUN84\n         CLC   =H'1',MAXPCTK      KEYWORD SPECIFIED?\n         BL    SKPMAXP\n         L     R14,MAXPCTI        DATA ADDR\n         CLC   MAXPCTI+4(2),=X'0002' LENGTH=2?\n         BE    MAXPCT2            YES MOVE 2 BYTES\n         MVC   MAXPCTD+1(1),0(R14) MOVE 1 BYTE\n         MVI   MAXPCTD,C'0'        FILL LEFT WITH ZERO\n         B     SKPMAXP\nMAXPCT2  DS    0H\n         MVC   MAXPCTD,0(R14)     MOVE 2 BYTES\nSKPMAXP  DS    0H\n         CLC   =H'1',MINPCTK      KEYWORD SPECIFIED?\n         BL    SKPMINP\n         L     R14,MINPCTI        DATA ADDR\n         CLC   MINPCTI+4(2),=X'0002' LENGTH=2?\n         BE    MINPCT2            YES MOVE 2 BYTES\n         MVC   MINPCTD+1(1),0(R14) MOVE 1 BYTE\n         MVI   MINPCTD,C'0'        FILL LEFT WITH ZERO\n         B     SKPMINP\nMINPCT2  DS    0H\n         MVC   MINPCTD,0(R14)     MOVE 2 BYTES\nSKPMINP  DS    0H\n*---     ---   PROCESS VOLSERS                                 25JUN84\n         LA    R6,VOL                  PDL DSECT ENTRY\n         DROP  R6                                              25JUN84\n         TM    6(R6),X'80'             IS IT REQUST FOR SPEC VOL\n         BO    GETVOL                  YES GO PROCESS\nNOVOLS   DS    0H\n         SR    R6,R6                   NO-ALL VOLUMES\n         B     SKPVOL                  SKIP\nGETVOL   DS    0H\n         MVI   VOLSER,C' '\n         MVC   VOLSER+1(L'VOLSER-1),VOLSER\n         L     R7,0(R6)                GET ADDRESS OF VOLUME\n         LH    R8,4(R6)                GET LENGTH OF VOLUME\n         TM    FLAGMISC,CHPIDSW   CHPID SPECIFIED?\n         BNO   GETVOLC              NO, CONTINUE AS NORMAL\n         CH    R8,=H'2'           EXACTLY 2 BYTES?\n         BNE   CHPIDERR             NO, CHPID MUST BE 2 BYTES\n         MVC   WD(2),0(R7)         MOVE CHPID TO TEMP AREA\n         TR    WD(2),TOHEX-C'A'   XLATE FOR CONVERT\n         PACK  WD+4(2),WD(3)      PACK IT FOR HEX COMPARE\n         MVC   CHPIDWNT,WD+4\n         B     SKPVOL             AND WE'RE DONE\nGETVOLC  DS    0H\n         BCTR  R8,R0                   MACHINE LENGTH\n         CH    R8,=H'2'            3 CHARACTERS?\n         BNE   NOTALL2               NO, CAN'T BE \"ALL\"\nCLCALL2  CLC   0(*-*,R7),=CL8'ALL' \"ALL\" SPECIFIED?\n         EX    R8,CLCALL2\n         BE    NOVOLS                YES, SAME AS OMITTED\nNOTALL2  DS    0H\n         LA    R9,VOLSER               ADDRESS OF MESSAGE\n         EX    R8,EXMVC                MOVE VOLUME IN\nSKPVOL   DS    0H\n         L     R15,CVTPTR\n         MVC   DSADCB,CVTDCB-CVT(R15)  SAVE OP SYS TYPE\n         TITLE 'SCAN UCBS'\n*\n***            THIS CODE COPIED FROM (TSUCBSCN)\n*\n         SPACE 1\n*  IF GENERIC SPECIFIED,\n*    CALL IEFEB4UV TO GET A LIST OF UCB ADDRESSES\n*  OTHERWISE, FOLLOW ORIGINAL LOGIC TO SET UP UCB SCAN WORK AREAS\n         SPACE 1\n         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?\n         BNO   LOCUCB                NO, UCB SCAN\n         MVI   CNVTUTAB,C' '\n         MVC   CNVTUTAB+1(L'CNVTUTAB-1),CNVTUTAB\n         MVC   CNVTUTAB(8),VOLSER\n         LA    R7,CNVTUTAB                                      TANSKY\n         LINK  EP=IEFEB4UV,PARAM=((7),CNVTUFLG),MF=(E,VLINK),   TANSKY X\n               ERRET=UCBEND        IF ERRORS, SHOW NOW UCBS\n         LTR   R15,R15\n         BNZ   UCBEND              BAD RETURN, SHOW NO UNITS\n         L     R1,CNVTUTAB+8       @ UCB POINTER TABLE\n         L     R2,0(R1)            LENGTH\n         ICM   R2,B'1000',=X'00'   ZERO HIGH ORDER BYTE\n         AR    R2,R1               @ END OF TABLE\n         ST    R2,CNVTUTAB+16   AND SAVE IT\n         LA    R1,4(R1)            POINTER TO CURRENT ENTRY\n         ST    R1,CNVTUTAB+12        AND SAVE IT\n         SPACE 3\nLOCUCB   DS    0H  -----------------FORMAT IOS SCAN PARM LIST\n         XC    DSXAWORK,DSXAWORK       ZERO OUT UCB WORKAREA\n         LA    R1,DSXAWORK             ADDR OF UCB WORKAREA\n         ST    R1,DSXAWA               STORE IT IN PARM LIST\n         LA    R1,DSXACLAS             PTR TO DEV CLAS TO SEARCH\n         ST    R1,DSXADEVT             STORE IN PARM LIST\n         MVI   DSXACLAS,0          SEARCH EVERYTHING\n         LA    R1,DSXAUCBP             AREA TO STORE UCB ADDR\n         ST    R1,DSXAUCB              IN PARM LIST\n         OI    DSXAUCB,X'80'           SIGNIFY END OF PARMLIST\nUCBLOOP  DS    0H\nLOCUCB1  DS    0H  -----------------SCAN FOR A UCB---------\n         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?\n         BNO   LOCUCB2               NO, UCB SCAN\n         L     R1,CNVTUTAB+12      CURRENT ENTRY\n         LA    R1,4(R1)            NEXT ENTRY\n         ST    R1,CNVTUTAB+12      AND HOLD ON TO IT AS CURRENT\n         C     R1,CNVTUTAB+16      END OF TABLE?\n         BNL   UCBEND                YES, GO TO END OF UCBS\n         XR    R15,R15             NO, SHOW ZERO 'RETURN CODE'\n         MVC   DSXAUCBP,0(R1)      MOVE @ UCB TO UCB LOOKUP AREA\n         B     LOCUCBXX            B TO COMMON CODE\nLOCUCB2  DS    0H\n         L     R15,CVTPTR\n         ICM   R15,15,CVTUCBSC-CVT(R15) CVTUCBSC VALID?(IOSVSUCB)\n         BZ    LOCUCBE0                ZERO=OLD MVS\n***>>>>>>----UCB SCAN SERVICE FOR MVS/SP1.2 AND ABOVE:-----<<<<<<***\n** PARM:(100BYTE-WORK,1BYTE-DEV-CLASS,1WORD-UCB-PTR)              **\n**RETURN CODES: R15 = 00-UCB RETURNED; 04-NO MORE UCBS            **\n         LA    R1,DSXALIST             PTR TO PARM LIST\n         BALR  R14,R15                 BRANCH TO IT\n         B     LOCUCBXX                COMMON ENTRY POINT\n***>>>>>>----- EMULATION UCB SCAN SERVICE FOR OLD MVS------<<<<<<***\nLOCUCBE0 DS    0H\n         ICM   R14,B'1111',DSXAEUCB    BR IF THIS IS\n         BNZ   LOCUCBE1                SECOND OR LATER CALL\n         L     R14,CVTPTR              ADDR-UCB VECTOR TABLE\n         L     R14,X'24'(R14)         *XA  CVTILK2-CVT(R14)\n         ST    R14,DSXAEILK            SAVE(TO CHECK FOR DUPS)\nLOCUCBE1 DS    0H\n         SR    R1,R1                   ZERO UCB ADDR PTR\nLOCUCBE3 DS    0H\n         LA    R14,2(,R14)             NEXT PTR(1ST UCB SKIPPED)\n         ICM   R1,B'0011',0(R14)       ADDR OF UCB\n         BZ    LOCUCBE3                BR IF NULL ENTRY\n         LA    R15,4                   SHOW NO HITS (CC UNCHANGED)\n         BO    LOCUCBEX                BR IF END\n         LA    R15,0                   SHOW HITS (CC UNCHANGED)\nLOCUCBE5 DS    0H\n         CLC   DSXACLAS,UCBTBYT3-UCBCMSEG(R1) BR IF THIS UCB\n         BNE   LOCUCBE3                IS NOT DESIRED CLASS\n         ST    R1,DSXAUCB              PROVIDE ADDR OF UCB\n         ST    R14,DSXAEUCB            REMEMBER WHERE TO RESUME\n***>>>>> CHECK FOR DUPLICATE CHANNEL PATH\n         L     R14,DSXAEILK            ADDR OF FIRST UCB PTR\nLOCUCBE7 DS    0H\n         CL    R14,DSXAEUCB            EXIT IF NO DUPLICATE\n         BE    LOCUCBEX                CHANNEL PATH FOUND(R15=0)\n         LA    R14,2(,R14)             ADDR OF NEXT PTR\n         CLC   0(2,R14),DSXAUCB+2      CONTINUE LOOP IF THIS IS NOT\n         BNE   LOCUCBE7                DUPLICATE CHANNEL PATH\n         L     R14,DSXAEUCB            SETUP TO RESUME SCAN\n         B     LOCUCBE3                AND GO RE-ENTER LOOP\nLOCUCBEX DS    0H\n***>>>>>>       UCB SCAN ROUTINE - COMMON RETURN POINT     <<<<<<***\nLOCUCBXX DS    0H\n         LTR   R15,R15                 GOT ONE?\n         BNZ   UCBEND                  NO\n         L     R8,DSXAUCBP GET ADR OF  UCB FROM PTR\n         USING UCBCMSEG,R8\n         CLI   UCBID,UCBSTND           IS ADDRESS VALID\n         BNE   UCBSKP                  NO\n         IC    R15,UCBDVCLS        UNIT TYPES WE WANT\nUNITTEST TM    UNITSTR,0\n         EX    R15,UNITTEST        DO WE WANT THIS ONE?\n         BNO   UCBSKP                NO\n         TM    UCBSTAT,UCBONLI         IS IT ONLINE\n         BO    OFFSKP2                 YES, DON'T SKIP\n         TM    FLAGMISC,OFFSW     OFFLINE WANTED?\n         BNO   UCBSKP             NO - SKIP IT\nOFFSKP2  DS    0H\n         TM    UCBSTAT,UCBCHGS         IS IT CHANGING STATUS\n         BO    UCBSKP                  YES SKIP\n         LTR   R6,R6                   TEST IF ONLY ONE VOLUME WANTED\n         BZ    SNGVOL                  NO GO PROCESS\n         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?\n         BO    SNGVOL                YES, DON'T COMPARE OF VOLSER\n         TM    FLAGMISC,CHPIDSW    CHPID SPECIFIED?\n         BO    SNGVOL                YES, DON'T COMPARE OF VOLSER\n         L     R14,0(R6)           ADDRESS OF 1ST PARM\n         LH    R15,4(R6)           LENGTH OF PARM\n         BCTR  R15,0               SUBTRACT 1 FOR MACHINE LENGTH\n         LR    R1,R8               @ START OF UCB\n         A     R1,OFFSET           OFFSET OF FIELD WE WANT\n         EX    R15,CLCVOLEX        COMPARE CUU OR VOLSER\n         BNE   UCBSKP              IF NOT MATCHED, SKIP IT\nSNGVOL   DS    0H\n         TITLE 'PROCESS THIS UCB ----------------'\n         MVI   OUTMESS,C' '             CLEAR OUTPUT AREA\n         MVC   OUTMESS+1(L'OUTMESS-1),OUTMESS\n         MVC   UNIT,UCBNAME            XXX UBIT ADR\n         MVC   VOLSER(L'UCBVOLI),UCBVOLI  VOLSER\n*------- ----- SHOW NUMBER OF USERS\n         CLI   UCBDVCLS,UCB3DACC       IS IT DASD\n         BNE   SKPSPC0                 NO   SKIP\n         XR    R1,R1\n         IC    R1,UCBUSER              CONCURRENT USERS(+26X)\n         TM    DSADCB,DSADCBXA         MVS/XA?                 DDMMM84\n         BZ    *+8                     NO                      DDMMM84\n         LH    R1,UCBUSER              2BYTES IN XA            DDMMM84\n         CVD   R1,WD                   PACKED \"   \"\n         UNPK  OUTMUSER,WD             DISPLAY \"  \"\n         OI    OUTMUSER+L'OUTMUSER-1,C'0' FIX SIGN\nSKPSPC0  DS    0H\n*------- ----- SEE IF ALT PATH\n         TM    DSADCB,DSADCBXA         MVS/XA OR ABOVE?        DDMMM84\n         BZ    NOTXA                   NO                      DDMMM84\n         LR    R15,R8\n         SH    R15,=AL2(UCBCMSEG-UCB) ADDRESS OF PREFIX\n         USING UCB,R15\n         TM    FLAGMISC,CHPIDSW   CERTAIN CHPID WANTED?\n         BNO   ALLCHPID             NO\n         LA    R0,8              MAX OF 8 CHPIDS\n         LA    R14,UCBCHPS       @ FIRST CHPID\nCHPIDCHK DS    0H\n         CLC   CHPIDWNT,0(R14)    MATCH?\n         BE    ALLCHPID             YES, KEEP IT\n         LA    R14,1(R14)         NEXT CHPID\n         BCT   R0,CHPIDCHK        NO, TRY NEXT\n         B     UCBSKP             NO MATCH AT ALL, SKIP IT\nALLCHPID DS    0H\n         UNPK  OUTMALTC(9),UCBCHPS(5)  HANDLE 1ST 4 PATHS      DDMMM84\n         MVI   OUTMALTC+8,C' '         FIX UNPK DAMAGE         DDMMM84\n         TR    OUTMALTC(8),HEXTR-X'F0' MAKE DISPLAY ABLE       DDMMM84\n         IC    R15,UCBLPM              GET PATH BYTE           DDMMM84\n         DROP  R15\n         B     DOPATHXA                CONTINUE                DDMMM84\nNOTXA    DS    0H                      SP3 (&BELOW)            DDMMM84\n         TM    UCBFL5,X'01'           *XA UCBALTPH  ALTPATH?\n         BZ    SKPALT                  NO\n         L     R15,CVTPTR              CVT(+10)\n         L     R15,X'8C'(R15)          CVTILCH  LCH(+8C)\n         SR    R14,R14\n         IC    R14,UCBCMSEG+X'A'      *XA UCBLCI LCH INDEX(+A)\n         SLL   R14,5                   LCH DISPL\n         LA    R15,0(R14,R15)          LCH ENTRY\n         L     R14,LCHTCH-LCH(R15)     TCH PATH TABLE(+10)\n         LA    R14,2(R14)              PROPER SLOT\n         MVC   OUTMALTC,0(R14)         CHANNEL NUMBER\n         TR    OUTMALTC,HEXTR\n*------- ----- SHOW PATH DATA\n         IC    R15,UCBCMSEG+X'8'      *XAUCBCHM\nDOPATHXA DS    0H                      XA ENTRY (HANDLE 1ST 4  DDMMM84\n         SRL   R15,4                   ISOLATE NIBBLE\n         N     R15,=F'15'              \"\n*------- ----- SHOW NUMBER OF ONLINE PATHS\n         XR    R14,R14                                         25JUN84\n         IC    R14,PTHONTAB(R15)       XLATE TO ONLINE PATHS\n         TM    DSADCB,DSADCBXA         XA                      DDMMM84\n         BZ    DOPATHTR                NO-CONTINUE             DDMMM84\n         SH    R14,=H'4'                                       DDMMM84\n* A PATH BIT IN NON-XA: 0=ONLINE, 1=OFFLINE                    DDMMM84\n* A PATH BIT IN XA:     0=OFFLINE, 1=ONLINE                    DDMMM84\n         LPR   R14,R14                 FLIP FOR XA LOGIC       DDMMM84\nDOPATHTR DS    0H                                              DDMMM84\n         STC   R14,OUTMPTHN            SAVE # PATHS\n         TR    OUTMPTHN,HEXTR\n*------- ----- SEE IF MINPATHS SPEC'D\n         OC    MINPATHD,MINPATHD       NON-ZERO                25JUN84\n         BZ    SKPMINCK                NO-SKIP CHECK           25JUN84\n         C     R14,MINPATHD            PATHS AT OR ABOVE MIN   25JUN84\n         BL    UCBSKP                  NO - SKIP EM\nSKPMINCK DS    0H                      CONTINUE                25JUN84\n*------- ----- SEE IF MAXPATHS SPEC'D\n         OC    MAXPATHD,MAXPATHD       NON-ZERO\n         BZ    SKPMAXCK                NO-SKIP CHECK\n         C     R14,MAXPATHD            PATHS AT OR BELOW MAX?\n         BH    UCBSKP                  NO - SKIP EM\nSKPMAXCK DS    0H                      CONTINUE\n*------- ----- SHOW PATH MASK\n         SLL   R15,2                   *4=0,4,8,...\n         LA    R14,PATHMASK(R15)       CONVER PATH TO BITS\n         MVC   OUTMPTHM,0(R14)         NIBBLE IN BITS C'XXXX'\n         TM    DSADCB,DSADCBXA         XA                      DDMMM84\n         BZ    SKPALT                  NO-DON'T CHECK XA ONLY STUFF\n         LR    R15,R8\n         SH    R15,=AL2(UCBCMSEG-UCB) ADDRESS OF PREFIX\n         USING UCB,R15\n         TM    UCBIOSF1,UCBVALPH       PATHS VALIDATED?\n         DROP  R15\n         BNO   SKPALT                    YES, CONTINUE\n         MVI   OUTMPTHQ,C'?'             OTHERWISE, SHOW DOUBT\nSKPALT   DS    0H                      SKIP IF NO ALTS\n         TM    UCBSTAT,UCBONLI    IS IT ONLINE?\n         BNO   SKPSPC1            NO\n         CLI   UCBDVCLS,UCB3DACC       IS IT DASD\n         BNE   SKPSPC1                 NO   SKIP\n         MVC   OUTMESSV,UCBVOLI\n*------- ----- LSPACE\n         LA    R0,UCBCMSEG             UCB ADR\n         LA    R1,WORKA\n         SVC   78                      ISSUE LSPACE\n         MVC   SPACEEQ,=CL6' '     BLANK OUT THE 'SPACE='\nSKPSPC1  DS    0H\n         TM    UCBSTAT,UCBALOC    IS IT ALLOCATED?\n         BNO   NONALOC               NO\n         TM    FLAGFLAG,NONALCSW   ONLY NON-ALLOCATED WANTED?\n         BO    UCBSKP                YES\n         MVI   OUTALLOC,C'A'\n         B     ENDALOC\nNONALOC  DS    0H\n         TM    FLAGFLAG,ALCSW      ONLY ALLOCATED WANTED?\n         BO    UCBSKP                YES\nENDALOC  DS    0H\n         TM    UCBSTAT,UCBSYSR    IS IT SYSRES OR CONSOLE?\n         BNO   NONCONS               NO\n         MVI   OUTCONSL,C'C'       ASSUME CONSOLE\n         CLI   UCBDVCLS,UCB3DACC  IS IT DASDI\n         BNE   ISCONS                NO\n         MVI   OUTCONSL,C'*'       YES, SHOW SYSRES INSTEAD OF CONSOLE\n         B     ENDCONS\nNONCONS  DS    0H\n         CLI   UCBDVCLS,UCB3DACC  IS IT DASDI\n         BE    ENDCONS               YES, IGNORE CONSOLE SWITCHES\n         TM    FLAGFLA2,CONSW     ONLY CONSOLES WANTED?\n         BO    UCBSKP               YES\n         B     ENDCONS\nISCONS   DS    0H\n         TM    FLAGFLA2,NONCONSW  ONLY NON-CONSOLES WANTED?\n         BO    UCBSKP               YES\nENDCONS  DS    0H\n         CLI   UCBDVCLS,UCB3TAPE  IS IT TAPE?\n         BNE   ENDTAPE               NO\n         CLC   UCBVOLI,=XL6'00'    ANY VOLSER?\n         BE    NOVOLP                NO, DON'T PRINT IT\n         MVC   OUTMESSV,UCBVOLI\nNOVOLP   DS    0H\n         TM    UCBTFL1,UCBCSL      ACL PRESENT?\n         BNO   NONACL                NO\n         TM    FLAGFLA2,NOSTKSW    ONLY NON-ALC WANTED?\n         BO    UCBSKP                YES\n         MVI   OUTACL,C'S'\n         TM    UCBTFL1,UCBCSLAC    ACL ACTIVE?\n         BNO   ENDACL                NO\n         MVI   OUTACLAC,C'A'\n         B     ENDACL\nNONACL   DS    0H\n         TM    FLAGFLA2,STKSW      ONLY ALC WANTED?\n         BO    UCBSKP                YES\nENDACL   DS    0H\n         TM    UCBTBYT2,UCBCOMPA   IDRC?\n         BNO   NONIDRC               NO\n         TM    FLAGFLA2,NOIDRCSW   ONLY NON-IDRC WANTED?\n         BO    UCBSKP                YES\n         MVI   OUTIX,C'I'\n         B     ENDTAPE\nNONIDRC  DS    0H\n         TM    FLAGFLA2,IDRCSW     ONLY IDRC WANTED?\n         BO    UCBSKP                YES\nENDTAPE  DS    0H\n         MVC   OUTMESSU,UNIT           ADDR\n*------- ----- SEE IF INDEXED\n         TM    UCBSTAT,UCBONLI    IS IT ONLINE?\n         BNO   SKPSPC3A           NO\n         CLI   UCBDVCLS,UCB3DACC       IS IT DASDI\n         BNE   SKPSPC1A           NO\n         IC    R1,MOUNTWNT         FLAGS OF MOUNT TYPE WANTED\n         EX    R1,MOUNTCHK         DO WE WANT THIS ONE?\n         BZ    UCBSKP                NO, SKIP THIS UCB\n         CVAFTST  UCB=(R8)             TEST  VTOC\n         B     BRTBL(R15)              TEST  RETURN CODE\nMOUNTCHK TM    UCBSTAB,0\nBRTBL    B     RC0\n         B     RC4\n         B     RC8                     INDEXED\n         B     RC12\n         B     RC16\nRC8      MVI   OUTIX,C'I'\n         TM    FLAGFLAG,NONIXSW    ONLY NON-IX WANTED?\n         BO    UCBSKP                YES\n         B     ENDIX                 NO\nRC4      DS    0H\nRC0      DS    0H\n         TM    FLAGFLAG,IXSW       ONLY IX WANTED?\n         BO    UCBSKP                YES\nENDIX    DS    0H\n* CHECK FOR SMS MANAGED\n         TM    UCBFL5,X'20'        SMS?\n         BNO   NOTSMS                NO\n         TM    FLAGFLAG,NONSMSSW   ONLY NON-SMS WANTED?\n         BO    UCBSKP                YES, TRY NEXT UCB\n         MVI   OUTSMS,C'S'\n         B     ENDSMS\nNOTSMS   DS    0H\n         TM    FLAGFLAG,SMSSW      ONLY SMS WANTED?\n         BO    UCBSKP                YES, TRY NEXT UCB\nENDSMS   DS    0H\n         LR    R15,R8\n         SH    R15,=AL2(UCBCMSEG-UCB) ADDRESS OF PREFIX\n         USING UCB,R15\n         CLI   UCBSQC,X'0'         RESERVED?\n         BE    NONRSV                NO\n         DROP  R15\n         TM    FLAGFLAG,NONRSVSW  ONLY NON-RESERVED WANTED?\n         BO    UCBSKP               YES\n         MVI   OUTRSVD,C'R'\n         B     ENDRSV\nNONRSV   DS    0H\n         TM    FLAGFLAG,RESVSW    ONLY RESERVED WANTED?\n         BO    UCBSKP               YES\nENDRSV   DS    0H\n* CHECK MOUNT ATTRIBUTES\n         TM    UCBSTAB,UCBBPRV     PRIVATE?\n         BO    SETPRV                YES\n         TM    UCBSTAB,UCBBPUB     PUBLIC?\n         BO    SETPUB                YES\n         TM    UCBSTAB,UCBBSTR     STORAGE?\n         BO    SETSTR                YES\n         MVC   OUTMESSM,=C'???'\n         B     SKPSPC3\nSETPRV   MVC   OUTMESSM,=C'PRI'\n         B     SKPSPC3\nSETPUB   MVC   OUTMESSM,=C'PUB'\n         B     SKPSPC3\nSETSTR   MVC   OUTMESSM,=C'STG'\n         B     SKPSPC3\nSKPSPC1A DS    0H\n*        CLI   UCBDVCLS,UCB3TAPE   IF IT IS NOT TAPE OR DASD THEN\n*        BNE   SKPSPC3A              DON'T MOVE IN A VOLSER\nSKPSPC3  DS    0H\nSKPSPC3A DS    0H\n*------- ----- GET DEV INFO\n*                                      CALC % FULL\n         L     R15,=A(STCYLS)          GET DEVICE TABLE\nDEVLOC   DS    0H\n         CLI   UCBDVCLS,X'41'      CTC?\n         BNE   D3380STR              NO, CONTINUE NORMALLY\n         LA    R15,CTC             YES, USE CTC FIELDS\n         B     DEVGOT\n*\n*        SPECIAL CODE FOLLOWS FOR 3380 AND 3390 DEVICES.\n*        ALL 3380'S AND ALL 3390'S HAVE THE SAME DEVICE\n*        CODE, BUT DIFFERENT MODELS OF THEM HAVE DIFFERENT\n*        NUMBERS OF CYLINDERS.\n*\nD3380STR DS    0H\n         CLC   UCBUNTYP,=X'0E00'       IS IT A 3380?\n         BNE   D3380END                NO - PROCESS NORMALLY\n         XR    R14,R14\n         L     R14,UCBEXTPT            UCB EXTENTION\n         LA    R14,0(R14)              TURN OF HIGH BITS\n         LTR   R14,R14                 IS THERE ONE?\n         BZ    D3380END                IF NONE THEN PROCESS NORM.\n         L     R14,DCEUCBEX(0,R14)     @ OF DCE\n         LA    R14,0(R14)              TURN OF HIGH BITS\n         LTR   R14,R14                 IF NO DCE THEN\n         BZ    D3380END                  PROCESS NORMALLY\n         L     R15,=A(STCYL80)         @ 3380 TABLE\nDEVLOOK0 DS    0H\n         LH    R14,DCEUDCYL-DCE(R14) # CYL + ALT CYL\n         BCTR  R14,0               MINUS 1 ALT CYL FOR THESE DEVICES\nDEVLOOK  DS    0H                  LOOK THRU TABLE FOR CORRECT # CYLS\n         CH    R14,STCYLMAX-STCYLS(R15)\n         BNH   DEVLOOKG            GOT IT, COMPUTE TRKS\n         LA    R15,(STCYLS1-STCYLS)(R15) NEXT ENTRY\n         B     DEVLOOK\nDEVLOOKG DS    0H\n*   SAVE TABLE ENTRY IN GETMAINED AREA\n         MVC   TEMPTBLE(TEMPTBLL),0(R15)\n         LA    R15,TEMPTBLE        AND POINT TO IT\n         STH   R14,STCYLMAX-STCYLS(R15)   SAVE # CYLS\n         MH    R14,STCYLTRK-STCYLS(R15)   NUM TRKS PER DEVICE\n         STH   R14,STCYLTTK-STCYLS(R15)    AND SAVE IT\n         B     DEVGOT              CONTINUE NORMAL CODE\nD3380END DS    0D\n         CLC   UCBUNTYP,=X'0F00'       IS IT A 3390?\n         BNE   D3390END                NO - PROCESS NORMALLY\n         XR    R14,R14\n         L     R14,UCBEXTPT            UCB EXTENTION\n         LA    R14,0(R14)              TURN OF HIGH BITS\n         LTR   R14,R14                 IS THERE ONE?\n         BZ    D3390END                IF NONE THEN PROCESS NORM.\n         L     R14,DCEUCBEX(0,R14)     @ OF DCE\n         LA    R14,0(R14)              TURN OF HIGH BITS\n         LTR   R14,R14                 IF NO DCE THEN\n         BZ    D3390END                  PROCESS NORMALLY\n         L     R15,=A(STCYL90)     @ 3390 TABLE\n         B     DEVLOOK0            AND LOOK UP\nD3390END DS    0D\n         CLC   UCBDVCLS(2),(STCYLS-STCYLS)(R15)\n         BE    DEVGOT\n         CLI   (STCYLS-STCYLS)(R15),X'FF'\n         BE    DEVGOT\n         LA    R15,(STCYLS1-STCYLS)(R15)  NEXT\n         B     DEVLOC                  LOOP\nDEVGOT   DS    0H\n         CLI   UCBDVCLS,UCB3DACC       IS IT DASDI\n         BNE   DONTSPC             NO\n         TM    UCBSTAT,UCBONLI    IS IT ONLINE?\n         BO    DOSPC2             YES\nDONTSPC  DS    0H\n         MVC   OUTMESSP,=C'  '\n         MVC   OUTMESSD,(STCYLNAM-STCYLS)(R15) DEV. NAME\n         TM    UCBSTAT,UCBONLI    IS IT ONLINE?\n         BO    SKPSPC2            YES\n         MVC   OUTMESSV,=C'OFFLINE'\n         NC    OUTMESSV,=6AL1(X'FF'-X'40')  CONVERT TO LOWER CASE\n         B     SKPSPC2            SKIP CALCULATIONS\nDOSPC2   DS    0H\n         MVC   OUTMESSD,(STCYLNAM-STCYLS)(R15) DEV. NAME\n         MVC   OUTMESST,(STCYLTYP-STCYLS)(R15) DEVICE TYPE MODIFIER\n         PACK  WD,WA#CYL               # FREE CYL\n         CVB   R0,WD                   \"\n         MH    R0,(STCYLTRK-STCYLS)(R15)       #TRKS/CYL\n         PACK  WD,WA#TRK               # FREE TRKS\n         CVB   R14,WD                  \"\n         AR    R0,R14                  TOTAL FREE TRKS ON VOL\n         SRDA  R0,32                   SHIFT TO R1\n         M     R0,=F'100'              FOR % CALC\n         A     R1,=F'50'               \"\n         XR    R14,R14\n         ICM   R14,B'0011',(STCYLTTK-STCYLS)(R15)\n         DR    R0,R14                  CALC % FREE\n         CVD   R1,WD                   ANSWER\n         UNPK  OUTMESSP,WD\n         OI    OUTMESSP+L'OUTMESSP-1,C'0' FIX SIGN\n         CLC   OUTMESSP,MAXPCTD   HIGHER THAN MAX WANTED?\n         BH    UCBSKP             YES - DON'T PRINT\n         CLC   OUTMESSP,MINPCTD   LOWER THAN MIN WANTED?\n         BL    UCBSKP             YES - DON'T PRINT\n         XR    R14,R14\n         ICM   R14,B'0011',(STCYLTTK-STCYLS)(R15)\n         A     R14,WKTOTTTK            TOT TRKS SEEN\n         ST    R14,WKTOTTTK\n*\n         LH    R14,(STCYLMAX-STCYLS)(R15)       #CYLS/VOL\n         A     R14,WKTOTCYL            TOT CYLS SEEN\n         ST    R14,WKTOTCYL\n*\n         PACK  WD,WA#CYL               # FREE CYL\n         CVB   R0,WD                   \"\n         LR    R14,R0\n         A     R14,WKFRECYL            TOT FREE CYLS\n         ST    R14,WKFRECYL\n*\n         MH    R0,(STCYLTRK-STCYLS)(R15)       #TRKS/CYL\n         PACK  WD,WA#TRK               # FREE TRKS\n         CVB   R14,WD                  \"\n         AR    R0,R14                  TOTAL FREE TRKS ON VOL\n*\n         LR    R14,R0\n         A     R14,WKFRETRK            TOT FREE TRKS - ALLVOL\n         ST    R14,WKFRETRK\n*\nSKPSPC2  DS    0H\n*\n         TPUT2 OUTMESS     TPUT MESSAGE\n         L     R1,WKTOTVOL         # VOLUMES SO FAR\n         LA    R1,1(R1)            PLUS ONE FOR THIS ONE\n         ST    R1,WKTOTVOL         YIELDS NEW # SO FAR\nTESTONE  LTR   R6,R6\n         B     UCBSKP                  TRY MORE VOLSERS GROUP\n*****    BNZ   SECVOL\nUCBSKP   DS    0H                      INCREMENT BY 2\n         B     UCBLOOP                 CONTINUE SEARCHING SVC TABLE\nUCBEND   LTR   R6,R6                   IS IT ALL\n         BZ    DONE                    YES\n         CLI   UNIT,C' '               WERE ANY VOLSERS FOUND\n         BNE   DONE                    YES-NO MSG\n         MVC   OUTMESS(L'NOVOL),NOVOL\n         MVC   OUTMESS+8(8),VOLSER\n         TPUT2 OUTMESS                 TPUT  MESSAGE\nSECVOL   L     R6,8(R6)\n         LA    R6,0(R6)\n         LTR   R6,R6                   IS THERE A SECOND VOLUME\n         BNZ   GETVOL\nDONE     IKJRLSA   ANS                 FREE PARSE AREA\n         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?\n         BNO   DONE1                 NO, KEEP GOING\n         CLC   =CL4' ',CNVTUTAB+8  DID THE GENERIC HAVE NO ENTRIES?\n         BE    DONE1                 YES, NO FREEMAIN REQUIRED\n         ICM   R1,B'1111',CNVTUTAB+8  @ UCB POINTER TABLE\n         BZ    DONE1               B IF NO AREA TO FREEMAIN\n         XR    R0,R0\n         ICM   R0,B'0111',1(R1)    LENGTH TO FREEMAIN\n         BZ    DONE1               SKIP FREEMAIN IF NONE TO FREE\n         ICM   R0,B'1000',0(R1)    PUT THE SUBPOOL IN\n         FREEMAIN R,LV=(0),A=(1)         FREE IT\nDONE1    DS    0H                      TO FREE\n         @ED   OTFRECYL,WKFRECYL\n         @ED   OTFRETRK,WKFRETRK\n         @ED   OTTOTCYL,WKTOTCYL\n         @ED   OTTOTTTK,WKTOTTTK\n         @ED   OTTOTVOL,WKTOTVOL\n         TM    FLAGMISC,NOHEADSW   HEADERS WANTED?\n         BO    NOHEAD2               NO\n         TPUT2 HDR3S     TPUT2 MESSAGE\n         TPUT2 OTTOTS    TPUT2 MESSAGE\nNOHEAD2  DS    0H\n         @RET  EQ,RC=0\nRC12     TPUT2 NOVIB,L'NOVIB\n         B     TESTONE\nRC16     TPUT2 NOTDA,L'NOTDA\n         B     TESTONE\nERROR    TPUT2 ERRMESS,L'ERRMESS           TGET/TPUT2\n         B     DONE1\nCHPIDERR TPUT2 ERRCHPID                    TGET/TPUT2\n         B     DONE1\nDOTPUT   DS    0H\n         PUSH  PRINT\n         PRINT GEN\n         PUTLINE OUTPUT=((R15),SINGLE,DATA),MF=(E,IOPLSECT)\n         POP   PRINT\n         BR    R11\n         TITLE 'LSPC CONSTANTS, VARIABLES, AND DSECTS'\nZLINK    LINK  EP=IEFEB4UV,SF=L,                                       X\n               ERRET=UCBEND\nCLCVOLEX CLC   0(*-*,R14),0(R1)    COMPARE WANTED CUU OR VOLSER\nPUTLINE  PUTLINE MF=L\nCLEAR    DC    X'C11140403C404000'\nEXMVC    MVC   0(0,9),0(7)\nADDPCL   DC    V(PARSEPCL)\n         DC    H'0016'\nNOVIB    PUTLDC C'VIB NOT INIT'\nNOTDA    PUTLDC C'NOT DASDI   '\nERRMESS  PUTLDC C'PARSE FAILED'\nERRCHPID PUTLDC C'CHPID MUST BE 2 HEX CHARACTERS'\nUNITMESS DC    C'ADDRESS'\nGENMESS  DC    C'GENERIC'\nCHPIDMES DC    C'CHPID  '\nZOVOL    DC    C'VOLUME  VVVVVVVV NOT MOUNTED'\nHDR1S   PUTLDC C' SPACE-4.3  FLAGS    --F R E E-- / -CONTIG-  DEV    % .\n                 NO  -PATH- ALT.PATH MNT'\nHDR2S   PUTLDC C'                   #CYL,#TRK,#EXT/#CYL,#TRK        FRE.\n                USR #/MASK /CHPIDS '\nHDR3S   PUTLDC C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK  #-LISTED'\n*              C' Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9'\nOTMASK   DC    X'40206B2020206B202120'  Z,ZZZ,ZZ9\nOUTMESSA PUTLDC CL79' '                MESSAGE AREA\nOTTOTSA PUTLDC C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK  #-LISTED'\n*\nCNVTUFLG DC    X'1000'             IEFEB4UV FLAGS               TANSKY\n*\nTOHEX    DC    X'CACBCCCDCDCF'\n         ORG   TOHEX+C'0'-C'A'\n         DC    C'0123456789'\n         ORG   ,\nHEXTR    DC    C'0123456789ABCDEF'\n*                  0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F  - MASK BITS\nPTHONTAB DC    AL1(4,3,3,2,3,2,2,1,3,2,2,1,2,1,1,0) - # ZEROS\nPATHMASK DC    C'0000',C'0001',C'0010',C'0011'      0-3 MASK\n         DC    C'0100',C'0101',C'0110',C'0111'      4-7 MASK\n         DC    C'1000',C'1001',C'1010',C'1011'      8-B MASK\n         DC    C'1100',C'1101',C'1110',C'1111'      C-F MASK\n         LTORG\nZFFSET   DC    A(UCBVOLI-UCBCMSEG)\n*        DEVICE CHARACTERISTICS TABLE\n         PUSH  PRINT\n         PRINT GEN\nCTC      DS    0H    CTC ENTRY\n         DEVTAB 65,00,0000,CTC,'   ',01\nSTCYL80  DS    0H    3380 TABLE\n         DEVTAB UCB3DACC,0E,0884,3380,'-D-',15\n         DEVTAB UCB3DACC,0E,0885,3380,'-D ',15\n         DEVTAB UCB3DACC,0E,1769,3380,'-E-',15\n         DEVTAB UCB3DACC,0E,1770,3380,'-E ',15\n         DEVTAB UCB3DACC,0E,2654,3380,'-K-',15\n         DEVTAB UCB3DACC,0E,2655,3380,'-K ',15\n         DEVTAB UCB3DACC,0E,9999,3380,'-K+',15\nSTCYL90  DS    0H    3390 TABLE\n         DEVTAB UCB3DACC,0F,1112,3390,'-1-',15\n         DEVTAB UCB3DACC,0F,1113,3390,'-1 ',15\n         DEVTAB UCB3DACC,0F,2225,3390,'-2-',15\n         DEVTAB UCB3DACC,0F,2226,3390,'-2 ',15\n         DEVTAB UCB3DACC,0F,3338,3390,'-3-',15\n         DEVTAB UCB3DACC,0F,3339,3390,'-3 ',15\n         DEVTAB UCB3DACC,0F,9999,3390,'-3+',15\nSTCYLS   DS    0H                  TABLE OF DEVICE TYPE TO MAX. CYLS\n         DC    AL1(UCB3DACC),X'09' DEVICE CLASS AND TYPE\nSTCYLMAX DC    H'404'              MAX CYLS\nSTCYLNAM DC    CL4'3330'           EBCDIC NAME\nSTCYLTYP DC    CL3'-1 '            EBCDIC DEVICE MODIFIER\nSTCYLTRK DC    H'19'               TRACKS PER CYLINDER\nSTCYLTTK DC    AL2(404*19)         TRACKS PER VOL\nSTCYLS1  DS    0H                  FOR SIZE OF ENTRY CALC\n*        DEVTAB &CLASS,&TYPE,&CYL,&NAME,&MODEL,&TRK\n         DEVTAB UCB3DACC,0D,0808,3330,'-11',19\n         DEVTAB UCB3DACC,0B,0555,3350,'   ',30\n         DEVTAB UCB3TAPE,03,0000,3400,'   ',01\n         DEVTAB UCB3TAPE,80,0000,3480,'   ',01\n         DEVTAB UCB3DISP,09,0000,327X,'   ',01\n         DEVTAB UCB3DISP,0B,0000,328X,'   ',01\n         DEVTAB UCB3DISP,05,0000,37X5,'   ',01\n         DEVTAB UCB3COMM,91,0000,2702,'   ',01\n         DEVTAB UCB3COMM,92,0000,2701,'   ',01\n         DEVTAB UCB3COMM,93,0000,2703,'   ',01\n         DEVTAB UCB3COMM,04,0000,2955,'   ',01\n         DEVTAB UCB3COMM,15,0000,37X5,'   ',01\n         DEVTAB UCB3DACC,0E,0885,3380,'   ',15\n         DEVTAB UCB3DACC,0F,2226,3390,'-2 ',15\n         DEVTAB UCB3UREC,00,0000,DUMM,'   ',01\n         DEVTAB UCB3UREC,09,0000,3211,'   ',01\n         DEVTAB UCB3UREC,0E,0000,3800,'   ',01\n         DEVTAB UCB3UREC,04,0000,2501,'   ',01\n         DEVTAB UCB3UREC,06,0000,3505,'   ',01\n         DEVTAB UCB3UREC,08,0000,1403,'   ',01\n         DEVTAB UCB3UREC,0A,0000,1443,'   ',01\n         DEVTAB UCB3UREC,0B,0000,3203,'   ',01\n         DEVTAB UCB3UREC,0C,0000,3525,'   ',01\n         DEVTAB UCB3UREC,16,0000,3890,'   ',01\n         DEVTAB UCB3UREC,42,0000,3851,'   ',01\n         DEVTAB UCB3UREC,11,0000,3263,'   ',01\n         DEVTAB UCB3UREC,4C,0000,3838,'   ',01\n         DEVTAB UCB3UREC,19,0000,3895,'   ',01\n         DEVTAB UCB3UREC,11,0000,4245,'   ',01\n         DEVTAB UCB3UREC,13,0000,4248,'   ',01\n         DEVTAB UCB3COMM,F1,0000,3791,'   ',01\n         DEVTAB UCB3COMM,11,0000,2702,'   ',01\n         DEVTAB UCB3DACC,08,0200,2314,'   ',20\n         DEVTAB UCB3DACC,0A,0696,3340,'   ',12\n         DEVTAB UCB3DACC,0C,0959,3375,'   ',12\n         DEVTAB UCB3TAPE,81,0000,9348,'   ',01\n*        DEVTAB UCB3DACC,07,????,2305,'-2 ',??\n         DEVTAB UCB3DISP,10,0000,TERM,'-I ',01\n         DEVTAB UCB3DISP,20,0000,TERM,'-II',01\n         DEVTAB UCB3DISP,30,0000,TELE,'   ',01\n         DEVTAB UCB3DISP,40,0000,TELE,'-I ',01\n         DEVTAB UCB3DISP,50,0000,TELE,'-II',01\n         DEVTAB UCB3DISP,60,0000,WTTA,'   ',01\n         DEVTAB UCB3DISP,70,0000,SYNC,'-1 ',01\n         DEVTAB UCB3DISP,80,0000,IBM-,'III',01\n         DEVTAB UCB3DISP,90,0000,SYNC,'-II',01\n         DEVTAB UCB3DISP,0F,0000,CNTL,' UN',01\n         DEVTAB      255,FF,9999,UNKN,'OWN',19\n*\n         POP   PRINT\n         PUSH  PRINT                                           25JUN84\n         PRINT  GEN                                            25JUN84\nPARSEPCL IKJPARM  DSECT=IKJPARMD\nVOL      IKJIDENT 'VOLUME',UPPERCASE,MAXLNTH=8,FIRST=ALPHANUM,       XXX\n               OTHER=ANY,LIST\nMINPATHK IKJKEYWD ,                                            25JUN84\n         IKJNAME 'MINPATHS',SUBFLD=MINPATHS                    25JUN84\nMAXPATHK IKJKEYWD ,                                            25JUN84\n         IKJNAME 'MAXPATHS',SUBFLD=MAXPATHS                    25JUN84\nUNITWANT IKJKEYWD ,\n         IKJNAME  'UNIT',SUBFLD=UNITPARS\nCUU      IKJKEYWD ,\n         IKJNAME 'CUU'\n         IKJNAME 'ADDRESS'         SAME AS ABOVE\nGENERIC  IKJKEYWD ,\n         IKJNAME 'GENERIC'\nCHPID    IKJKEYWD ,\n         IKJNAME 'CHPID'\nNOHEADER IKJKEYWD ,\n         IKJNAME 'NOHEADER'\nSMSKEYWD IKJKEYWD\n         IKJNAME 'SMS'\n         IKJNAME 'NONSMS'\nIXKEYWD  IKJKEYWD\n         IKJNAME 'IX'\n         IKJNAME 'NONIX'\nALKEYWD  IKJKEYWD\n         IKJNAME 'ALLOC'\n         IKJNAME 'NONALLOC'\nRSVKEYWD IKJKEYWD\n         IKJNAME 'RESERVED'\n         IKJNAME 'NONRESER'\nCONKEYWD IKJKEYWD\n         IKJNAME 'CONSOLE'\n         IKJNAME 'NONCONSO'\nALCKEYWD IKJKEYWD\n         IKJNAME 'STACKER'\n         IKJNAME 'NONSTACK'\nIDRKEYWD IKJKEYWD\n         IKJNAME 'IDRC'\n         IKJNAME 'NONIDRC'\nOFFLINE  IKJKEYWD DEFAULT='ONLINE'\n         IKJNAME 'ONLINE'\n         IKJNAME 'OFFLINE'\nMOUNT    IKJKEYWD DEFAULT='MOUNT(ALL)'\n         IKJNAME 'MOUNT',SUBFLD=MOUNTTYP\nMINPCTK  IKJKEYWD DEFAULT='MINPCT(00)'\n         IKJNAME 'MINPCT',SUBFLD=MINPCT\nMAXPCTK  IKJKEYWD DEFAULT='MAXPCT(99)'\n         IKJNAME 'MAXPCT',SUBFLD=MAXPCT\nMOUNTTYP IKJSUBF\nMOUNTSTG IKJKEYWD\n         IKJNAME 'S'\n         IKJNAME 'ST'\n         IKJNAME 'STR'\n         IKJNAME 'STG'\n         IKJNAME 'STORAGE'\nMOUNTPUB IKJKEYWD\n         IKJNAME 'PUBLIC'\nMOUNTPRI IKJKEYWD\n         IKJNAME 'PRIVATE'\nMOUNTALL IKJKEYWD\n         IKJNAME 'ALL'\nUNITPARS IKJSUBF\nDASD     IKJKEYWD\n         IKJNAME 'DASD'\n         IKJNAME 'NODASD'\nTAPE     IKJKEYWD\n         IKJNAME 'TAPE'\n         IKJNAME 'NOTAPE'\nCOMM     IKJKEYWD\n         IKJNAME 'COMM'\n         IKJNAME 'NOCOMM'\nUREC     IKJKEYWD\n         IKJNAME 'UR'\n         IKJNAME 'NOUR'\nDISP     IKJKEYWD\n         IKJNAME 'GRAPH'\n         IKJNAME 'NOGRAPH'\nUNITALL  IKJKEYWD\n         IKJNAME ALL\nMAXPATHS IKJSUBF\nMAXPATHI IKJIDENT 'MAXPATHS',MAXLNTH=1,                        25JUN84 X\n               FIRST=NUMERIC,                                  25JUN84 X\n               PROMPT='MAXIMUM NUMBER OF PATHS TO DEVICE'      25JUN84\nMINPATHS IKJSUBF\nMINPATHI IKJIDENT 'MINPATHS',MAXLNTH=1,                        25JUN84 X\n               FIRST=NUMERIC,                                  25JUN84 X\n               PROMPT='MINIMUM NUMBER OF PATHS TO DEVICE'      25JUN84\nMINPCT   IKJSUBF ,\nMINPCTI  IKJIDENT 'MINPCT',MAXLNTH=2,                                  X\n               FIRST=NUMERIC,OTHER=NUMERIC,                            X\n               PROMPT='MINIMUM PERCENT UTILIZATION TO PRINT'\nMAXPCT   IKJSUBF ,\nMAXPCTI  IKJIDENT 'MAXPCT',MAXLNTH=2,                                  X\n               FIRST=NUMERIC,OTHER=NUMERIC,                            X\n               PROMPT='MAXIMUM PERCENT UTILIZATION TO PRINT'\n         IKJENDP\n         POP   PRINT                                           25JUN84\n*        EQUATES\nDSA      DSECT\n*        WORK AREA FOR  LSPC CP\nANS      DS    F\nECB      DS    F\nPPL      DS    0F\nUPT      DS    F\nECT      DS    F\nECBP     DS    F\nPCL      DS    F\nANSW     DS    F\nCOMBUF   DS    F\nDSADCB   DS    X                       COPY OF CVTDCB - OP SYS\nDSADCBXA EQU   X'80'                   XA OPERATING SYSTEM\nWK       DS    F\nWKCLRS   EQU   *                        CLEAR AREA AT INIT\n         SPACE 1\nFLAGMISC DS    C                   MISCELLANEOUS FLAGS\nOFFSW    EQU   X'80'                 OFFLINE UNITS WANTED\nGENSW    EQU   X'40'                 GENERIC KEYWORD SPECIFIED\nCHPIDSW  EQU   X'20'                 IDRC SPECIFIED\nNOHEADSW EQU   X'10'                 NOHEADER SPECIFIED\n         SPACE 1\nFLAGFLAG DS    C                   SELECT ON WHICH FLAGS?\nNONRSVSW EQU   X'80'\nRESVSW   EQU   X'40'\nNONALCSW EQU   X'20'\nALCSW    EQU   X'10'\nNONIXSW  EQU   X'08'\nIXSW     EQU   X'04'\nNONSMSSW EQU   X'02'               NONSMS KEYWORD SPECIFIED\nSMSSW    EQU   X'01'                 SMS KEYWORD SPECIFIED\n         SPACE 1\nFLAGFLA2 DS    C                   SELECT ON WHICH FLAGS? (CONT'D)\nNOSTKSW  EQU   X'20'\nSTKSW    EQU   X'10'\nNOIDRCSW EQU   X'08'\nIDRCSW   EQU   X'04'\nNONCONSW EQU   X'02'\nCONSW    EQU   X'01'\n         SPACE 1\nMOUNTWNT DS    C                   FLAGS OF MOUNT ATTRIBUTES WANTED\nMAXPATHD DS    F                       MINIMUM NUMBER OF PATHS\nMINPATHD DS    F                       MINIMUM NUMBER OF PATHS\nWKFRETRK DS    F                        TOT FREE TRKS ON ALL V\nWKFRECYL DS    F                        TOT FREE CYLS ON ALL V\nWKTOTCYL DS    F                        TOT      CYLS ON ALL V\nWKTOTTTK DS    F                        TOT      TRKS ON ALL V\nWKTOTVOL DS    F                        TOT      VOLUMES LISTED\n         DS    0F                  PUT CNVTUTAB ON A FULLWORD   TANSKY\nCNVTUTAB DS    CL20                TABLE FOR IEFEB4UV           TANSKY\nWKCLRL   EQU   *-WKCLRS\nNOVOL    DC    C'VOLUME  VVVVVVVV NOT MOUNTED'\nOFFSET   DC    A(UCBVOLI-UCBCMSEG) NOT A CONSTANT, PROGRAM MIGHT RESET\nTEMPTBLE DEVTAB UCB3DACC,0F,2226,3390,'-2 ',15\nTEMPTBLL EQU   *-TEMPTBLE\nVLINK    LINK  EP=IEFEB4UV,SF=L,                                TANSKY X\n               ERRET=UCBEND\nVLINKLEN EQU   *-VLINK\nWD       DS    D\nWLOOKUP  DS    F\n******** ***** OUTPUT TOTALS\nOTTOTS  PUTLDC C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK  #-LISTED'\n*              C' Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9'\nOTTOTCYL EQU   OTTOTS+00,10\nOTTOTTTK EQU   OTTOTS+10,10\nOTFRECYL EQU   OTTOTS+20,10\nOTFRETRK EQU   OTTOTS+30,10\nOTTOTVOL EQU   OTTOTS+40,10\n******** ***** OUTPUT MESSAGE\nOUTMESS  PUTLDC CL79' '                MESSAGE AREA\n         ORG   OUTMESS                 RE-MAP\nOUTMESSV DS    CL6,C                   VOLSER\nOUTMESSU DS    CL3,C                   UNIT\nOUTIX    DS    C                       INDEXED VTOC\nOUTALLOC DS    C                   ALLOCATED FLAG\nOUTSMS   DS    C                   SMS CONTROLLED\nOUTCONSL DS    C                   CONSOLE OR SYSRES\nOUTRSVD  DS    C                   HARDWARE RESERVE\n         DS    2C                  FILLER\n         DS    C                   SPACER\n         ORG   *-6                 ROOM FOR \"SPACE='\nWORKA    DS    CL30                    AREA FOR LSPACE RETURN\nSPACEEQ  EQU   WORKA,6             THE 'SPACE=' OF LSPACE RETURN\nWA#CYL   EQU   WORKA+06,4              FREE CYL\nWA#TRK   EQU   WORKA+11,4              FREE TRK\nWA#EXT   EQU   WORKA+16,4              EXTENTS\nWA#CCYL  EQU   WORKA+21,4              CONTIG. CYL\nWA#CTRK  EQU   WORKA+26,4              CONTIG. TRK\n         DS    C                       FILLER\nOUTMESSD DS    CL4                     DEV NAME 3380/3350\nOUTMESST DS    CL3,C                   DEVICE MODIFIER\nOUTMESSP DS    CL2,C                   %FULL\nOUTMUSER DS    CL3,C                   UCBUSER-CONC. USERS\nOUTMPTHN DS    C,CL1                   PATHS ONLINE\nOUTMPTHM DS    CL4                     PATH MASK\nOUTMPTHQ DS    CL1                     PATHS VALID?\nOUTMALTX DS    CL3,CL6,C               ALT CHAN(OR CHPIDS IN XA)\nOUTMALTC EQU   OUTMALTX+1,1            ALT CHAN(MIDDLE POS.)\nOUTMESSM DS    CL3\n         ORG   OUTMESSM\nOUTACL   DS    C                   AUTO CART LOADER (STACKER)\nOUTACLAC DS    C                   ACL IN USE\n         ORG   ,\n******** ***** ************************ **********************\nUNITSTR  DS   CL1                  BIT SWITCHES FOR UNIT TYPES WANTED\nVOLSER   DS   CL8       VOLSER\nUNIT     DS   CL3       UNIT\nCHPIDWNT DS   CL1       CHPID SPECIFIED ON COMMAND\nMINPCTD  DS    CL2\nMAXPCTD  DS    CL2\n******** ***** ************************ **********************\n*\n***            THIS CODE COPIED FROM (TSUCBSCN)\n*\n******** ***** *********************** START OF UCB LOOKUP DSA\nDSXALIST DS    0F                      PARMLIST FOR UCB\nDSXAWA   DS    F                       %100-BYTE WORK AREA\nDSXADEVT DS    F                       %DEV TYPE TO SEARCH\nDSXAUCB  DS    F                       %UCB FULL WORD PTR\n         DS    0D                      FOLLOWING MUST BE ALIGNED\nDSXAWORK DS    CL100                   UCB WORK AREA\nDSXAEUCB EQU   DSXAWORK+00,04          EMULATION CURR. UCB PTR\nDSXAEILK EQU   DSXAWORK+04,04          EMULATION CVTILK2 ADDR\nDSXACLAS DS    CL1                     DEVICE CLASS TO SEARCH\nDSXAUCBP DS    F                       %UCB\n******** ***** *********************** END OF UCB LOOKUP DSA\nDSAREGS  DS    5F                 TPUT2 SAVE AREA\nIOPLSECT EQU   *\nIOPLUPT  DS    A                  PTR TO UPT\nIOPLECT  DS    A                  PTR TO ECT\nIOPLECB  DS    A                  PTR TO USER'S ECB\nIOPLIOPB DS    A                  PTR TO THE I/O SERVICE RTN PARM BLOCK\nDSAPUTL  PUTLINE MF=L\nDSAPUTLL EQU  *-DSAPUTL\nDSAEND   EQU  *                         LENGTH OF WORK\n         IEFUCBOB PREFIX=YES           UCB\n         CVT   DSECT=YES               CVT\n         IECDDCE                       DCE\nLCH      DSECT                         LCH\n         ORG   LCH+16\nLCHTCH   DS    A\nCSD      DSECT                         CSD\n         ORG   CSD+8\nCSDCPUAL DS    XL2\nCPU1     EQU   X'40'\nCPU2     EQU   X'20'\n         END  ,\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LSPCHELP": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x93(_\\x00\\x94\\x00o\\x10\\x19\\x00p\\x00L\\x00;\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1993-10-12T00:00:00", "modifydate": "1994-01-06T10:19:00", "lines": 112, "newlines": 76, "modlines": 59, "user": "VGCART"}, "text": ")F Function -\n        The LSPC command can be used to display attributes of devices.\n   If the device is direct access (DASD), space information and mount\n   status (private, storage, or public) will be displayed.  Space will\n   be displayed in format of free cyls, free trks, no. of free extents,\n   contiguous cyls and contiguous trks.\n\n        The output display format is explained by issuing\n            \"HELP LSPC OP(OUTPUT)\"\n\n        This help member corresponds to version 4.3\n\n)X Syntax -\n     LSPC volser/address/ALL 'ADDRESS'/'GENERIC'/'CHPID' 'OFFLINE'\n          UNIT(type...) MINPCT(##) MAXPCT(##) MINPATH(#) MAXPATH(#)\n          MOUNT(type...) SMS/NONSMS IX/NONIX ALLOC/NONALLOC\n          RESERVED/NONRESER CONSOLE/NONCONSO STACKER/NONSTACK\n          IDRC/NONIDRC\n     if any keywords are specified, volser/address/ALL must be also.\n     Default - All online DASD\n\n)O Keywords -\n))volser    - volume serial of the direct access volume for which\n              unused space is to be displayed.  All volsers which start\n              with this string will be displayed.\n\n))address   - specify the UCB address of the volume for which unused\n              space is to be displayed.  All addresses which start with\n              this number will be displayed (e.g. you can specify 1A to\n              display all units on 1A0 thru 1Af).  If you choose this,\n              you must also specify 'ADDRESS'.\n\n))ALL       - All devices (as modified by other operands) will be used\n\n))ADDRESS   - The first (positional) operand specifies an address\n              rather than a volser.\n\n))GENERIC   - The first (positional) operand specifies an esoteric\n              or a generic device type (such as TAPE or 3390).\n              When using this operand, the UNIT keyword will be syntax\n              checked but ignored.\n\n))CHPID     - The first (positional) operand specifies a 2-character\n              hex CHPiD rather than a volser.  All devices on that\n              CHPiD will be displayed.\n\n))OFFLINE   - Display offline units in addition to online units\n\n))MINPCT    - Only display volumes with at least ##% percent freespace.\n\n))MAXPCT    - Only display volumes with at most ##% percent freespace.\n\n))MINPATH   - Only display volumes with at least # functioning paths.\n\n))MAXPATH   - Only display volumes with at most # functioning paths.\n\n))UNIT      - Limit the display to the specified unit type.  Options\n              are:\n              ALL            - all devices except those excluded\n              DASD/NODASD\n              TAPE/NOTAPE\n              UR/NOUR        - Unit Record\n              GRAPH/NOGRAPH  - CRT's\n              COMM/NOCOMM    - Telecommunications devices\n))MOUNT     - Limit the display to the specified mount attributes.\n              This operand is only meaningful for DASD.  Options are:\n              STORAGE (or STG or STR) - devices mounted storage\n              PRIVATE                 - devices mounted private\n              PUBLIC                  - devices mounted public\n              ALL  (default)          - don't check mount attribute\n))SMS       - Limit the display of dasd to SMS managed volumes\n))NONSMS    - Do not show SMS managed volumes\n))IX        - Limit the display of DASD to those with Indexed VTOCs\n))NONIX     - Do not show DASD with Indexed VTOCs\n))ALLOC     - Show only allocated devices\n))NONALLOC  - Do not show allocated devices\n))RESERVED  - Limit the display of DASD to those hardware RESERVEd\n))NONRESER  - Do not show DASD with hardware RESERVEs\n))CONSOLE   - Limit the display of GRAPHIC devices to active consoles\n))NONCONSO  - Do not show active consoles\n))STACKER   - Limit the display of TAPE to those with ACL stackers\n))NONSTACK  - Do not show TAPEs with ACL stackers\n))IDRC      - Limit the display of TAPE to those IDRC capable\n))NONIDRC   - Do not show TAPEs that are IDRC capable\n))OUTPUT\n            - There is one line per device.  The format is:\n volser cuu flags space-display device-type %-free #users path-info mnt\n\n \"volser\" is the volume serial number of DASD or TAPE devices\n \"cuu\" is the address of the device\n \"flags\": IASCR  I= indexed VTOC (if DASD) or IDRC-capable (if tape)\n                 A= Allocated to a job, STC, or TSU\n                 S= SMS managed\n                 C= Active Console (if GRAPH device) or\n                    \"*\" if the sysres volume (DASD)\n                 R= Hardware reserve on the device\n \"space-display\":  cccc,tttt,eeee/cccc,tttt\n              1st cccc is number of free cylinders\n              1st tttt is number of free tracks\n                  eeee is number of extents covering the previous\n              2nd cccc is greatest number of contiguous free cylinders\n              2nd tttt is greatest number of contiguous free tracks\n \"device-type\": hardware unit type\n \"%-free\": for DASD, percent of volume not used\n \"#users\": for DASD, number of allocations to the device\n \"path-info\": # mask chpids\n              #       is number of online paths to the device\n              mask:   nth byte 1 means nth chpid online\n              chpids: 2-character CHPIDs defined to the device\n \"mnt\": for DASD, \"PRI\", \"PUB\", or \"STG\" to describe how mounted;\n        for TAPE, more flags:  S = ACL Stacker (Auto Cartridge Loader)\n                               A = ACL stacker Active\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT208/FILE208.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT208", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}