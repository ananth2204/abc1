{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012414000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE583.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE583.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x06\\x08'", "DS1TRBAL": "b':\\n'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04O\\x00\\x07\\x04O\\x00\\r\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x047\\x00\\x00\\x01\\x022_\\x01\\x022_\\x19\\x19\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf5@@@'", "ispf": {"version": "04.55", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T19:19:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-455"}, "text": "REGULAR CBT TAPE - VERSION 455    FILE:  583\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT455.FILE583\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,829 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/21/02    19:19:53    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02 o\\x01\\x02 o\\x12 \\x00\\x19\\x00\\x19\\x00\\x00\\xd1\\xc2\\xd4\\xd6\\xd6\\xd9\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-07-25T00:00:00", "modifydate": "2002-07-25T12:20:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "JBMOORE"}, "text": "Subject: Another CBT contribution\nDate: Tue, 23 Jul 2002 17:26:27 -0700\nFrom: \"JB Moore\" <conlogco@attbi.com>\nTo: \"Sam Golob\" <sbgolob@attglobal.net>\n\nSam,\n\nI'm writing a series of columns on ISPF edit profiles and initial\nedit macros. Attached is COBOL source code for an initial edit\nmacro that I will reference in the article. NaSPA also puts it on\ntheir web site but it takes them forever.\n\nThere are comments in the code that explain most everything. The\nonly thing that should be noted is that the source code has a\nPROGRAM-ID of CLCCDYNP but the load member is PROFSET (Profile\nSetter).\n\nCheck that, the PROGRAM-ID is PROFSET.\n\nThanks,\n\nJim\n\nP.S. Note my new email address\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$$NOTE2": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x02#\\x1f\\x01\\x02#\\x1f\\x14\\x01\\x00\\x13\\x00\\x13\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-08-19T00:00:00", "modifydate": "2002-08-19T14:01:07", "lines": 19, "newlines": 19, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: Yet another CBT contribution   (EPROF)\nDate: Mon, 19 Aug 2002 12:49:46 -0700\nFrom: \"JB Moore\" <conlogco@attbi.com>\nTo: \"Sam Golob\" <sbgolob@attglobal.net>\n\nSam,\n\nHere is another CBT tape contribution.  This utility\nallows for edit profile tables to be manipulated. That\nis, settings can be changed (STATS, RECOVERY, NULLS,\netc), individual rows (profiles) can be deleted and\nsettings can be globally propagated into ALL\nprofiles---kind of like STATS ON ALL.\n\nNo rush, the underlying columns will be in the mag in\nOctober/November of this year.\n\nJim\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$$NOTE3": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x022_\\x01\\x022_\\x19\\x02\\x00\\x12\\x00\\x12\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T19:02:07", "lines": 18, "newlines": 18, "modlines": 0, "user": "SBGOLOB"}, "text": "Sam,\n\nJim Moore here. I've received a few emails from folks who have\ndownloaded the \"EPROF Utility\" (File 583). They all like it but\none of them found a problem that I would like to correct.\n\nIt is a \"one-line\" change (adding a few parameters to an ISPLINK\nTBCLOSE call) that literally, adds a single line to the source of\nprogram CLCCEPRF.  What's the best way for me to correct this?\n\nThe problem is that unless the ISPF profile DSN is also allocated\nto the ISPTABL DD (many sites do this), any edit profile changes\nmade at the EPROF utility don't \"take\". This is because TBCLOSE\nwrites to ISPTABL by default.  The additional parameters I'm\nadding point the TBCLOSE to ISPPROF.\n\nJim\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$$NOTE4": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x022_\\x01\\x022_\\x19\\x05\\x00?\\x00?\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T19:05:01", "lines": 63, "newlines": 63, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: Fw: Edit Profile Tool - 1 line source fix\nDate: Thu, 21 Nov 2002 12:13:49 -0800\nFrom: \"JB Moore\" <conlogco@attbi.com>\nTo: \"Sam Golob\" <sbgolob@attglobal.net>\n\nSam,\n\nHere's what I sent to Eric Bielefeld, the fellow who reported the\nproblem to me.\n\nThanks,\n\nJim\n----- Original Message -----\nFrom: \"JB Moore\" <conlogco@attbi.com>\nTo: \"Eric Bielefeld\" <EBIE@phmining.com>\nSent: Tuesday, November 19, 2002 11:13 AM\nSubject: Edit Profile Tool - 1 line source fix\n\n> Eric,\n>\n> Here is how to correct the ISPTABL problem. It involves adding\n> a parameter to the TBCLOSE within the COBOL program named\n  CLCCEPRF.\n>\n> In the paragraph named \"1300-Free-STG-Close-Table\" you will see\n  a statement that looks like this:\n>\n> Call Isplink Using TBClose Edit-Profile-Table.\n>\n> To fix the problem, do the following:\n>\n> 1) Remove the period after the dataname \"Edit-Profile-Table\"\n> 2) Add the following line: \"Omitted Omitted Omitted Prof-DD-Fld.\"\n> (note period after \"Prof-DD-Fld\")\n>\n> So the entire TBCLOSE call should now take up two lines and\n  look like this:\n>\n> Call Isplink Using TBClose Edit-Profile-Table\n>              Omitted Omitted Omitted Prof-DD-Fld.\n>\n> 3) Re-compile CLCCEPRF and re-link.\n> 4) Revert your logon proc to one without ISPTABL.\n>\n> FYI,\n>\n> \"Omitted\" is a COBOL reserved word. It serves as a placeholder\n> when you are not passing an address in cases where an API is\n> highly positional. The \"Prof-DD-Name\" field is already defined\n> in the program. I used it on the TBOPEN to re-direct the table\n> open to the profile DD name. Should have used it on the TBCLOSE\n> as well but I missed it because my machine allocates the\n> profile dataset to ISPTABL at logon.\n>\n>\n> To see more info on TBCLOSE, issue a MODEL TBCLOSE (with an A\n> or B line command) from within edit. Easiest to accomplish if\n  you are editing a COBOL program, with the edit profile being\n> COBOL.\n>\n> Jim Moore\n>\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE583": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x047\\x00\\x00\\x01\\x022_\\x01\\x022_\\x19\\x19\\x00\\x18\\x00\\x18\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf5@@@'", "ispf": {"version": "04.55", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T19:19:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "CBT-455"}, "text": "//***FILE 583 is from Jim Moore, and contains a program called      *   FILE 583\n//*           PROFSET, which is an initial Edit Macro, written      *   FILE 583\n//*           in COBOL, that sets up your ISPF EDIT profile for     *   FILE 583\n//*           your ISPF session.                                    *   FILE 583\n//*                                                                 *   FILE 583\n//*           This program was written to illustrate principles     *   FILE 583\n//*           of initial Edit Macros, and ISPF EDIT profiles,       *   FILE 583\n//*           which is the basis for a series of articles in        *   FILE 583\n//*           \"Technical Support\" magazine.                         *   FILE 583\n//*                                                                 *   FILE 583\n//*           There is a second program package in this file, that  *   FILE 583\n//*           is called EPROF.  With this package, you can set      *   FILE 583\n//*           edit profile values globally, and do a lot of nice    *   FILE 583\n//*           things with edit profiles, as follows:                *   FILE 583\n//*                                                                 *   FILE 583\n//*           This utility allows for edit profile tables to be     *   FILE 583\n//*           manipulated.  That is, settings can be changed        *   FILE 583\n//*           (STATS, RECOVERY, NULLS, etc), individual rows        *   FILE 583\n//*           (profiles) can be deleted and settings can be         *   FILE 583\n//*           globally propagated into ALL profiles---kind of       *   FILE 583\n//*           like STATS ON ALL.                                    *   FILE 583\n//*                                                                 *   FILE 583\n//*           email:  \"JB Moore\" <conlogco@attbi.com>               *   FILE 583\n//*                                                                 *   FILE 583\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EPROF": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x022_\\x01\\x022_\\x19\\x18\\x08\\x97\\x08\\x97\\x00\\x00\\xd4\\xd6\\xd6\\xd9\\xc5@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T19:18:00", "lines": 2199, "newlines": 2199, "modlines": 0, "user": "MOORE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "PROFSET": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02 o\\x01\\x02 o\\x12 \\x01\\xd5\\x01\\xd5\\x00\\x00\\xd4\\xd6\\xd6\\xd9\\xc5@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-07-25T00:00:00", "modifydate": "2002-07-25T12:20:00", "lines": 469, "newlines": 469, "modlines": 0, "user": "MOORE"}, "text": "//jobcard\n//*\n//JOBLIB   DD DSN=IGY.V1R2M0.SIGYCOMP,DISP=SHR  <-LE COBOL\n//*\n//  SET LMEMBER=PROFSET\n//  SET LKLIB='loadlib'\n//*\n//COBOL    EXEC PGM=IGYCRCTL,\n// PARM=(RENT,DYN,OFFSET,NOSEQ,QUOTE,NOADV,SOURCE,MAP,XREF)\n//*\n//SYSPRINT DD SYSOUT=*\n//SYSTERM  DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSUT2   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSUT3   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSUT4   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSUT5   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSUT6   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSUT7   DD UNIT=SYSDA,SPACE=(TRK,(15,10))\n//SYSLIN   DD DSN=&OBJ,DISP=(NEW,PASS,DELETE),\n//            UNIT=SYSDA,SPACE=(TRK,(45,15),RLSE),\n//            LRECL=80,RECFM=FB,DSORG=PS\n//SYSIN    DD *\n000100* -------------------------------------------------------------- *\n000200* Compile Options to use:                                        *\n000300*                                                                *\n000400* PARM=(RENT,DYN,OFFSET,NOSEQ,QUOTE,NOADV,SOURCE,MAP,XREF)       *\n000500*                                                                *\n000600* Link-Edit Options to use:                                      *\n000700*                                                                *\n000800* PARM=(LET,LIST,MAP,XREF,RENT)                                  *\n000900*                                                                *\n001000* -------------------------------------------------------------- *\n001100 Identification Division.\n001200 Program-ID. PROFSET.\n001300 Author. Jim Moore - Concentrated Logic Incorporated.\n001400*--Remarks.------------------------------------------------------*\n001500*                                                                *\n001600* Use COBOL for OS/390 V1R2 or higher compiler. If COBOL II,     *\n001700* try compiling it and changing things that flag as errors.      *\n001800* You will probably have to revert quotes to aposts, add back    *\n001900* the nonsense word \"FILLER\" and maybe a few more things.        *\n001910*                                                                *\n001920* This program is an \"Initial Edit Macro\" written in COBOL. It   *\n001930* examines 80-byte data (and only 80-byte data) to determine     *\n001940* how to set the edit profile. Here is the order and strings     *\n001950* that it looks at to determine the profile setting:             *\n001960*                                                                *\n001970* 1) Assembler (\"ASM\")      CSECT/DSECT between 1-16 MACRO 9-15  *\n001980* 2) JCL (\"CNTL\")           \"//\" in column 1-2                   *\n001990* 3) COBOL (\"COBOL\")        \"WORKING-STORAGE in Col 8 or \"PIC\"   *\n001991* 4) REXX (\"REXX\")          \"/* REXX\" on 1st line                *\n001992* 5) Panels (\"PANEL\")       \")ATTR or )BODY\" in Col 1            *\n001993* 6) Skeletons (\"SKELETON\") \")IM, )SEL or )CM\" in Col 1          *\n001994* 7) CLIST (\"CLIST\")        \"PROC\" in Col 1                      *\n002000*----------------------------------------------------------------*\n002100 Environment Division.\n002200 Data Division.\n002300 Working-Storage Section.\n002400 01  Misc-Fields.\n002500     05  Dot-Position        Pic S9(08) Binary.\n002600     05  ZD-Lrecl            Pic  9(05).\n002700/\n002800*----------------------------------------------------------------*\n002900* The first and last character of each of the Value clause       *\n003000* literals in \"Free-Form-ISPLINK-Syntax\" must be a US cent-sign. *\n003100* This character isn't in the standard ASCII character set. If   *\n003200* \"unprintable characters\" appear in these literals, change them *\n003300* all by taking the following steps:                             *\n003400*                                                                *\n003500* 1) Exclude the entire range of lines under the \"01 Level\"      *\n003600*    Use XX/XX line commands to do this.                         *\n003700* 2) Issue Command ===> C ALL P'.' X'4A' X                       *\n003800*    Read as: Change all \"unprintable characters\" to a X'4A'     *\n003900*    but only on excluded lines                                  *\n004000* 3) A X'4A' is the EBCDIC bit pattern for a US cent-sign.       *\n004100*                                                                *\n004200*----------------------------------------------------------------*\n004300 01  Free-Form-ISPLINK-Syntax.\n004400     05  Macro-Declare       Pic  X(07)\n004500         Value \"\u00f3MACRO\u00f3\".\n004600     05  Macro-End           Pic  X(06)\n004700         Value \"\u00f3MEND\u00f3\".\n004800     05  Bounds-Default      Pic  X(08)\n004900         Value \"\u00f3BOUNDS\u00f3\".\n005000     05  Get-Member          Pic  X(21)\n005100         Value \"\u00f3(DSNMEMBR) = MEMBER\u00f3\".\n005200     05  Get-Imacname        Pic  X(21)\n005300         Value \"\u00f3(IMACNAME) = IMACRO\u00f3\".\n005400     05  Get-Lrecl           Pic  X(20)\n005500         Value \"\u00f3(DSNAMLRC) = LRECL\u00f3\".\n005600     05  Get-DSName          Pic  X(22)\n005700         Value \"\u00f3(DATASETN) = DATASET\u00f3\".\n005800     05  Set-COBOL-Profile   Pic  X(15)\n005900         Value \"\u00f3PROFILE COBOL\u00f3\".\n006000     05  Set-ASM-Profile     Pic  X(13)\n006100         Value \"\u00f3PROFILE ASM\u00f3\".\n006200     05  Set-CNTL-Profile    Pic  X(14)\n006300         Value \"\u00f3PROFILE CNTL\u00f3\".\n006400     05  Set-REXX-Profile    Pic  X(14)\n006500         Value \"\u00f3PROFILE REXX\u00f3\".\n006600     05  Set-Skel-Profile    Pic  X(18)\n006700         Value \"\u00f3PROFILE SKELETON\u00f3\".\n006800     05  Set-Panel-Profile   Pic  X(15)\n006900         Value \"\u00f3PROFILE PANEL\u00f3\".\n007000     05  Set-CLIST-Profile   Pic  X(16)\n007100         Value \"\u00f3PROFILE CLIST\u00f3\".\n007200     05  Set-DATA-Profile.\n007300         10                  Pic  X(09)\n007400         Value \"\u00f3PROFILE \".\n007500         10  Data-Profname   Pic  X(09)\n007600         Value Spaces.\n007700     05  Set-COBOL-Numbering Pic  X(18)\n007800         Value \"\u00f3NUM ON COBOL STD\u00f3\".\n007900     05  Set-STD-Numbering   Pic  X(12)\n008000         Value \"\u00f3NUM ON STD\u00f3\".\n008100     05  Set-No-Numbering    Pic  X(09)\n008200         Value \"\u00f3NUM OFF\u00f3\".\n008300     05  Set-CAPS-Off        Pic  X(10)\n008400         Value \"\u00f3CAPS OFF\u00f3\".\n008500     05  Set-CAPS-On         Pic  X(09)\n008600         Value \"\u00f3CAPS ON\u00f3\".\n008700     05  Set-Profile-Unlock  Pic  X(16)\n008800         Value \"\u00f3PROFILE UNLOCK\u00f3\".\n008900     05  Find-1st-Char       Pic  X(17)\n009000         Value \"\u00f3FIND P'=' FIRST\u00f3\".\n009100     05  Set-Recovery-On     Pic  X(13)\n009200         Value \"\u00f3RECOVERY ON\u00f3\".\n009300     05  Set-Nulls-On        Pic  X(14)\n009400         Value \"\u00f3NULLS ON STD\u00f3\".\n009500     05  Set-Stats-On        Pic  X(10)\n009600         Value \"\u00f3STATS ON\u00f3\".\n009700     05  Reset-All           Pic  X(07)\n009800         Value \"\u00f3RESET\u00f3\".\n009900     05  Seek-COBOL-01       Pic  X(32)\n010000         Value \"\u00f3SEEK FIRST 'WORKING-STORAGE' 8\u00f3\".\n010100     05  Seek-COBOL-02       Pic  X(20)\n010200         Value \"\u00f3SEEK FIRST ' PIC '\u00f3\".\n010300     05  Seek-JCL-01         Pic  X(21)\n010400         Value \"\u00f3SEEK FIRST '//' 1 2\u00f3\".\n010500     05  Seek-ASM-01         Pic  X(25)\n010600         Value \"\u00f3SEEK FIRST 'CSECT' 1 16\u00f3\".\n010700     05  Seek-ASM-02         Pic  X(25)\n010800         Value \"\u00f3SEEK FIRST 'DSECT' 1 16\u00f3\".\n010900     05  Seek-ASM-03         Pic  X(27)\n011000         Value \"\u00f3SEEK FIRST ' MACRO ' 9 15\u00f3\".\n011100     05  Seek-REXX-01        Pic  X(18)\n011200         Value \"\u00f3SEEK FIRST '/* '\u00f3\".\n011300     05  Seek-REXX-02        Pic  X(18)\n011400         Value \"\u00f3SEEK NEXT 'REXX'\u00f3\".\n011500     05  Seek-Panel-01       Pic  X(22)\n011600         Value \"\u00f3SEEK FIRST ')ATTR' 1\u00f3\".\n011700     05  Seek-Panel-02       Pic  X(22)\n011800         Value \"\u00f3SEEK FIRST ')BODY' 1\u00f3\".\n011900     05  Seek-Skel-01        Pic  X(21)\n012000         Value \"\u00f3SEEK FIRST ')IM ' 1\u00f3\".\n012100     05  Seek-Skel-02        Pic  X(22)\n012200         Value \"\u00f3SEEK FIRST ')SEL ' 1\u00f3\".\n012300     05  Seek-Skel-03        Pic  X(21)\n012400         Value \"\u00f3SEEK FIRST ')CM ' 1\u00f3\".\n012500     05  Seek-CLIST-01       Pic  X(22)\n012600         Value \"\u00f3SEEK FIRST 'PROC ' 1\u00f3\".\n012700     05  A-Cent-Sign         Pic  X(01)\n012800         Value \"\u00f3\".\n012900 01  Edit-Macro-Parameters.\n013000     05  Buf-Len             Pic S9(08) Binary.\n013100     05  Null-Len            Pic S9(08) Binary Value +0.\n013200 01  ISPF-API-Services.\n013300     05  ISREdit             Pic  X(08) Value \"ISREDIT\".\n013400     05  Vdefine             Pic  X(08) Value \"VDEFINE\".\n013500     05  SetMsg              Pic  X(08) Value \"SETMSG\".\n013600 01  ISPF-API-Parameters.\n013700     05  Fixd                Pic  X(08) Value \"FIXED\".\n013800     05  Char                Pic  X(08) Value \"CHAR\".\n013900     05  ISPZ000             Pic  X(08) Value \"ISPZ000\".\n014000     05  ISPLINK             Pic  X(08) Value \"ISPLINK\".\n014100 01  Vdefine-Literals.\n014200     05  DSN-L4-Fx           Pic  X(16)\n014300         Value \"(DSNAMLRC,E1,E2)\".\n014400     05  DSN-Name            Pic  X(10)\n014500         Value \"(DATASETN)\".\n014600     05  DSN-L8-Flds         Pic  X(37)\n014700         Value \"(DSNMEMBR,IMACNAME,PROFNAME,DYNDPROF)\".\n014800     05  ShortMsg            Pic  X(10)\n014900         Value \"(ZMSG000S)\".\n015000     05  LongMsg             Pic  X(10)\n015100         Value \"(ZMSG000L)\".\n015200 01  Function-Pool.\n015300     05  BIN-FLD.\n015400         10  DSNAMLRC        Pic S9(08) Binary.\n015500         10  SEEK-Count1     Pic S9(08) Binary.\n015600         10  SEEK-Count2     Pic S9(08) Binary.\n015700     05  DATASETN            Pic  X(44) Value Spaces.\n015800     05  ZMSG000S            Pic  X(24) Value Spaces.\n015900     05  ZMSG000L            Pic  X(76) Value Spaces.\n016000     05  FP-L8                          Value Spaces.\n016100         10  DSNMEMBR        Pic  X(08).\n016200         10  IMACNAME        Pic  X(08).\n016300         10  PROFNAME        Pic  X(08).\n016400         10  DYNDPROF        Pic  X(08).\n016410             88  Data-Is-ASM            Value \"ASM     \".\n016420             88  Data-Is-JCL            Value \"CNTL    \".\n016500             88  Data-Is-COBOL          Value \"COBOL   \".\n016700             88  Data-Is-REXX           Value \"REXX    \".\n017100             88  Data-Is-PANEL          Value \"PANEL   \".\n017200             88  Data-Is-SKELETON       Value \"SKELETON\".\n017210             88  Data-Is-CLIST          Value \"CLIST   \".\n017300 01  ProfChg-Long.\n017400     05                      Pic  X(26)\n017500         Value \"Profile adjusted based on \".\n017600     05                      Pic  X(23)\n017700         Value \"data content. Default: \".\n017800     05  OldProf             Pic  X(09).\n017900     05                      Pic  X(09)\n018000         Value \"Altered: \".\n018100     05  NewProf             Pic  X(08).\n018200 Linkage Section.\n018300 01  Passed-Linkage.\n018400     05  Parm-Debug          Pic  X(08).\n018500*----------------------------------------------------------------*\n018600* Only data with LRECL=80 is scanned to determine the type. Any  *\n018700* other LRECL will cause a profile name of \"DATAnnnn\" to be used *\n018800* The \"nnnn\" will be the 4 low-order positions of the LRECL.     *\n018900*----------------------------------------------------------------*\n019000/\n019100 Procedure Division Using Passed-Linkage.\n019200     Perform 0001-Initialize                     Thru 0001-Exit.\n019300\n019400     If DSNAMLRC = 80\n019500        Perform 0100-Scan-Data-For-Profile       Thru 0100-Exit.\n019600\n019700*----------------------------------------------------------------*\n019800* The following \"If\" statement sets an ISPF message if the logic *\n019900* determines that the Dynamically Determined Profile             *\n020000* (\"DYNDPROF\") differs from the Low-Level Qualifier of the       *\n020100* DSN being edited. If the message is undesirable, comment out.  *\n020200*----------------------------------------------------------------*\n020300     If  DYNDPROF Not = Spaces\n020400     And DYNDPROF Not = PROFNAME\n020500        Move \"Edit Profile Switched\" To ZMSG000S\n020600        Move DYNDPROF                To NewProf\n020700        Move PROFNAME                To OldProf\n020800        Move ProfChg-Long            To ZMSG000L\n020900        Call ISPLINK Using SetMsg ISPZ000.\n021000\n021100*----------------------------------------------------------------*\n021200* The following group of edit macro calls establish Jim Moore's  *\n021300* favorite edit profile settings. Note that they are always      *\n021400* executed. Here's what they do:                                 *\n021500*                                                                *\n021600*  o The profile is set to UNLOCK.                               *\n021700*  o Bounds are set to \"1\" and the LRECL.                        *\n021800*  o RECOVERY ON set.                                            *\n021900*  o NULLS ON STD set.                                           *\n022000*  o All ISPF Edit messages are RESET.                           *\n022100*  o If the DSN being edited is a PDS, STATS ON set.             *\n022200*                                                                *\n022300* Note also that the data is repositioned by FIND P'=' FIRST,    *\n022400* a MEND (Macro End) is issued and Reg 15 (Return-Code) is       *\n022500* primed with a \"1\". This causes the cursor to be positioned in  *\n022600* the Command ===> line.                                         *\n022700*                                                                *\n022800*----------------------------------------------------------------*\n022900     Call ISPLINK Using ISREdit Null-Len Set-Profile-Unlock.\n023000     Call ISPLINK Using ISREdit Null-Len Bounds-Default.\n023100     Call ISPLINK Using ISREdit Null-Len Find-1st-Char.\n023200     Call ISPLINK Using ISREdit Null-Len Set-Recovery-On.\n023300     Call ISPLINK Using ISREdit Null-Len Set-Nulls-On.\n023400     Call ISPLINK Using ISREdit Null-Len Reset-All.\n023500     If DSNMEMBR Not = Spaces\n023600        Call ISPLINK Using ISREdit Null-Len Set-Stats-On.\n023700\n023800     Call ISPLINK Using ISREdit Null-Len Macro-End.\n023900\n024000     Move 1 To Return-Code.\n024100     Goback.\n024200/\n024300 0001-Initialize.\n024400     Move Length Of DSNAMLRC To Buf-Len.\n024500     Call ISPLINK Using Vdefine DSN-L4-Fx BIN-FLD Fixd Buf-Len.\n024600     Move Length Of DSNMEMBR To Buf-Len.\n024700     Call ISPLINK Using Vdefine DSN-L8-Flds FP-L8 Char Buf-Len.\n024800     Move Length Of DATASETN To Buf-Len.\n024900     Call ISPLINK Using Vdefine DSN-Name DATASETN Char Buf-Len.\n025000     Move Length Of ZMSG000S To Buf-Len.\n025100     Call ISPLINK Using Vdefine ShortMsg ZMSG000S Char Buf-Len.\n025200     Move Length Of ZMSG000L To Buf-Len.\n025300     Call ISPLINK Using Vdefine LongMsg ZMSG000L Char Buf-Len.\n025400     Call ISPLINK Using ISREdit Null-Len Macro-Declare.\n025500     Call ISPLINK Using ISREdit Null-Len Get-Member.\n025600     Call ISPLINK Using ISREdit Null-Len Get-Imacname.\n025700     Call ISPLINK Using ISREdit Null-Len Get-Lrecl.\n025800     Call ISPLINK Using ISREdit Null-Len Get-DSName.\n025900     Move Zeros     To Dot-Position.\n026000\n026100     Perform Varying Tally From 1 By 1\n026200     Until DATASETN (Tally:1) = Space\n026300     Or Tally > Length Of DATASETN\n026400         If DATASETN (Tally:1) = \".\"\n026500            Move Tally To Dot-Position\n026600         End-If\n026700     End-Perform.\n026800\n026900     If Dot-Position > Zeros\n027000        Move DATASETN (Dot-Position + 1:Tally - Dot-Position)\n027100        To   PROFNAME\n027200     Else\n027300     Move DATASETN (1:Tally) To PROFNAME.\n027400\n027500     If DSNAMLRC Not = 80\n027600        Move DSNAMLRC         To ZD-Lrecl\n027700        Move \"DATA\"           To DYNDPROF\n027800        Evaluate True\n027900           When DSNAMLRC > 9999\n028000              Move ZD-Lrecl       To DYNDPROF (4:)\n028100           When Other\n028200              Move ZD-Lrecl (2:4) To DYNDPROF (5:)\n028300        End-Evaluate\n028400        Move DYNDPROF  To Data-Profname\n028500        Inspect Data-Profname\n028600                Replacing First Space By A-Cent-Sign\n028700        Call ISPLINK Using ISREdit Null-Len Set-DATA-Profile.\n028800 0001-Exit. Exit.\n028900\n029000 0100-Scan-Data-For-Profile.\n029100     Perform 1200-Check-ASM                      Thru 1200-Exit.\n029200\n029300     If Data-Is-ASM\n029400       Call ISPLINK Using ISREdit Null-Len Set-ASM-Profile\n029500       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering\n029600       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off\n029700     Else\n029800     Perform 1100-Check-JCL                      Thru 1100-Exit\n029900     If Data-Is-JCL\n030000       Call ISPLINK Using ISREdit Null-Len Set-CNTL-Profile\n030100       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering\n030200       Call ISPLINK Using ISREdit Null-Len Set-CAPS-On\n030300     Else\n030400     Perform 1000-Check-COBOL                    Thru 1000-Exit\n030500     If Data-Is-COBOL\n030600       Call ISPLINK Using ISREdit Null-Len Set-COBOL-Profile\n030700       Call ISPLINK Using ISREdit Null-Len Set-COBOL-Numbering\n030800       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off\n030900     Else\n031000     Perform 1300-Check-REXX                     Thru 1300-Exit\n031100     If Data-Is-REXX\n031200       Call ISPLINK Using ISREdit Null-Len Set-REXX-Profile\n031300       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering\n031400       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off\n031500     Else\n031600     Perform 1400-Check-Panels                   Thru 1400-Exit\n031700     If Data-Is-PANEL\n031800       Call ISPLINK Using ISREdit Null-Len Set-Panel-Profile\n031900       Call ISPLINK Using ISREdit Null-Len Set-No-Numbering\n032000       Call ISPLINK Using ISREdit Null-Len Set-CAPS-Off\n032100     Else\n032200     Perform 1500-Check-Skeleton                 Thru 1500-Exit\n032300     If Data-Is-SKELETON\n032400       Call ISPLINK Using ISREdit Null-Len Set-Skel-Profile\n032500       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering\n032600       Call ISPLINK Using ISREdit Null-Len Set-CAPS-On\n032700     Else\n032800     Perform 1600-Check-CLIST                    Thru 1600-Exit\n032900     If Data-Is-CLIST\n033000       Call ISPLINK Using ISREdit Null-Len Set-CLIST-Profile\n033100       Call ISPLINK Using ISREdit Null-Len Set-STD-Numbering\n033200       Call ISPLINK Using ISREdit Null-Len Set-CAPS-On.\n033300 0100-Exit. Exit.\n033400/\n033500 1000-Check-COBOL.\n033600     Call ISPLINK Using ISREdit Null-Len Seek-COBOL-01.\n033700\n033800     If Return-Code > Zero\n033900        Call ISPLINK Using ISREdit Null-Len Seek-COBOL-02\n034000        If Return-Code > Zero\n034100           Next Sentence\n034200        Else\n034300        Move \"COBOL\"  To DYNDPROF\n034400     Else\n034500     Move \"COBOL\"  To DYNDPROF.\n034600 1000-Exit. Exit.\n034700/\n034800 1100-Check-JCL.\n034900     Call ISPLINK Using ISREdit Null-Len Seek-JCL-01.\n035000\n035100     If Return-Code > Zero\n035200        Next Sentence\n035300     Else\n035400     Move \"CNTL\"   To DYNDPROF.\n035500 1100-Exit. Exit.\n035600/\n035700 1200-Check-ASM.\n035800     Call ISPLINK Using ISREdit Null-Len Seek-ASM-01.\n035900\n036000     If Return-Code > Zero\n036100        Call ISPLINK Using ISREdit Null-Len Seek-ASM-02\n036200        If Return-Code > Zero\n036300           Call ISPLINK Using ISREdit Null-Len Seek-ASM-03\n036400           If Return-Code > Zero\n036500              Next Sentence\n036600           Else\n036700           Move \"ASM\"    To DYNDPROF\n036800        Else\n036900        Move \"ASM\"    To DYNDPROF\n037000     Else\n037100     Move \"ASM\"    To DYNDPROF.\n037200 1200-Exit. Exit.\n037300/\n037400 1300-Check-REXX.\n037500     Call ISPLINK Using ISREdit Null-Len Seek-REXX-01.\n037600\n037700     If Return-Code > Zero\n037800        Next Sentence\n037900     Else\n038000     Call ISPLINK Using ISREdit Null-Len Seek-REXX-02\n038100     If Return-Code > Zero\n038200        Next Sentence\n038300     Else\n038400     Move \"REXX\"   To DYNDPROF.\n038500 1300-Exit. Exit.\n038600/\n038700 1400-Check-Panels.\n038800     Call ISPLINK Using ISREdit Null-Len Seek-Panel-01.\n038900\n039000     If Return-Code > Zero\n039100       Call ISPLINK Using ISREdit Null-Len Seek-Panel-02\n039200       If Return-Code > Zero\n039300          Next Sentence\n039400       Else\n039500       Move \"PANEL\" To DYNDPROF\n039600     Else\n039700     Move \"PANEL\" To DYNDPROF.\n039800 1400-Exit. Exit.\n039900/\n040000 1500-Check-Skeleton.\n040100     Call ISPLINK Using ISREdit Null-Len Seek-Skel-01.\n040200\n040300     If Return-Code > Zero\n040400       Call ISPLINK Using ISREdit Null-Len Seek-Skel-02\n040500       If Return-Code > Zero\n040600          Call ISPLINK Using ISREdit Null-Len Seek-Skel-03\n040700          If Return-Code > Zero\n040800            Next Sentence\n040900          Else\n041000          Move \"SKELETON\" To DYNDPROF\n041100       Else\n041200       Move \"SKELETON\"    To DYNDPROF\n041300     Else\n041400     Move \"SKELETON\"      To DYNDPROF.\n041500 1500-Exit. Exit.\n041600/\n041700 1600-Check-CLIST.\n041800     Call ISPLINK Using ISREdit Null-Len Seek-CLIST-01.\n041900\n042000     If Return-Code > Zero\n042100       Next Sentence\n042200     Else\n042300     Move \"CLIST\"         To DYNDPROF.\n042400 1600-Exit. Exit.\n//*\n// IF RC LE 4 THEN\n//LINK EXEC PGM=IEWL,PARM=(LET,LIST,MAP,XREF,RENT)\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,1))\n//SYSLMOD  DD DSN=&LKLIB(&LMEMBER),DISP=SHR\n//SYSLIB   DD DSN=CEE.SCEELKED,DISP=SHR\n//         DD DSN=&LKLIB,DISP=SHR\n//SYSLIN   DD DSN=&OBJ,DISP=(OLD,DELETE)\n// ENDIF\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT583/FILE583.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT583", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}