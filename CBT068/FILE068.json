{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011147000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 587860, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE068.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 587860, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 587860, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE068.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\n\\x0b'", "DS1TRBAL": "b'\\x1a*'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00l\\x00\\x05\\x00m\\x00\\x00\\x00\\x0b'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x002\\x01\\x19$\\x7f\\x01\\x19$\\x7f\\x07C\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-09-04T00:00:00", "modifydate": "2019-09-04T07:43:32", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-498"}, "text": "REGULAR CBT TAPE - VERSION 498    FILE:  068\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT498.FILE068\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 16 MEMBERS COUNTED; CUMULATIVE SIZE IS 5,326 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/04/19    07:43:32    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$MANUAL": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x02\\x01\\x02\"O\\x01\\x02\"O\\t\\x19\\x02\\x9e\\x02\\x9e\\x00\\x00\\xe2\\xc3\\xd9\\xc9\\xd7\\xe3@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2002-08-12T09:19:02", "lines": 670, "newlines": 670, "modlines": 0, "user": "SCRIPT"}, "text": ":frontm.\n:toc.\n:body.\n.ju on\n:h1.Manual Console Monitor TSTVS version 3.0\n:p.\n:i1.TSTVS\n.pa\n:h2.Introduction\n:p.\nTSTVS is developed for editing PDS member if TSO/VTAM is not available.\nIt is a product of Skybird Systems.\nTSTVS communicates with the MVS master console operator.\n:h3.Input and output\n:p.\nINP01 and OUTP01. Both ddnames are dynamically allocated.\n:h2.Startup of TSTVS\n:p.\n:i1.Userid\n:i1.Password\nAt startup, TSTVS asks for an authorized userid + a password (msg\nEDT301A and EDT302A). With this userid and password, TSTVS will perform\na RACROUTE REQUEST=VERIFY with terminalname=LUTSTVS.\n:p.\nAfter verification of the user+password+terminal, the resource $TSTVS\nin the FACILITY class will be checked. In A RACF-system the user should\nbe connected to this profile. In an ACF2 system, a generalized resource\nshould have been created. The resource type have to be defined in\nthe GSO CLASMAP record (e.g. SAFMAPS(FAC/FACILITY)).\n:p.\n:i1.ACF2\n:i2.CLASMAP\n:i1.RACF\n:i2.FACILITY\nIf no RACF or ACF2 is active (or stopped), TSTVS will bypass the\nsecurity check and will ask for the program password (msg EDT310A).\nRefer to the responsible systems programmer\nfor the correct password.\n.pa\n:h2.Allocating datasets\n:p.\nIf you start TSTVS the msg EDT200A Enter command or 'HELP'\nappears after the security check.\n:p.\n:i1.Allocation\nIf you reply EDT200A with 'ALLOC' the monitor\nprompts with 'EDT100A Enter dataset name or 'CANCEL'', which\nshould be replied with a dsname of max. 44 bytes or the word 'CANCEL'\nIf the reply is 'CANCEL', the ALLOC function will be terminated.\nmsg EDT198I en EDT200A will appear.\nAfter this reply the question 'EDT101A Enter volume serial or 'U'\nappears, which should be replied with a max 6 positions long volume\nnumber or 'U'. If you reply 'U' the catalog is searched.\n:p.\nIf these two replies are ok, the msg 'EDT103I Allocation of dataset\nis successful'  will appear, otherwise a suitable error\nmessage will be produced. (see messages)\n:p.\nIf you have finished with this library you can allocate another\nlibrary with ALLOC. (The previous library is automaticly freed).\nOther possible replies on msg EDT200A are.\n:dl tsize=18\n:dthd.Command\n:ddhd.Function\n:dt.RENAME\n:dd.Rename of a data set\n:dt.A membername\n:dd.Create a member\n:dt.AN membername\n:dd.Create a member including line numbers\n:dt.U membername\n:dd.Update of a member\n:dt.UN membername\n:dd.Update of a member including line numbers\n:dt.D membername\n:dd.DELETE a member from the library\n:i1.DELETE\n:dt.R member,newname\n:i1.RENAME\n:dd.RENAME a member in the library into 'newname'\n:dt.PDSLIST\n:dd.Listpds of the entire library\n:dt.PDSLIST,'key'\n:dd.Listpds of the library starting with member, whose name starts\nwith 'key'\n:dt.EOJ\n:dd.Terminate the console monitor\n:dt.HELP\n:dd.Gives help information about the commands. Message EDT205I will\nbe given\n:edl.\n:h2.Renaming datasets\n:p.\n:i1.RENAME\n:h3.RENAME a catalogued dataset\n:p.\nThe reply on msg :hp2.EDT200A Enter command or 'HELP':ehp2. should\nbe replied with 'RENAME'. After this, reply :hp2.EDT100A Enter dataset\nname or 'CANCEL':ehp2. with a name of a catalogued\ndataset and reply :hp2.EDT101A\nEnter volume serial or 'U':ehp2 with an 'U'\n:p.\nNow reply the next msg :hp2.EDT106A Enter NEW dataset name or 'CANCEL'\n:ehp2. with a newname. This name should not exist in any catalog.\n:p.\nAfter RENAME, the message :hp2.EDT199I RENAME of dataset successul\n:ehp2. or a suitable error message should appear.\n:h3.RENAME a not catalogued dataset\n:p.\nThe only difference between RENAME of a not catalogued dataset\nand a catalogued dataset (see previous chapter) is the reply on\nmsg EDT101A.\n:p.\nThis message should be replied with a valid and online volume\nserial number. After reply of msg EDT106A, the dataset will be\nrenamed on that volume.\n:p.\n:lblbox.Note!\nIf msg EDT101A has been replied with a volume serial number\nand the dataset is catalogued, the catalog entry is NOT renamed.\n:elblbox.\n:h2.List the directory of a PDS\n:p.\n:i1.Partitioned dataset\nA listing of the directory of the allocated PDS will be\ndisplayed, if the reply on msg EDT200A is 'PDSLIST' or\n'PDSLIST,key',\nIf the reply is 'PDSLIST', a list of the directory is displayed\nupon the console.\nIf the reply is 'PDSLIST,key', a list of directory-entries is\ndisplayed, starting with the membername beginning with 'key'.\nWhen 'key' is not present the list begins with next higher key.\n:lblbox.Note\nIf you enters 'PDSLIST' or 'PDSLIST,key' and\nthere are more than 16 lines the msg 'EDT017A\nSHOULD TSTVS CONTINUE THIS FUNCTION ? REPLY Y\nOR N' appears. If you reply with 'Y' the function\ncontinues. With reply 'N' the function is terminated\nwith msg EDT018I (see messages).\n:elblbox.\n.pa\n:h2.Create a member\n:p.\nMessage 'EDT200A Enter command or 'HELP'\nmust be replied with 'A membername' or 'AN membername'\nIf the specified name is already present in the library,\nthe data can be overwritten.\n:p.\nNow appears message 'EDT003A Enter data, 'SAVE' or 'SUBMIT''\nThe 'data' needs no comment\nR xx,SAVE is to save the data in the member\nThe messages EDT026A and EDT200A will be given.\nR xx,SUBMIT is save the data and submit the job\nto the JES2 internal reader.\n:i1.JES2\nAfter the action EDT200A appears.\nIf msg EDT003A has been replied with 'SAVE' or 'SUBMIT', the user\nwill be prompted with the message:\n'EDT026A enter new name to save your workarea or reply\n'U' to save your workarea in member xxxxxxxx'\nIf you reply with a 'newname' the member is saved under that\nname. With reply 'U' the member is saved under the name, which\nhas been replied on the message EDT200A.\n:p.\nIf the reply on msg EDT003A has been replied with a input stmnt,\nthen appears the msg 'EDT004A Enter sequence number', if the msg\nEDT200A has been replied with 'AN membername'\nAfter these messages the msg 'EDT003A Enter data ..' appears\nagain to type in your next statement.\n:p.\nIf all the statements are typed in, you can reply msg EDT003A\nwith 'SAVE' or 'SUBMIT'\n:p.\nAfter 'SAVE' or 'SUBMIT' appears first msg EDT026A to save your\nmember and then msg EDT200A.\n.pa\n:h2.Update a member\n:p.\nIf the message 'EDT200A Enter command .....' has been replied with\n'U membername' or 'UN membername', you get into the 'subcommand mode'\nof TSTVS.\n:p.\nThe subcommand mode is anounced with the message 'EDT005A Enter\nsubcommand OR 'HELP''.\n:p.\nThe subcommands are:\n:h3.LIST xxxx-yyyy\n:p.\nWith this subcommand you are able to list the changed contents\nof the member.\nThe first 55 bytes of each record are displayed.\n:p.\nIf you enters only 'LIST' the entire member is listed.\n:p.\nWith 'LIST xxx' (xxx represents a single linenumber) you get\na display of that particular line.\nWith 'LIST xxxx-yyyy' (xxxx-yyyy represents a linenumber range)\nyou get a display of that line range.\n:p.\n:lblbox.Note\nNote: If you list more than 16 lines, the message 'EDT017A\nshould TSTVS continue this function? reply Y or N' will be given\nWith reply 'Y' the function continues, with reply 'N' the function\nterminated with msg 'EDT018I function terminated by operator'\n(see messages).\n:elblbox.\n:p.\nAn alias of 'LIST' is 'L'.\n:h3.XLST xxxx-yyyy\n:p.\nThis subcommand is the same as LIST and has the same operands,\nThe difference is, that the entire record will be\ndisplayed (80 positions).\nEach record will be displayed in two lines. Line 1 displays\nthe columns 1-40. Line 2 displays columns 41-80.\n:h3.PRINT 'class'\n:p.\nWith this function the changed contents of the member is\nprinted in a spin-off SYSOUT=class dataset.\nDefault is SYSOUT=C.\n:h3.SUBMIT\n:p.\nWith this subcommand, the changed contents of the member has been\nsubmitted to the JES2 internal reader.\n:i1.JES2\n:h3.RENUM\nTo renumber the linenumbers in cols 73-80 starting with\n00000010 and an increment of 10.\n:p.\nThe user will be notified with message 'EDT013I dataset has been\nre-numbered' after successful RENUM.\n:h3.UNNUM\n:p.\nWith this subcommand you are able to remove the linenumbers\nin columns 73-80. The linenumbers are replaced by blanks.\n:h3.I xxxx\n:p.\n:i1.Insert\nWith this subcommand you are able to insert a line in the member.\nxxxx represents a line number. After this line the line will be\ninserted.\nif you omit the linenumber in the 'I' subcommand the line\nis inserted before line 1.\n:p.\nAfter the subcommand the msg 'EDT003A Enter data....'\nappears to type in the data of the inserted line eventually\nfollowed by msg 'EDT004A Enter sequence number' (Depends on reply\n'U membername' or 'UN membername' on msg EDT200A Enter command..).\n:h3.D xxxx or D xxxx-yyyy\n:p.\nLine xxxx or linenumber range xxxx-yyyy are deleted from the\nmember.\n:h3.R xxxx\n:p.\n:i1.Repeat\nWith this subcommand you are able to duplicate the line\nspecified with 'xxxx'. If you omit the linenumber ('xxxx')\nin the subcommand the first line is repeated.\n:h3.V ON/OFF\n:p.\nV ON is list changed line after the 'C' subcommand, V OFF is don't\nlist after the 'C' subcommand.\n:h3.END\n:p.\nTerminate 'subcommand mode'.   EDT200A appears.\n:lblbox.Note\nIf you have made updates and you haven't saved, the\nmsg 'EDT025A *WARNING* nothing saved, enter 'SAVE' or 'END'\nwill appear. If you enter 'SAVE', the member will be saved.\nWith 'END' the data will not be saved.\n:elblbox.\n:h3.EOJ\n:p.Terminate TSTVS\n:lblbox.Note\nIf you have made updates and you haven't saved, the\nmsg 'EDT025A *WARNING* nothing saved, enter 'SAVE' or 'END'\nwill appear. If you enter 'SAVE', the member will be saved.\nWith 'END' the data will not be saved.\n:elblbox.\n:h3.HELP\n:p.After this subcommand, a brief description of the subcommands\nwill be displayed (msg EDT014I).\n:h3.C (Change)\n:p.The following formats are available\n:ul.\n:li.C xxxx,aaa$bbbb$.\nThe character string symbolic assigned by 'aaa' is\nreplaced by the character string symbolic assigned by\n'bbbbb' (lengths could be unequal)\n:li.C xxxx,$bbbb$\nThe character string 'bbbb' is inserted at the beginning\nof the line. the rest of the data is shifted.\n(Truncate possible).\n:li.c. C xxxx,aaa$$\nThe character string 'aaa' is removed from the line.\nThe rest of the data will be shifted.\n:eul.\n:p.\nThe 'C' subcommand is used to replace a character string in\na certain line, which is represented by 'xxxx'\n:p.If 'xxxx' = ALL, all lines will be searched and all occurrances\nof the string will be changed.\n:p.The delimiter \"$\" should be coded as shown.\n:h3.F $string$\n:p.\nFind the specified string in the dataset. If found, the line in\nwhich the string is found will be displayed. If only an 'F' is\nentered, a repeat find of a previous string will be done; the\nnext occurrance of 'string' will be displayed.\n:p.The delimiter \"$\" should be coded as shown.\n:h3.ADD\n:p.\nWith the ADD subcommand you can add lines at the end of the\nmember.\nAfter the 'ADD' subcommand the msg 'EDT003A Enter data....'\nappears; this message allows you to add data.\n:p.\nThe subcommand mode is ended and the method is similar to the\ncreation of a new member (See previous chapter).\n:h3.xxxx\n:p.\nxxxx represents a line-number, which is totally replaced.\n:p.\nThe msg EDT003A and eventually the msg EDT004A appears, enter\nan input statement and a linenumber.\n:p.\nAfter the execution you are back in the 'Subcommand' mode.\n:p.\nIf you reply EDT003A with 'SAVE', or 'SUBMIT' the\nmember is saved and the indicated action is executed.\nThe msg EDT200A Enter command ... appears and the subcommand\nmode is ended.\n:h3.SAVE\n:p.\nAfter this subcommand the msg 'EDT026A Enter new name of reply\n'U' to save your workarea in member xxxxxxxx' appears.\nBy replying to this message the member is saved and the\nsubcommand mode is ended. EDT200A appears.\n:h3.Remarks\n:p.\n:ol.\n:li.The linenumbers in the operands of the subcommands are\ngenerated by the program TSTVS and are max four positions long\n(Leading zeroes may be omitted).\nThese numbers are not physically in the data and are visible\nif you enter a 'LIST', 'XLST' or 'PRINT' subcommand.\nThe connection of linenumber and line change, when you enter\na 'I', 'R' or 'D' subcommand. (The first line is always 1 and the\nincrement is always 1).\n:li.The maximum of lines is 3999.\n:p.\nDuring updating of a member with more than 3999 lines, the\nfirst 3999 lines are read and saved. (be careful).\n:eol.\n.pa\n:h2.Messages and codes\n:p.\nThere are four different kind of messages:\n:ul c.\n:li.Informational messages, the message id = EDTxxxI.\n:li.Action messages, the message id = EDTxxxA, which are described\nin the previous chapters.\n:li.Error messages, the message id = EDTxxxE.\n:li.Disastrous messages, the message id = EDTxxxD.\n:eul.\n:p.\n:h3.Messages given by the TSTVS editor\n:msgl c.\n:msg.EDT001I TSTVS version 3.0 - MM/DD/YY started\n:sysact.After start of TSTVS, this message will be given. It's a\nnon-deletable message. This message will be deleted if TSTVS\nis stopped with reply EOJ.\n:msg.EDT003A Enter data, 'SAVE' or 'SUBMIT'\n:presp.Reply this message as indicated.\n:msg.EDT004A Enter sequence number\n:presp.Reply this message with a valid sequence number. This\nmessage will only appear, if you edit numbered images\n(reply AN member or UN member om msg EDT200A)\n:msg.EDT005A Enter Subcommand or 'HELP'.\n:presp.This message has a lot of replies. See chapter 'Update a\nmember' of the possible replies.\n:msg.EDT006E Invalid line-number, reply again\n:sysact.One of the following have occurred:\n:ul c.\n:li.Not numeric linenumber.\n:li.Linenumber higher than 3999\n:li.Try to delete line 0000\n:li.Try to update line 0000\n:li.Linenumber 2 is less than linenumber-1 in 'LIST' or 'D'\nsubcommand.\n:li.Not existing subcommand on msg\n'EDT005A Enter subcommand or 'HELP''\n:eul.\n:msg.EDT007E parameter error, defaults taken ROUTCDE=(2,3)\n:sysact.\nThe program TSTVS can be started with a parm, which specifies\nthe routing code for all the messages.\nWhen the routing code in the parm is not 1 - 16, above msg\nwill appear and the defaults are taken.\n:msg.EDT008E seq. number not numeric, reply again\n:sysact.\nReply on EDT004A is in error.\n:msg.EDT010E membername to be updated not present, reenter\n:sysact.\nThis message appears when you entered 'U membername' of 'UN member\nname' on msg 'EDT200A Enter command..' and the member does not\nexist.\n:presp.After the error msg EDT010E the msg EDT200A Enter command......\nappears, enter the correct membername.\n:msg.EDT011I member XXXXXX (NOT) DELETED/RENAMED (RETURNCODE RRRR)\n:i1.RENAME\n:i1.DELETE\n:sysact.This message appears after reply 'D membername' or\n'R membername,newname' on EDT200A.\nIf there is an error condition during delete of the member,\nThe member is not deleted/renamed and a returncode appears.\n.br\nAfter msg EDT011I appears msg EDT200A.\n:msg.EDT012E maximum lines in member, insertion impossible\n:sysact.The maximum number of lines is present in the workarea during\nan 'I' or an 'R' subcommand.\n:i1.Insert\n:i1.Repeat\nThe above msg is displayed and the insert function is\nterminated.\n:msg.EDT015E string(s) not found\n:sysact.One of the following errors has been occurred.\n:ul c.\n:li.False character string in 'C' subcommand.\n:li.Character string longer than 24 positions.\n:li.Delimiter (dollarsign) forgotten in 'C' subcommand.\n:li.Text not found in 'F' subcommand.\n:eul.\n:msg.EDT017A should TSTVS continue this function, reply Y or N\n:sysact.This reply appears if the output of the command 'PDSLIST'\nand the subcommands 'LIST' and 'XLST' contains more than 16\nlines.\n:presp.Reply as indicated.\n:msg.EDT018I function terminated by operator\n:sysact.\nMsg 'EDT017A should TSTVS continue this function, reply 'Y' or 'N'\nreplied with 'N'\n:msg.EDT019E dyn. ALLOC errorcode xxxx infocode yyyy\n:i1.Allocation\n:i2.error codes\n:i2.info codes\n:sysact.This message can appear:\n:ul c.\n:li.After reply 'SUBMIT' on msg EDT003A.\nThe allocation of the JES2 INTRDR dataset has been failed.\nTSTVS tries to submit via a start of the RDRTST reader procedure.\n:i1.JES2\n:li.After reply 'PRINT' on msg EDT005A.\nThe print function is terminated.\n:eul.\n:i1.Allocation\n:presp.The error code and infocode are located in the manual\n'MVS/ESA Application Development Guide'\n:msg.EDT021I job jjjjjjjj submitted\n:sysact.This msg appears after successful submission of a job.\n:msg.EDT022I verification turned ON/OFF\n:sysact.This message appears after the 'V ON' or 'V OFF' subcommand.\n:msg.EDT023I xxxx lines printed in SYSOUT=class\n:sysact.This message appears after a successful 'PRINT' subcommand.\n:msg.EDT024I member xxxxxxxx successfully saved\n:sysact.\nThis message appears after a successfull 'SAVE' (xxxxxxxx\nis the membername replied on msg EDT200A or EDT026A).\n:msg.EDT025A *WARNING* nothing saved, Enter 'SAVE' or 'END'\n:sysact.The operator had replied 'EOJ' or 'END' on\nmsg EDT005A and updates are made.\n:presp.Reply SAVE to save the member or END to ignore the\nchanges.\n:msg.EDT025E invalid character string\n:sysact.\nEnd delimiter ('$') of string in 'F' subcommand not found\n:msg.EDT026A Enter new name to save your workarea or reply 'U'\nto save your workarea in member 'member'\n:sysact.This message appears after subcommand 'SAVE'.\n:presp.Reply as indicated.\n:msg.EDT026E invalid repeat find, no string found\n:sysact.\nAn 'F' subcommand entered without operands and without a\nvalid previous 'F string' subcommand.\n:msg.EDT027D ABENDxxx detected, retry successful\n:i1.Abnormal end\n:sysact.\nTSTVS had abended for some reason. The recovery routine entered\nhad run successful and TSTVS is continuing in the same mode as\nbefore the abend (msg EDT200A or EDT005A will be given)\n:presp.\nIf xxx is a severe completion code (like 0Cx abends), report\nthis failure to the reponsible systems programmer.\n:msg.EDT028E allocation subsystem dataset not allowed\n:sysact.\nTSTVS is running as a 'subsystem' It's SSVT has been defined in\nSYS1.PARMLIB(IEFSSNxx). This message will be issued during a\n'PRINT' or a 'SUBMIT' subcommand.\n:emsgl.\n:h3.Messages of the Allocation/Rename processor\n:msgl c.\n:msg.EDT100A Enter dataset name or 'CANCEL'\n:sysact.After reply 'ALLOC' or 'RENAME' on msg EDT200A appear this\nmessage.\n:presp.Reply with a valid dataset or CANCEL to terminate\nRENAME or ALLOC.\n:msg.EDT101A Enter volume serial or 'U'\n:sysact.This message appears after reply on msg EDT100A.\n:presp.Reply with a volume serial to allocate or rename a not\ncatalogued or an 'U' for a catalogued dataset.\n:msg.EDT102E ALLOCATION/UNALLOC ERRORCODE=xxxx INFOCODE=yyyy,R15=cccc\n:i1.Allocation\n:i2.error codes\n:i2.info codes\n:sysact.Allocation or unalloc failed of the library. refer to 'MVS/ESA\nAPPLICATION DEVELOPMENT GUIDE' concerning the error- info-\nand returncodes.\nAfter this error msg, TSTVS try to allocate/unalloc again.\n:msg.EDT103I Allocation of dataset sucessful\n:sysact.This message appears after a successful 'ALLOC' command.\n:msg.EDT104E Dataset not on volume\n:sysact.\nThis msg is caused by a wrong reply on msg EDT101A ENTER VOLUME\nSERIAL. After this msg EDT104E, TSTVS asks again for dsname\nand volume.\n:msg.EDT105E Dataset not in catalog\n:sysact.\nThis message appears after reply 'U' on msg EDT101A Enter volume\nserial or 'U'. Enter the correct datasetname or specify volume\nserial.\n:msg.EDT106A Enter NEW dataset name or 'CANCEL'\n:presp.Reply this message with a valid non-existing dataset name.\n:msg.EDT107E Newname already catalogued\n:sysact.\nThe user enters a new-name, which is already catalogued.\nTSTVS asks again for a newname (msg EDT106A)\n:msg.EDT108E Newname already on volume\n:sysact.\nThe newname entered has been found on the volume\n:presp.Reenter\n:msg.EDT109E RENAME failed, RC=xxxx, Statuscd=xx\n:i1.Returncode\n:i1.Statuscode\n:sysact.\nAn Error has been occurred during RENAME processing.\n:presp.Refer to IBM manual:\nMVS/ESA DFP Systems Programmers Reference for the return and\nstatus code.\nSometimes MVS/ESA will give msg IEF614I\n:msg.EDT110E xxCATALOG failed, RC=xxxx\n:i1.Returncode\n:sysact.\nAn UNCATALOG of the 'old name' or a CATALOG of the 'new name' during\nRENAME processing has been failed.\n:presp.Refer to MVS/ESA DFP System\nProgrammer Reference (SC26-4567), concerning the return code\n:msg.EDT111E UCBLOOK failed RC=xxxx,VOL=vvvvvv\n:i1.Returncode\n:sysact.\nThis error can occur during rename of a not catalogued dataset\n(msg EDT101A has been replied with a volume serial number). This\nis a severe error.\n:presp.Report this error to the responsable systems programmer.\n:msg.EDT198I Function canceled by operator\n:presp.Message EDT100A or EDT106A has been replied with 'CANCEL'\n:msg.EDT199I RENAME of dataset successful\n:sysact.A successful RENAME has been executed.\n:emsgl.\n:h3.Messages of the command processor\n:msgl c.\n:msg.EDT200A Enter command or 'HELP'\n:presp.The possible replies on this message are:\n:ul c.\n:li.ALLOC. Allocate a dataset\n:li.RENAME. Rename a dataset\n:li.PDSLIST,(key). LISTPDS of the dataset\n:li.EOJ. Terminate TSTVS\n:li.A member. Add an unnumbered member\n:li.AN member. Add a numbered member\n:li.U member. Update an unnumbered member\n:li.UN member. Update a numbered member\n:li.D member. Delete a member\n:li.R member,newname. Rename a member\n:i1.RENAME\n:i1.DELETE\n:eul.\n:msg.EDT202E No dataset allocated - Reply 'ALLOC'\n:i1.Allocation\n:sysact.This msg is displayed, if you entered 'A(N) membername',\n'U(N) membername', D or R membername or 'PDSLIST' and the\nlibrary is not allocated by a previous 'ALLOC' command\n:msg.EDT203E Command invalid, Reenter\n:sysact.\nThis message appears after a non existing command on msg\nEDT200A.\n:msg.EDT204E Membername invalid, Reenter\n:sysact.\nThis message is caused by an invalid member in the commands\non message EDT200A.\n:emsgl.\n:h3.Messages of the security routine\n:msgl c.\n:msg.EDT301A Enter name of an authorized user\n:i1.Userid\n:presp.Reply this message with a RACF or an ACF2 userid, which has\naccess to the $TSTVS resource in the FACILITY class.\n:i1.$TSTVS\n:i1.RACF\n:i2.FACILITY\n:i1.ACF2\n:i2.Generalized resource\n:msg.EDT302A Enter password of this authorized user\n:i1.Password\n:presp.Reply with a valid password of the user specified on msg\nEDT301A.\n:msg.EDT303E No security system active, bypass userid check\n:sysact.ACF2 or RACF is not active or stopped.\n.br\nTSTVS will ask for it's own password (msg EDT010A)\n:msg.EDT304E Userid has no access tot the 'TSTVS' program\n:sysact.\nThe user supplied has no access to the $TSTVS profile in the\nFACILITY class or no access to the ACF2 Generalized resource.\n.br\nMessages EDT001A and EDT002A are issued again for retry.\nIf two retries are done, TSTVS wil terminate.\n:msg.EDT305E RACINIT failed for user=xxxxxxxx rc=rrrr, RACF rc=yyyy\n:i1.Returncode\n:i1.RACF\n:i2.SAF Returncode\n:sysact.An error has occured during the RACROUTE REQUEST=VERIFY\n:presp.Contact the responsable systems programmer.\n:msg.EDT306W Userid=xxxxxxxx, unauthorized password\n:sysact.Msg EDT302A had been replied with the wrong password.\n:presp.Reply messages EDT001A and EDT002A again for a correct\nuserid/password combination.\n:msg.EDT307W Userid=xxxxxxxx, password has been expired\n:i1.Userid\n:i1.Password\n:presp.Retry with another userid+password. Use for example TSO\nto create a new password for that particular user.\n:msg.EDT309I Userid has been verified and accepted\n:sysact.\nThe supplied Userid and password is authorized. You are allowed\nto enter the world of TSTVS.\n:msg.EDT310A Enter TSTVS password\n:i1.Password\n:sysact.This message appears if neither RACF or ACF2 is active.\n:presp.Refer to the systems programmer\nfor the correct password or (re)start ACF2/RACF.\n:emsgl.\n.pa\n:h2.JCL needed to execute TSTVS\n:i1.JCL\n:lblbox.JCL for TSTVS\n:xmp.\n//EDIT     PROC PRM=2\n//TSTVS    EXEC PGM=TSTVS,PARM=&PRM,TIME=1440 ** routing code ***\n:exmp.\n:elblbox.\nTSTVS can be started on the console with:\n:lblbox.Starting TSTVS\nS EDIT,PRM=routcde\n:elblbox.\n:i1.SYS1.PROCLIB\n:i1.SYS1.PARMLIB\n:i2.IEFSSNxx\nThe procedure EDIT is located in the SYS1.PROCLIB and is defined in\nSYS1.PARMLIB(IEFSSNxx).\n:index.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$MANUAL$": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00 \\x01\\x02\"O\\x01\\x02\"O\\t\\x19\\x04\\xf2\\x04\\xf2\\x00\\x00\\xe3\\xc5\\xe7\\xe3@@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2002-08-12T09:19:20", "lines": 1266, "newlines": 1266, "modlines": 0, "user": "TEXT"}, "text": "\n\n\n\n\n\nCONTENTS\n________\n\n\n\n\n\n1.0  MANUAL CONSOLE MONITOR TSTVS VERSION 3.0   1\n1.1  Introduction   2\n  1.1.1  Input and output   2\n1.2  Startup of TSTVS   2\n1.3  Allocating datasets   3\n1.4  Renaming datasets   3\n  1.4.1  RENAME a catalogued dataset   4\n  1.4.2  RENAME a not catalogued dataset   4\n1.5  List the directory of a PDS   4\n1.6  Create a member   5\n1.7  Update a member   6\n  1.7.1  LIST xxxx-yyyy   6\n  1.7.2  XLST xxxx-yyyy   6\n  1.7.3  PRINT 'class'   6\n  1.7.4  SUBMIT   6\n  1.7.5  RENUM   7\n  1.7.6  UNNUM   7\n  1.7.7  I xxxx   7\n  1.7.8  D xxxx or D xxxx-yyyy   7\n  1.7.9  R xxxx   7\n  1.7.10  V ON/OFF   7\n  1.7.11  END   7\n  1.7.12  EOJ   8\n  1.7.13  HELP   8\n  1.7.14  C (Change)   8\n  1.7.15  F $string$   9\n  1.7.16  ADD   9\n  1.7.17  xxxx   9\n  1.7.18  SAVE   9\n  1.7.19  Remarks   9\n1.8  Messages and codes   10\n  1.8.1  Messages given by the TSTVS editor   10\n  1.8.2  Messages of the Allocation/Rename processor   12\n  1.8.3  Messages of the command processor   13\n  1.8.4  Messages of the security routine   14\n1.9  JCL needed to execute TSTVS   16\n\n2.0  INDEX   17\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                  Contents  i\n\n\n\n\n\n\n\n\n\n1.0  MANUAL CONSOLE MONITOR TSTVS VERSION 3.0\n_____________________________________________\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  1\n\n\n\n\n\n\n\n\n\n1.1  INTRODUCTION\n_________________\n\nTSTVS  is  developed for editing PDS member if TSO/VTAM is not available.  It\nis a product of Skybird Systems.   TSTVS communicates  with  the  MVS  master\nconsole operator.\n\n\n1.1.1  INPUT AND OUTPUT\n\nINP01 and OUTP01. Both ddnames are dynamically allocated.\n\n\n1.2  STARTUP OF TSTVS\n_____________________\n\nAt startup, TSTVS asks for an authorized userid + a password (msg EDT301A and\nEDT302A).  With  this  userid  and  password,  TSTVS  will perform a RACROUTE\nREQUEST=VERIFY with terminalname=LUTSTVS.\n\nAfter verification of the user+password+terminal, the resource $TSTVS in  the\nFACILITY class will be checked. In A RACF-system the user should be connected\nto  this  profile. In an ACF2 system, a generalized resource should have been\ncreated. The resource type have to be defined in the GSO CLASMAP record (e.g.\nSAFMAPS(FAC/FACILITY)).\n\nIf no RACF or ACF2 is active (or stopped), TSTVS  will  bypass  the  security\ncheck  and  will  ask  for  the program password (msg EDT310A).  Refer to the\nresponsible systems programmer for the correct password.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  2\n\n\n\n\n\n\n\n\n\n1.3  ALLOCATING DATASETS\n________________________\n\nIf  you start TSTVS the msg EDT200A Enter command or 'HELP' appears after the\nsecurity check.\n\nIf you reply EDT200A with 'ALLOC' the monitor  prompts  with  'EDT100A  Enter\ndataset  name  or 'CANCEL'', which should be replied with a dsname of max. 44\nbytes or the word 'CANCEL' If the reply is 'CANCEL', the ALLOC function  will\nbe  terminated.    msg  EDT198I en EDT200A will appear.  After this reply the\nquestion 'EDT101A Enter volume serial or 'U' appears, which should be replied\nwith a max 6 positions long volume number  or  'U'.  If  you  reply  'U'  the\ncatalog is searched.\n\nIf  these  two replies are ok, the msg 'EDT103I Allocation of dataset is suc-\ncessful'  will appear, otherwise a suitable error message will  be  produced.\n(see messages)\n\nIf  you have finished with this library you can allocate another library with\nALLOC. (The previous library is automaticly freed).   Other possible  replies\non msg EDT200A are.\n\nCOMMAND           FUNCTION\n\nRENAME            Rename of a data set\n\nA MEMBERNAME      Create a member\n\nAN MEMBERNAME     Create a member including line numbers\n\nU MEMBERNAME      Update of a member\n\nUN MEMBERNAME     Update of a member including line numbers\n\nD MEMBERNAME      DELETE a member from the library\n\nR MEMBER,NEWNAME  RENAME a member in the library into 'newname'\n\nPDSLIST           Listpds of the entire library\n\nPDSLIST,'KEY'     Listpds  of  the  library  starting with member, whose name\n                  starts with 'key'\n\nEOJ               Terminate the console monitor\n\nHELP              Gives help information about the commands. Message  EDT205I\n                  will be given\n\n\n1.4  RENAMING DATASETS\n______________________\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  3\n\n\n\n\n\n\n\n\n\n1.4.1  RENAME A CATALOGUED DATASET\n\nThe  reply  on  msg  EDT200A  ENTER  COMMAND OR 'HELP' should be replied with\n'RENAME'. After this, reply EDT100A ENTER DATASET NAME  OR  'CANCEL'  with  a\nname  of  a  catalogued  dataset and reply EDT101A ENTER VOLUME SERIAL OR 'U'\nwith an 'U'\n\nNow reply the next msg EDT106A ENTER NEW DATASET  NAME  OR  'CANCEL'  with  a\nnewname. This name should not exist in any catalog.\n\nAfter  RENAME,  the message EDT199I RENAME OF DATASET SUCCESSUL or a suitable\nerror message should appear.\n\n\n1.4.2  RENAME A NOT CATALOGUED DATASET\n\nThe only difference between RENAME of a not catalogued dataset  and  a  cata-\nlogued dataset (see previous chapter) is the reply on msg EDT101A.\n\nThis  message should be replied with a valid and online volume serial number.\nAfter reply of msg EDT106A, the dataset will be renamed on that volume.\n\n+--- NOTE! -----------------------------------------------------------------+\n|                                                                           |\n| If msg EDT101A has been replied with  a  volume  serial  number  and  the |\n| dataset is catalogued, the catalog entry is NOT renamed.                  |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\n\n1.5  LIST THE DIRECTORY OF A PDS\n________________________________\n\nA  listing  of  the  directory of the allocated PDS will be displayed, if the\nreply on  msg  EDT200A  is  'PDSLIST'  or  'PDSLIST,key',  If  the  reply  is\n'PDSLIST',  a  list  of  the directory is displayed upon the console.  If the\nreply is 'PDSLIST,key', a list of directory-entries  is  displayed,  starting\nwith the membername beginning with 'key'.  When 'key' is not present the list\nbegins with next higher key.\n\n+--- NOTE ------------------------------------------------------------------+\n|                                                                           |\n| If you enters 'PDSLIST' or 'PDSLIST,key' and there are more than 16 lines |\n| the  msg  'EDT017A  SHOULD  TSTVS  CONTINUE THIS FUNCTION ? REPLY Y OR N' |\n| appears. If you reply with 'Y' the function continues. With reply 'N' the |\n| function is terminated with msg EDT018I (see messages).                   |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\n\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  4\n\n\n\n\n\n\n\n\n\n1.6  CREATE A MEMBER\n____________________\n\nMessage  'EDT200A Enter command or 'HELP' must be replied with 'A membername'\nor 'AN membername' If the specified name is already present in  the  library,\nthe data can be overwritten.\n\nNow appears message 'EDT003A Enter data, 'SAVE' or 'SUBMIT'' The 'data' needs\nno  comment  R xx,SAVE is to save the data in the member The messages EDT026A\nand EDT200A will be given.  R xx,SUBMIT is save the data and submit  the  job\nto  the  JES2  internal  reader.   After the action EDT200A appears.   If msg\nEDT003A has been replied with 'SAVE' or 'SUBMIT', the user will  be  prompted\nwith the message:  'EDT026A enter new name to save your workarea or reply 'U'\nto  save  your workarea in member xxxxxxxx' If you reply with a 'newname' the\nmember is saved under that name. With reply 'U' the member is saved under the\nname, which has been replied on the message EDT200A.\n\nIf the reply on msg EDT003A has been replied with a input stmnt, then appears\nthe msg 'EDT004A Enter sequence number', if the msg EDT200A has been  replied\nwith  'AN  membername'  After  these messages the msg 'EDT003A Enter data ..'\nappears again to type in your next statement.\n\nIf all the statements are typed in, you can reply msg EDT003A with 'SAVE'  or\n'SUBMIT'\n\nAfter  'SAVE'  or  'SUBMIT' appears first msg EDT026A to save your member and\nthen msg EDT200A.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  5\n\n\n\n\n\n\n\n\n\n1.7  UPDATE A MEMBER\n____________________\n\nIf  the  message  'EDT200A  Enter  command  .....'  has  been replied with 'U\nmembername' or 'UN membername', you get into the 'subcommand mode' of TSTVS.\n\nThe subcommand mode is anounced with the message 'EDT005A Enter subcommand OR\n'HELP''.\n\nThe subcommands are:\n\n\n1.7.1  LIST XXXX-YYYY\n\nWith this subcommand you are able to list the changed contents of the member.\nThe first 55 bytes of each record are displayed.\n\nIf you enters only 'LIST' the entire member is listed.\n\nWith 'LIST xxx' (xxx represents a single linenumber) you  get  a  display  of\nthat  particular  line.    With  'LIST  xxxx-yyyy'  (xxxx-yyyy  represents  a\nlinenumber range) you get a display of that line range.\n\n+--- NOTE ------------------------------------------------------------------+\n|                                                                           |\n| Note: If you list more than 16 lines, the message 'EDT017A  should  TSTVS |\n| continue  this  function?  reply Y or N' will be given With reply 'Y' the |\n| function continues, with reply  'N'  the  function  terminated  with  msg |\n| 'EDT018I function terminated by operator' (see messages).                 |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\nAn alias of 'LIST' is 'L'.\n\n\n1.7.2  XLST XXXX-YYYY\n\nThis subcommand is the same as LIST and has the same operands, The difference\nis,  that  the  entire  record will be displayed (80 positions).  Each record\nwill be displayed in two lines. Line 1 displays the columns 1-40. Line 2 dis-\nplays columns 41-80.\n\n\n1.7.3  PRINT 'CLASS'\n\nWith this function the changed  contents  of  the  member  is  printed  in  a\nspin-off SYSOUT=class dataset.  Default is SYSOUT=C.\n\n\n1.7.4  SUBMIT\n\nWith  this  subcommand, the changed contents of the member has been submitted\nto the JES2 internal reader.\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  6\n\n\n\n\n\n\n\n\n\n1.7.5  RENUM\n\nTo renumber the linenumbers in cols  73-80  starting  with  00000010  and  an\nincrement of 10.\n\nThe user will be notified with message 'EDT013I dataset has been re-numbered'\nafter successful RENUM.\n\n\n1.7.6  UNNUM\n\nWith this subcommand you are able to remove the linenumbers in columns 73-80.\nThe linenumbers are replaced by blanks.\n\n\n1.7.7  I XXXX\n\nWith  this  subcommand  you  are  able  to insert a line in the member.  xxxx\nrepresents a line number. After this line the line will be inserted.  if  you\nomit the linenumber in the 'I' subcommand the line is inserted before line 1.\n\nAfter  the subcommand the msg 'EDT003A Enter data....' appears to type in the\ndata of the inserted line eventually followed by msg 'EDT004A Enter  sequence\nnumber'  (Depends  on  reply 'U membername' or 'UN membername' on msg EDT200A\nEnter command..).\n\n\n1.7.8  D XXXX OR D XXXX-YYYY\n\nLine xxxx or linenumber range xxxx-yyyy are deleted from the member.\n\n\n1.7.9  R XXXX\n\nWith this subcommand you are  able  to  duplicate  the  line  specified  with\n'xxxx'.  If you omit the linenumber ('xxxx') in the subcommand the first line\nis repeated.\n\n\n1.7.10  V ON/OFF\n\nV ON is list changed line after the 'C' subcommand, V OFF is don't list after\nthe 'C' subcommand.\n\n\n1.7.11  END\n\nTerminate 'subcommand mode'.   EDT200A appears.\n\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  7\n\n\n\n\n\n\n\n\n\n+--- NOTE ------------------------------------------------------------------+\n|                                                                           |\n| If you have  made  updates  and  you  haven't  saved,  the  msg  'EDT025A |\n| *WARNING*  nothing saved, enter 'SAVE' or 'END' will appear. If you enter |\n| 'SAVE', the member will be saved.  With 'END' the data will not be saved. |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\n\n1.7.12  EOJ\n\nTerminate TSTVS\n\n+--- NOTE ------------------------------------------------------------------+\n|                                                                           |\n| If  you  have  made  updates  and  you  haven't  saved,  the msg 'EDT025A |\n| *WARNING* nothing saved, enter 'SAVE' or 'END' will appear. If you  enter |\n| 'SAVE', the member will be saved.  With 'END' the data will not be saved. |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\n\n1.7.13  HELP\n\nAfter  this  subcommand,  a brief description of the subcommands will be dis-\nplayed (msg EDT014I).\n\n\n1.7.14  C (CHANGE)\n\nThe following formats are available\n\no   C xxxx,aaa$bbbb$.  The character string symbolic  assigned  by  'aaa'  is\n    replaced  by  the  character string symbolic assigned by 'bbbbb' (lengths\n    could be unequal)\n\no   C xxxx,$bbbb$ The character string 'bbbb' is inserted at the beginning of\n    the line. the rest of the data is shifted.  (Truncate possible).\n\no   c. C xxxx,aaa$$ The character string 'aaa' is removed from the line.  The\n    rest of the data will be shifted.\n\nThe 'C' subcommand is used to replace a character string in a  certain  line,\nwhich is represented by 'xxxx'\n\nIf 'xxxx' = ALL, all lines will be searched and all occurrances of the string\nwill be changed.\n\nThe delimiter \"$\" should be coded as shown.\n\n\n\n\n\n\n\n                                  Manual Console Monitor TSTVS version 3.0  8\n\n\n\n\n\n\n\n\n\n1.7.15  F $STRING$\n\nFind  the  specified  string  in the dataset. If found, the line in which the\nstring is found will be displayed. If only an 'F' is entered, a  repeat  find\nof  a  previous  string will be done; the next occurrance of 'string' will be\ndisplayed.\n\nThe delimiter \"$\" should be coded as shown.\n\n\n1.7.16  ADD\n\nWith  the  ADD  subcommand you can add lines at the end of the member.  After\nthe 'ADD' subcommand the msg 'EDT003A Enter data....' appears;  this  message\nallows you to add data.\n\nThe  subcommand  mode is ended and the method is similar to the creation of a\nnew member (See previous chapter).\n\n\n1.7.17  XXXX\n\nxxxx represents a line-number, which is totally replaced.\n\nThe msg EDT003A and eventually the msg EDT004A appears, enter an input state-\nment and a linenumber.\n\nAfter the execution you are back in the 'Subcommand' mode.\n\nIf you reply EDT003A with 'SAVE', or 'SUBMIT' the member  is  saved  and  the\nindicated  action is executed.  The msg EDT200A Enter command ... appears and\nthe subcommand mode is ended.\n\n\n1.7.18  SAVE\n\nAfter this subcommand the msg 'EDT026A Enter new name of reply  'U'  to  save\nyour  workarea  in member xxxxxxxx' appears.  By replying to this message the\nmember is saved and the subcommand mode is ended. EDT200A appears.\n\n\n1.7.19  REMARKS\n\n1.  The linenumbers in the operands of the subcommands are generated  by  the\n    program  TSTVS  and  are  max  four positions long (Leading zeroes may be\n    omitted).  These numbers are not physically in the data and  are  visible\n    if  you  enter a 'LIST', 'XLST' or 'PRINT' subcommand.  The connection of\n    linenumber and line change, when you enter a 'I', 'R' or 'D'  subcommand.\n    (The first line is always 1 and the increment is always 1).\n\n2.  The maximum of lines is 3999.\n\n    During  updating  of  a  member with more than 3999 lines, the first 3999\n    lines are read and saved. (be careful).\n\n\n                                  Manual Console Monitor TSTVS version 3.0  9\n\n\n\n\n\n\n\n\n\n1.8  MESSAGES AND CODES\n_______________________\n\nThere are four different kind of messages:\n\no   Informational messages, the message id = EDTxxxI.\no   Action  messages,  the  message  id = EDTxxxA, which are described in the\n    previous chapters.\no   Error messages, the message id = EDTxxxE.\no   Disastrous messages, the message id = EDTxxxD.\n\n\n1.8.1  MESSAGES GIVEN BY THE TSTVS EDITOR\n\nEDT001I TSTVS VERSION 3.0 - MM/DD/YY STARTED\nSYSTEM ACTION:  After start of TSTVS, this message will be given. It's a non-\ndeletable message. This message will be deleted  if  TSTVS  is  stopped  with\nreply EOJ.\n\nEDT003A ENTER DATA, 'SAVE' OR 'SUBMIT'\nPROGRAMMER RESPONSE:  Reply this message as indicated.\n\nEDT004A ENTER SEQUENCE NUMBER\nPROGRAMMER  RESPONSE:   Reply this message with a valid sequence number. This\nmessage will only appear, if you edit numbered images (reply AN member or  UN\nmember om msg EDT200A)\n\nEDT005A ENTER SUBCOMMAND OR 'HELP'.\nPROGRAMMER  RESPONSE:  This message has a lot of replies. See chapter 'Update\na member' of the possible replies.\n\nEDT006E INVALID LINE-NUMBER, REPLY AGAIN\nSYSTEM ACTION:  One of the following have occurred:\no   Not numeric linenumber.\no   Linenumber higher than 3999\no   Try to delete line 0000\no   Try to update line 0000\no   Linenumber 2 is less than linenumber-1 in 'LIST' or 'D' subcommand.\no   Not existing subcommand on msg 'EDT005A Enter subcommand or 'HELP''\n\nEDT007E PARAMETER ERROR, DEFAULTS TAKEN ROUTCDE=(2,3)\nSYSTEM ACTION:  The program TSTVS can be started with a parm, which specifies\nthe routing code for all the messages.  When the routing code in the parm  is\nnot 1 - 16, above msg will appear and the defaults are taken.\n\nEDT008E SEQ. NUMBER NOT NUMERIC, REPLY AGAIN\nSYSTEM ACTION:  Reply on EDT004A is in error.\n\nEDT010E MEMBERNAME TO BE UPDATED NOT PRESENT, REENTER\nSYSTEM  ACTION:   This message appears when you entered 'U membername' of 'UN\nmember name' on msg 'EDT200A Enter command..' and the member does not exist.\nPROGRAMMER RESPONSE:  After the error  msg  EDT010E  the  msg  EDT200A  Enter\ncommand......  appears, enter the correct membername.\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  10\n\n\n\n\n\n\n\n\n\nEDT011I MEMBER XXXXXX (NOT) DELETED/RENAMED (RETURNCODE RRRR)\nSYSTEM  ACTION:   This  message  appears  after  reply  'D  membername' or 'R\nmembername,newname' on EDT200A.  If there is an error condition during delete\nof the member, The member is not deleted/renamed and a returncode appears.\nAfter msg EDT011I appears msg EDT200A.\n\nEDT012E MAXIMUM LINES IN MEMBER, INSERTION IMPOSSIBLE\nSYSTEM ACTION:  The maximum number of lines is present in the workarea during\nan 'I' or an 'R' subcommand.  The above msg is displayed and the insert func-\ntion is terminated.\n\nEDT015E STRING(S) NOT FOUND\nSYSTEM ACTION:  One of the following errors has been occurred.\no   False character string in 'C' subcommand.\no   Character string longer than 24 positions.\no   Delimiter (dollarsign) forgotten in 'C' subcommand.\no   Text not found in 'F' subcommand.\n\nEDT017A SHOULD TSTVS CONTINUE THIS FUNCTION, REPLY Y OR N\nSYSTEM ACTION:  This reply appears if the output of the command 'PDSLIST' and\nthe subcommands 'LIST' and 'XLST' contains more than 16 lines.\nPROGRAMMER RESPONSE:  Reply as indicated.\n\nEDT018I FUNCTION TERMINATED BY OPERATOR\nSYSTEM  ACTION:   Msg 'EDT017A should TSTVS continue this function, reply 'Y'\nor 'N' replied with 'N'\n\nEDT019E DYN. ALLOC ERRORCODE XXXX INFOCODE YYYY\nSYSTEM ACTION:  This message can appear:\no   After reply 'SUBMIT' on msg EDT003A.  The allocation of the  JES2  INTRDR\n    dataset has been failed.  TSTVS tries to submit via a start of the RDRTST\n    reader procedure.\no   After reply 'PRINT' on msg EDT005A.  The print function is terminated.\nPROGRAMMER  RESPONSE:   The error code and infocode are located in the manual\n'MVS/ESA Application Development Guide'\n\nEDT021I JOB JJJJJJJJ SUBMITTED\nSYSTEM ACTION:  This msg appears after successful submission of a job.\n\nEDT022I VERIFICATION TURNED ON/OFF\nSYSTEM ACTION:  This message appears after the 'V ON' or 'V OFF' subcommand.\n\nEDT023I XXXX LINES PRINTED IN SYSOUT=CLASS\nSYSTEM ACTION:  This message appears after a successful 'PRINT' subcommand.\n\nEDT024I MEMBER XXXXXXXX SUCCESSFULLY SAVED\nSYSTEM ACTION:  This message appears after a successfull 'SAVE' (xxxxxxxx  is\nthe membername replied on msg EDT200A or EDT026A).\n\n\n\n\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  11\n\n\n\n\n\n\n\n\n\nEDT025A *WARNING* NOTHING SAVED, ENTER 'SAVE' OR 'END'\nSYSTEM  ACTION:   The  operator had replied 'EOJ' or 'END' on msg EDT005A and\nupdates are made.\nPROGRAMMER RESPONSE:  Reply SAVE to save the member  or  END  to  ignore  the\nchanges.\n\nEDT025E INVALID CHARACTER STRING\nSYSTEM ACTION:  End delimiter ('$') of string in 'F' subcommand not found\n\nEDT026A  ENTER  NEW  NAME  TO  SAVE  YOUR  WORKAREA OR REPLY 'U' TO SAVE YOUR\nWORKAREA IN MEMBER 'MEMBER'\nSYSTEM ACTION:  This message appears after subcommand 'SAVE'.\nPROGRAMMER RESPONSE:  Reply as indicated.\n\nEDT026E INVALID REPEAT FIND, NO STRING FOUND\nSYSTEM ACTION:  An 'F' subcommand entered  without  operands  and  without  a\nvalid previous 'F string' subcommand.\n\nEDT027D ABENDXXX DETECTED, RETRY SUCCESSFUL\nSYSTEM  ACTION:   TSTVS  had  abended  for  some reason. The recovery routine\nentered had run successful and TSTVS is continuing in the same mode as before\nthe abend (msg EDT200A or EDT005A will be given)\nPROGRAMMER RESPONSE:  If xxx is a severe completion code (like  0Cx  abends),\nreport this failure to the reponsible systems programmer.\n\nEDT028E ALLOCATION SUBSYSTEM DATASET NOT ALLOWED\nSYSTEM  ACTION:  TSTVS is running as a 'subsystem' It's SSVT has been defined\nin SYS1.PARMLIB(IEFSSNxx). This message will be issued during a 'PRINT' or  a\n'SUBMIT' subcommand.\n\n\n1.8.2  MESSAGES OF THE ALLOCATION/RENAME PROCESSOR\n\nEDT100A ENTER DATASET NAME OR 'CANCEL'\nSYSTEM  ACTION:   After  reply 'ALLOC' or 'RENAME' on msg EDT200A appear this\nmessage.\nPROGRAMMER RESPONSE:  Reply with a  valid  dataset  or  CANCEL  to  terminate\nRENAME or ALLOC.\n\nEDT101A ENTER VOLUME SERIAL OR 'U'\nSYSTEM ACTION:  This message appears after reply on msg EDT100A.\nPROGRAMMER  RESPONSE:  Reply with a volume serial to allocate or rename a not\ncatalogued or an 'U' for a catalogued dataset.\n\nEDT102E ALLOCATION/UNALLOC ERRORCODE=XXXX INFOCODE=YYYY,R15=CCCC\nSYSTEM ACTION:  Allocation  or  unalloc  failed  of  the  library.  refer  to\n'MVS/ESA  APPLICATION  DEVELOPMENT  GUIDE'  concerning  the  error- info- and\nreturncodes.  After this error msg, TSTVS try to allocate/unalloc again.\n\nEDT103I ALLOCATION OF DATASET SUCESSFUL\nSYSTEM ACTION:  This message appears after a successful 'ALLOC' command.\n\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  12\n\n\n\n\n\n\n\n\n\nEDT104E DATASET NOT ON VOLUME\nSYSTEM ACTION:  This msg is caused by a wrong  reply  on  msg  EDT101A  ENTER\nVOLUME  SERIAL.  After  this  msg  EDT104E,  TSTVS  asks again for dsname and\nvolume.\n\nEDT105E DATASET NOT IN CATALOG\nSYSTEM  ACTION:   This  message  appears after reply 'U' on msg EDT101A Enter\nvolume serial or 'U'. Enter the correct datasetname or specify volume serial.\n\nEDT106A ENTER NEW DATASET NAME OR 'CANCEL'\nPROGRAMMER RESPONSE:  Reply this message with a  valid  non-existing  dataset\nname.\n\nEDT107E NEWNAME ALREADY CATALOGUED\nSYSTEM  ACTION:   The  user  enters  a new-name, which is already catalogued.\nTSTVS asks again for a newname (msg EDT106A)\n\nEDT108E NEWNAME ALREADY ON VOLUME\nSYSTEM ACTION:  The newname entered has been found on the volume\nPROGRAMMER RESPONSE:  Reenter\n\nEDT109E RENAME FAILED, RC=XXXX, STATUSCD=XX\nSYSTEM ACTION:  An Error has been occurred during RENAME processing.\nPROGRAMMER RESPONSE:  Refer to IBM manual:  MVS/ESA DFP  Systems  Programmers\nReference  for  the  return and status code.  Sometimes MVS/ESA will give msg\nIEF614I\n\nEDT110E XXCATALOG FAILED, RC=XXXX\nSYSTEM ACTION:  An UNCATALOG of the 'old name' or a CATALOG of the 'new name'\nduring RENAME processing has been failed.\nPROGRAMMER RESPONSE:   Refer  to  MVS/ESA  DFP  System  Programmer  Reference\n(SC26-4567), concerning the return code\n\nEDT111E UCBLOOK FAILED RC=XXXX,VOL=VVVVVV\nSYSTEM  ACTION:   This  error  can  occur  during  rename of a not catalogued\ndataset (msg EDT101A has been replied with a volume serial number). This is a\nsevere error.\nPROGRAMMER RESPONSE:  Report this  error  to  the  responsable  systems  pro-\ngrammer.\n\nEDT198I FUNCTION CANCELED BY OPERATOR\nPROGRAMMER  RESPONSE:   Message  EDT100A  or  EDT106A  has  been replied with\n'CANCEL'\n\nEDT199I RENAME OF DATASET SUCCESSFUL\nSYSTEM ACTION:  A successful RENAME has been executed.\n\n\n1.8.3  MESSAGES OF THE COMMAND PROCESSOR\n\n\n\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  13\n\n\n\n\n\n\n\n\n\nEDT200A ENTER COMMAND OR 'HELP'\nPROGRAMMER RESPONSE:  The possible replies on this message are:\no   ALLOC. Allocate a dataset\no   RENAME. Rename a dataset\no   PDSLIST,(key). LISTPDS of the dataset\no   EOJ. Terminate TSTVS\no   A member. Add an unnumbered member\no   AN member. Add a numbered member\no   U member. Update an unnumbered member\no   UN member. Update a numbered member\no   D member. Delete a member\no   R member,newname. Rename a member\n\nEDT202E NO DATASET ALLOCATED - REPLY 'ALLOC'\nSYSTEM  ACTION:   This  msg  is  displayed, if you entered 'A(N) membername',\n'U(N) membername', D or R membername or 'PDSLIST'  and  the  library  is  not\nallocated by a previous 'ALLOC' command\n\nEDT203E COMMAND INVALID, REENTER\nSYSTEM  ACTION:   This  message  appears  after a non existing command on msg\nEDT200A.\n\nEDT204E MEMBERNAME INVALID, REENTER\nSYSTEM ACTION:  This message is caused by an invalid member in  the  commands\non message EDT200A.\n\n\n1.8.4  MESSAGES OF THE SECURITY ROUTINE\n\nEDT301A ENTER NAME OF AN AUTHORIZED USER\nPROGRAMMER RESPONSE:  Reply this message with a RACF or an ACF2 userid, which\nhas access to the $TSTVS resource in the FACILITY class.\n\nEDT302A ENTER PASSWORD OF THIS AUTHORIZED USER\nPROGRAMMER  RESPONSE:   Reply  with a valid password of the user specified on\nmsg EDT301A.\n\nEDT303E NO SECURITY SYSTEM ACTIVE, BYPASS USERID CHECK\nSYSTEM ACTION:  ACF2 or RACF is not active or stopped.\nTSTVS will ask for it's own password (msg EDT010A)\n\nEDT304E USERID HAS NO ACCESS TOT THE 'TSTVS' PROGRAM\nSYSTEM ACTION:  The user supplied has no access to the $TSTVS profile in  the\nFACILITY class or no access to the ACF2 Generalized resource.\nMessages  EDT001A and EDT002A are issued again for retry.  If two retries are\ndone, TSTVS wil terminate.\n\nEDT305E RACINIT FAILED FOR USER=XXXXXXXX RC=RRRR, RACF RC=YYYY\nSYSTEM ACTION:  An error has occured during the RACROUTE REQUEST=VERIFY\nPROGRAMMER RESPONSE:  Contact the responsable systems programmer.\n\n\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  14\n\n\n\n\n\n\n\n\n\nEDT306W USERID=XXXXXXXX, UNAUTHORIZED PASSWORD\nSYSTEM ACTION:  Msg EDT302A had been replied with the wrong password.\nPROGRAMMER RESPONSE:  Reply messages EDT001A and EDT002A again for a  correct\nuserid/password combination.\n\nEDT307W USERID=XXXXXXXX, PASSWORD HAS BEEN EXPIRED\nPROGRAMMER RESPONSE:  Retry with another userid+password. Use for example TSO\nto create a new password for that particular user.\n\nEDT309I USERID HAS BEEN VERIFIED AND ACCEPTED\nSYSTEM  ACTION:   The  supplied  Userid  and  password is authorized. You are\nallowed to enter the world of TSTVS.\n\nEDT310A ENTER TSTVS PASSWORD\nSYSTEM ACTION:  This message appears if neither RACF or ACF2 is active.\nPROGRAMMER RESPONSE:  Refer to the systems programmer for the  correct  pass-\nword or (re)start ACF2/RACF.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  15\n\n\n\n\n\n\n\n\n\n1.9  JCL NEEDED TO EXECUTE TSTVS\n________________________________\n\n+--- JCL FOR TSTVS ---------------------------------------------------------+\n|                                                                           |\n|   //EDIT     PROC PRM=2                                                   |\n|   //TSTVS    EXEC PGM=TSTVS,PARM=&PRM,TIME=1440 ** routing code ***       |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\nTSTVS can be started on the console with:\n\n+--- STARTING TSTVS --------------------------------------------------------+\n|                                                                           |\n| S EDIT,PRM=routcde                                                        |\n|                                                                           |\n+---------------------------------------------------------------------------+\n\nThe  procedure  EDIT  is  located  in  the  SYS1.PROCLIB  and  is  defined in\nSYS1.PARMLIB(IEFSSNxx).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                 Manual Console Monitor TSTVS version 3.0  16\n\n\n\n\n\n\n\n\n\n2.0  INDEX\n__________\n\n\n\n\n\n   +--------------------+                    +---+\n   | SPECIAL CHARACTERS |                    | P |\n   +--------------------+                    +---+\n\n$TSTVS  14                                Partitioned dataset  4\n                                          Password  2, 14, 15\n\n   +---+\n   | A |                                     +---+\n   +---+                                     | R |\n                                             +---+\nAbnormal end  12\nACF2  2, 14                               RACF  2, 14\n   CLASMAP  2                                FACILITY  2, 14\n   Generalized resource  14                  SAF Returncode  14\nAllocation  3, 11, 12, 14                 RENAME  3, 11, 14\n   error codes  11, 12                    Repeat  7, 11\n   info codes  11, 12                     Returncode  13, 14\n\n\n   +---+                                     +---+\n   | D |                                     | S |\n   +---+                                     +---+\n\nDELETE  3, 11, 14                         Statuscode  13\n                                          SYS1.PARMLIB  16\n                                             IEFSSNxx  16\n   +---+                                  SYS1.PROCLIB  16\n   | I |\n   +---+\n                                             +---+\nInsert  7, 11                                | T |\n                                             +---+\n\n   +---+                                  TSTVS  1\n   | J |\n   +---+\n\nJCL  16\nJES2  5, 6, 11\n\n\n\n\n\n\n\n\n\n\n                                                                    Index  17\n\n\n\n\n\n\n\n\n\n   +---+\n   | U |\n   +---+\n\nUserid  2, 14, 15\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                    Index  18\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE068": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00&\\x01\\x19$\\x7f\\x01\\x19$\\x7f\\x07C\\x00&\\x00&\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-09-04T00:00:00", "modifydate": "2019-09-04T07:43:26", "lines": 38, "newlines": 38, "modlines": 0, "user": "CBT-498"}, "text": "//***FILE 068 is the TSTVS Console Editor and Dataset Utility from  *   FILE 068\n//*           Rob Prins.                                            *   FILE 068\n//*                                                                 *   FILE 068\n//*           TSTVS is a utility program which is run from the      *   FILE 068\n//*           Operator Console.  Commands are entered from the      *   FILE 068\n//*           console, and replies are sent back to the console.    *   FILE 068\n//*                                                                 *   FILE 068\n//*           TSTVS is a line editor which can be used to fix       *   FILE 068\n//*           FB-80 datasets like PARMLIB datasets or started       *   FILE 068\n//*           PROCs in SYS1.PROCLIB, before JES2 or JES3 has        *   FILE 068\n//*           come up, or it can be executed afterwards.            *   FILE 068\n//*                                                                 *   FILE 068\n//*           Run job INSTALL to install TSTVS on an OS/390 or      *   FILE 068\n//*           z/OS system.                                          *   FILE 068\n//*                                                                 *   FILE 068\n//*           Run job INSTALLM on a MVS system with a security      *   FILE 068\n//*           system like RACF installed.                           *   FILE 068\n//*                                                                 *   FILE 068\n//*           Run job INSTNOS  on a MVS system with no security     *   FILE 068\n//*           system installed.                                     *   FILE 068\n//*                                                                 *   FILE 068\n//*           The receiving load library should be APF authorized.  *   FILE 068\n//*                                                                 *   FILE 068\n//*           You can execute S EDIT after JES2 or JES3 is up.      *   FILE 068\n//*                                                                 *   FILE 068\n//*           Or:  S EDIT,SUB=MSTR   before JES2 or JES3 is up.     *   FILE 068\n//*                                                                 *   FILE 068\n//*           TSTVS functions as a line editor, and can also be     *   FILE 068\n//*           used to allocate new partitioned dataset members,     *   FILE 068\n//*           delete partitioned dataset members, or rename         *   FILE 068\n//*           complete datasets and partitioned dataset members.    *   FILE 068\n//*                                                                 *   FILE 068\n//*           TSTVS is an excellent recovery tool, for when an      *   FILE 068\n//*           MVS system (or OS/390, z/OS etc.) is only partially   *   FILE 068\n//*           up, and a dataset or member needs to be fixed.        *   FILE 068\n//*                                                                 *   FILE 068\n//*           email:  rn.prins@quicknet.nl                          *   FILE 068\n//*                                                                 *   FILE 068\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EDIT": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x02\"O\\x01\\x02\"O\\x11&\\x00\\x03\\x00\\x03\\x00\\x02\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2002-08-12T11:26:00", "lines": 3, "newlines": 3, "modlines": 2, "user": "RPRINS"}, "text": "//EDIT    PROC ROUT=2\n//TSTVS   EXEC PGM=TSTVS,PARM='&ROUT',TIME=1440\n//STEPLIB  DD  DSN=Z531415.TSTVS.LOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INSTALL": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x11\\x00\\x00\\x01\\x02\"O\\x01\\x19$_\\tC\\x00?\\x003\\x00\\x10\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "80.17", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2019-09-02T09:43:00", "lines": 63, "newlines": 51, "modlines": 16, "user": "RPRINS"}, "text": "//Z531415T JOB 01,ROB,MSGCLASS=H,NOTIFY=&SYSUID\n//*\n//*       INSTALL TSTVS ON AN OS/390 OR Z/OS SYSTEM WITH A\n//*       SECURITY SYSTEM INSTALLED LIKE RACF\n//*\n//ALLOC   PROC OBJ='Z531415.TSTVS.OBJ',\n//             LOADLIB='Z531415.TSTVS.LOAD'\n//IEFBR14 EXEC PGM=IEFBR14\n//OBJ      DD  DSN=&OBJ,UNIT=SYSALLDA,VOL=SER=VPWRKB,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//             DISP=(MOD,CATLG)\n//LOAD     DD  DSN=&LOADLIB,UNIT=SYSALLDA,VOL=SER=VPWRKB,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=U,BLKSIZE=6144),\n//             DISP=(MOD,CATLG)\n//        PEND\n//*\n//ASM     PROC OUT='*',MEMBER=DUMMY,\n//             ASMBLR=ASMA90,           * CHANGE TO THE REQUESTED ASM\n//             MACLIB1='Z531415.TSTVS.ASM',\n//             MACLIB2='SYS1.MACLIB',\n//             MACLIB3='SYS1.AMODGEN',\n//             ASMPARM='',\n//             SRCLIB='Z531415.TSTVS.ASM',\n//             OBJ='Z531415.TSTVS.OBJ'\n//ASM     EXEC PGM=&ASMBLR,PARM='OBJ,NODECK,LINECOUNT(51)&ASMPARM'\n//SYSPRINT DD  SYSOUT=&OUT\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSLIN   DD  DSN=&OBJ(&MEMBER),DISP=SHR\n//SYSLIB   DD  DSN=&MACLIB1,DISP=SHR,DCB=BLKSIZE=32000\n//         DD  DSN=&MACLIB2,DISP=SHR\n//         DD  DSN=&MACLIB3,DISP=SHR\n//SYSIN    DD  DSN=&SRCLIB(&MEMBER),DISP=SHR\n//        PEND\n//*\n//STEP00  EXEC ALLOC\n//*\n//STEP01  EXEC ASM,MEMBER=TSTVS\n//STEP02  EXEC ASM,MEMBER=TSTVSALL    OS/390 OR Z/OS VERSION\n//STEP03  EXEC ASM,MEMBER=TSTVSCOM\n//STEP04  EXEC ASM,MEMBER=TSTVSSEC\n//*\n//LKED    EXEC PGM=IEWL,PARM='XREF,LIST,NCAL'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,300))\n//SYSLMOD  DD  DSN=Z531415.TSTVS.LOAD,DISP=SHR\n//OBJ      DD  DSN=Z531415.TSTVS.OBJ,DISP=SHR\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSIN DD *\n INCLUDE OBJ(TSTVS,TSTVSCOM,TSTVSALL)\n INCLUDE OBJ(TSTVSSEC)\n SETCODE AC(1)\n ENTRY TSTVS\n NAME TSTVS(R)\n//STEPLST EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//IN       DD  DSN=Z531415.TSTVS.ASM,DISP=SHR\n//OUT      DD  DSN=SYS1.PROCLIB,DISP=SHR\n//SYSIN    DD  *\n C I=((IN,R)),O=OUT\n S M=EDIT\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INSTALLM": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'2\\x04\\x00\\x00\\x01\\x19$O\\x01\\x19$_\\tE\\x00A\\x00?\\x00\\x00\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "50.04", "flags": 0, "createdate": "2019-09-01T00:00:00", "modifydate": "2019-09-02T09:45:00", "lines": 65, "newlines": 63, "modlines": 0, "user": "RPRINS"}, "text": "//Z531415M JOB 01,ROB,MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*       INSTALL TSTVS ON AN MVS SYSTEM WITH A\n//*       SECURITY SYSTEM INSTALLED LIKE RACF\n//*\n//ALLOC   PROC OBJ='Z531415.TSTVS.OBJ',\n//             LOADLIB='Z531415.TSTVS.LOAD'\n//IEFBR14 EXEC PGM=IEFBR14\n//OBJ      DD  DSN=&OBJ,UNIT=SYSALLDA,VOL=SER=ROB999,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//             DISP=(MOD,CATLG)\n//LOAD     DD  DSN=&LOADLIB,UNIT=SYSALLDA,VOL=SER=ROB999,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=U,BLKSIZE=6144),\n//             DISP=(MOD,CATLG)\n//        PEND\n//*\n//ASM     PROC OUT='*',MEMBER=DUMMY,\n//             ASMBLR=IFOX00,           * CHANGE TO THE REQUESTED ASM\n//             MACLIB1='Z531415.TSTVS.ASM',\n//             MACLIB2='SYS1.MACLIB',\n//             MACLIB3='SYS1.AMODGEN',\n//             ASMPARM='',\n//             SRCLIB='Z531415.TSTVS.ASM',\n//             OBJ='Z531415.TSTVS.OBJ'\n//ASM     EXEC PGM=&ASMBLR,PARM='OBJ,NODECK,LINECOUNT(51)&ASMPARM'\n//SYSPRINT DD  SYSOUT=&OUT\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSGO    DD  DSN=&OBJ(&MEMBER),DISP=SHR\n//SYSLIB   DD  DSN=&MACLIB1,DISP=SHR,DCB=BLKSIZE=32000\n//         DD  DSN=&MACLIB2,DISP=SHR\n//         DD  DSN=&MACLIB3,DISP=SHR\n//SYSIN    DD  DSN=&SRCLIB(&MEMBER),DISP=SHR\n//        PEND\n//*\n//STEP00  EXEC ALLOC\n//*\n//STEP01  EXEC ASM,MEMBER=TSTVS\n//STEP02  EXEC ASM,MEMBER=TSTVSALL,ASMPARM=',SYSPARM(MVS)'\n//STEP03  EXEC ASM,MEMBER=TSTVSCOM\n//STEP04  EXEC ASM,MEMBER=TSTVSSEC\n//*\n//LKED    EXEC PGM=IEWL,PARM='XREF,LIST,NCAL'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,300))\n//SYSLMOD  DD  DSN=Z531415.TSTVS.LOAD,DISP=SHR\n//OBJ      DD  DSN=Z531415.TSTVS.OBJ,DISP=SHR\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSIN DD *\n INCLUDE OBJ(TSTVS,TSTVSCOM,TSTVSALL)\n INCLUDE OBJ(TSTVSSEC)\n SETCODE AC(1)\n ENTRY TSTVS\n NAME TSTVS(R)\n//STEPLST EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//IN       DD  DSN=Z531415.TSTVS.ASM,DISP=SHR\n//OUT      DD  DSN=SYS1.PROCLIB,DISP=SHR\n//SYSIN    DD  *\n C I=((IN,R)),O=OUT\n S M=EDIT\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INSTALLS": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x08\\x00\\x07\\x01\\x02\"O\\x01\\x19\\x02\\x7f\\x17\\x07\\x00>\\x003\\x00\\x1b\\xe2\\xc5\\xc3\\xe4\\xd9\\xc9\\xe3\\xe8@@'", "ispf": {"version": "80.08", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2019-01-27T17:07:07", "lines": 62, "newlines": 51, "modlines": 27, "user": "SECURITY"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//ALLOC   PROC OBJ=SBGOLOB.TSTVS.OBJ,\n//             LOADLIB=SBGOLOB.TSTVS.LOAD\n//IEFBR14 EXEC PGM=IEFBR14\n//OBJ      DD  DSN=&OBJ,UNIT=SYSALLDA,VOL=SER=DATA04,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//             DISP=(NEW,CATLG)\n//LOAD     DD  DSN=&LOADLIB,UNIT=SYSALLDA,VOL=SER=DATA04,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=U,BLKSIZE=6144),\n//             DISP=(NEW,CATLG)\n//        PEND\n//*\n//ASM     PROC OUT='*',MEMBER=DUMMY,\n//             ASMBLR=ASMA90,           * CHANGE TO THE REQUESTED ASM\n//             MACLIB1='SBGOLOB.CBT497.FILE068',\n//             MACLIB2='SYS1.MACLIB',\n//             MACLIB3='SYS1.MODGEN',\n//             ASMPARM='',\n//             SRCLIB='SBGOLOB.CBT497.FILE068',\n//             OBJ='SBGOLOB.TSTVS.OBJ'\n//ASM     EXEC PGM=&ASMBLR,PARM='OBJ,NODECK,LINECOUNT(51)&ASMPARM'\n//SYSPRINT DD  SYSOUT=&OUT\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSLIN   DD  DSN=&OBJ(&MEMBER),DISP=SHR\n//SYSLIB   DD  DSN=&MACLIB1,DISP=SHR,DCB=BLKSIZE=32000\n//         DD  DSN=&MACLIB2,DISP=SHR\n//         DD  DSN=&MACLIB3,DISP=SHR\n//SYSIN    DD  DSN=&SRCLIB(&MEMBER),DISP=SHR\n//        PEND\n//*\n//STEP00  EXEC ALLOC\n//*\n//STEP01  EXEC ASM,MEMBER=TSTVS\n//STEP02  EXEC ASM,MEMBER=TSTVSALL\n//STEP03  EXEC ASM,MEMBER=TSTVSCOM\n//STEP04  EXEC ASM,MEMBER=TSTVSSEC    UNCOMMENT IF SECURITY REQUESTED\n//*\n//LKED    EXEC PGM=IEWL,PARM='XREF,LIST,NCAL'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,300))\n//SYSLMOD  DD  DSN=SBGOLOB.TSTVS.LOAD,DISP=SHR\n//OBJ      DD  DSN=SBGOLOB.TSTVS.OBJ,DISP=SHR\n//SYSLIN   DD  DDNAME=SYSIN\n//* INCLUDE OBJ(TSTVSSEC) ADD STATEMENT IF SECURITY REQUESTED\n//SYSIN DD *\n INCLUDE OBJ(TSTVS,TSTVSCOM,TSTVSALL,TSTVSSEC)\n SETCODE AC(1)\n ENTRY TSTVS\n NAME TSTVS(R)\n//STEPLST EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//IN       DD  DSN=SBGOLOB.CBT497.FILE068,DISP=SHR\n//OUT      DD  DSN=SYS1.PROCLIB,DISP=SHR\n//SYSIN    DD  *\n C I=((IN,R)),O=OUT\n S M=EDIT\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INSTNOS": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'2\\x04\\x00\\x00\\x01\\x19$O\\x01\\x19$_\\tD\\x00?\\x00?\\x00\\x00\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "50.04", "flags": 0, "createdate": "2019-09-01T00:00:00", "modifydate": "2019-09-02T09:44:00", "lines": 63, "newlines": 63, "modlines": 0, "user": "RPRINS"}, "text": "//Z531415N JOB 01,ROB,MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*       INSTALL TSTVS ON AN MVS SYSTEM WITHOUT A\n//*       SECURITY SYSTEM.\n//*\n//ALLOC   PROC OBJ='Z531415.TSTVS.OBJ',\n//             LOADLIB='Z531415.TSTVS.LOAD'\n//IEFBR14 EXEC PGM=IEFBR14\n//OBJ      DD  DSN=&OBJ,UNIT=SYSALLDA,VOL=SER=ROB999,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//             DISP=(MOD,CATLG)\n//LOAD     DD  DSN=&LOADLIB,UNIT=SYSALLDA,VOL=SER=ROB999,\n//             SPACE=(CYL,(1,1,5)),\n//             DCB=(RECFM=U,BLKSIZE=6144),\n//             DISP=(MOD,CATLG)\n//        PEND\n//*\n//ASM     PROC OUT='*',MEMBER=DUMMY,\n//             ASMBLR=IFOX00,           * CHANGE TO THE REQUESTED ASM\n//             MACLIB1='Z531415.TSTVS.ASM',\n//             MACLIB2='SYS1.MACLIB',\n//             MACLIB3='SYS1.AMODGEN',\n//             ASMPARM='',\n//             SRCLIB='Z531415.TSTVS.ASM',\n//             OBJ='Z531415.TSTVS.OBJ'\n//ASM     EXEC PGM=&ASMBLR,PARM='OBJ,NODECK,LINECOUNT(51)&ASMPARM'\n//SYSPRINT DD  SYSOUT=&OUT\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n//SYSGO    DD  DSN=&OBJ(&MEMBER),DISP=SHR\n//SYSLIB   DD  DSN=&MACLIB1,DISP=SHR,DCB=BLKSIZE=32000\n//         DD  DSN=&MACLIB2,DISP=SHR\n//         DD  DSN=&MACLIB3,DISP=SHR\n//SYSIN    DD  DSN=&SRCLIB(&MEMBER),DISP=SHR\n//        PEND\n//*\n//STEP00  EXEC ALLOC\n//*\n//STEP01  EXEC ASM,MEMBER=TSTVS,ASMPARM=',SYSPARM(NOSEC)'\n//STEP02  EXEC ASM,MEMBER=TSTVSALL,ASMPARM=',SYSPARM(MVS)'\n//STEP03  EXEC ASM,MEMBER=TSTVSCOM\n//*\n//LKED    EXEC PGM=IEWL,PARM='XREF,LIST,NCAL'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,300))\n//SYSLMOD  DD  DSN=Z531415.TSTVS.LOAD,DISP=SHR\n//OBJ      DD  DSN=Z531415.TSTVS.OBJ,DISP=SHR\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSIN DD *\n INCLUDE OBJ(TSTVS,TSTVSCOM,TSTVSALL)\n SETCODE AC(1)\n ENTRY TSTVS\n NAME TSTVS(R)\n//STEPLST EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//IN       DD  DSN=Z531415.TSTVS.ASM,DISP=SHR\n//OUT      DD  DSN=SYS1.PROCLIB,DISP=SHR\n//SYSIN    DD  *\n C I=((IN,R)),O=OUT\n S M=EDIT\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JOBLOG": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\x02\"O\\x01\\x02\"O\\tD\\x00~\\x00~\\x00\\x00\\xc5\\xe7\\xc1\\xd4\\xd7\\xd3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2002-08-12T09:44:42", "lines": 126, "newlines": 126, "modlines": 0, "user": "EXAMPLE"}, "text": "---- MONDAY,    12 AUG 2002 ----\n IRR010I  USERID Z531415  IS ASSIGNED TO THIS JOB.\n ICH70001I Z531415  LAST ACCESS AT 09:26:47 ON MONDAY, AUGUST\n $HASP373 Z531415P STARTED - INIT 7    - CLASS R - SYS H001\n IEF403I Z531415P - STARTED - TIME=09.34.11\n@EDT001I TSTVS Version 3.0 - 20020812 started\n@17 EDT200A Enter command or 'HELP'\n R 17,ALLOC\n@18 EDT100A Enter dataset name or 'CANCEL'\n R 18,Z531415.TSTVS.ASM\n@19 EDT101A Enter volume serial or 'U'\n R 19,U\n +EDT103I Allocation of dataset successful\n@20 EDT200A Enter command or 'HELP'\n R 20,HELP\n +EDT205I Commands:\n +        ALLOC:            Allocate the library\n +        EOJ:              Stop TSTVS\n +        PDSLIST,(key):    List directory of library\n +        A(N) member:      Add a new member\n +        U(N) member:      Update member (subcommands)\n +        D member:         Delete the member\n +        R member,newname: Rename member\n +        RENAME:           Rename an entire dataset\n@21 EDT200A Enter command or 'HELP'\n R 21,U INSTALL\n@22 EDT005A Enter subcommand or 'HELP'\n R 22,HELP\n +EDT014I SUBCOMMANDS\n +        XXX;       replace the line, EDT003A follows.\n +        I XXX;     insert a line , EDT003A follows.\n +        D XXX OR D XXX,YYY delete a line or a range of Lines\n +        R XXX      repeat the specified line after current\n +        L(IST),L(IST) x or L(IST) x,y List entire or linenrs\n +        XLST       same as list, but 80 positions displayed\n +        RENUM;     renumber cols 73-80 of the member\n +        UNNUM;     remove numbers of cols 73-80\n +        V ON/OFF;  list or not list line after \"C\" command\n +        ADD;       add lines at the end of the member\n +        SUBMIT;    submit the contents of the workarea\n +        C XXX,string1$string2$ modify character strings\n +        F $string$ find string or \"F\" repeat find of string\n +        PRINT x;   print spinoff sysout of workarea\n +        SAVE;      save workarea in the member\n +        END;       end of subcommands and ask for next cmd.\n +        EOJ;       terminate TSTVS from subcommand mod e.\n@23 EDT005A Enter subcommand or 'HELP'\n R 23,V ON\n +EDT022I  verification turned ON\n@24 EDT005A Enter subcommand or 'HELP'\n R 24,C $TSTVS$TSTVX$\n +EDT006E Invalid line-number, reply again\n@25 EDT005A Enter subcommand or 'HELP'\n R 25,C ALL,TSTVS$ROBPRINS$\n +//ALLOC   PROC OBJ=Z531415.ROBPRINS.OBJ,\n +//             LOADLIB=Z531415.ROBPRINS.LOAD\n +//             MACLIB1='Z531415.ROBPRINS.ASM',\n +//             SRCLIB='Z531415.ROBPRINS.ASM',\n +//             OBJ='Z531415.ROBPRINS.OBJ'\n +//STEP01  EXEC ASM,MEMBER=ROBPRINS\n +//STEP02  EXEC ASM,MEMBER=ROBPRINSALL\n +//STEP03  EXEC ASM,MEMBER=ROBPRINSCOM\n +//*TEP04  EXEC ASM,MEMBER=ROBPRINSSEC    UNCOMMENT IF SECURI\n +//SYSLMOD  DD  DSN=Z531415.ROBPRINS.LOAD,DISP=SHR\n +//OBJ      DD  DSN=Z531415.ROBPRINS.OBJ,DISP=SHR\n +//* INCLUDE OBJ(ROBPRINSSEC) ADD STATEMENT IF SECURITY REQUE\n + INCLUDE OBJ(ROBPRINS,TSTVSCOM,TSTVSALL)\n + ENTRY ROBPRINS\n + NAME ROBPRINS(R)\n +//IN       DD  DSN=Z531415.ROBPRINS.ASM,DISP=SHR\n@26 EDT005A Enter subcommand or 'HELP'\n R 26,F $ROBPRINS$\n +0002 //ALLOC   PROC OBJ=Z531415.ROBPRINS.OBJ,\n +0002                  00020000\n@27 EDT005A Enter subcommand or 'HELP'\n R 27,F\n +0003 //             LOADLIB=Z531415.ROBPRINS.LOAD\n +0003                  00030000\n@28 EDT005A Enter subcommand or 'HELP'\n R 28,LIST\n +0001 //*\n +0002 //ALLOC   PROC OBJ=Z531415.ROBPRINS.OBJ,\n +0003 //             LOADLIB=Z531415.ROBPRINS.LOAD\n +0004 //IEFBR14 EXEC PGM=IEFBR14\n +0005 //OBJ      DD  DSN=&OBJ,UNIT=SYSALLDA,VOL=SER=DATA04,\n +0006 //             SPACE=(CYL,(1,1,5)),\n +0007 //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n +0008 //             DISP=(NEW,CATLG)\n +0009 //LOAD     DD  DSN=&LOADLIB,UNIT=SYSALLDA,VOL=SER=DATA0\n +0010 //             SPACE=(CYL,(1,1,5)),\n +0011 //             DCB=(RECFM=U,BLKSIZE=6144),\n +0012 //             DISP=(NEW,CATLG)\n +0013 //        PEND\n +0014 //*\n +0015 //ASM     PROC OUT='*',MEMBER=DUMMY,\n +0016 //             ASMBLR=ASMA90,           * CHANGE TO THE\n@29 EDT017A Should TSTVS continue this function? Reply Y Or N\n R 29,Y\n +0017 //             MACLIB1='Z531415.ROBPRINS.ASM',\n +0018 //             MACLIB2='SYS1.MACLIB',\n +0019 //             MACLIB3='SYS1.MODGEN',\n +0020 //             ASMPARM='',\n +0021 //             SRCLIB='Z531415.ROBPRINS.ASM',\n +0022 //             OBJ='Z531415.ROBPRINS.OBJ'\n +0023 //ASM     EXEC PGM=&ASMBLR,PARM='OBJ,NODECK,LINECOUNT(5\n +0024 //SYSPRINT DD  SYSOUT=&OUT\n +0025 //SYSUT1   DD  UNIT=SYSDA,SPACE=(3200,(100,200))\n +0026 //SYSLIN   DD  DSN=&OBJ(&MEMBER),DISP=SHR\n +0027 //SYSLIB   DD  DSN=&MACLIB1,DISP=SHR,DCB=BLKSIZE=32000\n +0028 //         DD  DSN=&MACLIB2,DISP=SHR\n +0029 //         DD  DSN=&MACLIB3,DISP=SHR\n +0030 //SYSIN    DD  DSN=&SRCLIB(&MEMBER),DISP=SHR\n +0031 //        PEND\n +0032 //*\n@30 EDT017A Should TSTVS continue this function? Reply Y Or N\n R 30,N\n +EDT018I function terminated by operator\n@31 EDT005A Enter subcommand or 'HELP'\n R 31,END\n@32 EDT025A *WARNING* nothing saved, Enter 'SAVE' or 'END'\n R 32,END\n@33 EDT200A Enter command or 'HELP'\n R 33,EOJ\n IEFACTRT Z531415P STEP01   09:34:11 09:41:06 S000      415\n IEF404I Z531415P - ENDED - TIME=09.41.06\n $HASP395 Z531415P ENDED\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JOB1": {"ttr": 1538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x02\"O\\x01\\x02\"O\\x11%\\x00\\x08\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2002-08-12T11:25:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//EDIT    PROC ROUT=2\n//TSTVS   EXEC PGM=TSTVS,PARM='&ROUT',TIME=1440\n//STEPLIB  DD  DSN=SBGOLOB.W$$.LINKLIB,DISP=SHR\n//  PEND\n//S01 EXEC EDIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYCONVHX": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x00\\x00\\x11\\x01\\x02\"O\\x01\\x02\"O\\t \\x00@\\x00@\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "80.00", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2002-08-12T09:20:11", "lines": 64, "newlines": 64, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n&NAME    SYCONVHX &IN=,&OUT=,&L=\n.*       USER MACRO\n.*       CONVERT HEXADECIMAL TO EBCDIC NOTATION\n.*       AT LEAST 1 BYTE MAX. 7 BYTES\n.*       WRITTEN 750902\n         GBLC  &SYPRTX1,&SYPRTX2\n         LCLC  &SYMBOL\n         AIF   (T'&IN EQ 'O' OR T'&OUT EQ 'O').ERROR5\n         AIF   ('&SYPRTX1' NE '').CONT01\n&SYPRTX1 SETC  'IHB&SYSNDX.A'       WORKAREA\n&SYPRTX2 SETC  'IHB&SYSNDX.B'       CONSTANT\n.CONT01  AIF   (T'&L NE 'N').ERROR1\n         AIF   ('&L'(1,1) EQ '(' OR '&L'(K'&L,1) EQ ')').ERROR2\n         AIF   (&L LT 1 OR &L GT 7).ERROR2\n         AIF   ('&IN'(1,1) EQ '(').INREG1\n         AIF   (T'&IN EQ 'N').ERROR6\n&NAME    UNPK  &SYPRTX1.((&L+1)*2-1),&IN.(&L+1) EXPAND EACH BYTE\n         AGO   .CONT02\n.INREG1  AIF   (N'&IN EQ 1).INREG2\n&SYMBOL  SETC  'IN'\n         AGO   .ERROR3\n.INREG2  ANOP\n&NAME    UNPK  &SYPRTX1.((&L+1)*2-1),0(&L+1,&IN(1))\n.CONT02  NC    &SYPRTX1.(&L*2),&SYPRTX2     RESET HIGH ORDER DIGITS\n         TR    &SYPRTX1.(&L*2),=C'0123456789ABCDEF'\n         AIF   ('&OUT'(1,1) EQ '(').OUTREG1\n         AIF   (T'&OUT EQ 'N').ERROR7\n         MVC   &OUT.(&L*2),&SYPRTX1        MOVE TO USER FIELD\n         AGO   .CONT03\n.OUTREG1 AIF   (N'&OUT EQ 1).OUTREG2\n&SYMBOL  SETC  'OUT'\n         AGO   .ERROR3\n.OUTREG2 AIF   ('&OUT' EQ '(0)').ERROR4\n         AIF   (T'&OUT EQ 'N').OUTREG3\n         MNOTE 'IF LENGTH ERROR, REG 0 WAS SYMBOLICLY ASSIGNED'\n         MVC   0(-1+&OUT(1),0),0(0)  *** DUMMY MVC TO TEST IF R 0\n         ORG   *-6                        WAS SPECIFIED ***\n         AGO   .OUTREG4\n.OUTREG3 AIF   (&OUT(1) EQ 0).ERROR4\n.OUTREG4 MVC   0(&L*2,&OUT(1)),&SYPRTX1\n.CONT03  AIF   ('&SYPRTX1'(4,4) NE '&SYSNDX').DONE\n         B     *+34\n&SYPRTX1 DS    CL15                       WORKAREA\n&SYPRTX2 DC    15X'0F'               CONSTANT FO NC INSTR.\n         AGO   .DONE\n.*       ERROR MESSAGE BLOCK\n.ERROR1  MNOTE 12,'LENGTH OPERAND MUST BE A SELF DEFINING TERM'\n         MEXIT\n.ERROR2  MNOTE 12,'INVALID LENGTH SPECIFIED'\n         MEXIT\n.ERROR3  MNOTE 12,'SUBLIST NOTATION FOUND ON SYMBOL ''&SYMBOL''- NOT ALX\n               LOWED'\n         MEXIT\n.ERROR4  MNOTE 12,'REGISTER 0 IS AN INVALID ASSIGNMENT'\n         MEXIT\n.ERROR5  MNOTE 12,'REQUIRED PARAMETER ''IN'' OR ''OUT'' MISSING'\n         MEXIT\n.ERROR6  MNOTE 12,'INVALID SPECIFICATION FOR PARAMETER ''IN'''\n         MEXIT\n.ERROR7  MNOTE 12,'INVALID SPECIFICATION FOR PARAMETER ''OUT'''\n.DONE    MEXIT\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSTVS": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00\\x00\\x01\\x19$\\x7f\\x01\\x19$\\x7f\\x11E\\x06\\xfd\\x06\\xfd\\x00\\x00\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-09-04T00:00:00", "modifydate": "2019-09-04T11:45:00", "lines": 1789, "newlines": 1789, "modlines": 0, "user": "RPRINS"}, "text": "TSTVS    TITLE 'D Y N A M I C CONSOLE MONITOR'\n*---------------------------------------------------------------------*\n*                                                                     *\n* PROGRAM:                  TSTVS                                     *\n* FUNCTION:                 Line-editor from the operator console     *\n* PURPOSE:                  Edit crucial PDS members if the           *\n*                           SUBSYSTEMS aren't available               *\n*                           and create and submit jobs if necessary.  *\n*                           Update of members will be done if the     *\n*                           MSG   'EDT200A enter command...' has been *\n*                           replied with 'U member' or 'UN member'    *\n*                           If replied with 'A member' or 'AN member' *\n*                           a new member will be created.             *\n*                           If 'UN' or 'AN' specified, TSTVS will     *\n*                           prompt you for a linenumber (COLS 73-80)  *\n*                           if a new record has been made.            *\n* PROCESSOR.                ASSEMBER-H VERSION 2/HL-ASM               *\n* REGISTER ASSIGNMENT.      R0-R1          RESERVED                   *\n*                           R2             COUNT REG. NUMBER OF CRDS. *\n*                           R3             SAVE REGISTER FOR PARM.    *\n*                           R4             ADDRESS RECORD INPUT       *\n*                           R5-R8          WORK-REGISTERS             *\n*                           R9             THIRD BASE                 *\n*                           R10            BASE-REGISTER              *\n*                           R11            BASE-REGISTER              *\n*                           R12            ADDRESS GETM. AREA         *\n*                           R13            ADDRESS SAVE-AREA          *\n*                           R14-R15        RESERVED                   *\n* AUTHOR.                   Rob Prins - Jan 11, 1977                  *\n*        PROGRAM STRUCTURE:                                           *\n*                                                                     *\n*        -------------        -------------        -------------      *\n*        |  MAIN     |        | CHANGE    |        |  INSERT   |      *\n*        |  ROUTINE  | <----> | ROUTINE   | <----> |  DEL ROUT.|      *\n*        |           |        |           |        |           |      *\n*        -------------        -------------        -------------      *\n*             |                     |                                 *\n*             V                     |                                 *\n*        -------------              |                                 *\n*        | DEL       |              |                                 *\n*        | MEMBERS   |              |                                 *\n*        | AND RDDIR |              |                                 *\n*        -------------              |                                 *\n*                                   |                                 *\n*        _______________________________________________________      *\n*             |                     |                    |            *\n*        -------------        -------------        -------------      *\n*        | PRINT     |        |  UPDIPL   |        |  SUBMIT   |      *\n*        | ROUTINE   |        |  ROUTINE  |        |  ROUTINE  |      *\n*        |           |        |           |        |           |      *\n*        -------------        -------------        -------------      *\n*        -------------        -------------        -------------      *\n*        |  LIST     |        |  LINENUM  |        |   SAVE    |      *\n*        |  ROUTINE  |        |   ROUTINE |        |  ROUTINE  |      *\n*        |           |        |           |        |           |      *\n*        -------------        -------------        -------------      *\n*        -------------        -------------        -------------      *\n*        |  FIND     |        |           |        |           |      *\n*        |  ROUTINE  |        |           |        |           |      *\n*        |           |        |           |        |           |      *\n*        -------------        -------------        -------------      *\n*                                                                     *\n*        SUBROUTINES:                                                 *\n*                    TSTVSALL:  ALLOCATE THE LIBRARY                  *\n*                    TSTVSCOM:  PROCESS THE COMMANDS                  *\n*                    TSTVSSEC:  check security                        *\n*                                                                     *\n*        Note: Assemble TSTVS with SYSPARM(NOSEC) to bypass           *\n*              the security check of RACF or ACF2                     *\n*                                                                     *\n*                                                                     *\n*------------------------------------------ (C)-2019 SKYBIRD SYSTEMS -*\n         EJECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*        COPYRIGHT 77/01/11, Rob Prins                                *\n*        LAST UPDATE 79/11/02  BY ROB PRINS                           *\n*        ADD R SUBCOMMAND (REPEAT).                                   *\n*        LAST UPDATE AT 79/12/04 BY ROB PRINS:                        *\n*        CHANGE THE DESIGN OF TSTVS AND ADD ALLOC COMMAND             *\n*                                                                     *\n*        LAST UPDATE AT 80/04/22 BY ROB PRINS                         *\n*        CHANGE START COMMAND FOR RDRTST FROM:                        *\n*        \"S RDRTST,M=MEMBERNAME\" INTO                                 *\n*        \"S RDRTST,D=DATASETNAME,M=MEMBERNAME\" FOR VS1 AND SVS SUBMIT.*\n*        ERROR SOLVED IN UPDIPL ROUTINE        /* 80.08.26 */         *\n*                                                                     *\n*        LAST UPDATE AT 85/05/13 BY ROB PRINS                         *\n*        ADD 'XLST' SUBCOMMAND. THIS COMMAND IS AN EXTENTION OF THE   *\n*        LIST SUBCOMMAND. WITH 'XLST' THE WHOLE 80 COLUMS OF THE      *\n*        RECORDS WILL BE DISPLAYED.                                   *\n*                                                                     *\n*        LAST UPDATE AT 86/02/12 BY ROB PRINS                         *\n*        ADD 'L' SUBCOMMAND. THIS IS AN ALIAS OF THE 'LIST' SUBCOMMAND*\n*        ADD 'R' COMMAND, RENAME OF MEMBERS SYNTAX: 'R MEMBER,NEWNAME'*\n*        ADD 'F' SUBCOMMAND, SYNTAX: 'F $STRING$' INITIAL FIND, OR    *\n*                'F' REPEAT FIND.                                     *\n*        AFTER 'SAVE' SUBCOMMAND, LEAVE SUBCOMMAND MODE.              *\n*                                                                     *\n*        LAST UPDATE AT 87/04/23 BY ROB PRINS                         *\n*        DISPLAY WHOLE LINE AFTER MATCH FOUND IN 'F' SUBCOMMAND       *\n*        INSTEAD OF THE FIRST 55 POSITIONS                            *\n*        REJECT 'SUBMIT' AND 'PRINT' SUBCOMMAND IF TSTVS HAS STARTED  *\n*        VIA OPER.                                                    *\n*                                                                     *\n*        UPDATE BY ROB PRINS AT 91/12/18                              *\n*        RETRY MAXIMUM 6 ABENDS TO PREVENT RECURSIVE ABENDS           *\n*        ABEND90A SOLVED AFTER FIRST ABEND913 DURING OPEN             *\n*        REJECT 'SUBMIT' AND 'PRINT' SUBCOMMAND IF JOBNAME=EDIT       *\n*        SUBCOMMAND 'C ALL,...' ADDED                                 *\n*                                                                     *\n*        Update by Rob Prins at dec 24,1991 Christmas Supprise        *\n*        ACF2 support added: TSTVS will ask for an authorized LOGONID *\n*        and password. If the verification is successful, the LOGONID *\n*        will be checked for the 'TSTVS' privilege (LIDI2F5)          *\n*        If ACF2 is not active, the check will be bypassed and the    *\n*        program password will be asked.                              *\n*        MAX workspace size increased from 2999 to 3999               *\n*                                                                     *\n*        Update by Rob Prins at 1992/12/18, Christmas Supprise        *\n*        All the ACF2 macro's are deleted and replaced by RACROUTE    *\n*        The TSTVS privilege has been replaced by a resource called   *\n*        '$TSTVS' in the FACILITY class. So TSTVS can be used in both *\n*        an ACF2 or a RACF environment                                *\n*        The complete security check is now done in module TSTVSSEC   *\n*                                                                     *\n*        Update by Rob Prins at Jul 26,1993                           *\n*        The \"Key\" in   \"PDSLIST,key\" has now a variable length       *\n*                                                                     *\n*        Update by Rob Prins at Jul 29,1993                           *\n*        Add the RENAME command to rename datasets                    *\n*        Remove the VS1 support. TSTVS assumes, that the operating    *\n*        system is always MVS (ESA)                                   *\n*        MSGID's changed from 'JCL' into 'EDT'.                       *\n*                                                                     *\n*        Update by Rob Prins at Sept 04,2019                          *\n*        Remove the LINK to program SYP120, This program is not       *\n*        a part of TSTVS, so this LINK is changed into a SVC 34       *\n*                                                                     *\n*------------------------------------------ (C)-2019 SKYBIRD SYSTEMS -*\n         SPACE 2\nTSTVS    CSECT\n         SAVE  (14,12),,*\n         USING TSTVS,R15               GET LOCAL ADDRESSABILITY @911224\n         LA    R11,SAVEA                                        @911224\n         ST    R13,SAVEA+4                                      @911224\n         ST    R11,8(0,R13)                                     @911224\n         LR    R13,R11                                          @911224\n         B     START                                            @911224\n         DS    0F                                               @911224\nSAVEA    DC    18F'-1'\n         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'\nSTART    DS    0H\n         DROP  R15                     KILL LOCAL ADDRESSABILITY@911224\n         LA    R11,2048(,R13)          Setup second             @911224\n         LA    R11,2048(,R11)                      base         @911224\n         LA    R10,2048(,R11)          Setup third              @911224\n         LA    R10,2048(,R10)                      base         @911224\n         LA    R9,2048(,R10)           Setup fourth             @911224\n         LA    R9,2048(,R9)                        base         @911224\n         USING SAVEA,R13,R11,R10,R9    GET ADDRESSABILITY MODULE@911224\n         L     R3,0(,R1)               SAVE PARM\n         WTO   'EDT001I TSTVS Version 3.1 - &SYSDATE started',         *\n               DESC=2,ROUTCDE=(2,3,7,8,11)                      @930729\n         ST    R1,MSGID                save it's msgid          @930729\n         CLC   0(2,R3),=H'0'           no parm in exec stmnt?\n         BE    TSTVSRAC                BRANCH TO security mod   @921218\n         LH    R6,0(,R3)               LOAD LENGTH\n         LA    R3,2(,R3)               SKIP LENGTH\n         LR    R7,R6\n         CH    R6,=H'2'                LENGTH LONGER THAN 2\n         BH    MESS                    YES: ERROR MSG AND TAKE DEF\nLOOP     CLI   0(R3),C'0'              NUMERIC TEST\n         BL    MESS                    TAKE DEFAULTS IF NOT NUMERIC\n         LA    R3,1(,R3)\n         BCT   R6,LOOP                 BRANCH FOR SECOND TEST\n         SR    R3,R7                   RESTORE ADDRESS PARM\n         BCTR  R7,0\n         EX    R7,COMPPRM\n         BNH   MESS                    TAKE DEFAULT ROUTCODES\n         MVI   ZZZ-2,X'00'\n         EX    R7,PACK1\n         CVB   R6,DWB                  CONVERT PARM\n         BCTR  R6,0                    NO SHIFT IS ROUTING CODE-1\n         XR    R7,R7\n         IC    R7,=X'80'               SET HIGH ORDER BIT BITS 24-31\n         SLL   R7,8                    SHIFT 8 BITS TO THE LEFT\n         SRL   R7,0(R6)                SHIFT TO CORRECT ROUTCDE\n         STH   R7,ZZZ-2                STORE\n         STH   R7,BBB-4                  ROUTING\n         STH   R7,CCC-4                     CODES\n         STH   R7,DDD-4                       IN\n         STH   R7,FFF-4                         WTOR\n         STH   R7,GGG-4                           EXPANSIONS\n         STH   R7,HHH-4\n         STH   R7,III-4\n         STCM  R7,3,PARMROUT\n         B     TSTVSRAC                BRANCH TO PASSWORD ROUT. @921218\nMESS     DS    0H\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG03       MSG EDT007E (DEFAULT ROUTCDE)\n         WTO   MF=(E,(1))\n         B     TSTVSRAC                                         @921218\nCOMPPRM  CLC   0(0,R3),=C'00'          EXECUTE ONLY\n*---------------------------------------------------------------------*\n* first call 'TSTVSSEC' to check the security\n*---------------------------------------------------------------------*\nTSTVSRAC DS    0H                                               @921218\n         EXTRACT ADDRTIOT,FIELDS=TIOT  OBTAIN TIOT\n         L     R3,ADDRTIOT             TIOT ADDRESS IN REG 3\n         CLC   0(8,R3),=CL8'EDIT'      JOBNAME IS 'EDIT'        @911218\n         BNE   TSTVSC                  NO: BRANCH               @911224\n         OI    SW02,$OPER              MARK IT\nTSTVSC   DS    0H                                               @921218\n*---------------------------------------------------------------------*\n*\n*        If you want to bypass the security check with RACF or ACF2\n*        please assemble TSTVS with SYSPARM(NOSEC)\n*\n*---------------------------------------------------------------------*\n         AIF   ('&SYSPARM' EQ 'NOSEC').NOSEC\n*        B     TSTVSOK                 #### BYPASS CHECK\n         CALL  TSTVSSEC,((3))          Do first the sec. check  @921218\n         LTR   R15,R15                 OK ??                    @921218\n         BZ    TSTVSOK                 yes: use the facility    @921218\n         L     R13,4(,R13)             pickup callers savearea  @921218\n         RETURN (14,12),RC=8           terminate ....           @921218\n.NOSEC   ANOP\nTSTVSOK  DS    0H                                               @921218\n         GETMAIN RU,LV=320000\n         LR    R12,R1\n         ST    R12,SAVEGETM            SAVE BEGINADDRESS\n         STM   R9,R13,RECOVER          SAVE REGISTERS FOR ESTAE\n         ESTAE STAEEXIT                ESTABLISH ESTAE ROUTINE\nTSTVSST  DS    0H\n         L     R4,SAVEGETM             ADDRESS OF WORKAREA\n         L     R5,=A(320000)           LENGTH\n         LR    R6,R4                   SAME ADDRESS IN R6\n         L     R7,=X'FF000000'         PADDING CHAR X'FF'\n         MVCL  R4,R6                   FILLUP AREA WITH X'FF'\n         L     R12,SAVEGETM            RESTORE BEGINADDRESS\n         CALL  TSTVSCOM,(PARM)         CALL COMMAND PROCESSOR\n         B     BRLIST(R15)\nBRLIST   B     TSTVSUPD                Update member\n         B     TSTVSNEW                New member\n         B     TSTVSDEL                Delete the member\n         B     TSTVSUPD                Update the member\n         B     TSTVSAL                 allocate library\n         B     TSTVSEOJ                end of TSTVS\n         B     TSTVSREN                Rename a dataset         @930729\nTSTVSUPD DS    0H\n         BAL   R14,RDDIR               TEST IF MEMBER PRESENT\n         CLC   PARM33R(7),=C'PDSLIST'  LISTPDS ?\n         BE    TSTVSST                 ASK FOR MEMBER-NAME.\n         TM    SW01,SW2                MEMBER PRESENT IN DIRECTORY\n         BNO   UPDERR                  GIVE ERROR MSG\n         RDJFCB OUTDCB\n         MVC   JFCB+44(8),PARM33M\n         OI    JFCB+86,X'01'           MARK 'MEMBER IN PDS'\n         OPEN  (OUTDCB),TYPE=J\n         XR    R2,R2\n         OI    SW02,$OPEN              MARK OPENED *RETRY ROUT* @911218\nLOAD     DS    0H\n         CH    R2,=H'3999'             MAXIMUM LINES REACHED ?\n         BE    LOAD9                   YES: BRANCH\n         GET   OUTDCB\n         LR    R4,R1\n         MVC   0(80,R12),0(R4)         STORE RECORD INTO WORKSPACE\n         LA    R12,80(,R12)            Next entry in workspace\n         LA    R2,1(,R2)               Count record\n         B     LOAD\nLOAD9    DS    0H\n         CLOSE (OUTDCB)\n         FREEPOOL OUTDCB               FREE THE BUFFERS\n         NI    SW02,255-$OPEN          OUTDCB closed now        @911218\n         ST    R2,REG2                 Save GR2\n         B     CHANGE\nUPDERR   MVC   MSG99+4(60),MSG05\n         LA    R1,MSG99\n         WTO   MF=(E,(1))              WRITE ERROR MSG EDT010E\n         B     TSTVSST                 ASK FOR COMMAND\nTSTVSNEW DS    0H\n         L     R12,SAVEGETM\n         XR    R2,R2                   ZERO IN COUNT REG\nTSTVSINP DS    0H\n         XC    ECB1,ECB1\n         MVC   CARD(80),BLANKS\n         WTOR  'EDT003A Enter data, ''SAVE'' OR ''SUBMIT''',           X\n               REPLY,72,ECB1,ROUTCDE=(2,3)\nBBB      WAIT  ECB=ECB1\n         OC    REPLY(72),BLANKS        CHANGE IT TO CAPITALS\n         CLC   REPLY(4),=C'SAVE'       SAVE WORKSPACE IN MEMBER ?\n         BE    TSTVSCLS                YES: BRANCH\n         CLC   REPLY(6),=C'SUBMIT'     SUBMIT ?\n         BE    TSTVSCLS                YES: SAVE AND SUBMIT\n         OI    SW01,$CHANGED           CHANGE SWITH ON\n         TM    PARMSW,NBRS\n         BNO   NOSEQ\nTSTVSSEQ XC    ECB1,ECB1\n         WTOR  'EDT004A Enter sequence number ',                       X\n               REPLY2,8,ECB1,ROUTCDE=(2,3)\nCCC      WAIT  ECB=ECB1\n         LA    R7,8                    MAXIMUM REPLY LENGTH\n         XR    R6,R6                   REG 6 ZERO\n         LA    R8,REPLY2               LOAD REPLY ADDRESS\nSEQ002   DS    0H\n         CLI   0(R8),X'40'             Blank found ?\n         BE    SEQ007\n         CLI   0(R8),X'F0'             NUMERIC TEST\n         BL    SEQ004\n         CLI   0(R8),X'F9'             NUMERIC TEST\n         BH    SEQ004\n         LA    R8,1(,R8)               Load next character\n         LA    R6,1(,R6)               Length = length+1\n         BCT   R7,SEQ002\n         B     SEQ007\nSEQ004   DS    0H                      Error found in seq. nbr\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG04\n         WTO   MF=(E,(1))              WRITE ERROR MSG EDT008E\nSEQ005   DS    0H\n         MVC   REPLY2(8),BLANKS        CLEAR REPLY AREA\n         B     TSTVSSEQ                ASK FOR NEW CARDNUMBER\nSEQ007   DS    0H\n         LTR   R6,R6                   TEST IF LENGTH ZERO\n         BZ    SEQ005                  BRANCH TO WTOR\n         BCTR  R6,0                    FOR EX INSTRUCTION\n         EX    R6,PACK2                PACK CARDNUMBER\n         UNPK  REPLY2(8),DWB\n         OI    REPLY2+7,X'F0'          CLEAR SIGN\nNOSEQ    TM    PARMSW,UPDT\n         BNO   TSTVSI9\n         MVC   0(80,R12),CARD\n         B     CHANGE\nTSTVSI9  DS    0H\n         LA    R2,1(,R2)               Number of lines in workspace\n         MVC   0(80,R12),CARD\n         LA    R12,80(,R12)\n         B     TSTVSINP\nTSTVSCLS DS    0H\n         BAL   R14,SAVE\n         CLC   =C'SAVE ',REPLY         Save member requested ?  @930729\n         BE    TSTVSST                 YES: end of TSTVS\n         BAL   R14,SUB                 Else: submit first\n         B     TSTVSST\nTSTVSAL  DS    0H\n         CALL  TSTVSALL,(PARM)         Allocate the dataset\n         B     TSTVSST\nTSTVSREN DS    0H                      Rename a dataset         @930729\n         OI    PARMSW,$RENDS           Tell TSTVSALL, that a    @930729\n*                                      rename should occur      @930729\n         CALL  TSTVSALL,(PARM)         Rename the dataset       @930729\n         NI    PARMSW,255-$RENDS       Reset flag               @930729\n         B     TSTVSST                                          @930729\nTSTVSDEL DS    0H                      DELETE MEMBER OR RENAME MEMBER\n         B     DEL\nTSTVSEOJ DS    0H                      Pickup workspace\n         L     R12,SAVEGETM            LOAD ADDRESS WORKSPACE\n         ESTAE 0                       KILL ESTAE ROUTINE\n         OI    PARMSW,$UNALL           MARK UNALLOC ONLY BY TSTVSALL\n         CALL  TSTVSALL,(PARM)\n         FREEMAIN RU,LV=320000,A=(R12)\nTSTVSEO2 DS    0H\n         LA    R2,MSGID\n         DOM   MSG=(2)                 delete the start msg     @930729\n         L     R13,4(,R13)             Pickup callers save area\n         RETURN (14,12),RC=0           BACK TO OS\nPACK1    PACK  DWB,0(1,R3)             PACK ROUTING CODE ** EX ONLY **\nPACK2    PACK  DWB,REPLY2(1)           PACK CARD NUMBER ** EX ONLY **\n         TITLE 'U P D A T E   R O U T I N E'\nCHANGE   DS    0H\n         OI    SW02,$SUBMODE           MARK SUB COMMAND MODE\n         NI    SW01,X'FF'-$LINEDEL     SW DEL. REQUESTED OFF\n         XC    ECB1,ECB1\n         MVC   REPLY4(60),BLANKS\n         WTOR  'EDT005A Enter subcommand or ''HELP''',REPLY4,60,       X\n               ECB1,ROUTCDE=(2,3)\nDDD      WAIT  ECB=ECB1\n         OC    REPLY4(60),BLANKS       TRANSLATE TO CAPITALS\n         CLI   REPLY4,C' '\n         BE    CHANGE                  NOTHING REPLIED.\n         CLC   REPLY4(4),=C'END '      END OF SUBCOMMAND MODE\n         BE    CHEND\n         CLC   REPLY4(5),=C'SAVE '     SAVE CONTENTS ?\n         BNE   CHEOJ                   NO TEST OTHER SUBCOMMANDS\n         BAL   R14,SAVE                SAVE MEMBER\n         B     CHEND3                  TERMINATE SUBCOMMAND MODE\nCHEOJ    DS    0H\n         CLC   REPLY4(3),=C'EOJ'       END OF JOB    ?\n         BNE   CHSUB                   NO: TEST OTHER COMMANDS\n         OI    SW01,$EOJ               SET FLAG\n         B     CHEND                   BRANCH\nCHSUB    DS    0H\n         CLC   REPLY4(6),=C'SUBMIT'    SUBMIT THE WORKAREA ?\n         BNE   CHADD                   NO TEST OTHER FONCTIONS\n         OI    SW01,$WKSUBM            INDICATE WKAREA SUBMIT\n         BAL   R14,SUB                 SUBMIT THE WORKAREA\n         B     CHANGE                  NEW SUBCOMMAND\nCHADD    DS    0H\n         CLC   REPLY4(4),=C'ADD '      ADD JCL AFTER EOF WORKSPACE\n         BNE   CHVFY                   NO: TEST OTHER FUNCTIONS\n         LR    R12,R2                  # OF LINES IN WORKSPACE\n         MH    R12,=H'80'              X RECORD LENGTH\n         A     R12,SAVEGETM            + BEGIN ADRESS WORKSPACE\n         NI    PARMSW,X'FF'-UPDT       SUMULATE NEW MEMBER\n         B     TSTVSINP                ASK FOR INPUT STATEMENTS\nCHVFY    CLI   REPLY4,C'V'             LIST LINE AFTER 'C' COMMAND\n         BE    VFY\n         CLC   REPLY4(4),=C'HELP'      HELP MSG EDT014A\n         BNE   CHNG\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG09\n         WTO   MF=(E,(1))\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG10\n         WTO   MF=(E,(1))\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG11\n         WTO   MF=(E,(1))\n         MVC   MSG99+4(60),MSG11A\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11B\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11C\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11D\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11E\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11F\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11G\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11H\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11I\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11J\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11K\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11L\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11M\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11N\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),MSG11O      LAST HELP LINE\n         WTO   MF=(E,MSG99)\n         B     CHANGE\nCHNG     CLC   REPLY4(4),=C'LIST'      LIST WORKSPACE ? (FIRST 55 POS)\n         BNE   CHNGL                   NO: TEST OTHER FUNCTIONS\n         NI    SW01,255-$XLST          MARK NORMAL LIST\n         BAL   R14,LIST                LIST ROUTINE\n         B     CHANGE                  ASK FOR NEW SUBCOMMAND\nCHNGL    CLC   REPLY4(2),=C'L '        LIST WORKSPACE ? (ALIAS OF LIST)\n         BNE   CHNGXLST                NO: TEST OTHER FUNCTIONS\n         NI    SW01,255-$XLST          MARK NORMAL LIST\n         BAL   R14,LIST                LIST ROUTINE\n         B     CHANGE                  ASK FOR NEW SUBCOMMAND\nCHNGXLST CLC   REPLY4(4),=C'XLST'      LIST WORKSPACE ? (80 POS)\n         BNE   CHNGNUM                 NO: TEST OTHER FUNCTIONS\n         OI    SW01,$XLST              MARK EXTENDED LIST\n         BAL   R14,LIST                LIST ROUTINE\n         B     CHANGE                  ASK FOR NEW SUBCOMMAND\nCHNGNUM  CLC   REPLY4(5),=C'RENUM'     CARDNUMBERS IN COLS 73-80 ?\n         BE    RENUM                   YES: BRANCH\n         CLC   REPLY4(5),=C'UNNUM'     REMOVE CARDNUMBERS ?\n         BE    UNNUM                   YES: BRANCH\n         CLI   REPLY4,C'C'             UPDATE INPLACE CHAR STRINGS ?\n         BNE   CHINS                   NO: TEST OTHER FUNCTIONS\n         CLC   =C'ALL',REPLY4+2        'CHANGE ALL' SUBCOMMAND\n         BNE   CHSINGLE                NO: CHANGE SINGLE LINE\n         LA    R4,1                    START WITH LINE=1\n         L     R12,SAVEGETM            LOAD ADDR WORKSPACE\n         OI    SW02,$CHALL             MAKE CHANGE ALL COMMAND  @911218\n         OI    SW02,$NOMATCH           DEFAULT NO MATCH FOUND   @911218\n*--------------------------------------------------------------------*\n* FLAG '$NOMATCH' WILL BE RESET IF THE FIRST CHARACTER STRING IS\n* REPLACED\n*---------------------------------------------------------------------*\nCHALL1   DS    0H                                               @911218\n         CLC   0(2,R12),=X'FFFF'       E.O.F.?                  @911218\n         BE    CHALL9                  YES: TEST RC             @911218\n         CVD   R4,DWB                  CONVERT LINE TO DECIMAL  @911218\n         UNPK  REPLY4+2(3),DWB         MAKE ZONED               @911218\n         OI    REPLY4+4,X'F0'          REMOVE SIGN              @911218\n         BAL   R14,UPDIPL              UPDATE INPLACE ROUTINE   @911218\n         LA    R4,1(,R4)               Next line number         @911218\n         LA    R12,80(,R12)            Next record in workspace @911218\n         B     CHALL1                  LOOP UNTIL ALL LINES DONE@911218\n         MVC   MSG99+4(60),MSG12                                @911218\nCHALL9   DS    0H                                               @911218\n         TM    SW02,$NOMATCH           NO LINE'S CHANGED ?      @911218\n         BNO   CHANGE                  NO: BRANCH, YES: GIVE MSG@911218\n         MVC   MSG99+4(60),MSG12       MOVE MSG 'TEXT NOT FOUND'@911218\n         LA    R1,MSG99                                         @911218\n         WTO   MF=(E,(1))              GIVE MSG 'TEXT NOT FOUND'@911218\n         B     CHANGE                  ASK FOR NEXT SUBCOMMAND  @911218\nCHSINGLE DS    0H\n         NI    SW02,255-$CHALL         NO 'C ALL' SUBCOMMAND    @911218\n         BAL   R14,UPDIPL              UPDATE INPLACE ROUTINE\n         B     CHANGE\nCHINS    DS    0H\n         CLI   REPLY4,C'I'             LINE INSERTION ?\n         BNE   CHREPEAT                NO: TEST OTHER FUNCTIONS\n         B     INSERT                  INSERT/DELETE/REPEAT ROUTINE\nCHREPEAT DS    0H\n         CLC   REPLY4(2),=C'R '        REPEAT THE LINE BEHIND ITSSELF?\n         BNE   CHDEL                   TEST OTHER SUBCOMMANDS\n         B     INSERT                  INSERT THE REPEATED LINE\nCHDEL    DS    0H\n         CLI   REPLY4,C'D'             DELETE LINE OR RANGE ?\n         BNE   CHPRT\n         OI    SW01,$LINEDEL           SW DEL. REQUESTED\n         B     INSERT\nCHPRT    DS    0H\n         CLC   REPLY4(5),=C'PRINT'     Print DATASET ?\n         BNE   CHFIND\n         BAL   R14,PRT                 BRANCH TO PRINT ROUTINE.\n         B     CHANGE\nCHFIND   DS    0H\n         CLC   REPLY4(2),=C'F '        'F' (FIND) SUBCOMMAND ?\n         BNE   NUM                     NO: THEN LINE NUMBER\n         BAL   R14,FIND                EXEC FIND ROUTINE\n         B     CHANGE\nNUM      DS    0H\n         LA    R1,REPLY4               OFFSET FOR LINENUM\n         BAL   R14,LINENUM             GET LINENUMBER\n         LTR   R15,R15                 ERROR IN LINENUM ?\n         BNZ   CHANGE                  NEXT SUBCOMMAND\n         L     R5,LINENR1              OBTAINED LINENBR\n         BCTR  R5,0\n         MH    R5,=H'80'\n         L     R12,SAVEGETM\n         AR    R12,R5\n         MVC   MSG99+4(60),0(R12)\n         LA    R1,MSG99\n         WTO   MF=(E,(1))\n         B     TSTVSINP\nRENUM    DS    0H\n         L     R12,SAVEGETM            LOAD GETM. AREA\n         ZAP   DWB,=PL2'10'            FIRST LINE NUMBER\nRENUM2   CLC   0(2,12),=X'FFFF'        END OF DATA\n         BE    WTONUM                  GIVE MSG EDT013I\n         UNPK  72(8,R12),DWB\n         OI    79(R12),X'F0'\n         AP    DWB,=PL2'10'            INCREMENT VALUE\n         LA    R12,80(,R12)            Next record\n         B     RENUM2\nUNNUM    DS    0H\n         L     R12,SAVEGETM            LOAD ADDR WORKSPACE\nUNNUM2   DS    0H\n         CLC   0(2,R12),=X'FFFF'       E.O.F.?\n         BE    CHANGE\n         MVC   72(8,R12),BLANKS        REMOVE LINE NUMBERS\n         LA    R12,80(,R12)            Next record\n         B     UNNUM2\nWTONUM   DS    0H\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG08\n         WTO   MF=(E,(1))\n         B     CHANGE                  ASK FOR NEW SUBCOMMAND\nVFY      DS    0H                      LIST OR DONT LIST LINE AFTER\n*                                      'C' SUBCOMMAND\n         CLC   REPLY4+2(3),=C'ON ' LIST ?\n         BE    VFY2\n         MVC   REPLY4+2(3),=C'OFF'     MOVE DEFAULT\n         NI    SW01,X'FF'-$VFY         SET LISTD ID OFF\n         B     VFY3\nVFY2     OI    SW01,$VFY               SET LIST ID ON\nVFY3     DS    0H                      ISSUE MSG EDT022I\n         MVC   ONOFF(3),REPLY4+2       MOVE VERIFY OPERAND\n         MVC   MSG99+4(60),MSG18       MOVE IN MSG\n         WTO   MF=(E,MSG99)            INFORM OPERATOR\n         B     CHANGE\nCHEND    DS    0H                      PROCESS 'END'\n         TM    SW01,$CHANGED           NOT ALL DATA SAVED ?\n         BNO   CHEND3                  BRANCH IF ALL SAVED\nCHEND2   XC    ECB1,ECB1               CLEAR ECB\n         MVC   REPLY8,BLANKS           BLANK REPLY AREA\n         WTOR  'EDT025A *WARNING* nothing saved, Enter ''SAVE'' or ''ENX\n               D''',REPLY8,4,ECB1,ROUTCDE=(2,3)\nIII      WAIT  ECB=ECB1                WAIT FOR EVENT\n         CLC   REPLY8(4),=C'END '      NOTHING SAVE FORCED ?\n         BE    CHEND3                  SAVE NOTHING IF YES\n         CLC   REPLY8(4),=C'SAVE'      SAVE ?\n         BNE   CHEND2                  WRONG REPLY\n         BAL   R14,SAVE                SAVE THE MEMBER\nCHEND3   DS    0H\n         NI    SW01,255-$CHANGED       CHANGE SWITCH OFF\n         NI    SW02,255-$SUBMODE       RESET SUBCOMMAND MODE FLAG\n         TM    SW01,$EOJ               EOJ SUBCOMMAND ENTERED ?\n         BO    TSTVSEOJ                YES: TERMINATE TSTVS\n         B     TSTVSST                 ASK FOR NEW COMMAND\n         TITLE 'L I S T        ROUTINE'\nLIST     DS    0H\n         STM   R14,R12,SAVER           SAVE REGISTERS\n         L     R12,SAVEGETM            STORE ADDR WORKSPACE\n         LA    R1,REPLY4+5             PARAMETER FOR LINENUM\n         CLC   REPLY4(2),=C'L '        ALIAS OF 'LIST' ??\n         BNE   LIST1                   NO 'LIST' OR 'XLST'\n         CLI   REPLY4+2,X'40'          NO LINE NUMBER ?\n         BE    LIST2                   LIST ENTIRE DATASET\n         LA    R1,REPLY4+2             'L' COMMAND (ALIAS OF 'LIST')\n         B     LIST1A                  BRANCH\nLIST1    DS    0H\n         CLI   REPLY4+5,C' '           NO LINE NUMBERS ??\n         BE    LIST2                   LIST ENTIRE DATASET\nLIST1A   DS    0H\n         BAL   R14,LINENUM             OBTAIN LINENBRS OPERANDS\n         LTR   R15,R15                 OK\n         BNZ   LISTEND\n         B     LIST4\nLIST2    DS    0H\n         ZAP   PACKFLD,=PL3'0'         *** LIST ENTIRE WORKSPACE ***\n         ZAP   WTOCNT,=PL2'0'          COUNTER FOR EDT017A CONT MSG\n         LH    R3,=H'3999'             MAX # OF LINES IN WORKSPACE\n         MH    R3,=H'80'\n         AR    R3,R12                  LAST LINE TO DISPLAY\nLIST3    DS    0H\n         CLC   0(2,R12),=X'FFFF'       EOF WORKSPACE\n         BE    LISTEND\n         CR    R12,R3                  OUT OF LINE RANGE ?\n         BH    LISTEND                 END OF LIST ROUT\n         AP    PACKFLD,=PL1'1'\n         CP    WTOCNT,=P'16'           16 LINES DISPLAYED ??\n         BL    LIST3#                  NO: DISPLAY NEXT LINE\n         ZAP   WTOCNT,=PL2'0'          ZERO IN COUNTER\nLISTCONT DS    0H\n         MVC   REPLY6,BLANKS           CLEAR REPLY AREA\n         XC    ECB1,ECB1               CLEAR ECB LIST\n         WTOR  'EDT017A Should TSTVS continue this function? Reply Y OrX\n                N ',REPLY6,3,ECB1,ROUTCDE=(2,3)\nFFF      WAIT  ECB=ECB1\n         OC    REPLY6,BLANKS           XLATE TO UPPERCASE\n         CLC   REPLY6(2),=C'Y '        CONTINUE ?\n         BE    LIST3#                  YES: LIST ANOTHER 16 LINES\n         CLC   REPLY6(2),=C'N '        TERMINATE THE DISPLAY\n         BNE   LISTCONT                NO: BRANCH TO WTOR\n         B     LISTWTO2                YES: GIVE MSG EDT018I\nLIST3#   DS    0H\n         TM    SW01,$XLST              EXTENDED LIST ?\n         BNZ   LIST3B                  YES: DO THAT\nLIST3A   DS    0H\n         UNPK  MSG99+4(4),PACKFLD      LINE NUMBER BEFORE LINE\n         OI    MSG99+7,X'F0'           CLEAR SIGN\n         MVI   MSG99+8,X'40'\n         MVC   MSG99+9(55),0(R12)      1ST 55 POSITIONS ON CONSOLE\n         LA    R1,MSG99\n         WTO   MF=(E,(1))\n         AP    WTOCNT,=PL1'1'\n         LA    R12,80(,R12)            Next record\n         B     LIST3\nLIST3B   DS    0H\n         MVC   MSG99+4(60),BLANKS      BLANK MSG FIELD\n         UNPK  MSG99+4(4),PACKFLD      LINE NUMBER BEFORE LINE\n         OI    MSG99+7,X'F0'           CLEAR SIGN\n         MVC   MSG99+9(7),=C'01...40'  FIRST 40 COLUMNS\n         MVC   MSG99+17(40),0(R12)     1ST 40 POSITIONS ON CONSOLE\n         LA    R1,MSG99\n         WTO   MF=(E,(1))\n         AP    WTOCNT,=PL1'1'\n         MVC   MSG99+4(4),=C'....'     START 2ND PART OF LINE\n         MVC   MSG99+9(7),=C'41...80'  SECOND 40 COLUMNS\n         MVC   MSG99+17(40),40(R12)    2ND 40 POSITIONS ON CONSOLE\n         LA    R1,MSG99\n         WTO   MF=(E,(1))\n         AP    WTOCNT,=PL1'1'\n         LA    R12,80(,R12)            Next record\n         B     LIST3\nLIST4    DS    0H                      *** LIST LINE RANGE *****\n         L     R2,LINENR1              START LINE\n         CVD   R2,DWB                  MAKE DECIMAL\n         ZAP   PACKFLD(3),DWB\n         SP    PACKFLD,=P'1'           MINUS 1\n         BCTR  R2,0                    DECREASE WITH ONE\n         MH    R2,=H'80'               X RECORD LENGTH\n         AR    R12,R2\n         L     R3,LINENR2              SECOND LINE NUMBER\n         BCTR  R3,0                    DECREASE WITH ONE\n         MH    R3,=H'80'               X RECORD LENGTH\n         A     R3,SAVEGETM             LAST LINE TO DISPLAY\n         ZAP   WTOCNT,=PL2'0'\n         B     LIST3\nLISTWTO2 DS    0H                      MSG EDT018I *****\n         MVC   MSG99+4(60),MSG14\n         LA    R1,MSG99\n         WTO   MF=(E,(1))\nLISTEND  DS    0H\n         LM    R14,R12,SAVER           RESTORE THE REGISTERS\n         BR    R14                     RETURN TO CALLER\n         TITLE 'P R I N T        ROUTINE'\n*---------------------------------------------------------------------*\n*        ROUTINE TO PRINT THE WORKSPACE TO CHECK THE                  *\n*        CHANGES MADE BY THIS PROGRAM                                 *\n*        THE PRINT DATASET IS A SPIN-OFF SYSOUT DATASET               *\n*        THIS ROUTINE IS ONLY SUPPORTED BY M.V.S.                     *\n*------------------------------------------ (C)-1993 SKYBIRD SYSTEMS -*\n         SPACE 2\nPRT      DS    0H                      PRINT ROUTINE\n         STM   R14,R12,SAVER           SAVE THE REGISTERS\n         XC    SYSINT(4),SYSINT        CLEAR INTRDR SPECIFICATION\n         TM    SW02,$OPER              ISSUED BY OPER ? (PRIM SUBSYS)\n         BNZ   PRTWTO3                 YES: BRANCH\n         TRT   REPLY4+6(1),CLSTAB      TEST IF SYSOUT IS VALID\n         BNZ   PRT001                  TAKE DEFAULT IF INVALID\n         MVC   SYSCLS(1),REPLY4+6      MOVE SYSOUT CLASS OF REPLY\nPRT001   DS    0H\n         LA    R1,BLKPTR               PREPARE DYNAMIC ALLOCATION\n         SVC   99                      ALLOCATE\n         MVC   MSG19CLS,SYSCLS         MOVE SYSOUTCLASS IN MESSAGE\n         MVI   SYSCLS,C'C'             MOVE DEFAULT SYSOUT CLASS\n         LTR   R15,R15                 TEST IF ALLOC O.K. ?\n         BNZ   PRTWTO2                 INFORM OPERATOR IF NOT\n         MVC   PRTDCB+DCBDDNAM-IHADCB(8),ALCDDNAM\n*                                      MOVE GENERATED DDNAME\n         OPEN  (PRTDCB,(OUTPUT))\n         MVC   HEADMEM,JFCB+44         MOVE MEMBER INTO HEADING\n         L     R12,SAVEGETM            LOAD GETM AREA ADDRESS\n         ZAP   PACKFLD,=PL1'0'         INITIALIZE LINE COUNTER\n         ZAP   LINECNT,=P'99'          FORCE HEADING\n         ZAP   PAGECNT,=P'0'           PAGE COUNTER\nPRT01    DS    0H                      **** PRINT DATASET *****\n         CLC   0(2,R12),=X'FFFF'       END OF AREA ?\n         BE    PRT02                   PRINT OK\n         CP    LINECNT,=P'54'          BOTTOM OF PAGE REACHED ?\n         BL    PRT01A                  PRINT LINE IF NOT\n         AP    PAGECNT,=P'1'           PAGECNT = PAGECNT +1\n         UNPK  HEADCNT,PAGECNT         UNPACK THE RESULT\n         OI    HEADCNT+2,X'F0'         CLEAR SIGN\n         PUT   PRTDCB,HEADLINE         WRITE LINE\n         MVC   LINE,LINE-1             CLEAR LINE\n         PUT   PRTDCB,LINE             WRITE BLANK LINE\n         ZAP   LINECNT,=P'2'           INITIALIZE LINECOUNT\nPRT01A   DS    0H\n         AP    PACKFLD,=PL1'1'         LINE COUNTER\n         MVC   LINE,LINE-1             BLANK LINE\n         UNPK  LINE+1(4),PACKFLD       TSTVS SEQ NUMBER\n         OI    LINE+4,X'F0'            CLEAR SIGN\n         MVC   LINE+10(80),0(R12)      CARD IN PRINTLINE\n         PUT   PRTDCB,LINE             WRITE LINE\n         AP    LINECNT,=P'1'           COUNT LINES\n         LA    R12,80(,R12)            Next record\n         B     PRT01                   PRINT NEXT LINE\nPRT02    DS    0H                      CLOSE DATASET\n         CLOSE PRTDCB                  CLOSE AND UNALLOCATE\n         FREEPOOL PRTDCB               AND FREE THE BUFFERS\n         UNPK  MSG19#L,PACKFLD         # OF LINES\n         OI    MSG19#L+3,X'F0'\n         MVC   MSG99+4(60),MSG19       MOVE IN MSG\n         WTO   MF=(E,MSG99)            INFORM OPERATOR/PROGRAMMER\n         B     PRTEND            E N D   O F   R O U T I N E\nPRTWTO3  DS    0H                      ISSUE MSG EDT028E\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG24       IS NOT POSSIBLE IF SUBSYSTEM\n         WTO   MF=(E,(1))              INFORM OPERATOR\n         B     PRTEND\nPRTWTO2  DS    0H                      MSG EDT019E\n         SYCONVHX IN=ERROR,OUT=ERRORBC,L=2\n         SYCONVHX IN=INFO,OUT=INFOBC,L=2\n         LA    R1,MSG99                DYN ALLOC FAILED\n         MVC   MSG99+4(60),MSG15\n         WTO   MF=(E,(1))              INFORM\nPRTEND   DS    0H\n         LA    R2,INTKEY               REPAIRE INTRDR SPECIFICATION\n         LA    R2,0(,R2)               CLEAR HI ORDER BYTE\n         ST    R2,SYSINT\n         LM    R14,R12,SAVER           RESTORE THE REGISTERS\n         BR    R14 RETURN TO CALLER\n         TITLE 'DELETE OR RENAME MEMBERS IN DIRECTORY'\nDEL      DS    0H                      IF $RENAME ON THEN RENAME\n         MVC   NOT,=C'   '             ) ELSE DELETE\n         MVC   RENDEL,=CL8' DELETED'   DEFAULT DELETE\n         MVC   RTRNTEXT,BLANKS\n         OPEN  (PDSDCB,(UPDAT))\n         TM    PARMSW,$RENAME          RENAME MEMBER REQUESTED ?\n         BZ    DEL2                    NO: DELETE MEMBER\n         STOW  PDSDCB,PARM33M,C        RENAME MEMBER\n         MVC   RENDEL,=CL8' RENAMED'   CHANGE TEXT\n         NI    PARMSW,255-$RENAME      FLAG OFF\n         B     DEL4                    BRANCH\nDEL2     DS    0H\n         STOW  PDSDCB,PARM33M,D        DELETE MEMBER\nDEL4     DS    0H\n         LTR   R15,R15                 TEST COMPLETION\n         BZ    DEL6                    YES: DELETE OK\n         MVC   NOT,=C'NOT'             ELSE PRODUCE ERROR MSG\n         MVC   RTRNTEXT(12),=C' RETURNCODE '\n         CVD   R15,DWB\n         UNPK  RTRNTEXT+12(4),DWB\n         OI    RTRNTEXT+15,X'F0'\nDEL6     DS    0H\n         CLOSE (PDSDCB)\n         MVC   WTOMEM,PARM33M\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG06\n         WTO   MF=(E,(1))              WRITE 'MEMBER DELETED' MSG\n         B     TSTVSST                 ASK FOR NEW COMMAND\n         TITLE 'READ DIRECTORIES FROM PARTITIONED DATASET'\nRDDIR    DS    0H\n         STM   R14,R12,SAVER           SAVE REGISTERS\n         NI    SW01,X'FF'-SW2\n         CLC   PARM33R(7),=C'PDSLIST'  LIST DIRECTORIES OF PDS ?\n         BE    PDSL03                  CHECK PRESENCE OF MEMBER\n         OPEN  (PDSDCB)\n         MVC   BLDLM,PARM33M           Move membername\n         BLDL  PDSDCB,BLDLLIST         BLDL  ENTRY SUPPLIED NAME\n         LTR   R15,R15                 TEST COMPLETION OF BLDL\n         BNZ   PDSL01                  MEMBER NOT PRESENT\n         OI    SW01,SW2                MARK MEMBER PRESENT\nPDSL01   DS    0H\n         CLOSE PDSDCB\n         B     PDSL99                  END OF BLDL ROUTINE\nPDSL03   DS    0H\n         MVC   MSG13(60),BLANKS\n         RDJFCB OUTDCB                 PROVIDE JFCB INFORMATION\n         OPEN  PDSDCB\n         MVC   MSG13(8),=C'EDT016I '   MOVE MSG ID\n         MVC   MSG13+8(44),JFCB        MOVE DATASET NAME\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG13\n         WTO   MF=(E,(1))              Write header\n         LA    R7,16\nPDSL05   DS    0H\n         READ  DECB,SF,PDSDCB,MEMBAREA,256\n         CHECK DECB\n         XR    R3,R3\n         LA    R4,MEMBAREA\n         LH    R3,0(,R4)               # of bytes\n         SH    R3,=H'2'                SUBTR. COUNT\n         LA    R4,2(,R4)               Point to first member\nPDSL07   DS    0H\n         LTR   R3,R3                    TEST IF COUNT ZERO\n         BZ    PDSL05                  LAST MEMBER IN DIR BLOCK\n         CLI   0(R4),X'FF'             LAST MEMBER ?\n         BE    PDSL15                  YES: CLOSE PDS\n         XR    R1,R1                   clear register           @930726\n         IC    R1,PARM33KL             Keylength                @930726\n         LTR   R1,R1                   No length ?              @930726\n         BZ    PDSL08                  Yes: Branch              @930726\n         EX    R1,PDSLCMP              Test with key            @930726\n         BL    PDSL13                  NEXT MEMBER IF NOT REACHED\nPDSL08   DS    0H                                               @930726\n         BCT   R7,PDSL11\n         LA    R7,16\nPDSL09   DS    0H                                               @930726\n         MVC   REPLY6,BLANKS           CLEAR REPLY AREA\n         XC    ECB1,ECB1               CLEAR ECB\n         WTOR  'EDT017A Should TSTVS continue this function? Reply Y OrX\n                N ',REPLY6,3,ECB1,ROUTCDE=(2,3)\nGGG      WAIT  ECB=ECB1\n         OC    REPLY6,BLANKS           XLATE TO UPPERCASE\n         CLC   REPLY6(2),=C'Y '        CONTINUE ?\n         BE    PDSL11                  YES: LIST NEXT 16 LINES\n         CLC   REPLY6(2),=C'N '        TERMINATE PDSLIST ?\n         BNE   PDSL09                  NO: REISSUE WTOR\n         MVC   MSG99+4(60),MSG14       GIVE MSG EDT018I\n         LA    R1,MSG99                GIVE MSG EDT018I\n         WTO   MF=(E,(1))              GIVE MSG EDT018I\n         B     PDSL15                  TERMINATE PDSLIST\nPDSL11   DS    0H\n         MVC   MSG13(60),BLANKS\n         MVC   MSG13+8(8),0(R4)        MOVE MEMBERNAME IN MSG\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG13\n         WTO   MF=(E,(1))              GIVE MESSAGE TO OPER\nPDSL13   DS    0H\n         SR    R5,R5                   REG-5 ZERO\n         SR    R6,R6                   REG-6 ZERO\n         IC    R5,11(R4)               NUMBER OF ADDITIONAL HALFWORDS\n         IC    R6,=X'1F'               MAXIMUM OF ADDITIONAL HALFWORDS\n         NR    R5,R6                   TEST OF ADD HW NOT GREATER 31\n         AR    R5,R5                    MULTIPLY BY 2 BECAUSE HALFWORDS\n         LA    R4,12(R5,R4)             LOAD NEXT MEMBER ENTRY\n         SR    R3,R5  SUBTRACT LENGTH OF ADD HALFWORDS FROM COUNT\n         SH    R3,=H'12'                SUBTRACT OFFSET FROM COUNT\n         B     PDSL07                   RETURN\nPDSL15   DS    0H\n         CLOSE PDSDCB\nPDSL99   DS    0H\n         LM    R14,R12,SAVER     RESTORE THE REGISTERS\n         BR    R14\nPDSLCMP  CLC   0(0,R4),PARM33KY        TEST WITH KEY ** exec only **\n         TITLE 'I N S E R T  /  D E L E T E  / R E P E A T   LINES'\nINSERT   DS    0H\n         CLC   REPLY4+2(3),=C'   '       NO LINE NUMBER\n         BNE   IN002                     IF NOT THEN NUMERIC TEST\n         XC    LINENR1,LINENR1           INSERT BEFORE FIRST LINE\n         B     INOK\nIN002    DS    0H                        NUMERIC TEST\n         LA    R1,REPLY4+2               LOAD PARM LINENUM\n         BAL   R14,LINENUM             OBTAIN LINENUMBER\n         LTR   R15,R15                 ERROR ?\n         BNZ   CHANGE                  END OF ROUTINE\nINOK     L     R5,LINENR1              CONVERT LINE-NO TO BIN\n         TM    SW01,$LINEDEL           DELETE LINE ?\n         BNO   IN001                   BRANCH IF NOT\n         LTR   R5,R5                   LINE 0 COULD NOT DEL.\n         BZ    INERR                   THEN MSG EDT006E\n         CLC   LINENR1,LINENR2         NO SECOND LINE NUMBER ?\n         BE    IN000A                  BRANCH IF YES\n         ST    R3,DELR3                SAVE R3 FOR OTHER USE\n         L     R3,LINENR2              OBTAIN 2ND LINENR\n         SR    R3,R5                   2ND LINENR - 1ST LINENR\n         LA    R3,1(,R3)               +/+ 1 FOR BCT LOOP\n         B     DEL001                  GO TO DELETE ROUT\nIN000A   DS    0H                      ONLY FIRST LINENR\n         ST    R3,DELR3                SAVE R3\n         LA    R3,1                    1 FOR BCT\n         B     DEL001\nIN001    DS    0H\n         LR    R8,R2                   SAVE COUNT REG\n         LA    R8,1(,R8)\n         CH    R8,=H'3999'\n         BH    INERR2                  LINE EXEEDS MAX LINES\n         CLC   REPLY4(2),=C'R '        REPEAT FUNCTION ?\n         BNE   IN001A                  ELSE INSERT\n         OI    SW01,$CHANGED           CHANGE SWITCH ON\n         LTR   R5,R5                   LINE NUMBER 0 SPEC. OR OMITTED\n         BZ    IN001A                  THEN REPEAT LINE 1.\n         BCTR  R5,0                    ELSE REPEAT SPECIFIED LINE\nIN001A   DS    0H\n         MH    R5,=H'80'               MULTIPLY WITH RECORD LENGTH\n         LR    R8,R5\n         L     R12,SAVEGETM            STORE ADDR WORKSPACE\n         AR    R12,R5                  SHIFT LINES BEHIND\n         MVC   HELP1(80),0(R12)        THE LINE TO BE INSERTED\nIN003    DS    0H\n         CLC   HELP1(2),=X'FFFF'       LAST LINE\n         BE    INEND\n         LA    R12,80(,R12)            Next record in workspace\n         MVC   HELP2(80),0(R12)        SAVE LINE\n         MVC   0(80,R12),HELP1\n         MVC   HELP1,HELP2\n         B     IN003\nINERR    DS    0H                      LINE-NUMBER INVALID\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG02       MSG EDT006E\n         WTO   MF=(E,(1))\n         B     CHANGE                  TRY AGAIN\nINERR2   DS    0H\n         LA    R1,MSG99                LINES EXCEEDS MAX.\n         MVC   MSG99+4(60),MSG07       MSG EDT012E\n         WTO   MF=(E,(1))\n         B     CHANGE                  ADVICE SPLIT MEMBER\n*                                      INTO TWO MEMBERS\nINEND    DS    0H\n         LA    R2,1(,R2)               COUNT = COUNT +1\n         CLC   REPLY4(2),=C'R '        REPEAT FUNCTION ?\n         BE    CHANGE                  ASK FOR NEW SUBCOMMAND\n         L     R12,SAVEGETM            STORE GETM.AREA\n         AR    R12,R8                  RIGHT POSITION\n         B     TSTVSINP                ASK FOR JCL-STMNT\nDEL001   DS    0H                      DEL LINE FROM GETM.-AREA\n         BCTR  R5,0\n         MH    R5,=H'80'               R5 FROM INSERT\n         L     R12,SAVEGETM\n         AR    R12,R5\n         ST    R12,DELR12              SAVE FOR 2ND USE\nDEL001A  DS    0H\n         MVI   DEL003+1,X'00'          CHANGE BC 15 INTO BC 0\n         L     R12,DELR12\nDEL002   DS    0H\n         CLC   0(2,R12),=X'FFFF'       END OF FILE\n         BE    DEL005                  DEL LINE   COMPLETED\n         OI    SW01,$CHANGED           CHANGE SWITH ON\nDEL003   DS    0H\n         BC    0,DEL004\n         OI    DEL003+1,X'F0'          CHANGE BC 0 INTO BC 15\n         BCTR  R2,0                    DECREASE COUNT WITH 1\nDEL004   DS    0H\n         MVC   0(80,R12),80(R12)\n         LA    R12,80(,R12)            Next record\n         B     DEL002\nDEL005   DS    0H                      NEXT LINE\n         BCT   R3,DEL001A              NEXT LINE TO DELETE\n         L     R3,DELR3                RESTORE R3\n         B     CHANGE\nDELR3    DS    F                       FOR SAVE R3\nDELR12   DS    F\n         TITLE 'CHANGE OLD CHAR. STRING IN NEW CHAR. STRING'\nUPDIPL   DS    0H\n************* REGISTERS USED          ***/\n*/* R2        REGISTER FOR WORKSPACE    */\n*/* R3        WORKREGISTER              */\n*/* R4        BCT  REGISTER             */\n*/* R5        LENGTH CHAR. STRING       */\n*/* R6        ADRESS CHAR STRING        */\n*/* R7        WORKREGISTER.             */\n*/* ALL REGISTERS ARE SAVED             */\n         STM   R14,R12,SAVER        SAVE REGISTERS\n         CLC   REPLY4+2(3),=X'F0F0F0'  TEST IF LINENUM NUMERIC\n         BNH   UPDWTO1                  GIVE ERROR MSG EDT006E\n         OI    SW01,SW7                 Mark 'C' Subcommand\n         LA    R1,REPLY4+2              Parameter\n         BAL   R14,LINENUM              Obtain line number\n         NI    SW01,X'FF'-SW7\n         LTR   R15,R15              ERROR ?\n         BNZ   UPDBK                END OF ROUTINE\n         L     R2,SAVEGETM           RESTORE WORKSPACE ADDRESS\n         L     R3,LINENR1           OBTAIN LINENUM\n         BCTR  R3,0                 DECREASE WITH 1\n         MH    R3,=H'80'            RECORD LENGTH IS 80\n         AR    R2,R3                RIGHT LINE FOUND\n         ST    R2,SAVELST           STORE LINE TO CHANGE\n         LA    R4,25                SEARCH MAX 25 TIMES\n         XR    R5,R5                COUNT REG FOR LENGTH STRING\n         L     R6,OFFSET            OFFSET IN REPLY 4 FROM LINENUM RT\n         LR    R8,R6\nUPD01A   DS    0H\n         CLI   0(R6),C'$'           END OF CHAR STRING ?\n         BE    UPD01B               BRANCH IF YES\n         LA    R5,1(,R5)            # OF BYTES LENGTH\n         LA    R6,1(,R6)            TEST NEXT POSITION\n         BCT   R4,UPD01A            TRY AGAIN\n         B     UPDWTO2              MSG EDT015E TEXT NOT FOUND\nUPD01B   DS    0H\n         MVC   UPD01A+6(2),=S(UPD01C) MOVE DIFFERENT BRANCH ADR\n         LR    R7,R5                SAVE LENGTH OLD CHAR. STRING\n         LA    R4,25                SEARCH MAX 25 TIMES.\n         LA    R6,1(,R6)            NEW CHAR. STRING.\n         ST    R6,SAVER6\n         XR    R5,R5                CLEAR GR. 5\n         B     UPD01A               TEST LENGTH NEW STRING\nUPD01C   DS    0H\n         ST    R7,LENGTH1           SAVE LENGTH OLD CHAR STRING\n         ST    R5,LENGTH2           SAVE LENGTH NEW CHAR STRING\n         LTR   R7,R7                LENGTH OLD CHAR STRING ZERO\n         BZ    UPD02A               BRANCH IF YES.\n         LA    R4,79                SEARCH MAX 79 TIMES\n         BCTR  R7,0                 DECREASE WITH 1 FOR EX\n         SPACE\n*** SEARCH OLD CHAR STRING AND REPLACE INTO NEW CHAR STRING ***/\n         SPACE\nUPD2     DS    0H\n         EX    R7,COMPARE           TEST IF STRING PRESENT\n         BE    UPD02A               REPLACE INTO NEW STRING\n         LA    R2,1(,R2)            NEXT CHARACTER\n         BCT   R4,UPD2              TRY AGAIN\n         B     UPDWTO2              MSG EDT015E TEXT NOT FOUND\nCOMPARE  CLC   0(0,R2),0(R8)        **** EXECUTE ONLY ****\nUPD02A   DS    0H\n         ST    R2,SAVER2            SAVE POSITION IN LINE\n         L     R7,LENGTH1\n         L     R5,LENGTH2\n         SR    R7,R5                DIFFERENT LENGTH.\n         C     R7,=F'0'             LENGTHS EQUAL\n         BE    UPD3                 NO PROBLEMS REPLACE.\n         BH    UPD02B               OLD STRING LONGER.\n         L     R3,SAVER2            RESTORE POSITION.\n         A     R3,LENGTH1           ADD LENGTH OF OLD STRING\n         ST    R3,SAVER3            SAVE END OF OLD STRING IN LINE.\n         LPR   R5,R7                MAKE RESULT POSITIVE\n         L     R4,SAVELST           LOAD FIRST POS CHANG. LINE\n         MVC   CARD(80),0(R4)       SAVE LINE.\n         LA    R4,72(,R4)           LAST POSITION IN LINE.\n         SR    R4,R3                LENGTH OF REMAINING DATA.\n         SR    R4,R5\n         AR    R3,R5\n         L     R5,SAVELST           RESTORE FIRST POS OF LINE\n         SR    R3,R5                OFFSET.\n         LR    R5,R3                SAVE OFFSET.\n         LA    R3,CARD\n         AR    R3,R5\n         L     R5,SAVER3\n         BCTR  R4,0\n         C     R4,=F'0'                NEGATIVE ?\n         BL    UPD3                    IF SO NO SHIFT REM DATA\n         EX    R4,MOVE2             SHIFT REMAINING DATA\n         L     R4,SAVELST           RESTORE CHANGED LINE\n         MVC   0(80,R4),CARD        RESTORE CHANGED LINE\n         B     UPD3                 REPLACE.\nUPD02B   DS    0H\n         L     R3,SAVER2            RESTORE POSITTION.\n         A     R3,LENGTH1           ADD L OF OLD STRING.\n         L     R4,SAVELST           LOAD FIRST POS CH. LINE\n         LA    R4,72(,R4)           LAST POSITION IN LINE.\n         ST    R3,SAVER3            1ST CHAR AFTER 'OLD STRING'\n         SR    R4,R3                LENGTH OF REMAINING DATA\n         BCTR  R4,0                 FOR EX. INSTRUCTION.\n         MVC   CARD,BLANKS          CLEAR WORK-AREA\n         C     R4,=F'0'             LAST CHAR OF 1ST STRING IN C 72 ?\n         BL    UPD02B1              YES: DO NOT MOVE REMAINING DATA\n*                                   APAR TSTVS001\n         EX    R4,MOVE3\nUPD02B1  DS    0H\n         SR    R3,R7\n         AR    R4,R7                SUBST. BLANKS IN REM. DATA\n         EX    R4,MOVE4             SHIFT REMAINING DATA TO LEFT\nUPD3     DS    0H\n****     REPLACE OLD STRING INTO NEW STRING     ***/\n         NI    SW02,255-$NOMATCH    AT LEAST 1 ONE LINE CHANGED @911218\n         L     R6,SAVER6            RESTORE R6.\n         L     R5,LENGTH2\n         LTR   R5,R5\n         BZ    UPDEND               NEW STRING HAS LENGTH=0.\n         BCTR  R5,0                 FOR EX.\n         EX    R5,MOVE1             MOVE NEW CHAR STRING\n         OI    SW01,$CHANGED\n         B     UPDEND               RETURN\nMOVE1    MVC   0(0,R2),0(R6)        **** EXECUTE ONLY ****\nMOVE2    MVC   0(0,R3),0(R5)        **** EXECUTE ONLY ****\nMOVE3    MVC   CARD(0),0(R3)        **** EXECUTE ONLY ****\nMOVE4    MVC   0(0,R3),CARD         **** EXECUTE ONLY ****\nUPDWTO1  DS    0H\n****     MSG EDT006E, INVALID LINE NUMBER       ***/\n         MVC   MSG99+4(60),MSG02\n         LA    R1,MSG99\n         WTO   MF=(E,(1))           GIVE MESSAGE\n         B     UPDBK\nUPDWTO2  DS    0H\n         TM    SW02,$CHALL          'CHANGE ALL COMMAND'        @911218\n         BO    UPDBK                NO: DO NOT ISSUE MSG        @911218\n****     MSG EDT015E    TEXT NOT FOUND          ***/\n         MVC   MSG99+4(60),MSG12\n         LA    R1,MSG99\n         WTO   MF=(E,(1))           GIVE MESSAGE\n         B     UPDBK\nUPDEND   DS    0H\n         TM    SW01,$VFY            LIST THE LINE ?\n         BNO   UPDBK                IF NOT RETURN\n         L     R2,SAVELST           LOAD ADRESS CHANGED LINE\n         MVC   MSG99+4(60),0(R2)    IN WTO\n         LA    R1,MSG99\n         WTO   MF=(E,(1))           INFORM OPERATOR\nUPDBK    MVC   UPD01A+6(2),=S(UPD01B) RESTORE BRANCH ADR\n         LM    R14,R12,SAVER        RESTORE THE REGISTERS\n         BR    R14                  RETURN TO CALLER\nLENGTH1  DS    F                    LENGTH OF OLD CHAR STRING\nLENGTH2  DS    F                    LENGTH OF NEW CHAR STRING\nSAVER2   DS    F                    SAVE REG 2.\nSAVER3   DS    F                    SAVE REG 3.\nSAVER6   DS    F                    SAVE REG 6.\n         TITLE 'F I N D      ROUTINE'\n*---------------------------------------------------------------------*\n*        THIS ROUTINE EXECUTES THE 'F' SUBCOMMAND                     *\n*        THE SYNTAX IS 1. 'F  $STRING$' OR 2. 'F'                     *\n*        IF ONLY AN 'F' IS ENTERED, A REPEAT FIND OF THE PREVIOUS     *\n*        CHARACTER STRING IS EXECUTED                                 *\n*-------------------------------------------(C)-1993 SKYBIRD SYSTEMS--*\n         SPACE 2\nFIND     DS    0H\n         STM   R14,R12,SAVER           SAVE THE REGISTERS\n         CLI   REPLY4+2,C'$'           DELIMITER FOUND ?\n         BNE   RFIND                   NO: ISSUE REPEAT FIND\n         LA    R3,REPLY4+3             POINT TO FIRST BYTE OF STRING\n         LA    R4,56                   MAX LENGTH OF STRING\n         XR    R6,R6                   COUNT LENGTH\n         MVC   RSTRING,BLANKS          CLEAR PREVIOUS STRING\n         LA    R5,RSTRING\nFIND001  DS    0H\n         CLI   0(R3),C'$'              END DELIMITER FOUND ?\n         BE    FIND007                 YES: BRANCH\n         MVC   0(1,R5),0(R3)           MOVE 1 BYTE STRING\n         LA    R3,1(,R3)               Next byte in string\n         LA    R5,1(,R5)               Incr output address\n         LA    R6,1(,R6)               Incr count\n         BCT   R4,FIND001              REPEAT UNTIL END DLM FOUND\n         MVC   MSG99+4(60),MSG21       MOVE MSG ID\n         WTO   MF=(E,MSG99)            ISSUE MSG\n         MVC   RSTRING,BLANKS          CLEAR PREVIOUS STRING\n         B     FIND999\nFIND007  DS    0H\n         ST    R6,RLEN                 SAVE LENGTH\n         L     R12,SAVEGETM            START ADDRESS\n         ST    R12,RFINDAD             SAVE ADDRESS\n         B     RFIND003                BRANCH\nRFIND    DS    0H\n         CLC   RSTRING,BLANKS          NO PREVIOUS STRING SPECIFIED?\n         BNE   RFIND001                NO: CONTINUE\n         MVC   MSG99+4(60),MSG22       MOVE MSG ID\n         WTO   MF=(E,MSG99)            ISSUE MSG\n         B     FIND999\nRFIND001 L     R12,RFINDAD             START WITH LAST FOUND LINE\nRFIND003 CLC   0(2,R12),=X'FFFF'       END OF WORKSPACE ?\n         BE    RFINDERR                ERROR.\n         LR    R3,R12                  COPY R12\n         L     R6,RLEN                 LENGTH OF STRING\n         BCTR  R6,0                    -/- FOR EX.\n         LA    R4,80                   MAX BCT VALUE\n         SR    R4,R6                   MINUS LENGTH OF STRING\n         LA    R4,1(,R4)               + 1\nRFIND005 DS    0H\n         EX    R6,RFINDCMP             COMPARE WITH STRING\n         BE    RFIND019                YES: FOUND, DISPLAY LINE\n         LA    R3,1(,R3)               NEXT BYTE IN LINE\n         BCT   R4,RFIND005             LOOP UNTIL ALL DONE OR FOUND\n         LA    R12,80(,R12)            Next record\n         B     RFIND003                BRANCH\nRFIND019 DS    0H\n         MVC   MSG99+9(55),0(R12)      MOVE CONTENTS OF FOUND LINE\n         MVI   MSG99+8,C' '\n         LR    R5,R12                  CURRENT ADDRESS\n         XR    R4,R4                   CLEAR EVEN REG.\n         S     R5,SAVEGETM             MINUS START ADDRESS\n         D     R4,=F'80'               DIVIDE BY RECORD LENGTH\n         LA    R5,1(,R5)               PLUS ONE\n         CVD   R5,DWB                  MAKE IT PACKED\n         UNPK  MSG99+4(4),DWB          MAKE IT ZONED\n         OI    MSG99+7,X'F0'           AND CLEAR SIGN\n         WTO   MF=(E,MSG99)            ISSUE MSG WITH FOUND LINE\n         MVC   MSG99+9(25),55(R12)     2ND PART OF LINE\n         MVC   MSG99+34(30),BLANKS\n         WTO   MF=(E,MSG99)            ISSUE MSG WITH 2ND PART OF LINE\n         LA    R12,80(,R12)            POINT AFTER FOUND LINE\n         ST    R12,RFINDAD             SAVE ITS ADDRESS\n         B     FIND999                 END OF ROUTINE\nRFINDERR MVC   MSG99+4(60),MSG12       TEXT NOT FOUND\n         WTO   MF=(E,MSG99)            TELL OPERATOR\nFIND999  DS    0H\n         LM    R14,R12,SAVER           RESTORE REGS\n         BR    R14                     RETURN TO CALLER\nRFINDAD  DC    F'0'\nRLEN     DC    F'0'\nRFINDCMP CLC   0(0,R3),RSTRING         *** EXECUTE ONLY ***\nRSTRING  DC    CL56' '\n         TITLE 'S U B M I T  ROUTINE'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Routine to submit the job in the specified member in the     *\n*        JOB execution queue.                                         *\n*        An internal reader will be allocated to submit the job.      *\n*        If the allocation fails, a S RDRTST command will be issued   *\n*        to start a reader procedure to submit the job.            -  *\n*                                                                     *\n*------------------------------------------ (C)-2019 SKYBIRD SYSTEMS -*\n         SPACE 2\nSUB      DS    0H                      TO GET BOUNDARY.\n         STM   R14,R12,SAVER           SAVE THE REGISTERS\n         TM    SW02,$OPER              SUBMIT via SUB=MSTR?\n         BNO   SUB000                  No: branch\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG24       Is not possible is subsystem\n         WTO   MF=(E,(1))              INFORM OPERATOR\n         B     SUBEND2\nSUB000   DS    0H\n         LA    R1,BLKPTR               LOAD ALLOCATION CONTROL BLK\n         SVC   99                      ****** ALLOCATE  *********\n         LTR   R15,R15                 TEST IF ALLOC OK ?\n         BNZ   SUB009                  ISSUE MSG AND LINK TO SYP120\n         MVC   INTRDR+DCBDDNAM-IHADCB(8),ALCDDNAM\n*                                      MOVE GENERATED DD-NAME\n         OPEN  (INTRDR,(OUTPUT))       ALLOCATION O.K.\n         L     R12,SAVEGETM            LOAD WORKSPACE\n*        ** FILL ALLOCATED INTRDR DATASET ****\nSUB001   DS    0H\n         CLC   0(2,R12),=X'FFFF'       END OF DATA IN WORKSPACE ?\n         BE    SUB003                  YES: CLOSE THE INTRDR\n         PUT   INTRDR,(12)             WRITE\n         LA    R12,80(,R12)            Next record in workspace\n         B     SUB001                  Return\n*        EOD WORKSPACE ****  JOB SUBMITTED M.V.S. *****\nSUB003   DS    0H\n         CLOSE INTRDR                  FREE =CLOSE\n         FREEPOOL INTRDR               Free the buffers\n         B     SUBEND                  GO TO END OF THIS ROUTINE\nSUB009   DS    0H                      ALLOCATION FAILED.\n         SYCONVHX IN=ERROR,OUT=ERRORBC,L=2\n*        CONVERT DYN ALLOC ERRORCODE TO EBCDIC\n         SYCONVHX IN=INFO,OUT=INFOBC,L=2\n*        CONVERT DYN ALLOC INFOCODE TO EBCDIC   *****\n         LA    R1,MSG99                PREPARE WTO\n         MVC   MSG99+4(60),MSG15       PREPARE WTO\n         WTO   MF=(E,(1))              GIVE MSG EDT019E\n         SPACE\n         MVI   PARMRST,C' '            CLEAR\n         MVC   PARMRST+1(L'PARMRST-1),PARMRST  FIELD\n         MVC   CMDL(2),=AL2(PARMRST-PARM10) initial command length\nSUB010   DS    0H                      Start the rdr if alloc fails\n         LA    R2,PARMRST              LOAD REST OF PARM\n         LH    R3,CMDL                 LOAD LENGTH\n         LA    R4,JFCB                 LOAD ADDRESS DSNAME\n         LA    R5,44                   MAX. LENGTH OF DSNAME\nSUB010A  DS    0H                      MOVE DSNAME IN PARM\n         CLI   0(R4),C' '              DSNAME PASSED ?\n         BE    SUB010B                 YES: END OF LOOP\n         MVC   0(1,R2),0(R4)           MOVE POSITION\n         LA    R2,1(,R2)               NEXT POSITION OUTPUT\n         LA    R3,1(,R3)               Count in length\n         LA    R4,1(,R4)               NEXT POSITION OUTPUT\n         BCT   5,SUB010A\nSUB010B  DS    0H                      DSNAME= IN PARM\n         MVC   0(4,R2),=C''',M='       MOVE KEYWORD FOR MEMBER\n         MVC   4(8,R2),JFCB+44         MOVE MEMBERNAME IN START CMD\n         LA    R3,16(,R3)              COUNT LENGTH\n         STH   R3,CMDL                 NEW LENGTH\n*\n*        Length is CMDL + actual length of DSNAME\n*        + string ',M= + 8 bytes member name + 4 bytes prefix\n*\n         MODESET KEY=ZERO              Set key to zero for SVC 34\n*\n*        Issue SVC 34 to invoke the 'S RDRTST,D=...,M=...' command\n*\n         LA    R1,CMDL                 Parameter list\n         XR    R0,R0\n         SVC   34                      ISSUE THE COMMAND *\n         MODESET KEY=NZERO             RESTORE PROGRAM STATUS\nSUBEND   DS    0H                      END OF SUBMIT ROUTINE\n         L     R12,SAVEGETM            BEGIN OF GETM AREA\n         LA    R12,2(,R12)\n         LA    R2,8                    MAX LENGTH OF JOBNAME\n         MVC   JOBNAME(8),BLANKS       CLEAR JOBNAME\n         LA    R3,JOBNAME\nSUB012   DS    0H                      BUILD 'JOB SUBMITTED' MSG\n         CLI   0(R12),C' '             END OF JOBNAME ?\n         BE    SUB014\n         MVC   0(1,R3),0(R12)          MOVE CHAR BY CHAR\n         LA    R3,1(,R3)               Next position\n         LA    R12,1(,R12)\n         BCT   R2,SUB012               BRANCH\n*             J O B          S U B M I T T E D ****\nSUB014   DS    0H\n         LA    R1,MSG99\n         MVC   MSG99+4(60),MSG17       EDT021I JOB SUBMITTED\n         WTO   MF=(E,(1))              INFORM OPERATOR\nSUBEND2  DS    0H\n         NI    SW01,X'FF'-$WKSUBM      SWITCH OFF\n         LM    R14,R12,SAVER           RESTORE THE REGISTERS\n         BR    R14                     RETURN\n         TITLE 'S A V E    R O U T I N E'\nSAVE     DS    0H\n         STM   R14,R12,SAVER           SAVE REGISTERS\n         L     R12,SAVEGETM\n         NI    SW01,X'FF'-$CHANGED     CHANGE SWITH OFF\n         RDJFCB OUTDCB\nSAV      DS    0H\n         MVC   REPLY7(8),BLANKS\n         XC    ECB1,ECB1               CLEAR ECB AREA\n         MVC   HHH-14(8),PARM33M       MEMBER NAME IN WTOR\n         WTOR  'EDT026A Enter new name to save your workarea or reply 'X\n               'U'' to save in member xxxxxxxx',                       X\n               REPLY7,8,ECB1,ROUTCDE=(2,3)\nHHH      WAIT  ECB=ECB1\n         CLC   REPLY7(2),=C'U '\n         BE    SAVE3                   SAVE UNDER NAME OF EDT009A\n         CLI   REPLY7,C'$'             NATIONAL CHAR ALSO ALLOWED\n         BE    SAV001                  BRANCH IF YES\n         CLI   REPLY7,C'@'             ALSO NATIONAL CHARACTER\n         BE    SAV001                  BRANCH\n         CLI   REPLY7,C'#'             ALSO NATIONAL CHARACTER\n         BE    SAV001                  BRANCH\n         TM    REPLY7,X'C0'\n         BNO   SAV\n         TM    REPLY7,X'F0'   FIRST CHAR MUST BE ALPHABETIC\n         BO    SAV\nSAV001   DS    0H\n         MVC   JFCB+44(8),REPLY7       NEWNAME\n         B     SAVE5\nSAVE3    DS    0H\n         MVC   JFCB+44(8),PARM33M\nSAVE5    DS    0H\n         OI    JFCB+86,X'01'\n         OPEN  (OUTDCB,(OUTPUT)),TYPE=J\nSAVE6    DS    0H\n         CLC   0(2,R12),=X'FFFF'\n         BE    SAVE7\n         MVC   CARD(80),0(R12)\n         PUT   OUTDCB,CARD\n         LA    R12,80(,R12)\n         B     SAVE6\nSAVE7    DS    0H\n         L     R12,SAVEGETM\n         CLOSE (OUTDCB)\n         FREEPOOL OUTDCB\n         MVC   MSG20M,JFCB+44          MOVE MEMBER NAME IN MSG\n         MVC   MSG99+4(60),MSG20       MOVE IN MSG\n         WTO   MF=(E,MSG99)\n         LM    R14,R12,SAVER           RESTORE REGISTERS\n         BR    R14                     RETURN\n         TITLE 'REGULATE LINENUMBERS *** FREE FORMAT ***'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        SCAN THE LINENUMBERS, WHICH ARE OPERANDS IN THE SUBCOMMANDS  *\n*        THE LINENUMBERS ARE MAX FOUR POSITIONS LONG.                 *\n*        THE OFFSET IN REPLY4 (REPLY FOR SUBCOMMAND) IS PLACED        *\n*        IN GENERAL REGISTER 1.                                       *\n*        WHEN ONE OF THE LINE NUMBERS IS IN ERROR RC 4 IS GIVEN       *\n*        IN REGISTER 15 AND THE MSG EDT006E IS GIVEN.                 *\n*        WHEN THE OPERAND IS ONLY 1 LINENUMBER, LINENUMBER 2 IS THE   *\n*        SAME AS LINENUMBER 1 (THESE ARE TWO BINARY FULLWORDS TO BE   *\n*        GIVEN BACK).                                                 *\n*                                                                     *\n*------------------------------------------ (C)-2019-Skybird Systems -*\n         SPACE 2\nLINENUM  DS    0H                      Scan line numbers\n         STM   R14,R12,SAVELIN         SAVE REGISTERS\n         XC    LINERET,LINERET         Clear return code\n         LR    R2,R1                   SAVE REGISTER 1\n         ST    R2,OFFSRPL4             SAVE THE OFFSET\n         XC    LINENR1,LINENR1         CLEAR FIELDS\n         XC    LINENR2,LINENR2\n         CLI   0(R2),C' '              NO LINENRS PROVIDED ?\n         BE    LINEEND                 END OF ROUTINE IF YES\n         LA    R4,4                    MAXIMUM LENGTH OF LINENUM\n         XR    R5,R5                   CLEAR GR 5 FOR COUNT POS.\nLINE001  DS    0H                      BCT LOOP\n         CLI   0(R2),C' '              END OF LINENBR\n         BE    LINE005                 ONLY 1 LINENBR PROVIDED\n         CLI   0(R2),C'-'              LINENBR RANGE ?\n         BE    LINE007                 2ND LINENBR TOO\n         CLI   0(R2),C','              COMMA INSTEAD OF HYPHEN ?\n         BE    LINE007                 2ND LINENBR TOO.\n         CLI   0(R2),C'0'              NUMERIC TEST\n         BL    LINEERR\n         CLI   0(R2),C'9'              NUMERIC TEST\n         BH    LINEERR                 ERROR ROUTINE\n         LA    R5,1(,R5)               COUNT POSITIONS\n         LA    R2,1(,R2)               NEXT POSITION\n         BCT   R4,LINE001\n         CLI   0(R2),C' '              ONLY 1 LINENBR\n         BNE   LINE007                 BRANCH IF NOT\nLINE005  DS    0H\n         BAL   R6,LINEBIN              MAKE LINENBR BINARY\n         ST    R7,LINENR1              AND STORE THE RESULT\n         ST    R7,LINENR2              LINENR2 IS THE SAME AS LINENR1\n         LA    R2,1(,R2)\n         ST    R2,OFFSET               FOR 'C' SUBCOMMAND\n         B     LINEEND\nLINE007  DS    0H                      TWO LINENBRS\n         TM    SW01,SW7                'C' SUBCOMMAND ?\n         BO    LINE005                 THIS SUBCOMMAND HAS NEVER A\n*                                      )SECOND LINENUMBER\n         LA    R2,1(,R2)\n         ST    R2,OFFSET               FOR 'C' SUBCOMMAND\n         BAL   R6,LINEBIN              MAKE BINARY\n         ST    R7,LINENR1              AND STORE THE RESULT\n         ST    R2,OFFSRPL4             SAVE THE OFFSET\n         LA    R4,4                    FOR BCT INSTRUCTION\n         XR    R5,R5                   CLEAR COUNT REGISTER\nLINE009  DS    0H\n         CLI   0(R2),C' '              END OF LINENBR 2\n         BE    LINE011                 BRANCH IF YES\n         CLI   0(R2),C'0'              NUMERIC TEST\n         BL    LINEERR                 ERROR\n         CLI   0(R2),C'9'              NUMERIC TEST\n         BH    LINEERR                 ERROR TOO\n         LA    R5,1(,R5)               COUNT POSITION\n         LA    R2,1(,R2)               NEXT POSITION\n         BCT   R4,LINE009\nLINE011  DS    0H\n         BAL   R6,LINEBIN              MAKE BINARY\n         ST    R7,LINENR2              STORE THE RESULT\n         CLC   LINENR2,LINENR1         CHECK VALIDITY OF RANGE\n         BNL   LINEEND                 IF LOW INVALID RANGE\nLINEERR  DS    0H                      LINENBR ERROR\n         MVC   MSG99+4(60),MSG02       MSG EDT006E\n         WTO   MF=(E,MSG99)            INFORM OPERATOR\n         LA    R2,4\n         ST    R2,LINERET              RETURNCODE\nLINEEND  DS    0H\n         LM    R14,R12,SAVELIN         RESTORE REGISTERS\n         L     R15,LINERET             RETURNCODE\n         BR    R14                     BACK TO CALLER\n*\nLINEBIN  DS    0H                      MAKE LINENBRS BINARY\n         L     R3,OFFSRPL4             LOAD STARTADDRESS OF LINENBR\n         LTR   R5,R5                   LENGTH ZERO ?\n         BZ    LINEERR                 NO LINENBR FOUND\n         BCTR  R5,0                    FOR EX INSTRUCION\n         EX    R5,LINEPK               PACK THE LINE\n         CVB   R7,DWB                  MAKE BINARY\n         LTR   R7,R7                   CHECK FOR ZERO\n         BZ    LINEERR                 ERROR IF ZERO\n         C     R7,=F'3999'             MAX NUMBER OF LINES ?\n         BH    LINEERR                 ERROR\n         BR    R6                      RETURN\nLINEPK   PACK  DWB(8),0(0,R3)          **** EXECUTE ONLY ****\n         TITLE 'ESTAE EXIT ROUTINE'\nSTAEEXIT DS    0H\n         DROP\n         USING *,R15                   GET TEMPORARY ADDRESSABILITY\n         USING SDWA,R1                 GET ADDRESSABILITY OVER SDWA\n         LM    R9,R13,RECOVER\n         DROP  R15\n         USING SAVEA,R13,R11,R10,R9    RESTORE ADDRESSABILITY   @911224\n         XR    R2,R2                   CLEAR REGISTER 2\n         ICM   R2,7,SDWACMPC           INSERT COMPLETION CODE\n         SRL   R2,12                   SHIFT OUT USER COMPLETION CODE\n         STH   R2,SYSTEMCC             SAVE SYSTEM COMPLETION CODE\n         CLI   RETRYCNT,5              MORE THAN 5 RETRIES?     @911218\n         BNH   SETRP4                  NO: RETRY                @911218\n         SETRP RC=0,DUMP=YES           ELSE PERCOLATE           @911218\n         BR    R14                     BRANCH TO RTM            @911218\n         DROP  R1                      KILL ADDRESSABILITY\nSETRP4   DS    0H                                               @911218\n         SETRP RC=4,RETADDR=RET,RETREGS=NO,FRESDWA=YES,DUMP=NO\n         BR    R14\nSYSTEMCC DS    H\n         TITLE 'ESTAE RETRY ROUTINE'\nRET      DS    0H\n         DROP\n         USING *,R15\n         LM    R9,R13,RECOVER          RESTORE REGISTERS\n         L     R2,REG2                 SAVE COUNT REG\n         DROP  R15\n         USING SAVEA,R13,R11,R10,R9    RESTORE ADDRESSABILITY   @911224\n         XR    R1,R1                   CLEAR REGISTER           @911218\n         IC    R1,RETRYCNT             # ABEND RETRIES          @911218\n         LA    R1,1(,R1)               Increase                 @911218\n         STC   R1,RETRYCNT             AND SAVE                 @911218\n         SYCONVHX IN=SYSTEMCC,OUT=SAVECC,L=2\n         MVC   MSG23+13(3),SAVECC+1    MOVE COMPLETION CODE\n         MVC   MSG99+4(60),MSG23       MSG EDT027D (ABENDXXX DETECTED)\n         WTO   MF=(E,MSG99)\n         CLOSE OUTDCB                  CLOSE\n         TM    SW02,$OPEN              DCB OPENED ?             @911218\n         BNO   RET2                    NO: BYPASS FREEPOOL      @911218\n         FREEPOOL OUTDCB\n         NI    SW02,255-$OPEN          OUTDCB CLOSED NOW        @911218\nRET2     DS    0H                                               @911218\n         MVC   OUTDCB(DCBLEN),COPYDCB  REFRESH  DCB\n         CLOSE PDSDCB                        ALL\n         CLOSE PRTDCB                            POSSIBLE DCBS\n         NI    PARMSW,255-$RENDS       Reset rename flag        @930729\n         TM    SW02,$SUBMODE           SUBCOMMAND MODE ?\n         BO    CHANGE                  YES: BRANCH TO CHANGE ROUTINE\n         B     TSTVSST                 ELSE ASK FOR COMMAND\nREG2     DC    F'0'\nRECOVER  DS    5F\nSAVECC   DS    CL4\n         TITLE 'A L L O C A T I O N     CONTROL BLOCKS'\n         SPACE 2\n         DS    0F\nBLKPTR   DC    AL1(128),AL3(REQBLK)\n*\nREQBLK   DC    AL1(20)              LENGTH OF REQBLK\nVERB     DC    X'01'                DSNAME ALLOC\nFLAGS1   DC    X'2000'              FLGS\nERROR    DC    H'0'                 ERRORCODE\nINFO     DC    H'0'                 INFOCODE\n         DC    A(SYSOUT)            SYSOUT ALLOC\nRESERVED DC    F'0'\nFLAGS2   DC    F'0'                 FLGS\n*\nSYSOUT   DS    0F                   BOUNDARY\n         DC    A(SYSKEY)            SYSOUT-SPEC\n         DC    A(UNALLKEY)          FREE = CLOSE\nSYSINT   DC    A(INTKEY)            INTERNAL READER\n         DC    AL1(128),AL3(DDNAMKEY)\n*\n         DS    0H\nSYSKEY   DC    X'0018'              SYSOUT SPECIF.\nSYSNBR   DC    AL2(1)\nSYSLEN   DC    AL2(1)               LENGTH\nSYSCLS   DC    C'C'                 SYSOUT-CLASS\n*\nCLSTAB   DC    256X'FF'                TRANSLATE TABLE FOR SYSOUTCLS\n         ORG   CLSTAB+C'A'\n         DC    9X'00'\n         ORG   CLSTAB+C'J'\n         DC    9X'00'\n         ORG   CLSTAB+C'S'\n         DC    8X'00'\n         ORG   CLSTAB+C'0'\n         DC    10X'00'\n         ORG\n*\n         DS    0H\nUNALLKEY DC    X'001C'              UNALLOCATE AT CLOSE\nUNALLNBR DC    AL2(0)\nUNALLLEN DS    0H\nUNALLPRM DS    0H\n*\nINTKEY   DC    X'0019'\nINTNBR   DC    AL2(1)\nINTLEN   DC    AL2(6)\nINTPARM  DC    C'INTRDR'\n*\n         DS    0H\nDDNAMKEY DC    X'0055'             DDNAME TU\n         DC    AL2(1)\nDDNAMLEN DC    AL2(8)              LENGTH\nALCDDNAM DC    CL8' '              DDNAME FROM SVC 99\n*\nLINECNT  DC    PL2'0'                  FOR PRINT ROUTINE\nPAGECNT  DC    PL2'0'                  FOR PRINT ROUTINE\n         DC    C' '\nLINE     DS    CL121\nHEADLINE DC    CL53'1(C) TSTVS SKYBIRD SYSTEMS: PRINT OF MODIFIED MEMBEX\n               R '\nHEADMEM  DS    CL8\n         DC    CL40' '\n         DC    C'PAGE '\nHEADCNT  DS    CL3\n         DC    CL12' '\n         TITLE 'DATA CONTROL BLOCKS'\n         PRINT  NOGEN\nOUTDCB   DCB   LRECL=80,MACRF=(GL,PM),DDNAME=OUTP01,EXLST=EXLST,       X\n               DSORG=PS,RECFM=FB,EODAD=LOAD9\nDCBLEN   EQU   *-OUTDCB\nCOPYDCB  DCB   LRECL=80,MACRF=(GL,PM),DDNAME=OUTP01,EXLST=EXLST,       X\n               DSORG=PS,RECFM=FB,EODAD=LOAD9\nPDSDCB   DCB   DDNAME=INP01,MACRF=R,DSORG=PO,RECFM=F,BLKSIZE=256\nINTRDR   DCB   DDNAME=INTRD,MACRF=PM,LRECL=80,RECFM=F,                 X\n               BLKSIZE=80,DSORG=PS\nPRTDCB   DCB   DDNAME=INTRD,MACRF=PM,LRECL=121,RECFM=FBA,              X\n               BLKSIZE=1210,DSORG=PS\n         PRINT GEN\n         TITLE 'GENERAL EQUATES'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         TITLE 'VARIABLES, CONSTANTS AND CONTROL BLOCKS'\nECB1     DC    F'0'\nMSGID    DC    F'0'                    MSGID of start msg       @930729\nCARD     DS    0CL80                   OUTPUT-LINE\nREPLY    DC    CL72' '                 REPLY FOR JCLSTMNT\nREPLY2   DC    CL8'0'                  REPLY FOR CARDNUMBER\nBLANKS   DC    80CL1' '\nSAVEGETM DC    F'0'                    START ADDRESS WORKSPACE\nSAVELST  DC    F'0'                    SAVE FIELD FOR BLOCK UPDIPL\nDWB      DC    D'0'\nREPLY4   DC    CL60' '                 REPLY FOR LINE-NUMBER\nREPLY6   DC    CL3'   '                REPLY FOR CONTINUATION\nREPLY7   DS    CL8\nREPLY8   DC    CL4' '                  REPLY FOR EDT025A\n*\nADDRTIOT DS    A                       FOR PASSWORD CONTROL\n*\nSAVELIN  DC    18F'0'                  SAVEAREA FOR LINENUM\nOFFSRPL4 DS    F\nOFFSET   DS    F                       OFFSET IN REPLY4 FOR 'C' SUBC.\nLINENR1  DS    F\nLINENR2  DS    F\nLINERET  DS    F                       RETURNCODE FOR LINENUM ROUT\n*\nBLDLLIST DS    0H                      LIST ENTRY FOR BLDL MACRO\nN1       DC    AL2(1)                  NUMBER OF ENTRIES\nL1       DC    AL2(14)                 LENGTH OF DIR. ENTRY\nBLDLM    DS    CL8\n         DS    CL6\n*\nPARM     EQU   *\nPARMSW   DC    X'00'\nALLC     EQU   X'80'                   SET BY TSTVSALL\nNBRS     EQU   X'20'                   SET BY TSTVSCOM\nUPDT     EQU   X'10'                   SET BY TSTVSCOM\n$UNALL   EQU   X'08'                   MARK UNALLOC ONLY BY TSTVSALL\n$RENAME  EQU   X'04'                   IF ON: RENAME MEMBER     @TSTV02\n$RENDS   EQU   X'02'                   IF ON: RENAME A dataset  @930729\nPARMROUT DC    X'6000'                 DEFAULT ROUTCDE=(2,3)\n*\nPARM33   DS    0CL25                   Commarea passed by 'com' @930726\nPARM33M  DS    CL8                     MEMBERNAME OF TSTVSCOM\nPARM33R  DS    CL8                     Newname from tstvscom    @930726\nPARM33KY DS    CL8                     Key 'PDSLIST,key'        @930726\nPARM33KL DS    C                       Actual key length        @930726\n*\nRETRYCNT DC    XL1'00'                 NUMBER OF ABEND RETRIES\nSW01     DC    XL1'00'\n$EOJ     EQU   128          1 = EOJ SUBCOMMAND\nSW7      EQU   64       INDICATE 'C' SUBCOMMAND FOR LINENUM ROUTINE\n$WKSUBM  EQU   32                      INDICATE WKAREA SUBMIT\n$CHANGED EQU   16           1 IS MODIFCATIONS MADE AND NOT YET SAVED\n$VFY     EQU   8            1 = V ON,   0 = V OFF\n$LINEDEL EQU   4            IF $LINEDEL=1 LINE DELETION REQUESTED\nSW2      EQU   2            IF SW2=1 MEMBERNAME PRESENT\n$XLST    EQU   1            IF ON DO AN EXTENDED LIST ELSE A NORMAL\nSW02     DC    XL1'00'\n$SUBMODE EQU   128          IF ON: SUBCOMMAND MODE ENTERED\n$OPER    EQU   64           IF ON: DO NOT ALLOW SUBMIT AND PRINT CMD\n*                                  BECAUSE TSTVS IS ATTACHED BY A\n*                                  PRIMARY SUBSYSTEM\n$OPEN    EQU   32           IF ON: OUTDCB OPENED               @911218\n$CHALL   EQU   16           IF ON: BUSY WITH 'C ALL' SUBCMD    @911218\n$NOMATCH EQU   8            IF ON: NOT ONLY 1 MATCH IN 'C ALL' @911218\nPACKFLD  DC    PL3'0'\nWTOCNT   DC    PL2'0'\nSAVER    DC    15F'0'\nMEMBAREA DC    256X'00'\n         DS    0F\nEXLST    DC    X'87',AL3(JFCB)\nJFCB     DS    CL176\nHELP1    DS    CL80\nHELP2    DS    CL80\nCMDL     DS    H                       Length of command including pfx\n         DC    H'0'                    Reserved\nPARM10   DC    C'START RDRTST,D='''\nPARMRST  DC    CL60' '\n         DS    0H\n         TITLE 'M E S S A G E    B L O C K'\nMSG02    DC    CL60'EDT006E Invalid line-number, reply again'\nMSG03    DC    C'EDT007E Parameter error, defaults taken (ROUTCDE=2,3) X\n                     '\nMSG04    DC    CL60'EDT008E seq. number not numeric, reply again'\nMSG05    DC    C'EDT010E Member-name to be updated not present. ReenterX\n                     '\nMSG06    DC    CL15'EDT011I Member '\nWTOMEM   DC    CL8' '\n         DC    CL1' '\nNOT      DC    CL3'   '\nRENDEL   DC    CL8'        '\nRTRNTEXT DC    CL25' '\nMSG07    DC    C'EDT012E Maximum lines in member, insertion impossible.X\n                     '\nMSG08    DC    CL60'EDT013I Dataset has been re-numbered'\nMSG09    DC    C'EDT014I SUBCOMMANDS                                   X\n                     '\nMSG10    DC    C'        XXX;       replace the line, EDT003A follows. X\n                     '\nMSG11    DC    C'        I XXX;     insert a line , EDT003A follows.   X\n                     '\nMSG11A   DC    C'        D XXX OR D XXX,YYY delete a line or a range ofX\n                Lines'\nMSG11B   DC    C'        R XXX      repeat the specified line after curX\n               rent  '\nMSG11C   DC    C'        L(IST),L(IST) x or L(IST) x,y List entire or lX\n               inenrs'\nMSG11D   DC    C'        XLST       same as list, but 80 positions dispX\n               layed '\nMSG11E   DC    C'        RENUM;     renumber cols 73-80 of the member  X\n                     '\nMSG11F   DC    C'        UNNUM;     remove numbers of cols 73-80       X\n                     '\nMSG11G   DC    C'        V ON/OFF;  list or not list line after \"C\" comX\n               mand  '\nMSG11H   DC    C'        ADD;       add lines at the end of the member X\n                     '\nMSG11I   DC    C'        SUBMIT;    submit the contents of the workareaX\n                     '\nMSG11J   DC    C'        C XXX,string1$string2$ modify character stringX\n               s     '\nMSG11K   DC    C'        F $string$ find string or \"F\" repeat find of sX\n               tring '\nMSG11L   DC    C'        PRINT x;   print spinoff sysout of workarea   X\n                     '\nMSG11M   DC    C'        SAVE;      save workarea in the member        X\n                     '\nMSG11N   DC    C'        END;       end of subcommands and ask for nextX\n                cmd. '\nMSG11O   DC    C'        EOJ;       terminate TSTVS from subcommand modX\n               e.    '\nMSG12    DC    CL60'EDT015E string(s) not found'\nMSG13    DC    CL8'EDT016I '\nMSGNAME  DS    CL52\n         DS    0F\nMSG14    DC    C'EDT018I function terminated by operator               X\n                     '\nMSG15    DC    CL30'EDT019E Dyn. ALLOC. errorcode '\nERRORBC  DS    CL4\n         DC    CL10' Infocode '\nINFOBC   DS    CL4\n         DC    12C' '\nMSG17    DC    CL12'EDT021I job '\nJOBNAME  DS    CL8\n         DC    CL10' submitted'\n         DC    30C' '\nMSG18    DC    C'EDT022I  verification turned '   29\nONOFF    DS    CL3                                 3\n         DC    CL28' '\nMSG19    DC    C'EDT023I '             MSG AFTER PRINT COMMAND\nMSG19#L  DS    CL4                     # OF LINES PRINTED\n         DC    C' lines printed in SYSOUT='\nMSG19CLS DS    C\n         DC    CL22' '\nMSG20    DC    CL15'EDT024I member '   MEMBER SUCCESSFULLY SAVED\nMSG20M   DC    CL8' '                  SAVED MEMBER\n         DC    CL19' successfully saved'\n         DC    CL18' '\nMSG21    DC    CL60'EDT025E invalid character string'\nMSG22    DC    CL60'EDT026E invalid repeat find, no string found'\nMSG23    DC    CL60'EDT027D ABENDXXX detected, retry successful' 13\nMSG24    DC    CL60'EDT028E allocation subsystem dataset not allowed'\nMSG99    WTO   '                                                       X\n                    ',ROUTCDE=(2,3),MF=L\nZZZ      EQU   *\n*\n         TITLE 'L I T E R A L        P O O L'\n         LTORG\n         TITLE 'DSECTS'\n         PRINT NOGEN\n         DCBD  DSORG=PS,DEVD=DA\n         IHASDWA\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSTVSALL": {"ttr": 2307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"P\\x02\\x00\\x00\\x01\\x03'\\x9f\\x01\\x19$O!3\\x02)\\x02)\\x00\\x00\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@\"", "ispf": {"version": "80.02", "flags": 0, "createdate": "2003-10-06T00:00:00", "modifydate": "2019-09-01T21:33:00", "lines": 553, "newlines": 553, "modlines": 0, "user": "RPRINS"}, "text": "TSTVSALL TITLE 'DYNAMIC ALLOCATION ROUTINE FOR TSTVS'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Module:        TSTVSALL.                                     *\n*        Author:        Rob Prins, ING-Bank Amsterdam                 *\n*                                                                     *\n*        Function:      Allocate the library used in TSTVS            *\n*                       under ddnames INP01 and OUTP01.               *\n*                       if flag \"$RENDS' is on: ask for an old DSNAME *\n*                       and a new DSNAME and rename the specified     *\n*                       dataset                                       *\n*                                                                     *\n*                                                                     *\n*        PARAMETER:     1 BYTE ALLOCATION SWITCH:                     *\n*                       AND 2 BYTES ROUTING CODE PASSED BY            *\n*                       THE MAIN ROUTINE TSTVS.                       *\n*                                                                     *\n*                                                                     *\n*        Returncodes:   0000 - OK                                     *\n*                       0004 - Function canceled                      *\n*                       0008 - RENAME errors occurred                 *\n*                                                                     *\n*        Modifications: July 29,1993 By Rpr: Support added for the    *\n*                       RENAME command. Both catalogued and not       *\n*                       catalogued datasets can be renamed.           *\n*                                                                     *\n*                       April 06,1995 By Rpr: DYNAMIC=YES added       *\n*                       to UCBLOOK macro                        @950406\n*                       Oct 27,1997   By Rpr: RANGE=ALL   added       *\n*                       to UCBLOOK macro                        @971027\n*                       August 16,2002 By Rpr: Include the MVS38J     *\n*                       version of UCBLOOK (running throught the UCB  *\n*                       lookup table). Use SYSPARM(MVS) to include    *\n*                       This MVS function.                      @020814\n*                                                                     *\n*-------------------------------------- (C)-2002 SKYBIRD SYSTEMS -----*\n         SPACE 2\nTSTVSALL CSECT\n         SAVE  (14,12),,*              SAVE REGISTERS.\n         LR    R10,R15                 BASE REGISTER\n         USING TSTVSALL,R10            GET ADDRESSABILITY\n         LR    R2,R1\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)              FORWARD POINTER\n         ST    R13,4(,R1)              BACKWARD POINTER\n         LR    R13,R1\n         L     R11,0(,R2)              OBTAIN PARM FROM MAIN ROUT\n         USING PARMAREA,R11            GET ADDRESSABILITY OF THE PARM\n         MVI   SW,0                    Reset switches           @930729\n         XR    R7,R7\n         ICM   R7,3,ROUTCDE            OBTAIN ROUTING CODE MESSAGES\n         STH   R7,DSNWAIT-4            STORE IN WTORS\n         STH   R7,VOLWAIT-4\n         STH   R7,NEWNWAIT-4                                    @930729\n         STH   R7,MSG99E-2\n         TM    ALLOCSW,$UNALL          UNALLOCATE ONLY ?\n         BNZ   ALLOC00                 YES: DO NOT ASK NEW DSNAME\nASKDSN   EQU   *\n         NI    SW,255-$NCTLGD          Reset flag               @930729\n         XC    ECB,ECB                 CLEAR ECB AREA\n         MVC   DALDSN(44),BLANKS       CLEAR REPLY AREA\n         WTOR  'EDT100A Enter dataset name or ''CANCEL''',             *\n               DALDSN,44,ECB,ROUTCDE=(2,3)\nDSNWAIT  WAIT  ECB=ECB                 WAIT FOR EVENT\n         CLI   DALDSN,C' '             NOTHING REPLIED ?\n         BE    ASKDSN                  ASK AGAIN\n         CLC   =C'CANCEL',DALDSN       Function canceled ?      @930729\n         BNE   ASKVOL                  No: continue             @930729\n         MVC   MSG99+4(60),MSG05       move msg EDT198I         @930729\n         WTO   MF=(E,MSG99)            Function canceled        @930729\n         LA    R15,4                   Load return code         @930729\n         B     RETURN                  and return               @930729\nASKVOL   EQU   *                       ASK VOLUME\n         XC    ECB,ECB                 CLEAR EVENT CONTROL BLOCK\n         MVC   DAVOLSER,BLANKS         CLEAR REPLY AREA\n         WTOR  'EDT101A Enter volume serial or ''U''',DAVOLSER,6,ECB,  X\n               ROUTCDE=(2,3)\nVOLWAIT  WAIT  ECB=ECB                 WAIT FOR EVENT\n         CLI   DAVOLSER,C' '           NOTHING REPLIED ?\n         BE    ASKVOL                  ASK AGAIN.\n         CLC   DAVOLSER(2),=C'U '      U MEANS LOOK IN CATALOG\n         BE    DSNLOC                  BRANCH IF yes            @930729\n         OI    SW,$NCTLGD              Mark dataset not catlgd  @930729\n         B     FUNCTION                and branch               @930729\nDSNLOC   DS    0H                                               @930729\n         LOCATE LOC                    LOOK IN CATALOG\n         LTR   R15,R15                 CHECK COMPLETION.\n         BZ    VOL1                    Branch if alright\n         MVC   MSG99+4(60),MSG04       DATASET NOT IN CATALOG\n         WTO   MF=(E,MSG99)            INFORM OPER/PGMR\n         B     ASKDSN                  ASK FOR NEW ALLOCATION\nVOL1     DS    0H                      LOCATE IS OK\n         MVC   DAVOLSER,LOCVOL         MOVE VOLUME SERIAL\nFUNCTION DS    0H                      Check if func = ALLOCATE @930729\n*                                      or RENAME                @930729\n         MVC   CURDSN,DALDSN           Save dataset name        @930729\n         TM    ALLOCSW,$RENDS          Rename of a dataset ?    @930729\n         BNO   ALLOC00                 NO; Allocate.            @930729\n         OBTAIN OBTNLIST               Check if DS is on volume @930729\n         LTR   R15,R15                 TEST COMPLETION          @930729\n         BZ    ASKNEWN                 OK: branch               @930729\n         MVC   MSG99+4(60),MSG03       move msg EDT104E         @930729\n         WTO   MF=(E,MSG99)            DS COULD NOT BE OBTAINED @930729\n         B     ASKDSN                  Retry ...                @930729\nASKNEWN  DS    0H                      Ask for NEWNAME          @930729\n         XC    ECB,ECB                 CLEAR ECB AREA           @930729\n         MVC   NEWNAME(44),BLANKS      Clear reply area         @930729\n         WTOR  'EDT106A Enter NEW dataset name or ''CANCEL''',         X\n               NEWNAME,44,ECB,ROUTCDE=(2,3)                     @930729\nNEWNWAIT WAIT  ECB=ECB                 WAIT FOR EVENT           @930729\n         CLI   NEWNAME,C' '            NOTHING REPLIED ?        @930729\n         BE    ASKNEWN                 ASK AGAIN                @930729\n         CLC   =C'CANCEL',NEWNAME      Function canceled ?      @930729\n         BNE   NEWNC001                No: continue             @930729\n         MVC   MSG99+4(60),MSG05       move msg EDT198I         @930729\n         WTO   MF=(E,MSG99)            Function canceled        @930729\n         LA    R15,4                   Load return code         @930729\n         B     RETURN                  and return               @930729\nNEWNC001 DS    0H                                               @930729\n         TM    SW,$NCTLGD              Dataset catalogued ?     @930729\n         BO    NEWNC005                No: bypass LOCATE        @930729\n         LA    R3,VCB                  Volume list for RENAME   @930729\n         LA    R4,LOC#DEVT             Volume list from LOCATE  @930729\n         LH    R5,LOC#VOLS             # volumes                @930729\n         MVC   VOLCNT,LOC#VOLS         Copy # volumes           @930729\nNEWNC003 DS    0H                                               @930729\n         MVC   0(10,R3),0(R4)          Copy DEVT + volume       @930729\n         XC    10(2,R3),10(R3)         Clear rename status code @930729\n         LA    R3,12(,R3)              next entry output        @930729\n         LA    R4,12(,R4)              next entry input         @930729\n         BCT   R5,NEWNC003             loop until all done      @930729\n         MVC   DALDSN,NEWNAME          move to CAMLST-NAME      @930729\n         LOCATE LOC                    LOOK IN CATALOG          @930729\n         LTR   R15,R15                 DS found in catalog ?    @930729\n         BNZ   NEWNC005                No: Ok                   @930729\n         MVC   MSG99+4(60),MSG06       move msg EDT107E         @930729\n         WTO   MF=(E,MSG99)            Newname already catlgd   @930729\n         B     ASKNEWN                 and retry ...            @930729\nNEWNC005 DS    0H                                               @930729\n         MVC   DALDSN,NEWNAME          move to CAMLST-SEARCH    @930729\n         OBTAIN OBTNLIST               Check if DS is on volume @930729\n         LTR   R15,R15                 TEST COMPLETION          @930729\n         BNZ   NEWNC007                OK: already on volume    @930729\n         MVC   MSG99+4(60),MSG07       move msg EDT108E         @930729\n         WTO   MF=(E,MSG99)            Newname already on volume@930729\n         B     ASKNEWN                 and retry ...            @941019\nNEWNC007 DS    0H                                               @930729\n         BAL   R14,RENAME              Rename the dataset       @930729\n         B     RETURN\nALLOC00  EQU   *                       ALLOCATE\n         TM    ALLOCSW,ALLOC           ALREADY ALLOCATED PRIOR ?\n         BZ    ALLOC01                 GO ON IF NOT\n         BAL   R14,UNALLOC             UNALLOCATE FIRST\n         LTR   R15,R15                 UNALLOC OK ?\n         BNZ   ASKDSN                  TRY AGAIN IF NOT\nALLOC01  EQU   *                       ALLOCATE THE DATASET\n         TM    ALLOCSW,$UNALL          UNALLOCATE ONLY ?\n         BNZ   ALLOC99                 YES: BYPASS IT\n         BAL   R14,ALLOCPRC            ALLOCATE\n         LTR   R15,R15                 TEST COMPLETION.\n         BNZ   ASKDSN                  TRY AGAIN IF NOT\n         MVC   MSG99+4(60),MSG01       GIVE SUCCESSFUL ALLOC MSG\n         WTO   MF=(E,MSG99)            INFORM OPER/PROGRAMMER\nALLOC99  DS    0H                                               @930729\n         XR    R15,R15                 RC = 0000                @930729\nRETURN   L     R13,4(,R13)\n         RETURN (14,12),RC=(15)        GO TO MAIN MODULE\n         TITLE 'DYNAMIC ALLOCATION ROUTINE'\n*--------------------------------------------------------------------*\n*                                                                    *\n*        THIS ROUTINE DYNAMICALLY ALLOCATES DATASETS THROUGH         *\n*        THE DYNALLOC-MACRO <SVC 99>. TO DO THIS IT NEEDS THE DSNAME *\n*        AND THE VOLUME-ID. THE DATASET WILL BE ALLOCATED WITH THE   *\n*        DDNAME AS SPECIFIED IN 'DALDDN'. A RETURNCODE WILL BE       *\n*        AVAILABLE IN REG. 15 AND IN AN ERROR-SITUATION A SUITABLE   *\n*        MESSAGE WILL BE PRODUCED (REFER TO MVS JOB-MANAGEMENT).     *\n*                                                                    *\n*------------------------------------- (C)-1995 Skybird Systems -----*\n         SPACE 2\nALLOCPRC DS    0H\n         LA    R2,0\n         ST    R14,ALLOCSVE            SAVE RETURNREGISTER\nALLOC001 EQU   *\n         MVC   DALDDN(8),=C'INP01   '\n         LA    R1,DALPTR               REQUEST BLOCK\n         SVC   99                      ALLOCATE <SVC99>\n         LTR   R15,R15                 TEST RETURNCODE\n         BZ    ALLOC999                OK IF ZERO\nALLOC003 EQU   *\n         CVD   R15,DWB\n         UNPK  R15BC(4),DWB+4(4)       RETURNCODE\n         OI    R15BC+3,X'F0'\n         SYCONVHX IN=DAERROR,OUT=ERRORBC,L=2\n         SYCONVHX IN=DAINFO,OUT=INFOBC,L=2\n         MVC   ALLVERB,=C'ALLOCATION'  PREPARE MSG\n         MVC   MSG99+4(60),MSG02       ALLOCATION ERR MSG\n         WTO   MF=(E,MSG99)            INFORM OPER/PROGRAMMER\n         LA    R2,12                   RETURNCODE\n         B     ALLOCERR\nALLOC999 EQU   *\n         MVC   DALDDN(8),=C'OUTP01  '  FILL IN DDNAME\n         LA    R1,DALPTR               REQUEST BLOCK\n         SVC   99                      ALLOCATE\n         OBTAIN OBTNLIST\n         LTR   R15,R15                 TEST COMPLETION\n         BZ    ALLOCOK\n         MVC   MSG99+4(60),MSG03\n         WTO   MF=(E,MSG99)            DS COULD NOT BE OBTAINED\n         LA    R2,12                   TRY AGAIN\nALLOCOK  EQU   *\n         OI    ALLOCSW,ALLOC           MASK ALLOCATED\nALLOCERR L     R14,ALLOCSVE            LOAD RETURN ADDRESS\n         LR    R15,R2                  RETURNCODE\n         BR    R14                     RETURN\n         TITLE 'DYNAMIC UNALLOCATION ROUTINE'\n*--------------------------------------------------------------------*\n*                                                                    *\n*        THIS ROUTINE DYNAMICALLY UNALLOCATES A DATASET WITH THE     *\n*        DDNAME AS SPECIFIED IN 'DALDDNAM'. THIS FUNCTION WILL ALSO  *\n*        BE PERFORMED THROUGH THE DYNALLOC-MACRO AND A RETURNCODE    *\n*        WILL BE AVAILABLE IN REG. 15.                               *\n*                                                                    *\n*------------------------------------- (C)-1995 Skybird Systems -----*\n         SPACE 2\nUNALLOC  EQU   *\n         ST    R14,UNALLSVE            SAVE RETURNADDRESS\n         LA    R2,0                    INIT RETCD\nUNALL001 EQU   *\n         MVC   DALDDN(8),=C'INP01   '\n         LA    R1,DUNPTR               REQUEST BLOCK\n         SVC   99                      UNALLOCATE\n         LTR   R15,R15                 OK ?\n         BZ    UNALL999                BRANCH IF SO\nUNALL003 EQU   *\n         CVD   R15,DWB\n         UNPK  R15BC(4),DWB+4(4)       RETURNCODE\n         OI    R15BC+3,X'F0'\n         SYCONVHX IN=DUNERROR,OUT=ERRORBC,L=2\n         SYCONVHX IN=DUNINFO,OUT=INFOBC,L=2\n         MVC   ALLVERB(10),=C'UNALLOC.  '\n         MVC   MSG99+4(60),MSG02\n         WTO   MF=(E,MSG02)            GIVE ERROR MSG\n         LA    R2,4                   RETURNCODE\n         B     UNALLERR\nUNALL999 EQU   *\n         MVC   DALDDN(8),=C'OUTP01  '  FILL IN DDNAME\n         LA    R1,DUNPTR               LOAD REQUEST BLOCK\n         SVC   99                      ISSUE DYNALLOC SVC\n         NI    ALLOCSW,X'FF'-ALLOC     MASK UNALLOCATED\nUNALLERR L     R14,UNALLSVE            RESTORE R14\n         LR    R15,R2                  RETURNCODE\n         BR    R14                     RETURN\n         TITLE 'Rename dataset Routine'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Routine:    RENAME                                           *\n*        Function:   Rename datasets:                                 *\n*                    If the dataset is catalogued, the dataset will   *\n*                    be renamed, uncatalogued and the newname will    *\n*                    be catalogued (msg EDT101A replied with 'U')     *\n*                    If the dataset is not catalogued (msg EDT101A    *\n*                    has been replied with a volume serial number),   *\n*                    only the dataset in the VTOC will be renamed.    *\n*                                                                     *\n*------------------------------------- (C)-1995 Skybird Systems ------*\n         SPACE\nRENAME   DS    0H\n         USING TSTVSUCB,R4             GET ADDRESSABILITY OF UCB\n         ST    R14,SAVE14R             Save reg.14              @930729\n         TM    SW,$NCTLGD              Dataset catalogued ?     @930729\n         BNO   REN002                  Yes: rename directly     @930729\n         AIF   ('&SYSPARM' EQ 'MVS').SKIP1                      @020814\n*---------------------------------------------------------------------*\n*        Do the lookup of the UCB in the OS/390 way\n*---------------------------------------------------------------------*\n         MODESET KEY=ZERO              Goto system key          @930729\n         UCBLOOK VOLSER=DAVOLSER,DEVCLASS=DASD,UCBPTR=ADDRUCB,         X\n               NOPIN,DYNAMIC=YES,RANGE=ALL                      @971027\n         LTR   R15,R15                 UCBLOOK ok?              @930729\n         BZ    REN001                  YES: branch              @930729\n         MODESET KEY=NZERO             Goback to user key       @930729\n.SKIP1   ANOP\n         AIF   ('&SYSPARM' NE 'MVS').SKIP2                      @020814\n*---------------------------------------------------------------------*\n*        Do the lookup of the UCB in the MVS way\n*---------------------------------------------------------------------*\n         L     R3,CVTPTR               GET CVTADRESS            @020814\n         USING CVT,R3                  GET ADDRESSABILITY OF CVT@020814\n         L     R2,CVTILK2              POINT TO START of lookup @020814\nLOOKUP   EQU   *                       FIND UCB                 @020814\n         CLC   0(2,R2),=X'FFFF'        END OF LOOKUP TABLE ?    @020814\n         BE    LOOKERR                 YES: END OF UCBS REACHED @020814\n         CLC   0(2,R2),=X'0000'        NULL ENTRY?              @020814\n         BE    LOOKNXT                 GO TO NEXT ONE           @020814\n         XR    R4,R4                   CLEAR REGISTER           @020814\n         ICM   R4,3,0(R2)              # HALFWORDS IN R4        @020814\n*        SLL   R4,1                 *2 BECAUSE LOOKUP=HALFWORDS @020814\n         CLC   SRTEVOLI,DAVOLSER     IS THIS THE VOLSER WE NEED?@020814\n         BE    LOOKFND                 BRANCH IF YES.           @020814\nLOOKNXT  DS    0H                                               @020814\n         LA    R2,2(,R2)              Next entry in lookup table@020814\n         B     LOOKUP                  Search for next UCB      @020814\nLOOKFND  DS    0H                                               @020814\n         ST    R4,ADDRUCB              Save UCB address         @020814\n         B     REN001                                           @031006\nLOOKERR  DS    0H                                               @020814\n         LA    R15,4                   RC=0004                  @020814\n         DROP  R3                      kill addr of CVT         @020814\n.SKIP2   ANOP\n         CVD   R15,DWB                 Set                      @930729\n         UNPK  MSG11+26(4),DWB            returncode            @930729\n         OI    MSG11+29,X'F0'                in msg             @930729\n         MVC   MSG11+35(6),DAVOLSER    Set VOLSER in msg        @930729\n         MVC   MSG99+4(60),MSG11       move msg EDT111E         @930729\n         WTO   MF=(E,MSG99)            UCBLOOK failed           @930729\n         B     REN970                  and Branch               @930729\nREN001   DS    0H                                               @930729\n         AIF   ('&SYSPARM' EQ 'MVS').SKIP3                      @020814\n         MODESET KEY=NZERO             Goback to user key       @930729\n.SKIP3   ANOP\n         MVC   VOLCNT,=H'1'            Volume count is 1        @930729\n         MVC   VOLSER,DAVOLSER         Move volume name         @930729\n         L     R4,ADDRUCB              Pickup UCB pointer       @930729\n         MVC   VOLDEVT,UCBTYP          Move device type         @930729\n         DROP  R4                      Kill local addr.         @930729\nREN002   DS    0H                                               @930729\n         SR    R0,R0                   Clear reg.0              @930729\n         RENAME RENAMELS               Rename the dataset       @930729\n         LTR   R15,R15                 Rename OK ?              @930729\n         BZ    REN003                  Yes: continue            @930729\n         CVD   R15,DWB                 Set                      @930729\n         UNPK  MSG08+26(4),DWB            Returncode            @930729\n         OI    MSG08+29,X'F0'                in message         @930729\n         SYCONVHX IN=VOLRNCDE+1,OUT=MSG08+41,L=1 Status code    @930729\n         MVC   MSG99+4(60),MSG08       move msg EDT109E         @930729\n         WTO   MF=(E,MSG99)            Rename failed            @930729\n         B     REN970                  and Branch               @930729\nREN003   DS    0H                                               @930729\n         TM    SW,$NCTLGD              Data set not catalogued  @930729\n         BO    REN900                  YES: finished give msg   @930729\n         CATALOG UNCATLG               Uncatalog the dataset    @930729\n         LTR   R15,R15                 OK ???                   @930729\n         BZ    REN005                  Yeah: branch             @930729\n         MVC   MSG09+8(2),=C'UN'       UNcatalog failed         @930729\n         CVD   R15,DWB                 Set                      @930729\n         UNPK  MSG09+29(4),DWB            Returncode            @930729\n         OI    MSG09+32,X'F0'                in message         @930729\n         MVC   MSG99+4(60),MSG09       move msg EDT110E         @930729\n         WTO   MF=(E,MSG99)            UNCATLG failed           @930729\nREN005   DS    0H                                               @930729\n         LA    R4,VCB                  Point to volume list     @930729\n         LH    R5,VOLCNT               # volumes                @930729\nREN007   DS    0H                                               @930729\n         XC    10(2,R4),10(R4)         Clear status/dsseqnr     @930729\n         LA    R4,12(,R4)              Next entry               @930729\n         BCT   R5,REN007               Loop until all done      @930729\n         CATALOG CATLG                 Catalog the new dataset  @930729\n         LTR   R15,R15                 OK ???                   @930729\n         BZ    REN900                  Yeah: branch             @930729\n         MVC   MSG09+8(2),=C'  '       CAtalog failed           @930729\n         CVD   R15,DWB                 Set                      @930729\n         UNPK  MSG09+29(4),DWB            Returncode            @930729\n         OI    MSG09+32,X'F0'                in message         @930729\n         MVC   MSG99+4(60),MSG09       move msg EDT110E         @930729\n         WTO   MF=(E,MSG99)            UNCATLG failed           @930729\n         B     REN970                  Give RC=0012             @930729\nREN900   DS    0H                                               @930729\n         MVC   MSG99+4(60),MSG10       move msg EDT199I         @930729\n         WTO   MF=(E,MSG99)            RENAME successful        @930729\n         XR    R15,R15                 RC=0000                  @930729\n         B     REN999                  return                   @930729\nREN970   DS    0H                      errors occurred          @930729\n         LA    R15,8                   Load RC,                 @930729\nREN999   DS    0H                                               @930729\n         L     R14,SAVE14R             Restore reg.14           @930729\n         BR    R14                     Return to caller         @930729\n         TITLE 'Variables and constants'\nDWB      DS    D                       For CVD/CVB instructions @930729\nADDRUCB  DS    F                       A(UCB) if ds not catlgd  @930729\nECB      DS    F\nSAVEAREA DC    18F'0'\nMSG01    DC    CL60'EDT103I Allocation of dataset successful'\nMSG02    DS    0CL60\n         DC    CL8'EDT102E '           MSGID 8\nALLVERB  DS    CL10\n         DC    CL11' Errorcode='       11\nERRORBC  DS    CL4\n         DC    CL10',INFOCODE='        10\nINFOBC   DS    CL4\n         DC    CL5',R15='              5\nR15BC    DS    CL4\n         DC    CL4' '                  4\nMSG03    DC    CL60'EDT104E Dataset not on volume'\nMSG04    DC    CL60'EDT105E Dataset not in catalog'\nMSG05    DC    CL60'EDT198I Function canceled by operator'      @930729\nMSG06    DC    CL60'EDT107E Newname already catalogued'         @930729\nMSG07    DC    CL60'EDT108E Newname already on volume'          @930729\nMSG08    DC    CL60'EDT109E RENAME failed, RC=xxxx, Statuscd=xx' @93729\nMSG09    DC    CL60'EDT110E xxCATALOG failed, RC=xxxx'          @930729\nMSG10    DC    CL60'EDT199I RENAME of dataset successful'       @930729\nMSG11    DC    CL60'EDT111E UCBLOOK failed RC=xxxx,VOL=vvvvvv'  @930729\nBLANKS   DC    CL60' '\nMSG99    WTO   '1234512345123451234512345123451234512345123451234512345X\n               12345',ROUTCDE=(2,3),MF=L\nMSG99E   EQU   *\n*\nLOC      CAMLST NAME,DALDSN,,LOCAREA   FOR LOCATE\nOBTNLIST CAMLST SEARCH,DALDSN,DAVOLSER,WORKAREA\nRENAMELS CAMLST RENAME,CURDSN,NEWNAME,VOLLIST                   @930729\nCATLG    CAMLST CATBX,NEWNAME,,VOLLIST                          @930729\nUNCATLG  CAMLST UCATDX,CURDSN                                   @930729\n*\nLOCAREA  DS    0D\nLOC#VOLS DS    CL2                     # volume on which ds resides\nLOC#DEVT DS    CL4                     devtype                  @930729\nLOCVOL   DS    CL6                     FOUND VOLUME\nLOCDSEQ  DS    CL2                     Dataset seq. number      @930729\n         DS    CL251                   REST OF LOCAREA\n*\n         DS    0D\nWORKAREA DS    CL140\nCURDSN   DS    CL44                    Old dataset if RENAME    @930729\nNEWNAME  DS    CL44                    New dataset if RENAME    @930729\n*\n         DS    0H                      volume list on hw-bound. @930729\nVOLLIST  DS    0CL256                  Volume list for RENAME   @930729\nVOLCNT   DS    CL2                     # volumes                @930729\nVCB      DS    0CL12                   1 volume entry           @930729\nVOLDEVT  DS    CL4                     Device-type              @930729\nVOLSER   DS    CL6                     Volume serial number     @930729\nVOLRNCDE DS    CL2                     Rename code              @930729\n         DS    CL242                   Rest of volume list      @930729\n*                                                               @930729\nSW       DC    X'00'                                            @930729\n$NCTLGD  EQU   128                                              @930729\n         LTORG ,\n         TITLE 'ALLOCATION CONTROL-BOCKS'\n*--------------------------------------------------------------------*\n*                                                                    *\n*        THESE ARE THE CONTROL-BLOCKS USED BY THE DYNAMIC ALLOCATION *\n*        ROUTINE and the DASDSM Rename routine.                      *\n*                                                                    *\n*------------------------------------- (C)-1995 Skybird Systems -----*\n         SPACE 2\n         DS    0F\nDALPTR   DC    X'80',AL3(DALBLK)\n*\nDALBLK   DC    AL1(20)                 LENGTH OF REQ BLK\nDALVERB  DC    AL1(1)                  DSNAME ALLOCATION\nDALFLG1  DC    X'2000'                 FLAGS1\nDAERROR  DC    AL2(0)                  ERROR CODE\nDAINFO   DC    AL2(0)                  INFOCODE\nDALTU    DC    A(DALTXT)               TEXT UNIT LIST\n         DC    A(0)                    RESERVED\nDALFLG2  DC    A(0)                    FLAGS2\n*\nDALTXT   DS    0F\n         DC    A(DALDDNAM)             DDNAME TU\n         DC    A(DALDSNAM)             DSNAME TU\n         DC    A(DALSTATS)             DISPOSITION TU\n         DC    A(DALVLSER)             VOLUME SERIAL TU\n         DC    X'80',AL3(DALUNIT)      UNIT NAME CONTAINS SYSDA\n*\nDALDSNAM DS    0H                      DSNAME TU\n         DC    X'0002'\n         DC    AL2(1)\nDALDSNL  DC    AL2(44)                 LENGTH\nDALDSN   DS    CL44\n*\nDALSTATS DS    0H                      DATASET DISP.\n         DC    X'0004'\n         DC    AL2(1)\n         DC    AL2(1)                  LENGTH\n         DC    X'08'                   DISP=SHR\n*\nDALVLSER DS    0H                      VOLUME SERIAL TU\n         DC    X'0010'\n         DC    AL2(1)\n         DC    AL2(6)                  VOLUME LENGTH\nDAVOLSER DS    CL6\n*\nDALUNIT  DS    0H                      UNIT TU\n         DC    X'0015'\n         DC    AL2(1)\nDALUNITL DC    AL2(8)                  LENGTH\nDALUNITD DC    C'SYSALLDA'\n*\nDALDDNAM DS    0H                      DDNAME TU\n         DC    X'0001'\n         DC    AL2(1)\nDALDDNL  DC    AL2(8)\nDALDDN   DS    0CL8                    DDNAME\n         DC    CL8'INP01'\n         TITLE 'UNALLOCATION CONTROL-BLOCKS'\n*--------------------------------------------------------------------*\n*                                                                    *\n*        THESE ARE THE CONTROL-BLOCKS USED BY THE DYNAMIC UNALLO-    *\n*        CATION ROUTINE.                                             *\n*                                                                    *\n*------------------------------------- (C)-1995 Skybird Systems -----*\n         SPACE 2\n         DS    0F\nDUNPTR   DC    X'80',AL3(DUNBLK)       REQUEST BLOCK POINTER\n*\nDUNBLK   DC    AL1(20)                 LENGTH OF REQ.BLK\nDUNVERB  DC    AL1(2)                  UNALLOCATION VERB\nDUNFLG1  DC    X'2000'                 FLAGS1\nDUNERROR DC    AL2(0)                  ERRORCODE\nDUNINFO  DC    AL2(0)                  INFOCODE\n         DC    A(DUNTXT)               TEXT UNIT LIST\n         DC    A(0)                    RESERVED\nDUNFLG2  DC    A(0)                    FLAGS 2\n*\nDUNTXT   DS    0F\n         DC    X'80',AL3(DALDDNAM)\n*\nSAVE14R  DS    F                       SAVE R14 In Rename rout. @930729\nALLOCSVE DS    F                       SAVE R14\nUNALLSVE DS    F\n*\n*        GENERAL EQUATES.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10                      First base register\nR11      EQU   11                      Address of Parameter from TSTVS\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n         TITLE 'Dummy sections'\n         PRINT NOGEN\nPARMAREA DSECT                         FROM MAIN MODULE\nALLOCSW  DS   C                        ALLOCSW\nALLOC    EQU  X'80'\n$UNALL   EQU  X'08'                    DON ONLY AN UNALLOCATE\n$RENDS   EQU  X'02'                    Perform a rename         @930729\nROUTCDE  DS   CL2                      ROUTING CODE MESSAGES\n*\nTSTVSUCB DSECT ,                                                @930729\n         IEFUCBOB LIST=NO\n         AIF   ('&SYSPARM' NE 'MVS').SKIP4                      @020814\n         CVT   DSECT=YES,LIST=NO\n.SKIP4   ANOP\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSTVSCOM": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x01\\x00\\x00\\x01\\x02\"O\\x01\\x19$_\\x086\\x00\\xfa\\x00\\xfa\\x00\\x00\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "80.01", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2019-09-02T08:36:00", "lines": 250, "newlines": 250, "modlines": 0, "user": "RPRINS"}, "text": "TSTVSCOM TITLE 'COMMAND PROCESSOR FOR TSTVS'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        MODULE:        TSTVSCOM.                                     *\n*        AUTHOR:        Rob Prins, ING Bank Amsterdam                 *\n*                                                                     *\n*        FUNCTION:      PROCESS THE FOLLOWING COMMANDS OF TSTVS:      *\n*                       'A MEMBER' OR 'AN MEMBER'                     *\n*                       CREATE MEMBER IN THE ALLOCATED PDS.           *\n*                       'U MEMBER' OR 'UN MEMBER'                     *\n*                       UPDATE MEMBER IN THE ALLOCATED PDS.           *\n*                       'D MEMBER' DELETE THE MEMBER.                 *\n*                       'PDSLIST(,key)' LISTPDS of the PDS            *\n*                       starting with 'key'                           *\n*                       'EOJ' STOP PROCESSING OF TSTVS.               *\n*                       'ALLOC' ALLOC THE LIBRARY.                    *\n*                       'RENAME' Rename an entire dataset             *\n*                       IN THIS MODULE ONLY THE COMMANDS OR SCREENED  *\n*                       AND GIVEN BACK TO THE MAIN MODULE.            *\n*                       LINKAGE: 1 BYTE SWITHES 2 BYTES ROUTCDE AND   *\n*                       8 BYTES MEMBERNAME                            *\n*                                                                     *\n*        Modifications: Jul 26,1993 by Rpr: The \"Key\" in the          *\n*                       \"PDSLIST,key\" has now a variable length       *\n*                       Jul 29,1993 by Rpr: Add the RENAME command    *\n*                       to rename a dataset                           *\n*                       VS1 support deleted.                          *\n*                                                                     *\n*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*\n         SPACE 2\nTSTVSCOM CSECT\n         SAVE  (14,12),,*              SAVE REGISTERS.\n         LR    R10,R15                 BASE REGISTER\n         USING TSTVSCOM,R10            GET ADDRESSABILITY\n         LR    R2,R1\n         LA    R1,SAVEAREA\n         ST    R1,8(,R13)              FORWARD POINTER\n         ST    R13,4(,R1)              BACKWARD POINTER\n         LR    R13,R1\n         L     R11,0(,R2)              OBTAIN PARM FROM MAIN ROUT\n         USING PARMAREA,R11\n         XR    R7,R7\n         ICM   R7,3,ROUTCDE            OBTAIN ROUTING CODE MESSAGES\n         STH   R7,CMDWAIT-4            STORE IN WTORS\n         STH   R7,MSG99E-2\nASKCMD   DS    0H\n         LA    R4,0\n         NI    SWITCH,X'FF'-UPDT-NBRS\n         XC    ECB,ECB                 CLEAR ECB AREA\n         MVC   REPLY(20),BLANKS        CLEAR REPLY AREA\n         MVC   PARM33,BLANKS           CLEAR REPLY AREA\n         WTOR  'EDT200A Enter command or ''HELP'' ',REPLY,20,ECB,      X\n               ROUTCDE=(2,3)           ASK FOR COMMAND\nCMDWAIT  WAIT  ECB=ECB                 WAIT FOR EVENT\n         CLI   REPLY,C' '              NOTHING REPLIED ?\n         BE    ASKCMD                  ASK AGAIN\n         CLC   REPLY(5),=C'HELP '      TEST HELP\n         BNE   CMD002                  GO ON IF NOT\n         MVC   MSG99+4(60),HELP1       GIVE HELP INFO\n         WTO   MF=(E,MSG99)            INFORM OPER/PROGRAMMER\n         MVC   MSG99+4(60),HELP2\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP3\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP4\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP5\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP6\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP7\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP8\n         WTO   MF=(E,MSG99)\n         MVC   MSG99+4(60),HELP9       9th help msg             @930729\n         WTO   MF=(E,MSG99)                                     @930729\n         B     ASKCMD                  TRY AGAIN\nCMD002   EQU   *                       PROCESS THE OTHER COMMANDS\n         CLC   REPLY(6),=C'ALLOC '     ALLOCATE ?\n         BNE   CMD004                  GO ON WITH THE OTHER CMDS\n         LA    R4,16                   RC=16 IS ALLOC COMMAND\n         B     CMDEND                  GO TO MAIN ROUTINE\nCMD004   DS    0H                      TEST NEXT COMMANDS\n         CLC   REPLY(4),=C'EOJ '       END OF JOB\n         BNE   CMD006                  GO ON WITH OTHER COMMANDS\n         LA    R4,20                   RC=20 IS EOJ COMMANDS\n         B     CMDEND\nCMD006   DS    0H                                               @930729\n         CLC   =C'RENAME',REPLY        Rename entire dataset    @930729\n         BNE   CMD008                  N: Continue              @930729\n         LA    R4,24                   RC=24 is RENAME command  @930729\n         B     CMDEND                  Return                   @930729\nCMD008   DS    0H\n         TM    SWITCH,ALLOC            ALLOCATED ?\n         BO    CMD010                  ALLRIGHT\n         MVC   MSG99+4(60),MSG02       ERROR MSG EDT202E\n         WTO   MF=(E,MSG99)            INFORM OPERATOR/PROGRAMMER\n         B     ASKCMD\nCMD010   DS    0H\n         CLC   REPLY(7),=C'PDSLIST'    LISTPDS ?\n         BNE   CMD012                  GO ON WITH OTHER COMMANDS\n         MVC   PARM33R(16),REPLY       MOVE REPLY               @930726\n         LA    R3,PARM33KY             start of key             @930726\n         LA    R1,PARM33KY+8           end of key               @930726\n         TRT   PARM33KY,TRTABTST       find first blank         @930726\n         SR    R1,R3                   compute length           @930726\n         STC   R1,PARM33KL             store keylength          @930726\n         LA    R4,12                   RC=12 IS PDSLIST COMMAND\n         B     CMDEND                  GO TO MAIN\nCMD012   DS    0H\n         CLC   REPLY(2),=C'D '         DELETE MEMBER ?\n         BNE   CMD014                  GO ON WITH OTHER CMDS\n         LA    R4,8                    Rc=8, Command, delete member\n         MVC   PARM33M(8),REPLY+2      MOVE MEMBER\n         B     MEMBCHK                 CHECK MEMBERNAME\nCMD014   DS    0H\n         CLC   REPLY(2),=C'R '         RENAME MEMBER ?\n         BNE   CMD016                  GO ON WITH OTHER CMDS\n         MVC   PARM33M(8),BLANKS       CLEAR MEMBER\n         LA    R3,REPLY+2              POINT TO MEMBER\n         LA    R4,PARM33M              POINT TO OUTPUT\n         LA    R5,8                    SCAN MAX 8 TIMES\nCMD014A  DS    0H\n         CLI   0(R3),C','              COMMA FOUND ?\n         BE    CMD014Z                 YES BRANCH\n         MVC   0(1,R4),0(R3)           MOVE 1 BYTE MEMBER\n         LA    R3,1(,R3)               INCR R3\n         LA    R4,1(,R4)               INCR R4\n         BCT   R5,CMD014A              LOOP UNTIL ALL DONE\nCMD014Z  DS    0H\n         MVC   PARM33R(8),1(R3)\n         LA    R4,8                    RC=8 RENAME MEMBER COMMAND\n         OI    SWITCH,$RENAME          MARK RENAME COMMAND\n         B     MEMBCHK                 CHECK MEMBERNAME\nCMD016   DS    0H\n         CLC   REPLY(2),=C'A '         ADD MEMBER\n         BNE   CMD020\n         LA    R4,4                    RC=4 IS ADD MEMBER\n         MVC   PARM33M(8),REPLY+2      MOVE MEMBER\n         B     MEMBCHK\nCMD020   DS    0H\n         CLC   REPLY(3),=C'AN '        ADD MEMBER WITH CARDNUMBERS\n         BNE   CMD022\n         LA    R4,4                    RC=4 IS ADD MEMBER\n         MVC   PARM33M(8),REPLY+3      MOVE MEMBER\n         OI    SWITCH,NBRS             MASK CARDNUMBERS ASK\n         B     MEMBCHK\nCMD022   DS    0H\n         CLC   REPLY(2),=C'U '         UPDATE MEMBER\n         BNE   CMD024\n         XR    R4,R4                   RC=0 IS UPDATE MEMBER\n         MVC   PARM33M(8),REPLY+2      MOVE MEMBER\n         OI    SWITCH,UPDT\n         B     MEMBCHK\nCMD024   DS    0H\n         CLC   REPLY(3),=C'UN '        UPDATE MEMBER WITH CARDNUMBERS\n         BNE   CMD030                  ERROR\n         XR    R4,R4                   RC=0 IS UPDATE MEMBER\n         MVC   PARM33M(8),REPLY+3      MOVE IN MEMBER\n         OI    SWITCH,NBRS             MASK ASK CARDNUMBERS\n         OI    SWITCH,UPDT\n         B     MEMBCHK\nCMD030   DS    0H\n         MVC   MSG99+4(60),MSG03       ERROR MSG EDT202E\n         WTO   MF=(E,MSG99)            INFORM OPERATOR/PROGRAMMER\n         B     ASKCMD\nMEMBCHK  DS    0H\n         CLI   PARM33M,C'#'            CHECK FIRST CHARACTER\n         BE    MEMBOK                  OK\n         CLI   PARM33M,C'$'\n         BE    MEMBOK\n         CLI   PARM33M,C'@'\n         BE    MEMBOK\n         CLI   PARM33M,C'A'            ALPHABETIC ?\n         BL    MEMBERR                 INVALID MEMBERNAME\n         CLI   PARM33M,C'Z'\n         BH    MEMBERR\nMEMBOK   DS    0H\n         B     CMDEND                  GO TO MAIN ROUTINE\nMEMBERR  DS    0H                      GIVE ERROR MSG EDT203E\n         NI    SWITCH,255-$RENAME      FLAG OFF\n         MVC   MSG99+4(60),MSG04\n         WTO   MF=(E,MSG99)            INFORM OPER/PROGRAMMER\n         B     ASKCMD                  TRY AGAIN\nCMDEND   DS    0H\n         LR    R15,R4                  RETURNCODE\n         L     R13,4(,R13)\n         RETURN (14,12),RC=(15)\nSAVEAREA DC    18F'0'\nREPLY    DS    CL20\nMSG02    DC    CL60'EDT202E No dataset allocated - reply ''ALLOC'''\nMSG03    DC    CL60'EDT203E Command invalid, Reenter'\nMSG04    DC    CL60'EDT204E Membername invalid, Reenter'\nHELP1    DC    CL60'EDT205I Commands:'\nHELP2    DC    CL60'        ALLOC:            Allocate the library'\nHELP3    DC    CL60'        EOJ:              Stop TSTVS'\nHELP4    DC    CL60'        PDSLIST,(key):    List directory of libraryx\n               '\nHELP5    DC    CL60'        A(N) member:      Add a new member'\nHELP6    DC    CL60'        U(N) member:      Update member (subcommand*\n               s)'\nHELP7    DC    CL60'        D member:         Delete the member'\nHELP8    DC    CL60'        R member,newname: Rename member'\nHELP9    DC    CL60'        RENAME:           Rename an entire dataset'\nECB      DS    F\nBLANKS   DC    CL22' '\nMSG99    WTO   '1234512345123451234512345123451234512345123451234512345X\n               12345',ROUTCDE=(2,3),MF=L\nMSG99E   EQU   *\nTRTABTST DC    256X'00'                                         @930726\n         ORG   TRTABTST                                         @930726\n         DC    X'FF'                   binary zero              @930726\n         ORG   TRTABTST+X'40'                                   @930726\n         DC    X'FF'                   blank                    @930726\n         ORG   ,                       reset location counter   @930726\n*        GENERAL EQUATES.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n         EJECT\nPARMAREA DSECT                         FROM MAIN MODULE\nSWITCH   DS   C                        ALLOCSW\nALLOC    EQU   X'80'                   SET IN TSTVSALL ROUT\nNBRS     EQU   X'20'                   INDICATE LINENBRS\nUPDT     EQU   X'10'                   REPLY='U' OR 'UN' MEMBERNAME\n$UNALL   EQU   X'08'\n$RENAME  EQU   X'04'                   IF ON: RENAME COMMAND\n$RENDS   EQU   X'02'                   IF ON: RENAME dataset    @930729\nROUTCDE  DS    CL2                     ROUTING CODE MESSAGES\n*\nPARM33   DS    0CL25                   COMMAREA                 @930726\nPARM33M  DS    CL8                     MEMBERNAME\nPARM33R  DS    CL8                     NEWNAME\nPARM33KY DS    CL8                     KEY FOR PDSLIST          @930726\nPARM33KL DS    CL1                     Actual keylength         @930726\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSTVSSEC": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'P\\x01\\x00\\x00\\x01\\x02\"O\\x01\\x19$_\\x088\\x01&\\x01&\\x00\\x00\\xd9\\xd7\\xd9\\xc9\\xd5\\xe2@@@@'", "ispf": {"version": "80.01", "flags": 0, "createdate": "2002-08-12T00:00:00", "modifydate": "2019-09-02T08:38:00", "lines": 294, "newlines": 294, "modlines": 0, "user": "RPRINS"}, "text": "TSTVSSEC TITLE 'Do all the security checking for TSTVS'\n*---------------------------------------------------------------------*\n*                                                                     *\n*        MODULE:       TSTVSSEC                                       *\n*        AUTHOR:       Rob Prins, Amsterdam.                          *\n*                                                                     *\n*        FUNCTION:     Ask for a valid userid+password from the       *\n*                      operator. Validate the given user and          *\n*                      check usage of the program TSTVS, by means     *\n*                      of checking the resource '$TSTVS' in the       *\n*                      FACILITY class.                                *\n*                      All the checking is done via the SAF interface *\n*                      so TSTVSSEC is suitable for RACF of ACF2       *\n*                      systems.                                       *\n*                      If ACF2 has been used, please map the          *\n*                      FACILITY class in the GSO SAFMAPS              *\n*                      If neither RACF or ACF2 aren't active, the     *\n*                      TSTVS program password will be asked.          *\n*                                                                     *\n*        PARAMETER     Jobname                                        *\n*                                                                     *\n*        CALLED BY:    TSTVS                                          *\n*                                                                     *\n*        Return code:  0000 - Access to TSTVS is allowed              *\n*                      /= 0000 - Access to TSTVS has been rejected    *\n*                                                                     *\n*        Modifications:                                               *\n*        95/12/19: rpr incorrect length of resource $tstvs corrected  *\n*                                                                     *\n*------------------------------------------ (C)-1992 SKYBIRD SYSTEMS -*\n         SPACE 2\nTSTVSSEC CSECT\n         SAVE  (14,12),,*\n         USING TSTVSSEC,R15            GET LOCAL ADDRESSABILITY @911224\n         LA    R11,SAVEA                                        @911224\n         ST    R13,SAVEA+4                                      @911224\n         ST    R11,8(0,R13)                                     @911224\n         LR    R13,R11                                          @911224\n         B     START                                            @911224\n         DS    0F                                               @911224\nSAVEA    DC    18F'-1'\n         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'\nSTART    DS    0H\n         DROP  R15                     KILL LOCAL ADDRESSABILITY@911224\n         USING SAVEA,R13               Get program addres.      @921218\n         L     R3,0(R1)                Parm from TSTVS (jobname)@921218\n         MVI   SW,0                    clear flags\n         MVC   PASSWRD,PW1                                      @911224\n         OC    PASSWRD,PW2                                      @911224\n         MVC   PASSWRD(2),0(R3)        1ST 2 POS OF JOBNAME.\n         GETMAIN RU,LV=512             Obtain room for workarea @921218\n         LR    R4,R1                   PICKUP GOTTEN ADDRESS    @911224\n         LA    R6,2                    TRY MAX. 2 TIMES         @911224\n         MVC   RC,=F'8'                Set default a bad code   @921218\nASKUID   DS    0H                                               @921218\n         XC    ECB1,ECB1               CLEAR ECB                @911224\n         MVC   USERID(8),BLANKS        Blank userid             @921218\n         WTOR  'EDT301A Enter name of an authorized user',             *\n               USERID,8,ECB1,ROUTCDE=(9)                        @921218\n         WAIT  ECB=ECB1                WAIT FOR REPLY.          @911224\n         CLI   USERID,C' '             Nothing replied ?        @921218\n         BE    ASKUID                  YES: ASK AGAIN           @921218\n         LA    R1,USERID+8             Point after userid       @921218\n         TRT   USERID,TRTAB            compute the length       @921218\n         LA    R2,USERID               start of field           @921218\n         SLR   R1,R2                   Diffence is the length   @921218\n         STC   R1,USER                 and save length          @921218\nASKPWD   DS    0H                                               @911224\n         XC    ECB1,ECB1               CLEAR ECB                @911224\n         MVC   PASSWORD(8),BLANKS      Blank password field     @921218\n         WTOR  'EDT302A Enter password of this authorized user',       *\n               PASSWORD,8,ECB1,ROUTCDE=(9)                      @921218\n         WAIT  ECB=ECB1                WAIT FOR REPLY.          @911224\n         CLI   PASSWORD,C' '           NOTHING REPLIED ?        @921218\n         BE    ASKPWD                  YES: ASK AGAIN           @911224\n         LA    R1,PASSWORD+8           Point after password     @921218\n         TRT   PASSWORD,TRTAB          compute the length       @921218\n         LA    R2,PASSWORD             start of field           @921218\n         SLR   R1,R2                   Diffence is the length   @921218\n         STC   R1,PWD                  and save length          @921218\n         LA    R8,USER                 A(userid)                @921218\n         LA    R7,PWD                  password address         @921218\n         RACROUTE REQUEST=VERIFY,                                      *\n               ENVIR=CREATE,           Create an ACEE                  *\n               ACEE=ACEEADR,           and place address in fullword   *\n               USERID=(8),                                             *\n               RELEASE=1.9,                                            *\n               PASSWRD=(7),                                            *\n               TERMID=LUTSTVS,         user's terminal or appl. name   *\n               WORKA=(4),                                              *\n               MF=(E,VFYLIST)\n         XC    PASSWORD,PASSWORD       clear password           @921218\n         LTR   R15,R15                 verify ok ?              @921218\n         BZ    CHKRSRC                 yes,  LOGON SO FAR VALID.@921218\n         MVC   MSG98+4(32),=C'EDT305E RACINIT failed for user=' @921218\n         MVC   MSG98+36(8),USERID      move userid in error     @921218\n         MVC   MSG98+44(4),=C' rc='                             @921218\n         ST    R15,SAFRC               save SAF return code     @921218\n         CVD   R15,DWB                 convert rc               @921218\n         UNPK  MSG98+48(4),DWB         make it zone and ...     @921218\n         OI    MSG98+51,X'F0'          remove sign              @921218\n         MVC   MSG98+52(10),=C', RACF rc='                      @921218\n         LA    R2,VFYLIST              point to RACROUTE list   @921218\n         L     R15,0(,R2)              RACF return code         @921218\n         ST    R15,RACFRC              save 'RACF?' rc          @921218\n         CVD   R15,DWB                 to decimal               @921218\n         UNPK  MSG98+62(4),DWB         make it zone and ...     @921218\n         OI    MSG98+65,X'F0'          remove sign              @921218\n         CLC   SAFRC,=F'8'             RC > 8                   @921218\n         BH    RACRC                   YES: It's a real error   @921218\n         BE    CHKPWE                  RC=8 possible passw err. @921218\n         CLC   RACFRC,=F'20'           RACF  not active ??      @921218\n         BE    BYPRAC                  yes: bypass RACF check   @930429\n         CLC   RACFRC,=F'0'            ACF2  not active ??      @930429\n         BNE   RACRC                   no: other error          @921218\nBYPRAC   DS    0H                                               @930429\n         MVC   MSG98+4(66),MSG25       move bypass msg          @921218\n         LA    R1,MSG98                                         @921218\n         WTO   MF=(E,(1))              INFORM OPERATOR          @911224\n         FREEMAIN RU,LV=512,A=(4)      freemain workarea        @921218\n         B     TSTVSPW0                Ask for TSTVS password   @921218\nCHKPWE   DS    0H                                               @921218\n         CLC   RACFRC,=F'8'            password not auth.       @921218\n         BE    PWNMATCH                yes: give suitable msg   @921218\n         CLC   RACFRC,=F'12'           password expired         @921218\n         BNE   RACRC                   no: other error          @921218\n         MVC   MSG29+15(8),USERID      move userid in error     @921218\n         MVC   MSG98+4(66),MSG29       move correct message     @921218\n         B     RACRC                   branch                   @921218\nPWNMATCH DS    0H                                               @921218\n         MVC   MSG28+15(8),USERID      move userid in error     @921218\n         MVC   MSG98+4(66),MSG28       move correct message     @921218\nRACRC    DS    0H                                               @921218\n         LA    R1,MSG98                                         @921218\n         WTO   MF=(E,(1))              INFORM OPERATOR          @911224\n         B     RACREOJ                 TERMINATE or try again   @921218\nCHKRSRC  DS    0H                      Userid verified          @921218\n         OI    SW,$CREATE              mark ACEE created        @921218\n         L     R5,ACEEADR              Pickup ACEE address      @921218\n         LA    R8,SAFENT               Entity field             @921218\n         LA    R7,SAFCLASS             Class  field             @921218\n         RACROUTE                                                      X\n               REQUEST=AUTH,           check if resource authorized    X\n               ACEE=(5),               current acee address            x\n               WORKA=(4),                                              X\n               ENTITYX=((8)),          resource name=$TSTVS            X\n               ATTR=READ,                                              X\n               RELEASE=1.9,                                            X\n               CLASS=(7),              class name = FACILITY           X\n               MF=(E,SAFLIST)\n         LTR   R15,R15                 Auth SAF call ok ?       @940406\n         BNZ   NOPRIV                  No: no access to $TSTVS  @940406\n         LA    R1,MSG98                                         @921218\n         MVC   MSG98+4(66),MSG27       MSG EDT309I              @921218\n         WTO   MF=(E,(1))              userid accepted          @921218\n         XC    RC,RC                   RC = 0000                @921218\n         B     RACREOJ                 RELEASE storage and cont.@921218\nNOPRIV   DS    0H                      No access to resource    @921218\n         LA    R1,MSG98                                         @911224\n         MVC   MSG98+4(66),MSG26       MSG EDT304E              @911224\n         WTO   MF=(E,(1))              INFORM OPERATOR          @911224\n         B     RACREOJ                 TRY AGAIN OR TERMINATE   @921218\nRACREOJ  DS    0H                                               @921218\n         TM    SW,$CREATE              ACEE has been created ?  @921218\n         BNO   RACNDEL                 no: do not delete        @921218\n         RACROUTE REQUEST=VERIFY,      delete ACEE                     *\n               ENVIR=DELETE,                                           *\n               ACEE=ACEEADR,           Delete this ACEE                *\n               WORKA=(4)\n         NI    SW,255-$CREATE          flag off                 @921218\nRACNDEL  DS    0H                                               @921218\n         ICM   R15,15,RC               return code              @921218\n         BZ    TSTVSFR2                All zero: verified       @921218\n         BCT   R6,ASKUID               error: ask again         @921218\n         FREEMAIN RU,LV=512,A=(4)      RELEASE workarea         @921218\n         B     TSTVSRET                TERMINATE PROCESSING     @911224\nTSTVSFR2 DS    0H                                               @921218\n         FREEMAIN RU,LV=512,A=(4)      RELEASE workarea         @921218\n         B     TSTVSRET                user has been verified   @921218\n         TITLE 'No security package active, ask program password'\nTSTVSPW0 DS    0H\n         XC    ECB1,ECB1               CLEAR ECB FOR WTOR.\n         WTOR  'EDT310A Enter TSTVS password',REPLYPW,8,ECB1,          *\n               ROUTCDE=9\n         WAIT  ECB=ECB1                WAIT FOR REPLY.\n         MVC   SYPSWRD,PW3                                      @911224\n         OC    SYPSWRD,PW4                                      @911224\n         CLC   PASSWRD(2),=C'SY'       SYITSTVS OR NOT.\n         BE    TSTVSPW2                IF SY THEN BRANCH\n         CLC   PASSWRD(8),REPLYPW      ELSE COMPARE\n         BNE   TSTVSRET                WRONG PASSWORD, EXIT\n         XC    RC,RC                   Clear return code        @921218\n         B     TSTVSRET                Return with RC=0000      @921218\nTSTVSPW2 DS    0H                                               @921218\n         CLC   REPLYPW(8),SYPSWRD      COMPARE PASSWORD\n         BNE   TSTVSRET                WRONG PASSWORD, EXIT\n         XC    RC,RC                   Clear return code        @921218\n         TITLE 'Return to TSTVS mainline'\nTSTVSRET DS    0H                                               @921218\n         XC    PASSWRD,PASSWRD         CLEAR PASSWORD FIELD     @911224\n         XC    SYPSWRD,SYPSWRD         CLEAR PASSWORD FIELD     @911224\n         XC    REPLYPW,REPLYPW         CLEAR REPLY    FIELD     @911224\n         L     R15,RC                  Return code              @921218\n         L     R13,4(,R13)             Pickup callers savearea  @921218\n         RETURN (14,12),RC=(15)        Return to caller         @921218\n         TITLE 'Variables, constants and literals'\nDWB      DS    D                       For CVD instructions\nACEEADR  DS    F                       A(ACEE) - RACROUTE VFY   @921218\nECB1     DS    F                       ECB for replies          @921218\nRC       DS    F                       Returncode RACROUTE's    @921218\nSAFRC    DS    F                       SAF return code          @921218\nRACFRC   DS    F                       RACF? return code        @921218\n*\nSW       DS    X                       Flags\n$CREATE  EQU   128                     1... .... ACEE created   @921218\n*                                      .xxx xxxx reserved\nPW1      DC    XL8'0000E002E005E040'\nPW2      DC    XL8'000003E003E00200'\nPASSWRD  DC    CL8' '\nPW3      DC    XL8'E009D007E009C001'\nPW4      DC    XL8'02C004D006D004F0'\nSYPSWRD  DC    CL8' '\nREPLYPW  DC    CL8' '\nBLANKS   DC    CL8' '\n*\nTRTAB    DC    256X'00'                xlate table to check delimiters\n         ORG   TRTAB\n         DC    X'01'                   00 is a delimiter\n         ORG   TRTAB+64\n         DC    X'01'                   40 (a blank) is a delimiter\n         ORG   ,\n*\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n*\n         LTORG ,\n         TITLE 'SAF control blocks'\nSAFLIST  RACROUTE                                                      X\n               REQUEST=AUTH,           check resource                  X\n               WORKA=,                                                 X\n               ENTITYX=,               resource name                   X\n               RELEASE=1.9,                                            X\n               CLASS=,                 class name                      X\n               ATTR=READ,                                              X\n               MF=L\nVFYLIST  RACROUTE REQUEST=VERIFY,                                      *\n               ENVIR=,                                                 *\n               USERID=,                                                *\n               RELEASE=1.9,                                            *\n               PASSWRD=,                                               *\n               WORKA=,                                                 *\n               MF=L\nSAFLISTL EQU   *-SAFLIST               LENGTH OF RACROUTE LIST FORM\nSAFCLASS DC    AL1(8),CL8'FACILITY'    CLASSNAME RACROUTE (FAST)AUTH\n*\nSAFENT   DS    0CL10                   RACROUTE ENTITY NAME     @921218\nENTL1    DC    AL2(0)                  BUFFER LENGTH            @921218\nENTL2    DC    AL2(6)                  ENTITY LENGTH            @951219\nENTITY   DC    CL6'$TSTVS'             entity name              @921218\n         DC    CL34' '                 34 blanks for ACF2       @930506\n*\nPWD      DC    AL1(8)                  password length          @921218\nPASSWORD DS    CL8                     real password            @921218\n*\nUSER     DC    AL1(8)                  userid length            @921218\nUSERID   DS    CL8                     real userid              @921218\n*\nLUTSTVS  DC    CL8'LUTSTVS'            input source/terminal    @921218\n         TITLE 'Message block'\nMSG25    DC    CL66'EDT303E No security system active, bypass userid ch*\n               eck...'\nMSG26    DC    CL66'EDT304E Userid has no access to the ''TSTVS'' progr*\n               am'\nMSG27    DC    CL66'EDT309I Userid has been verified and accepted'\nMSG28    DC    CL66'EDT306W Userid=xxxxxxxx, unauthorized password'\nMSG29    DC    CL66'EDT307W Userid=xxxxxxxx, password has been expired'\n*\nMSG98    WTO   '                                                       X\n                          ',ROUTCDE=(9),MF=L\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT068/FILE068.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT068", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}