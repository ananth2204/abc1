
     The zap is fitted on various levels of the module IDCLC01, which
belongs to load module IDCLC01.  In XA DFP 2.4 base level, the mod is
done to the first branch of nine similar compares and branches that
occur one after the other as follows:
                                    (This is from source code.)
         C     @02,FDTPTR+80(,@15)
         BNE   @RF01262           <-----   (Zap 4770 to 4700 here)
         C     @02,FDTPTR+8(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+96(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+100(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+104(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+92(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+56(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+64(,@15)
         BNE   @RF01262
         C     @02,FDTPTR+60(,@15)
         BNE   @RF01263

      Because of changes in the PL/AS compiler (whichever one is
being used now--it doesn't matter to us) this logic is done differently
in MVS/ESA 4:

                    (This is from READOBJ output of PDSTOOLS.)
*     This module is at PTF level UY83416    (MVS/ESA 4.2 - DFP 3.3.1)
                                                            Displacement
         L     R14,88(,R2)             58E0 2058        *.\..*     1E26  001E26
         LTR   R14,R14                 12EE             *..*       1E2A  001E2A
 ---->   BNZ   3731(,R9) (Zap to 4700) 4770 9E93        *...l*     1E2C  001E2C
         L     R15,16(,R2)             58F0 2010        *.0..*     1E30  001E30
         LTR   R15,R15                 12FF             *..*       1E34  001E34
         BNZ   3731(,R9)               4770 9E93        *...l*     1E36  001E36
         L     R0,104(,R2)             5800 2068        *....*     1E3A  001E3A
         LTR   R0,R0                   1200             *..*       1E3E  001E3E
         BNZ   3731(,R9)               4770 9E93        *...l*     1E40  001E40
         L     R1,108(,R2)             5810 206C        *...%*     1E44  001E44
         LTR   R1,R1                   1211             *..*       1E48  001E48
         BNZ   3731(,R9)               4770 9E93        *...l*     1E4A  001E4A
         L     R14,112(,R2)            58E0 2070        *.\..*     1E4E  001E4E
         LTR   R14,R14                 12EE             *..*       1E52  001E52
         BNZ   3731(,R9)               4770 9E93        *...l*     1E54  001E54
         L     R15,100(,R2)            58F0 2064        *.0..*     1E58  001E58
         LTR   R15,R15                 12FF             *..*       1E5C  001E5C
         BNZ   3731(,R9)               4770 9E93        *...l*     1E5E  001E5E
         L     R0,64(,R2)              5800 2040        *... *     1E62  001E62
         LTR   R0,R0                   1200             *..*       1E66  001E66
         BNZ   3731(,R9)               4770 9E93        *...l*     1E68  001E68
         L     R1,72(,R2)              5810 2048        *....*     1E6C  001E6C
         LTR   R1,R1                   1211             *..*       1E70  001E70
         BNZ   3731(,R9)               4770 9E93        *...l*     1E72  001E72
         L     R2,68(,R2)              5820 2044        *....*     1E76  001E76
         LTR   R2,R2                   1222             *..*       1E7A  001E7A
         BNZ   3727(,R9)               4770 9E8F        *....*     1E7C  001E7C

      The module IDCLC01 in DFSMS 1.1.0 has been expanded a lot, but
the modification is done similarly, as follows:

*     This module is at PTF level UY86466    (MVS/ESA 4.3 - DFSMS 1.1.0)
                                                            Displacement
         L     R14,88(,R3)             58E0 3058        *.\..*     3088  00AF30
         LTR   R14,R14                 12EE             *..*       308C  00AF34
 ---->   BNZ   247(,R10) (Zap to 4700) 4770 A0F7        *...7*     308E  00AF36
         L     R15,16(,R3)             58F0 3010        *.0..*     3092  00AF3A
         LTR   R15,R15                 12FF             *..*       3096  00AF3E
         BNZ   247(,R10)               4770 A0F7        *...7*     3098  00AF40
         L     R0,104(,R3)             5800 3068        *....*     309C  00AF44
         LTR   R0,R0                   1200             *..*       30A0  00AF48
         BNZ   247(,R10)               4770 A0F7        *...7*     30A2  00AF4A
         L     R1,108(,R3)             5810 306C        *...%*     30A6  00AF4E
         LTR   R1,R1                   1211             *..*       30AA  00AF52
         BNZ   247(,R10)               4770 A0F7        *...7*     30AC  00AF54
         L     R14,112(,R3)            58E0 3070        *.\..*     30B0  00AF58
         LTR   R14,R14                 12EE             *..*       30B4  00AF5C
         BNZ   247(,R10)               4770 A0F7        *...7*     30B6  00AF5E
         L     R15,100(,R3)            58F0 3064        *.0..*     30BA  00AF62
         LTR   R15,R15                 12FF             *..*       30BE  00AF66
         BNZ   247(,R10)               4770 A0F7        *...7*     30C0  00AF68
         L     R0,64(,R3)              5800 3040        *... *     30C4  00AF6C
         LTR   R0,R0                   1200             *..*       30C8  00AF70
         BNZ   247(,R10)               4770 A0F7        *...7*     30CA  00AF72
         L     R1,72(,R3)              5810 3048        *....*     30CE  00AF76
         LTR   R1,R1                   1211             *..*       30D2  00AF7A
         BNZ   247(,R10)               4770 A0F7        *...7*     30D4  00AF7C
         L     R3,68(,R3)              5830 3044        *....*     30D8  00AF80
         LTR   R3,R3                   1233             *..*       30DC  00AF84
         BNZ   243(,R10)               4770 A0F3        *...3*     30DE  00AF86

The idea is that you have to find a similar pattern of nine sets of
instructions in module IDCLC01 and zap the branch of the first set
to a noop (4770 to 4700).

