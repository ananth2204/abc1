{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011131000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE048.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE048.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x02'", "DS1TRBAL": "b'\\xd8\\x16'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00^\\x00\\x08\\x00_\\x00\\x00\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00\\x11\\x01\\x192\\x8f\\x01\\x192\\x8f\\x12I\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-11-24T00:00:00", "modifydate": "2019-11-24T12:49:11", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-498"}, "text": "REGULAR CBT TAPE - VERSION 498    FILE:  048\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT498.FILE048\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 15 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,892 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/24/19    12:49:11    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE048": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00\\x02\\x01\\x192\\x8f\\x01\\x192\\x8f\\x12I\\x00P\\x00P\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-11-24T00:00:00", "modifydate": "2019-11-24T12:49:02", "lines": 80, "newlines": 80, "modlines": 0, "user": "CBT-498"}, "text": "//***FILE 048 is a pds which contains the LISTVOL and LISTSPC       *   FILE 048\n//*           TSO commands, and it contains the LOCINDEX            *   FILE 048\n//*           subroutine, which they both need.  Both commands      *   FILE 048\n//*           have been \"modernized\" somewhat (see below for        *   FILE 048\n//*           details as to how).                                   *   FILE 048\n//*                                                                 *   FILE 048\n//*           HELP data for both commands is also contained in      *   FILE 048\n//*           this file.  These programs used to exist in separate  *   FILE 048\n//*           files on the tape (since 1976 or so), and now these   *   FILE 048\n//*           files have been combined into one file.               *   FILE 048\n//*                                                                 *   FILE 048\n//*      email:  sbgolob@cbttape.org                                *   FILE 048\n//*                                                                 *   FILE 048\n//*       Modifications:                     (S.Golob 2006/Jan 04)  *   FILE 048\n//*                                                                 *   FILE 048\n//*       1.  IBM standard macro YREGS was inserted in the code     *   FILE 048\n//*           of both programs instead of the EQUATE macro, for     *   FILE 048\n//*           easier assembly.  Sample assembly JCL added.          *   FILE 048\n//*                                                                 *   FILE 048\n//*       2.  The GETMAIN in LOCINDEX was doubled.  I don't know    *   FILE 048\n//*           if this is SUPPOSED to work, but it did.  More        *   FILE 048\n//*           datasets can now be displayed.  (Now perhaps 800.)    *   FILE 048\n//*                                                                 *   FILE 048\n//*       3.  All TPUTs were converted to PUTLINE using Howard      *   FILE 048\n//*           Dean and Jim Elsworth's method of doing the PUTLINE   *   FILE 048\n//*           setup in an external module called EPUTL and calling  *   FILE 048\n//*           EPUTL with a macro called APUT that has the same      *   FILE 048\n//*           coding rules as a single line TPUT.                   *   FILE 048\n//*                                                                 *   FILE 048\n//*       4.  To take advantage of the PUTLINE outputs, two REXX    *   FILE 048\n//*           execs called TSOE and TSOB from Mark Zelden were      *   FILE 048\n//*           included to trap the SYSOUT output.  TSOE will ISPF   *   FILE 048\n//*           Edit the trapped output, and TSOB will ISPF Browse    *   FILE 048\n//*           it.  TSOV (made by me) will ISPF View it.             *   FILE 048\n//*                                                                 *   FILE 048\n//*       Output Samples:                                           *   FILE 048\n//*                                                                 *   FILE 048\n//*       (Note that DSAT from File 296 gives combined outputs      *   FILE 048\n//*        from these two, using one command.  In DSAT, the         *   FILE 048\n//*        space and volume serial information is combined in       *   FILE 048\n//*        one command.  However, the DSAT width is greater than    *   FILE 048\n//*        80 characters wide in output.  DSAT also includes DCB    *   FILE 048\n//*        attributes of the datasets.)                             *   FILE 048\n//*                                                                 *   FILE 048\n//*   From LISTVOL:       LISTVOL LEV(IBMUSER)                      *   FILE 048\n//*                                                                 *   FILE 048\n//*       VOLUME  DATASET NAME                                      *   FILE 048\n//*         VPMVSH  IBMUSER.B.ASM                                   *   FILE 048\n//*         DATA05  IBMUSER.BDM.I130.LOAD                           *   FILE 048\n//*         DATA05  IBMUSER.BDM.I130.OBJ                            *   FILE 048\n//*         DATA05  IBMUSER.BDM.I138.CNTL                           *   FILE 048\n//*         WORK05  IBMUSER.BDM.I138.LOAD                           *   FILE 048\n//*         WORK04  IBMUSER.BDM.I138.OBJ                            *   FILE 048\n//*         DATA05  IBMUSER.BDM.SYSPRINT                            *   FILE 048\n//*         DATA05  IBMUSER.BDM.SYSPRINT.IEWL                       *   FILE 048\n//*         WORKA4  IBMUSER.BRODCAST                                *   FILE 048\n//*         WORK07  IBMUSER.CBT487.FILE185.TEST                     *   FILE 048\n//*         WORKE3  IBMUSER.CCKD.ASM                                *   FILE 048\n//*         WORK08  IBMUSER.CCKD.ASM.XMI                            *   FILE 048\n//*         WORKE3  IBMUSER.CCKD.BZLIB.C                            *   FILE 048\n//*         WORKE3  IBMUSER.CCKD.BZLIB.H                            *   FILE 048\n//*                                                                 *   FILE 048\n//*   From LISTSPC:       LISTSPC LEV(IBMUSER)                      *   FILE 048\n//*                                                                 *   FILE 048\n//*       DSORG ALLOC UNUSED EXTENTS DSNAME                         *   FILE 048\n//*         PO  10943    790     1   IBMUSER.B.ASM                  *   FILE 048\n//*         PS     15     15     1   IBMUSER.BDM.I130.LOAD          *   FILE 048\n//*         PS     15     15     1   IBMUSER.BDM.I130.OBJ           *   FILE 048\n//*         PS     15     15     1   IBMUSER.BDM.I138.CNTL          *   FILE 048\n//*         PO     15     13     1   IBMUSER.BDM.I138.LOAD          *   FILE 048\n//*         PS     15     14     1   IBMUSER.BDM.I138.OBJ           *   FILE 048\n//*         PS     15     15     1   IBMUSER.BDM.SYSPRINT           *   FILE 048\n//*         PS     15     15     1   IBMUSER.BDM.SYSPRINT.IEWL      *   FILE 048\n//*         PS      1      1     1   IBMUSER.BRODCAST               *   FILE 048\n//*         PO     59     14     1   IBMUSER.CBT487.FILE185.TEST    *   FILE 048\n//*         PO     65      1    14   IBMUSER.CCKD.ASM               *   FILE 048\n//*         PS     18     10     1   IBMUSER.CCKD.ASM.XMI           *   FILE 048\n//*         PO      7      3     1   IBMUSER.CCKD.BZLIB.C           *   FILE 048\n//*         PO      2      1     1   IBMUSER.CCKD.BZLIB.H           *   FILE 048\n//*                                                                 *   FILE 048\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "APUT": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x891\\x8f\\x00\\x891\\x8f\\x108\\x00\\x8a\\x00\\x8a\\x00\\x00\\xc8\\xd4\\xc4\\xc5\\xc1\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-11-14T00:00:00", "modifydate": "1989-11-14T10:38:00", "lines": 138, "newlines": 138, "modlines": 0, "user": "HMDEAN"}, "text": "         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EPUTL": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00Q\\x01\\x185/\\x01\\x19!O\\x129\\x00\\xcb\\x00\\xcb\\x00\\x01\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2018-12-18T00:00:00", "modifydate": "2019-08-02T12:39:51", "lines": 203, "newlines": 203, "modlines": 1, "user": "SBGOLOB"}, "text": "EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*  CLEANED A BIT  . . . 08/17\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATER  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUMENTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFORE R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nR3       EQU   3                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\n         DS    0D\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   R14,R12,12(R13)    SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES,SP=0       RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    R1,8(,R13)         OUR SAVE AREA POINTER\n         ST    R13,4(,R1)         POINTER TO CALLER'S SAVE AREA\n         LR    R13,R1             @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(,R13)        POINT TO CALLER'S RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 RC IF BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 RC IF BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(,RML)              MESSAGE LENGTH\n         STH   R15,PUTLEN               PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(,R2)       @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(,R2)               REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    R2,R13                   @OUR SAVE AREA\n         LR    R3,R15                   SAVE RETURN CODE\n         L     R13,4(,R13)              @CALLER'S SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,R3                   RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLER'S REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTSPC": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00B\\x00\\x873O\\x01\\x19%\\x9f\\x11&\\x04\\x08\\x02\\xa8\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1987-11-30T00:00:00", "modifydate": "2019-09-16T11:26:42", "lines": 1032, "newlines": 680, "modlines": 0, "user": "SBGOLOB"}, "text": "*          DATA SET CBT501     AT LEVEL 001 AS OF 11/03/87\n*          DATA SET CBT501     AT LEVEL 002 AS OF 12/16/75              00001\n         TITLE 'LISTSPC - DOCUMENTATION'                                00002\n*.....................................................................* 00003\n*  MAINTENANCE:                                                       * 00004\n*  06/26/86 - CHECK FOR RC=X'0028' + '002C' (40/44) FROM     LMB-CBT  * 00005\n*             FROM LOCINDEX (INSUFFICIENT WORKING STORAGE    LMB-CBT  * 00006\n*             FOR SVC26).  USE LISTC OR DSAT COMMAND INSTEAD LMB-CBT  * 00007\n*  11/03/87 - UPDATED TRACKS USED FOR 3380 K'S               LMN-CBT  * 00008\n*  01/03/06 - ADDED SPACE IN GETMAIN, CONVERT TPUT TO PUTLINE    SBG  * 00009\n*                                                                     * 00011\n*.....................................................................* 00010\n*.                                                                   .* 00011\n*.   LISTSPC                                                         .* 00012\n*.                                                                   .* 00013\n*.....................................................................* 00014\n*.                                                                   .* 00015\n*.   1.0  GENERAL DESCRIPTION                                        .* 00016\n*.                                                                   .* 00017\n*.   THIS TSO COMMAND IS A MULTI-PURPOSE PROGRAM FOR LISTING         .* 00018\n*.   THE SPACE (IN TRACKS) USED BY DATASETS AND THE FREE SPACE       .* 00019\n*.   ON DISK VOLUMES.  IT CAN ALSO LIST THE EXTENTS AND VOLSER       .* 00020\n*.   OF DATASETS.                                                    .* 00021\n*.                                                                   .* 00022\n*.....................................................................* 00023\n*.                                                                   .* 00024\n*.....................................................................* 00025\n*.                                                                   .* 00026\n*.   2.0  COMMAND SYNTAX                                             .* 00027\n*.                                                                   .* 00028\n*.    LISTSPC  DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .* 00029\n*.             VOLUME(VOLUME-LIST) EXTENTS                           .* 00030\n*.                                                                   .* 00031\n*.       DATASET(DSNAME-LIST)                                        .* 00032\n*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .* 00033\n*.             HAVE THE SPACE INFORMATION LISTED.  TSO DATASET       .* 00034\n*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .* 00035\n*.                                                                   .* 00036\n*.       LEVEL(INDEX-STRUCTURE)                                      .* 00037\n*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .* 00038\n*.             TO HAVE THE SPACE INFORMATION LISTED FOR EACH         .* 00039\n*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .* 00040\n*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .* 00041\n*.             AS THE HIGH-LEVEL QUALIFIER OR IT MAY BE AN INDEX     .* 00042\n*.             LEVEL.                                                .* 00043\n*.                                                                   .* 00044\n*.       VOLUME(VOLUME-LIST)                                         .* 00045\n*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .* 00046\n*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .* 00047\n*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .* 00048\n*.          -  IF USED AS THE ONLY PARAMETER, SPECIFIES A LIST OF    .* 00049\n*.             VOLUMES FOR WHICH FREE SPACE INFORMATION WILL BE      .* 00050\n*.             LISTED.                                               .* 00051\n*.                                                                   .* 00052\n*.       EXTENTS                                                     .* 00053\n*.          -  SPECIFIES THAT THE VOLSER AND THE DATASET'S EXTENTS   .* 00054\n*.             (IN A HEXADECIMAL FORMAT) WILL BE LISTED FOR EACH     .* 00055\n*.             DATASET.                                              .* 00056\n*.                                                                   .* 00057\n*.     NOTE:  THE USE OF THE 'VOLUME' AND THE 'EXTENTS'              .* 00058\n*.            PARAMETERS CAN BE RESTRICTED TO CERTAIN USERIDS        .* 00059\n*.            THROUGH THE USE OF BIT 0 IN THE FIELD LABELED          .* 00060\n*.            'FLAG'.                                                .* 00061\n*.                                                                   .* 00062\n*.....................................................................* 00063\n*.                                                                   .* 00064\n*.....................................................................* 00065\n*.                                                                   .* 00066\n*.   3.0  PROGRAM STRUCTURE                                          .* 00067\n*.                                                                   .* 00068\n*.                                                                   .* 00069\n*.   3.0.1  INITIALIZATION                                           .* 00070\n*.                                                                   .* 00071\n*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .* 00072\n*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .* 00073\n*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .* 00074\n*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .* 00075\n*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .* 00076\n*.                                                                   .* 00077\n*.                                                                   .* 00078\n*.   3.0.2  DATASET ROUTINE                                          .* 00079\n*.                                                                   .* 00080\n*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .* 00081\n*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .* 00082\n*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .* 00083\n*.   PRINT ROUTINE.                                                  .* 00084\n*.                                                                   .* 00085\n*.                                                                   .* 00086\n*.   3.0.3  LEVEL ROUTINE                                            .* 00087\n*.                                                                   .* 00088\n*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .* 00089\n*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .* 00090\n*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .* 00091\n*.                                                                   .* 00092\n*.                                                                   .* 00093\n*.   3.0.4  VOLUME ROUTINE                                           .* 00094\n*.                                                                   .* 00095\n*.   THIS ROUTINE IS ENTERED IF THE 'VOLUME' PARAMETER IS            .* 00096\n*.   SPECIFIED AS THE ONLY PARAMETER.  IT 'OBTAIN'S THE FORMAT 4     .* 00097\n*.   DSCB AND EXTRACTS CERTAIN FIELDS.  IT THEN 'OBTAIN'S ALL        .* 00098\n*.   OF THE FORMAT 5 DSCB RECORDS AND ACCUMULATES THE FREE           .* 00099\n*.   EXTENTS.                                                        .* 00100\n*.                                                                   .* 00101\n*.                                                                   .* 00102\n*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .* 00103\n*.                                                                   .* 00104\n*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB AND THE FORMAT 3       .* 00105\n*.   DSCB (IF ONE EXISTS) FOR A DATASET AND ACCUMULATES THE          .* 00106\n*.   EXTENTS.  IT THEN PRINTS THE DSORG, # OF ALLOCATED TRACKS,      .* 00107\n*.   # OF UNUSED TRACKS, # OF EXTENTS, AND THE DSNAME.  IF THE       .* 00108\n*.   'EXTENTS' KEYWORD WAS SPECIFIED, IT ALSO PRINTS THE VOLSER      .* 00109\n*.   AND THE EXTENTS FOR THE DATASET.                                .* 00110\n*.                                                                   .* 00111\n*.....................................................................* 00112\n         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n         TITLE 'LISTSPC - LIST SPACE COMMAND'                           00113\nLISTSPC  CSECT                                                          00114\nLISTSPC  AMODE 31                                                       00114\nLISTSPC  RMODE 24                                                       00114\n         STM   R14,R12,12(R13)                                          00115\n         USING LISTSPC,R15                                              00116\n         ST    R13,SAVE+4                                               00117\n         LA    R13,SAVE                                                 00118\n         B     BEGIN                                                    00119\nSAVE     DC    18F'0'                                                   00120\n         DROP  R15                                                      00121\n         USING SAVE,R13                                                 00122\n         TITLE 'LISTSPC - GETMAIN AND PARSE'                            00123\nBEGIN    LR    R4,R1                                                    00124\n         USING CPPL,R4                                                  00125\n         LA    R0,LWORK            GET LENGTH OF WORK AREA              00126\n         A     R0,=F'4096'         GET EXTRA 4K FOR LOCINDEX WORK  SBG  00127\n         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1                            00128\n         GETMAIN R,LV=(0)                                               00129\n         LR    R12,R1               SAVE ADDR OF WORK AREA              00130\n         USING WORKAREA,R12                                             00131\n         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA         00132\n         ST    R0,PARM+12           SAVE ADDR IN PARM LIST              00133\n         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST           00134\n         MVI   WXTNT+4,X'04'                                            00135\n         LA    R3,WPPL             GET ADDR OF PPL                      00136\n         USING PPL,R3                                                   00137\n         L     R0,CPPLCBUF                                              00138\n         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER          00139\n         L     R0,CPPLUPT                                               00140\n         ST    R0,PPLUPT           SAVE ADDR OF UPT                     00141\n         L     R0,CPPLPSCB                                              00142\n         LR    R10,R0              GET ADDR OF USERID FROM PSCB         00143\n         SR    R11,R11                                                  00144\n         IC    R11,7(R10)          GET LENGTH OF USERID                 00145\n         BCTR  R11,0                                                    00146\n*        CLC   0(6,R10),=C'SYSTEM'                           ** VPI **  00147\n*        BE    AUTHRZD                                       ** VPI **  00148\n*        CLC   0(6,R10),=C'CONSUT'                           ** VPI **  00149\n*        BNE   LECT                                          ** VPI **  00150\nAUTHRZD  OI    FLAG,X'80'                                               00151\nLECT     L     R0,CPPLECT                                               00152\n         ST    R0,PPLECT           SAVE ADDR OF ECT                     00153\n         LA    R0,CPECB                                                 00154\n         ST    R0,PPLECB           SAVE ADDR OF ECB                     00155\n         XC    CPECB,CPECB         CLEAR ECB                            00156\n         L     R0,=A(PARSLIST)                                          00157\n         ST    R0,PPLPCL           SAVE ADDR OF PCL                     00158\n         LA    R0,WPDL                                                  00159\n         ST    R0,PPLANS           SAVE ADDR OF PDL AREA                00160\n         XC    PPLUWA,PPLUWA       CLEAR UWA                            00161\n         LR    R1,R3               PASS ADDR OF PPL TO PARSE            00162\n         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE        00163\n         LTR   R15,R15             PARSE ERROR                          00164\n         BNZ   RETC                 YES                                 00165\n         TM    PPLANS,X'FF'        PARSE ERROR                          00166\n         BO    RETC                 YES                                 00167\n         DROP  R3,R4                                                    00168\n         L     R3,WPDL             GET ADDR OF PDL                      00169\n         USING IKJPARMD,R3                                              00170\n         TM    EXTENT+1,X'01'      EXTENT SPECIFIED?                    00171\n         BZ    *+8                  NO                                  00172\n         OI    FLAG,X'20'           YES, SET FLAG BIT                   00173\n         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?                   00174\n         BO    DSNRTN                YES                                00175\n         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?              00176\n         BO    LEVEL                 YES                                00177\n         TM    VOL+6,X'80'          VOLUME SPECIFIED?                   00178\n         BO    FREEA                 YES                                00179\n         B     EUSLO                NO PARMS - LISTS FOR USERID         00180\n         TITLE 'LISTSPC - DATASET NAME ROUTINE'                         00181\nDSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST                   00182\n*        LA    R0,L'MSG1                                                00183\n*        LA    R1,MSG1                                                  00184\n*        SVC   93                  TPUT HEADING                         00185\n         APUT  MSG1,L'MSG1\nDSNAME   L     R5,0(R4)             POINT TO DSNAME                     00186\n         LH    R6,4(R4)             GET LENGTH OF DSNAME                00187\n         BCTR  R6,0                                                     00188\n         MVI   DSN1,X'40'                                               00189\n         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA                  00190\n         LA    R8,DSN1              POINT TO DSN WORK AREA              00191\n         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?         00192\n         BO    MVCDSNAM               YES                               00193\n         EX    R11,USIDMVC         MOVE USERID TO WORK AREA             00194\n         LA    R8,1(R11,R8)        BUMP PAST USERID                     00195\n         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA             00196\n         LA    R8,1(0,R8)          BUMP PAST                            00197\nMVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA             00198\n         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA      00199\n         TM    FLAG,X'80'          AUTHORIZED USER?                     00200\n         BZ    LOCDSN               NO                                  00201\n         TM    VOL+6,X'80'         VOLUME SPECIFIED?                    00202\n         BZ    LOCDSN               NO, LOCATE DSN                      00203\n         LA    R1,VOLS             POINT TO VOLSER WORK AREA            00204\n         L     R5,VOL              POINT TO VOLUME PARAMETER            00205\n         LH    R6,VOL+4            GET LENGTH OF VOL PARM               00206\n         BCTR  R6,0                                                     00207\n         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA    00208\n         B     BALOBTN             BYPASS LOCATE                        00209\nLOCDSN   OI    FLAG,X'10'                                               00210\n         LOCATE INDS                                                    00211\n         LTR   R15,R15              DID IT FIND VOL SER                 00212\n         BNZ   ERR03                 NO WRITE ERROR MSG                 00213\n         NI    FLAG,X'EF'                                               00214\n         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER                00215\n         SPACE 2                                                        00216\nBALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE     00217\nRETDSN   L     R4,24(R4)           GET DSN LINK POINTER                 00218\n         C     R4,ENDLIST          END OF LIST?                         00219\n         BE    RETC                 YES                                 00220\n         B     DSNAME               NO, GET NEXT DSNAME                 00221\n         TITLE 'LISTSPC - LEVEL ROUTINE'                                00222\nEUSLO    EQU   *                                                        00223\n**     FOR ENTIRE USERID LOGGED ON                                      00224\n         MVC   USERID(7),0(R10)        MOVE IN USERID                   00225\n         B     GOTUS               BRANCH TO GOT USERID                 00226\n         SPACE 3                                                        00227\nLEVEL    EQU   *                                                        00228\n         L     R5,LEV              POINT TO INDEX STRUCTURE             00229\n         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT           00230\n         BCTR  R6,0                                                     00231\n         LA    R8,USERID           POINT TO WORK AREA                   00232\n         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA    00233\nGOTUS    EQU   *                                                        00234\n*        LA    R0,L'MSG1                                                00235\n*        LA    R1,MSG1                                                  00236\n*        SVC   93                  TPUT HEADING                         00237\n         APUT  MSG1,L'MSG1\n         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID    00238\nLOOP     EQU   *                   LOOP FOR DATASET IN USERID           00239\n         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)                00240\n         LA    R1,PARM             POINT TO PARM LIST                   00241\n         BALR  R14,R15             GO TO LOCINDEX                       00242\n         L     R14,8(R1)           LOAD PTR TO VOL-SER                  00243\n         MVC   VOLID,0(R14)        SAVE THE VOLSER                      00244\n         CH    R15,=H'18'          WAS RC=X'0012'?                      00245\n         BE    NOTDISK             YES, IT IS TAPE ON MULTI-VOLUMES     00246\n         CH    R15,=H'40'          WAS RC=0028?                         00247\n         BE    INSUFSTO            YES, THERE WAS INSUFFICIENT STORAGE  00248\n         CH    R15,=H'44'          WAS RC=002C?                         00249\n         BE    INSUFSTO            YES, THERE WAS INSUFFICIENT STORAGE  00250\n         B     *+4(R15)            BRANCH , DEP ON RETURN CODE          00251\n         B     OK                  0-GET INFOR FOR DSN & CONT           00252\n         B     NOUSER              4-PRINT MSG & RETRUN TO SYS          00253\n         B     NOTDISK             8-PRINT MSG&CONTINUE                 00254\n         B     MULTIVOL            12-PRINT MSG&CONTINUE                00255\n         B     RETC                16-FINISHED-RETURN TO SYS            00256\n         B     RDERR               20-PRINT MSG&RETRUN TO SUS           00257\nOK       BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE     00258\n         B     LOOP                GET NEXT DSNAME FROM LOCINDEX        00259\n         SPACE 3                                                        00260\n         TITLE 'LISTSPC - VOLUME ROUTINE'                               00261\nFREEA    EQU   *                                                        00262\n** TO GET AVAILABLE SPACE ON PARTICULAR VOLUME                          00263\n         TM    FLAG,X'80'          AUTHORIZED USER?                     00264\n         BZ    ERRF                 NO                                  00265\n*        LA    R0,L'MSG4                                                00266\n*        LA    R1,MSG4                                                  00267\n*        SVC   93                  TPUT HEADING                         00268\n         APUT  MSG4,L'MSG4\n         SPACE 2                                                        00269\n         LA    R4,VOL              POINT TO VOLUME LIST                 00270\nVOLLOOP  ST    R4,OBTNSAVE         SAVE ADDRESS                         00271\n         MVI   MSG2,X'40'                                               00272\n         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA                   00273\n         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER                 00274\n         LA    R1,VOLS             POINT TO VOLSER WORK AREA            00275\n         L     R5,0(R4)            POINT TO VOLUME PARM                 00276\n         LH    R6,4(R4)            GET LENGTH OF VOL PARM               00277\n         BCTR  R6,0                                                     00278\n         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA    00279\n         LA    R1,MSG2             POINT TO MESSAGE AREA                00280\n         EX    R6,MVCVOLS          MOVE VOLSER TO MESSAGE AREA          00281\n         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...            00282\n         MVC   DSN1+1(43),DSN1     ...INTO DSN1                         00283\n         OBTAIN SERCHCAM                                                00284\n         CLI   BUF1,X'F4'          DID IT READ OK?                      00285\n         BNE   ERRF4               NO                                   00286\n         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL                  00287\n         MVC   VOLDSCTK+1(1),BUF1+30   GET NUM OF DSCBS PER TRK         00288\n         MVC   VOLF4CHR(4),BUF1+63 GET CCHH OF START OF VTOC            00289\n         MVI   VOLF4CHR+4,X'01'    F4 DSCB IS FIRST REC                 00290\n         LH    RCC,VOLF4CHR        SETUP...                             00291\n         LH    RHH,VOLF4CHR+2         DISK...                           00292\n         SR    RR,RR                     ADDRESSING...                  00293\n         IC    RR,VOLF4CHR+4                                            00294\n         MVC   WXTNT(4),BUF1+63    MOVE BEGIN XTNT TO WORK AREA         00295\n         UNPK  MSG2+29(9),WXTNT(5) UNPACK INTO MESSAGE AREA             00296\n         TR    MSG2+29(8),TRTBL    TRANSLATE EXTENT                     00297\n         MVC   WXTNT(4),BUF1+67    MOVE END XTNT TO WORK AREA           00298\n         UNPK  MSG2+38(9),WXTNT(5) UNPACK INTO MESSAGE AREA             00299\n         TR    MSG2+38(8),TRTBL    TRANSLATE EXTENT                     00300\n         SR    R9,R9                                                    00301\n         LH    R9,BUF1+6             MOVE IN NUMBER FREE DSCB           00302\n         CVD   R9,WKD                                                   00303\n         MVC   MSG2+6(6),MASKED        MOVE IN MASK                     00304\n         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB                   00305\n         LH    R1,VOLNO            GET NUM VOLS PROCESSED               00306\n         LA    R1,1(R1)            BUMP                                 00307\n         STH   R1,VOLNO            REPLACE                              00308\n         LA    RR,1(RR)            BUMP RECORD PTR                      00309\n         CH    RR,VOLDSCTK         TEST FOR LAST REC ON TRK             00310\n         BNH   VBSET               GO SET VTOCCHHR                      00311\n         LA    RR,1                RESET RR TO 1                        00312\n         LA    RHH,1(RHH)          BUMP TRK COUNTER                     00313\n         CH    RHH,VOLTKCYL        PAST END OF CYL?                     00314\n         BL    VBSET               GO SET VTOCCHHR                      00315\n         SR    RHH,RHH             ELSE SET RHH TO TRK 0                00316\n         LA    RCC,1(RCC)          BUMP TO NEXT CYL                     00317\nVBSET    STH   RCC,VTOCCHHR        SET...                               00318\n         STH   RHH,VTOCCHHR+2         UP...                             00319\n         STC   RR,VTOCCHHR+4            VTOCCHHR                        00320\n         SR    R4,R4               ZERO COUNTER                         00321\n         SPACE 2                                                        00322\nPFOBT    OBTAIN SEEKCAM                                                 00323\n         LA    R2,1                INDICATE FIRST EXTENT                00324\n         LA    R3,BUF1+4           POINT TO FIRST EXTENT                00325\nPFLOOP   CLC   0(5,R3),=D'0'       LAST EXTENT?                         00326\n         BE    PFGOT               EXIT IF SO                           00327\n         MVC   HWK1(2),2(R3)       MOVE NUM CYLS TO HWD                 00328\n         LH    R1,HWK1             LOAD                                 00329\n         MH    R1,VOLTKCYL         CONVERT TO TRKS                      00330\n         SR    R0,R0               ZERO R0                              00331\n         IC    R0,4(R3)            LOAD NUM TRKS                        00332\n         AR    R1,R0               ADD TRKS                             00333\n         AR    R4,R1               ACCUMULATE                           00334\n         LA    R2,1(R2)            BUMP CTR                             00335\n         CH    R2,=H'9'            NINTH EXTENT?                        00336\n         BE    PFXT9               BRANCH IF SO                         00337\n         CH    R2,=H'27'           27TH EXTNET?                         00338\n         BE    PFXT27              BRANCH IF SO                         00339\n         LA    R3,5(R3)            BUMP NORMALLY                        00340\n         B     PFLOOP              AND CONTINUE                         00341\nPFXT9    LA    R3,6(R3)            SKIP OVER F5 IF AT DSCH+44           00342\n         B     PFLOOP              AND CONTINUE                         00343\nPFXT27   AH    R2,PEXCTR           ACCUM EXT TOTALS                     00344\n         BCTR  R2,0                                                     00345\n         STH   R2,PEXCTR           SAVE EXT TOTALS                      00346\n         CLC   BUF1+135(5),=D'0'   PTR TO NEXT F5?                      00347\n         BE    PFGOT               DONE. NO MORE F5                     00348\n         MVC   VTOCCHHR(5),BUF1+135                                     00349\n         B     PFOBT               GO READ NEXT F5                      00350\nPFGOT    EQU   *                                                        00351\n         AH    R2,PEXCTR           ACCUM EXTENT TOTALS                  00352\n         CVD   R2,WKD              CONVERT NUM EXTENTS                  00353\n         MVC   MSG2+14(4),MASKED     MOVE IN MASK                       00354\n         ED    MSG2+14(4),WKD+6      EDIT NUM EXTENTS                   00355\n         CVD   R4,WKD              CONVERT NUM TRKS FREE                00356\n         MVC   MSG2+21(6),MASKED     MOVE IN MASK                       00357\n         ED    MSG2+21(6),WKD+5      EDIT FREE TRKS                     00358\n         APUT  MSG2,76             WRITE FREE INFO                      00359\nVOLRET   L     R4,OBTNSAVE         LOAD POINTER TO VOLUME LIST          00360\n         L     R4,8(R4)            GET LINK POINTER                     00361\n         C     R4,ENDLIST          END OF LIST                          00362\n         BE    RETC                 YES                                 00363\n         B     VOLLOOP              NO, GET NEXT VOLUME                 00364\n         TITLE 'LISTSPC - OBTAIN AND PRINT ROUTINES'                    00365\n*   READ DSCB1 AND GET SPACE                                            00366\nOBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS              00367\n         MVC   DSNSAVE(44),DSN1                                         00368\n         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...            00369\n         MVC   DSN1+1(43),DSN1     ...INTO DSN1                         00370\n         OBTAIN SERCHCAM                                                00371\n         CH    R15,=H'4'           WAS VOLUME MOUNTED?                  00372\n         BE    NOTMTD              NO, GO SEND MESSAGE.                 00373\n         CLI   BUF1,X'F4'          DID IT READ OK?                      00374\n         BNE   ERRF4               NO                                   00375\n         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL                  00376\n         MVC   DSN1(44),DSNSAVE                                         00377\n         MVI   MSG2,X'40'                                               00378\n         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA                   00379\n         OBTAIN SERCHCAM                                                00380\n         LTR   R15,R15             DID OBTAIN WORK                      00381\n         BNZ   ERR03               NO - WRITE ERROR MSG                 00382\n         SPACE 2                                                        00383\n         CLI   BUF1,C'1'            IS IT F1 DSCB?                      00384\n         BNE   ERR01                NOT F1                              00385\n         LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA           00386\n         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED           00387\n         CLI   BUF1+56,X'00'       IS TRK UNUSED?                       00388\n         BE    *+8                  YES                                 00389\n         LA    R6,1(R6)             NO, ANOTHER TRACK                   00390\n         STH   R6,LASTTRK          SAVE LAST REL. TRK                   00391\n         MVC   DSORG,BUF1+38       SAVE DSORG                           00392\nAROUND   EQU   *                                                        00393\n* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE                         00394\n         CLI   BUF1+38,X'80'        IS IT IS                            00395\n         BNE   NIS                  NO                                  00396\n         MVC   MSG2+2(2),=C'IS'     YES - MOVE IN IS                    00397\n         B     GDSO                 BRANCH TO GOT DSORG                 00398\nNIS      CLI   BUF1+38,X'40'        IS IT PS                            00399\n         BNE   NPS                   NO                                 00400\n         MVC   MSG2+2(2),=C'PS'      YES-MOVE IN PS                     00401\n         B     GDSO                 BRANCH TO GOT DSORG                 00402\nNPS      CLI   BUF1+38,X'20'        IS IT DA                            00403\n         BNE   NDA                   NO                                 00404\n         MVC   MSG2+2(2),=C'DA'      YES - MOVE IN DA                   00405\n         B     GDSO                 BRANCH TO GOT DSORG                 00406\nNDA      CLI   BUF1+38,X'02'        IS IT PO                            00407\n         BNE   NPO                   NO                                 00408\n         MVC   MSG2+2(2),=C'PO'      YES - MOVE IN PO                   00409\n         B     GDSO                 BRANCH TO DSORG                     00410\nNPO      CLI   BUF1+38,X'01'        IS IT UNMOVEABLE                    00411\n         MVC   MSG2+2(2),=C' U'      YES                                00412\nGDSO     SR    R2,R2                ZERO REG 2                          00413\n         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS           00414\n         LA    R3,1                 SET EXTENT COUNTER                  00415\n         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION        00416\n         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB        00417\n         BZ    VVALID               YES, BYPASS ACCUMULATE              00418\n         LA    R5,BUF1+61           POINT TO FIRST EXTENT               00419\nVXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA             00420\n         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA               00421\n         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD                  00422\n         LH    R0,HWK1              LOAD                                00423\n         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD                  00424\n         LH    R1,HWK1              LOAD                                00425\n         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD                 00426\n         SH    R0,HWK1              SUBTRACT                            00427\n         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD                 00428\n         SH    R1,HWK1              SUBTRACT                            00429\n         MH    R0,VOLTKCYL          CONVERT CYL TO TRK                  00430\n         AR    R1,R0                GET TOTAL MINUS1                    00431\n         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE            00432\n         CR    R3,R2                DONE LAST EXTENT?                   00433\n         BE    VVALID               GO TO VVALID IF SO                  00434\n         LA    R3,1(R3)             BUMP TO EXTENT COUNTER              00435\n         CH    R3,=H'4'             FOURTH EXTENT?                      00436\n         BE    VXT4                   BRANCH IF SO                      00437\n         CH    R3,=H'8'             EIGHTTH EXTENT?                     00438\n         BE   VXT8                                                      00439\n         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER            00440\n         B     VXTLOOP              AND GO TO NEXT EXTENT               00441\nVXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)           00442\nVXT4OBT  OBTAIN SEEKCAM                                                 00443\n         CH    R15,=H'4'           WAS VOLUME MOUNTED?                  00444\n         BE    NOTMTD              NO, GO SEND MESSAGE.                 00445\n         CLI   BUF1+44,C'3'         IF IT F3 DSCB                       00446\n         BE    VXT4F3               BRANCH IF SO                        00447\n         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3            00448\n         B     VXT4OBT                                                  00449\nVXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3         00450\n         B     VXTLOOP              CONTINUE LOOP FOR SIZE              00451\nVXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB          00452\n         B     VXTLOOP              CONTINUE LOOP FOR SIZE              00453\nVVALID   EQU   *                                                        00454\n* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE                            00455\n         CVD   R4,WKD               CONVERT DEC. R4  #TRKS ALLOC        00456\n         MVC   MSG2+5(6),MASKED      MOVE MASKED FIELD IN               00457\n         ED    MSG2+5(6),WKD+5       EDIT  # TRKS MSG2+5                00458\n         TM    DSORG,X'42'        IS IT PO OR PS                        00459\n         BNZ   CVDU                  YES - BRANCH                       00460\n         MVI   MSG2+17,C'*'                                             00461\n         B     CVDX                 BRANCH TO EXTENT CONVERSION         00462\nCVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK            00463\n         N     R6,=X'0000FFFF'       TURN OFF HIGH ORDER BYTES LMN-CBT  00464\n         LR    R7,R4                                                    00465\n         SR    R7,R6                 R7 CONTAINS UNUSED SPACE           00466\n         CVD   R7,WKD               CONVERT DEC R7                      00467\n         MVC   MSG2+12(6),MASKED      MOVE IN MASKED FIELD              00468\n         ED    MSG2+12(6),WKD+5       EDIT # TRKD UNUSED                00469\nCVDX     CVD   R2,WKD                   PICK UP # EXTENTS               00470\n         MVC   MSG2+20(4),MASKED      MOVE IN MASKED FIELD              00471\n         ED    MSG2+20(4),WKD+6      EDIT # EXTENTS USED                00472\n         MVC   MSG2+27(44),DSN1     MOVE DSN TO PRINT LINE              00473\n         APUT  MSG2,76             WRITE OUT LINE                       00474\n         TM    FLAG,X'A0'          AUTHORIZED USER?                     00475\n         BNO   OBTNRET              NO                                  00476\n         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA            00477\n         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA          00478\nOUTLOOP  LA    R3,3                SET LOOP CONTROL                     00479\n         LA    R4,MSG2+8           POINT TO MESSAGE AREA                00480\n         MVI   MSG2+6,X'40'                                             00481\n         MVC   MSG2+7(69),MSG2+6   BLANK MESSAGE AREA                   00482\nINLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA           00483\n         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #                      00484\n         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #                   00485\n         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA         00486\n         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT                          00487\n         TR    2(8,R4),TRTBL       TRANSLATE EXTENT                     00488\n         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA           00489\n         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT                          00490\n         TR    11(8,R4),TRTBL      TRANSLATE EXTENT                     00491\n         LA    R9,10(R9)           BUMP TO NEXT EXTENT                  00492\n         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER            00493\n         BCTR  R2,0                DECREASE # EXTENTS                   00494\n         LTR   R2,R2               ANY MORE EXTENTS                     00495\n         BZ    *+8                  NO                                  00496\n         BCT   R3,INLOOP           CONVERT NEXT EXTENT                  00497\n*        LA    R0,L'MSG2                                                00498\n*        LA    R1,MSG2                                                  00499\n*        SVC   93                  TPUT EXTENTS                         00500\n         APUT  MSG2,L'MSG2\n         MVC   MSG2(6),BLANKS      BLANK VOLSER                         00501\n         LTR   R2,R2               ANY MORE EXTENTS?                    00502\n         BNZ   OUTLOOP              YES                                 00503\nOBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS            00504\n         BR    R9                  RETURN TO CALLER                     00505\n         TITLE 'LISTSPC - EOJ AND ERROR ROUTINES'                       00506\nRETC     EQU   *                                                        00507\n         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA         00508\n         LM    2,12,28(13)         RELOAD REGISTERS                     00509\n         L     14,12(13)           LOAD RETURN ADDRESS                  00510\n         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG 00511\n         BCR   15,14               RETURN TO CALLING PROGRAM            00512\n         SPACE 3                                                        00513\nERR01    EQU   *                                                        00514\n* NO VALID COMMAND                                                      00515\n         APUT  ERMSG1,18                                                00516\n         B     RETC                BRANCH TO RETURN CODE                00517\n* DATASET NAME NOT FOUND                                                00518\nERR03    MVC   MSG2(L'ERMSG9),ERMSG9                                    00519\n         MVC   MSG2+L'ERMSG9(44),DSN1                                   00520\n*        LA    R0,L'ERMSG9+44                                           00521\n*        LA    R1,MSG2                                                  00522\n*        SVC   93                                                       00523\n         APUT  MSG2,L'ERMSG9+44\n         TM    FLAG,X'40'                                               00524\n         BO    LOOP                                                     00525\n         TM    FLAG,X'10'                                               00526\n         BO    RETDSN                                                   00527\n         B     OBTNRET                                                  00528\n         SPACE 3                                                        00529\nRDERR    MVC   MSG2(L'ERMSG8),ERMSG8                                    00530\n         MVC   MSG2+L'ERMSG8(44),DSN1                                   00531\n*        LA    R0,L'ERMSG8+44                                           00532\n*        LA    R1,MSG2                                                  00533\n*        SVC   93                                                       00534\n         APUT  MSG2,L'ERMSG8+44\n         B     LOOP                CONTINUE THRU LOOP                   00535\n         SPACE 3                                                        00536\nNOUSER   MVC   MSG2(L'ERMSG3),ERMSG3                                    00537\n         MVC   MSG2+L'ERMSG3(44),USERID                                 00538\n*        LA    R0,L'ERMSG3+44                                           00539\n*        LA    R1,MSG2                                                  00540\n*        SVC   93                                                       00541\n         APUT  MSG2,L'ERMSG3+44\n         B     RETC                RETURN TO SYSTEM                     00542\n         SPACE 3                                                        00543\nINSUFSTO MVC   MSG2(L'ERMSG12),ERMSG12                                  00544\n*        LA    R0,L'ERMSG12                                             00545\n*        LA    R1,MSG2                                                  00546\n*        SVC   93                                                       00547\n         APUT  MSG2,L'ERMSG12\n         B     RETC                RETURN TO SYSTEM                     00548\nNOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6                                    00549\n         MVC   MSG2+L'ERMSG6(44),DSN1                                   00550\n*        LA    R0,L'ERMSG6+44                                           00551\n*        LA    R1,MSG2                                                  00552\n*        SVC   93                                                       00553\n         APUT  MSG2,L'ERMSG6+44\n         B     LOOP                PICK UP NEXT DATASET                 00554\n         SPACE 3                                                        00555\nMULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7                                    00556\n         MVC   MSG2+L'ERMSG7(44),DSN1                                   00557\n*        LA    R0,L'ERMSG7+44                                           00558\n*        LA    R1,MSG2                                                  00559\n*        SVC   93                                                       00560\n         APUT  MSG2,L'ERMSG7+44\n         B     LOOP                CONTINUE WITH NEXT DSN               00561\n         SPACE 3                                                        00562\nNOTMTD   MVC   MSG2(L'ERMSG13),ERMSG13                                  00563\n         MVC   MSG2+32(44),DSNSAVE                                      00564\n         MVC   MSG2+8(6),VOLID                                          00565\n*        LA    R0,L'ERMSG13+44                                          00566\n*        LA    R1,MSG2                                                  00567\n*        SVC   93                                                       00568\n         APUT  MSG2,L'ERMSG13+44\n         B     LOOP                PICK UP NEXT DATASET                 00569\n         SPACE 3                                                        00570\nERRF     EQU   *                                                        00571\n         APUT  ERMSG10,20                                               00572\n         B     RETC                                                     00573\nERRF4    EQU   *                   ERROR READING F4                     00574\n         APUT  ERMSG11,21                                               00575\n         B     VOLRET                                                   00576\nUSIDMVC  MVC   0(0,R8),0(R10)                                           00577\nDSNMVC   MVC   0(0,R8),0(R5)                                            00578\nMVCVOLS  MVC   0(0,R1),0(R5)                                            00579\n         TITLE 'LISTSPC - DATA AREAS'                                   00580\nENDLIST  DS    0F                                                       00581\n         DC    XL4'FF000000'                                            00582\n* SETUP CONSTANTS                                                       00583\nVOLDSCTK DC    H'0'                NUM DSCH ON A TRK                    00584\nVOLF4CHR DC    XL5'00'             CCHHR OF DSCB                        00585\nVOLNO    DC    H'0'                NUM VOLUMES PROCESSED                00586\nPEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE         00587\nLASTTRK  DC    H'0'                                                     00588\nDSN1     DC    CL44' '              DATASET NAME                        00589\nDSNSAVE  DC    CL44' '                                                  00590\nVOLS     DC    CL6' '                 VOLUME SER                        00591\nUSERID   DC    CL44' '              USERID                              00592\nVOLID    DC    CL6' '               VOL-SER                             00593\nFLAG     DC    X'00'                                                    00594\nDSORG    DC    X'00'                                                    00595\nBLANKS   DC    CL6' '                                                   00596\nBUF1     DS    0D                                                       00597\n         DS    265C                                                     00598\nTRTBL    EQU   *-240                                                    00599\n         DC    C'0123456789ABCDEF'                                      00600\nMASKED   DC    XL6'402020202121' EDIT MASK FIELD-SHOW LOW BYTES LMN-CBT 00601\n         SPACE 3                                                        00602\n* MESSAGE TO BE PRINTED                                                 00603\nMSG1     DC    C'DSORG ALLOC UNUSED EXTENTS DSNAME'                     00604\nMSG2     DC    CL76' '                                                  00605\nMSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS  VTOC'                     00606\n         SPACE 3                                                        00607\n* ERROR MESSAGES                                                        00608\nERMSG1   DC    C'NO VALID COMMAND'                                      00609\nERMSG3   DC    C'INVALID LEVEL - '                                      00610\nERMSG6   DC    C'DSN NOT ON DISK - '                                    00611\nERMSG7   DC    C'DSN ON MULTIVOLUMES: USE SPACE COMMAND '               00612\nERMSG8   DC    C'ERROR READING CATALOG DSN - '                          00613\nERMSG9   DC    C'DSN NOT FOUND - '                                      00614\nERMSG10  DC    C'UNSUPPORTED KEYWORD'                                   00615\nERMSG11  DC    C'ERROR READING F4 DSCB'                                 00616\nERMSG12  DC    C'INSUFFICIENT STORAGE USE LISTC OR DSAT COMMAND'        00617\nERMSG13  DC    C'VOLUME (XXXXXX) NOT MOUNTED FOR '                      00618\n         EJECT                                                          00619\n* CAMLST FOR DSCB3                                                      00620\nSEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1                                 00621\n         SPACE 2                                                        00622\n* CAMLST LOCATE DSN OV VOL SER                                          00623\nINDS     CAMLST NAME,DSN1,,BUF1                                         00624\n         SPACE 2                                                        00625\n* CAMLST FOR DSCB 1                                                     00626\nSERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1                                   00627\n         EJECT                                                          00628\n* CONSTANTS AND WORK AREAS                                              00629\nHWK1     DC    H'0'                HALF WORD WORK AREA                  00630\nVOLTKCYL DC    H'19'               # TRKS/CYL                           00631\nVTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA                 00632\nWKD      DC    D'0'                DOUBLE WORK WORK AREA                00633\n         SPACE 3                                                        00634\n* PARM SETUP FOR GETDSN                                                 00635\nPARM     DC    A(USERID)           USERID ADDRESS                       00636\n         DC    A(DSN1)             DSN ADDRESS                          00637\n         DC    A(VOLS)             VOL SER ADDRESS                      00638\n         DC    A(0)                ADDRESS FOR GETMAIN                  00639\n         SPACE 3                                                        00640\n* EQUATE REGISTERS                                                      00641\n         YREGS                                                          00642\nRCC      EQU   R8                                                       00643\nRHH      EQU   R7                                                       00644\nRR       EQU   R6                                                       00645\n         TITLE 'LISTSPC - PARSE PARAMETER LIST'                         00646\nPARSLIST IKJPARM                                                        00647\nDSNKYD   IKJKEYWD                                                       00648\n         IKJNAME 'DATASET',SUBFLD=DSNSUBF                               00649\nLEVL     IKJKEYWD                                                       00650\n         IKJNAME 'LEVEL',SUBFLD=LVL                                     00651\nVOLUME   IKJKEYWD                                                       00652\n         IKJNAME 'VOLUME',SUBFLD=VLM                                    00653\nEXTENT   IKJKEYWD                                                       00654\n         IKJNAME 'EXTENTS'                                              00655\nDSNSUBF  IKJSUBF                                                        00656\nDSNLIST  IKJPOSIT DSNAME,LIST                                           00657\nLVL      IKJSUBF                                                        00658\nLEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44                          00659\nVLM      IKJSUBF                                                        00660\nVOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6 00661\n         IKJENDP                                                        00662\n         IKJPPL                                                         00663\n         IKJCPPL                                                        00664\n         TITLE 'LISTSPC - WORK AREA'                                    00665\nWORKAREA DSECT                                                          00666\nMULTISW  DS    X       SW FOR MULTI-VOLS FROM LOCINDEX  LMB-CBT         00667\nWPPL     DS    7A                                                       00668\nCPECB    DS    F                                                        00669\nWPDL     DS    F                                                        00670\nOBTNSAVE DS    10F                                                      00671\nXTNTS    DS    16XL10                                                   00672\nWXTNT    DS    CL5                                                      00673\n         DS    0D                                                       00674\nLOCINDXW EQU   *                                                        00675\nLWORK    EQU   *-WORKAREA                                               00676\n#PAN$AUD CSECT                                                          006764\n$PAN#AUD DC    CL21'001CBT501    11/03/87'                              006765\n         END                                                            00677\nEPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUEMNTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTSPC$": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x008\\x00\\x965\\x7f\\x01\\x191\\x8f\\x00F\\x00\\x1f\\x00?\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1996-12-22T00:00:00", "modifydate": "2019-11-14T00:46:38", "lines": 31, "newlines": 63, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT498.FILE048(LISTSPC)\n//         DD DISP=SHR,DSN=SBGOLOB.CBT498.FILE048(LOCINDEX)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB498048\n SETCODE AC(1)\n ENTRY   LISTSPC\n ALIAS   LISTS\n ALIAS   SP\n NAME    LISTSPC(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTSPC#": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00D\\x00y&\\x1f\\x01\\x192\\x8f\\x11\\x10\\x00\\x1b\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-09-18T00:00:00", "modifydate": "2019-11-24T11:10:44", "lines": 27, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": ")F FUNCTION -\n    THE LISTSPC COMMAND LISTS THE TRACKS ALLOCATED, TRACKS UNUSED, AND\n    NUMBER OF EXTENTS FOR CATALOGED DISK DATA SETS, INDIVIDUALLY OR IN\n    SMALL GROUPS.\n)X SYNTAX -\n    LISTSPC   DATASET('DSNAME-LIST')  LEVEL('INDEX-LEVEL')\n              VOLUME('VOLUME-LIST')  EXTENTS\n    REQUIRED - DATESET('DSNAME') OR LEVEL('INDEX-LEVEL') OR\n               VOLUME('VOLUME')\n    DEFAULTS - NONE\n    ALIAS    - NONE\n)O OPERANDS -\n))DATASET('DSNAME-LIST') -\n               - SPECIFIES A LIST OF DATA SET NAMES ABOUT WHICH YOU WISH\n                 TO HAVE SPACE INFORMATION DISPLAYED.\n))LEVEL('INDEX-LEVEL') -\n               - SPECIFIES AN INDEX LEVEL IN THE CATALOG FOR\n                 WHICH YOU WANT SPACE INFORMATION. THIS MAY BE\n                 A DSNAME CONTAINING ONE EMBEDDED ASTERISK.\n))VOLUME('VOLUME-LIST') -\n               - IF USED WITH THE DATASET PARAMETER, SPECIFIES THE\n                 VOLUME THE DATA SET RESIDES ON. NO CATALOG SEARCH\n                 WILL BE PERFORMED.\n                 IF SPECIFIED ALONE, SPECIFIES A LIST OF VOLUMES FOR\n                 WHICH FREE SPACE INFORMATION WILL BE PRODUCED.\n))EXTENTS      - IF SPECIFIED, THEN THE EXTENTS FOR EACH DATA SET WILL\n                 BE DISPLAYED WITH HEXADECIMAL ADDRESSES.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTVOL": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00%\\x00\\x86!\\x8f\\x01\\x06\\x00?\"V\\x02\\xb8\\x01^\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1986-08-06T00:00:00", "modifydate": "2006-01-03T22:56:25", "lines": 696, "newlines": 350, "modlines": 0, "user": "SBGOLOB"}, "text": "*          DATA SET CBT500     AT LEVEL 001 AS OF 06/26/86\n         TITLE 'LISTVOL - DOCUMENTATION'                                00001\n*.....................................................................* 00002\n*.                                                                   .* 00003\n*.   LISTVOL                                                         .* 00004\n*.                                                                   .* 00005\n*        LISTVOL   LEVEL('DSNAME')|DA('DSLIST')                       * 00006\n*                  VOL('SER')                                         * 00007\n*        'DSNAME' IS EITHER HIGHER LEVEL QUALIFIERS OF CATALOG        * 00008\n*                 STRUCTURE OR CONTAINS EMBEDDED ASTERISK AS          * 00009\n*                 PART OF THE NAME.                                   * 00010\n*        'DSLIST' IS LIST OF DATASETS.                                * 00011\n*        'SER'    IS LEADING CHARACTERS OF VOLUME SERIAL. ONLY        * 00012\n*                 DATASETS CATALOGED ON VOLUMES BEGINNING THUSLY      * 00013\n*                 WILL BE LISTED.                                     * 00014\n*              NOW THIS CODE IS BORROWED FROM THE LISTS COMMAND FROM  * 00015\n*              SHARE, AND IS A VERY MUCH STRIPPED DOWN VERSION OF     * 00016\n*              THAT COMMAND.                                          * 00017\n*              THE REAL WORK IS DONE IN SUBROUTINE LOCINDEX, AND SINCE* 00018\n*              I WROTE THAT MYSELF, I SUGGEST YOU LOOK THERE FOR      * 00019\n*              INSIGHT INTO MVS CATALOG MANAGEMENT.                   * 00020\n*        LEVEL CURRENT TO ALL TSO SUBJECT TO WHICH LOCINDEX YOU HAVE  * 00021\n*                                                                     * 00022\n*********************************************************************** 00023\n* 06/13/84 - ADDED SUPPORT FOR MULTI-VOLUME DATASETS       LMB-CBT    * 00024\n*                                                                     * 00025\n* 06/25/86 - MSG TO USE LISTC OR DSAT COMMAND IF LOCINDEX  LMB-CBT    * 00026\n*            HAS INSUFFICIENT STORAGE FOR PROCESSING       LMB-CBT    * 00027\n*            (RETURN CODE 40 OR 44 FROM SVC 26)            LMB-CBT    * 00028\n* 01/03/06 - ADDED SPACE IN GETMAIN, CONVERT TPUT TO PUTLINE     SBG  * 00009\n*.....................................................................* 00029\n         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n         TITLE 'LISTVOL - LIST VOLUME COMMAND'                          00030\nLISTVOL  START 0                                                        00031\n         STM   R14,R12,12(R13)                                          00032\n         USING LISTVOL,R15                                              00033\n         ST    R13,SAVE+4                                               00034\n         LA    R13,SAVE                                                 00035\n         B     BEGIN                                                    00036\nSAVE     DC    18F'0'                                                   00037\n         DROP  R15                                                      00038\n         USING SAVE,R13                                                 00039\n         TITLE 'LISTVOL - GETMAIN AND PARSE'                            00040\nBEGIN    LR    R4,R1                                                    00041\n         USING CPPL,R4                                                  00042\n         LA    R0,LWORK            GET LENGTH OF WORK AREA              00043\n         A     R0,=F'4096'         GET EXTRA 4K FOR LOCINDEX WORK   SBG 00044\n         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1                            00045\n         GETMAIN R,LV=(0)                                               00046\n         LR    R12,R1               SAVE ADDR OF WORK AREA              00047\n         USING WORKAREA,R12                                             00048\n         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA         00049\n         ST    R0,PARM+12           SAVE ADDR IN PARM LIST              00050\n         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST           00051\n         MVI   WXTNT+4,X'04'                                            00052\n         LA    R3,WPPL             GET ADDR OF PPL                      00053\n         USING PPL,R3                                                   00054\n         L     R0,CPPLCBUF                                              00055\n         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER          00056\n         L     R0,CPPLUPT                                               00057\n         ST    R0,PPLUPT           SAVE ADDR OF UPT                     00058\n         L     R0,CPPLPSCB                                              00059\n         LR    R10,R0              GET ADDR OF USERID FROM PSCB         00060\n         SR    R11,R11                                                  00061\n         IC    R11,7(R10)          GET LENGTH OF USERID                 00062\n         BCTR  R11,0                                                    00063\nAUTHRZD  OI    FLAG,X'80'                                               00064\nLECT     L     R0,CPPLECT                                               00065\n         ST    R0,PPLECT           SAVE ADDR OF ECT                     00066\n         LA    R0,CPECB                                                 00067\n         ST    R0,PPLECB           SAVE ADDR OF ECB                     00068\n         XC    CPECB,CPECB         CLEAR ECB                            00069\n         L     R0,=A(PARSLIST)                                          00070\n         ST    R0,PPLPCL           SAVE ADDR OF PCL                     00071\n         LA    R0,WPDL                                                  00072\n         ST    R0,PPLANS           SAVE ADDR OF PDL AREA                00073\n         XC    PPLUWA,PPLUWA       CLEAR UWA                            00074\n         LR    R1,R3               PASS ADDR OF PPL TO PARSE            00075\n         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE        00076\n         LTR   R15,R15             PARSE ERROR                          00077\n         BNZ   RETC                 YES                                 00078\n         TM    PPLANS,X'FF'        PARSE ERROR                          00079\n         BO    RETC                 YES                                 00080\n         DROP  R3,R4                                                    00081\n         L     R3,WPDL             GET ADDR OF PDL                      00082\n         USING IKJPARMD,R3                                              00083\n         TM    EXTENT+1,X'01'      EXTENT SPECIFIED?                    00084\n         BZ    *+8                  NO                                  00085\n         OI    FLAG,X'20'           YES, SET FLAG BIT                   00086\n         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?                   00087\n         BO    DSNRTN                YES                                00088\n         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?              00089\n         BO    LEVEL                 YES                                00090\n         B     EUSLO                NO PARMS - LISTS FOR USERID         00091\n         TITLE 'LISTVOL - DATASET NAME ROUTINE'                         00092\nDSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST                   00093\n*        LA    R0,L'MSG1                                                00094\n*        LA    R1,MSG1                                                  00095\n*        SVC   93                  TPUT HEADING                         00096\n         APUT  MSG1,L'MSG1\nDSNAME   L     R5,0(R4)             POINT TO DSNAME                     00097\n         LH    R6,4(R4)             GET LENGTH OF DSNAME                00098\n         BCTR  R6,0                                                     00099\n         MVI   DSN1,X'40'                                               00100\n         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA                  00101\n         LA    R8,DSN1              POINT TO DSN WORK AREA              00102\n         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?         00103\n         BO    MVCDSNAM               YES                               00104\n         EX    R11,USIDMVC         MOVE USERID TO WORK AREA             00105\n         LA    R8,1(R11,R8)        BUMP PAST USERID                     00106\n         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA             00107\n         LA    R8,1(0,R8)          BUMP PAST                            00108\nMVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA             00109\n         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA      00110\n         TM    FLAG,X'80'          AUTHORIZED USER?                     00111\n         BZ    LOCDSN               NO                                  00112\n         TM    VOL+6,X'80'         VOLUME SPECIFIED?                    00113\n         BZ    LOCDSN               NO, LOCATE DSN                      00114\n         LA    R1,VOLS             POINT TO VOLSER WORK AREA            00115\n         L     R5,VOL              POINT TO VOLUME PARAMETER            00116\n         LH    R6,VOL+4            GET LENGTH OF VOL PARM               00117\n         BCTR  R6,0                                                     00118\n         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA    00119\n         B     BALOBTN             BYPASS LOCATE                        00120\nLOCDSN   OI    FLAG,X'10'                                               00121\n         LOCATE INDS                                                    00122\n         LTR   R15,R15              DID IT FIND VOL SER                 00123\n         BNZ   ERR03                 NO WRITE ERROR MSG                 00124\n         NI    FLAG,X'EF'                                               00125\n         LH    R7,BUF1             2 BYTE - # OF VOLS RETURNED  LMB-CBT 00126\n*        MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER                00127\n         LA    R9,BUF1             ADDR OF RETURNED VOLUME LIST LMB-CBT 00128\n         LA    R9,2(R9)            1ST 12 BYTE VARIABLE SECTION LMB-CBT 00129\n         LA    R9,4(R9)            VOL=SER LOCATION             LMB-CBT 00130\nMULTIVOL MVC   VOLS(6),0(R9)       MOVE IN VOL SER              LMB-CBT 00131\n         SPACE 2                                                        00132\nBALOBTN  TM    VOL+6,X'80'     WAS VOL PARM GIVEN?              LMB-CBT 00133\n         BZ    BALOBTN2        NO, SO TPUT IT                   LMB-CBT 00134\n         LH    R1,LENVOLS      LENGTH OF VOLS                   LMB-CBT 00135\n         EX    R1,CLCVOLS      COMPARE THE VOLS                 LMB-CBT 00136\n         BNE   CONTVAR         NO HIT, CONTINUE THE VARIABLES   LMB-CBT 00137\nBALOBTN2 APUT  VOLS,52                                                  00138\nCONTVAR  LA    R9,12(R9)           PT TO NEXT VARIABLE SECTION  LMB-CBT 00139\n         BCT   R7,MULTIVOL         MORE VOLS-GO PROCESS         LMB-CBT 00140\nRETDSN   TM    MULTISW,X'01' WAS MULTI-VOL RECVD FROM LOCINDEX?   LMB   00141\n         BC    8,RETDSN2        NO, SO CONTINUE WITH DA(...) LIST LMB   00142\n         MVI   MULTISW,X'00'    REINITIALIZE                      LMB   00143\n         B     LOOP             CONTINUE WITH LOCINDEX PROCESSING LMB   00144\nRETDSN2  L     R4,24(R4)           GET DSN LINK POINTER                 00145\n         C     R4,ENDLIST          END OF LIST?                         00146\n         BE    RETC                 YES                                 00147\n         B     DSNAME               NO, GET NEXT DSNAME                 00148\n         TITLE 'LISTVOL - LEVEL ROUTINE'                                00149\nEUSLO    EQU   *                                                        00150\n**     FOR ENTIRE USERID LOGGED ON                                      00151\n         MVC   USERID(7),0(R10)        MOVE IN USERID                   00152\n         B     GOTUS               BRANCH TO GOT USERID                 00153\n         SPACE 3                                                        00154\nLEVEL    EQU   *                                                        00155\n         L     R5,LEV              POINT TO INDEX STRUCTURE             00156\n         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT           00157\n         BCTR  R6,0                                                     00158\n         LA    R8,USERID           POINT TO WORK AREA                   00159\n         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA    00160\nGOTUS    EQU   *                                                        00161\n         TM    VOL+8,X'80'                                              00162\n         BZ    NVOLL                                                    00163\n         LA    R1,VOLZ                                                  00164\n         L     R5,VOL              POINT TO VOLUME PARAMETER            00165\n         LH    R6,VOL+4            GET LENGTH OF VOL PARM               00166\n         BCTR  R6,0                                                     00167\n         STH   R6,LENVOLS                                               00168\n         EX    R6,MVCVOLS                                               00169\nNVOLL    DS    0H                                                       00170\n*        LA    R0,L'MSG1                                                00170\n*        LA    R1,MSG1                                                  00171\n*        SVC   93                  TPUT HEADING                         00172\n         APUT  MSG1,L'MSG1\n         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID    00173\nLOOP     EQU   *                   LOOP FOR DATASET IN USERID           00174\n         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)                00175\n         LA    R1,PARM             POINT TO PARM LIST                   00176\n         BALR  R14,R15             GO TO LOCINDEX                       00177\n         CH    R15,=H'18'          WAS RC=0018?                         00178\n         BE    MULTI               YES, IT IS TAPE WITH MULTI-VOLS      00179\n         CH    R15,=H'40'          WAS RC=X'0028' ?                     00180\n         BE    INSUFSTO            YES, THERE WAS INSUFFICIENT STORAGE  00181\n         CH    R15,=H'44'          WAS RC=X'002C' ?                     00182\n         BE    INSUFSTO            YES, THERE WAS INSUFFICIENT STORAGE  00183\n         B     *+4(R15)            BRANCH , DEP ON RETURN CODE          00184\n         B     OK                                                       00185\n         B     NOUSER              4-PRINT MSG & RETRUN TO SYS          00186\n         B     OK                  8-                                   00187\n         B     MULTI               12-DS IS ON MULTI-VOLUMES            00188\n         B     RETC                16-FINISHED-RETURN TO SYS            00189\n         B     RDERR               20-PRINT MSG&RETRUN TO SUS           00190\nMULTI    MVI   MULTISW,X'01'       SET SWITCH SAYING MULTI-VOL FOUND    00191\n         B     LOCDSN                                                   00192\nOK       TM    VOL+6,X'80'                                              00193\n         BZ    NVOL2                                                    00194\n         LH    R1,LENVOLS                                               00195\n         EX    R1,CLCVOLS                                               00196\n         BNE   LOOP                                                     00197\nNVOL2    APUT  VOLS,52                                                  00198\n         B     LOOP                GET NEXT DSNAME FROM LOCINDEX        00199\n         SPACE 3                                                        00200\n         TITLE 'LISTVOL - EOJ AND ERROR ROUTINES'                       00201\nRETC     EQU   *                                                        00202\n         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA         00203\n         LM    2,12,28(13)         RELOAD REGISTERS                     00204\n         L     14,12(13)           LOAD RETURN ADDRESS                  00205\n         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG 00206\n         BCR   15,14               RETURN TO CALLING PROGRAM            00207\n         SPACE 3                                                        00208\nERR01    EQU   *                                                        00209\n* NO VALID COMMAND                                                      00210\n         APUT  ERMSG1,18                                                00211\n         B     RETC                BRANCH TO RETURN CODE                00212\n* DATASET NAME NOT FOUND                                                00213\nERR03    MVC   MSG2(L'ERMSG9),ERMSG9                                    00214\n         MVC   MSG2+L'ERMSG9(44),DSN1                                   00215\n*        LA    R0,L'ERMSG9+44                                           00216\n*        LA    R1,MSG2                                                  00217\n*        SVC   93                                                       00218\n         APUT  MSG2,L'ERMSG9+44\n         TM    FLAG,X'40'                                               00219\n         BO    LOOP                                                     00220\n         TM    FLAG,X'10'                                               00221\n         B     RETDSN                                                   00222\n         SPACE 3                                                        00223\nRDERR    MVC   MSG2(L'ERMSG8),ERMSG8                                    00224\n         MVC   MSG2+L'ERMSG8(44),DSN1                                   00225\n*        LA    R0,L'ERMSG8+44                                           00226\n*        LA    R1,MSG2                                                  00227\n*        SVC   93                                                       00228\n         APUT  MSG2,L'ERMSG8+44\n         B     LOOP                CONTINUE THRU LOOP                   00229\n         SPACE 3                                                        00230\nNOUSER   MVC   MSG2(L'ERMSG3),ERMSG3                                    00231\n         MVC   MSG2+L'ERMSG3(44),USERID                                 00232\n*        LA    R0,L'ERMSG3+44                                           00233\n*        LA    R1,MSG2                                                  00234\n*        SVC   93                                                       00235\n         APUT  MSG2,L'ERMSG3+44\n         B     RETC                RETURN TO SYSTEM                     00236\n         SPACE 3                                                        00237\nINSUFSTO MVC   MSG2(L'ERMSG11),ERMSG11                                  00238\n*        LA    R0,L'ERMSG11                                             00239\n*        LA    R1,MSG2                                                  00240\n*        SVC   93                                                       00241\n         APUT  MSG2,L'ERMSG11\n         B     RETC                RETURN TO SYSTEM                     00242\n         SPACE 3                                                        00243\nERRF     EQU   *                                                        00244\n         APUT  ERMSG10,20                                               00245\n         B     RETC                                                     00246\nUSIDMVC  MVC   0(0,R8),0(R10)                                           00247\nDSNMVC   MVC   0(0,R8),0(R5)                                            00248\nMVCVOLS  MVC   0(0,R1),0(R5)                                            00249\nCLCVOLS  CLC   VOLS(0),VOLZ                                             00250\n         TITLE 'LISTVOL - DATA AREAS'                                   00251\nENDLIST  DS    0F                                                       00252\n         DC    XL4'FF000000'                                            00253\n* SETUP CONSTANTS                                                       00254\nVOLDSCTK DC    H'0'                NUM DSCH ON A TRK                    00255\nVOLF4CHR DC    XL5'00'             CCHHR OF DSCB                        00256\nVOLNO    DC    H'0'                NUM VOLUMES PROCESSED                00257\nPEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE         00258\nLASTTRK  DC    H'0'                                                     00259\nVOLS     DC    CL6' '                 VOLUME SER                        00260\n         DC    C'  '                                                    00261\nDSN1     DC    CL44' '              DATASET NAME                        00262\nUSERID   DC    CL44' '              USERID                              00263\nFLAG     DC    X'00'                                                    00264\nDSORG    DC    X'00'                                                    00265\nBLANKS   DC    CL6' '                                                   00266\nVOLZ     DC    CL6' '                                                   00267\nLENVOLS  DC    H'0'                                                     00268\nBUF1     DS    0D                                                       00269\n         DS    265C                                                     00270\nTRTBL    EQU   *-240                                                    00271\n         DC    C'0123456789ABCDEF'                                      00272\nMASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT                  00273\n         SPACE 3                                                        00274\n* MESSAGE TO BE PRINTED                                                 00275\nMSG1     DC    C'VOLUME  DATASET NAME             '                     00276\nMSG2     DC    CL76' '                                                  00277\nMSG4     DC    C'VOLUME  DATASET NAME             '                     00278\n         SPACE 3                                                        00279\n* ERROR MESSAGES                                                        00280\nERMSG1   DC    C'NO VALID COMMAND'                                      00281\n*ERMSG3   DC    C'INVALID LEVEL - '                                     00282\nERMSG3   DC    C'NO DATASETS CATALOGED TO - '                           00283\nERMSG8   DC    C'ERROR READING CATALOG DSN - '                          00284\nERMSG9   DC    C'DSN NOT FOUND - '                                      00285\nERMSG10  DC    C'UNSUPPORTED KEYWORD'                                   00286\nERMSG11  DC    C'INSUFFICIENT STORAGE USE LISTC OR DSAT COMMAND'        00287\n         LTORG                                                          00288\n         EJECT                                                          00289\n* CAMLST FOR DSCB3                                                      00290\nSEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1                                 00291\n         SPACE 2                                                        00292\n* CAMLST LOCATE DSN OV VOL SER                                          00293\nINDS     CAMLST NAME,DSN1,,BUF1                                         00294\n         SPACE 2                                                        00295\n* CAMLST FOR DSCB 1                                                     00296\nSERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1                                   00297\n         EJECT                                                          00298\n* CONSTANTS AND WORK AREAS                                              00299\nHWK1     DC    H'0'                HALF WORD WORK AREA                  00300\nVOLTKCYL DC    H'19'               # TRKS/CYL                           00301\nVTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA                 00302\nWKD      DC    D'0'                DOUBLE WORK WORK AREA                00303\n         SPACE 3                                                        00304\n* PARM SETUP FOR GETDSN                                                 00305\nPARM     DC    A(USERID)           USERID ADDRESS                       00306\n         DC    A(DSN1)             DSN ADDRESS                          00307\n         DC    A(VOLS)             VOL SER ADDRESS                      00308\n         DC    A(0)                ADDRESS FOR GETMAIN                  00309\n         SPACE 3                                                        00310\n* EQUATE REGISTERS                                                      00311\n         YREGS                                                          00312\nRCC      EQU   R8                                                       00313\nRHH      EQU   R7                                                       00314\nRR       EQU   R6                                                       00315\n         TITLE 'LISTVOL - PARSE PARAMETER LIST'                         00316\nPARSLIST IKJPARM                                                        00317\nDSNKYD   IKJKEYWD                                                       00318\n         IKJNAME 'DATASET',SUBFLD=DSNSUBF                               00319\nLEVL     IKJKEYWD                                                       00320\n         IKJNAME 'LEVEL',SUBFLD=LVL                                     00321\nVOLUME   IKJKEYWD                                                       00322\n         IKJNAME 'VOLUME',SUBFLD=VLM                                    00323\nEXTENT   IKJKEYWD                                                       00324\n         IKJNAME 'EXTENTS'                                              00325\nDSNSUBF  IKJSUBF                                                        00326\nDSNLIST  IKJPOSIT DSNAME,LIST                                           00327\nLVL      IKJSUBF                                                        00328\nLEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44                          00329\nVLM      IKJSUBF                                                        00330\nVOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6 00331\n         IKJENDP                                                        00332\n         IKJPPL                                                         00333\n         IKJCPPL                                                        00334\n         TITLE 'LISTVOL - WORK AREA'                                    00335\nWORKAREA DSECT                                                          00336\nMULTISW  DS    X      SW FOR MULTI-VOLS FROM LOCINDEX          LMB      00337\nWPPL     DS    7A                                                       00338\nCPECB    DS    F                                                        00339\nWPDL     DS    F                                                        00340\nOBTNSAVE DS    10F                                                      00341\nXTNTS    DS    16XL10                                                   00342\nWXTNT    DS    CL5                                                      00343\n         DS    0D                                                       00344\nLOCINDXW EQU   *                                                        00345\nLWORK    EQU   *-WORKAREA                                               00346\n#PAN$AUD CSECT                                                          003464\n$PAN#AUD DC    CL21'001CBT500    06/26/86'                              003465\n         END                                                            00347\nEPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUEMNTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTVOL$": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x08\\x00\\x965\\x7f\\x01\\x06\\x00?!H\\x00\\x1f\\x00?\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1996-12-22T00:00:00", "modifydate": "2006-01-03T21:48:08", "lines": 31, "newlines": 63, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.R16.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.R16.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(LISTVOL)\n//         DD DISP=SHR,DSN=SBGOLOB.B.ASM(LOCINDEX)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB470247\n SETCODE AC(0)\n ENTRY   LISTVOL\n ALIAS   LISTV\n ALIAS   LV\n NAME    LISTVOL(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTVOL#": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x1f\\x00y&\\x1f\\t\\x00\\x00\\x16\\x00\\x16\\x00\\x00\\xc3\\xc2\\xe3\\xe3\\xc1\\xd7\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-18T00:00:00", "modifydate": "1979-09-18T09:00:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "CBTTAPE"}, "text": ")F   FUNCTION -\n   THE LISTVOL COMMAND LISTS THE VOLUMES OF CATALOGED DATASETS.\n   THE OUTPUT IS MORE COMPACT THAN LISTC VOL.\n)X  SYNTAX -\n    LISTVOL   DATASET('DSNAME-LIST')  LEVEL('INDEX-LEVEL')\n              VOLUME('VOLUME-LIST')\n    DEFAULTS - LEVEL(USERID)\n)O  OPERANDS -\n))DATASET('DSNAME-LIST')\n             - SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO\n               HAVE VOLUME INFORMATION LISTED.\n))LEVEL('INDEX-LEVEL')\n              - SPECIFIES AN INDEX LEVEL IN THE CATALOG FOR\n                WHICH YOU WANT VOLUME INFORMATION. THIS MAY BE\n                A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT\n                AS THE HIGHEST LEVEL QUALIFIER.\n))VOLUME('VOLSER')\n                   - QUALIFIES A LEVEL REQUEST WITH ALL\n            OR THE LEADING CHARACTERS OF THE VOLUME SERIAL\n            FOR WHICH A LISTING IS REQUESTED. ONLY DATASETS\n            CATALOGED ON VOLUMES BEGINNING WITH 'VOLSER' WILL\n            BE LISTED.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADLIB": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x03\\x01\\x192\\x8f\\x01\\x192\\x8f\\x103\\x00{\\x00{\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2019-11-24T00:00:00", "modifydate": "2019-11-24T10:33:03", "lines": 123, "newlines": 123, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOCINDEX": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x04\\x00\\x86!\\x8f\\x01\\x192\\x8f\\x100\\x01\\xa3\\x01\\xa1\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1986-08-06T00:00:00", "modifydate": "2019-11-24T10:30:04", "lines": 419, "newlines": 417, "modlines": 0, "user": "SBGOLOB"}, "text": "*          DATA SET CBT502     AT LEVEL 001 AS OF 09/08/89\n*        LOCINDEX SUBROUTINE REPLACEMENT FOR MVS                        00001\n*        THIS ROUTINE SUPPORTS 'LEVEL' OPTIONS OF THE 'LISTS' COMMAND   00002\n*             AND IS USED BY OTHER YCC VARIATIONS OF THAT PROGRAM       00003\n*        FOLLOWING IS ORIGINAL LOCINDEX DESCRIPTION:                    00004\n*.....................................................................* 00005\n*.                                                                   .* 00006\n*.   LOCINDEX                                                        .* 00007\n*.                                                                   .* 00008\n*.....................................................................* 00009\n*.                                                                   .* 00010\n*.   1.0  GENERAL DESCRIPTION                                        .* 00011\n*.                                                                   .* 00012\n*.   THIS SUBROUTINE IS USED TO RETURN DSNAMES AND THE VOLSER        .* 00013\n*.   FOR A SPECIFIED INDEX STRUCTURE.  THE INDEX STRUCTURE CAN BE    .* 00014\n*.   SPECIFIED AS SEVERAL HIGH-LEVEL QUALIFIERS OR IT CAN BE A       .* 00015\n*.   DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT AS THE HIGH-LEVEL   .* 00016\n*.   QUALIFIER.                                                      .* 00017\n*.                                                                   .* 00018\n*.   MAINTENANCE:                                                    .* 00019\n*.   09/07/89 - CHANGE OUTPUT OF SVC 26 TO SKIP PAST THE     LMN-CBT .* 00020\n*.              CATALOG NAME ADDED WITH DFP 3.1.0            LMN-CBT .* 00021\n*.   04/07/89 - CHANGE VSAM GENERIC LOCATE FOR ICF CTLG WITH LMN-CBT .* 00022\n*.              A GDG. SINCE A CATALOGED DATASET STARTS WITH LMN-CBT .* 00023\n*.              AN \"A\" AND A GDG STARTS WITH \"B\" IN THE      LMN-CBT .* 00024\n*.              BUFFER RETURNED FROM SVC 26, I CHECK FOR IT  LMN-CBT .* 00025\n*.   03/17/89 - CHANGE VSAM GENERIC LOCATE FOR ICF CATALOG   LMN-CBT .* 00026\n*.              IF THERE ARE NO DATASETS, R15 \u00ac=8 (IT =0),   LMN-CBT .* 00027\n*.              SO I CHECK THE DATASET NAMES PASSED, IF THEY LMN-CBT .* 00028\n*.              = X'00' TAKE SAME LOGIC AS IF RC=4.          LMN-CBT .* 00029\n*.   06/25/86 - ALLOW RETURN CODES 40 + 44 TO BE PASSED LMB-CBT      .* 00030\n*.              ON FROM SVC 26 (INSUFFICIENT STORAGE)   LMB-CBT      .* 00031\n*.   08/09/85 - CHGD LH TO IC + SLL DUE TO HIGH ORDER BIT BEING      .* 00032\n*.              PROPAGATED                              LMB-CBT      .* 00033\n*.   10/19/84 - UPDATED TO SUPPORT MULTI-VOLUME TAPE DATASETS.       .* 00034\n*.                                                                   .* 00035\n*.....................................................................* 00036\n*.                                                                   .* 00037\n*.....................................................................* 00038\n*.                                                                   .* 00039\n*.   2.0  PARAMETER LIST AND RETURN CODE DESCRIPTION                 .* 00040\n*.                                                                   .* 00041\n*.   THE PARAMETER LIST IS A FOUR OR FIVE WORD LIST CONTAINING THE   .* 00042\n*.   FOLLOWING:                                                      .* 00043\n*.                                                                   .* 00044\n*.    WORD         DESCRIPTION                                       .* 00045\n*.                                                                   .* 00046\n*.      1          ADDRESS OF THE 44-BYTE FIELD CONTAINING THE       .* 00047\n*.                 INDEX STRUCTURE.                                  .* 00048\n*.      2          ADDRESS OF THE 44-BYTE FIELD INTO WHICH           .* 00049\n*.                 LOCINDEX WILL PLACE THE DSNAME.                   .* 00050\n*.      3          ADDRESS OF THE 6-BYTE FIELD INTO WHICH            .* 00051\n*.                 LOCINDEX WILL PLACE THE VOLSER OF THE DATASET.    .* 00052\n*.      4          ADDRESS OF A 4K WORK AREA TO BE USED BY           .* 00053\n*.                 LOCINDEX FOR STORING CATALOG BLOCKS.              .* 00054\n*.      5          OPTIONAL FIELD FOR THE ADDRESS OF A FULLWORD      .* 00055\n*.                 OF STORAGE ON AN INTEGRAL BOUNDARY INTO WHICH     .* 00056\n*.                 LOCINDEX WILL STORE THE RETURN CODE.              .* 00057\n*.                                                                   .* 00058\n*.   THE HIGH ORDER BIT OF THE LAST WORD OF THE PARAMETER LIST       .* 00059\n*.   MUST BE SET ON.                                                 .* 00060\n*.                                                                   .* 00061\n*.    RETURN CODE  MEANING                                           .* 00062\n*.                                                                   .* 00063\n*.         0       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .* 00064\n*.                 A DISK VOLUME.                                    .* 00065\n*.         4       THE INDEX STRUCTURE WAS NOT FOUND.                .* 00066\n*.         8       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .* 00067\n*.                 A TAPE VOLUME.                                    .* 00068\n*.        12       A DSNAME WAS FOUND FOR DASD AND IT IS CATALOGED TO.* 00069\n*.                 MULTIPLE VOLUMES.                                 .* 00070\n*.        16       THERE ARE NO MORE DATASETS FOR THIS INDEX         .* 00071\n*.                 STRUCTURE.                                        .* 00072\n*.        18       A DSNAME WAS FOUND FOR TAPE AND IS CATALOGED TO   .* 00073\n*.                 MULTIPLE VOLUMES.                        LMB-CBT  .* 00074\n*.        20       AN I/O ERROR WAS DETECTED ON THE CATALOG.         .* 00075\n*.                                                                   .* 00076\n*.....................................................................* 00077\n*                                                                       00078\n*        THE PRIMARY DIFFERENCES BETWEEN THE MVS VERSION                00079\n*        AND THE OS VERSION ARE:                                        00080\n*              1) THE PART ABOVE THE ASTERISK IS PASSED TO VSAM         00081\n*                 GENERIC LOCATE AND WORKS HOWEVER GENERIC LOCATE       00082\n*                 LOCATE WORKS. ONLY NON-VSAM DATASETS ARE PASSED       00083\n*                 BACK TO THE CALLER.                                   00084\n*              2) THE CHARACTERS BELOW THE ASTERISK MUST APPEAR         00085\n*                 IN THE DATASET NAME ANYWHERE AFTER THE SEARCH         00086\n*                 KEY CHARACTERS. THEY MAY CONTAIN LEADING              00087\n*                 AND TRAILING PARTIAL INDEX LEVELS.                    00088\n*              3) THE AMOUNT OF STORAGE REQUIRED FOR A VSAM GENERIC     00089\n*                 LOCATE IS MUCH MORE THAN THE 4K AREA PROVIDED BY      00090\n*                 THE OS CALLER. A 24K AREA IS GETMAINED AND ITS        00091\n*                 ADDRESS IS STORED IN THE FIRST WORK OF THE 4K         00092\n*                 CALLER WORK AREA. IT IS FREEMAINED WHEN THE           00093\n*                 RETURN CODE OF 16 SIGNALS THE END OF DATASETS         00094\n*                 UNDER THIS INDEX.                                     00095\n*              5) THE 265 BYTE CAMLIST WORK AREA IS PUT IN THE          00096\n*                 CALLER PROVIDED WORK AREA AT OFFSET 4. THIS           00097\n*                 ALLOWS ACCESS TO THE COMPLETE VOLUME LIST.            00098\n         EJECT                                                          00099\nLOCINDEX CSECT                                                          00100\nLOCINDEX RMODE 24                                                       00100\nLOCINDEX AMODE 31                                                       00100\n         USING *,15                                                     00101\n         SAVE  (14,12),,*                                               00102\n         GETMAIN R,LV=LSECT                                             00103\n         ST    R13,4(R1)                                                00104\n         ST    R1,8(13)                                                 00105\n         LR    R12,R13                                                  00106\n         LR    R13,R1                                                   00107\n         L     R1,24(R12)                                               00108\n         BALR  R12,0                                                    00109\n         USING *,12                                                     00110\n         USING DSASECT,R13                                              00111\nR0       EQU   0                                                        00112\nR1       EQU   1                                                        00113\nR2       EQU   2                                                        00114\nR3       EQU   3                                                        00115\nR4       EQU   4                                                        00116\nR5       EQU   5                                                        00117\nR6       EQU   6                                                        00118\nR7       EQU   7                                                        00119\nR8       EQU   8                                                        00120\nR9       EQU   9                                                        00121\nR10      EQU   10                                                       00122\nR11      EQU   11                                                       00123\nR12      EQU   12                                                       00124\nR13      EQU   13                                                       00125\nR14      EQU   14                                                       00126\nR15      EQU   15                                                       00127\n         ST    R1,INPARM                                                00128\n         L     R10,12(R1)                                               00129\n         USING WORKSECT,R10                                             00130\n         L     R2,0(R1)                                                 00131\n         CLC   OINDEX,0(R2)   SAME INDEX STRUCTURE AS LAST CALL?        00132\n         BE    CAMLOC         GO GET NEXT DATASET                       00133\n         MVC   OINDEX,0(R2)                                             00134\n         SPACE 10                                                       00135\nBLDKEY   DS    0H                                                       00136\n*        THIS BLOCK ANALIZES THE NEW INDEX STRUCTURE INTO COMPONENTS    00137\n*        IT CONSTRUCTS A VSAM CATALOG GENERIC SEARCH KEY AND AN         00138\n*        OPTIONAL LOWER LEVEL QUALIFIER VERIFICATION STRING             00139\n*        ONE ASTERISK IS ALLOWED ANYWHERE BELOW THE USERID.             00140\n*        IT MAY REPRESENT ALL OR PART OF AN 'INDEX LEVEL'               00141\n*        EXITS: NORMAL TO 'GENLOC'                                      00142\n*               TO 'ERROR4' IF A SYSTAX ERROR OCCURS IN INDEX STRUCTURE 00143\n         SR    R1,R1                                                    00144\n         SR    R2,R2          CLEAR FOR TRT INSTRUCTION                 00145\n         MVI   TRTAB,0                                                  00146\n         MVC   TRTAB+1(255),TRTAB                                       00147\n         MVI   TRTAB+C' ',4                                             00148\n         MVI   TRTAB+C'*',8                                             00149\n         MVI   TRTAB+C'.',12                                            00150\n         MVC   KEY,OINDEX     COPY INDEX INPUT                          00151\n         TRT   KEY,TRTAB                                                00152\n         BZ    ERROR4         MUST BE A BLANK IN 44 CHARS               00153\n         B     *(R2)                                                    00154\n         B     USERID         C' ' MUST BE A USERID                     00155\n         B     ERROR4         C'*' ASTERISK MUST FOLLOW PERIOD          00156\n         B     COMPLEX        C'.' MUST DO FULL ANALYSIS OF STRUCTURE   00157\n         SPACE 5                                                        00158\nUSERID   DS    0H                                                       00159\n*        THIS BLOCK BUILDS SEARCH KEY FOR USERID. MUST BE <9 CHARACTERS 00160\n*        AND WE ADD A PERIOD TO IT TO INDICATE TO GENERIC LOCATE        00161\n*        THAT WE ARE INTERESTED IN THE DATASETS UNDER THE NAME AND      00162\n*        NOT THE ALIAS RECORD (CVOL POINTER) OF THE NAME ITSELF.        00163\n         MVI   0(R1),C'.'                                               00164\n         LA    R3,KEY                                                   00165\n         SR    R1,R3                                                    00166\n         CH    R1,=H'8'                                                 00167\n         BH    ERROR4                                                   00168\n         LA    R1,1(R1)                                                 00169\n         STC   R1,NAME        STORE KEY LENGTH                          00170\n         MVI   LREST,X'80'                                              00171\n         B     GENLOC                                                   00172\n* END OF USERID                                                         00173\n         SPACE 5                                                        00174\nCOMPLEX  DS    0H                                                       00175\n*        NOW WE SEARCH FOR AN IMBEDDED ASTERISK IN INDEX STRUCTURE      00176\n*        CHARACTERS ABOVE IT ARE USED AS THE GENERIC KEY.               00177\n*        CHARACTERS AFTER IT ARE USED AS THE LOWER LEVEL QUALIFIERS.    00178\n         MVI   TRTAB+C'.',0   NO LONGER INTERESTED IN PERIODS           00179\n         TRT   KEY,TRTAB                                                00180\n         BZ    ERROR4                                                   00181\n         B     *(R2)                                                    00182\n         B     ONEPART        NO ASTERISK                               00183\n         B     TWOPART                                                  00184\n         SPACE 5                                                        00185\nONEPART  MVI   LREST,X'80'                                              00186\n         LA    R3,KEY                                                   00187\n         SR    R1,R3                                                    00188\n         STH   R1,LKEY                                                  00189\n         STC   R1,NAME                                                  00190\n         B     GENLOC                                                   00191\n         SPACE 5                                                        00192\nTWOPART  DS    0H                                                       00193\n*        THIS BLOCK HANDLES THE CASE WHERE THERE IS AN EMBEDDED         00194\n*        ASTERISK IN THE INDEX LEVEL. THE CHARACTERS BELOW THE          00195\n*        ASTERISK ARE MOVED TO 'REST'. THE CHARACTERS FROM THE          00196\n*        ASTERISK ON ARE BLANKED IN 'KEY'. THE LENGTH OF THE            00197\n*        NON BLANK PART OF 'REST' LESS ONE IS SAVED IN 'LREST'          00198\n*        FOR USE IN THE LATER CLC INSTRUCTION. THE LENGTH OF            00199\n*        THE KEY IS SAVED IN 'NAME' FOR THE GENERIC LOCATE AND          00200\n*        IN 'LKEY' FOR AN INDICATION OF HOW MANY CHARS TO               00201\n*        SKIP BEFORE LOOKING IN A DSN FOR A MATCH TO 'REST'.            00202\n         LA    R3,KEY+42                                                00203\n         SR    R3,R1         GET LENGTH OF KEY ABOVE ASTERISK           00204\n         MVC   REST,=CL44' ' INITIALIZE REST                            00205\n         EX    R3,MOVREST    MOVE PART BELOW ASTERISK                   00206\n         LA    R3,1(R3)                                                 00207\n         EX    R3,BLNKEY     BLANK KEY FROM ASTERISK ON                 00208\n         SH    R3,=H'43'                                                00209\n         LPR   R3,R3         GET CHARS ABOVE ASTERISK                   00210\n         STH   R3,LKEY                                                  00211\n         STC   R3,NAME                                                  00212\n         TRT   REST,TRTAB    FIND NON-BLANK LENGTH OF REST              00213\n         B     *(R2)                                                    00214\n         B     LENRST                                                   00215\n         B     ERROR4        SORRY, ONLY ONE * PER CUSTOMER             00216\nLENRST   LA    R3,REST+1     CALCULATE LENGTH FROM ADDRESS              00217\n         SR    R1,R3            OF FIRST BLANK                          00218\n         STH   R1,LREST                                                 00219\n         B     GENLOC                                                   00220\nMOVREST  MVC   REST(0),1(R1)                                            00221\nBLNKEY   MVC   0(0,R1),=CL44' '                                         00222\n* END OF TWOPART                                                        00223\n* END OF COMPLEX                                                        00224\n* END OF BLDKEY                                                         00225\n         EJECT                                                          00226\nGENLOC   DS    0H                                                       00227\n*        THIS BLOCK ISSUES A VSAM GENERIC LOCATE TO BUILD AN IN-CORE    00228\n*        LIST OF DATASETS THAT BEGIN WITH THE SEARCH KEY                00229\n*        THERE IS NO GOOD DOCUMENTATION ON THE GENERIC                  00230\n*        LOCATE IN THE LITERATURE. SEE THE CATALOG PLM FOR              00231\n*        WHAT LITTLE THERE IS. THE FORM BELOW WAS INFERRED              00232\n*        FROM SOME FICHE AND BY INTERCEPTING SVC 26 WITH DSS.           00233\n*********************************************************************** 00234\n*    ********************** S V C  2 6 *******************            * 00235\n*       -RETURN CODES 40 AND 44 INDICATE THAT THE WORK AREA IS TOO    * 00236\n*        SMALL TO CONTAIN ALL THE DATA SET NAMES, BUT AS MANY NAMES   * 00237\n*        AS COULD BE HELD HAVE BEEN RETURNED.                         * 00238\n*       -CODE 44 INDICATES THAT SVC 26 COULD NOT DETERMINE THE SIZE   * 00239\n*        WORK AREA REQUIRED, SO CONTINUE PROCESSING THE NAMES THAT    * 00240\n*        WERE RETURNED.                                               * 00241\n*       -CODE 40 INDICATES THAT SVC 26 RETURNED THE REQUIRED WORK     * 00242\n*        AREA SIZE IN THE SECOND HALFWORD OF THE WORK AREA.  FREE     * 00243\n*        THE ORIGINAL WORK AREA, OBTAIN A NEW WORK AREA OF REQUIRED   * 00244\n*        SIZE, AND RE-TRY THE LOCATE REQUEST.                         * 00245\n*       -NOTE THAT SVC 26 CONSIDERS A SIZE OF 32,768 (X'8000') OR     * 00246\n*        MORE A NEGATIVE SIZE AND WILL NOT RETURN ANY INFORMATION.    * 00247\n*        IF MORE THAN 32,767 IS REQUIRED, JUST PROCESS WHAT WAS       * 00248\n*        RETURNED.                                                    * 00249\n*********************************************************************** 00250\n         MVC   GENFLAG,=X'05201100'                                     00251\n         XC    GENX1,GENX1                                              00252\n         XC    GENX2,GENX2                                              00253\n         LA    R1,NAME                                                  00254\n         ST    R1,GENNAME                                               00255\n         GETMAIN RC,LV=X'400000'    CHANGED FROM X'FFF8'                00256\n         ST    R1,GETADDR                                               00257\n         ST    R1,GENWORK                                               00258\n         MVC   0(4,R1),=X'FFF80004'                                     00259\n         LA    R1,GENPARM                                               00260\n         SVC   26                                                       00261\n         LTR   R15,R15                                                  00262\n         BNZ   ERROR4                                                   00263\n         L     R1,GETADDR    GET VSAM CATLG RETURN AREA                 00264\n         LA    R1,0(R1)       CLEAR HIGH BYTE                           00265\n*        LH    R2,2(R1)       GET NUMBER BYTES USED                     00266\n         SR    R2,R2          ZERO OUT REG               LMB-CBT        00267\n         IC    R2,2(R1)       1ST BYTE (OF # BYTES USED) LMB-CBT        00268\n         SLL   R2,8           SHIFT LEFT 8 BITS          LMB-CBT        00269\n         IC    R2,3(R1)       2ND BYTE (OF # BYTES USED) LMB-CBT        00270\n         AR    R2,R1          ADD START ADDR                            00271\n         ST    R2,LAST        SAVE LAST BYTE ADDR                       00272\n         LA    R1,49(R1)      SKIP 4 BYTE PREFIX AND FIRST 45 BYTE ENTR 00273\nCHECKICF CLI   0(R1),X'00'    IF ZERO NO DATASETS FOUND 3/17/89 LMN-CBT 00274\n         BE    ERROR4         SET R15=8 + EOJ           3/17/89 LMN-CBT 00275\n         CLI   0(R1),X'F0'    IS IT A CATALOG NAME      9/07/89 LMN-CBT 00276\n         BE    FNDCTLG        YES, SKIP AROUND IT       9/07/89 LMN-CBT 00277\n         CLI   0(R1),X'C2'    IS IT A GDG               3/17/89 LMN-CBT 00278\n         BNE   FOUNDDS        NO, IT IS A TRUE DATASET  3/17/89 LMN-CBT 00279\nFNDCTLG  LA    R1,45(R1)      YES, SKIP TO NEXT ENTRY   3/17/89 LMN-CBT 00280\n         B     CHECKICF       CONTINUE WITH ICF CTLG CK 3/17/89 LMN-CBG 00281\nFOUNDDS  ST    R1,NEXT        SAVE ADDR OF 1ST DSN      3/17/89 LMN-CBT 00282\n* END OF GENLOC                                                         00283\n         SPACE 10                                                       00284\nCAMLOC   DS    0H                                                       00285\n*        NOW DO A REGULAR CAMLIST NAME LOCATE FOR THE NEXT NON-VSAM     00286\n*        DATASET IN THE INCORE LIST                                     00287\n         XC    CAMLST(16),CAMLST                                        00288\n         LA    R1,KEY                                                   00289\n         ST    R1,CAMLST+4                                              00290\n         LA    R1,VOLCNT                                                00291\n         ST    R1,CAMLST+12                                             00292\n         L     R1,NEXT                                                  00293\nTEST     C     R1,LAST                                                  00294\n         BNL   RET16          NO MORE DATASETS IN LIST                  00295\n         CLI   0(R1),C'A'     IS IT NON-VSAM                            00296\n         BE    S1                                                       00297\nNOGO     LA    R1,45(R1)                                                00298\n         B     TEST                                                     00299\nS1       TM    LREST,X'80'    IS THERE A LOWER QUALIFIER                00300\n         BO    S2             NO, SO GO LOCATE                          00301\n         SPACE 5                                                        00302\nTESTQUAL DS    0H                                                       00303\n*        THIS CODE LOOKS FOR THE CHARACTER STRING BELOW THE             00304\n*        ASTERISK IN THE INDEX SEARCH KEY. THIS STRING MUST             00305\n*        BE SOMEWHERE IN THE DATASET NAME BELOW THE KEY OR              00306\n*        THE NAME IS REJECTED                                           00307\n         LA    R2,1(R1)                                                 00308\n         AH    R2,LKEY        SKIP GENERIC KEY CHARS                    00309\n         LH    R3,LREST       GET # CHARS-1 IN REST                     00310\n         LA    R4,44                                                    00311\n         SR    R4,R3                                                    00312\n         SH    R4,LKEY        R4=# CHARS BELOW KEY + 1                  00313\nCOMP     EX    R3,COMPAR                                                00314\n         BE    S2                                                       00315\n         LA    R2,1(R2)                                                 00316\n         BCT   R4,COMP                                                  00317\n         B     NOGO                                                     00318\nCOMPAR   CLC   REST(0),0(R2)                                            00319\n* END OF TESTQUAL                                                       00320\n         SPACE 5                                                        00321\nS2       DS    0H                                                       00322\n*        NOW TO ISSUE NORMAL LOCATE BY NAME AND RETURN INFORMATION      00323\n*        ACCORDING TO DESCRIPTION OF PARAMETERS IN LEADING DOCUMENT     00324\n         MVC   KEY,1(R1)      COPY DSN                                  00325\n         LA    R1,45(R1)      PT TO NXT DSN                             00326\n         ST    R1,NEXT        SAVE FOR NXT TIME                         00327\n         LA    R1,CAMLST                                                00328\n         SVC   26             LOCATE BY NAME                            00329\n         L     R2,INPARM      NOW GET PASSED PARM LIST                  00330\n         LM    R2,R3,4(R2)    PICK UP 2ND & 3RD USER PARMS              00331\n         MVC   0(44,R2),KEY   SAVE DSN                                  00332\n         MVC   0(6,R3),SER    SAVE VOL                                  00333\n         SR    R15,R15        INITIALIZE REG                  LMB-CBT   00334\n         TM    DEVT+2,X'20'   IS THIS DISK                              00335\n         BZ    CKTAPE         NO, PASS RC=08 OR 12            LMB-CBT   00336\n         CLI   VOLCNT+1,1     IS IT MULTI-VOL                           00337\n         BE    RC             NO, PASS RC=00 1 VOL-SER DASD   LMB-CBT   00338\n         LA    R15,12         YES, PASS RC=12 MULTI-VOL DASD  LMB-CBT   00339\n         B     RC                                             LMB-CBT   00340\nCKTAPE   CLI   VOLCNT+1,1     IS IT MULTI-VOL                 LMB-CBT   00341\n         BE    ERROR8         NO, PASS RC=08 TAPE + 1 VOL-SER LMB-CBT   00342\n         LA    R15,18         YES, PASS RC=18 MULTI-VOL TAPE  LMB-CBT   00343\n         B     RC                                             LMB-CBT   00344\n* END OF CAMLOC                                                         00345\n         SPACE 10                                                       00346\n*VARIOUS RETURNS                                                        00347\n*ERROR4  LA    R15,4                                                    00348\nERROR4   C     R15,=F'44'     IF RC = 44 (X'2C') KEEP IT      LMB-CBT   00349\n         BE    ERROR4A                                                  00350\n         C     R15,=F'40'     IF RC = 40 (X'28') KEEP IT      LMB-CBT   00351\n         BE    ERROR4A                                                  00352\n         LA    R15,4          INITIALIZE RC TO 4              LMB-CBT   00353\nERROR4A  B     RC                       KEEP THE RETURN CODE AS IS      00354\nERROR8   LA    R15,8                                                    00355\n         B     RC                                                       00356\nRET16    FREEMAIN R,LV=X'FFF8',A=GETADDR                                00357\n         LA    R15,16                                                   00358\n         B     RC                                                       00359\nERROR20  LA    R15,20                                                   00360\nRC       L     R1,INPARM                                                00361\n         TM    12(R1),X'80'                                             00362\n         BO    EXIT                                                     00363\n         L     R1,16(R1)                                                00364\n         ST    R15,0(R1)                                                00365\nEXIT     L     R13,4(R13)                                               00366\n         ST    R15,16(R13)                                              00367\n         L     R1,8(R13)                                                00368\n         FREEMAIN R,LV=LSECT,A=(1)                                      00369\n         LM    R14,R12,12(R13)                                          00370\n         BR    R14                                                      00371\n         EJECT                                                          00372\nDSASECT  DSECT                                                          00373\n         DS    18A                                                      00374\nGENPARM  DS    0F            GENERIC LOCATE PARM AREA                   00375\nGENFLAG  DS    F                                                        00376\nGENNAME  DS    A                                                        00377\nGENX1    DS    A                                                        00378\nGENWORK  DS    A                                                        00379\nGENX2    DS    3A                                                       00380\nKEYLEN   DS    0H                                                       00381\n         DS    X                                                        00382\nNAME     DS    X                                                        00383\nKEY      DS    CL44                                                     00384\nINPARM   DS    A             SAVE R1 UPON ENTRY TO LOCINDEX             00385\nCAMLST   DS    4A                                                       00386\n         DS    0D                                                       00387\nDATASW   DS    X             SW IF DATASETS RETURNED  4/7/89 LMN-CBT    00388\n         DS    0D                                     4/7/89 LMN-CBT    00389\nLSECT    EQU   *-DSASECT                                                00390\n         SPACE 10                                                       00391\nGETSECT  DSECT               GETMAINED VSAM WORK AREA                   00392\nGETLEN   DS    H             LENGT OF AREA                              00393\nGETUSED  DS    H             AMOUNT ALLOCATED CURRENTLY TO DATA         00394\nGETENTY  DS    0CL45         FIRST ELEMENT OF DSN ARRAY                 00395\nGETTYPE  DS    C             TYPE FLAG ('A'=NONVSAM)                    00396\nGETNAME  DS    CL44          DSN                                        00397\n         SPACE 10                                                       00398\nWORKSECT DSECT               WORK AREA PASSED AS PARM                   00399\nGETADDR  DS    A             ADDRESS OF GETMAINED VSAM WORK AREA        00400\nTRTAB    DS    0CL256                                                   00401\nVOLCNT   DS    H                                                        00402\nDEVT     DS    XL4                                                      00403\nSER      DS    CL6                                                      00404\nSEQ      DS    H                                                        00405\n         DS    CL251                                                    00406\nOINDEX   DS    CL44          PREVIOUS VALUE OF FIRST PARM               00407\nREST     DS    CL44          LOW QUALIFIER COMPARE STRING               00408\nNEXT     DS    A             ADDRESS OF NEXT DSN IN INCORE TABLE        00409\nLAST     DS    A             ADDRESS OF BYTE AFTER END OF DSNLIST       00410\nLKEY     DS    H             LENGTH OF GENERIC KEY                      00411\nNOREST   DS    0B            FLAG IF 'REST' IS EMPTY                    00412\nLREST    DS    H             LENGTH OF REST                             00413\n#PAN$AUD CSECT                                                          004134\n$PAN#AUD DC    CL21'001CBT502    09/08/89'                              004135\n         END                                                            00414\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOB": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x992/\\x00\\x992/\\x16'\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd4\\xe9\\xc5\\xd3\\xc4\\xc5\\xd5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-11-18T00:00:00", "modifydate": "1999-11-18T16:27:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "MZELDEN"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/* TRACE ?I */\narg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"BROWSE DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOE": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x992/\\x00\\x992/\\x16'\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd4\\xe9\\xc5\\xd3\\xc4\\xc5\\xd5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-11-18T00:00:00", "modifydate": "1999-11-18T16:27:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "MZELDEN"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/* TRACE ?I */\narg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"EDIT   DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOV": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x000\\x00\\x992/\\x01\\x06\\x00O\\x00\\x19\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-11-18T00:00:00", "modifydate": "2006-01-04T00:19:30", "lines": 26, "newlines": 26, "modlines": 0, "user": "SBGOLOB"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/* TRACE ?I */\narg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"VIEW   DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT048/FILE048.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT048", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}