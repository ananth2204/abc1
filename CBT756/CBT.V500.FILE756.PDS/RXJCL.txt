/*                                 REXX                               */
/* PROGRAM .... : RXJCL                                               */
/* FUNCTION ... : JCL PRE-PROCESSOR AND LANGUAGE SUBSET               */
/* AUTHOR ..... : DFGAETA (DFGAETA@BR.IBM.COM)                        */
/*                                                                    */
ARG ZZPARM

  ZZR = ISPF("ISPEXEC CONTROL DISPLAY REFRESH")

  IF ZZPARM = '' THEN DO
     ZZLIBJCLI = 'GAETA.DATA'
     ZZLIBJCLO = 'GAETA.DATA'
     ZZMM = 'JCLTST6'
     END
  ELSE DO
     PARSE VALUE ZZPARM WITH "'" ZTEMP "'"
     PARSE VALUE ZTEMP WITH ZZLIBJCLI '(' ZZMM ')'
     ZZLIBJCLO = ZZLIBJCLI
     END


  ZZRR = TSO("FREE F(JCLIN)")
  ZZRR = TSO("ALLOC F(JCLIN) DA('"||ZZLIBJCLI||"("||ZZMM||")') SHR")

  CALL READ_JCL
  CALL PROC_JCL
  ZZOUTMODE = STRIP(ZZOUTMODE)
  IF ZZOUTMODE = 'TSO' THEN DO
     CALL PROC_JCL_TSO
     END
  IF ZZOUTMODE = 'LST' THEN DO
     CALL PROC_JCL_LIST
     END
  IF ZZOUTMODE = 'RDR' THEN DO
     CALL PROC_JCL_SUB
     END

RETURN

READ_JCL:

  ZZRR = TSO("EXECIO * DISKR JCLIN (STEM ZZJCL. FINIS)")
  ZZJCLI = ZZJCL.0
  IF RC \= 0 THEN DO
     SAY 'JCLE001: JCL LOAD ERROR'
     END

RETURN

LIST_JCL:

  DO I = 1 TO ZZJCLI
    SAY '>>' ZZJCL.I
  END

RETURN

PROC_JCL:

  ZZJCLOI = 0
  ZZI1 = 1
  ZZI2 = 0
  ZZINS = 0
  ZZSEQTMP = 0
  ZZOUTMODE = 'LST'
  ZZILOOP = 0
  ZZCOND = 0
  ZZIF = 0
  ZZ_SETOSEQ_ZEROS = 0
  ZZDEBUG=0
  ZZSTACK=0
  ZZLLBL.0=0
  ZZNLBL.0=0
  ZZILBL=0

  DO ZZILOOP = 1 TO 8
    ZZRPTIDX.ZZILOOP  = 0
    ZZRPTINC.ZZILOOP  = 0
    ZZRPTLINE.ZZILOOP = 0
  END
  ZZILOOP = 0

  ZVARNAME = ''
  ZVARDATA = ''
  ZZMAPI = 0
  ZZSCR.1='C,2,28,X,H,* RXJCL - INPUT SCREEN *'
  ZZLIN=4
  ZZITEM=2
  ZZVV=1
  ZZFLAG=0
  DO ZZI1 = 1 TO ZZJCLI
    ZZS = ZZJCL.ZZI1
    ZZS = SUBSTR(ZZS,1,72)
    IF INDEX(ZZS,' %%INPUT ') > 0 THEN DO
       ZZFLAG=1
       ZZL0 = '%%INPUT'
       ZZL1 = INDEX(ZZS,' %%INPUT ')
       ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
       ZZP2 = ' '
       ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+9))
       PARSE VALUE ZZR1 WITH ZZRR1 ZZRR2
       ZZMAPI = ZZMAPI + 1
       ZVARNAME = STRIP(ZZRR1)
       IF ZZRR2\='' THEN DO
          ZZEXPR=ZVARNAME"='"||ZZRR2||"'"
          INTERPRET ZZEXPR
          END
       ELSE DO
          ZZEXPR=ZVARNAME||"=''"
          INTERPRET ZZEXPR
          END
       ZVARDATA = ''
       ZZSCR.ZZITEM='C,'||ZZLIN||',5,X,X,'||SUBSTR(ZVARNAME,1,10)||' ='
       ZZITEM=ZZITEM+1
       ZZSCR.ZZITEM='I,'||ZZLIN||',19,44,X,'||ZVARNAME
       ZZITEM=ZZITEM+1
       IF ZZITEM > 22 THEN DO
          SAY 'JCLE002 : EXCEED MAX NUMBER OF FIELDS SCREEN'
          RETURN 8
          END
       ZZLIN=ZZLIN+1
       ZZVV=ZZVV+1
    END
  END
  ZZITEM=ZZITEM-1
  IF ZZFLAG=1 THEN DO
     "SENDMAP ZZSCR "ZZITEM" BEEP"
  END
  ZZI1=1

  ZZMMAP=0

  ZZRR = TSO('ALLOC F(RRTEMP) REUSE NEW DEL DSO(PO) DIR(1) SP(1)' ,
             'TRACK RECFM(F B) LRECL(80)')
  ZZRR = ISPF('LIBDEF ISPPLIB LIBRARY ID(RRTEMP)')

PROC_JCL_REPEAT:

  IF ZZI1 > ZZJCLI THEN DO
     SIGNAL PROC_JCL_REPEAT_EXIT
     END

  ZZS = ZZJCL.ZZI1
  ZZS = SUBSTR(ZZS,1,72)

  ZZIREXX = INDEX(ZZS,'##') + 2
  ZZSRX = STRIP(SUBSTR(ZZS,ZZIREXX))
  ZZB = ''

  IF INDEX(ZZS,' %%EREPEAT ') > 0 THEN DO
     ZZL0 = '%%EREPEAT'
     ZZL1 = INDEX(ZZS,' %%EREPEAT ')
     ZZRPTIDX.ZZILOOP = ZZRPTIDX.ZZILOOP + 1
     IF ZZRPTIDX.ZZILOOP >= ZZRPTINC.ZZILOOP THEN DO
        ZZRPTIDX.ZZILOOP  = 0
        ZZRPTINC.ZZILOOP  = 0
        ZZRPTLINE.ZZILOOP = 0
        ZZILOOP = ZZILOOP - 1
        END
     ELSE DO
        ZZI1 = ZZRPTLINE.ZZILOOP
        SIGNAL PROC_JCL_REPEAT
        END
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%CANCEL ') > 0 THEN DO
     ZZOUTMODE='NULL'
     SIGNAL PROC_JCL_REPEAT_EXIT
     END

  IF INDEX(ZZS,' %%OUT ') > 0 THEN DO
     ZZL0 = '%%OUT'
     ZZL1 = INDEX(ZZS,' %%OUT ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+7))
     IF ZZP2 = 'LST' THEN DO
        ZZOUTMODE = 'LST'
        END
     IF ZZP2 = 'TSO' THEN DO
        ZZOUTMODE = 'TSO'
        END
     IF ZZP2 = 'NULL' THEN DO
        ZZOUTMODE = 'NULL'
        END
     IF ZZP2 = 'RDR' THEN DO
        ZZOUTMODE = 'RDR'
        END
     ZZS = ''
     ZZINS = 1
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%M ') > 0 THEN DO
     ZZL0 = '%%M'
     ZZL1 = INDEX(ZZS,' %%M ')
     ZZP1 = SUBSTR(ZZS,ZZL1+5)
     ZZIMAP = ZZIMAP + 1
     ZZMMAP.ZZIMAP = STRIP(ZZP1,'T')
     ZZS = ''
     ZZINS = 1
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%BEGMAP ') > 0 THEN DO
     ZZL0 = '%%BEGMAP'
     ZZL1 = INDEX(ZZS,' %%BEGMAP ')
     ZZP1 = SUBSTR(ZZS,ZZL1+10)
     ZZMNMAP = STRIP(ZZP1)
     ZZMMAP = 1
     ZZMMAP.0 = 0
     ZZIMAP = 0
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%ENDMAP ') > 0 THEN DO
     ZZS = ''
     ZZMMAP = 2
     CALL MAKEMAP
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%SHOW ') > 0 THEN DO
     ZZL0 = '%%SHOW'
     ZZL1 = INDEX(ZZS,' %%SHOW ')
     ZZP1 = STRIP(SUBSTR(ZZS,ZZL1+8))
     ZZRR=ISPF("ADDPOP")
     IF ZZP1='' THEN DO
        ZZRR=ISPF("DISPLAY PANEL("||ZZMNMAP||")")
        END
     ELSE DO
        ZZRR=ISPF("DISPLAY PANEL("||ZZP1||")")
        END
     ZZRR=ISPF("REMPOP")
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%INFODSN ') > 0 THEN DO
     ZZL0 = '%%INFODSN'
     ZZL1 = INDEX(ZZS,' %%INFODSN ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+11))
     INTERPRET "ZZEXPR="||ZZP2
     ZZEXPR = "'"||ZZEXPR||"'"
     ZZRR = LISTDSI(ZZEXPR)
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%MODE ') > 0 THEN DO
     ZZL0 = '%%MODE'
     ZZL1 = INDEX(ZZS,' %%MODE ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+8))
     PARSE VALUE ZZP2 WITH ZZP21 ZZP22
     IF ZZP21 = 'STACK' & ZZP22='ON' THEN ZZSTACK=1
     IF ZZP21 = 'STACK' & ZZP22='OFF' THEN ZZSTACK=0
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%LABEL ') > 0 THEN DO
     ZZL0 = '%%LABEL'
     ZZL1 = INDEX(ZZS,' %%LABEL ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+9))
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%SAVE ') > 0 THEN DO
     ZZL0 = '%%SAVE'
     ZZL1 = INDEX(ZZS,' %%SAVE ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+8))
     IF SUBSTR(STRIP(ZZP2),1,2) = '%%' THEN DO
        INTERPRET "ZZEXPR="||SUBSTR(STRIP(ZZP2),3)
        END
     ELSE DO
        INTERPRET "ZZEXPR='"||ZZP2||"'"
        END
     ZZRR = TSO("ALLOC F(RXTEMP) DA('"||ZZEXPR||"') SHR")
     ZZJCLO.0 = ZZJCLOI
     ZZRR = TSO("EXECIO "ZZJCLOI" DISKW RXTEMP (STEM ZZJCLO. FINIS")
     ZZRR = TSO("FREE F(RXTEMP)")
     ZZJCLOI = 0
     DROP ZZJCLO.
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%TSO ') > 0 THEN DO
     ZZL0 = '%%TSO'
     ZZL1 = INDEX(ZZS,' %%TSO ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+7))
     ZZRR = OUTTRAP(ZZMSG.)
     ADDRESS TSO ZZP2
     ZZRR = OUTTRAP()
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%EDIT ') > 0 THEN DO
     ZZL0 = '%%EDIT'
     ZZL1 = INDEX(ZZS,' %%EDIT ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+8))
     IF SUBSTR(STRIP(ZZP2),1,2) = '%%' THEN DO
        INTERPRET "ZZEXPR="||SUBSTR(STRIP(ZZP2),3)
        END
     ELSE DO
        INTERPRET "ZZEXPR='"||ZZP2||"'"
        END
     ZZR=ISPF("EDIT DATASET('"||ZZEXPR||"')")
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%BROWSE ') > 0 THEN DO
     ZZL0 = '%%BROWSE'
     ZZL1 = INDEX(ZZS,' %%BROWSE ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+10))
     IF SUBSTR(STRIP(ZZP2),1,2) = '%%' THEN DO
        INTERPRET "ZZEXPR="||SUBSTR(STRIP(ZZP2),3)
        END
     ELSE DO
        INTERPRET "ZZEXPR='"||ZZP2||"'"
        END
     ZZR=ISPF("BROWSE DATASET('"||ZZEXPR||"')")
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%TRIM ') > 0 THEN DO
     ZZL0 = '%%TRIM'
     ZZL1 = INDEX(ZZS,' %%TRIM ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+8))
     ZZEXPR=ZZP2'=STRIP('ZZP2')'
     INTERPRET ZZEXPR
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%RX ') > 0 THEN DO
     ZZL0 = '%%RX'
     ZZL1 = INDEX(ZZS,' %%RX ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+6))
     INTERPRET ZZP2
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%ISPF ') > 0 THEN DO
     ZZL0 = '%%ISPF'
     ZZL1 = INDEX(ZZS,' %%ISPF ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+8))
     ZZRR = OUTTRAP(ZZMSG.)
     ADDRESS ISPEXEC ZZP2
     ZZRR = OUTTRAP()
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%DROP ') > 0 THEN DO
     ZZL0 = '%%DROP'
     ZZL1 = INDEX(ZZS,' %%DROP ')
     ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+7))
     ZZJCLOI = 0
     DROP ZZJCLO.
     ZZINS = 0
     ZZI1 = ZZI1 + 1
     SIGNAL PROC_JCL_REPEAT
     END

  IF INDEX(ZZS,' %%INC ') > 0 THEN DO
     ZZL0 = '%%INC'
     ZZL1 = INDEX(ZZS,' %%INC ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+7))
     INTERPRET ZZP2"="ZZP2"+1"
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%DEC ') > 0 THEN DO
     ZZL0 = '%%DEC'
     ZZL1 = INDEX(ZZS,' %%DEC ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+7))
     INTERPRET ZZP2"="ZZP2"-1"
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%INPUT ') > 0 THEN DO
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%SKIP ') > 0 THEN DO
     ZZL0 = '%%DEC'
     ZZL1 = INDEX(ZZS,' %%DEC ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+8))
     INTERPRET "ZZI1=ZZI1" ZZP2
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_REPEAT
     END

  IF INDEX(ZZS,' %%GET ') > 0 THEN DO
     ZZL0 = '%%GET'
     ZZL1 = INDEX(ZZS,' %%GET ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+7))
     PULL ZZPULL
     INTERPRET ZZP2"='"||ZZPULL||"'"
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%PUT ') > 0 THEN DO
     ZZL0 = '%%PUT'
     ZZL1 = INDEX(ZZS,' %%PUT ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+7))
     QUEUE ZZP2
     ZZS = ''
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,'%%OUSER') > 0 THEN DO
     ZZL0 = '%%OUSER'
     ZZL1 = INDEX(ZZS,'%%OUSER')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = USERID()
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+7))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 1
     SIGNAL PROC_JCL_INSERT
     END

  IF INDEX(ZZS,'%%OMONTH') > 0 THEN DO
     ZZL0 = '%%OMONTH'
     ZZL1 = INDEX(ZZS,'%%OMONTH')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = DATE()
     PARSE VALUE ZZP2 WITH ZZD1 ZZM1 ZZA1
     UPPER ZZM1
     ZZP2 = ZZM1
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+8))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 1
     SIGNAL PROC_JCL_INSERT
     END

  IF INDEX(ZZS,' %%REPEAT ') > 0 THEN DO
     ZZL0 = '%%REPEAT'
     ZZL1 = INDEX(ZZS,' %%REPEAT ')
     ZZP1 = STRIP(SUBSTR(ZZS,ZZL1+10))
     ZZEXPR = 0
     INTERPRET "ZZEXPR=" ZZP1
     ZZILOOP = ZZILOOP + 1
     ZZRPTIDX.ZZILOOP = 0
     ZZRPTINC.ZZILOOP = ZZEXPR
     ZZRPTLINE.ZZILOOP = ZZI1 + 1
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%SCAN ') > 0 THEN DO
     ZZL0 = '%%SCAN'
     ZZL1 = INDEX(ZZS,' %%SCAN ')
     ZZP1 = STRIP(SUBSTR(ZZS,ZZL1+8))
     PARSE VALUE ZZP1 WITH ZZP1_1 ZZP1_2 ZZP1_3
     IF ZZP1_1 = 'DSN' THEN DO
        CALL PROC_CMD_SCAN_DSN ZZP1_1,ZZP1_2,ZZP1_3
        END
     IF ZZP1_1 = 'LIB' THEN DO
        CALL PROC_CMD_SCAN_LIB ZZP1_1,ZZP1_2,ZZP1_3
        END
     IF ZZP1_1 = 'SEQ' THEN DO
        CALL PROC_CMD_SCAN_SEQ ZZP1_1,ZZP1_2,ZZP1_3
        END
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%IF ') > 0 THEN DO
     ZZL0 = '%%IF'
     ZZL1 = INDEX(ZZS,' %%IF ')
     ZZP1 = STRIP(SUBSTR(ZZS,ZZL1+6))
     ZZCOND = 0
     ZZIF = 0
     INTERPRET 'IF ' ZZP1 ' THEN ZZCOND = 1'
     IF ZZCOND = 1 THEN DO
        ZZINS = 0
        ZZIF = 1
        SIGNAL PROC_JCL_SKIP
        END
     ELSE DO
        ZZIF = 2
        ZZI1 = ZZI1 + 1
        DO WHILE INDEX(ZZJCL.ZZI1,' %%ELSE ') = 0 & ,
                 INDEX(ZZJCL.ZZI1,' %%ENDIF ') = 0
          ZZI1 = ZZI1 + 1
        END
        END
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%ENDIF ') > 0 THEN DO
     ZZIF = 0
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%ELSE ') > 0 THEN DO
     IF ZZIF = 1 THEN DO
        ZZI1 = ZZI1 + 1
        DO WHILE INDEX(ZZJCL.ZZI1,' %%ENDIF ') = 0
          ZZI1 = ZZI1 + 1
        END
        END
     ZZINS = 0
     ZZIF = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,'%%ODAY') > 0 THEN DO
     ZZL0 = '%%ODAY'
     ZZL1 = INDEX(ZZS,'%%ODAY')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = DATE()
     PARSE VALUE ZZP2 WITH ZZD1 ZZM1 ZZA1
     ZZP2 = ZZD1
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+6))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 1
     SIGNAL PROC_JCL_INSERT
     END

  IF INDEX(ZZS,' %%SET ') > 0 THEN DO
     ZZL0 = '%%SET'
     ZZL1 = INDEX(ZZS,' %%SET ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = ' '
     ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+7))
     INTERPRET ZZR1
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+6))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%ENVSET ') > 0 THEN DO
     ZZL0 = '%%SET'
     ZZL1 = INDEX(ZZS,' %%ENVSET ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = ' '
     ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+10))
     IF SUBWORD(ZZR1,1,1) = 'OSEQ' THEN DO
        ZZ_SETOSEQ_ZEROS = SUBWORD(ZZR1,2,1)
        END
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+6))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%PRINT ') > 0 THEN DO
     ZZL0 = '%%OUT'
     ZZL1 = INDEX(ZZS,' %%PRINT ')
     ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+9))
     INTERPRET "SAY "||ZZR1
     ZZS = ZZB
     ZZINS = 0
     SIGNAL PROC_JCL_SKIP
     END

  IF INDEX(ZZS,' %%SUB ') > 0 THEN DO
     ZZL0 = '%%SUB'
     ZZL1 = INDEX(ZZS,' %%SUB ')
     ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+7))
     CALL PROC_JCL_SUB
     ZZJCLOI = 0
     DROP ZZJCLO.
     ZZINS = 0
     ZZI1 = ZZI1 + 1
     SIGNAL PROC_JCL_REPEAT
     END

  IF INDEX(ZZS,' %%DROP ') > 0 THEN DO
     ZZL0 = '%%DROP'
     ZZL1 = INDEX(ZZS,' %%DROP ')
     ZZR1 = STRIP(SUBSTR(ZZS,ZZL1+7))
     ZZJCLOI = 0
     DROP ZZJCLO.
     ZZINS = 0
     ZZI1 = ZZI1 + 1
     SIGNAL PROC_JCL_REPEAT
     END

  DO WHILE INDEX(ZZS,'%%OYEAR') > 0
  IF INDEX(ZZS,'%%OYEAR') > 0 THEN DO
     ZZL0 = '%%OYEAR'
     ZZL1 = INDEX(ZZS,'%%OYEAR')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = DATE()
     PARSE VALUE ZZP2 WITH ZZD1 ZZM1 ZZA1
     ZZP2 = ZZA1
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+7))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 1
     SIGNAL PROC_JCL_INSERT
     END
  END

  DO WHILE INDEX(ZZS,'%%ODATE') > 0
  IF INDEX(ZZS,'%%ODATE') > 0 THEN DO
     ZZL0 = '%%ODATE'
     ZZL1 = INDEX(ZZS,'%%ODATE')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = DATE('S')
     ZZP3 = STRIP(SUBSTR(ZZS,ZZL1+7))
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 1
     SIGNAL PROC_JCL_INSERT
     END
  END

  DO WHILE INDEX(ZZS,'%%OSEQ') > 0
  IF INDEX(ZZS,'%%OSEQ') > 0 THEN DO
     ZZL0 = '%%OSEQ'
     ZZL1 = INDEX(ZZS,'%%OSEQ')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZSEQTMP = ZZSEQTMP + 1
     IF ZZ_SETOSEQ_ZEROS = 0 THEN DO
        ZZP2 = ZZSEQTMP
        END
     ELSE DO
        ZZP2 = TRANSLATE(FORMAT(ZZSEQTMP,ZZ_SETOSEQ_ZEROS),'0',' ')
        END
     ZZP3 = SUBSTR(ZZS,ZZL1+6)
     ZZB = ZZP1||ZZP2||ZZP3
     ZZS = ZZB
     ZZINS = 0
     END
  END

  DO WHILE INDEX(ZZS,'%%(') > 0
  IF INDEX(ZZS,'%%(') > 0 THEN DO
     ZZL0 = '%%'
     ZZL1 = INDEX(ZZS,'%%(')
     ZZP1 = SUBSTR(ZZS,1,ZZL1-1)
     ZZP2 = STRIP(SUBSTR(ZZS,ZZL1+3,INDEX(ZZS,')')-ZZL1-3))
     ZZP3 = SUBSTR(ZZS,INDEX(ZZS,')')+1)
     INTERPRET "ZZPX="||ZZP2
     ZZB = ZZP1||ZZPX||ZZP3
     ZZS = ZZB
     ZZINS = 0
     END
  END

  IF ZZINS = 1 THEN DO
     SAY ZZB
     ZZINS = 0
     END

PROC_JCL_INSERT:
  ZZJCLOI = ZZJCLOI + 1
  ZZJCLO.ZZJCLOI = STRIP(ZZS,'T')

PROC_JCL_SKIP:
  ZZI1 = ZZI1 + 1
  SIGNAL PROC_JCL_REPEAT

PROC_JCL_REPEAT_EXIT:
RETURN

INIT_JCL_VARS:
  ZZVN.1 = '%%ODATE'
  ZZVN.0 = 1
RETURN

PROC_JCL_LIST:
  IF ZZJCLOI = 0 THEN DO
     RETURN
     END
  ZZR = TSO("ALLOC F(TMPTMP) REUSE NEW DEL DSO(PS) SP(10) TRACK ",
            " RECFM(F B) LRECL(80)")
  ZZJCLO.0=ZZJCLOI
  ZZR = TSO("EXECIO "ZZJCLOI" DISKW TMPTMP (STEM ZZJCLO. FINIS")
  ZZR = ISPF("LMINIT DATAID(ZDID1) DDNAME(TMPTMP) ENQ(SHR) ORG(PS)")
  ZZR = ISPF("EDIT DATAID(&ZDID1)")
  ZZR = ISPF("LMFREE DATAID(&ZDID1)")
  ZZR = TSO("FREE F(TMPTMP)")
RETURN

PROC_JCL_TSO:
  IF ZZJCLOI = 0 THEN DO
     RETURN
     END
  DO ZZI=1 TO ZZJCLOI
    SAY 'TSO: '||ZZJCLO.ZZI
  END
RETURN

PROC_CMD_SCAN_DSN:
  PARSE ARG ZZXP1,ZZXP2,ZZXP3

  IF SUBSTR(STRIP(ZZXP2),1,2) = '%%' THEN DO
     INTERPRET "ZZEXPR="||SUBSTR(STRIP(ZZXP2),3)
     END
  ELSE DO
     INTERPRET "ZZEXPR='"||ZZXP2||"'"
     END
  ZZR = ISPF("LMDINIT LISTID(ZZDLST) LEVEL("||ZZEXPR||")")
  ZZIX = 0
  ZZR = ISPF("LMDLIST LISTID("ZZDLST") OPTION(LIST) DATASET(ZZL) ,
             STATS(YES)")
  DO WHILE ZZR = 0
    ZZIX = ZZIX + 1
    IF ZZSTACK=0 THEN DO
       ZZEXPR=ZZXP3||"."||ZZIX||"='"||ZZL||"'"
       INTERPRET ZZEXPR
       END
    ELSE DO
       QUEUE ZZL
       END
    ZZR = ISPF("LMDLIST LISTID("ZZDLST") OPTION(LIST) DATASET(ZZL) ,
               STATS(YES)")
  END
  ZZR = ISPF("LMDFREE LISTID("ZZDLST")")
  IF ZZSTACK=0 THEN DO
     ZZEXPR=ZZXP3||".0="||ZZIX
     INTERPRET ZZEXPR
     END
RETURN

PROC_JCL_SUB:
  II = 0
  DO II = 1 TO ZZJCLOI
    IF ZZOUTMODE = 'LST' THEN DO
       SAY SUBSTR(ZZJCLO.II,1,79)
       END
    IF ZZOUTMODE = 'RDR' THEN DO
       QUEUE ZZJCLO.II
       END
  END
  IF ZZOUTMODE = 'RDR' THEN DO
     ZZRR = TSO("EXECIO " ZZJCLOI " DISKW INTRDR (FINIS")
     END
RETURN

PROC_CMD_SCAN_LIB:
  PARSE ARG ZZXP1,ZZXP2,ZZXP3

  IF SUBSTR(STRIP(ZZXP2),1,2) = '%%' THEN DO
     INTERPRET "ZZEXPR="||SUBSTR(STRIP(ZZXP2),3)
     END
  ELSE DO
     INTERPRET "ZZEXPR='"||ZZXP2||"'"
     END
  "ISPEXEC LMINIT DATAID(ID) DATASET('"||ZZEXPR||"') ORG(PO)"
  "ISPEXEC LMOPEN DATAID("ID")"

  ZZMOD = ""
  ZZIX = 0
  "ISPEXEC LMMLIST DATAID("ID") OPTION(LIST) MEMBER(ZZMOD)"
  DO WHILE RC = 0
    ZZIX = ZZIX + 1
    IF ZZSTACK=0 THEN DO
       ZZEXPR=ZZXP3||"."||ZZIX||"='"||ZZMOD||"'"
       INTERPRET ZZEXPR
       END
    ELSE DO
       QUEUE ZZMOD
       END
    "ISPEXEC LMMLIST DATAID("ID") OPTION(LIST) MEMBER(ZZMOD)"
  END

  "ISPEXEC LMCLOSE DATAID("ID")"
  IF ZZSTACK=0 THEN DO
     ZZEXPR=ZZXP3||".0="||ZZIX
     INTERPRET ZZEXPR
     END

RETURN

PROC_CMD_SCAN_SEQ:
  PARSE ARG ZZXP1,ZZXP2,ZZXP3

  IF SUBSTR(STRIP(ZZXP2),1,2) = '%%' THEN DO
     INTERPRET "ZZEXPR="||SUBSTR(STRIP(ZZXP2),3)
     END
  ELSE DO
     INTERPRET "ZZEXPR='"||ZZXP2||"'"
     END
  ZZRR = TSO("ALLOC F(RXTMP) DA('"||ZZEXPR||"') SHR")

  IF ZZXP3 \= '' THEN DO
     ZZRR = TSO("EXECIO * DISKR RXTMP (STEM "ZZXP3||". FINIS")
     END
  ELSE DO
     ZZRR = TSO("EXECIO * DISKR RXTMP (FINIS")
     END
  ZZRR = TSO("FREE F(RXTMP)")

RETURN

TSO:
  PARSE ARG XCMD
  XMSG = OUTTRAP(ZZMSG.)
  ADDRESS TSO XCMD
  IF ZZDEBUG=1 THEN DO
     SAY 'TSO('RC'):'XCMD
     END
  RRC = RC
  XCMS = OUTTRAP()
RETURN RRC

ISPF:
  PARSE ARG XCMD
  ADDRESS ISPEXEC XCMD
  IF ZZDEBUG=1 THEN DO
     SAY 'ISPF('RC'):'XCMD
     END
  RRC = RC
RETURN RC

MAKEMAP:
  ZZR=ISPF("LMINIT DATAID(DDM) DDNAME(RRTEMP) ENQ(EXCLU)")
  ZZR=ISPF("LMOPEN DATAID(&DDM) OPTION(OUTPUT)")
  CALL LINEWRITE ")ATTR"
  CALL LINEWRITE "+ TYPE(NT)"
  CALL LINEWRITE "? TYPE(CH)"
  CALL LINEWRITE "# TYPE(OUTPUT) JUST(ASIS) CAPS(OFF)"
  CALL LINEWRITE "@ TYPE(INPUT) JUST(ASIS) CAPS(OFF) COLOR(GREEN)"
  CALL LINEWRITE "_ TYPE(INPUT) JUST(ASIS) CAPS(OFF) COLOR(YELLOW)"
  CALL LINEWRITE ")BODY WINDOW(70,"||ZZIMAP+2||")"
  DO ZZIL = 0 TO ZZIMAP
    CALL LINEWRITE ZZMMAP.ZZIL
  END
  CALL LINEWRITE ")INIT"
  CALL LINEWRITE ")REINIT"
  CALL LINEWRITE " REFRESH(*)"
  CALL LINEWRITE ")PROC"
  CALL LINEWRITE "  IF (.RESP = ENTER)"
  CALL LINEWRITE "     &KEY = 'ENTER'"
  CALL LINEWRITE "  ELSE"
  CALL LINEWRITE "     &KEY = .PFKEY"
  CALL LINEWRITE "  &ZCURSOR = .CURSOR"
  CALL LINEWRITE ")END"
  RRC=ISPF("LMMADD DATAID(&DDM) MEMBER("||ZZMNMAP||")")
  RRC=ISPF("LMFREE DATAID(&DDM)")
RETURN

LINEWRITE:
  PARSE ARG ZZREC
  RRC=ISPF("LMPUT DATAID(&DDM) MODE(INVAR) DATALOC(ZZREC) DATALEN(80)")
RETURN RRC
