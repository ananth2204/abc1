              Notes on the TSO/E Authorization Tables
              ----- -- --- ----- ------------- ------

Part 2 ---- Where the actual tables that are used, come from.


You may be surprised to know that the four auth tables:  IKJEFTE2
(TSO command authorization), IKJEFTE8 (programs that can run APF
authorized under a TSO address space), IKJEFTAP (programs that are
authorized by the TSO Service Facility), and IKJEFTNS (programs
which are not allowed to run under TSO-in-Batch), are NOT the tables
that your TSO/E address space listens to.  I'd bet you're surprised
by that, but it's true.  I'll show you.

You can see the truth of this, by the knowledge that whenever you
alter a CSECT in an IKJTABLS load module, you have to LOGON again
for the changes to take effect.  Also, if you do a PARMLIB UPDATE(xx)
TSO command, or a SET IKJTSO=xx console command, and the auth tables
get changed by that, the changes will not affect your TSO userid's
address space unless you LOGON again.  It's an indisputable fact.
Put THAT in your mouth and chew it !!  It's the truth, and nothing
but the truth.  WHY IS THIS SO ?

I didn't know why for a long time.  I don't think that IBM wants to
document the truth here.  But I'll tell you how I discovered it.
I studied the TSO LOGON Work Area, documented by the macro IKJEFLWA
in SYS1.MODGEN.  Just edit it on your screen, and look for the letters
"E8".  Or "AP".  Or even "E2", but there are a lot of occurrences of
E2 there.

You see that the auth tables are pointed to by entries in the LWA.
The LWA is address space specific.  There is one of these created
for each TSO/E address space.  If you browse core, and look at the
addresses where the tables are pointed to in the LWA, you'll see
something very surprising.  They are in the Address Space's own
storage (albeit in Subpool 252).  That means that only these tables
are the ones used by your TSO/E address space, and no others.  The
public tables are copied into your TSO address space at LOGON time.
And these tables, pointed to by your userid-specific LWA, are the
ONLY ones that your TSO address space actually listens to.


TOOLS:  How to deal with each type of table, and substitute program
        names on the fly, etc.

We have a program to deal with the incore TSO auth tables, pointed to
by the LWA, and that program is called TSUB.  The programs we have, to
deal with the PARMLIB-created tables is called ASUB and LSLT (fill in
the last slot).  These programs (except for their "display" functions,
have to run APF-authorized.

Finally, if we want to assemble our own IKJTABLS load module, look
at the ASMTABLS member.  Remember, that for the IKJTABLS load
module to override the PARMLIB-created tables in our TSO session,
the TSO session has to be running the IKJTABLS load module from an
APF-authorized STEPLIB library.  So you have to have your own LOGON
Procedure in PROCLIB to accomplish that.


