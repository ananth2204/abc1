UNAME    TITLE 'UNAME - CHANGE ACEE USER NAME'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO          *
*                   COMMAND.   MUST BE RUN AUTHORIZED.                *
*                                                                     *
*       SYNTAX  :   UNAME NEWNAME                                     *
*                   UNAME 'NAME WITH BLANKS'                          *
*                   UNAME -OFF       (TO 'BLANK' THE USER NAME)       *
*                   UNAME -DEF       (SET NAME TO IBM DEFAULT)        *
*                                    (X'15' PLUS 20 X'FF'S)           *
*                                                                     *
*       FUNCTION:   CHANGE USER NAME POINTED TO BY THE ACEE           *
*                                                                     *
*       NOTE    :   THE ACEEUNAM FIELD (FULLWORD) POINTS TO THE       *
*                   AREA WHERE THE USER NAME IS.  SOMETIMES THE       *
*                   POINTER IS ZEROES.  IN THAT CASE, WE GETMAIN      *
*                   24 BYTES OF STORAGE IN LSQA (SUBPOOL 253)         *
*                   AND POINT ACEEUNAM TO IT.  THEN WE PUT THE        *
*                   USERNAME INTO THAT GETMAINED AREA.                *
*                                                                     *
*                   WE USE THE STORAGE MACRO INSTEAD OF GETMAIN,      *
*                   BECAUSE IT IS EASIER TO USE AND WE HAVE MORE      *
*                   CONTROL.                                          *
*                                                                     *
*       DATE    :   NOV 03, 2020                                      *
*                                                                     *
*       CHANGES :   NOV 04, 2020 - MARKED RE-ENTRANT                  *
*                                                                     *
*                   NOV 05, 2020 - PUT TCBADDR PARAMETER INTO         *
*                       THE STORAGE MACRO, SO THAT THE TCB WON'T      *
*                       GO AWAY DURING THE TSO SESSION.               *
*                       (THANKS TO A DEAR FRIEND FOR THIS ADVICE.)    *
*                                                                     *
*                       FIX RETURN CODE PROCESSING SO IT WORKS NOW.   *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         YREGS
* ------------------------------------------------------------------- *
         MACRO
.*     --------------------------------------
.*     DISPLAY HEX VALUES IN CHARACTER FORMAT
.*     --------------------------------------
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R7,SAVER7A               Save area for BAL register
         STM   R15,R1,HEXSAVE           Save work registers
         LA    R1,&FROM                 Load from address
         LA    R0,&LEN                  Load number of chars to move
         LA    R15,&TO                  Load to address
         BAL   R7,HEX                   Go to routine - do the work
         LM    R15,R1,HEXSAVE           Restore work registers
         L     R7,SAVER7A               Restore BAL register
         MEND
         EJECT
* ------------------------------------------------------------------- *
         SPACE 1
SP000    EQU   0
         SPACE 1
UNAME    CSECT
         USING UNAME,R12
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'UNAME  VER 1.1'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   STM   R14,R12,12(R13)
         LR    R12,R15
         LR    R11,R1              PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         SPACE 1
INITCON  DS    0H
         MVI   FLAG2,X'00'
         MVI   BLANKS-1,X'40'
         MVI   OUTPUT-1,X'40'
         MVI   NEWID-1,X'40'
         MVC   BLANKS(40),BLANKS-1      INIT BLANKS
         MVC   OUTPUT(40),OUTPUT-1      INIT OUTPUT
         MVC   NEWID(20),NEWID-1        INIT NEWID
         MVC   SAVER3A,FULLZERO
         MVC   SAVER4A,FULLZERO
         MVC   SAVER4B,FULLZERO
         MVC   SAVER7A,FULLZERO
         MVC   SAVEACUN,FULLZERO
         MVC   ACEEADDR,FULLZERO
         MVC   CMBUFAD,FULLZERO
CHKIFTSO DS    0H
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R10,12(,R1)         POINT TO ASCB.
         L     R9,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R2,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R2)           CLEAR HIGH BYTE.
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         USING PSCB,R2
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO. STOP ACTION.
         DROP  R2
CONT0    LTR   R11,R11             ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R11)          PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         ST    R1,CMBUFAD          STORE COMMAND BUFFER ADDRESS
         L     R1,CMBUFAD          RELOAD COMMAND BUFFER ADDRESS
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    13,EOJ8             LESS THAN ZERO OR OVERFLOW, OUT.
         AR    R1,R3               POINT ...
         LA    R1,4(,R1)           ... TO CHAR.
         LA    R6,20               LOAD REG FOR BCT LOOP
         LR    R7,R1               INITIALIZE POINTER
         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID
         LA    R8,0                INITIALIZE CHARACTER COUNT
CUTIDLEN DS    0H
         CLI   0(R7),X'7D'         IS THIS CHARACTER A QUOTE?
         BNE   CUTNOQUO
         LA    R7,1(,R7)           BUMP PAST QUOTE
         LA    R1,1(,R1)           BUMP PAST QUOTE
         B     QUOTLOOK            DO NOT WORRY ABOUT BLANKS
CUTNOQUO DS    0H
         CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,CUTNOQUO         TRY FOR BLANK AGAIN
QUOTLOOK DS    0H
         CLI   0(R7),X'7D'         IS THIS CHARACTER A QUOTE?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,QUOTLOOK         TRY FOR BLANK AGAIN
NOMORCUT DS    0H
         MVC   NEWID(20),BLANKS    CLEAR FIELD
         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE
         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID
         OC    NEWID(20),BLANKS    UPPERCASE IT.
         CLC   =C'-OFF',NEWID      ARE WE BLANKING THE USERID?
         BE    BLANKIT             YES.
         CLC   DEFAULTC(4),NEWID   ARE WE DEFAULTING THE NAME?
         BE    DEFAULIT            YES.
ISMODIF  DS    0H                  NO. WE ARE CHANGING IT.
         OI    FLAG2,FLAG2ON       SHOW CHANGE
         B     PREP                NEXT
BLANKIT  DS    0H                  WE ARE BLANKING IT
         OI    FLAG2,FLAG2OFF      SHOW BLANKING
         B     PREP                NEXT
DEFAULIT DS    0H                  WE ARE DEFAULTING IT
         OI    FLAG2,FLAG2DEF      SHOW DEFAULTING
PREP     DS    0H
         LA    R8,1(,R8)           GET USERID LENGTH
         STC   R8,NEWIDL           STORE IT AWAY
KZ       MODESET KEY=ZERO,MODE=SUP
         L     R1,X'6C'(,R10)      POINT TO ASXB
         L     R1,X'C8'(,R1)       POINT TO ACEE
         ST    R1,ACEEADDR         SAVE ACEE ADDRESS
         L     R1,X'64'(,R1)       POINT TO USER NAME STORAGE
         MVC   SAVEACUN,FULLZERO
         ST    R1,SAVEACUN         SAVE POINTER TO USER NAME
         L     R1,SAVEACUN         RELOAD POINTER TO USER NAME
         LTR   R1,R1               IS THE STORAGE THERE?
         BZ    GETSTOR             NO. GET IT.
         B     TESTFLAG            IT'S THERE. DON'T GET MORE.
GETSTOR  DS    0H                  WHEN YOU NEED STORAGE TO PUT NAME
         L     R9,X'218'           MY TCB
         L     R9,X'7C'(,R9)       TCBJSTCB (STAYS AROUND ALL LOGON)
* -------------------------------------------------------------- *
*  TCB PARAMETER CORRECTS A BUG THAT OCCURRED DURING REPEATED    *
*  INVOCATION OF THIS COMMAND.  THE STORAGE MACRO WAS LOOKING    *
*  AT THE WRONG TCB AND WAS CLEARING STORAGE WITHOUT BEING ABLE  *
*  TO REFILL IT WITH THE USER NAME.  (THANKS FRIEND WHO HELPED)  *
* -------------------------------------------------------------- *
         STORAGE OBTAIN,LOC=BELOW,SP=253,LENGTH=24,KEY=0,ADDR=(R1),    X
               TCBADDR=(R9)
*  FIRST BYTE IS A LENGTH, FOLLOWED BY UP TO 20 CHARACTERS.
         MVC   SAVEACUN,FULLZERO
         ST    R1,SAVEACUN         SAVE POINTER TO STORAGE
         LTR   R1,R1               DID WE GET STORAGE?
         BZ    EOJ4                NO. ERROR.
         L     R2,ACEEADDR         POINT TO ACEE
         ST    R1,X'64'(,R2)       PUT STORAGE LOCATION INTO ACEE
TESTFLAG TM    FLAG2,FLAG2OFF      NULLIFYING USERID?
         BO    USERNULL            YES. DO THAT.
         TM    FLAG2,FLAG2DEF      DEFAULTING USERID?
         BO    USERDFLT            YES. DO THAT.
         TM    FLAG2,FLAG2ON       CHANGING USERID?
         BNO   KZ                  NEITHER. SO DO NOTHING.
USIDNEW  DS    0H
         L     R1,SAVEACUN         POINT TO USER NAME
         ST    R3,SAVER3A          SAVE REGISTER FOR WORK.
         L     R3,SAVEACUN         POINT TO USER NAME
         MVC   1(20,R3),BLANKS     INITIALIZE TO BLANKS
         MVC   1(20,R3),NEWID      CHANGE USERID
         MVC   0(1,R3),NEWIDL      USERID LENGTH
         L     R3,SAVER3A          RESTORE REGISTER.
         B     NZ
USERNULL DS    0H                  NULLIFY THE USER NAME ENTRY
         ST    R3,SAVER3A
         L     R3,SAVEACUN         POINT TO USER NAME
         MVC   1(20,R3),BLANKS     ASTERISK AND BLANKS
         MVI   1(R3),C'*'
         MVI   0(R3),X'01'         LENGTH 1
         L     R3,SAVER3A
         B     NZ
USERDFLT DS    0H                  NULLIFY THE USER NAME ENTRY
         ST    R3,SAVER3A
         L     R3,SAVEACUN         POINT TO USER NAME
         MVC   1(20,R3),HILEVS     2OX'FF'
         MVI   0(R3),X'15'         LENGTH 21 AS IN DEFAULT SETTING
         L     R3,SAVER3A
NZ       MODESET KEY=NZERO,MODE=PROB
         B     EOJ0                NORMAL END
EOJ4     LA    R5,4                SET CC = 4.
EOJ      DS    0H                  BYE.
         LR    R1,R13
         L     R13,4(,R13)
         L     R14,12(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LR    R15,R5              RELOAD RC AFTER FREEMAIN
         ST    R15,16(,R13)        PUT IT INTO THE RIGHT PLACE
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     SR    R5,R5               SET CC = 0.
         B     EOJ                 CONT.
EOJ8     LA    R5,8                SET CC = 8.
         B     EOJ                 CONT
         EJECT
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
* - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)         Move byte
         UNPK  0(3,R15),1(2,R15)      Unpack
         TR    0(2,R15),HEXTAB-240    Translate
         LA    R15,2(,R15)            Increment output pointer
         LA    R1,1(,R1)              Increment input pointer
         BCT   R0,HEX                 Decrement length, then loop
         MVI   0(R15),C' '            Blank the trailing byte
         BR    R7                     Return to caller
HEXTAB   DC    C'0123456789ABCDEF'    Translate table
         SPACE
         SPACE 3
         LTORG
         SPACE 3
HILEVS   DC    20X'FF'                       LITERALS
DEFAULTC DC    CL8'-DEFAULT'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*            D A T A    A R E A   -   D Y N A M I C                 *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DATAAREA DSECT
SAVE     DS    9D
STORAPUT DS    5F
HEXSAVE  DS    3F
SAVER3A  DS    F
SAVER4A  DS    F
SAVER4B  DS    F
SAVER7A  DS    F
SAVEACUN DS    F
ACEEADDR DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
NEWIDL   DC    XL1'00'
*
         DC    X'40'           |
BLANKS   DC    CL40' '         |  40 BLANKS
         DC    X'40'           |
OUTPUT   DC    CL40' '         |  40 BLANKS FOR OUTPUT
         DC    X'40'           |
NEWID    DC    CL20' '         |  STORE NEW USER NAME HERE
FLAG2    DS    X
FLAG2ON  EQU   B'10000000'             CHANGE USER NAME
FLAG2OFF EQU   B'01000000'             NULLIFY USER NAME
FLAG2DEF EQU   B'00100000'             DEFAULT USER NAME
         DS    CL72               BUFFER FOR EXPANSION
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJPSCB
         END
