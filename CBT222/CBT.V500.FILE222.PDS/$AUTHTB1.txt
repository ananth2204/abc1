              Notes on the TSO/E Authorization Tables
              ----- -- --- ----- ------------- ------

Part 1 ---- The four tables, their entries, and where they come from.


The TSO/E Authorization tables are of 4 types, basically.


1.  IKJEFTE2 - affectionately known as the "E2 table"

      This is a list of TSO commands that is allowed to run as
      APF-authorized TSO commands.  It is an EXPLICIT list of
      program names.

      The incore values of this table of program names can come
      from either of three places:

      A.  From PARMLIB member IKJTSOxx if the AUTHCMD NAMES( )
          list is coded.

      B.  This PARMLIB list is overridden if the TSO Userid has
          an APF-authorized STEPLIB which contains an IKJTABLS
          load module that has an IKJEFTE2 CSECT in it, containing
          the list of program names.

      C.  If the PARMLIB list has no AUTHCMD NAMES( ) list coded
          in it, then the default IKJTABLS load module which is
          in the LPA list (usually from SYS1.LPALIB) is pointed to.
          That is, the IKJEFTE2 CSECT which is in the IKJTABLS
          load module (from LPALIB) is pointed to.

      The three tables, the E2 Table, the E8 Table, and the AP
      Table, have 8-byte entries consisting of left-justified
      8-byte program names, padded by blanks.  These three tables
      are delimited either by a size number (present if the table
      was constructed from a PARMLIB member), or by an 8-byte
      blank entry in place of a program name.  The blank entry
      is necessary when the table was created by an IKJEFTE2,
      IKJEFTE8, or IKJEFTAP CSECT in an IKJTABLS load module,
      and no other "length determining" quantities are present.

2.  IKJEFTE8 - affectionately known as the "E8 table"

      This is a list of program names that are allowed to run as
      APF-authorized programs, in the TSO User's address space.
      The E8 table is also an EXPLICIT list of program names.

      The incore values of the E8 table comes from either of three
      places, as does the E2 table.  But the PARMLIB list in the
      IKJTSOxx member, is called AUTHPGM NAMES(  ), and the CSECT
      in the IKJTABLS load module is called IKJEFTE8.

      The following example illustrates E8 Table entries, and the
      other tables, E2 and AP, look similar.  The table entries
      are 8 bytes long.

TSUB Command - Display or Change Auth Table Entry
---- -------   ------- -- ------ ---- ----- -----
E8D   04     Program table name + Function code
Table E8 pointed to by the LWA has lengths available.
Table E8 pointed to by the LWA did not come from an APF STEPLIB.
E8 Table Entry Number:         1  ICHUT100
E8 Table Entry Number:         2  ICHUT200
E8 Table Entry Number:         3  ICHUT400
E8 Table Entry Number:         4  ICHDSM00
E8 Table Entry Number:         5  IRRDSC00
E8 Table Entry Number:         6  IRRUT100
E8 Table Entry Number:         7  IRRUT200
E8 Table Entry Number:         8  IRRUT400
E8 Table Entry Number:         9  IRRDPI00
E8 Table Entry Number:        10  CSFDAUTH
E8 Table Entry Number:        11  ICADCT
E8 Table Entry Number:        12  ICADDCT
E8 Table Entry Number:        13  ICADCFGS
E8 Table Entry Number:        14  ICADPFTP
E8 Table Entry Number:        15  ICADFTPD
E8 Table Entry Number:        16  ICADSLOG
E8 Table Entry Number:        17  ICADSOCK
E8 Table Entry Number:        18  ICADSOXD
E8 Table Entry Number:        19  ICADSTAK
E8 Table Entry Number:        20  ICADIKED
E8 Table Entry Number:        21  IEBCOPY
E8 Table Entry Number:        22  IOEGRWAG
E8 Table Entry Number:        23  IOENEWAG
E8 Table Entry Number:        24  IOESALVG
E8 Table Entry Number:        25  IOEBAK
E8 Table Entry Number:        26  IOEBOS
E8 Table Entry Number:        27  IOECM
E8 Table Entry Number:        28  IOEDCEER
E8 Table Entry Number:        29  IOEDFSXP
E8 Table Entry Number:        30  IOEFTS
E8 Table Entry Number:        31  IOEMAPID
E8 Table Entry Number:        32  IOESCOUT
E8 Table Entry Number:        33  IOEUDBG
E8 Table Entry Number:        34  *empty*
Return Code = 0

      A storage dump of the same table looks as follows:

0000B428   >C9D2D1C5  C6E3C5F8  40D7C1D9  D4D3C9C2 *>IKJEFTE8 PARMLIB*
0000B438    C9C3C8E4  E3F1F0F0  C9C3C8E4  E3F2F0F0  *ICHUT100ICHUT200*
0000B448    C9C3C8E4  E3F4F0F0  C9C3C8C4  E2D4F0F0  *ICHUT400ICHDSM00*
0000B458    C9D9D9C4  E2C3F0F0  C9D9D9E4  E3F1F0F0  *IRRDSC00IRRUT100*
0000B468    C9D9D9E4  E3F2F0F0  C9D9D9E4  E3F4F0F0  *IRRUT200IRRUT400*
0000B478    C9D9D9C4  D7C9F0F0  C3E2C6C4  C1E4E3C8  *IRRDPI00CSFDAUTH*
0000B488    C9C3C1C4  C3E34040  C9C3C1C4  C4C3E340  *ICADCT  ICADDCT *
0000B498    C9C3C1C4  C3C6C7E2  C9C3C1C4  D7C6E3D7  *ICADCFGSICADPFTP*
0000B4A8    C9C3C1C4  C6E3D7C4  C9C3C1C4  E2D3D6C7  *ICADFTPDICADSLOG*
0000B4B8    C9C3C1C4  E2D6C3D2  C9C3C1C4  E2D6E7C4  *ICADSOCKICADSOXD*
0000B4C8    C9C3C1C4  E2E3C1D2  C9C3C1C4  C9D2C5C4  *ICADSTAKICADIKED*
0000B4D8    C9C5C2C3  D6D7E840  C9D6C5C7  D9E6C1C7  *IEBCOPY IOEGRWAG*
0000B4E8    C9D6C5D5  C5E6C1C7  C9D6C5E2  C1D3E5C7  *IOENEWAGIOESALVG*
0000B4F8    C9D6C5C2  C1D24040  C9D6C5C2  D6E24040  *IOEBAK  IOEBOS  *
0000B508    C9D6C5C3  D4404040  C9D6C5C4  C3C5C5D9  *IOECM   IOEDCEER*
0000B518    C9D6C5C4  C6E2E7D7  C9D6C5C6  E3E24040  *IOEDFSXPIOEFTS  *
0000B528   >C9D6C5D4  C1D7C9C4  C9D6C5E2  C3D6E4E3 *>IOEMAPIDIOESCOUT*
0000B538    C9D6C5E4  C4C2C740  40404040  40404040  *IOEUDBG         *



3.  IKJEFTAP - affectionately known as the "AP table"

      This is a list of program names that are made to run as
      APF-authorized programs, in the TSO User's address space.
      This is done through the "TSO/E Service Facility".
      The AP table is also an EXPLICIT list of program names.

      The incore values of the AP table comes from either of three
      places, as do the other tables.  But the PARMLIB list in the
      IKJTSOxx member, is called AUTHTSF NAMES(  ), and the CSECT
      in the IKJTABLS load module is called IKJEFTAP.

4.  IKJEFTNS - affectionately known as the "NS table"

      This is a list of TSO commands which are not allowed to run
      under TSO-in-Batch.  These commands must run as "full
      screen" TSO commands.  The NS table is also an EXPLICIT list
      of program names.

      The incore values of the NS table comes from either of three
      places, as do the other tables.  But the PARMLIB list in the
      IKJTSOxx member, is called NOTBKGND NAMES(  ), and the CSECT
      in the IKJTABLS load module is called IKJEFTNS.

      The structure of the NS table is different from the structure
      of the other tables.  The other tables are 8 bytes long, and
      contain only program names.  The IKJEFTNS table entries are
      10 bytes long.  Each program name is prefixed by a two-byte
      field containing the binary length of the program name which
      immediately follows it.  Hence 2 bytes (the length field)
      followed by 8 bytes (the program name) completes the 10-byte
      "NS Table" entry.

      The NS table is delimited by an X'FFFF' in the "program size"
      field, or by a blank table entry.

      The following example illustrates NS Table entries:

TSUB Command - Display or Change Auth Table Entry
---- -------   ------- -- ------ ---- ----- -----
NSD   04     Program table name + Function code
Table NS pointed to by the LWA has no lengths. Blanks will delimit.
Table NS pointed to by the LWA did not come from an APF STEPLIB.
NS Table Entry Number:         1  0008  OPERATOR
NS Table Entry Number:         2  0004  OPER
NS Table Entry Number:         3  0008  TERMINAL
NS Table Entry Number:         4  0004  TERM
NS Table Entry Number:         5  0000  *empty*
Table is in LPALIB, and we will not attempt to alter it.
Nothing was changed.
Return Code = 0

      A storage dump of the same table looks as follows:

00D8A0D0   >C9D2D1C5  C6E3D5E2  40C8E3C5  F7F7F0F6 *>IKJEFTNS HTE7706*
00D8A0E0    0008D6D7  C5D9C1E3  D6D90004  D6D7C5D9  *..OPERATOR..OPER*
00D8A0F0    40404040  0008E3C5  D9D4C9D5  C1D30004  *    ..TERMINAL..*
00D8A100    E3C5D9D4  40404040  00004040  40404040  *TERM    ..      *
00D8A110    40400000  40404040  40404040  00004040  *  ..        ..  *
00D8A120    40404040  40400000  40404040  40404040  *      ..        *
00D8A130    00004040  40404040  40400000  40404040  *..        ..    *
00D8A140    40404040  00004040  40404040  40400000  *    ..        ..*
00D8A150    40404040  40404040  00004040  40404040  *        ..      *
00D8A160    40400000  40404040  40404040  FFFF0000  *  ..        ....*


