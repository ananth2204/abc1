* ------------------------------------------------------------------- *
*      TSO COMMAND PROCESSOR TO DISPLAY THE USERID OF THE INVOKER,    *
*        IN VARIOUS PLACES WITHIN THE SYSTEM.                         *
*                                                                     *
*      THIS PROGRAM IS IN THE PUBLIC DOMAIN.                          *
*                                                                     *
*      Only needs APF authorization to show the TSBX.  If you don't   *
*        want to authorize, just comment those few lines out, and     *
*        eliminate the MODESET macros.                                *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
*  -----------------------------------------------------------------  *
*                  MACRO TO DISPLAY HEX VALUES                        *
*  -----------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         LM    R15,R1,HEXSAVE
         MEND
*  -----------------------------------------------------------------  *
         MACRO
&NAME    HEXR  &TO,&REG
&NAME    STM   R15,R1,HEXSAVE
         LR    R1,&REG
         ST    R1,STORREG
         LA    R0,4
         LA    R15,&TO
         BAL   R4,HEX
         LM    R15,R1,HEXSAVE
         MEND
*  -----------------------------------------------------------------  *
         YREGS
ALLIDS   CSECT
ALLIDS   RMODE 24
ALLIDS   AMODE 24
         USING ALLIDS,R12
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'ALLIDS  VER 1.2 '
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL16' Public Domain '
BEGINN   DS    0H
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD ENTRY POINT INTO BASE REGISTER
         USING ALLIDS,R12          TELL THE ASSEMBLER R12 IS BASE
         LR    R15,R13             SAVE CALLER'S SAVE ADDRESS
         LA    R13,SAVE            GET OUR SAVEAREA ADDRESS
         ST    R15,SAVE+4          STORE HIS SAVEAREA INTO MINE + 4
         ST    R13,8(,R15)         STORE MINE INTO HIS SAVEAREA + 8
INITPGM  DS    0H                  PRINT TITLE


         MVI   OUTLINE-1,X'40'
         MVC   OUTLINE,OUTLINE-1
        MVC OUTLINE(43),=C'ALLIDS - SHOW TSO USERID OCCURRENCES - V1.2'
         APUT  OUTLINE,43
         MVC   OUTLINE,OUTLINE-1
        MVC OUTLINE(43),=C'------   ---- --- ------ -----------   ----'
         APUT  OUTLINE,43
         MVC   OUTLINE,OUTLINE-1
         MVC  OUTLINE(41),=C'   cntl            old    len   new   len'
         APUT  OUTLINE,41
         MVC   OUTLINE,OUTLINE-1
         MVC  OUTLINE(41),=C'  block           field   gth  field  gth'
         APUT  OUTLINE,41
         MVC   OUTLINE,OUTLINE-1
         MVC  OUTLINE(41),=C'   ----           -----    --  -----   --'
         APUT  OUTLINE,41
RUNCHAIN L     R1,16               POINT TO CVT.
         L     R5,X'9C'(,R1)       GET TSVT ADDRESS.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R10,12(,R1)         POINT TO ASCB.
         L     R9,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R2,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R2)           CLEAR HIGH BYTE.
         L     R8,X'34'(,R2)       GET UPT ADDRESS
* ------------------------------------------------------------------- *
         USING PSCB,R2
         MVC   PSCBMSG+18(7),PSCBUSER  MOVE USERID IN FROM PSCB
         MVC   PSCBMSG+30(8),PSCB+X'54' NEW USERID
         OC    PSCBMSG+30(8),BLANKS     IF ZEROS, BLANK IT OUT
         HEX   PSCBMSG+27,1,PSCB+X'7'
         HEX   PSCBMSG+39,1,PSCB+X'20'
         APUT  PSCBMSG,L'PSCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         DROP  R2
         USING UPT,R8
         MVC   UPTMSG+18(7),UPT+X'10' OLD PREFIX
         MVC   UPTMSG+30(8),UPT+X'21' NEW PREFIX
         OC    UPTMSG+30(8),BLANKS      IF ZEROS, BLANK IT OUT
         HEX   UPTMSG+27,1,UPT+X'17'
         HEX   UPTMSG+39,1,UPT+X'29'
         APUT  UPTMSG,L'UPTMSG         DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R1,X'104'(,R1)      POINT TO JCT PREFIX.
         MVC   JCTMSG+18(8),X'18'(R1)  PRINT JCT ID MESSAGE.
         APUT  JCTMSG,L'JCTMSG
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R1,X'104'(,R1)      POINT TO JCT PREFIX.
         XR    R7,R7               CLEAR REGISTER
         ICM   R7,7,X'96'(R1)      POINT REGISTER TO JMR POINTER
         MVC   JMRMSG+18(8),X'10'(R7)  MOVE USERID TO MESSAGE
         APUT  JMRMSG,L'JMRMSG
         L     R1,12(,R9)          POINT TO TIOT
         MVC   TIOTMSG+18(8),0(R1)  MOVE USERID IN FROM TIOT
         APUT  TIOTMSG,L'TIOTMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'B0'(,R10)      POINT TO ASCB JOBNAME
         MVC   ASCBMSG+18(8),0(R1)  MOVE USERID IN FROM ADDRESS
         APUT  ASCBMSG,L'ASCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'6C'(,R10)      POINT TO ASXB
         LA    R3,X'C0'(,R1)         POINT TO ASXB USERID
         MVC   ASXBMSG+18(8),0(R3)    MOVE ASXB USERID
         APUT  ASXBMSG,L'ASXBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'6C'(,R10)      POINT TO ASXB
         L     R1,X'C8'(,R1)       POINT TO ACEE
         LA    R3,X'15'(,R1)         POINT TO ACEE USERID
         MVC   ACEEMSG+18(8),0(R3)      MOVE ACEE USERID
         HEX   ACEEMSG+27,1,X'14'(R1)   MOVE ACEE USERID LENGTH
         APUT  ACEEMSG,L'ACEEMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'6C'(,R10)      POINT TO ASXB
         L     R1,X'14'(,R1)       POINT TO LWA
         LA    R3,X'49'(,R1)         POINT TO LWA USERID
         XR    R6,R6                   CLEAR REGISTER
         ICM   R6,1,X'48'(R1)          INSERT LENGTH OF ID ONLY
         BCTR  R6,0                    ONE LESS FOR EXECUTE
*        EX    R6,EXLWAUID             MOVE ID IN THERE
EXLWAUID MVC   LWAMSG+18(7),0(R3)       MOVE LWA USERID
         LA    R3,X'1DC'(,R1)          POINT TO NEW USERID FIELD
         HEX   LWAMSG+27,1,X'48'(R1)   DISPLAY LENGTH VALUE
         MVC   LWAMSG+30(8),0(R3)      MOVE USERID INTO PLACE
         OC    LWAMSG+30(8),BLANKS     IF ZEROS, BLANK IT OUT
         APUT  LWAMSG,L'LWAMSG         DISPLAY THE MESSAGE ON THE TUBE
         MODESET KEY=ZERO
         L     R1,X'3C'(,R10)          POINT TO TSB
         MVC   TSBXMSG+18(8),X'90'(R1) MOVE IN USERID
         APUT  TSBXMSG,L'TSBXMSG       SHOW THE NAME THERE
         MODESET KEY=NZERO
         L     R15,CHGTO31B            LOAD ADDR OF 'TO31BIT' WITH..
         BSM   0,R15                   CHANGE TO 31-BIT MODE IN ORDER..
*                                      TO ADDRESS GETCORE STORAGE
CHGTO31B DC    0F'0',A(X'80000000'+TO31BIT)  SWITCH TO 31-BIT
TO31BIT  DS    0H
         L     R1,X'38'(,R10)      POINT TO ASCBCSCB
         LR    R8,R1               SAVE CSCB ADDRESS
         MVC   CSCBMSG+18(8),8(R1)      MOVE CSCB USERID
         APUT  CSCBMSG,L'CSCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         LR    R1,R8               RELOAD CSCB ADDRESS
         L     R1,X'DC'(,R1)       POINT TO CSCX ADDRESS
         MVC   CSCXMSG+18(8),X'18'(R1)  MOVE USERID INTO MESSAGE
         APUT  CSCXMSG,L'CSCXMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'90'(,R10)      POINT TO ASCBOUCB
         LA    R1,X'D0'(,R1)       POINT TO OUCBUSRD
         MVC   OUCBMSG+18(8),0(R1)      MOVE OUCB USERID
         APUT  OUCBMSG,L'OUCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'150'(,R10)     POINT TO ASSB
         L     R1,X'A8'(,R1)         POINT TO JSAB
         MVC   JSABMSG+18(8),X'2C'(R1)
         MVC   JSABMSG+35(8),X'1C'(R1)
         APUT  JSABMSG,L'JSABMSG
         L     R1,X'150'(,R10)     POINT TO ASSB
         L     R1,X'F0'(,R1)         POINT TO VAB
         L     R1,4(,R1)               POINT TO CAUB
         LA    R3,X'14'(,R1)             POINT TO USERID
         MVC   CAUBMSG+18(8),0(R3)       LOAD THE USERID
         APUT  CAUBMSG,L'CAUBMSG       DISPLAY THE MESSAGE ON THE TUBE
         B     TRY00
ENDMSG   DS    0H
* ------------------------------------------------------------------- *
TRY00    DS    0H
         STM   R14,R1,SAVE14T1
         CLI   6(R5),X'00'
         BNE   TRY07
         APUT  MSG01,L'MSG01
         B     TRYEND
TRY07    DS    0H
         CLI   6(R5),X'07'
         BNE   TRY08
         APUT  MSG02,L'MSG02
         B     TRYEND
TRY08    DS    0H
         CLI   6(R5),X'08'
         BNE   TRY08
         APUT  MSG03,L'MSG03
         B     TRYEND
TRYEND   DS    0H
         LM    R14,R1,SAVE14T1
* ------------------------------------------------------------------- *
RETURN   DS    0H
         L     R13,SAVE+4          RELOAD CALLER'S SAVEAREA POINTER
         LM    R14,R12,12(R13)     RELOAD REGISTERS
         BR    R14                 RETURN TO CALLER
SAVE     DC    18F'0'              MY SAVE AREA
SAVER1A  DC    F'0'
PSCBMSG  DC    C'My PSCB Userid is                          '
UPTMSG   DC    C'My UPT  Prefix is                          '
JCTMSG   DC    C'My JCT  Userid is             '  LINE FOR MESSAGE
JMRMSG   DC    C'My JMR  Userid is             '  LINE FOR MESSAGE
TIOTMSG  DC    C'My TIOT Userid is             '  LINE FOR MESSAGE
ASCBMSG  DC    C'My ASCB Userid is             '  LINE FOR MESSAGE
ASXBMSG  DC    C'My ASXB Userid is             '  LINE FOR MESSAGE
CAUBMSG  DC    C'My CAUB Userid is             '  LINE FOR MESSAGE
JSABMSG  DC    C'My JSAB Userid is          Jobname         '
ACEEMSG  DC    C'My ACEE Userid is             '  LINE FOR MESSAGE
LWAMSG   DC    C'My LWA  Userid is                          '
CSCBMSG  DC    C'My CSCB Userid is             '  LINE FOR MESSAGE
CSCXMSG  DC    C'My CSCX Userid is             '  LINE FOR MESSAGE
OUCBMSG  DC    C'My OUCB Userid is             '  LINE FOR MESSAGE
TSBXMSG  DC    C'My TSBX Userid is             '  LINE FOR MESSAGE
BLANKS   DC    CL80' '
OUTPUT   DC    CL80' '
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
SAVE14T1 DS    2D                  Save "system-used" registers.
STORREG  DC    F'0'
MSG01    DC    C'8-CHARACTER USERID SUPPORT IS: N/A'
MSG02    DC    C'8-CHARACTER USERID SUPPORT IS: OFF'
MSG03    DC    C'8-CHARACTER USERID SUPPORT IS: ON '
         DC    X'40'
OUTLINE  DS    CL80
         LTORG
** ---------------------------------------------------------------- **
HEX      DS    0H
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
** ---------------------------------------------------------------- **
HEXR     DS    0H
         MVC   1(1,R15),STORREG    MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         CVT   DSECT=YES
         IKJPSCB
         IKJUPT
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
