
CSV2ISP - load ISPF table from CSV file

Function:
    Load ISPF Table from CSV comma-separated flat file (CSV file)
    produced by ISP2CSV procedure as well as any spreadsheet
    processor or any other tool.

    This procedures can be used to perform the following tasks:

        Perform data exchange between z/OS ISPF and any workstation
        spreadsheet processor (MS Excel, Lotus 123 and so on). CSV
        file processed by both procedures has the same structure as
        used by the workstations spreadsheet processors. Data can be
        processed using the powerfull features of the spreadsheet
        processor - creating diagrams, complex calculations and so
        on, and if necessary - transferred back to the z/OS and
        loading to the same or another ISPF table.

        Maintain ISPF table source. With CSV2ISP procedure ISPF
        table data can be maintaned as a text file. This procedure
        can be defined as SCLM CSV language translator to
        maintenance table data under SCLM (see below for details)
        and maintained automatically as integral part of other
        source code.


Syntax:

     CSV2ISP CSV_specification table_specification >fs >fd!!

table_specification

    Refers to ISPF table. The one of the following should be
    specified:

        library(member)
        DDname=ddname(member)

    Only partitioned data set (PDS, PDSE) allowed. If reference to
    DD name specified, this DD should be provided. The data set must
    exist, an ISPF table may exist. If table exists, it would be
    replaced with new data. If reference to DD name specified in
    form DDname=ddname, appropriate DD name cannot define a member
    of the partitioned data set, reference in form
    DDname=ddname(member) should be used instead.

CSV_specification
    Refers to CSV file. The one of the following should be specified:

        dataset
        library(member)
        DDname=ddname
        DDname=ddname(member)

    Either member of the partitioned data set (PDS, PDSE) or
    sequential data set (PS) can be specified. If reference to DD
    name specified, this DD must be preallocated. Data set must be
    preallocated anyway. Member, if specified, will be replaced if
    it already exists or added otherwise. If reference to DD name
    specified in form DDname=ddname, appropriate DD name cannot
    define a member of the partitioned data set, reference in form
    DDname=ddname(member) should be used instead.

fs

    field separator. Either one character or two hexadecimal digits.
    Optional, comma by default.

fd
    field delimiter. Either one character or two hexadecimal digits.
    Optional, double quote by default.


Usage notes:

        All parameters are positional

        The first line of the CSV input file considered as a header.
        Header should contains field names, separated by field
        separator (comma by default). Field name should not started
        with two underscope character (__). Key fields should be in
        uppercase, other fields should be in lowercase or mixed case
        letters. All fields are separated by field separator, all
        non-numeric field may be enclosed in field delimiters
        (double quote), but this is not necessary. If field
        separator should be treated as a part of the field value,
        this field must be enclosed in the field delimiters (eg.
        "1,2",3,"4,5"). If field delimited should be treated as a
        part of the value, it should be doubled (eg. "don""t").
        Thus, most of the the CSV files produced by MS Excel as well
        as Lotus-123 should be eligible for loading without any
        changes.

        Procedure does not kept incomplete table if load fails due
        to any reason.

        Parameters in form library(member) may be useful for
        interactive ISPF session, for a batch job form reference to
        DD name may be more convenient.

  ISPF environment required to run this procedure in batch job
  (use ISPF or ISPSTART). See job example below:


  //ISPF     EXEC PGM=IKJEFT01,REGION=0K
  //SYSTSPRT DD  SYSOUT=*
  //SYSPROC  DD  DISP=SHR,DSN=CENTER.CLIST
  //SYSEXEC  DD  DISP=SHR,DSN=ISP.SISPEXEC
  //ISPPLIB  DD  DISP=SHR,DSN=ISP.SISPPENU
  ...  other ISPF libraries
  //SYSTSIN  DD  *
   ISPF CMD(%CSV2ISP DD=TBL(TEST) DD=CSV)
  //CSV      DD  DISP=SHR,DISP=&SYSUID.CSV.DATA
  //TBL      DD  DISP=SHR,DSN=&SYSUID.ISPF.TABLES

  JCL procedure CSV2ISP provided to simplify use of CSV2ISP in batch.


  //CSV2ISP  PROC LIB=,     -- Table Library, mandatory
  //          CSV=,     -- CSV Data Set, mandatory
  //          TABLE=    -- Table Name, mandatory
  //          FS='',    -- Field Separator, optional, ',' by default
  //          FD='',    -- Field Delimiter, optional, '"' by default
  //          SELF=CENTER.CLIST, -- Library where ISPTCSV resides
  //          ISPFHLQ=ISP -- ISPF data set prefix, usually ISP or SYS1

  Thus, with procedure above job to load table from CSV look as follows:


  //SYSPRG1A JOB  MSGCLASS=H
  //PROC     JCLLIB ORDER=(CENTER.PROCLIB)
  //         EXEC CSV2ISP,
  //            TABLE=TEST,
  //            LIB=&SYSUID.ISPF.TABLES,
  //            CSV=&SYSUID.CSV.DATA
  //


SCLM usage notes:

    This procedure may be used as SCLM language traslator to allow
    ISPF table maintenance. Source file would be CSV, target - ISPF
    table. Example of the CSV language definition follows:


      FLMLANGL LANG=CSV,VERSION=V1.0
      FLMTRNSL CALLNAM='CSV2ISP',                                    +
             FUNCTN=BUILD,                                           +
             COMPILE=SELECT,                                         +
             GOODRC=0,                                               +
             PORDER=1,                                               +
             CALLMETH=ISPLNK,                                        +
             OPTIONS='CMD(%CSV2ISP DDNAME=SOURCE(@@FLMMBR) DDNAME=TAR+
             GET(@@FLMMBR))'
    *  INPUT CSV DATA
       FLMALLOC IOTYPE=A,DDNAME=SOURCE
       FLMCPYLB @@FLMPRJ.@@FLMGRP.@@FLMTYP
    *  OUTPUT TABLE LIBRARY
       FLMALLOC IOTYPE=P,KEYREF=OUT1,RECFM=FB,LRECL=80,              +
             RECNUM=5000,PRINT=Y,DFLTTYP=ISPTLIB,DDNAME=TARGET

    Example of the ARCHDEF member referred to this language definition


    SINC   EXAMPLE  CSV
    OUT1   EXAMPLE  ISPTLIB

    With this CSV language definition ISPTLIB members (eg. ISPF
    tables) becomes non-editable, they are automatically created
    from an appropriate CSV file by the SCLM build.

History:
    Written by Gregori Bliznets at 2005, last changed 09.2012


