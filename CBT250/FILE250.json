{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011559000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE250.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE250.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0c'", "DS1TRBAL": "b'DD'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xbd\\x00\\x04\\x01\\xbd\\x00\\x06\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95$\\x8f\\x01\\x00)\\x9f\\x112\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-09-05T00:00:00", "modifydate": "2000-10-25T11:32:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "WSBG"}, "text": "                  Documentation for DQNAME Program\n\n   This program was written by a member of GRS Level 2 support at\nthe IBM Support Center.  It was faxed to me and I retyped it in.\nI compared it line for line, and the only significant thing changed\nwas a more proper coding of Load, LA and ST instructions with the\nindex register being zero.  For example:\n\n     ST    15,8(13)   was replaced by      ST    15,8(,13)\n\nOtherwise, the program is identical to the one faxed to me.  Note that\nno register equates were used.  I would have put them in, but it would\nhave made the initial comparison with the faxed text tougher.  I first\nwanted to make sure that the program would work as I typed it in.\n\nNow that we have it machine-readable, maybe someone would like to put\nthe register equates in, and send a diskette or tape back to me.\nAlso, if anyone has improvements, for example a hex display that\nwould show how many blanks are in the RNAME, these would be welcome.\n\n\n       Address:     Sam Golob\n                    P.O. Box 906\n                    Tallman, NY 10982-0906\n\n       Phones:\n                    sbgolob@attglobal.net\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DQNAME": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95$\\x8f\\x00\\x95$\\x8f 9\\x01g\\x00\\xe1\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-09-05T00:00:00", "modifydate": "1995-09-05T20:39:00", "lines": 359, "newlines": 225, "modlines": 0, "user": "SBGCSC"}, "text": "         TITLE  'DQNAME - Display information about Qname requestors'   DQN00010\n*********************************************************************** DQN00020\n*                                                                     * DQN00030\n* Program to print out all requestors for a particular major name.    * DQN00040\n* This program extends the D GRS,RES- or D DLF limitation of 30 byte  * DQN00050\n* rname length to 60 characters.   The length is determined by the    * DQN00060\n* variable defined at label RESRNAME.                                 * DQN00070\n*                                                                     * DQN00080\n* This program must run from an APF authorized library in order to    * DQN00090\n* use the CONNECT option on the WTO macro.                            * DQN00100\n*                                                                     * DQN00110\n* Sample linkedit JCL:                                                * DQN00120\n*                                                                     * DQN00130\n*   //LINK      EXEC PGM=IEWLF880,                                    * DQN00140\n*   //    PARM='XREF,LET,LIST,NCAL,SIZE=(750K,200K)'                  * DQN00150\n*   //SYSUT1   DD UNIT=SYSDA,SPACE=(1024,(200,20))                    * DQN00160\n*   //OBJLIB   DD DSN=USERID.MY.OBJ,DISP=SHR                          * DQN00170\n*   //SYSLMOD  DD DSN=APF.AUTHORIZED.LIB,DISP=OLD,UNIT=3380           * DQN00180\n*   //SYSPRINT DD SYSOUT=*                                            * DQN00190\n*   //SYSLIN   DD *                                                   * DQN00200\n*       INCLUDE OBJLIB(DQNAME)                                        * DQN00210\n*       ENTRY DQNAME                                                  * DQN00220\n*       SETCODE AC(1)                                                 * DQN00230\n*       NAME DQNAME(R)                                                * DQN00240\n*   /*                                                                * DQN00250\n*                                                                     * DQN00260\n* SAMPLE SYS1.PROCLIB MEMBER(DGRS)                                    * DQN00270\n*                                                                     * DQN00280\n*   //DGRS      PROC Q='SPFEDIT '                                     * DQN00290\n*   //RUNSTEP EXEC PGM=DQNAME,PARM='&Q'                               * DQN00300\n*   //*  Invoke from console with                                     * DQN00310\n*   //*                                                               * DQN00320\n*   //*       S DGRS                                                  * DQN00330\n*   //*    or                                                         * DQN00340\n*   //*       S DGRS,Q=nnn                                            * DQN00350\n*   //*                                                               * DQN00360\n*   //*  where nnn is the QNAME of the resource                       * DQN00370\n*                                                                     * DQN00380\n*********************************************************************** DQN00390\n         EJECT                                                          DQN00400\nDQNAME   CSECT                                                          DQN00410\nDQNAME   AMODE 31                                                       DQN00420\nDQNAME   RMODE ANY                                                      DQN00430\n         STM   14,12,12(13)       Standard entry                        DQN00440\n         BALR  12,0                                                     DQN00450\n         USING *,12                                                     DQN00460\n         ST    13,SAVEAREA+4                                            DQN00470\n         LA    15,SAVEAREA                                              DQN00480\n         ST    15,8(,13)                                                DQN00490\n         LR    13,15                                                    DQN00500\n*                                                                       DQN00510\n* Get input QNAME parameter                                             DQN00520\n*                                                                       DQN00530\n         L     1,0(,1)            Get addressability to PARM            DQN00540\n         USING PARMAREA,1                                               DQN00550\n         LH    2,PARMLEN          Get length of parameter               DQN00560\n         SR    3,3                Make sure a QNAME was specified       DQN00570\n         CR    2,3                and has length > 0 and < 9            DQN00580\n         BE    BADPARM                                                  DQN00590\n         LA    3,9                                                      DQN00600\n         CR    2,3                                                      DQN00610\n         BNL   BADPARM                                                  DQN00620\n         ST    2,QSIZE            Save length for GQSCAN                DQN00630\n         BCTR  2,0                Subtract 1 from length for MVC        DQN00640\n         EX    2,MVCPARM          Get the QNAME                         DQN00650\n*                                                                       DQN00660\n* Issue initial WTO/C and save the CONNECT value                        DQN00670\n*                                                                       DQN00680\n         SR    0,0                Let WTO know this is the first line   DQN00690\n         WTO   ('DQNAME: RESOURCE STATUS',C)                            DQN00700\n         ST    1,CONNECT          Save CONNECT value                    DQN00710\n*                                                                       DQN00720\n* Scan the queues for all requestors of the QNAME                       DQN00730\n*                                                                       DQN00740\n         MVC   RETCODE,=F'0'      Initialize our return code            DQN00750\n         MVC   SCANTOKN,=F'0'     Initialize GQSCAN token               DQN00760\nSCANLOOP EQU   *                                                        DQN00770\n         L     4,QSIZE            Get size of QNAME                     DQN00780\n         GQSCAN AREA=(QAREA,L'QAREA),TOKEN=SCANTOKN,                   XDQN00790\n               SCOPE=ALL,                                              XDQN00800\n               RESNAME=(QNAME,,,GENERIC,(4))                            DQN00810\n         B     QRETURN(15)        Process based on RC from GQSCAN       DQN00820\nQRETURN  B     PROCESS            RC=0 Last buffer of data              DQN00830\n         B     NODATA             RC=4 No data matched                  DQN00840\n         B     PROCESS            RC=8 Match, go process this buffer    DQN00850\n         B     QERROR             RC=12 GQSCAN error                    DQN00860\n         B     QERROR             RC=16 GQSCAN error                    DQN00870\n         B     QERROR             RC=20 GQSCAN error                    DQN00880\n         EJECT                                                          DQN00890\n*                                                                       DQN00900\n* Subroutine to process the area returned by GQSCAN                     DQN00910\n*                                                                       DQN00920\nPROCESS  DS    0H                                                       DQN00930\n         ST    0,LENGTHS          Save (and set) RIB and RIBE lengths   DQN00940\n         LA    3,QAREA            Get GQSCAN AREA address               DQN00950\n         USING RIB,3              Get address of 1st RIB                DQN00960\n         LR    2,1                Get number of RIBS                    DQN00970\n*                                                                       DQN00980\nPROCRIB  EQU   *                  Top of RIB loop                       DQN00990\n         MVI   NEWRIB,C'Y'        Indicate this is a new RIB            DQN01000\n         LH    5,LENRIB           Get length of each RIB                DQN01010\n         AR    5,3                Get address of RNAME                  DQN01020\n         USING RIBVAR,5                                                 DQN01030\n*                                                                       DQN01040\n         LR    7,5                Get address of 1st RIBE               DQN01050\n         AH    7,RIBVLEN                                                DQN01060\n         USING RIBE,7                                                   DQN01070\n         L     6,RIBNRIBE         Get number of RIBEs                   DQN01080\n*                                                                       DQN01090\nPROCRIBE EQU   *                  Top of RIBE loop                      DQN01100\n         BAL   14,WRITEIT         Write data about this requester       DQN01110\n*                                                                       DQN01120\n         AH    7,LENRIBE          Point to next RIBE                    DQN01130\n         BCT   6,PROCRIBE         Process the next RIBE                 DQN01140\n*                                                                       DQN01150\n         LR    3,7                Point to next RIB                     DQN01160\n         BCT   2,PROCRIB          Process the next RIB                  DQN01170\n*                                                                       DQN01180\n         CLC   SCANTOKN,=F'0'     More GQSCAN data?                     DQN01190\n         BNE   SCANLOOP           Yes, go issue another GQSCAN          DQN01200\n*                                                                       DQN01210\n* Issue WTO/E to complete multi-line WTO and then return:               DQN01220\n*                                                                       DQN01230\nCOMPLETE DS    0H                                                       DQN01240\n         WTO   ('E',E),CONNECT=CONNECT                                  DQN01250\n         L     13,SAVEAREA+4                                            DQN01260\n         LM    14,12,12(13)                                             DQN01270\n         L     15,RETCODE         Set RC                                DQN01280\n         BR    14                                                       DQN01290\n         EJECT                                                          DQN01300\n*                                                                       DQN01310\n* Subroutine to write out the request along with a heading.  If this    DQN01320\n* is an old RIB, or a new RIB but identical to a GQSCAN resume, then    DQN01330\n* don't write the heading.                                              DQN01340\n*                                                                       DQN01350\nWRITEIT  DS    0H                                                       DQN01360\n         STM   14,12,12(13)       Save caller's REGS                    DQN01370\n*                                                                       DQN01380\n         CLI   NEWRIB,C'Y'        This is a new RIB?                    DQN01390\n         BNE   NOHEADER           If not, don't write heading           DQN01400\n*                                                                       DQN01410\n         SR    4,4                New RIB, but may be a GQSCAN resume   DQN01420\n         IC    4,RIBRNMLN         Get RNAME length                      DQN01430\n         EX    4,COMPRNM          This an old RNAME in a GQSCAN resume? DQN01440\n         BNE   NEEDHDR            No - need a heading                   DQN01450\n         CLC   QSAVE,RIBQNAME     Yes- check if same QNAME and RNAME    DQN01460\n         BE    NOHEADER           If same, then don't need a heading    DQN01470\n*                                                                       DQN01480\nNEEDHDR  EQU   *                                                        DQN01490\n         EX    4,SAVERNM          Save the new RNAME for next time      DQN01500\n         MVC   QSAVE,RIBQNAME     Save the new QNAME, too               DQN01510\n         LA    6,L'RESRNAME       Check if RNAME too big for output     DQN01520\n         CR    4,6                Too big?                              DQN01530\n         BL    NOTBIG             No - use as is                        DQN01540\n         LR    4,6                Yes- use max value                    DQN01550\nNOTBIG   EQU   *                                                        DQN01560\n         MVI   RESRNAME,C' '      Blank out the RNAME field             DQN01570\n         MVC   RESRNAME+1(L'RESRNAME-1),RESRNAME                        DQN01580\n         BCTR  4,0                                                      DQN01590\n         EX    4,MOVERNM          Move in the new RNAME                 DQN01600\n         MVC   RESQNAME(8),RIBQNAME Get QNAME, too                      DQN01610\n*                                                                       DQN01620\n         TM    RIBSCOPE,RIBSYS    Set SCOPE of request                  DQN01630\n         BO    SCSYS                                                    DQN01640\n         TM    RIBSCOPE,RIBSYSS                                         DQN01650\n         BO    SCGBL                                                    DQN01660\n         MVC   RESSCOPE(8),=C'STEP    '                                 DQN01670\n         B     SCOPEND                                                  DQN01680\nSCSYS    DS    0H                                                       DQN01690\n         MVC   RESSCOPE(8),=C'SYSTEM  '                                 DQN01700\n         B     SCOPEND                                                  DQN01710\nSCGBL    DS    0H                                                       DQN01720\n         MVC   RESSCOPE(8),=C'SYSTEMS '                                 DQN01730\nSCOPEND  EQU   *                                                        DQN01740\n*                                                                       DQN01750\nWRITERES EQU   *                  Write the resource and heading        DQN01760\n         WTO   TEXT=((RESMSG,D)),CONNECT=CONNECT                        DQN01770\n         ST    1,CONNECT                                                DQN01780\n         WTO   TEXT=((REQHDR,D)),CONNECT=CONNECT                        DQN01790\n         ST    1,CONNECT                                                DQN01800\n         MVC   NEWRIB,C'N'        Now this is an old RIB                DQN01810\nNOHEADER EQU   *                                                        DQN01820\n*                                                                       DQN01830\n         MVC   REQSYSN(8),RIBESYSN Get SYSNAME                          DQN01840\n         MVC   REQJOBN(8),RIBEJBNM Get JOBNAME                          DQN01850\n*                                                                       DQN01860\n         LH    2,RIBEASID         Get ASID in binary                    DQN01870\n         LA    1,4                Number of binary digits               DQN01880\n         BAL   14,CONVERT         Call the CONVERT routine              DQN01890\n         MVC   REQASID(4),CHARDATA+4 Get ASID in EBCDIC                 DQN01900\n*                                                                       DQN01910\n         L     2,RIBETCB          TCB in binary                         DQN01920\n         LA    1,8                Number of binary digits               DQN01930\n         BAL   14,CONVERT         Call the CONVERT routine              DQN01940\n         MVC   REQTCB(8),CHARDATA Get TCB in EBCDIC                     DQN01950\n*                                                                       DQN01960\n         TM    RIBERFLG,RIBETYPE  Determine if SHARE or EXCL            DQN01970\n         BO    SHREQ                                                    DQN01980\n         MVC   REQSHR(10),=CL10'EXCLUSIVE'                              DQN01990\n         B     SHREND                                                   DQN02000\nSHREQ    EQU   *                                                        DQN02010\n         MVC   REQSHR(10),=CL10'  SHARE  '                              DQN02020\nSHREND   EQU   *                                                        DQN02030\n*                                                                       DQN02040\n         TM    RIBESFLG,RIBESTAT  Determine if WAIT or OWN              DQN02050\n         BO    OWNREQ                                                   DQN02060\n         MVC   REQOWN(5),=CL5' WAIT'                                    DQN02070\n         B     OWNEND                                                   DQN02080\nOWNREQ   EQU   *                                                        DQN02090\n         MVC   REQOWN(5),=CL5' OWN '                                    DQN02100\nOWNEND   EQU   *                                                        DQN02110\n*                                                                       DQN02120\n* Write out this request and then return                                DQN02130\n*                                                                       DQN02140\n         WTO   TEXT=((REQMSG,D)),CONNECT=CONNECT                        DQN02150\n         ST    1,CONNECT                                                DQN02160\n*                                                                       DQN02170\n         LM    14,12,12(13)       RESTORE REGS                          DQN02180\n         BR    14                                                       DQN02190\n         EJECT                                                          DQN02200\n*                                                                       DQN02210\n* Subroutine to convert BINARY to EBCDIC                                DQN02220\n*                                                                       DQN02230\n* REG1 is the value to convert                                          DQN02240\n* REG2 is the length                                                    DQN02250\n*                                                                       DQN02260\n* Output saved in variable CHARDATA                                     DQN02270\n*                                                                       DQN02280\nCONVERT  DS    0H                                                       DQN02290\n         LA    8,LASTC                                                  DQN02300\n         LA    10,10                                                    DQN02310\nHEXLOOP  EQU   *                                                        DQN02320\n         SR    3,3                                                      DQN02330\n         SRDL  2,4                                                      DQN02340\n         SRL   3,28                                                     DQN02350\n         CR    3,10                                                     DQN02360\n         BL    NOTHEX                                                   DQN02370\n         S     3,=F'9'                                                  DQN02380\n         LA    3,192(,3)                                                DQN02390\n         B     NEXTHEX                                                  DQN02400\nNOTHEX   LA    3,240(,3)                                                DQN02410\nNEXTHEX  EQU   *                                                        DQN02420\n         STC   3,0(0,8)                                                 DQN02430\n         BCTR  8,0                SUBTRACT 1 FROM R8                    DQN02440\n         BCT   1,HEXLOOP                                                DQN02450\n         BR    14                                                       DQN02460\n         EJECT                                                          DQN02470\n*                                                                       DQN02480\n* Subroutines to write error messages and set return codes              DQN02490\n*                                                                       DQN02500\n         SPACE 2                                                        DQN02510\nNODATA   DS    0H                                                       DQN02520\n         MVC   NONEQNM,QNAME                                            DQN02530\n         WTO   TEXT=((NONEMSG,D)),CONNECT=CONNECT                       DQN02540\n         ST    1,CONNECT                                                DQN02550\n         B     COMPLETE                                                 DQN02560\n         SPACE 2                                                        DQN02570\nBADPARM  DS    0H                                                       DQN02580\n         WTO   TEXT=((PARMERR,D)),CONNECT=CONNECT                       DQN02590\n         ST    1,CONNECT                                                DQN02600\n         MVC   RETCODE,=F'4'                                            DQN02610\n         B     COMPLETE                                                 DQN02620\n         SPACE 2                                                        DQN02630\nQERROR   DS    0H                                                       DQN02640\n         ST    15,RETCODE                                               DQN02650\n         WTO   TEXT=((QSCNERR,D)),CONNECT=CONNECT                       DQN02660\n         ST    1,CONNECT                                                DQN02670\n         B     COMPLETE                                                 DQN02680\n         EJECT                                                          DQN02690\n*                                                                       DQN02700\n* Executed instructions                                                 DQN02710\n*                                                                       DQN02720\nMVCPARM  MVC   QNAME(0),PARM                                            DQN02730\nMOVERNM  MVC   RESRNAME(0),RIBRNAME                                     DQN02740\nCOMPRNM  CLC   RSAVE(0),RIBRNAME                                        DQN02750\nSAVERNM  MVC   RSAVE(0),RIBRNAME                                        DQN02760\n         EJECT                                                          DQN02770\n*                                                                       DQN02780\n* Data areas                                                            DQN02790\n*                                                                       DQN02800\nSAVEAREA DC    18F'0'             REG save area                         DQN02810\n*                                                                       DQN02820\nSCANTOKN DS    F                  GQSCAN Token                          DQN02830\nRETCODE  DS    F                  Return code                           DQN02840\nCONNECT  DS    F                  Connect value for WTO                 DQN02850\n*                                                                       DQN02860\nLENGTHS  DS    F                  Data lengths return by GQSCAN         DQN02870\n         ORG   LENGTHS                                                  DQN02880\nLENRIB   DS    H                  Length of RIB                         DQN02890\nLENRIBE  DS    H                  Length of RIBE                        DQN02900\n*                                                                       DQN02910\nQSIZE    DS    F                  Size of QNAME from input parm         DQN02920\nQNAME    DC    CL8' '             QNAME of resource                     DQN02930\n*                                                                       DQN02940\nCHARDATA DC    CL8' '             Work area for CONVERT routine         DQN02950\nLASTC    EQU   *-1                                                      DQN02960\n*                                                                       DQN02970\nNEWRIB   DC    C' '               Flag used to indicate a new RIB       DQN02980\nQSAVE    DC    CL8' '             Old (saved) QNAME                     DQN02990\nRSAVE    DC    CL255' '           Old (saved) RNAME                     DQN03000\n         EJECT                                                          DQN03010\n*                                                                       DQN03020\n* Messages used by WTO                                                  DQN03030\n*                                                                       DQN03040\nRESMSG   DC    AL2(RESLEN)                                              DQN03050\nRESTEXT  DC    C'S='                                                    DQN03060\nRESSCOPE DC    CL8' '                                                   DQN03070\nRESQNAME DC    CL9' '                                                   DQN03080\nRESRNAME DC    CL60' '                                                  DQN03090\nRESLEN   EQU   *-RESTEXT                                                DQN03100\n*                                                                       DQN03110\nREQHDR   DC    AL2(REHLEN)                                              DQN03120\nREHTEXT  DC    C'SYSNAME  JOBNAME  ASID TCBADDR  '                      DQN03130\n         DC    C' EXC/SHR  OWN/WAIT'                                    DQN03140\nREHLEN   EQU   *-REHTEXT                                                DQN03150\n*                                                                       DQN03160\nREQMSG   DC    AL2(REQLEN)                                              DQN03170\nREQTEXT  EQU   *                                                        DQN03180\nREQSYSN  DC    CL9' '                                                   DQN03190\nREQJOBN  DC    CL9' '                                                   DQN03200\nREQASID  DC    CL5' '                                                   DQN03210\nREQTCB   DC    CL9' '                                                   DQN03220\nREQSHR   DC    CL11' '                                                  DQN03230\nREQOWN   DC    CL8' '                                                   DQN03240\nREQLEN   EQU   *-REQTEXT                                                DQN03250\n*                                                                       DQN03260\nPARMERR  DC    AL2(ERRLEN)                                              DQN03270\nERRTEXT  DC    C'INPUT PARAMETER '                                      DQN03280\n         DC    C'MUST BE 1 TO 8 CHARACTER QNAME'                        DQN03290\nERRLEN   EQU   *-ERRTEXT                                                DQN03300\n*                                                                       DQN03310\nNONEMSG  DC    AL2(NONELEN)                                             DQN03320\nNONETXT  DC    C'NO REQUESTORS FOR RESOURCE  '                          DQN03330\nNONEQNM  DC    CL8' '                                                   DQN03340\nNONELEN  EQU   *-NONETXT                                                DQN03350\n*                                                                       DQN03360\nQSCNERR  DC    AL2(QERLEN)                                              DQN03370\nQERTEXT  DC    C'GQSCAN ERROR'                                          DQN03380\nQERLEN   EQU   *-QERTEXT                                                DQN03390\n         EJECT                                                          DQN03400\n         LTORG                                                          DQN03410\n         EJECT                                                          DQN03420\n*                                                                       DQN03430\n* GQSCAN area and input parameter DSECT                                 DQN03440\n*                                                                       DQN03450\n         SPACE 2                                                        DQN03460\nQAREA    DS    CL4000                                                   DQN03470\n         SPACE 2                                                        DQN03480\nPARMAREA DSECT                                                          DQN03490\nPARMLEN  DS    H                                                        DQN03500\nPARM     DS    CL8                                                      DQN03510\n         EJECT                                                          DQN03520\n*                                                                       DQN03530\n* Included macros                                                       DQN03540\n*                                                                       DQN03550\n         SPACE 2                                                        DQN03560\n         ISGRIB                                                         DQN03570\n         CVT   DSECT=YES                                                DQN03580\n         END                                                            DQN03590\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT250/FILE250.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT250", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}