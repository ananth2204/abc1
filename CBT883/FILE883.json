{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013211000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 36388534, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE883.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 36388534, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 36388534, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE883.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b\"\\x02'\\n\"", "DS1TRBAL": "b'\\n\\x18'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x07\\xac\\x00\\x04\\x07\\xd1\\x00\\x00\\x02('", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00X\\x01\\x125o\\x01\\x125o\\x12&\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T12:26:58", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  883\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE883\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 17 MEMBERS COUNTED; CUMULATIVE SIZE IS 346,104 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/21/12    12:26:58    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x125o\\x01\\x125o\\x12!\\x00-\\x00-\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T12:21:14", "lines": 45, "newlines": 45, "modlines": 0, "user": "MIKLOS"}, "text": "Introduction\n\nThis MVSHSM pachage is an extension of the Hierarchical Storage\nManager (HSM), to manage the secondary migration level data (ML2)\non the network.\n\nHere, in the ISIS Papyrus Software, we have 2 very old tape\ndrives, no operators, we are 5 kilometers from the machine\nlocation, and we have 500 Gigabyte online storage, but\npractically \"unlimited\" storage on the network. We extended the\nHSM, via standard exits, to store the ML2 data on the network. We\nhave been using this modification since 2005; maybe some other\nsmall installations can take advantage of this.\n\nWe define an ML2 disk volume, and via the HSM migration exits, we\nmove everything from this volume to a Network File System (NFS)\ndirectory. Before a recall, the proper HSM exit moves the\nrequested dataset back to our ML2 disk volume, and the HSM can\nfinish the restore.\n\nThe exit routines are called by the HSM before the proper HSM\naction. It is good for the \"recall\", but for the \"migrate\" we\ncan just move everything from the ML2 disk drive to the NFS\ndirectory, and the last migrated dataset will reside on the ML2\ndisk volume.\n\nWe are using:\n * MM Second Level Migration Dataset exit\n * MD Dataset Migration exit\n * RD Recall exit.\n\nThe exit routines were written in C++, we provide the complete\nsource code and a load library. As sample, we modified the HSM\ninstallation STARTUP, and we provide also our current, running\nHSM configuration by ISIS, as it is.\n\nWarning\n\nThis is a limited HSM setup, with some simple functionality; it\nis working here in this way for several years, but has never been\ntested with a complex HSM configuration. We can handle securely\nonly one ML2 recall or one ML2 migration request. It works only\nwith non SMS volumes.\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#DOCPDF": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x0e\\xb1\\x0e\\xb1\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 3761, "newlines": 3761, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/pdf", "datatype": "binary", "extension": ".pdf"}, "#DOCWORD": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x06\\xd9\\x06\\xd9\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 1753, "newlines": 1753, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "@FILE883": {"ttr": 2818, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00G\\x01\\x125o\\x01\\x125o\\x12&\\x004\\x004\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T12:26:47", "lines": 52, "newlines": 52, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 883 is from Miklos Szigetvari, and contains his package   *   FILE 883\n//*           of exits and programs to help manage DFHSM.           *   FILE 883\n//*                                                                 *   FILE 883\n//*  email:  Miklos Szigetvari <miklos.szigetvari@isis-papyrus.com> *   FILE 883\n//*                                                                 *   FILE 883\n//*     Introduction                                                *   FILE 883\n//*                                                                 *   FILE 883\n//*     This MVSHSM pachage is an extension of the Hierarchical     *   FILE 883\n//*     Storage Manager (HSM), to manage the secondary migration    *   FILE 883\n//*     level data (ML2) on the network.                            *   FILE 883\n//*                                                                 *   FILE 883\n//*     Here, in the ISIS Papyrus Software, we have 2 very old      *   FILE 883\n//*     tape drives, no operators, we are 5 kilometers from the     *   FILE 883\n//*     machine location, and we have 500 Gigabyte online           *   FILE 883\n//*     storage, but practically \"unlimited\" storage on the         *   FILE 883\n//*     network. We extended the HSM, via standard exits, to        *   FILE 883\n//*     store the ML2 data on the network. We have been using       *   FILE 883\n//*     this modification since 2005; maybe some other small        *   FILE 883\n//*     installations can take advantage of this.                   *   FILE 883\n//*                                                                 *   FILE 883\n//*     We define an ML2 disk volume, and via the HSM migration     *   FILE 883\n//*     exits, we move everything from this volume to a Network     *   FILE 883\n//*     File System (NFS) directory. Before a recall, the proper    *   FILE 883\n//*     HSM exit moves the requested dataset back to our ML2        *   FILE 883\n//*     disk volume, and the HSM can finish the restore.            *   FILE 883\n//*                                                                 *   FILE 883\n//*     The exit routines are called by the HSM before the          *   FILE 883\n//*     proper HSM action. It is good for the \"recall\", but for     *   FILE 883\n//*     the \"migrate\" we can just move everything from the ML2      *   FILE 883\n//*     disk drive to the NFS directory, and the last migrated      *   FILE 883\n//*     dataset will reside on the ML2 disk volume.                 *   FILE 883\n//*                                                                 *   FILE 883\n//*     We are using:                                               *   FILE 883\n//*      * MM Second Level Migration Dataset exit                   *   FILE 883\n//*      * MD Dataset Migration exit                                *   FILE 883\n//*      * RD Recall exit.                                          *   FILE 883\n//*                                                                 *   FILE 883\n//*     The exit routines were written in C++, we provide the       *   FILE 883\n//*     complete source code and a load library. As sample, we      *   FILE 883\n//*     modified the HSM installation STARTUP, and we provide       *   FILE 883\n//*     also our current, running HSM configuration by ISIS, as     *   FILE 883\n//*     it is.                                                      *   FILE 883\n//*                                                                 *   FILE 883\n//*     Warning                                                     *   FILE 883\n//*                                                                 *   FILE 883\n//*     This is a limited HSM setup, with some simple               *   FILE 883\n//*     functionality; it is working here in this way for           *   FILE 883\n//*     several years, but has never been tested with a complex     *   FILE 883\n//*     HSM configuration. We can handle securely only one ML2      *   FILE 883\n//*     recall or one ML2 migration request. It works only with     *   FILE 883\n//*     non SMS volumes.                                            *   FILE 883\n//*                                                                 *   FILE 883\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ADATA": {"ttr": 2820, "alias": false, "halfwords": 40, "notes": 0, "parms": "b'\\x01\\x00 \\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\xff\\xff\\xff\\xff\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@\\x00\\x03\\xed\\xa1\\x00\\x00\\xff\\xff\\x00\\x00\\x00\\x00'", "ispf": {"version": "01.00", "flags": 32, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 65535, "newlines": 65535, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "ASM": {"ttr": 107273, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x0f\\x8c\\x0f\\x8c\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 3980, "newlines": 3980, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "CNTL": {"ttr": 109059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\n\\xc8\\n\\xc8\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 2760, "newlines": 2760, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "COMPLIST": {"ttr": 110087, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\xba\\x10\\xba\\x10\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 47632, "newlines": 47632, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "CPP": {"ttr": 129540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x06\\xb9\\x06\\xb9\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 1721, "newlines": 1721, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "HPP": {"ttr": 130305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\"I\"I\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 8777, "newlines": 8777, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "INSTALL": {"ttr": 133643, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00C\\x01\\x123\\x0f\\x01\\x124\\x7f\\x119\\x00!\\x00'\\x00\\x00\\xd9\\xc1\\xc3\\xc6@@@@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "2012-11-25T00:00:00", "modifydate": "2012-12-12T11:39:43", "lines": 33, "newlines": 39, "modlines": 0, "user": "RACF"}, "text": "//INSTALL JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//**************************************************************\n//* TSO BATCH PROC\n//**************************************************************\n//TSOBATCH EXEC PGM=IKJEFT1B,DYNAMNBR=200\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSTSIN  DD *\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(ADATA)')\n RESTORE DSN('MVSHSM.V1R1M0.ADATA')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(ASM)')\n RESTORE DSN('MVSHSM.V1R1M0.ASM')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(COMPLIST)')\n RESTORE DSN('MVSHSM.V1R1M0.COMPLIST')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(CPP)')\n RESTORE DSN('MVSHSM.V1R1M0.CPP')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(HPP)')\n RESTORE DSN('MVSHSM.V1R1M0.HPP')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(JOBS)')\n RESTORE DSN('MVSHSM.V1R1M0.JOBS')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(LOADLIB)')\n RESTORE DSN('MVSHSM.V1R1M0.LOADLIB')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(OBJECT)')\n RESTORE DSN('MVSHSM.V1R1M0.OBJECT')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(CNTL)')\n RESTORE DSN('MVSHSM.V1R1M0.CNTL')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(PROC)')\n RESTORE DSN('MVSHSM.V1R1M0.PROC')\n RECEIVE INDATASET('ESA.PRJ.CBTHSM.XMIT(SAMPLIB)')\n RESTORE DSN('MVSHSM.V1R1M0.SAMPLIB')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JOBS": {"ttr": 133890, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x00I\\x00I\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 73, "newlines": 73, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADLIB": {"ttr": 133893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x1fl\\x1fl\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 8044, "newlines": 8044, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "OBJECT": {"ttr": 137217, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x1c\"\\x1c\"\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 7202, "newlines": 7202, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PROC": {"ttr": 140038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\x01F\\x01F\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 326, "newlines": 326, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SAMPLIB": {"ttr": 140289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x125o\\x01\\x125o\\x11\\x19\\t\\xbc\\t\\xbc\\x00\\x00\\xd4\\xc9\\xd2\\xd3\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-21T00:00:00", "modifydate": "2012-12-21T11:19:00", "lines": 2492, "newlines": 2492, "modlines": 0, "user": "MIKLOS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT883/FILE883.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT883", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}