/*******************************************************************************
* Copyright ISIS Papyrus Technologies Limited
*-------------------------------------------------------------------------------
* File:              $Source: /data/cvs/src/mvs/merror.cpp,v $
*-------------------------------------------------------------------------------
* Description:
*   ???
*******************************************************************************/


#include "isisdef.h"
#include <stdlib.h>
#include "merror.hpp"
#include <assert.h>

#ifndef mERRORP
#define mERRORP mERROR *
#endif

mERRORPSTACK mErrorPStack(512);

mERRORPSTACK::mERRORPSTACK(long int size)
ä
   ip = 0; max = size;
   sp = new mERRORPÄsizeÜ ;

ü

void mERRORPSTACK::push(mERRORP value)
ä
  assert( ip < max);
  spÄip++Ü = value;
ü

mERRORP mERRORPSTACK::examine()
ä
   return( ip ? spÄip-1Ü : (mERRORP ) 0 );
ü

int mERRORPSTACK::callNextHandler(int)
ä
//for(int i=ip-1;i>=0;i--)
//if ( spÄiÜ && spÄiÜ->handler) return (spÄiÜ->handler)(code);
  return 0;
ü

mERRORP mERRORPSTACK::pop()
ä
  if (ip>0) return spÄ--ipÜ;
  else return (mERRORP) 0 ;

ü
void  mERRORPSTACK::reset()

ä
  ip = 0;
ü

mERRORPSTACK::ßmERRORPSTACK()
ä
 delete ÄÜ sp;
ü


int mERROR::max_rc = 0;


mERROR::mERROR()
ä
    err = 0;
    handler =0;
//  mErrorPStack.push(this);
ü

mERROR::mERROR(int (*h)(int) )
ä
     err = 0;
     handler = h;
//   mErrorPStack.push(this);
ü


int mERROR::error(char *,ERROR_ACTION a)
 ä
  switch(a)
    ä
     case Warning:
    		 max_rc = 4;
          return 0;
       case Abort:
          exit(8);
       default:
          exit(8);
    ü
    return 0;
ü
