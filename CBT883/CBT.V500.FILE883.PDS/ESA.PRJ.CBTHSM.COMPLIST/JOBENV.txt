
15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTHSM.CPP(JOBENV)'                      20.12.12 18:51:09
0                                      * * * * *   P R O L O G   * * * * *
    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII
                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)
                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)
                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL
                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)
                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO
                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS
                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT
                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)
                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING
                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE
                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT
                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              NOTEMPLATEREGISTRY
                                  :TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)      TMPLPARSE(NO)   TUNE(7)
                                  :UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64        NOWSIZEOF       NOXREF
                                  :NOCICS
                                  :NOCONVLIT
                                  :NOCSECT
                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)
                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)
                                  :FLOAT(HEX,FOLD,AFP(NOVOLATILE)) ROUND(Z)
                                  :NOHALTONMSG
                                  :INFO(LAN)
                                  :INLINE(AUTO,NOREPORT,100,1000)
                                  :NOIPA
                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,
                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,
                                   __inline__,__signed__,__typeof__)
                                  :NOKEYWORD(char16_t,char32_t,static_assert,typeof)
                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,
                                   NOC99LONGLONG,NOC99PREPROCESSOR,NODBCS,NODECLTYPE,NODELEGATINGCTORS,DEPENDENTBASELOOKUP,
                                   NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,EXTERNTEMPLATE,ILLPTOM,
                                   IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,NOOLDDIGRAPH,OLDFRIEND,
                                   NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,TRAILENUM,TYPEDEFCLASS,
                                   NOUCS,VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY)
                                  :LOCALE(DE_DE.IBM-273)
                                  :NOLSEARCH
                                  :OPTFILE(DD:OPTFILE)
                                  :NORTCHECK
                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)
                                  :NOSERVICE
                                  :NOSQL
                                  :NOSUPPRESS
                                  :TEMPINC(./tempinc)
                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)
    Version Macros. . . . . . . . : __COMPILER_VER__=0x410C0000
                                  : __LIBREL__=0x410C0000
                                  : __TARGET_LIB__=0x410C0000
    Source margins. . . . . . . . :
      Varying length. . . . . . . : 1 - 32760
      Fixed length. . . . . . . . : 1 - 32760
    Sequence columns. . . . . . . :
      Varying length. . . . . . . : none
      Fixed length. . . . . . . . : none
    Locale name . . . . . . . . . : DE_DE.IBM-273
    Code set. . . . . . . . . . . : IBM-273
    Listing name. . . . . . . . . : DD:SYSCPRT
0                                 * * * * *   E N D   O F   P R O L O G   * * * * *
-
15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTHSM.CPP(JOBENV)'                      20.12.12 18:51:09
-
                                       * * * * *   S O U R C E   * * * * *
0            1 | /*******************************************************************************
             2 | * Copyright ISIS Papyrus Technologies Limited
             3 | *-------------------------------------------------------------------------------
             4 | * File:              $Source: /data/cvs/src/mvs/jobenv.cpp,v $
             5 | *-------------------------------------------------------------------------------
             6 | * Description:
             7 | *   ???
             8 | *******************************************************************************/
             9 |
            10 | #include "isisdef.h"
            11 | #include <stdlib.h>
            12 | #include <string.h>
            13 | #include <strings.h>
            14 | #if defined(MU_STANDALONE) == 0
            15 | #include "isismisc.hpp" //szm20050810
            16 | #endif
            17 | #include "jobenv.hpp"
            18 | #include "msgmgr.hpp"
            19 | #include "misc.hpp"
            20 | #include "tiot1.hpp"
            21 | #include "ikjrb.hpp"
            22 | #include "ihacde.hpp"
            23 | #include "psa.hpp"
            24 | #include "tcbfix.hpp"
            25 | #include "iezjscb.hpp"
            26 | #include "ssib.hpp"
            27 | #include "tiot1ds.hpp"
            28 |
            29 | int JOBENV::debug = 0;
            30 | char * KEYWORD_DEBUG = "DEBUG";
            31 | JOBENV * jobEnv = NULL;
            32 |
            33 |
            34 | JOBENV::JOBENV(char * argv0)
            35 | ä
            36 |   program        = argv0;
            37 |
            38 |   psa    *  psaP    = (psa *)NULL;
            39 |   tcbfix *  tcbfixP = (tcbfix*)psaP->psatold;
            40 |             tcbfixP = (tcbfix*)((char *)tcbfixP-sizeof(tcbfixP->tcbfrs));
            41 |   tiot1ds *  tiot1P  = (tiot1ds*)tcbfixP->tcbtio;
            42 |   iezjscb*  iezjscbP= (iezjscb*)((tcbfixP->tcbjscb._tcbjscbb)&0x00ffffff);
            43 |   iezjscbP       = (iezjscb*)iezjscbP->jscbact;
            44 |   ssib  *  ssibP = (ssib *)iezjscbP->jscbssib;
            45 |
            46 | 	rbprfx * rbprfxP = (rbprfx *)tcbfixP->tcbrbp;
            47 | 	rbprfxP        = (rbprfx *)((char *)rbprfxP -64); //RB prefix 64 bytes
            48 | 	int ok = 1;
            49 | 	while (ok&&(rbprfxP->xstab1&rbftp))
            50 | 		ä
            51 | 		  if (rbprfxP->xstab2&rbtcbnxt)
            52 | 				ok = 0;
            53 | 			rbprfxP = (rbprfx *)(rbprfxP->xrblnka);
            54 | 			rbprfxP = (rbprfx *)((char *)rbprfxP -64); //RB prefix 64 bytes
            55 | 		ü
            56 | 	if (ok)
            57 | 		ä
            58 | 		 cdentry * cdentryP = (cdentry *)(rbprfxP->rbcde1);
            59 | 		 programRb = mvsSTRING((char *)cdentryP->cdname,8);
            60 | 		ü
            61 | 	else
            62 | 		programRb = "";
            63 |
            64 |   jobName        = mvsSTRING((char *)tiot1P->tiocnjob,8);
            65 |   stepName       = mvsSTRING((char *)tiot1P->tiocpstn,8);
            66 |   procStepName   = mvsSTRING((char *)tiot1P->tiocpstn,8);
            67 |   jobId          = mvsSTRING((char *)ssibP->ssibjbid,8);
            68 |
            69 |   jobName.strip();
            70 |   jobId.strip();
            71 |   stepName.strip();
            72 |   procStepName.strip();
            73 |   program.strip();
            74 |
            75 |   if (getenv(KEYWORD_DEBUG))
            76 |     debug = atoi(getenv(KEYWORD_DEBUG));
            77 |   else
            78 |     debug = 0;
            79 | ü
            80 |
            81 | void JOBENV::print()
            82 | ä
            83 |   Msg(400)<<jobName<<jobId<<program<<eol;
            84 | ü
            85 |
            86 | void JOBENV::Error(char *,JOBENV_ACTION a)
            87 | ä
            88 |  if (a == Abort)
            89 |  ä
            90 |     Msg(500)<<eol;
            91 |     abort();
            92 |  ü
            93 |
            94 | ü
            95 | int  JOBENV::DEBUG(int l,char* p0)
            96 | ä
            97 |   if (l>debug) return 0;
            98 |     Msg(101)<<p0<<eol;
            99 |   return 1;
           100 | ü
           101 |
           102 | int  JOBENV::DEBUG(int l,size_t p0)
           103 | ä
           104 |   if (l>debug) return 0;
           105 |     Msg(101)<<int(p0)<<eol;
           106 |   return 1;
           107 | ü
           108 |
           109 | int  JOBENV::DEBUG(int l,char* p0,char* p1)
           110 | ä
           111 |   if (l>debug) return 0;
           112 |     Msg(102)<<p0<<p1<<eol;
           113 |   return 1;
           114 | ü
           115 |
           116 |
           117 | int  JOBENV::DEBUG(int l,char* p0,int p1)
           118 | ä
           119 |   if (l>debug) return 0;
           120 |     Msg(102)<<p0<<p1<<eol;
           121 |   return 1;
           122 | ü
           123 |
           124 | int  JOBENV::DEBUG(int l,char* p0,char* p1,char* p2)
           125 | ä
           126 |   if (l>debug) return 0;
           127 |     Msg(103)<<p0<<p1<<p2<<eol;
           128 |   return 1;
           129 | ü
           130 |
           131 |
           132 | int  JOBENV::DEBUG(int l,char* p0,char* p1,char* p2,char *p3)
           133 | ä
           134 |   if (l>debug) return 0;
           135 |     Msg(103)<<p0<<p1<<p2<<p3<<eol;
           136 |   return 1;
           137 | ü
           138 |
           139 | int  JOBENV::DEBUG(int l,char* t,char* d,int dl)
           140 | ä
           141 |  if (l>debug) return 0;
           142 |  dump(messagetext->getFILE()?messagetext->getFILE():stdout,t,d,dl);
           143 |   return 1;
           144 | ü
0                                   * * * * *   E N D   O F   S O U R C E   * * * * *
-

15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTHSM.CPP(JOBENV)'                      20.12.12 18:51:09
0                                    * * * * *   I N C L U D E S   * * * * *
     1  =  //'ESA.PRJ.CBTHSM.HPP(ISISDEF)'
     2  =  //'CEE.SCEEH.H(STDLIB)'
     3  =  //'CEE.SCEEH.H(FEATURES)'
     4  =  //'CEE.SCEEH.H(BUILTINS)'
     5  =  //'CEE.SCEEH.H(STDDEF)'
     6  =  //'CEE.SCEEH.H(STRING)'
     7  =  //'CEE.SCEEH.H(STRINGS)'
     8  =  //'CEE.SCEEH.SYS.H(TYPES)'
     9  =  //'ESA.PRJ.CBTHSM.HPP(JOBENV)'
    10  =  //'ESA.PRJ.CBTHSM.HPP(MVSBASE)'
    11  =  //'ESA.PRJ.CBTHSM.HPP(MERROR)'
    12  =  //'ESA.PRJ.CBTHSM.HPP(DSNAMEUT)'
    13  =  //'CEE.SCEEH.H(ASSERT)'
    14  =  //'CEE.SCEEH.H(STDIO)'
    15  =  //'ESA.PRJ.CBTHSM.HPP(MSGMGR)'
    16  =  //'ESA.PRJ.CBTHSM.HPP(MISC)'
    17  =  //'CEE.SCEEH.H(TIME)'
    18  =  //'ESA.PRJ.CBTHSM.HPP(TIOT1)'
    19  =  //'ESA.PRJ.CBTHSM.HPP(IKJRB)'
    20  =  //'ESA.PRJ.CBTHSM.HPP(IHACDE)'
    21  =  //'ESA.PRJ.CBTHSM.HPP(PSA)'
    22  =  //'ESA.PRJ.CBTHSM.HPP(TCBFIX)'
    23  =  //'ESA.PRJ.CBTHSM.HPP(IEZJSCB)'
    24  =  //'ESA.PRJ.CBTHSM.HPP(SSIB)'
    25  =  //'ESA.PRJ.CBTHSM.HPP(TIOT1DS)'
0"//'ESA.PRJ.CBTHSM.HPP(TIOT1DS)'", line 3.8: CCN6451 (I) Using #pragma pack(1), the C++ compiler may generate a different class
 layout than the C compiler generates. Use #pragma pack(1:C_Compat) to get the C compiler's behavior.
-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *
0
15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTHSM.CPP(JOBENV)'                      20.12.12 18:51:09
-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *
0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
                (U)       (S)         (E)        (W)          (I)
     1           0         0           0          0            1
0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *
0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *
