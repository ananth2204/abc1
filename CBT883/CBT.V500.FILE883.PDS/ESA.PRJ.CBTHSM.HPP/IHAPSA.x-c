#pragma pack(packed)

struct psa ä
  union ä
    struct ä
      unsigned char  _flcrnpswÄ4Ü; /* -RESTART NEW PSW (AFTER IPL)        MDC001   */
      void          *_filler1;     /* -  SECOND HALF OF RESTART NEW PSW     MDC128 */
      ü flcippsw;
    struct ä
      unsigned char  _flceippswÄ8Ü; /* FLCE 0x: IPL PSW */
      ü flcesame;
    ü _psa_union1;
  union ä
    struct ä
      unsigned char  _flcropswÄ8Ü; /* -      RESTART OLD PSW (AFTER IPL) */
      ü flciccw1;
    unsigned char  _flceiccw1Ä8Ü; /* FLCE 8x: IPL CCW1 */
    ü _psa_union2;
  union ä
    struct ä
      void          *_flccvt;      /* -    ADDRESS OF CVT (AFTER IPL).  THIS OFFSET    */
      unsigned char  _filler2Ä4Ü;  /* -      RESERVED (AFTER IPL)  (MDC431)   @ZM48214 */
      ü flciccw2;
    unsigned char  _flceiccw2Ä8Ü; /* FLCE 10x: IPL CCW1 */
    ü _psa_union3;
  union ä
    struct ä
      unsigned char  _flceopswÄ8Ü; /* -      EXTERNAL OLD PSW                          */
      unsigned char  _flcsopswÄ8Ü; /* -      SVC OLD PSW.  THIS OFFSET FIXED BY        */
      unsigned char  _flcpopswÄ8Ü; /* -      PROGRAM CHECK OLD PSW                     */
      unsigned char  _flcmopswÄ8Ü; /* -      MACHINE CHECK OLD PSW                     */
      unsigned char  _flciopswÄ8Ü; /* -      INPUT/OUTPUT OLD PSW                      */
      unsigned char  _filler3Ä8Ü;  /* -      RESERVED                         @G860PXK */
      struct ä
        unsigned char  _filler4Ä4Ü;  /* -      1st 4 bytes are 0                    @H3A */
        void          *_flccvt2;     /* -    ADDRESS OF CVT - USED BY DUMP               */
        ü flccvt64;
      unsigned char  _filler5Ä4Ü;  /* -      RESERVED                         @G860PXH */
      unsigned char  _filler6Ä4Ü;  /* -      RESERVED - FLCTRACE DELETED DUE TO        */
      unsigned char  _flcenpswÄ4Ü; /* -EXTERNAL NEW PSW                                */
      void          *_filler7;     /* -  SECOND HALF OF EXTERNAL NEW PSW               */
      unsigned char  _flcsnpswÄ4Ü; /* -SVC NEW PSW                                     */
      void          *_filler8;     /* -  SECOND HALF OF SVC NEW PSW                    */
      unsigned char  _flcpnpswÄ4Ü; /* - PROGRAM CHECK NEW PSW, DISABLED FOR @02C       */
      void          *_filler9;     /* -  SECOND HALF OF PROGRAM CHECK NEW PSW          */
      unsigned char  _flcmnpswÄ4Ü; /* -MACHINE CHECK NEW PSW              MDC003       */
      void          *_filler10;    /* -  SECOND HALF OF MACHINE CHECK NEW PSW          */
      unsigned char  _flcinpswÄ4Ü; /* -INPUT/OUTPUT NEW PSW                            */
      void          *_filler11;    /* -  SECOND HALF OF I/O NEW PSW                    */
      ü _psa_struct1;
    unsigned char  _flcer018Ä104Ü; /* FLCE 18x: reserved */
    ü _psa_union4;
  union ä
    int            _psaeparm;     /* -         EXTERNAL INTERRUPTION PARAMETER  @G871A9A */
    unsigned char  _flceeparmÄ4Ü; /* FLCE 80x: External interruption parameter           */
    ü _psa_union5;
  union ä
    struct ä
      short int      _psaspad;  /* -         ISSUING PROCESSOR'S PHYSICAL ADDRESS */
      short int      _flceicod; /* -         EXTERNAL INTERRUPTION CODE           */
      ü psaeepsw;
    struct ä
      unsigned char  _flcecpuadÄ2Ü;  /* FLCE 84x: CPU address                */
      unsigned char  _flceeicodeÄ2Ü; /* FLCE 86x: External interruption code */
      ü _psa_struct2;
    ü _psa_union6;
  union ä
    struct ä
      unsigned char  _filler12;  /* -      RESERVED - SET TO ZERO                   */
      char           _flcsvilc;  /* -       SVC INSTRUCTION LENGTH COUNTER - NUMBER */
      short int      _flcsvcn;   /* -         SVC INTERRUPTION CODE - SVC NUMBER.   */
      ü psaespsw;
    unsigned char  _flcesdataÄ4Ü; /* FLCE 88x: Additional SVC interruption data */
    struct ä
      unsigned char  _flcesdatabyte0Ä2Ü; /* FLCE 88x: */
      unsigned char  _filler13Ä2Ü;
      ü _psa_struct3;
    struct ä
      unsigned char  _filler14;      /* FLCE 88x: Reserved                     */
      unsigned char  _flcesilc;      /* FLCE 89x: SVC interruption length code */
      unsigned char  _flcesicodeÄ2Ü; /* FLCE 8Ax: SVC interruption code        */
      ü _psa_struct4;
    ü _psa_union7;
  union ä
    struct ä
      unsigned char  _filler15;  /* -      RESERVED - SET TO ZERO                     */
      char           _flcpiilc;  /* -       PROGRAM INTERRUPT LENGTH COUNTER - NUMBER */
      struct ä
        char           _psaeecod; /* -       EXCEPTION-EXTENSION CODE.            @03C */
        char           _psapicod; /* -       8-BIT INTERRUPT CODE.  THIS OFFSET FIXED  */
        ü flcpicod;
      struct ä
        unsigned char  _filler16Ä3Ü;  /* -                                           @L8A */
        struct ä
          unsigned char  _flcteab3; /* -      LAST BYTE OF TEA.                    @L8A */
          ü flcdxc;
        ü flctea;
      ü psaeppsw;
    struct ä
      unsigned char  _flcepdataÄ4Ü; /* FLCE 8Cx: Additional Program interruption */
      unsigned char  _filler17Ä4Ü;
      ü _psa_struct5;
    struct ä
      unsigned char  _flcepdatabyte0Ä2Ü; /* FLCE 8Cx: */
      unsigned char  _filler18Ä6Ü;
      ü _psa_struct6;
    struct ä
      unsigned char  _filler19;      /* FLCE 8Cx: Reserved                         */
      unsigned char  _flcepilc;      /* FLCE 8Dx: Program interruption length code */
      unsigned char  _flcepicodeÄ2Ü; /* FLCE 8Ex: Program interruption code        */
      unsigned char  _filler20Ä4Ü;
      ü _psa_struct7;
    struct ä
      unsigned char  _filler21Ä2Ü;
      unsigned char  _flcepicode0;          /* FLCE 8Ex: Exception extension code */
      unsigned char  _flcepicode1;          /* FLCE 8Fx: 8-bit interruption code  */
      unsigned char  _flcepiinformationÄ4Ü; /* FLCE 90x:                          */
      ü _psa_struct8;
    struct ä
      unsigned char  _filler22Ä4Ü;
      unsigned char  _filler23Ä3Ü;
      unsigned char  _flcedxc;      /* FLCE 93x: Data exception code for PI 7 */
      ü _psa_struct9;
    ü _psa_union8;
  union ä
    unsigned char  _flcemcnumÄ2Ü; /* FLCE 94x: Monitor class number */
    struct ä
      unsigned char  _filler24;
      unsigned char  _flcmcnum;     /* -      MONITOR CLASS NUMBER */
      ü _psa_struct10;
    ü _psa_union9;
  union ä
    struct ä
      unsigned char  _flcpercd; /* -      PROGRAM EVENT RECORDING CODE              */
      unsigned char  _flcatmid; /* -      ATM ID                               @LSA */
      ü _psa_struct11;
    unsigned char  _flcepercodeÄ2Ü; /* FLCE 96x: PER code */
    struct ä
      unsigned char  _flcepercode0; /* FLCE 96x: Byte 0                              */
      unsigned char  _flceperatmid; /* FLCE 97x: PER addressing and translation mode */
      ü _psa_struct12;
    ü _psa_union10;
  union ä
    struct ä
      void          *_flcper;      /* -         PER ADDRESS - ESA/390            @G860PXK */
      unsigned char  _filler25;    /* -      RESERVED - SET TO ZERO                       */
      unsigned char  _flcmtrcdÄ3Ü; /* -      MONITOR CODE (ESA/390)                       */
      ü _psa_struct13;
    unsigned char  _flceperÄ8Ü; /* FLCE 98x: PER address */
    struct ä
      unsigned char  _flceperw0Ä4Ü; /* FLCE 98x: PER address word 0 */
      void          *_flceperw1;    /* FLCE 9Cx: PER address word 1 */
      ü _psa_struct14;
    ü _psa_union11;
  union ä
    unsigned char  _flctearn; /* -      CONTAINS THE ACCESS REGISTER NUMBER  @L8C */
    unsigned char  _flceeaid; /* FLCE A0x: Exception access ID (The AR number     */
    ü _psa_union12;
  union ä
    unsigned char  _flcperrn;   /* -      CONTAINS THE PER STORAGE ACCESS      @L8A */
    unsigned char  _flceperaid; /* FLCE A1x: PER access ID (the access register     */
    ü _psa_union13;
  unsigned char  flceopacid;         /* FLCE A2x:                                              */
  union ä
    unsigned char  _flcarch;   /* -      Architecture information             @LSA */
    unsigned char  _flceamdid; /* FLCE A3x: Architecture mode ID (See FLCARCH      */
    ü _psa_union14;
  union ä
    void          *_psampl;  /* -    MPL ADDRESS.  THIS OFFSET FIXED BY */
    void          *_flcempl; /* FLCE A4x: MPL address                   */
    ü _psa_union15;
  union ä
    unsigned char  _flceteidÄ8Ü;      /* FLCE A8x: Translation exception         */
    unsigned char  _flceteaÄ8Ü;       /* FLCE A8x: Translation exception address */
    struct ä
      unsigned char  _filler26Ä7Ü;
      unsigned char  _flcetea7;     /* FLCE AFx: Byte 7 of FlceTEA */
      ü _psa_struct15;
    unsigned char  _flceteasninfoÄ8Ü; /* FLCE A8x: ASN Info                      */
    struct ä
      unsigned char  _filler27Ä6Ü;
      short int      _flceteasn;    /* FLCE AEx: ASN */
      ü _psa_struct16;
    unsigned char  _flcetepcinfoÄ8Ü;  /* FLCE A8x: PC Info                       */
    struct ä
      unsigned char  _filler28Ä4Ü;
      int            _flcepcnum;    /* FLCE ACx: PC#. Bits 0-10 are 0, bit 11 is 1, */
      ü _psa_struct17;
    ü _psa_union16;
  unsigned char  flcemonitorcodeÄ8Ü; /* FLCE B0x: Monitor Code                                 */
  union ä
    struct ä
      unsigned char  _flcsidÄ4Ü;  /* -      SUBSYSTEM ID                     @G860PVB */
      unsigned char  _flciofpÄ4Ü; /* -      I/O INTERRUPTION PARAMETER       @G860PVB */
      ü flciocdp;
    struct ä
      unsigned char  _flcessidÄ4Ü;      /* FLCE B8x: Subsystem ID word          */
      unsigned char  _flceiointparmÄ4Ü; /* FLCE BCx: I/O interruption parameter */
      ü _psa_struct18;
    ü _psa_union17;
  unsigned char  flceiointidÄ4Ü;     /* FLCE C0x: I/O interruption ID                          */
  unsigned char  flcer0c4Ä4Ü;        /* FLCE C4x: Reserved                                     */
  union ä
    struct ä
      unsigned char  _flcfacl0;     /* Byte 0 of FLCFACL                    @LVA        */
      unsigned char  _flcfacl1;     /* Byte 1 of FLCFACL                    @LVA        */
      unsigned char  _flcfacl2;     /* Byte 2 of FLCFACL                    @LVA        */
      unsigned char  _flcfacl3;     /* Byte 3 of FLCFACL                    @LVA        */
      unsigned char  _flcfacl4;     /* Byte 4 of FLCFACL                    @PHA        */
      unsigned char  _flcfacl5;     /* Byte 5 of FLCFACL                    @PHA        */
      unsigned char  _flcfacl6;     /* Byte 6 of FLCFACL                    @PHA        */
      unsigned char  _flcfacl7;     /* Byte 7 of FLCFACL                    @PHA        */
      unsigned char  _filler29Ä8Ü;  /* -      RESERVED                             @PHC */
      ü flcfacl;
    unsigned char  _flcefacilitieslistÄ16Ü; /* FLCE C8x: Facilities list stored by STFL */
    struct ä
      unsigned char  _flcefacilitieslistbyte0; /* FLCE C8x */
      unsigned char  _flcefacilitieslistbyte1; /* FLCE C9x */
      unsigned char  _flcefacilitieslistbyte2; /* FLCE CAx */
      unsigned char  _flcefacilitieslistbyte3; /* FLCE CBx */
      unsigned char  _flcefacilitieslistbyte4; /* FLCE CCx */
      unsigned char  _flcefacilitieslistbyte5; /* FLCE CDx */
      unsigned char  _flcefacilitieslistbyte6; /* FLCE CEx */
      unsigned char  _flcefacilitieslistbyte7; /* FLCE CFx */
      unsigned char  _flcefacilitieslistbyte8; /* FLCE D0x */
      unsigned char  _flcefacilitieslistbyte9; /* FLCE D1x */
      unsigned char  _flcefacilitieslistbytea; /* FLCE D2x */
      unsigned char  _flcefacilitieslistbyteb; /* FLCE D3x */
      unsigned char  _flcefacilitieslistbytec; /* FLCE D4x */
      unsigned char  _flcefacilitieslistbyted; /* FLCE D5x */
      unsigned char  _flcefacilitieslistbytee; /* FLCE D6x */
      unsigned char  _flcefacilitieslistbytef; /* FLCE D7x */
      ü _psa_struct19;
    ü _psa_union18;
  union ä
    struct ä
      unsigned char  _flcctsaÄ8Ü; /* -      CPU-TIMER SAVE AREA (FROM STORE-     @LHA */
      unsigned char  _flcccsaÄ8Ü; /* -      CLOCK-COMPARATOR SAVE AREA (FROM     @LHA */
      ü _psa_struct20;
    struct ä
      unsigned char  _flcer0d8Ä12Ü;      /* FLCE D8x: Reserved    */
      unsigned char  _flcecpusignalsÄ4Ü; /* FLCE E4x: CPU signals */
      ü _psa_struct21;
    ü _psa_union19;
  union ä
    unsigned char  _flcmcicÄ8Ü;  /* -      MACHINE-CHECK INTERRUPTION CODE  @G860PVB */
    unsigned char  _flcemcicÄ8Ü; /* FLCE E8x: Machine check interruption code        */
    ü _psa_union20;
  unsigned char  flcemciceÄ4Ü;       /* FLCE F0x: Machine check interruption code              */
  unsigned char  flceedcodeÄ4Ü;      /* FLCE F4x: External damage code                         */
  union ä
    struct ä
      void          *_flcfsa;       /* -         FAILING STORAGE ADDRESS          @G860PXK */
      unsigned char  _filler30Ä4Ü;  /* -      RESERVED - SET TO ZERO           @G860PXK    */
      ü _psa_struct22;
    unsigned char  _flcefsaÄ8Ü; /* FLCE F8x: Failing storage address */
    ü _psa_union21;
  union ä
    unsigned char  _flcflaÄ16Ü;   /* -     FIXED LOGOUT AREA. SIZE FIXED BY     @L9C */
    unsigned char  _flcer100Ä16Ü; /* FLCE 100x: Reserved                             */
    ü _psa_union22;
  union ä
    unsigned char  _flcrv110Ä16Ü; /* -     RESERVED.                            @L9A */
    struct ä
      unsigned char  _flcebeaÄ8Ü;  /* FLCE 110x: Breaking event address */
      unsigned char  _flcer118Ä8Ü; /* FLCE 118x: Reserved               */
      ü _psa_struct23;
    ü _psa_union23;
  union ä
    int            _flcarsavÄ16Ü; /* -     ACCESS REGISTER SAVE AREA            @L9A */
    struct ä
      unsigned char  _flceropswÄ16Ü; /* FLCE 120x: Restart old PSW  */
      unsigned char  _flceeopswÄ16Ü; /* FLCE 130x: External old PSW */
      unsigned char  _flcesopswÄ16Ü; /* FLCE 140x: SVC old PSW      */
      unsigned char  _flcepopswÄ16Ü; /* FLCE 150x: Program old PSW  */
      ü _psa_struct24;
    ü _psa_union24;
  union ä
    unsigned char  _flcfpsavÄ32Ü; /* -     FLOATING POINT REGISTER SAVE AREA */
    struct ä
      unsigned char  _flcemopswÄ16Ü; /* FLCE 160x: Machine check old PSW */
      unsigned char  _flceiopswÄ16Ü; /* FLCE 170x: I/O old PSW           */
      ü _psa_struct25;
    ü _psa_union25;
  union ä
    int            _flcgrsavÄ16Ü; /* -       GENERAL REGISTER SAVE AREA */
    struct ä
      unsigned char  _flcer180Ä32Ü;  /* FLCE 180x: reserved         */
      unsigned char  _flcernpswÄ16Ü; /* FLCE 1A0x: Restart new PSW  */
      unsigned char  _flceenpswÄ16Ü; /* FLCE 1B0x: External new PSW */
      ü _psa_struct26;
    ü _psa_union26;
  union ä
    int            _flccrsavÄ16Ü; /* -       CONTROL REGISTER SAVE AREA */
    struct ä
      unsigned char  _flcesnpswÄ16Ü; /* FLCE 1C0x: SVC new PSW           */
      unsigned char  _flcepnpswÄ16Ü; /* FLCE 1D0x: Program new PSW       */
      unsigned char  _flcemnpswÄ16Ü; /* FLCE 1E0x: Machine check new PSW */
      unsigned char  _flceinpswÄ16Ü; /* FLCE 1F0x: I/O new PSW           */
      ü _psa_struct27;
    ü _psa_union27;
  struct ä
    unsigned char  _psapsaÄ4Ü; /* -    CONTROL BLOCK ACRONYM IN EBCDIC                */
    short int      _psacpupa;  /* -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR) */
    short int      _psacpula;  /* -         LOGICAL CPU ADDRESS                       */
    ü flchdend;
  void          *psapccav;           /* -         VIRTUAL ADDRESS OF PCCA                      */
  void          *psapccar;           /* -         REAL ADDRESS OF PCCA                         */
  void          *psalccav;           /* -         VIRTUAL ADDRESS OF LCCA                      */
  void          *psalccar;           /* -         REAL ADDRESS OF LCCA                         */
  void          *psatnew;            /* -         TCB pointer. Field maintained for code       */
  void          *psatold;            /* -         Pointer to current TCB or zero if in SRB     */
  void          *psaanew;            /* ASCB pointer.  Field maintained for code               */
  void          *psaaold;            /* -         Pointer to the home (current) ASCB.          */
  struct ä
    unsigned char  _psasup1; /* -      FIRST BYTE OF PSASUPER  */
    unsigned char  _psasup2; /* -      SECOND BYTE OF PSASUPER */
    unsigned char  _psasup3; /* -      THIRD BYTE OF PSASUPER  */
    unsigned char  _psasup4; /* -      FOURTH BYTE OF PSASUPER */
    ü psasuper;
  unsigned char  psarv22cÄ12Ü;       /* -     RESERVED                             @H5C        */
  unsigned char  psadiagÄ2Ü;         /* -     Reserved                             @H5A        */
  union ä
    unsigned char  _psaprocclassÄ2Ü;         /* -     PROCESSOR WUQ Offset.             */
    unsigned char  _psa_bylpar_procclassÄ2Ü; /* - PROCESSOR WUQ Offset.            @H5A */
    struct ä
      unsigned char  _psaprocclass_byte0; /* @H4A */
      unsigned char  _psaprocclass_byte1; /* @H4A */
      ü _psa_struct28;
    struct ä
      unsigned char  _psa_bylpar_procclass_byte0; /* @H5A */
      unsigned char  _psa_bylpar_procclass_byte1; /* @H5A */
      ü _psa_struct29;
    ü _psa_union28;
  unsigned char  psaptype;           /* -      PROCESSOR TYPE INDICATOR             @H1A       */
  unsigned char  psails;             /* -      INTERRUPT HANDLER LINKAGE STACK      @L9C       */
  unsigned char  psalsvciÄ2Ü;        /* -      LAST SVC ISSUED ON THIS PROCESSOR    @L6A       */
  unsigned char  psaflags;           /* -      SYSTEM FLAGS                         @LOA       */
  unsigned char  psarv241Ä10Ü;       /* RESERVED FOR FUTURE USE - SC1C5.     @LOC              */
  unsigned char  psascaff;           /* $$SCAFFOLD                                             */
  void          *psalkcrf;           /* LINKAGE STACK POINTER SAVE AREA.     @D4A              */
  unsigned char  psampswÄ8Ü;         /* - SETLOCK MODEL PSW                                    */
  unsigned char  psamchexÄ8Ü;        /* -      MCH EXIT PSW                                    */
  int            psatclin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */
  int            psaintin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */
  int            psaipcin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */
  int            psaems2s;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */
  int            psastosm;           /* -            STOSM PSASLSA,X'00' INSTRUCTION.     @P5A */
  int            psahlhis;           /* -         SAVE AREA FOR PSAHLHI              MDC050    */
  unsigned char  psarecur;           /* -      RESTART FLIH RECURSION INDICATOR.  IF           */
  unsigned char  psarssm;            /* -      STNSM AREA FOR IEAVERES              @L5C       */
  unsigned char  psasnsm2;           /* -      STNSM AREA FOR IEAVTRT1 (MDC470) @G65RP9A       */
  unsigned char  psartm1s;           /* -      BITS 0-7 OF THE CURRENT PSW ARE  @G383P9A       */
  void          *psalwtsa;           /* -         REAL ADDRESS OF SAVE AREA USED WHEN  @LHC    */
  struct ä
    struct ä
      void          *_psadispl; /* -  GLOBAL DISPATCHER LOCK  (MDC315) @G50DP9A        */
      void          *_psaasml;  /* -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK   */
      void          *_psasalcl; /* -  SPACE ALLOCATION LOCK  (MDC316)  @G50DP9A        */
      void          *_psaiossl; /* -         IOS SYNCHRONIZATION LOCK           MDC010 */
      void          *_psarsmdl; /* -         ADDRESS OF THE RSM DATA SPACE LOCK   @LBC */
      void          *_psaiosul; /* -         IOS UNIT CONTROL BLOCK LOCK        MDC005 */
      void          *_psarvlk1; /* -         RESERVED FOR LOCK EXPANSION      @G860PXK */
      void          *_psarv29c; /* -         RESERVED FOR LOCK EXPANSION          @LDC */
      void          *_psarv2a0; /* -         RESERVED FOR LOCK EXPANSION          @LDC */
      void          *_psatpacl; /* -         TCAM'S TPACBDEB LOCK               MDC009 */
      void          *_psaoptl;  /* -   OPTIMIZER LOCK  (MDC317)         @G50DP9A       */
      void          *_psarsmgl; /* -         RSM GLOBAL LOCK                  @G860PXH */
      void          *_psavfixl; /* VSM FIXED SUBPOOLS LOCK          @G860PXH           */
      void          *_psaasmgl; /* -         ASM GLOBAL LOCK                  @G860PXH */
      void          *_psarsmsl; /* -         RSM STEAL LOCK                   @G860PXH */
      void          *_psarsmxl; /* -         RSM CROSS MEMORY LOCK            @G860PXH */
      void          *_psarsmal; /* -         RSM ADDRESS SPACE LOCK           @G860PXH */
      void          *_psavpagl; /* VSM PAGEABLE SUBPOOLS LOCK       @G860PXH           */
      void          *_psarsmcl; /* RSM COMMON LOCK                  @G860PXK           */
      void          *_psarvlk2; /* RESERVED FOR LOCK EXPANSION      @G860PXH           */
      ü psaclht1;
    struct ä
      void          *_psarsml;  /* RSM GLOBAL FUNCTION/RECOVERY                        */
      void          *_psatrcel; /* TRACE BUFFER MANAGEMENT LOCK     @G860PXH           */
      void          *_psaiosl;  /* -   IOS LOCK                             @D3C       */
      void          *_psarvlk4; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */
      ü psaclht2;
    struct ä
      void          *_psacpul;  /* CPU TABLE LOCKS                  @G860PXH           */
      void          *_psarvlk5; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */
      ü psaclht3;
    struct ä
      void          *_psacmsl;  /* -         CROSS MEMORY SERVICES LOCK                */
      void          *_psalocal; /* -         LOCAL LOCK                                */
      void          *_psarvlk6; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */
      ü psaclht4;
    ü psaclht;
  void          *psalcpua;           /* -         LOGICAL CPU ADDRESS FOR LOCK INSTRUCTION.    */
  struct ä
    struct ä
      unsigned char  _psaclhs1; /* -      FIRST BYTE OF PSACLHS. (MDC384)  @G860PXH */
      unsigned char  _psaclhs2; /* -      SECOND BYTE OF PSACLHS. (MDC385) @G860PXH */
      unsigned char  _psaclhs3; /* -      THIRD BYTE OF PSACLHS  (MDC386)  @G50EP9A */
      unsigned char  _psaclhs4; /* -      FOURTH BYTE OF PSACLHS  (MDC392) @G50EP9A */
      ü psaclhs;
    ü psahlhi;
  void          *psalita;            /* -  ADDRESS OF LOCK INTERFACE TABLE.                    */
  unsigned char  psastor8Ä8Ü;        /* -      8-BYTE value for master's STO        @LSA       */
  int            psacr0;             /* -         SAVE AREA FOR CONTROL REGISTER 0             */
  unsigned char  psamchfl;           /* -      MCH RECURSION FLAGS                             */
  unsigned char  psasymsk;           /* -      THIS FIELD WILL BE USED IN CONJUNCTION          */
  unsigned char  psaactcd;           /* -      ACTION CODE SUPPLIED BY OPERATOR     @LHC       */
  unsigned char  psamchic;           /* -      MCH INITIALIZATION COMPLETE FLAGS  MDC098       */
  void          *psawkrap;           /* -         REAL ADDRESS OF VARY CPU PARAMETER LIST      */
  void          *psawkvap;           /* -         VIRTUAL ADDRESS OF VARY CPU PARAMETER        */
  short int      psavstap;           /* -         WORK AREA FOR VARY CPU             MDC108    */
  short int      psacpusa;           /* -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)      */
  int            psastor;            /* -         MASTER MEMORY'S SEGMENT TABLE ORIGIN         */
  unsigned char  psaidawkÄ90Ü;       /* -     WORK SAVE AREA FOR private                       */
  short int      psaret;             /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */
  short int      psaretcd;           /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */
  unsigned char  psarv37eÄ2Ü;        /* -      RESERVED                             @PJC       */
  struct ä
    struct ä
      void          *_psacstk;  /* -         ADDRESS OF CURRENTLY USED FUNCTIONAL      */
      void          *_psanstk;  /* -         ADDRESS OF NORMAL FRR STACK        MDC062 */
      void          *_psasstk;  /* -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK   */
      void          *_psassav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */
      void          *_psamstk;  /* -         ADDRESS OF MCH FRR STACK           MDC067 */
      void          *_psamsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */
      void          *_psapstk;  /* -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK   */
      void          *_psapsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */
      void          *_psaestk1; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */
      void          *_psaesav1; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */
      void          *_psaestk2; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */
      void          *_psaesav2; /* -         ADDRESS OF INTERRUPTED STACK SAVE BY      */
      void          *_psaestk3; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */
      void          *_psaesav3; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */
      void          *_psarstk;  /* -         ADDRESS OF RESTART FLIH FRR STACK  MDC077 */
      void          *_psarsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */
      ü psarsvte;
    ü psarsvt;
  unsigned char  psalwpswÄ8Ü;        /* -      PSW OF WORK INTERRUPTED WHEN A       @LHC       */
  unsigned char  psarspswÄ8Ü;        /* -      RESUME PSW FIELD FOR RESTART INTERRUPT          */
  void          *psatstk;            /* -         ADDRESS OF RTM RECOVERY STACK.               */
  void          *psatsav;            /* -         ADDRESS OF ERROR STACK SAVED BY RTM  @L7A    */
  void          *psaastk;            /* -         ADDRESS OF ACR FRR STACK.            @L7A    */
  void          *psaasav;            /* -         ADDRESS OF INTERRUPT STACK SAVED BY  @L7A    */
  unsigned char  psartpswÄ8Ü;        /* -      RESUME PSW FOR RTM SETRP RETRY       @L7A       */
  unsigned char  psarv3e8Ä8Ü;        /* -      RESERVED                             @L7C       */
  unsigned char  psasfaccÄ4Ü;        /* - SETFRR ABEND COMPLETION CODE USED WHEN               */
  int            psalsfcc;           /* -            L  1,PSASFACC INSTRUCTION TO LOAD    @P5A */
  short int      psasvc13;           /* -            AN SVC 13 INSTRUCTION                @P5A */
  unsigned char  psarv3fa;           /* -      RESERVED                             @PJC       */
  unsigned char  psainte;            /* -      FLAGS FOR CPU TIMER  (MDC466)    @ZM48078       */
  int            psartm1r;           /* -            STOSM PSARTM1S,X'00' INSTRUCTION     @P5A */
  unsigned char  psarv400Ä8Ü;        /* -      Reserved                             @LVC       */
  void          *psaatcvt;           /* -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY       */
  void          *psawtcod;           /* -         WAIT STATE CODE LOADED               @LHC    */
  void          *psascwa;            /* -         ADDRESS OF SUPERVISOR CONTROL CPU            */
  void          *psarsmsa;           /* -         ADDRESS OF RSM CPU RELATED WORK              */
  unsigned char  psascpswÄ4Ü;        /* - MODEL PSW                                            */
  void          *_filler31;          /* -         MODEL PSW SECOND HALF  (MDC325)  @G50DP9A    */
  unsigned char  psasmpswÄ4Ü;        /* - SRB DISPATCH PSW  (MDC326)      @G50DP9A             */
  void          *_filler32;          /* -         DISPATCH PSW SECOND HALF                     */
  unsigned char  psapcpswÄ16Ü;       /* =     TEMPORARY OLD PSW STORAGE FOR PROGRAM            */
  unsigned char  psarv438Ä48Ü;       /* =     Reserved                             @LVC        */
  unsigned char  psapswsvÄ8Ü;        /* -      PSW SAVE AREA FOR DISPATCHER AND ACR            */
  unsigned char  psacputÄ8Ü;         /* -      SUPERVISOR CPU TIMER SAVE AREA                  */
  struct ä
    unsigned char  _psapcfb1; /* -      FUNCTION VALUE  (MDC484)         @G383P9A */
    unsigned char  _psapcfb2; /* -      FUNCTION FLAGS  (MDC491)         @G383P9A */
    unsigned char  _psapcfb3; /* -      RECURSION FLAGS  (MDC494)        @G383P9A */
    unsigned char  _psapcfb4; /* -      RECURSION FLAGS                           */
    ü psapcfun;
  short int      psapcps2;           /* -         PASID AT TIME OF SECOND LEVEL    @G383P9A    */
  unsigned char  psarv47eÄ2Ü;        /* -      RESERVED                         @G860PXK       */
  unsigned char  psapcwkaÄ24Ü;       /* -     Work area for PC FLIH. Must be                   */
  short int      psapcps3;           /* -         PASID AT TIME OF THIRD LEVEL     @G383P9A    */
  short int      psapcps4;           /* -         PASID AT TIME OF FOURTH LEVEL                */
  struct ä
    unsigned char  _filler33;  /* -      RESERVED - FIRST BYTE OF PSAMODEW         */
    unsigned char  _psamflgs;  /* -      SECOND BYTE OF PSAMODEW (MDC604) @G383P9A */
    unsigned char  _psamodeh;  /* -      SECOND HALFWORD OF PSAMODEW.     @G383P9A */
    unsigned char  _psamode;   /* -      SYSTEM MODE INDICATOR AND DISPLACEMENT    */
    ü psamodew;
  unsigned char  _filler34Ä3Ü;       /* -      RESERVED                         @G860PXK       */
  unsigned char  psastnsm;           /* -      STNSM TARGET USED BY EXIT PROLOGUE              */
  int            psalkjw;            /* -         LOCAL LOCK RELEASE SRB JOURNAL   @G383P9A    */
  struct ä
    int            _psafzero;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */
    int            _filler35;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */
    ü psadzero;
  int            psalkjw2;           /* -         CMS LOCK RELEASE JOURNAL WORD.   @G383P9A    */
  void          *psalkpt;            /* -   SETLOCK TEST,TYPE=HIER                             */
  void          *psalaa;             /* -      LE Anchor Area. Owner: LE            @LVA       */
  void          *psalit2;            /* -  POINTER TO THE EXTENDED LOCK         @LDA           */
  void          *psaecltp;           /* -   POINTER TO THE EXTENDED CURRENT      @LDA          */
  struct ä
    unsigned char  _psalheb0; /* -      BYTE 0 OF THE CURRENT LOCK HELD      @LDA */
    unsigned char  _psalheb1; /* -      BYTE 1 OF THE CURRENT LOCK HELD      @LDA */
    unsigned char  _psalheb2; /* -      BYTE 2 OF THE CURRENT LOCK HELD      @LDA */
    unsigned char  _psalheb3; /* -      BYTE 3 OF THE CURRENT LOCK HELD      @LDA */
    ü psaclhse;
  unsigned char  psarv4c8Ä8Ü;        /* -    RESERVED FOR FUTURE LOCK EXPANSION.  @LDA         */
  unsigned char  psarv4d0Ä184Ü;      /* -    RESERVED.                            @LDA         */
  unsigned char  psahwfb;            /* -      HARDWARE FLAG BYTE.                  @L3A       */
  unsigned char  psacr0cb;           /* -      CR0 CONTROL BYTE USED BY PROTPSA MACRO          */
  unsigned char  psarv58aÄ2Ü;        /* -      RESERVED                             @PJC       */
  int            psacr0sv;           /* -         CR0 SAVE AREA USED BY PROTPSA MACRO          */
  int            psapccr0;           /* -         PROGRAM CHECK FLIH CR0 SAVE AREA             */
  int            psarcr0;            /* -         RESTART FLIH CR0 SAVE AREA                   */
  struct ä
    short int      _psatkn; /* -         CURRENT STACK TOKEN     (MDC610) @G383P9A */
    short int      _psaasd; /* -         CURRENT STACK ADDRESS SPACE               */
    int            _psasel; /* -         CURRENT STACK ELEMENTS ADDRESS            */
    ü psastke;
  unsigned char  psaskpswÄ4Ü;        /* PCLINK STACK/UNSTACK MODEL PSW                         */
  void          *psaskps2;           /* -         PCLINK PSW ADDRESS      (MDC604) @G383P9A    */
  void          *psacpcls;           /* -      PCLINK WORKAREA - CURRENT STACK      @L9C       */
  unsigned char  psarv5acÄ4Ü;        /* -      RESERVED.                            @L9A       */
  void          *psascfs;            /* -      ADDRESS OF THE SUPERVISOR CONTROL    @L8C       */
  void          *psapawa;            /* -      ADDRESS OF PC/AUTH WORK AREA.        @L8A       */
  unsigned char  psascfb;            /* -      SUPERVISOR CONTROL FLAG BYTE.        @L1A       */
  unsigned char  psarv5b9Ä3Ü;        /* -      RESERVED                             @PJC       */
  unsigned char  psacr0m1Ä4Ü;        /* MASK OF CR0 WITH EXTERNAL MASK BITS  @04A              */
  unsigned char  psacr0m2Ä4Ü;        /* MASK OF CR0 WITH ONLY EXTERNAL MASK  @04A              */
  unsigned char  psarv5c4Ä148Ü;      /* -    RESERVED                             @03A         */
  double         psatime;            /* -         CURRENT SRB'S ACCUMULATED CPU TIME   @01C    */
  int            psasrsav;           /* -        ADDRESS OF CURRENT FRR STACK     @G383P9A     */
  unsigned char  psaesc8Ä12Ü;        /* -     Save area for IEAVESC8               @LPA        */
  unsigned char  psadexmwÄ8Ü;        /* -         Work area for dispatcher CR3/4       @LVC    */
  unsigned char  psadsarsÄ64Ü;       /* -     DISPATCHER ACCESS REGISTER SAVE AREA @L9C        */
  double         psarv6b8;           /* -            RESERVED                             @LVC */
  union ä
    double         _psadtsav;    /* -            CPU TIMER VALUE AT LAST DISPATCH,    @01C */
    unsigned char  _psaff6c0Ä8Ü; /* INITIALIZE FIELD PSADTSAV     @ZMC3284                 */
    ü _psa_union29;
  struct ä
    struct ä
      int            _psadsins; /* -        DISPATCHER Secondary ASTE Inst# S/A  @LVA */
      struct ä
        short int      _psadpkm; /* -        DISPATCHER PROGRAM KEY MASK SAVE AREA */
        short int      _psadsas; /* -        DISPATCHER SECONDARY ASID SAVE AREA   */
        ü psadpksa;
      ü psadcr3;
    struct ä
      int            _psadpins; /* -        DISPATCHER Primary ASTE Inst# S/A    @LVA */
      struct ä
        short int      _psadax;  /* -        DISPATCHER  AUTHORIZATION        @G383P9A */
        short int      _psadpas; /* -        DISPATCHER PRIMARY ASID SAVE     @G383P9A */
        ü psadaxpa;
      ü psadcr4;
    ü psadexms;
  unsigned char  psarv6d8Ä216Ü;      /* -    RESERVED                         @G860PXK         */
  unsigned char  psadatlkÄ48Ü;       /* -    AREA FOR DAT-OFF ASSIST LINKAGE CODE              */
  void          *psadatof;           /* -         REAL STORAGE ADDRESS OF THE DAT-OFF          */
  int            psadatln;           /* -        LENGTH OF THE DAT-OFF INDEX TABLE             */
  union ä
    unsigned char  _psarv7e8Ä4Ü; /* -          RESERVED FOR SYSTEM TRACE.       @G860PXK */
    unsigned char  _psaff7e8Ä4Ü; /* INITIALIZE FIELD PSARV7E8     @ZMC3284               */
    ü _psa_union30;
  unsigned char  psatrace;           /* -      SYSTEM TRACE FLAGS.              @G860PXK       */
  unsigned char  psarv7edÄ3Ü;        /* -      RESERVED FOR SYSTEM TRACE.           @PJC       */
  void          *psatbvtr;           /* -         REAL ADDRESS OF SYSTEM TRACE BUFFER          */
  void          *psatbvtv;           /* -         VIRTUAL ADDRESS CORRESPONDING TO             */
  void          *psatrvt;            /* -  ADDRESS OF SYSTEM TRACE VECTOR                      */
  void          *psatot;             /* -  ADDRESS OF SYSTEM TRACE OPERAND                     */
  union ä
    struct ä
      double         _psaus2st;     /* START SECOND SET OF ASSIGNED     @G383PXU */
      unsigned char  _filler36Ä8Ü;
      ü _psa_struct30;
    struct ä
      int            _psacdsae; /* CALLDISP REGISTER 14 SAVE AREA   @G383PXU */
      int            _psacdsaf; /* CALLDISP REGISTER 15 SAVE AREA   @G383PXU */
      int            _psacdsa0; /* CALLDISP REGISTER 0  SAVE AREA   @G383PXU */
      int            _psacdsa1; /* CALLDISP REGISTER 1  SAVE AREA   @G383PXU */
      ü psacdsav;
    ü _psa_union31;
  int            psagspsw;           /* GLOBAL SCHEDULE SYSTEM MASK SAVE @ZA63674              */
  int            psagsrgs;           /* GLOBAL SCHEDULE REGISTER SAVE    @ZA63674              */
  unsigned char  psarv818Ä4Ü;        /* -     RESERVED                             @PAC        */
  int            psasv01r;           /* IEAVTRG1 register 1 save area.       @PAA              */
  int            psasv14r;           /* IEAVTRG1 register 14 save area.      @PAA              */
  int            psaems2r;           /* -        REGISTER SAVE AREA                            */
  struct ä
    int            _psatrgr0; /* -        TRACE REGISTER 0 SAVE AREA.      @G860PXH */
    int            _psatrgr1; /* -        TRACE REGISTER 1 SAVE AREA.      @G860PXH */
    int            _psatrgr2; /* -        TRACE REGISTER 2 SAVE AREA.      @G860PXH */
    int            _psatrgr3; /* -        TRACE REGISTER 3 SAVE AREA.      @G860PXH */
    int            _psatrgr4; /* -        TRACE REGISTER 4 SAVE AREA.      @G860PXH */
    int            _psatrgr5; /* -        TRACE REGISTER 5 SAVE AREA.      @G860PXH */
    int            _psatrgr6; /* -        TRACE REGISTER 6 SAVE AREA.      @G860PXH */
    int            _psatrgr7; /* -        TRACE REGISTER 7 SAVE AREA.      @G860PXH */
    int            _psatrgr8; /* -        TRACE REGISTER 8 SAVE AREA.      @G860PXH */
    int            _psatrgr9; /* -        TRACE REGISTER 9 SAVE AREA.      @G860PXH */
    int            _psatrgra; /* -        TRACE REGISTER 10 SAVE AREA.     @G860PXH */
    int            _psatrgrb; /* -        TRACE REGISTER 11 SAVE AREA.     @G860PXH */
    int            _psatrgrc; /* -        TRACE REGISTER 12 SAVE AREA.     @G860PXH */
    int            _psatrgrd; /* -        TRACE REGISTER 13 SAVE AREA.     @G860PXH */
    int            _psatrgre; /* -        TRACE REGISTER 14 SAVE AREA.     @G860PXH */
    int            _psatrgrf; /* -        TRACE REGISTER 15 SAVE AREA.     @G860PXH */
    ü psatrsav;
  unsigned char  psarv868Ä56Ü;       /* -     RESERVED.                            @09C        */
  unsigned char  psagsavhÄ8Ü;        /* -     Register save area used by           @09C        */
  union ä
    unsigned char  _psagsavÄ64Ü;  /* -         REGISTER SAVE AREA USED BY   */
    unsigned char  _psaff8a8Ä64Ü; /* INITIALIZE FIELD PSAGSAV      @ZMC3284 */
    ü _psa_union32;
  int            psascrg1;           /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */
  int            psascrg2;           /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */
  int            psagpregÄ3Ü;        /* -       REGISTER SAVE AREA FOR SVC FLIH                */
  int            psarsreg;           /* -        RESTART FLIH REGISTER SAVE       @G860PXK     */
  int            psapcgr8;           /* -        PROGRAM FLIH REGISTER 8 SAVE AREA             */
  int            psapcgr9;           /* -        PROGRAM FLIH REGISTER 9 SAVE AREA             */
  struct ä
    int            _psapcgra; /* -        PROGRAM FLIH REGISTER 10 SAVE AREA */
    int            _psapcgrb; /* -        PROGRAM FLIH REGISTER 11 SAVE AREA */
    ü psapcgab;
  struct ä
    int            _psalkr0;  /* -        IEAVELK REGISTER 0 SAVE AREA     @G860PXK */
    int            _psalkr1;  /* -        IEAVELK REGISTER 1 SAVE AREA     @G860PXK */
    int            _psalkr2;  /* -        IEAVELK REGISTER 2 SAVE AREA     @G860PXK */
    int            _psalkr3;  /* -        IEAVELK REGISTER 3 SAVE AREA     @G860PXK */
    int            _psalkr4;  /* -        IEAVELK REGISTER 4 SAVE AREA     @G860PXK */
    int            _psalkr5;  /* -        IEAVELK REGISTER 5 SAVE AREA     @G860PXK */
    int            _psalkr6;  /* -        IEAVELK REGISTER 6 SAVE AREA     @G860PXK */
    int            _psalkr7;  /* -        IEAVELK REGISTER 7 SAVE AREA     @G860PXK */
    int            _psalkr8;  /* -        IEAVELK REGISTER 8 SAVE AREA     @G860PXK */
    int            _psalkr9;  /* -        IEAVELK REGISTER 9 SAVE AREA     @G860PXK */
    int            _psalkr10; /* -        IEAVELK REGISTER 10 SAVE AREA    @G860PXK */
    int            _psalkr11; /* -        IEAVELK REGISTER 11 SAVE AREA    @G860PXK */
    int            _psalkr12; /* -        IEAVELK REGISTER 12 SAVE AREA    @G860PXK */
    int            _psalkr13; /* -        IEAVELK REGISTER 13 SAVE AREA    @G860PXK */
    int            _psalkr14; /* -        IEAVELK REGISTER 14 SAVE AREA    @G860PXK */
    int            _psalkr15; /* -        IEAVELK REGISTER 15 SAVE AREA    @G860PXK */
    ü psalksa;
  union ä
    unsigned char  _psaslsaÄ72Ü;  /* -         SINGLE LEVEL SAVE AREA USED BY DISABLED */
    unsigned char  _psaff950Ä72Ü; /* INITIALIZE FIELD PSASLSA       @ZMC3284           */
    ü _psa_union33;
  union ä
    unsigned char  _psajstsaÄ64Ü; /* -     SAVE AREA FOR JOB STEP TIMING        @H1A */
    unsigned char  _psaff998Ä64Ü; /* INITIALIZE FIELD PSAJSTSA         @H1A          */
    ü _psa_union34;
  union ä
    struct ä
      double         _psaus2nd;      /* END SECOND SET OF ASSIGNED           @H1M */
      unsigned char  _filler37Ä56Ü;
      ü _psa_struct31;
    struct ä
      int            _psaslkr0; /* -        IEAVESLK REGISTER 0 SAVE AREA        @P4A */
      int            _psaslkr1; /* -        IEAVESLK REGISTER 1 SAVE AREA        @P4A */
      int            _psaslkr2; /* -        IEAVESLK REGISTER 2 SAVE AREA        @P4A */
      int            _psaslkr3; /* -        IEAVESLK REGISTER 3 SAVE AREA        @P4A */
      int            _psaslkr4; /* -        IEAVESLK REGISTER 4 SAVE AREA        @P4A */
      int            _psaslkr5; /* -        IEAVESLK REGISTER 5 SAVE AREA        @P4A */
      int            _psaslkr6; /* -        IEAVESLK REGISTER 6 SAVE AREA        @P4A */
      int            _psaslkr7; /* -        IEAVESLK REGISTER 7 SAVE AREA        @P4A */
      int            _psaslkr8; /* -        IEAVESLK REGISTER 8 SAVE AREA        @P4A */
      int            _psaslkr9; /* -        IEAVESLK REGISTER 9 SAVE AREA        @P4A */
      int            _psaslkra; /* -        IEAVESLK REGISTER 10 SAVE AREA       @P4A */
      int            _psaslkrb; /* -        IEAVESLK REGISTER 11 SAVE AREA       @P4A */
      int            _psaslkrc; /* -        IEAVESLK REGISTER 12 SAVE AREA       @P4A */
      int            _psaslkrd; /* -        IEAVESLK REGISTER 13 SAVE AREA       @P4A */
      int            _psaslkre; /* -        IEAVESLK REGISTER 14 SAVE AREA       @P4A */
      int            _psaslkrf; /* -        IEAVESLK REGISTER 15 SAVE AREA       @P4A */
      ü psaslksa;
    ü _psa_union35;
  unsigned char  psarva18Ä36Ü;       /* -    RESERVED                             @P4A         */
  unsigned char  psascsavÄ64Ü;       /* IEAVESC0 save area                   @P7A              */
  unsigned char  psasflgs;           /* Schedule flags                       @P8A              */
  unsigned char  psamiscf;           /* Miscellaneous flags                  @LVA              */
  unsigned char  psarva7eÄ2Ü;        /* Reserved for future use - SC1C5      @LVC              */
  unsigned char  psarva80Ä188Ü;      /* -    RESERVED                             @P8C         */
  void          *psagsch7;           /* -  ENABLED GLOBAL SCHEDULE ENTRY                       */
  void          *psagsch8;           /* -  DISABLED GLOBAL SCHEDULE ENTRY                      */
  void          *psalsch1;           /* -  ENABLED SCHEDULE ENTRY POINT                        */
  void          *psalsch2;           /* -  DISABLED SCHEDULE ENTRY POINT                       */
  void          *psasvt;             /* -  ADDRESS OF SUPERVISOR VECTOR TABLE                  */
  void          *psasvtx;            /* Address of Supervisor Vector Table   @LNC              */
  unsigned char  psarvb54Ä44Ü;       /* -     Reserved                             @LNC        */
  unsigned char  psastakÄ1112Ü;      /* -   NORMAL FRR STACK                     @LVC          */
  unsigned char  psarvfd8Ä40Ü;       /* -    RESERVED FOR EXPANSION OF            @PJC         */
  double         psaend;             /* -           END OF PSA            (MDC612)   @G383P9A  */
  ü;

#define flcrnpsw                   _psa_union1.flcippsw._flcrnpsw
#define flceippsw                  _psa_union1.flcesame._flceippsw
#define flcropsw                   _psa_union2.flciccw1._flcropsw
#define flceiccw1                  _psa_union2._flceiccw1
#define flccvt                     _psa_union3.flciccw2._flccvt
#define flceiccw2                  _psa_union3._flceiccw2
#define flceopsw                   _psa_union4._psa_struct1._flceopsw
#define flcsopsw                   _psa_union4._psa_struct1._flcsopsw
#define flcpopsw                   _psa_union4._psa_struct1._flcpopsw
#define flcmopsw                   _psa_union4._psa_struct1._flcmopsw
#define flciopsw                   _psa_union4._psa_struct1._flciopsw
#define flccvt2                    _psa_union4._psa_struct1.flccvt64._flccvt2
#define flcenpsw                   _psa_union4._psa_struct1._flcenpsw
#define flcsnpsw                   _psa_union4._psa_struct1._flcsnpsw
#define flcpnpsw                   _psa_union4._psa_struct1._flcpnpsw
#define flcmnpsw                   _psa_union4._psa_struct1._flcmnpsw
#define flcinpsw                   _psa_union4._psa_struct1._flcinpsw
#define flcer018                   _psa_union4._flcer018
#define psaeparm                   _psa_union5._psaeparm
#define flceeparm                  _psa_union5._flceeparm
#define psaspad                    _psa_union6.psaeepsw._psaspad
#define flceicod                   _psa_union6.psaeepsw._flceicod
#define flcecpuad                  _psa_union6._psa_struct2._flcecpuad
#define flceeicode                 _psa_union6._psa_struct2._flceeicode
#define flcsvilc                   _psa_union7.psaespsw._flcsvilc
#define flcsvcn                    _psa_union7.psaespsw._flcsvcn
#define flcesdata                  _psa_union7._flcesdata
#define flcesdatabyte0             _psa_union7._psa_struct3._flcesdatabyte0
#define flcesilc                   _psa_union7._psa_struct4._flcesilc
#define flcesicode                 _psa_union7._psa_struct4._flcesicode
#define flcpiilc                   _psa_union8.psaeppsw._flcpiilc
#define psaeecod                   _psa_union8.psaeppsw.flcpicod._psaeecod
#define psapicod                   _psa_union8.psaeppsw.flcpicod._psapicod
#define flcteab3                   _psa_union8.psaeppsw.flctea.flcdxc._flcteab3
#define flcepdata                  _psa_union8._psa_struct5._flcepdata
#define flcepdatabyte0             _psa_union8._psa_struct6._flcepdatabyte0
#define flcepilc                   _psa_union8._psa_struct7._flcepilc
#define flcepicode                 _psa_union8._psa_struct7._flcepicode
#define flcepicode0                _psa_union8._psa_struct8._flcepicode0
#define flcepicode1                _psa_union8._psa_struct8._flcepicode1
#define flcepiinformation          _psa_union8._psa_struct8._flcepiinformation
#define flcedxc                    _psa_union8._psa_struct9._flcedxc
#define flcemcnum                  _psa_union9._flcemcnum
#define flcmcnum                   _psa_union9._psa_struct10._flcmcnum
#define flcpercd                   _psa_union10._psa_struct11._flcpercd
#define flcatmid                   _psa_union10._psa_struct11._flcatmid
#define flcepercode                _psa_union10._flcepercode
#define flcepercode0               _psa_union10._psa_struct12._flcepercode0
#define flceperatmid               _psa_union10._psa_struct12._flceperatmid
#define flcper                     _psa_union11._psa_struct13._flcper
#define flcmtrcd                   _psa_union11._psa_struct13._flcmtrcd
#define flceper                    _psa_union11._flceper
#define flceperw0                  _psa_union11._psa_struct14._flceperw0
#define flceperw1                  _psa_union11._psa_struct14._flceperw1
#define flctearn                   _psa_union12._flctearn
#define flceeaid                   _psa_union12._flceeaid
#define flcperrn                   _psa_union13._flcperrn
#define flceperaid                 _psa_union13._flceperaid
#define flcarch                    _psa_union14._flcarch
#define flceamdid                  _psa_union14._flceamdid
#define psampl                     _psa_union15._psampl
#define flcempl                    _psa_union15._flcempl
#define flceteid                   _psa_union16._flceteid
#define flcetea                    _psa_union16._flcetea
#define flcetea7                   _psa_union16._psa_struct15._flcetea7
#define flceteasninfo              _psa_union16._flceteasninfo
#define flceteasn                  _psa_union16._psa_struct16._flceteasn
#define flcetepcinfo               _psa_union16._flcetepcinfo
#define flcepcnum                  _psa_union16._psa_struct17._flcepcnum
#define flcsid                     _psa_union17.flciocdp._flcsid
#define flciofp                    _psa_union17.flciocdp._flciofp
#define flcessid                   _psa_union17._psa_struct18._flcessid
#define flceiointparm              _psa_union17._psa_struct18._flceiointparm
#define flcfacl0                   _psa_union18.flcfacl._flcfacl0
#define flcfacl1                   _psa_union18.flcfacl._flcfacl1
#define flcfacl2                   _psa_union18.flcfacl._flcfacl2
#define flcfacl3                   _psa_union18.flcfacl._flcfacl3
#define flcfacl4                   _psa_union18.flcfacl._flcfacl4
#define flcfacl5                   _psa_union18.flcfacl._flcfacl5
#define flcfacl6                   _psa_union18.flcfacl._flcfacl6
#define flcfacl7                   _psa_union18.flcfacl._flcfacl7
#define flcefacilitieslist         _psa_union18._flcefacilitieslist
#define flcefacilitieslistbyte0    _psa_union18._psa_struct19._flcefacilitieslistbyte0
#define flcefacilitieslistbyte1    _psa_union18._psa_struct19._flcefacilitieslistbyte1
#define flcefacilitieslistbyte2    _psa_union18._psa_struct19._flcefacilitieslistbyte2
#define flcefacilitieslistbyte3    _psa_union18._psa_struct19._flcefacilitieslistbyte3
#define flcefacilitieslistbyte4    _psa_union18._psa_struct19._flcefacilitieslistbyte4
#define flcefacilitieslistbyte5    _psa_union18._psa_struct19._flcefacilitieslistbyte5
#define flcefacilitieslistbyte6    _psa_union18._psa_struct19._flcefacilitieslistbyte6
#define flcefacilitieslistbyte7    _psa_union18._psa_struct19._flcefacilitieslistbyte7
#define flcefacilitieslistbyte8    _psa_union18._psa_struct19._flcefacilitieslistbyte8
#define flcefacilitieslistbyte9    _psa_union18._psa_struct19._flcefacilitieslistbyte9
#define flcefacilitieslistbytea    _psa_union18._psa_struct19._flcefacilitieslistbytea
#define flcefacilitieslistbyteb    _psa_union18._psa_struct19._flcefacilitieslistbyteb
#define flcefacilitieslistbytec    _psa_union18._psa_struct19._flcefacilitieslistbytec
#define flcefacilitieslistbyted    _psa_union18._psa_struct19._flcefacilitieslistbyted
#define flcefacilitieslistbytee    _psa_union18._psa_struct19._flcefacilitieslistbytee
#define flcefacilitieslistbytef    _psa_union18._psa_struct19._flcefacilitieslistbytef
#define flcctsa                    _psa_union19._psa_struct20._flcctsa
#define flcccsa                    _psa_union19._psa_struct20._flcccsa
#define flcer0d8                   _psa_union19._psa_struct21._flcer0d8
#define flcecpusignals             _psa_union19._psa_struct21._flcecpusignals
#define flcmcic                    _psa_union20._flcmcic
#define flcemcic                   _psa_union20._flcemcic
#define flcfsa                     _psa_union21._psa_struct22._flcfsa
#define flcefsa                    _psa_union21._flcefsa
#define flcfla                     _psa_union22._flcfla
#define flcer100                   _psa_union22._flcer100
#define flcrv110                   _psa_union23._flcrv110
#define flcebea                    _psa_union23._psa_struct23._flcebea
#define flcer118                   _psa_union23._psa_struct23._flcer118
#define flcarsav                   _psa_union24._flcarsav
#define flceropsw                  _psa_union24._psa_struct24._flceropsw
#define flceeopsw                  _psa_union24._psa_struct24._flceeopsw
#define flcesopsw                  _psa_union24._psa_struct24._flcesopsw
#define flcepopsw                  _psa_union24._psa_struct24._flcepopsw
#define flcfpsav                   _psa_union25._flcfpsav
#define flcemopsw                  _psa_union25._psa_struct25._flcemopsw
#define flceiopsw                  _psa_union25._psa_struct25._flceiopsw
#define flcgrsav                   _psa_union26._flcgrsav
#define flcer180                   _psa_union26._psa_struct26._flcer180
#define flcernpsw                  _psa_union26._psa_struct26._flcernpsw
#define flceenpsw                  _psa_union26._psa_struct26._flceenpsw
#define flccrsav                   _psa_union27._flccrsav
#define flcesnpsw                  _psa_union27._psa_struct27._flcesnpsw
#define flcepnpsw                  _psa_union27._psa_struct27._flcepnpsw
#define flcemnpsw                  _psa_union27._psa_struct27._flcemnpsw
#define flceinpsw                  _psa_union27._psa_struct27._flceinpsw
#define psapsa                     flchdend._psapsa
#define psacpupa                   flchdend._psacpupa
#define psacpula                   flchdend._psacpula
#define psasup1                    psasuper._psasup1
#define psasup2                    psasuper._psasup2
#define psasup3                    psasuper._psasup3
#define psasup4                    psasuper._psasup4
#define psaprocclass               _psa_union28._psaprocclass
#define psa_bylpar_procclass       _psa_union28._psa_bylpar_procclass
#define psaprocclass_byte0         _psa_union28._psa_struct28._psaprocclass_byte0
#define psaprocclass_byte1         _psa_union28._psa_struct28._psaprocclass_byte1
#define psa_bylpar_procclass_byte0 _psa_union28._psa_struct29._psa_bylpar_procclass_byte0
#define psa_bylpar_procclass_byte1 _psa_union28._psa_struct29._psa_bylpar_procclass_byte1
#define psadispl                   psaclht.psaclht1._psadispl
#define psaasml                    psaclht.psaclht1._psaasml
#define psasalcl                   psaclht.psaclht1._psasalcl
#define psaiossl                   psaclht.psaclht1._psaiossl
#define psarsmdl                   psaclht.psaclht1._psarsmdl
#define psaiosul                   psaclht.psaclht1._psaiosul
#define psarvlk1                   psaclht.psaclht1._psarvlk1
#define psarv29c                   psaclht.psaclht1._psarv29c
#define psarv2a0                   psaclht.psaclht1._psarv2a0
#define psatpacl                   psaclht.psaclht1._psatpacl
#define psaoptl                    psaclht.psaclht1._psaoptl
#define psarsmgl                   psaclht.psaclht1._psarsmgl
#define psavfixl                   psaclht.psaclht1._psavfixl
#define psaasmgl                   psaclht.psaclht1._psaasmgl
#define psarsmsl                   psaclht.psaclht1._psarsmsl
#define psarsmxl                   psaclht.psaclht1._psarsmxl
#define psarsmal                   psaclht.psaclht1._psarsmal
#define psavpagl                   psaclht.psaclht1._psavpagl
#define psarsmcl                   psaclht.psaclht1._psarsmcl
#define psarvlk2                   psaclht.psaclht1._psarvlk2
#define psarsml                    psaclht.psaclht2._psarsml
#define psatrcel                   psaclht.psaclht2._psatrcel
#define psaiosl                    psaclht.psaclht2._psaiosl
#define psarvlk4                   psaclht.psaclht2._psarvlk4
#define psacpul                    psaclht.psaclht3._psacpul
#define psarvlk5                   psaclht.psaclht3._psarvlk5
#define psacmsl                    psaclht.psaclht4._psacmsl
#define psalocal                   psaclht.psaclht4._psalocal
#define psarvlk6                   psaclht.psaclht4._psarvlk6
#define psaclhs1                   psahlhi.psaclhs._psaclhs1
#define psaclhs2                   psahlhi.psaclhs._psaclhs2
#define psaclhs3                   psahlhi.psaclhs._psaclhs3
#define psaclhs4                   psahlhi.psaclhs._psaclhs4
#define psacstk                    psarsvt.psarsvte._psacstk
#define psanstk                    psarsvt.psarsvte._psanstk
#define psasstk                    psarsvt.psarsvte._psasstk
#define psassav                    psarsvt.psarsvte._psassav
#define psamstk                    psarsvt.psarsvte._psamstk
#define psamsav                    psarsvt.psarsvte._psamsav
#define psapstk                    psarsvt.psarsvte._psapstk
#define psapsav                    psarsvt.psarsvte._psapsav
#define psaestk1                   psarsvt.psarsvte._psaestk1
#define psaesav1                   psarsvt.psarsvte._psaesav1
#define psaestk2                   psarsvt.psarsvte._psaestk2
#define psaesav2                   psarsvt.psarsvte._psaesav2
#define psaestk3                   psarsvt.psarsvte._psaestk3
#define psaesav3                   psarsvt.psarsvte._psaesav3
#define psarstk                    psarsvt.psarsvte._psarstk
#define psarsav                    psarsvt.psarsvte._psarsav
#define psapcfb1                   psapcfun._psapcfb1
#define psapcfb2                   psapcfun._psapcfb2
#define psapcfb3                   psapcfun._psapcfb3
#define psapcfb4                   psapcfun._psapcfb4
#define psamflgs                   psamodew._psamflgs
#define psamodeh                   psamodew._psamodeh
#define psamode                    psamodew._psamode
#define psafzero                   psadzero._psafzero
#define psalheb0                   psaclhse._psalheb0
#define psalheb1                   psaclhse._psalheb1
#define psalheb2                   psaclhse._psalheb2
#define psalheb3                   psaclhse._psalheb3
#define psatkn                     psastke._psatkn
#define psaasd                     psastke._psaasd
#define psasel                     psastke._psasel
#define psadtsav                   _psa_union29._psadtsav
#define psaff6c0                   _psa_union29._psaff6c0
#define psadsins                   psadexms.psadcr3._psadsins
#define psadpkm                    psadexms.psadcr3.psadpksa._psadpkm
#define psadsas                    psadexms.psadcr3.psadpksa._psadsas
#define psadpins                   psadexms.psadcr4._psadpins
#define psadax                     psadexms.psadcr4.psadaxpa._psadax
#define psadpas                    psadexms.psadcr4.psadaxpa._psadpas
#define psarv7e8                   _psa_union30._psarv7e8
#define psaff7e8                   _psa_union30._psaff7e8
#define psaus2st                   _psa_union31._psa_struct30._psaus2st
#define psacdsae                   _psa_union31.psacdsav._psacdsae
#define psacdsaf                   _psa_union31.psacdsav._psacdsaf
#define psacdsa0                   _psa_union31.psacdsav._psacdsa0
#define psacdsa1                   _psa_union31.psacdsav._psacdsa1
#define psatrgr0                   psatrsav._psatrgr0
#define psatrgr1                   psatrsav._psatrgr1
#define psatrgr2                   psatrsav._psatrgr2
#define psatrgr3                   psatrsav._psatrgr3
#define psatrgr4                   psatrsav._psatrgr4
#define psatrgr5                   psatrsav._psatrgr5
#define psatrgr6                   psatrsav._psatrgr6
#define psatrgr7                   psatrsav._psatrgr7
#define psatrgr8                   psatrsav._psatrgr8
#define psatrgr9                   psatrsav._psatrgr9
#define psatrgra                   psatrsav._psatrgra
#define psatrgrb                   psatrsav._psatrgrb
#define psatrgrc                   psatrsav._psatrgrc
#define psatrgrd                   psatrsav._psatrgrd
#define psatrgre                   psatrsav._psatrgre
#define psatrgrf                   psatrsav._psatrgrf
#define psagsav                    _psa_union32._psagsav
#define psaff8a8                   _psa_union32._psaff8a8
#define psapcgra                   psapcgab._psapcgra
#define psapcgrb                   psapcgab._psapcgrb
#define psalkr0                    psalksa._psalkr0
#define psalkr1                    psalksa._psalkr1
#define psalkr2                    psalksa._psalkr2
#define psalkr3                    psalksa._psalkr3
#define psalkr4                    psalksa._psalkr4
#define psalkr5                    psalksa._psalkr5
#define psalkr6                    psalksa._psalkr6
#define psalkr7                    psalksa._psalkr7
#define psalkr8                    psalksa._psalkr8
#define psalkr9                    psalksa._psalkr9
#define psalkr10                   psalksa._psalkr10
#define psalkr11                   psalksa._psalkr11
#define psalkr12                   psalksa._psalkr12
#define psalkr13                   psalksa._psalkr13
#define psalkr14                   psalksa._psalkr14
#define psalkr15                   psalksa._psalkr15
#define psaslsa                    _psa_union33._psaslsa
#define psaff950                   _psa_union33._psaff950
#define psajstsa                   _psa_union34._psajstsa
#define psaff998                   _psa_union34._psaff998
#define psaus2nd                   _psa_union35._psa_struct31._psaus2nd
#define psaslkr0                   _psa_union35.psaslksa._psaslkr0
#define psaslkr1                   _psa_union35.psaslksa._psaslkr1
#define psaslkr2                   _psa_union35.psaslksa._psaslkr2
#define psaslkr3                   _psa_union35.psaslksa._psaslkr3
#define psaslkr4                   _psa_union35.psaslksa._psaslkr4
#define psaslkr5                   _psa_union35.psaslksa._psaslkr5
#define psaslkr6                   _psa_union35.psaslksa._psaslkr6
#define psaslkr7                   _psa_union35.psaslksa._psaslkr7
#define psaslkr8                   _psa_union35.psaslksa._psaslkr8
#define psaslkr9                   _psa_union35.psaslksa._psaslkr9
#define psaslkra                   _psa_union35.psaslksa._psaslkra
#define psaslkrb                   _psa_union35.psaslksa._psaslkrb
#define psaslkrc                   _psa_union35.psaslksa._psaslkrc
#define psaslkrd                   _psa_union35.psaslksa._psaslkrd
#define psaslkre                   _psa_union35.psaslksa._psaslkre
#define psaslkrf                   _psa_union35.psaslksa._psaslkrf

/* Values for field "flcsvilc" */
#define flcsilcb                        0x07       /* -        SIGNIFICANT BITS IN ILC FIELD - LAST      */

/* Values for field "flcesilc" */
#define flcesilcb                       0x07       /* FLCE 89x: Significant bits in ILC. Last bit        */

/* Values for field "flcpiilc" */
#define flcpilcb                        0x07       /* -        SIGNIFICANT BITS IN ILC FIELD - LAST      */

/* Values for field "psapicod" */
#define psapiper                        0x80       /* -        PER INTERRUPT OCCURRED             MDC089 */
#define psapimc                         0x40       /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090 */
#define psapipc                         0x3F       /* -        AN UNSOLICITED PROGRAM CHECK HAS          */

/* Values for field "_filler16" */
#define flcteaxm                        0x80       /* -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY      */

/* Values for field "flcteab3" */
#define flcsopi                         0x04       /* -      Suppression on protection flag       @LQA   */
#define flctstdp                        0x00       /* -      IF 1, THE PRIMARY STD WAS USED.      @L8A   */
#define flctstda                        0x01       /* -      IF 1, THE STD WAS AR QUALIFIED.      @L8A   */
#define flctstds                        0x02       /* -      IF 1, THE SECONDARY STD WAS USED.    @L8A   */
#define flctstdh                        0x03       /* -      IF 1, THE HOME STD WAS USED.         @L8A   */
#define flcteacl                        0x7FFFF000 /* Mask to leave only TEA address       @LSA          */

/* Values for field "flcepilc" */
#define flcepilcb                       0x07       /* FLCE 8Dx: Significant bits in ILC. Last bit        */

/* Values for field "flcepicode1" */
#define flcepiper                       0x80       /* FLCE 8Fx: PER interruption code                    */
#define flcepimc                        0x40       /* FLCE 8Fx: Monitor Call interruption code           */
#define flcepipc                        0x3F       /* FLCE 8Fx: An unsolicited program interruption      */

/* Values for field "flcatmid" */
#define flcpswb4                        0x80       /* PSW.4 part of ATMID                  @LSA          */

/* Values for field "flcepercode0" */
#define flcepersb                       0x80       /* FLCE 96x: PER successful branch event              */
#define flceperif                       0x40       /* FLCE 96x: PER instruction fetch event              */
#define flcepersa                       0x20       /* FLCE 96x: PER storage alteration event             */
#define flcepersar                      0x08       /* FLCE 96x: PER storage alteration using real        */

/* Values for field "flceperatmid" */
#define flceperpsw4                     0x80       /* FLCE 97x: PER PSW bit 4                            */
#define flceperatmidvalid               0x40       /* FLCE 97x: When 1, the ATMID bits are valid         */
#define flceperpsw32                    0x20       /* FLCE 97x: PER PSW bit 32                           */
#define flceperpsw5                     0x10       /* FLCE 97x: PER PSW bit 5                            */
#define flceperpsw16                    0x08       /* FLCE 97x: PER PSW bit 16                           */
#define flceperpsw17                    0x04       /* FLCE 97x: PER PSW bit 17                           */
#define flceperasceid                   0x03       /* FLCE 97x: PER ASCE identification. If a            */

/* Values for field "flceeaid" */
#define flceeaid0                       0x80       /* Bit 0 of EAID. Zero                                */
#define flceeaid1                       0x40       /* Bit 1 of EAID. Zero                                */
#define flceeaid2                       0x20       /* Bit 2 of EAID. Set only when PIC 2C for PTI        */
#define flceeaid3                       0x10       /* Bit 3 of EAID. Set only when PIC 2C for SSAIR      */
#define flceeaid_arnum                  0x0F       /* AR number. Zero when Bit 1 or Bit 2 is set         */

/* Values for field "flcarch" */
#define psazarch                        0x01       /* -      z/Architecture                       @LSA   */
#define psaesame                        0x01       /* -      z/Architecture                       @LSA   */

/* Values for field "flceamdid" */
#define flceloeme                       0x01       /* Logout is Z/Architecture                           */

/* Values for field "flcetea7" */
#define flcepealc                       0x08       /* FLCE AFx: Protection exception due to              */
#define flcesopi                        0x04       /* FLCE AFx: Suppress on protection indication        */
#define flceteastd                      0x03       /* FLCE AFx: Segment table designation for TEA:       */

/* Values for field "flcfacl0" */
#define flcfn3                          0x80       /* -     N3 installed                         @LVA    */
#define flcfzari                        0x40       /* -     z/Architecture installed             @LVA    */
#define flcfzara                        0x20       /* -     z/Architecture active                @LVA    */
#define flcfaslx                        0x02       /* -     ASN & LX reuse facility installed    @LVA    */

/* Values for field "flcfacl1" */
#define flcfsrs                         0x40       /* Sense-running-status                 @LZA          */
#define flcfsske                        0x20       /* Cond. SSKE instruction installed     @0AA          */
#define flcfctop                        0x10       /* STSI-enhancement                     @LYA          */

/* Values for field "flcfacl2" */
#define flcfetf2                        0x80       /* Extended Translation facility 2      @LVA          */
#define flcfcrya                        0x40       /* Cryptographic assist                 @LVA          */
#define flcfld                          0x20       /* Long Displacement facility           @LVA          */
#define flcfldhp                        0x10       /* Long Displacement High Performance   @LVA          */
#define flcfhmas                        0x08       /* HFP Multiply Add/Subtract            @LVA          */
#define flcfeimm                        0x04       /* Extended immediate when z/Arch       @LVA          */
#define flcfetf3                        0x02       /* Extended Translation Facility 3 when @LVA          */
#define flcfhun                         0x01       /* HFP unnormalized extension           @LVA          */

/* Values for field "flcfacl3" */
#define flcfet2e                        0x80       /* ETF2-enhancement                   031215          */
#define flcfstkf                        0x40       /* STCKF-enhancement                    @PIA          */
#define flcfet3e                        0x02       /* ETF3-enhancement                   040512          */
#define flcfect                         0x01       /* ECT-facility                         @LXA          */

/* Values for field "flcfacl4" */
#define flcfcssf                        0x80       /* Compare-and-swap-and-store           @LXA          */
#define flcfcsf2                        0x40       /* Compare-and-swap-and-store 2         @LXA          */

/* Values for field "flcefacilitieslistbyte0" */
#define flcezarchn3                     0x80       /* Instructions marked "N3" in the instruction        */
#define flceesamen3                     0x80       /* Instructions marked "N3" in the instruction        */
#define flcezarchinstalled              0x40       /* The z/Architecture mode is installed on            */
#define flceesameinstalled              0x40       /* The z/Architecture mode is installed on            */
#define flcezarch                       0x20       /* The z/Architecture mode is active on the CPU       */
#define flceesame                       0x20       /* The z/Architecture mode is active on the CPU       */
#define flceidteinstalled               0x10       /* IDTE is installed                                  */
#define flceidteclearingcombinedsegment 0x08       /* IDTE does clearing of                              */
#define flceidteclearingcombinedregion  0x04       /* IDTE does clearing of                              */
#define flceasnandlxreuseinstalled      0x02       /* The ASN and LX reuse facility is                   */
#define flcestfle                       0x01       /* STFLE instruction is available                     */

/* Values for field "flcefacilitieslistbyte1" */
#define flcesenserunningstatus          0x40       /* sense-running-status facility                      */
#define flcecondsskeinstalled           0x20       /* The conditional SSKE instruction is                */
#define flceconfigurationtopology       0x10       /* STSI-enhancement for configuration                 */

/* Values for field "flcefacilitieslistbyte2" */
#define flceetf2                        0x80       /* Extended translation facility 2 is present         */
#define flcecryptoassist                0x40       /* The cryptographic assist is present                */
#define flcemessagesecurityassist       0x40       /* The message security assist is                     */
#define flcelongdisplacement            0x20       /* The long displacement facility is                  */
#define flcelongdisplacementhp          0x10       /* The long displacement facility has                 */
#define flcehfpmas                      0x08       /* The HFP Multiply add/subtract facility is          */
#define flceextendedimmediate           0x04       /* The extended immediate facility is                 */
#define flceetf3                        0x02       /* The extended translaction facility 3 is            */
#define flcehfpunnormextension          0x01       /* The HFP unnormalized extension                     */

/* Values for field "flcefacilitieslistbyte3" */
#define flceetf2e                       0x80       /* ETF2 enhancement is present 031215                 */
#define flcestckf                       0x40       /* STCKF enhancement is present                       */
#define flceetf3e                       0x02       /* ETF3 enhancement is present 040512                 */
#define flceectf                        0x01       /* Extract Cpu Time facility                          */

/* Values for field "flcefacilitieslistbyte4" */
#define flcecssf                        0x80       /* Compare-and-swap-and-store facility                */
#define flcecssf2                       0x40       /* Compare-and-swap-and-store facility 2              */

/* Values for field "flcecpusignals" */
#define flcewarningtrack                0x80       /* Warning track has occurred                         */

/* Values for field "flceinpsw" */
#define flcesame_len                    0x200
#define bit0                            0x80
#define bit1                            0x40
#define bit2                            0x20
#define bit3                            0x10
#define bit4                            0x08
#define bit5                            0x04
#define bit6                            0x02
#define bit7                            0x01

/* Values for field "psasup1" */
#define psaio                           0x80       /* -        I/O FLIH                                  */
#define psasvc                          0x40       /* -        SVC FLIH                                  */
#define psaext                          0x20       /* -        EXTERNAL FLIH                             */
#define psapi                           0x10       /* -        PROGRAM CHECK FLIH                        */
#define psalock                         0x08       /* -        LOCK ROUTINE                              */
#define psadisp                         0x04       /* -        DISPATCHER                                */
#define psatctl                         0x02       /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A */
#define psatype6                        0x01       /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A */

/* Values for field "psasup2" */
#define psaipcri                        0x80       /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE   */
#define psasvcr                         0x40       /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227 */
#define psasvcrr                        0x20       /* -        SVC RECOVERY RECURSION INDICATOR.         */
#define psaacr                          0x04       /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN    */
#define psartm                          0x02       /* -        RECOVERY TERMINATION MONITOR (RTM) IN     */
#define psalcr                          0x01       /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C */

/* Values for field "psasup3" */
#define psaiosup                        0x80       /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS   */
#define psaspr                          0x10       /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995 */
#define psaesta                         0x08       /* -        SVC 60 RECOVERY ROUTINE ACTIVE            */
#define psarsm                          0x04       /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR    */
#define psaulcms                        0x02       /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR       */
#define psaslip                         0x01       /* -        IEAVTSLP RECURSION CONTROL BIT            */

/* Values for field "psasup4" */
#define psaldwt                         0x80       /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC */
#define psasmf                          0x40       /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB */
#define psaesar                         0x20       /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C */
#define psamch                          0x10       /* -        Machine Check Handler is active.     @PKA */

/* Values for field "psaprocclass_byte1" */
#define psaprocclass_cp                 0x00       /* Standard CP. 0 is offset to SWUQ     @H4A          */
#define psaprocclass_zaap               0x02       /* zAAP.                                @H4A          */
#define psaprocclass_ziip               0x04       /* zIIP.                                @H5A          */
#define psaprocclass_sup                0x04       /* zIIP.                                @H4A          */

/* Values for field "psaptype" */
#define psaifa                          0x40       /* Indicates Special Processor          @H3C          */
#define psa_bylpar_zaap                 0x40       /* @H5A                                               */
#define psa_bylpar_ifa                  0x40       /* @H5A                                               */
#define psaifads                        0x20       /* zAAP (IFA) that is different                       */
#define psadscrp                        0x10       /* Discretionary Processor              @LYA          */
#define psaziip                         0x08       /* zIIP                                 @H4A          */
#define psa_bylpar_ziip                 0x08       /* @H5A                                               */
#define psasup                          0x08       /* zIIP                                 @H4A          */
#define psa_bylpar_sup                  0x08       /* @H5A                                               */
#define psaziipds                       0x04       /* zIIP that is different speed than CP @H4A          */
#define psasupds                        0x04       /* zIIP that is different speed than CP @H4A          */

/* Values for field "psails" */
#define psailsio                        0x80       /* -      THE I/O FLIH IS USING THE            @L9A   */
#define psailsex                        0x40       /* -      THE EXTERNAL FLIH IS USING THE       @L9A   */
#define psailspc                        0x20       /* -      THE PROGRAM FLIH IS USING THE        @L9A   */
#define psailsds                        0x10       /* -      THE DISPATCHER IS USING THE          @L9A   */
#define psailsrs                        0x08       /* -      THE RESTART FLIH IS USING THE        @L9A   */
#define psailsor                        0x04       /* -      EXIT IS USING THE INTERRUPT HANDLER  @LAA   */
#define psailst6                        0x02       /* -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A   */
#define psailslk                        0x01       /* -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A   */

/* Values for field "psaflags" */
#define psaaeit                         0x80       /* -      ADDRESSING ENVIRONMENT IS IN         @LOA   */
#define psafpac                         0x40       /* FP simulation is active on this CPU. @08A          */
#define psafppe                         0x20       /* Program-interrupt expected (i.e.,                  */

/* Values for field "psascaff" */
#define psaemema                        0x80       /* $$SCAFFOLD: z/Architecture                         */

/* Values for field "psampsw" */
#define psapiom                         0x02       /* INPUT/OUTPUT INTERRUPT MASK      @G860PXK          */
#define psapexm                         0x01       /* EXTERNAL INTERRUPT MASK          @G860PXK          */

/* Values for field "psarsmcl" */
#define psalks1                         0x13       /* COUNT OF LOCKS IN CLHT1          @G860PXK          */

/* Values for field "psarsml" */
#define psarsmex                        0x80       /* -        BIT 0 OF PSARSML. IF ON, THE RSM          */

/* Values for field "psatrcel" */
#define psatrcex                        0x80       /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE        */

/* Values for field "psaiosl" */
#define psaiosex                        0x80       /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A */
#define psalks2                         0x03       /* COUNT OF LOCKS IN CLHT2              @D3C          */

/* Values for field "psacpul" */
#define psalks3                         0x01       /* COUNT OF LOCKS IN CLHT3          @G860PXH          */

/* Values for field "psalocal" */
#define psalks4                         0x02       /* COUNT OF LOCKS IN CLHT4          @G860PXH          */

/* Values for field "psaclhs1" */
#define psacpuli                        0x80       /* -        CPU LOCK INDICATOR               @G860PXH */
#define psasum                          0x10       /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA */
#define psarsmli                        0x08       /* -        RSM LOCK INDICATOR               @G860PXH */
#define psatrcei                        0x04       /* -        TRACE LOCK INDICATOR             @G860PXH */
#define psaiosi                         0x02       /* -        IOS LOCK INDICATOR                   @D3A */

/* Values for field "psaclhs2" */
#define psarsmci                        0x10       /* -        RSM COMMON LOCK INDICATOR        @G860PXK */
#define psarsmgi                        0x08       /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH */
#define psavfixi                        0x04       /* -        VSM FIX LOCK INDICATOR           @G860PXH */
#define psaasmgi                        0x02       /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH */
#define psarsmsi                        0x01       /* -        RSM STEAL LOCK INDICATOR         @G860PXH */

/* Values for field "psaclhs3" */
#define psarsmxi                        0x80       /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH */
#define psarsmai                        0x40       /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH */
#define psavpagi                        0x20       /* -        VSM PAGE LOCK INDICATOR          @G860PXH */
#define psadspli                        0x10       /* -        DISPATCHER LOCK INDICATOR                 */
#define psaasmli                        0x08       /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A */
#define psasalli                        0x04       /* -        SPACE ALLOCATION LOCK INDICATOR           */
#define psaiosli                        0x02       /* -        IOS SYNCHRONIZATION LOCK INDICATOR        */
#define psarsmdi                        0x01       /* -        RSM DATA SPACE LOCK INDICATOR        @LBA */

/* Values for field "psaclhs4" */
#define psaiouli                        0x80       /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A */
#define psatpali                        0x08       /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A */
#define psasrmli                        0x04       /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK        */
#define psacmsli                        0x02       /* -        CROSS MEMORY SERVICES LOCK INDICATOR      */
#define psalclli                        0x01       /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A */

/* Values for field "psainte" */
#define psanuin                         0x80       /* -        CPU TIMER CANNOT BE USED                  */

/* Values for field "psapcfb1" */
#define psapcmc                         0x01       /* -        MC INTERRUPT      (MDC605)       @G383P9A */
#define psapcpf                         0x02       /* -        PAGE FAULT                       @G383P9A */
#define psapcps                         0x03       /* -        PER/SPACE SWITCH INTERRUPT       @G383PXU */
#define psapcad                         0x04       /* -        ADDRESSING EXCEPTION  (MDC488)   @G383P9A */
#define psapctr                         0x05       /* -        TRANSLATION EXCEPTION  (MDC489)  @G383P9A */
#define psapcpc                         0x06       /* -        PROGRAM CHECK  (MDC490)          @G383P9A */
#define psapctrc                        0x07       /* -        TRACE INTERRUPT                  @G860PXK */
#define psapcaf                         0x08       /* -        NEW VALUE FOR PROGRAM INTERRUPT      @03A */
#define psapcls                         0x09       /* -        LINKAGE STACK INTERRUPT FUNCTION     @L8A */
#define psapcart                        0x0A       /* -        ACCESS REGISTER TRANSLATION          @L8A */
#define psapcdpf                        0x0B       /* -        DISABLED PAGE/SEGMENT FAULT          @LCA */
#define psapcdar                        0x0C       /* -        DISABLED ART PIC X'2B' FUNCTION      @LCA */
#define psapcprt                        0x0D       /* -        Protection exception function value  @LQA */
#define psapcmax                        0x0D       /* -        MAXIMUM VALID FUNCTION VALUE         @LQC */

/* Values for field "psapcfb2" */
#define psapctrr                        0x80       /* -        TRACE INTERRUPT RECURSION        @YA01102 */
#define psapcmt                         0x40       /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A */

/* Values for field "psapcfb3" */
#define psapcp1                         0x80       /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A */
#define psapcp2                         0x40       /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A */
#define psapcde                         0x20       /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A */
#define psapclv                         0x10       /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A */
#define psapcp3                         0x08       /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A */
#define psapcp4                         0x04       /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A */
#define psapcpfr                        0x02       /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA */
#define psapcavr                        0x01       /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA */

/* Values for field "psapcfb4" */
#define psapcdnv                        0x80       /* -        DUCT validity indicator              @PBA */
#define psapclsr                        0x40       /* -        IEAVLSIH has invoked IARPTEPR and    @PEA */

/* Values for field "psamflgs" */
#define psanss                          0x80       /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A */
#define psaprsrb                        0x40       /* -        Preemptable-class SRB                @LPA */

/* Values for field "psamode" */
#define psataskm                        0x00       /* -        TASK MODE VALUE  (MDC338)        @G50DP9A */
#define psasrbm                         0x04       /* -        SRB MODE VALUE  (MDC339)         @G50DP9A */
#define psawaitm                        0x08       /* -        WAIT MODE VALUE  (MDC340)        @G50DP9A */
#define psadispm                        0x10       /* -        DISPATCHER MODE VALUE  (MDC342)  @G50DP9A */
#define psapsrbm                        0x20       /* -        PSEUDO SRB MODE FLAG BIT.  THIS BIT MAY   */

/* Values for field "psalheb0" */
#define psablsdi                        0x80       /* -        BMFLSD LOCK INDICATOR.               @LGA */
#define psaxdsi                         0x40       /* -        XCFDS LOCK INDICATOR.                @LEA */
#define psaxresi                        0x20       /* -        XCFRES LOCK INDICATOR.               @LEA */
#define psaxqi                          0x10       /* -        XCFQ LOCK INDICATOR.                 @LEA */
#define psaeseti                        0x08       /* -        ETRSET LOCK INDICATOR.               @LFA */
#define psaixsci                        0x04       /* -        IXLSCH LOCK INDICATOR.               @LMC */
#define psaixshi                        0x02       /* -        IXLSHR LOCK INDICATOR.               @LMC */
#define psaixdsi                        0x01       /* -        IXLDS LOCK INDICATOR.                @LLA */

/* Values for field "psalheb1" */
#define psaixlli                        0x80       /* -        IXLSHELL LOCK INDICATOR.             @LMC */
#define psauluti                        0x40       /* -        IOSULUT LOCK INDICATOR.              @LJA */
#define psaixlri                        0x20       /* -        IXLREQST LOCK INDICATOR.             @05A */
#define psawlmri                        0x10       /* -        WLMRES LOCK INDICATOR                @LRA */
#define psawlmqi                        0x08       /* -        WLMQ LOCK INDICATOR.                 @LRA */
#define psacntxi                        0x04       /* -        CONTEXT LOCK INDICATOR               @LRA */
#define psaregsi                        0x02       /* -        REGSRV LOCK INDICATOR.               @LRA */
#define psassdli                        0x01       /* -        SSD LOCK INDICATOR.                  @LTA */

/* Values for field "psacr0cb" */
#define psaenabl                        0x10       /* -        TO ENABLE PSA PROTECTION                  */
#define psadsabl                        0x00       /* -        TO DISABLE PSA PROTECTION                 */

/* Values for field "psacr0sv" */
#define psacr0en                        0x10       /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA    */
#define psacr0al                        0x08       /* -        IF 1, ASN & LX Reuse facility is          */
#define psacr0fp                        0x04       /* -        IF 1, extended floating point is          */
#define psacr0vi                        0x02       /* -        IF 1, vector instructions are             */

/* Values for field "psarcr0" */
#define psarpen                         0x10       /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA    */

/* Values for field "psascfb" */
#define psaiopr                         0x80       /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A */
#define psaiorty                        0x40       /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A */

/* Values for field "psatrace" */
#define psatroff                        0x80       /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS     */

/* Values for field "psasflgs" */
#define psaschda                        0x80       /* Schedule is active                   @LPA          */
#define psamcha                         0x40       /* Machine Check is active              @06A          */
#define psarsta                         0x20       /* Restart is active                    @06A          */
#define psaegra                         0x10       /* Global Recovery is active            @06A          */
#define psartma                         0x08       /* Selected RTM functions are active    @06A          */

/* Values for field "psamiscf" */
#define psaalr                          0x80       /* Equivalent to CVTALR                 @LVA          */

#pragma pack(reset)
