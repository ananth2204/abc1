#pragma pack(packed)

struct cdentry ä
  int            cdchain;   /* -            Address of next CDE in queue (either JPAQ */
  int            cdrrbp;    /* -            If the module is REENTERABLE, this field  */
  unsigned char  cdnameÄ8Ü; /* -          8-byte name                                 */
  union ä
    int            _cdentpt; /* -            Module's relocated Entry Point address */
    struct ä
      unsigned char  _filler1Ä3Ü;  /* Bytes 0-2 of CDENTPT                 @L8A */
      unsigned char  _cdentpt3;    /* Byte 3 of CDENTPT                    @L8A */
      ü _cdentry_struct1;
    ü _cdentry_union1;
  int            cdxlmjp;   /* -            Extent list address or Major CDE address  */
  short int      cduse;     /* -            Value contains the total module use       */
  unsigned char  cdattrb;   /* -            Flag byte                        @G860P35 */
  unsigned char  cdsp;      /* Module SUBPOOL ID                @G381P2A              */
  unsigned char  cdattr;    /* -            Attribute flags                           */
  unsigned char  cdattr2;   /* -            Second attribute field                    */
  unsigned char  cdattr3;   /* -            3rd attribute field                  @L3C */
  unsigned char  cdattr4;   /* -            RESERVED                             @L3A */
  ü;

#define cdentpt  _cdentry_union1._cdentpt
#define cdentpt3 _cdentry_union1._cdentry_struct1._cdentpt3

/* Values for field "cdentpt" */
#define cdemode  0x80 /* Routine runs in 31 bit mode      @G860P35          */

/* Values for field "cdentpt3" */
#define cdemod64 0x01 /* Routine runs in 64 bit mode          @L8A          */

/* Values for field "cdattrb" */
#define cdeom    0x80 /* -        ON=Delete module at memory termination    */
#define cdidenty 0x40 /* -        ON = CDE built by IDENTIFY  @02C @ZA47842 */
#define cdracdty 0x20 /* -        ON = MODULE WAS LOADED BY 'DIRTY' TASK    */
#define cdcdex   0x10 /* -        ON = CDE extension exists            @L2A */
#define cdelpde  0x08 /* -        OFF=CDE, ON=LPDE (Used to distinguish a   */
#define cdglobal 0x04 /* -        ON = Module LOADED to GLOBAL         @L1A */
#define cdcontmn 0x02 /* -        ON = Module is contaminated. A module is  */
#define cdracf   0x01 /* -        Used by external security manager.        */

/* Values for field "cdattr" */
#define cdnip    0x80 /* -        Module loaded by NIP or FLPA/MLPA         */
#define cdnic    0x40 /* -        Module is in process of being loaded      */
#define cdren    0x20 /* -        Module is REENTERABLE                     */
#define cdser    0x10 /* -        Module is SERIALLY REUSABLE               */
#define cdnfn    0x08 /* -        Module is NOT REUSABLE (NON-FUNCTIONAL)   */
#define cdmin    0x04 /* -        This is a MINOR CDE                       */
#define cdjpa    0x02 /* -        Module is in JOB PACK AREA                */
#define cdnlr    0x01 /* -        Module is NOT LOADABLE-ONLY               */

/* Values for field "cdattr2" */
#define cdspz    0x80 /* -        Module is in SUBPOOL ZERO                 */
#define cdrel    0x40 /* -        Module is INACTIVE and MAY BE RELEASED    */
#define cdxle    0x20 /* -        EXTENT LIST has been built for module.    */
#define cdrlc    0x10 /* -        This CDE contains a MINOR ENTRY POINT     */
#define cdeanym  0x08 /* Routine runs in ANY mode         @G860P35          */
#define cdoly    0x04 /* -        Module is in OVERLAY format        A27026 */
#define cdsyslib 0x02 /* -        AUTHORIZED LIBRARY module                 */
#define cdauth   0x01 /* -        PROGRAM AUTHORIZATION FLAG         ICB360 */

/* Values for field "cdattr3" */
#define cdpathn  0x80 /* -        ON = The module represented by this CDE   */
#define cdpml    0x40 /* -        OFF = PML was not complete when module    */
#define cdesplit 0x20 /* -        Split RMODE program object           @L5A */
#define cdsyshlb 0x10 /* -        HFS System Shared Library Module     @L7A */
#define cdertls  0x08 /* -        RTLS                                 @L5A */
#define cdedylpa 0x04 /* -        Dynamic LPA. Only on for CDE on active    */
#define cdeprotp 0x02 /* -        Only whole pages are page-protected, as   */

#pragma pack(reset)
