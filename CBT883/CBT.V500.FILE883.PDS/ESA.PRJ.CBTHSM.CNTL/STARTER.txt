//HSMALLOC JOB ,&SYSUID,NOTIFY=&SYSUID,
//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),
//    REGION=0M
//DEFOUT OUTPUT CLASS=X,JESDS=LOG
//VM     OUTPUT DEST=IBCRSSC1.MVSPRTSP,CLASS=C
//*
//********************************************************************/
//* DFSMSHSM STARTER SET                                             */
//*                                                                  */
//* THIS JCL STREAM ESTABLISHES AN OPERATING DFSMSHSM ENVIRONMENT    */
//* FOR A NEW USER OF DFSMSHSM OPERATING IN AN SMS ENVIRONMENT, OR   */
//* FOR A USER WHO WANTS TO RUN THE FUNCTIONAL VERIFICATION          */
//* PROCEDURE (FVP) IN AN ENVIRONMENT THAT IS SEPARATE FROM THE      */
//* PRODUCTION ENVIRONMENT.  THE FVP IS FOUND IN ARCFVPST.           */
//*                                                                  */
//* EDIT THIS JCL FOR YOUR PROCESSING ENVIRONMENT.                   */
//*                                                                  */
//* YOU CAN DECREASE IMPLEMENTATION TIME BY MAKING GLOBAL CHANGES    */
//* TO THE FOLLOWING PARAMETERS.  YOU MAY HAVE TO MAKE OTHER CHANGES */
//* AS IDENTIFIED IN THE COMMENTS EMBEDDED IN THE JCL.               */
//*                                                                  */
//* IF YOU ALLOCATED SMS-MANAGED DATA SETS ON SPECIFIC VOLUMES,      */
//* ENSURE THAT YOU ASSOCIATE THOSE DATA SETS WITH THE GUARANTEED    */
//* SPACE ATTRIBUTE IN THEIR STORAGE CLASS DEFINITION.               */
//*                                                                  */
//* WE RECOMMEND THAT YOU DEFINE ALL DFSMSHSM DATA SETS WITH THE     */
//* GUARANTEED-SPACE ATTRIBUTE IN THEIR STORAGE CLASS DEFINITIONS.   */
//*                                                                  */
//* WE RECOMMENDED THAT YOU DEFINE ALL DFSMSHSM DATA SETS WITH THE   */
//* NO-MIGRATE AND NO-BACKUP ATTRIBUTES IN THEIR MANAGEMENT CLASS    */
//* DEFINITIONS.  YOU CAN PREVENT DFSMSHSM DATA SETS FROM MIGRATING  */
//* OR BEING BACKED UP BY ASSIGNING THEM TO THE DBSTNDRD MANAGEMENT  */
//* CLASS.                                                           */
//*                                                                  */
//* WE RECOMMEND THAT YOU DEFINE THE LOG AND JOURNAL DATA SETS WITH  */
//* A STORAGE CLASS DEFINITION FOR LOGGING OR FOR AUDIT TRAIL DATA   */
//* SETS BY DEFINING THEM WITH THE STORAGE CLASS DBLOG.              */
//*                                                                  */
//* WE RECOMMEND THAT YOU DEFINE THE DFSMSHSM CONTROL DATA SETS WITH */
//* A STORAGE CLASS DEFINITION THAT PROVIDES FAST RESPONSE BY        */
//* DEFINING THEM WITH THE STORAGE CLASS DBENHANC.                   */
//*                                                                  */
//* THE SMS CONSTRUCTS (STORAGE CLASSES, STORAGE GROUPS, MANAGEMENT  */
//* CLASSES, AND DATA CLASSES) ARE DISCUSSED IN THE STORAGE          */
//* ADMINISTRATION GUIDE FOR DFSMSDFP.                               */
//********************************************************************/
//*                                                                  */
//* CHANGE THE FOLLOWING PARAMETERS FOR YOUR PROCESSING ENVIRONMENT. */
//*                                                                  */
//********************************************************************/
//*  PARAMETER     PARAMETER DEFINITION
//*
//*  ?MCDSVOL   -  VOLUME SERIAL NUMBER OF THE MCDS VOLUME
//*  ?MCDSUNT   -  UNIT TYPE FOR MCDS VOLUME
//*  ?BCDSVOL   -  VOLUME SERIAL NUMBER OF THE BCDS VOLUME
//*  ?BCDSUNT   -  UNIT TYPE FOR BCDS VOLUME
//*  ?OCDSVOL   -  VOLUME SERIAL NUMBER OF THE OCDS VOLUME
//*  ?OCDSUNT   -  UNIT TYPE FOR OCDS VOLUME
//*  ?CDSSIZE   -  NUMBER OF CYLINDERS TO INITIALLY ALLOCATE FOR ANY
//*                CONTROL DATA SET
//*  ?JRNLVOL   -  VOLUME SERIAL NUMBER OF THE JOURNAL
//*  ?JRNLUNT   -  UNIT TYPE FOR JOURNAL VOLUME
//*  ?LOGVOL    -  VOLUME SERIAL NUMBER OF THE LOG VOLUME
//*  ?LOGUNIT   -  UNIT TYPE FOR LOG VOLUME
//*  ?TRACEVOL  -  VOLUME SERIAL NUMBER OF THE PROBLEM DETERMINATION
//*                AID VOLUME
//*  ?TRACEUNIT -  UNIT TYPE FOR THE PROBLEM DETERMINATION AID VOLUME
//*  ?UCATNAM   -  NAME OF THE USER CATALOG FOR THE DFSMSHSM DATA SETS.
//*  ?UCATVOL   -  VOLUME SERIAL NUMBER OF THE USER CATALOG VOLUME
//*  ?UCATUNT   -  UNIT TYPE FOR USER CATALOG VOLUME
//*  ?CTLAUTH   -  THE USER ID THAT CAN ISSUE DFSMSHSM AUTH COMMANDS
//*                (YOUR CONTROL-AUTHORIZED USER ID)
//*  ?UID       -  AUTHORIZED USER ID (1 - 7 CHARACTERS) FOR THE
//*                DFSMSHSM-STARTED PROCEDURE IN A NON-FACILITY CLASS
//*                ENVIRONMENT (SEE NOTE BELOW).  THIS IS THE
//*                HIGH-LEVEL QUALIFIER FOR DFSMSHSM DATA SETS.
//*  ?JESVER    -  THE JOB ENTRY SUBSYSTEM (JES); EITHER JES2 OR JES3
//*  ?JOBPARM   -  JOB CARD PARAMETERS
//*  ?SCLOGNM   -  STORAGE CLASS FOR DFSMSHSM LOG AND JOURNAL
//*  ?SCCDSNM   -  STORAGE CLASS NAME FOR DFSMSHSM CONTROL DATA SETS
//*  ?MCDFHSM   -  MANAGEMENT CLASS NAME FOR DFSMSHSM DATA SETS
//*  ?HOSTID    -  PROCESSING UNIT ID FOR THE PROBLEM DETERMINATION
//*                AID FACILITY AND FOR IDENTIFYING THE HOST TO
//*                DFSMSHSM
//*  ?PRIMARY   -  YES OR NO; DEFINES WHETHER OR NOT THE DFSMSHSM
//*                HOST PERFORMS AS A PRIMARY HOST
//*  ?NEW       -  EXTENSION OF CDS NAME FOR IMPORT (HSMPRESS)
//* (NOTE: UID AUTHORIZATION IS VALID IN A NON-FACILITY CLASS
//* ENVIRONMENT ONLY, OTHERWISE, FACILITY CLASS PROFILES WILL BE
//* USED FOR AUTHORIZATION CHECKING.)
//*******************************************************************/
//*
//IDCAMS EXEC PGM=IDCAMS
//*
//*******************************************************************/
//*  ENSURE THAT DFSMSHSM CONTROL DATA SETS, THE JOURNAL, AND ANY   */
//*  CONTROL DATA SET BACKUP COPIES ARE ON DIFFERENT VOLUMES FROM   */
//*  EACH OTHER.                                                    */
//*                                                                 */
//*  GIVE USERS WRITE ACCESS TO VSAM DATA SETS BY DEFINING VSAM     */
//*  DATA SETS WITH A SHAREOPTION OF (3 3).  IT IS THE USER'S       */
//*  RESPONSIBILITY TO PROTECT THE CONTROL DATA SETS AGAINST        */
//*  UNAUTHORIZED ACCESS.                                           */
//*                                                                 */
//*******************************************************************/
//*
//HSMMCDS  DD UNIT=3390,VOL=SER=USERL2,DISP=SHR
//*
//*******************************************************************/
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE BACKUP */
//* AND DUMP.                                                       */
//*******************************************************************/
//*
//HSMBCDS  DD UNIT=3390,VOL=SER=USERL2,DISP=SHR
//*
//*******************************************************************/
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE TAPE   */
//* VOLUMES FOR DAILY BACKUP VOLUMES, SPILL BACKUP VOLUMES, OR      */
//* MIGRATION LEVEL 2 VOLUMES.                                      */
//*******************************************************************/
//*
//*
//SYSIN    DD *
 /*                                                                 */
 /*                                                              */
 /****************************************************************/
 /*  THIS PROCEDURE ASSUMES A SINGLE CLUSTER MCDS.  IF MORE THAN */
 /*  ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER  */
 /*  CDS.                                                        */
 /****************************************************************/
 /*                                                              */
 IF MAXCC = 0 THEN DO
   DEFINE CLUSTER (NAME(MVSHSM.MCDS) VOLUMES(USERL2) -
        CYLINDERS(15) FILE(HSMMCDS) -
        RECORDSIZE(435 2040) FREESPACE(0 0) -
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -
        SPEED BUFFERSPACE(530432) -
        UNIQUE NOWRITECHECK) -
        DATA(NAME(MVSHSM.MCDS.DATA) -
        CONTROLINTERVALSIZE(12288)) -
        INDEX(NAME(MVSHSM.MCDS.INDEX) -
        CONTROLINTERVALSIZE(2048))
 END
 /*                                                              */
 /****************************************************************/
 /* REMOVE THE NEXT DEFINE COMMAND IF YOU DO NOT                 */
 /* INTEND TO USE BACKUP, DUMP OR AGGREGATE BACKUP AND RECOVERY. */
 /*                                                              */
 /* THIS PROCEDURE ASSUMES A SINGLE CLUSTER BCDS.  IF MORE THAN  */
 /* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER   */
 /* CDS.                                                         */
 /*                                                              */
 /* IT'S RECOMMENDED THAT YOU SHOULD SPECIFY RECORDSIZE(334 2093)*/
 /* AND CISIZE(12288) WHEN CREATING UP TO 29 BACKUP VERSIONS     */
 /* OR RECORDSIZE(334 6544) AND CISIZE(12288) IF UP TO           */
 /* 100 BACKUP VERSIONS WILL BE KEPT OR IF FAST REPLICATION IS   */
 /* BEING USED (FRBACKUP).                                       */
 /*                                                              */
 /****************************************************************/
 /*                                                              */
 IF MAXCC = 0 THEN DO
   DEFINE CLUSTER (NAME(MVSHSM.BCDS) VOLUMES(USERL2) -
        CYLINDERS(15) FILE(HSMBCDS) -
        RECORDSIZE(334 2093) FREESPACE(0 0) -
        INDEXED KEYS(44 0) SHAREOPTIONS(3 3) -
        SPEED BUFFERSPACE(530432) -
        UNIQUE NOWRITECHECK) -
        DATA(NAME(MVSHSM.BCDS.DATA) -
        CONTROLINTERVALSIZE(12288)) -
        INDEX(NAME(MVSHSM.BCDS.INDEX) -
        CONTROLINTERVALSIZE(2048))
 END
//SYSPRINT DD SYSOUT=*
//*
//****************************************************************/
//*  ALLOCATE AND CATALOG THE DFSMSHSM LOG, EDIT LOG, AND JOURNAL*/
//*  ON AN "SMS" VOLUME.                                         */
//****************************************************************/
//*
//LOGALC   EXEC PGM=IEFBR14
//HSMLOGX  DD DSN=MVSHSM.HSMLOGX1,DISP=(,CATLG),UNIT=3390,
//   VOL=SER=USERL2,SPACE=(CYL,(3))
//HSMLOGY  DD DSN=MVSHSM.HSMLOGY1,DISP=(,CATLG),UNIT=3390,
//   VOL=SER=USERL2,SPACE=(CYL,(3))
//EDITLOG  DD DSN=MVSHSM.EDITLOG,DISP=(,CATLG),UNIT=3390,
//   VOL=SER=USERL2,SPACE=(CYL,(2))
//*
//****************************************************************/
//*  THE JOURNAL MUST NOT EXCEED 1 VOLUME, MAY NOT HAVE          */
//*  SECONDARY ALLOCATION, AND MUST BE ALLOCATED CONTIGUOUS.     */
//****************************************************************/
//*
//JOURNAL DD DSN=MVSHSM.JRNL,DISP=(,CATLG),UNIT=3390,
//   VOL=SER=USERL2,SPACE=(CYL,(5),,CONTIG)
//*
//****************************************************************/
//*  ALLOCATE THE PROBLEM DETERMINATION AID (PDA) LOG ON "SMS"   */
//*  OR ON 'NONSMS' VOLUME.  USE THE JCL BELOW FOR NONSMS        */
//*  OR ADJUST THE BELOW TO MATCH THE JCL ABOVE FOR THE LOG      */
//*  BY ADDING STORCLAS AND MGMTCLASS.                           */
//*  REMOVE THE NEXT TWO DD CARDS IF YOU DO NOT PLAN TO USE PDA. */
//****************************************************************/
//*
//ARCPDOX  DD DSN=MVSHSM.HSMPDOX,DISP=(,CATLG),VOL=SER=USERL2,
//         UNIT=3390,SPACE=(CYL,(20,2))
//ARCPDOY  DD DSN=MVSHSM.HSMPDOY,DISP=(,CATLG),VOL=SER=USERL2,
//         UNIT=3390,SPACE=(CYL,(20,2))
//HSMPROC  EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=SYS9.PROCLIB,DISP=SHR
//SYSIN    DD DATA,DLM='$A'
./ ADD NAME=DFSMSHSM
//*
//*******************************************************************/
//*                    DFSMSHSM START PROCEDURE                     */
//*                                                                 */
//* YOU CAN DUPLICATE AND RENAME THE FOLLOWING PROCEDURE FOR OTHER  */
//* PROCESSORS IN A MULTIPLE-PROCESSING-UNIT ENVIRONMENT.           */
//* ENSURE THAT YOU CHANGE THE CMD= AND HOST= KEYWORDS              */
//* ENSURE THAT YOU CHANGE THE HIGH-LEVEL QUALIFIER FOR THE         */
//* ARCLOGX AND ARCLOGY DATA SET NAMES.                             */
//* KEYWORD DEFINITIONS:                                            */
//*    CMD=00                 SPECIFY WHICH PARMLIB COMMAND MEMBER  */
//*    STR=xx                 REPLACE xx WITH LAST TWO CHARACTERS   */
//*                           OF THE SYS1.PARMLIB(ARCSTRxx)         */
//*                           MEMBER THAT YOU CREATE PRIOR TO       */
//*                           STARTING DFSMSHSM                     */
//*    EMERG=YES|NO           START HSM IN EMERGENCY MODE           */
//*    SIZE=0M                REGION SIZE FOR DFSMSHSM              */
//*    LOGSW=YES|NO           SWITCH LOGS AT STARTUP                */
//*    STARTUP=YES|NO         STARTUP INFO PRINT AT STARTUP         */
//*    PDA=YES|NO             BEGIN PDA TRACING AT STARTUP          */
//*    HOST=X                 SPECIFY HOSTID                        */
//*    PRIMARY=YES|NO         SPECIFY PRIMARY HOST                  */
//*    HOSTMODE=MAIN|AUX      INDICATE IF THIS IS A MAIN OR AUX HOST*/
//*    DDD=50                 MAX DYNAMICALLY ALLOCATED DATASETS    */
//*    RNAMEDSN=YES|NO        USE EXTENDED RESOURCE NAMES           */
//*    CDSQ=YES|NO            SERIALIZE CDSs WITH GLOBAL ENQUEUES   */
//*    CDSR=YES|NO            SERIALIZE CDSs WITH VOLUME RESERVES   */
//*    CDSSHR=YES|NO|RLS      SPECIFY CDS SHARABILITY               */
//*    RESTART=(A,B)          RESTART DFSMSHSM AFTER ABEND          */
//*    CELLS=(200,100,100,50,20)  SIZES OF CELLPOOLS                */
//*    UID=HSM                DFSMSHSM-AUTHORIZED USER ID.  ALSO    */
//*                           USED FOR HLQ OF HSM DATASETS BUT NOT  */
//*                           REQUIRED.                             */
//*******************************************************************/
//* IF ALL OF THE DFSMSHSM STARTUP PROCEDURE KEYWORDS ARE NEEDED,   */
//* TOTAL LENGTH WILL EXCEED THE 100-BYTE LIMIT, IN WHICH CASE      */
//* YOU SHOULD USE THE KEYWORD STR=XX IN PARM= TO IDENTIFY THE      */
//* PARMLIB MEMBER CONTAINING THE ADDITIONAL KEYWORDS AND PARMS.    */
//*******************************************************************/
//DFSMSHSM   PROC CMD=99,     USE PARMLIB MEMBER ARCCMD00 FOR CMDS
//           STR=00,          PARMLIB MEMBER FOR STARTUP PARMS
//           EMERG=NO,        SETS HSM INTO NON-EMERGENCY MODE
//           CDSQ=YES,        CDSs SERIALIZED WITH ENQUEUES
//           PDA=YES,         PROBLEM DETERMINATION AID
//           SIZE=0M,         REGION SIZE FOR DFSMSHSM
//           DDD=50,          MAX DYNAMICALLY ALLOCATED DATASETS
//           HOST=C,          PROC.UNIT ID AND LEVEL FUNCTIONS
//           PRIMARY=YES LEVEL FUNCTIONS
//*******************************************************************/
//DFSMSHSM  EXEC PGM=ARCCTL,DYNAMNBR=&DDD,REGION=&SIZE,TIME=1440,
//          PARM=('EMERG=&EMERG','CMD=&CMD','CDSQ=&CDSQ',
//          'UID=MVSHSM','PDA=&PDA','HOST=&HOST','STR=&STR',
//          'PRIMARY=&PRIMARY')
//*****************************************************************/
//*   HSMPARM DD must be deleted from the JCL or made into a      */
//*       a comment to use Concatenated Parmlib Support           */
//*****************************************************************/
//HSMPARM  DD DSN=SYS9.PARMLIB,DISP=SHR
//MSYSOUT  DD SYSOUT=A
//MSYSIN   DD DUMMY
//SYSPRINT DD SYSOUT=A,FREE=CLOSE
//SYSUDUMP DD SYSOUT=A
//*
//*****************************************************************/
//* THIS PROCEDURE ASSUMES A SINGLE CLUSTER MCDS.  IF MORE THAN   */
//* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER    */
//* CDS.                                                          */
//*****************************************************************/
//*
//MIGCAT   DD DSN=MVSHSM.MCDS,DISP=SHR
//JOURNAL  DD DSN=MVSHSM.JRNL,DISP=SHR
//ARCLOGX  DD DSN=MVSHSM.HSMLOGX1,DISP=OLD
//ARCLOGY  DD DSN=MVSHSM.HSMLOGY1,DISP=OLD
//ARCPDOX  DD DSN=MVSHSM.HSMPDOX,DISP=OLD
//ARCPDOY  DD DSN=MVSHSM.HSMPDOY,DISP=OLD
//*
//*****************************************************************/
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE      */
//* BACKUP AND DUMP.                                              */
//*                                                               */
//* THIS PROCEDURE ASSUMES A SINGLE CLUSTER BCDS.  IF MORE THAN   */
//* ONE VOLUME IS DESIRED, FOLLOW THE RULES FOR A MULTICLUSTER    */
//* CDS.                                                          */
//*****************************************************************/
//*
//BAKCAT   DD DSN=MVSHSM.BCDS,DISP=SHR
//*
//*****************************************************************/
//* REMOVE THE NEXT DD STATEMENT IF YOU DO NOT INTEND TO USE TAPES*/
//* FOR DAILY BACKUP, SPILL BACKUP OR MIGRATION LEVEL 2           */
//* PROCESSING.                                                   */
//*                                                               */
//* THE OCDS MAY NOT EXCEED 1 VOLUME.                             */
//*****************************************************************/
//*
//*OFFCAT   DD DSN=MVSHSM.OCDS,DISP=SHR
./ ADD NAME=DFHSMABR
//*
//*****************************************************************/
//*     ABARS SECONDARY ADDRESS SPACE STARTUP PROCEDURE           */
//*****************************************************************/
//*
//DFHSMABR PROC
//DFHSMABR EXEC PGM=ARCWCTL,REGION=0M
//SYSUDUMP DD SYSOUT=A
//MSYSIN DD DUMMY
//MSYSOUT DD SYSOUT=A
$A
//HSMPROC  EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=SYS9.PARMLIB,DISP=SHR
//SYSIN    DD DATA,DLM='$A'
./ ADD NAME=ARCCMD99
 /*****************************************************************/
 /*              DFSMSHSM STARTUP COMMAND MEMBER                  */
 /*****************************************************************/
 /*****************************************************************/
 /*             DFSMSHSM AUTOMATIC FUNCTIONS                      */
 /*                                                               */
 /* *********** AUTOBACKUPSTART,  AUTODUMPSTART, ******************/
 /* ********** AUTOMATIC PRIMARY SPACE MANAGEMENT, ****************/
 /* ********* AUTOMATIC SECONDARY SPACE MANAGEMENT. ***************/
 /*                                                               */
 /* THE AUTOMATIC DFSMSHSM FUNCTIONS SPECIFIED IN THE FOLLOWING   */
 /* SETSYS COMMANDS CONTAIN ZEROS FOR START, LATE START, AND      */
 /* TIMES. THUS, NO AUTOMATIC FUNCTIONS ARE ACTIVATED WHEN        */
 /* DFSMSHSM IS STARTED ON YOUR SYSTEM. TO ACTIVATE AUTOMATIC     */
 /* FUNCTIONS, CHANGES THE TIMES TO VALUES THAT ARE APPROPRIATE   */
 /* FOR YOUR SYSTEM.                                              */
 /*****************************************************************/
 /*****************************************************************/
 /*              DFSMSHSM SYSTEM SPECIFICATIONS                   */
 /*****************************************************************/
 /*                                                               */
 AUTH MVSHSM                 /* ESTABLISH THE USER ID THAT CAN    */ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.              */
 AUTH IBMUSER                /* ESTABLISH THE USER ID THAT CAN    */ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.              */
 AUTH RACF                   /* ESTABLISH THE USER ID THAT CAN    */ -
  DATABASEAUTHORITY(CONTROL) /* ISSUE AUTH COMMANDS.              */

 /*****************************************************************/
 /* NOTE THAT JES3 IS NOT ENABLED FOR HOSTMODE=AUX.  CONTACT IBM  */
 /* SUPPORT FOR ASSISTANCE.  IF USING A BIT TO TURN ON THIS MODE, */
 /* FOLLOW THE RECOMMENDED PROCEDURES LISTED BELOW:               */
 /* 1. START THE MAIN HOST BEFORE STARTING ANY AUX HOSTS          */
 /* 2. SHUTDOWN ALL AUX HOSTS BEFORE STOPPING THE MAIN HOST       */
 /*****************************************************************/

 SETSYS JES2                 /* JOB ENTRY SUBSYSTEM ID.           */

 SETSYS                      /* DO NOT REBLOCK DATA SETS DURING   */ -
   NOCONVERSION              /* RECALL OR RECOVERY.               */

 SETSYS                      /* DO NOT ASK OPERATOR PERMISSION TO */ -
   NOREQUEST                 /* START AUTOMATIC FUNCTIONS         */

 SETSYS                      /* MOVE OR DELETE DATA WHEN          */ -
   NODEBUG                   /* PERFORMING AUTO FUNCTIONS.        */

 SETSYS NOSWAP               /* RUN DFSMSHSM NONSWAPPABLE.        */

 SETSYS                      /* DFSMSHSM USES IT OWN FACILITIES   */ -
   DFHSMDATASETSERIALIZATION /* TO SERIALIZE DATA SETS.           */

 SETSYS                      /* DFSMSHSM USES ITS DEFINED OPTIMUM */ -
   OPTIMUMDASDBLOCKING       /* BLOCK SIZE WHEN MOVING DATA TO    */
                             /* DFSMSHSM-OWNED DASD.              */
 SETSYS                      /* DO NOT USE CMS OF ML1,ML2 AND     */ -
   USECYLINDERMANAGEDSPACE(N) /* BACKUP EAVS                      */
 /*****************************************************************/
 /*                   DFSMSHSM EXITS                              */
 /*****************************************************************/
 /* MVSHSM change */
 SETSYS EXITON(MM)
 SETSYS EXITON(MD)
 SETSYS EXITON(RD)
 /* MVSHSM change */
 /*                   NONE ACTIVATED                              */
 /*****************************************************************/
 /*  DFSMSHSM LOGGING, JOURNALING, AND REPORTING OPTIONS          */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* WRITE CDS CHANGES TO JOURNAL      */ -
   JOURNAL(RECOVERY)         /* IMMEDIATELY.                      */

 SETSYS                      /* WRITE DAILY STATISTICS RECORDS AND*/ -
   SMF(240)                  /* VOLUME STATISTIC RECORDS TO SMF   */
                             /* RECORD TYPE 240; WRITE FUNCTIONAL */
                             /* STATISTIC RECORDS TO TYPE 241.    */

 SETSYS                      /* WRITE ONE COPY OF SYSOUT TO       */ -
   SYSOUT(A 1)               /* PRINTER CLASS A                   */

 SETSYS                      /* WRITE DFSMSHSM DUMPS TO SYSTEM    */ -
   SYS1DUMP                  /* DUMP DATA SET.                    */

 SETSYS                      /* LOG ALL POSSIBLE DFSMSHSM ACTIVITY*/ -
   ACTLOGMSGLVL(FULL)

 SETSYS                      /* WRITE ACTIVITY LOG INFORMATION TO */ -
   ACTLOGTYPE(SYSOUT)        /* THE SYSOUT CLASS SPECIFIED BY THE */
                             /* SYSOUT PARAMETER.                 */
 /*                                                               */
 /*****************************************************************/
 /*                   DFSMSHSM MONITOR OPTIONS                    */
 /*****************************************************************/
 /*                                                               */
                             /* SPECIFY WHICH INFORMATIONAL       */
                             /* MESSAGES TO SEND TO THE OPERATOR  */
                             /* CONSOLE.                          */

 SETSYS                      /* LIST STARTUP PARAMETERS. DO NOT   */ -
   MONITOR(STARTUP NOVOLUME) /* SEND DATA SET LEVEL MESSAGES TO   */
                             /* THE SYSTEM CONSOLE.               */

 SETSYS                      /* DO NOT PRINT SPACE USAGE MSGS.    */ -
   MONITOR(NOSPACE           /* WARN WHEN JOURNAL IS 80% FULL     */ -
         JOURNAL(80))        /*                                   */

 /*                                                               */
 /*****************************************************************/
 /*         DFSMSHSM COMMON SERVICE AREA LIMITING OPTIONS         */
 /* THE FOLLOWING CSALIMITS PARAMETERS ARE IGNORED IF             */
 /* HOSTMODE=AUX HAS BEEN SPECIFIED AND WILL GENERATE AN ARC0103I */
 /* MESSAGE IF ISSUED.                                            */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* LIMIT DFSMSHSM'S USAGE OF COMMON  */ -
   CSALIMITS(MWE(4))         /* SEVICE AREA STORAGE. KEEP A       */
                             /* MAXIMUM OF 4 NOWAIT TYPE MWES PER */
                             /* ADDRESS SPACE ON THE CSA QUEUE.   */

 SETSYS                      /* NEVER ALLOCATE MORE THEN 100K OF  */ -
   CSALIMITS(MAXIMUM(100)    /* STORAGE FOR MWES. ALLOCATE 90% OF */ -
               ACTIVE(90)    /* AVAILABLE STORAGE TO MWES WHEN    */ -
               INACTIVE(30)) /* DFSMSHSM IS ACTIVE. ALLOCATE ONLY */
                             /* 30% OF AVAILABLE STORAGE WHEN     */
                             /* DFSMSHSM IS INACTIVE.             */
 /*                                                               */
 /*****************************************************************/
 /*               DFSMSHSM TAPE HANDLING SPECIFICATIONS           */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* SPECIFY IF EXTENDED TTOCS         */ -
   EXTENDEDTTOC(N)           /* ARE IN USE                        */

 SETSYS                      /* USE IMPROVED DATA RECORDING       */ -
   TAPEHARDWARECOMPACT       /* CAPABILITY WHEN 3480X OR NEWER    */
                             /* THE OUTPUT DEVICE.                */

 SETSYS                      /* REUSE TAPES THAT ARE PARTIALLY    */ -
   PARTIALTAPE(              /* FULL. DO NOT MARK THEM AS FULL.   */ -
    BACKUP(REUSE) -
    MIGRATION(REUSE))

 SETSYS                         /* DO NOT SUSPEND SYSTEM ACTIVITY */ -
   INPUTTAPEALLOCATION(NOWAIT)  /* (WAIT) WHILE INPUT, OUTPUT, OR */ -
   OUTPUTTAPEALLOCATION(NOWAIT) /* RECYCLE TAPES ARE BEING        */ -
   RECYCLETAPEALLOCATION(NOWAIT) /* ALLOCATED.                    */

 SETSYS                      /* SCRATCH TAPE SELECTION AT TAPE END*/ -
   SELECTVOLUME(             /* OF VOLUME (EOV) IF FROM THE GLOBAL*/ -
   BACKUP(SCRATCH)           /* IS FROM THE GLOBAL SCRATCH POOL.  */ -
   MIGRATION(SCRATCH) -
   DUMP(SCRATCH))

 SETSYS                      /* INFORM THE STORAGE ADMINISTRATOR  */ -
   RECYCLEPERCENT(20)        /* THAT A BACKUP OR MIGRATION TAPE   */
                             /* SHOULD BE RECYCLED WHEN THE AMOUNT*/
                             /* OF TAPE THAT IS OCCUPIED BY VALID */
                             /* DATA IS 20% OR LESS.              */

 /*****************************************************************/
 /*  IF USERUNITTABLE IS SPECIFIED, IT SHOULD BE CODED PRIOR TO   */
 /*  ASSIGNMENT OF ANY OTHER UNIT STATEMENT.                      */
 /*****************************************************************/

 SETSYS                      /* NO ESOTERIC TAPE DEVICE NAMES ARE */ -
   NOUSERUNITTABLE           /* DEFINED TO DFSMSHSM.              */

 SETSYS                      /* UTILIZE 97% OF TAPE CARTRIDGE     */ -
   TAPEUTILIZATION(                                                  -
    UNITTYPE(3590-1) PERCENTFUL(97))

 SETSYS                      /* THE AMOUNT OF SPACE THAT MAY NOT  */ -
   TAPESPANSIZE(100)         /* BE UTILIZED AT THE LOGICAL END OF */
                             /* A TAPE CARTRIDGE.                 */

 SETSYS                      /* RETURN TAPES THAT NO LONGER       */ -
   TAPEDELETION(             /* CONTAIN VALID DATA TO THE         */ -
    BACKUP(SCRATCHTAPE)      /* GLOBAL SCRATCH POOL.              */ -
    MIGRATION(SCRATCHTAPE) -
    DUMP(SCRATCHTAPE))

 SETSYS                      /* WAIT TEN MINUTES BEFORE REISSUING */ -
   MOUNTWAITTIME(10)         /* ADDITIONAL MESSAGES TO TAPE       */
                             /* OPERATORS FOR TAPE MOUNTS.        */

 SETSYS                      /* DIREST DFSMSHSM TO INITIALLY      */ -
   UNITNAME(3590-1)          /* SPECIFY A 3590-1 DEVICE FOR       */
                             /* BACKUP OR DUMP SCRATCH TAPES.     */

 SETSYS                      /* TAPE OPERATOR MESSAGES            */ -
   TAPEINPUTPROMPT(MIGRATIONTAPES(YES))

 SETSYS                      /* TAPE OPERATOR MESSAGES            */ -
   TAPEINPUTPROMPT(BACKUPTAPES(YES))

 SETSYS                      /* TAPE OPERATOR MESSAGES            */ -
   TAPEINPUTPROMPT(DUMPTAPES(YES))

 SETSYS                      /* TURN ON TAPE DUPLEXING FOR BACKUP */ -
   DUPLEX(                   /* AND MIGRATION. DURING MIGRATION   */ -
    BACKUP(Y)                /* DUPLEXING IF ERRORS ARE           */ -
    MIGRATION(               /* ENCOUNTERED ON THE ALTERNATE TAPE */ -
     Y ERRORALTERNATE(       /* THEN PROCESSING OF THE ORIGINAL   */ -
      CONTINUE)))            /* WILL CONTINUE.                    */

                             /* NUMBER OF ML2 PARTIALS LEFT AFTER */
 SETSYS                      /* RECYCLE                           */ -
   ML2PARTIALSNOTASSOCIATEDGOAL(10)

 /*                                                               */
 /*****************************************************************/
 /*             DFSMSHSM CONTROL DATA SET BACKUP PARAMETERS       */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* MAINTAIN FOUR BACKUP VERSIONS     */ -
   CDSVERSIONBACKUP(         /* OF THE CONTROL DATA SETS. BACK    */ -
      BACKUPCOPIES(4)        /* UP THE CONTROL DATA SETS TO       */ -
      BACKUPDEVICECATEGORY(  /* 3590-1 DEVICES IN PARALLEL USING  */ -
        TAPE(UNITNAME(3590-1) /* USING DSS AS THE DATAMOVER       */ -
        PARALLEL))  -
      DATAMOVER(DSS))

 /*                                                               */
 /*****************************************************************/
 /*                DFSMSHSM RACF SPECIFICATIONS                   */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* DO NOT PUT RACF-INDICATION        */ -
   NORACFIND                 /* ON BACKUP AND MIGRATION           */
                             /* COPIES OF DATA SETS.              */

 SETSYS                      /* USE RACF TO PROVIDE TAPE          */ -
   TAPESECURITY(RACF)        /* SECURITY.                         */

 SETSYS                      /* DO NOT ALLOW ERASE-ON-SCRATCH     */ -
   NOERASEONSCRATCH          /* ON ANY DFSMSHSM BACKUP            */
                             /* VERSIONS AND MIGRATION COPIES     */

 SETSYS                      /* BACKUP DISCRETE RACF PROFILES     */ -
   PROFILEBACKUP

 /*                                                               */
 /*****************************************************************/
 /*                DFSMSHSM COMPACTION OPTIONS                    */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* COMPACT DATA SETS THAT MIGRATE TO */ -
   COMPACT(DASDMIGRATE)      /* DASD.                             */

 SETSYS                      /* DO NOT COMPACT DATA UNLESS A      */ -
     COMPACTPERCENT(20)      /* SAVINGS OF 20% OR MORE CAN BE     */
                             /* GAINED.                           */

 SETSYS -
   OBJECTNAMES(OBJ,OBJECT,LOAD,LOADLIB,LOADMODS,LINKLIB) -
   SOURCENAMES(ASM,COBOL,FORT,PLI,SOURCE,SRC,SRCLIB,SRCE,CNTL,JCL)

 /*                                                               */
 /*****************************************************************/
 /*              DFSMSHSM MIGRATION PARAMETERS                    */
 /*****************************************************************/
 /*                                                               */

 SETSYS                      /* DO NOT ALLOW DFSMSHSM TO MIGRATE  */ -
   TAPEMIGRATION(NONE)       /* DATA SETS TO LEVEL 2 TAPE VOLUMES.*/

 SETSYS                      /* SPECIFY PROCESSING WINDOW FOR     */ -
   PRIMARYSPMGMTSTART        /* PRIMARY SPACE MANAGEMENT (LEVEL 0 */ -
   (0000 0000)               /* TO LEVEL 1 MIGRATION              */

 DEFINE                      /* RUN PRIMARY SPACE MGMT EVERY      */ -
   PRIMARYSPMGMTCYCLE        /* DAY, STARTING MARCH 02, 1998      */ -
   (YYYYYYY -
   CYCLESTARTDATE(1998/03/02))

 SETSYS                      /* A DATA SET THAT HAS NOT BEEN      */ -
   DAYS(10)                  /* REFERRED TO (OPENED) FOR 10 DAYS  */
                             /* IS ELIGIBLE FOR MIGRATION         */

 SETSYS                      /* SPECIFY A HIGH-LEVEL QUALIFIER    */ -
   MIGRATEPREFIX(MVSHSM)     /* WITH WHICH DFSMSHSM RENAMES       */
                             /* MIGRATED DATA SETS.               */

 SETSYS                      /* PERFORM MIGRATION THROUGHOUT      */ -
   INTERVALMIGRATION         /* THE DAY.                          */

 SETSYS                       /* SPECIFY PROCESSING WINDOW FOR    */ -
   SECONDARYSPMGMTSTART(0000) /* SECONDARY SPACE MANAGEMENT       */
                              /* (LEVEL 1 TO LEVEL 2 MIGRATION)   */

 DEFINE                      /* RUN SECONDARY SPACE MANAGEMENT    */ -
   SECONDARYSPMGMTCYCLE      /* EVERY DAY,                        */ -
   (YYYYYYY                  /* STARTING MARCH 02, 1998.          */ -
   CYCLESTARTDATE(1998/03/02))

 SETSYS                      /* KEEP MCDS RECORDS FOR RECALLED    */ -
   MIGRATIONCLEANUPDAYS(10 30 3)  /* DATA SETS FOR 10 DAYS. KEEP  */
                             /* VOLUME OR DAILY STATISTICS RECORDS*/
                             /* FOR 30 DAYS. KEEP RECORDS TO      */
                             /* RECONNECTABLE DATA SETS 3 DAYS    */
                             /* BEYOND EARLIEST ELIGIBILITY.      */

 SETSYS                      /* MIGRATE DATA SETS FROM LEVEL 1    */ -
 /* MVSHSM change */
   MIGRATIONLEVEL1DAYS(1)    /* VOLUMES TO LEVEL 2 VOLUMES IF THE */
 /* MVSHSM change */
                             /* DATA SETS HAVE NOT BEEN REFERRED  */
                             /* TO FOR 45 DAYS.                   */

 SETSYS                      /* DATA SET EXTENT REDUCTION         */ -
   MAXEXTENTS(10)            /* OCCURS WHEN EXTENTS REACH 10.     */

 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -
   MAXRECALLTASKS(8)         /* DFSMSHSM RECALL TASKS TO EIGHT.   */


 SETSYS                      /* DIRECT DFSMSHSM TO RECALL DATA    */ -
   RECALL(PRIVATEVOLUME(LIKE))/* SETS TO ONLINE VOLUMES WITH THE  */
                             /* USE ATTRIBUTE OF PUBLIC, STORAGE, */
                             /* OR PRIVATE AND WITH LIKE          */
                             /* CHARACTERISTICS.                  */

 SETSYS                      /* RETAIN LIST DATA SETS FOR 7 DAYS. */ -
   SCRATCHFREQUENCY(7)       /* DO NOT SCRATCH EXPIRED DATA SETS. */ -
   EXPIREDDATASETS(NOSCRATCH)

 SETSYS                      /* DO NOT MIGRATE SMALL DATA SETS AS */ -
   NOSMALLDATASETPACKING     /* RECORDS TO SMALL DATA SET PACKING */
                             /* (SDSP) DATA SETS.                 */

 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -
   MAXMIGRATIONTASKS(3)      /* AUTOMATIC VOLUME MIGRATION TASKS  */
                             /* TO THREE.                         */

 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -
   MAXSSMTASKS               /* AUTOMATIC SECONDARY SPACE         */ -
     (CLEANUP(2)             /* MANAGEMENT CLEANUP TASKS TO TWO   */ -
      TAPEMOVEMENT(1))       /* AND TAPEMOVEMENT TASKS TO ONE     */

 /*                                                               */
 /*****************************************************************/
 /*                DFSMSHSM BACKUP PARAMETERS                     */
 /*****************************************************************/
 /*                                                               */

 ONLYIF                      /* THE FOLLOWING DEFINE COMMAND WILL */ -
   HSMHOST(C)                /* EXECUTE ONLY IF THE ACTIVE HOST ID*/ -
                             /* MATCHES THE HOST SPECIFIED.       */
                                                                     -
 DEFINE BACKUP(Y 1           /* DIRECT DFSMSHSM TO BACKUP ELIGIBLE*/ -
   CYCLESTARTDATE(1998/03/02)) /* DATA SETS DAILY (A 1 DAY CYCLE) */
                             /* TO A SINGLE BACKUP VOLUME,STARTING*/
                             /* MARCH 02, 1998.                   */

 SETSYS DSBACKUP(DASDSELECTIONSIZE(3000 250)  DASD(TASKS(2))         -
   TAPE(TASKS(2) DEMOUNTDELAY(MINUTES(60)  MAXIDLETASKS(0))))
                             /* BALANCE THE WORKLOAD BETWEEN TAPE */
                             /* AND DASD FOR WAIT TYPE BACKDS     */
                             /* COMMANDS. LIMIT THE NUMBER OF DATA*/
                             /* SET BACKUP TAPE AND DASD TASKS.   */
                             /* LIMIT THE NUMBER AND LENGTH OF    */
                             /* TIME A TAPE TASK CAN REMAIN IDLE  */
                             /* BEFORE BEING DEMOUNTED.           */

 SETSYS                      /* ACTIVATE THE BACKUP AND DUMP      */ -
   BACKUP                    /* FUNCTION OF DFSMSHSM              */

 ONLYIF                      /* THE FOLLOWING SETSYS COMMAND WILL */ -
   HSMHOST(C)                /* EXECUTE ONLY IF THE ACTIVE HOST ID*/ -
                             /* MATCHES THE HOST SPECIFIED.       */ -

 SETSYS -
   AUTOBACKUPSTART(0000 0000 0000)
                             /* SPECIFY THE TIME FOR AUTOMATIC    */
                             /* BACKUP TO BEGIN, THE LATEST START */
                             /* TIME THAT AUTOMATIC BACKUP CAN    */
                             /* BEGIN, AND THE QUIESCE TIME FOR   */
                             /* AUTOMATIC BACKUP. NO AUTOMATIC    */
                             /* BACKUP OCCURS UNTIL THESE TIMES   */
                             /* ARE SPECIFIED.                    */

 SETSYS                      /* SPECIFY A HIGH-LEVEL QUALIFIER    */ -
   BACKUPPREFIX(MVSHSM)      /* WITH WHICH DFSMSHSM RENAMES BACKED*/
                             /* UP DATA SETS                      */

 SETSYS                      /* KEEP ONE VERSION OF EACH BACKED UP*/ -
   VERSIONS(1)               /* DATA SET.                         */ -
   FREQUENCY(0)

 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -
   MAXBACKUPTASKS(3)         /* BACKUP TASKS TO THREE, BACK UP ALL*/ -
   NOSKIPABPRIMARY           /* DFSMSHSM-MANAGED VOLUMES THAT HAVE*/
                             /* THE AUTO BACKUP ATTRIBUTE.        */

 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -
   MAXDSRECOVERTASKS(3)      /* DFSMSHSM DATA SET RECOVER TASKS   */
                             /* TO THREE                          */

 SETSYS                      /* DURING DAILY BACKUP, MOVE         */ -
   SPILL                     /* DATA SETS FROM FULL DAILY         */
                             /* DASD VOLUMES TO SPILL VOLUMES.    */

 SETSYS                      /* MAKE INITIAL BACKUP COPIES OF DATA*/ -
   INCREMENTALBACKUP(ORIGINAL) /* SETS DESPITE THE SETTING OF THE */
                             /* CHANGE BIT.                       */

 SETSYS                      /* DFSMShsm will process BACKDS      */ -
   DSBACKUP(GENVSAMCOMPNAMES(YES)) /* NEWNAME, request DFSMSdss   */
                           /* create default names (.data .index) */

 /*                                                               */
 /*****************************************************************/
 /*            DFSMSHSM FULL VOLUME DUMP PARAMETERS               */
 /*****************************************************************/
 /*                                                               */

 ONLYIF                      /* THE DEFINE COMMAND WILL EXECUTE IF*/ -
   HSMHOST(C)                /* THE ACTIVE HOST ID = C            */
 DEFINE -
   DUMPCYCLE(NNNNNNY         /* 7-DAY DUMP CYCLE WITH DUMP DONE   */ -
    CYCLESTARTDATE(1998/03/02)) /* ONLY ON THE SEVENTH DAY,       */
                             /* STARTING ON MONDAY MARCH 02, 1998,*/
                             /* SO DUMPS OCCUR ON SUNDAY.         */

 DEFINE DUMPCLASS(SUNDAY DAY(7) -
   RETPD(27) AUTOREUSE NORESET  -
   DATASETRESTORE VTOCCOPIES(4))
                             /* DEFINE A DUMP CLASS NAMED SUNDAY  */
                             /* THAT IS AUTOMATICALLY DUMPED ON   */
                             /* THE SEVENTH DAY OF THE CYCLE.     */
                             /* EACH DUMP COPY IS HELD FOR 27 DAYS*/
                             /* AND THE TAPE IS REUSED WHEN IT IS */
                             /* SCRATCHED. DO NOT RESET DATA SET  */
                             /* CHANGE BITS. ALLOW TSO USERS TO   */
                             /* RESTORE DATA SETS FROM DUMP TAPE. */
                             /* AT MOST, KEEP FOUR VTOC COPY DUMP */
                             /* DATA SETS FOR EACH VOLUME.        */

 DEFINE DUMPCLASS(QUARTERS   /* DEFINE A DUMP CLASS NAMED QUARTERS*/ -
   FREQUENCY(90) RETPD(356)  /* THAT IS AUTOMATICALLY DUMPED EVERY*/ -
   NOAUTOREUSE               /* THREE MONTHS AND IS HELD FOR ONE  */ -
   NODATASETRESTORE NORESET  /* WEEK LESS THEN A YEAR. USE IS FOR */ -
   DISPOSITION('OFF-SITE')   /* ONLY FULL RESTORES. HOLD THE TAPE */ -
   VTOCCOPIES(0))            /* OFF-SITE AND KEEP NO VTOC COPIES  */
                             /* FOR THIS CLASS.                   */

 SETSYS -
   AUTODUMPSTART(0000 0000 0000)
                             /* SPECIFY THE TIME FOR AUTOMATIC    */
                             /* DUMP TO BEGIN, THE LATEST START   */
                             /* THAT AUTOMATIC DUMP CAN BEGIN,    */
                             /* AND THE QUIESCE TIME FOR AUTOMATIC*/
                             /* DUMP. NO AUTOMATIC DUMP OCCURS    */
                             /* UNTIL THESE TIMES ARE SPECIFIED.  */

 SETSYS                      /* BUFFER FIVE TRACKS WHEN PERFORMING*/ -
   DUMPIO(3,2)               /* A DUMP. BUFFER TWO TRACKS DURING  */
                             /* DATA MOVEMENT.                    */

 SETSYS                      /* LIMIT THE NUMBER OF CONCURRENT    */ -
   MAXDUMPTASKS(3)           /* DUMP TASK TO THREE.               */

/*                                                                */
/******************************************************************/
/*      DFSMSHSM AGGREGATE BACKUP AND RECOVER PARAMETERS          */
 /* THE FOLLOWING ABARS PARAMETERS ARE IGNORED IF HOSTMODE=AUX    */
 /* HAS BEEN SPECIFIED AND WILL GENERATE AN ARC0103I MESSAGE IF   */
 /* ISSUED.                                                       */
 /*****************************************************************/
/*                                                                */

SETSYS                       /* RECOVER DATA SET AGGREGATES TO    */ -
  ARECOVERUNITNAME(3590-1)   /* 3590-1 TAPE DEVICES.              */

SETSYS                       /* START ONLY ONE SECONDARY ADDRESS  */ -
  MAXABARSADDRESSSPACE(1)    /* SPACE FOR BACKING UP AND          */
                             /* RECOVERING AGGREGATED DATA SETS   */

SETSYS                       /* START THE SECONDARY ADDRESS       */ -
  ABARSPROCNAME(DFHSMABR)    /* SPACE WITH THE STARTUP PROCEDURE  */
                             /* NAMED DFHSMABR.                   */

SETSYS                       /* WRITE THE ABARS ACTIVITY LOG TO   */ -
  ABARSACTLOGTYPE(DASD)      /* DASD                              */

SETSYS                       /* LOG ALL ABARS MESSAGES            */ -
  ABARSACTLOGMSGLVL(FULL)

SETSYS                       /* RECOVER ML2 DATA SETS TO TAPE.    */ -
  ARECOVERML2UNIT(3590-1)

SETSYS                       /* USE 90% OF THE AVAILABLE TAPE FOR */ -
  ARECOVERPERCENTUTILIZED(090) /* ARECOVERY TAPES.                */

SETSYS                       /* BACKUP AGGREGATES TO 3590-1       */ -
  ABARSUNITNAME(3590-1)      /* DEVICES.

SETSYS                       /* BACKUP ABARS DATA SETS WITH TWO   */ -
  ABARSBUFFERS(2)            /* DATA MOVEMENT BUFFERS.            */

SETSYS                       /* SPECIFY ABARS TO STACK THE        */ -
  ABARSTAPES(STACK)          /* ABACKUP OUTPUT ONTO A MINIMUM     */
                             /* NUMBER OF TAPE VOLUMES            */

SETSYS                       /* ABARS ACTIVITY LOG WILL NOT BE    */ -
  ABARSDELETEACTIVITY(N)     /* AUTOMATICALLY DELETED DURING      */
                             /* ABARS PROCESSING                  */

SETSYS                       /* SET PERFORMANCE OF BACKING UP     */ -
  ABARSOPTIMIZE(3)           /* LEVEL 0 DASD DATASETS             */

SETSYS                       /* TARGET DATASET IS TO BE ASSIGNED  */ -
  ARECOVERTGTGDS(SOURCE)     /* SOURCE STATUS                     */

SETSYS                       /* ALLOWS RECOVERY OF A LEVEL 0      */ -
  ABARSVOLCOUNT(ANY)         /* DASD DATA SET UP TO 59 VOLUMES    */
 /*                                                               */
 /*****************************************************************/
 /*            DFSMSHSM HSMPLEX/SYSPLEX PARAMETERS                */
 /*****************************************************************/
 /*                                                               */

SETSYS                       /* SPECIFY THE SUFFIX FOR THE        */ -
  PLEXNAME(PLEX0)            /* HSMPLEX IN A MULTI-HSMPLEX        */
                             /* ENVIRONMENT   ARC(SUFFIX)         */

SETSYS                       /* SPECIFY HOST NOT TO TAKE OVER     */ -
  PROMOTE(PRIMARYHOST(NO)    /* PRIMARY OR SSM RESPONSIBILITIES   */ -
  SSM(NO))

 /*                                                               */
 /*****************************************************************/
 /* SEE MEMBER ARCCMD90 IN esa.prj.cbthsm.cntl FOR AN EXAMPLE OF  */
 /* ADDVOL COMMAND TO BE USED IN CONJUNCTION WITH THIS COMMAND    */
 /* STREAM.                                                       */
 /*****************************************************************/
$A
//HSMPROC  EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=SYS9.PARMLIB,DISP=SHR
//SYSIN    DD DATA,DLM='$A'
./ ADD NAME=ARCSTR00
 /*****************************************************************/
 /*              DFSMSHSM ADDITIONAL STARTUP COMMAND MEMBER       */
 /*****************************************************************/
$A
