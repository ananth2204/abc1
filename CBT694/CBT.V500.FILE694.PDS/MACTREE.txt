         MACRO
&NAME    MACTREE  &MSGID,                                              +
               &FLAG1=OFF,                                             +
               &FLAG2=OFF,                                             +
               &FLAG3=OFF,                                             +
               &FLAG4=OFF,                                             +
               &FLAG5=OFF,                                             +
               &FLAG6=OFF,                                             +
               &FLAG7=OFF,                                             +
               &FLAG8=OFF,                                             +
               &MESSAGE=NO,                                            +
               &PROCESS=NO,                                            +
               &USEID=
         GBLC  &GSORTKEY(1500)
         GBLC  &GMSGID(1500)
         GBLC  &GFLAG1(1500)
         GBLC  &GFLAG2(1500)
         GBLC  &GFLAG3(1500)
         GBLC  &GFLAG4(1500)
         GBLC  &GFLAG5(1500)
         GBLC  &GFLAG6(1500)
         GBLC  &GFLAG7(1500)
         GBLC  &GFLAG8(1500)
         GBLC  &GMESSAGE(1500)
         GBLC  &GPROCESS(1500)
         GBLA  &GLO(1500)
         GBLA  &GHI(1500)
         GBLB  &GDONE(1500)
         GBLA  &GINDEX
         GBLA  &GTBLNO
.* ================================================================== *
.* &GSET1 - SET ON WHEN 'MESSAGE_TBLSTART' DETECTED                   *
.* &GSET2 - SET ON MNOTE FOR NOT SET1 ISSUED TO PREVENT FURTHER       *
.*          MESSAGES                                                  *
.* &GSET3 - SET ON WHEN 'MESSAGE_TBLSTOP' DETECTED                    *
.* &GSET4 - SET ON WHEN MNOTE FOR SET3 IS ISSUED TO PREVENT FURTHER   *
.*          MESSAGES                                                  *
.* &GSET5 - SET ON WHEN THE MAXIMUM NUMBER OF TABLE ENTRIES HAVE BEEN *
.*          EXCEEDED                                                  *
.* &GSET6 - SET ON WHEN MNOTE FOR GSET5 IS ISSUED TO PREVENT FURTHER  *
.*          MESSAGES                                                  *
.* ================================================================== *
         GBLB  &GSET1
         GBLB  &GSET2
         GBLB  &GSET3
         GBLB  &GSET4
         GBLB  &GSET5
         GBLB  &GSET6
         LCLC  &LSORTKEY
         LCLC  &LMSGID
         LCLC  &LFLAG1
         LCLC  &LFLAG2
         LCLC  &LFLAG3
         LCLC  &LFLAG4
         LCLC  &LFLAG5
         LCLC  &LFLAG6
         LCLC  &LFLAG7
         LCLC  &LFLAG8
         LCLC  &LMESSAGE
         LCLC  &LPROCESS
         LCLA  &LLO
         LCLA  &LHI
         LCLA  &LSEED
         LCLA  &L1
         LCLA  &L2
         LCLA  &L3
         LCLA  &L4
         LCLA  &L5
         LCLC  &L6
         LCLC  &L7
         LCLC  &L8
         LCLC  &L9
         LCLA  &LTBL1(1500)
         LCLA  &LTBL2(1500)
         AIF   (&GSET3).MNOTE14
         AIF   (&GSET1).CHECK_MSGID
         AIF   ('&MSGID' NE 'MESSAGE_TBLSTART').MNOTE15
&GSET1   SETB  1
         MEXIT
.* ================================================================== *
.CHECK_MSGID   ANOP
         AIF   ('&MSGID' EQ '').MNOTE2
         AIF   ('&MSGID' EQ 'MESSAGE_TBLSTART').MNOTE3
         AIF   ('&MSGID' EQ 'MESSAGE_TBLSTOP').SORT_TABLE
         AIF   (&GSET5).MNOTE16
         AIF   ('&FLAG1' NE 'OFF' AND '&FLAG1' NE 'ON').MNOTE2
         AIF   ('&FLAG2' NE 'OFF' AND '&FLAG2' NE 'ON').MNOTE3
         AIF   ('&FLAG3' NE 'OFF' AND '&FLAG3' NE 'ON').MNOTE4
         AIF   ('&FLAG4' NE 'OFF' AND '&FLAG4' NE 'ON').MNOTE5
         AIF   ('&FLAG5' NE 'OFF' AND '&FLAG5' NE 'ON').MNOTE6
         AIF   ('&FLAG6' NE 'OFF' AND '&FLAG6' NE 'ON').MNOTE7
         AIF   ('&FLAG7' NE 'OFF' AND '&FLAG7' NE 'ON').MNOTE8
         AIF   ('&FLAG8' NE 'OFF' AND '&FLAG8' NE 'ON').MNOTE9
         AIF   ('&MESSAGE' NE 'YES' AND '&MESSAGE' NE 'NO').MNOTE10
         AIF   ('&PROCESS' NE 'YES' AND '&PROCESS' NE 'NO').MNOTE11
         AIF   ('&FLAG1' EQ 'ON' AND '&MESSAGE' EQ 'NO').MNOTE12
         AIF   ('&FLAG2' EQ 'ON' AND '&FLAG4' EQ 'ON').MNOTE18
         AIF   ('&FLAG4' EQ 'ON' AND '&PROCESS' EQ 'NO').MNOTE19
.* ================================================================== *
&LMSGID      SETC    '&MSGID'
             AIF    ('&FLAG1' EQ 'OFF').FLAG1_OFF
&LFLAG1      SETC   '1'
             AGO    .CHECK_FLAG2
.* ------------------------------------------------------------------ *
.FLAG1_OFF   ANOP
&LFLAG1      SETC   '0'
.* ================================================================== *
.CHECK_FLAG2   ANOP
               AIF    ('&FLAG2' EQ 'OFF').FLAG2_OFF
&LFLAG2        SETC   '2'
               AGO    .CHECK_FLAG3
.* ------------------------------------------------------------------ *
.FLAG2_OFF     ANOP
&LFLAG2        SETC   '0'
.* ================================================================== *
.CHECK_FLAG3   ANOP
               AIF    ('&FLAG3' EQ 'OFF').FLAG3_OFF
&LFLAG3        SETC   '3'
               AGO    .CHECK_FLAG4
.* ------------------------------------------------------------------ *
.FLAG3_OFF     ANOP
&LFLAG3        SETC   '0'
.* ================================================================== *
.CHECK_FLAG4   ANOP
               AIF    ('&FLAG4' EQ 'OFF').FLAG4_OFF
&LFLAG4        SETC   '4'
               AGO    .CHECK_FLAG5
.* ------------------------------------------------------------------ *
.FLAG4_OFF     ANOP
&LFLAG4        SETC   '0'
.* ================================================================== *
.CHECK_FLAG5   ANOP
               AIF    ('&FLAG5' EQ 'OFF').FLAG5_OFF
&LFLAG5        SETC   '5'
               AGO    .CHECK_FLAG6
.* ------------------------------------------------------------------ *
.FLAG5_OFF     ANOP
&LFLAG5        SETC   '0'
.* ================================================================== *
.CHECK_FLAG6   ANOP
               AIF    ('&FLAG6' EQ 'OFF').FLAG6_OFF
&LFLAG6        SETC   '6'
               AGO    .CHECK_FLAG7
.* ------------------------------------------------------------------ *
.FLAG6_OFF     ANOP
&LFLAG6        SETC   '0'
.* ================================================================== *
.CHECK_FLAG7   ANOP
               AIF    ('&FLAG7' EQ 'OFF').FLAG7_OFF
&LFLAG7        SETC   '7'
               AGO    .CHECK_FLAG8
.* ------------------------------------------------------------------ *
.FLAG7_OFF     ANOP
&LFLAG7        SETC   '0'
.* ================================================================== *
.CHECK_FLAG8   ANOP
               AIF    ('&FLAG8' EQ 'OFF').FLAG8_OFF
&LFLAG8        SETC   '8'
               AGO   .CHECK_MESSAGE
.* ------------------------------------------------------------------ *
.FLAG8_OFF     ANOP
&LFLAG8        SETC   '0'
.* ================================================================== *
.CHECK_MESSAGE   ANOP
                 AIF    ('&MESSAGE' EQ 'NO').MESSAGE_NO
                 AIF    ('&USEID' EQ '').BYPASS1
&LMESSAGE        SETC   'A(&USEID._MVCL)'
                 AGO    .CHECK_PROCESS
.* ------------------------------------------------------------------ *
.BYPASS1         ANOP
&LMESSAGE        SETC   'A(&MSGID._MVCL)'
                 AGO    .CHECK_PROCESS
.* ------------------------------------------------------------------ *
.MESSAGE_NO      ANOP
&LMESSAGE        SETC   'A(0)'
.* ================================================================== *
.CHECK_PROCESS   ANOP
                 AIF    ('&FLAG2' EQ 'ON').SET_COMMAND
                 AIF    ('&PROCESS' EQ 'NO').PROCESS_NO
                 AIF    ('&USEID' NE '').SET_PROCESS
&LPROCESS        SETC   'A(PROCESS_&MSGID.)'
                 AGO    .BUILD_GBLENTRY
.* ------------------------------------------------------------------ *
.SET_PROCESS     ANOP
&LPROCESS        SETC   'A(PROCESS_&USEID.)'
                 AGO    .BUILD_GBLENTRY
.* ------------------------------------------------------------------ *
.SET_COMMAND     ANOP
                 AIF    ('&USEID' NE '').COMMAND_SET
&LPROCESS        SETC   'A(&MSGID._COMMANDS)'
                 AGO    .BUILD_GBLENTRY
.* ------------------------------------------------------------------ *
.COMMAND_SET     ANOP
&LPROCESS        SETC   'A(&USEID._COMMANDS)'
                 AGO    .BUILD_GBLENTRY
.* ------------------------------------------------------------------ *
.PROCESS_NO      ANOP
&LPROCESS        SETC   'A(0)'
.* ================================================================== *
.BUILD_GBLENTRY      ANOP
&GINDEX              SETA   &GINDEX+1
                     AIF    (&GINDEX GT 1500).MNOTE16
&LSORTKEY            SETC  '&LMSGID'.'            '
&LSORTKEY            SETC  '&LSORTKEY'(1,12)
&GSORTKEY(&GINDEX)   SETC  '&LSORTKEY'
&GMSGID(&GINDEX)     SETC  '&LMSGID'
&GFLAG1(&GINDEX)     SETC  '&LFLAG1'
&GFLAG2(&GINDEX)     SETC  '&LFLAG2'
&GFLAG3(&GINDEX)     SETC  '&LFLAG3'
&GFLAG4(&GINDEX)     SETC  '&LFLAG4'
&GFLAG5(&GINDEX)     SETC  '&LFLAG5'
&GFLAG6(&GINDEX)     SETC  '&LFLAG6'
&GFLAG7(&GINDEX)     SETC  '&LFLAG7'
&GFLAG8(&GINDEX)     SETC  '&LFLAG8'
&GMESSAGE(&GINDEX)   SETC  '&LMESSAGE'
&GPROCESS(&GINDEX)   SETC  '&LPROCESS'
&GLO(&GINDEX)        SETA  9999
&GHI(&GINDEX)        SETA  9999
&GDONE(&GINDEX)      SETB  0
                     MEXIT
.* ================================================================== *
.SORT_TABLE   ANOP
&GSET3        SETB   1
&L1           SETA   1
                  ACTR   (((&GINDEX-1)*&GINDEX)*9)/2
&L5           SETA   (((&GINDEX-1)*&GINDEX)*9)/2
.* ------------------------------------------------------------------ *
.SORT_OUTERLOOP   ANOP
&L2               SETA   &L1+1
.* ------------------------------------------------------------------ *
.SORT_INNERLOOP   ANOP
                  AIF    ('&GSORTKEY(&L1)' LT '&GSORTKEY(&L2)').NEXT_L2
                  AIF    ('&GSORTKEY(&L1)' EQ '&GSORTKEY(&L2)').MNOTE17
.* ------------------------------------------------------------------ *
.SWITCH   ANOP
&LSORTKEY         SETC   '&GSORTKEY(&L2)'
&LMSGID           SETC   '&GMSGID(&L2)'
&LFLAG1           SETC   '&GFLAG1(&L2)'
&LFLAG2           SETC   '&GFLAG2(&L2)'
&LFLAG3           SETC   '&GFLAG3(&L2)'
&LFLAG4           SETC   '&GFLAG4(&L2)'
&LFLAG5           SETC   '&GFLAG5(&L2)'
&LFLAG6           SETC   '&GFLAG6(&L2)'
&LFLAG7           SETC   '&GFLAG7(&L2)'
&LFLAG8           SETC   '&GFLAG8(&L2)'
&LMESSAGE         SETC   '&GMESSAGE(&L2)'
&LPROCESS         SETC   '&GPROCESS(&L2)'
&GSORTKEY(&L2)    SETC   '&GSORTKEY(&L1)'
&GMSGID(&L2)      SETC   '&GMSGID(&L1)'
&GFLAG1(&L2)      SETC   '&GFLAG1(&L1)'
&GFLAG2(&L2)      SETC   '&GFLAG2(&L1)'
&GFLAG3(&L2)      SETC   '&GFLAG3(&L1)'
&GFLAG4(&L2)      SETC   '&GFLAG4(&L1)'
&GFLAG5(&L2)      SETC   '&GFLAG5(&L1)'
&GFLAG6(&L2)      SETC   '&GFLAG6(&L1)'
&GFLAG7(&L2)      SETC   '&GFLAG7(&L1)'
&GFLAG8(&L2)      SETC   '&GFLAG8(&L1)'
&GMESSAGE(&L2)    SETC   '&GMESSAGE(&L1)'
&GPROCESS(&L2)    SETC   '&GPROCESS(&L1)'
&GSORTKEY(&L1)    SETC   '&LSORTKEY'
&GMSGID(&L1)      SETC   '&LMSGID'
&GFLAG1(&L1)      SETC   '&LFLAG1'
&GFLAG2(&L1)      SETC   '&LFLAG2'
&GFLAG3(&L1)      SETC   '&LFLAG3'
&GFLAG4(&L1)      SETC   '&LFLAG4'
&GFLAG5(&L1)      SETC   '&LFLAG5'
&GFLAG6(&L1)      SETC   '&LFLAG6'
&GFLAG7(&L1)      SETC   '&LFLAG7'
&GFLAG8(&L1)      SETC   '&LFLAG8'
&GMESSAGE(&L1)    SETC   '&LMESSAGE'
&GPROCESS(&L1)    SETC   '&LPROCESS'
.* ------------------------------------------------------------------ *
.NEXT_L2   ANOP
&L2        SETA   &L2+1
           AIF    (&L2 LE &GINDEX).SORT_INNERLOOP
&L1        SETA   &L1+1
           AIF    (&L1 LT &GINDEX).SORT_OUTERLOOP
.* ================================================================== *
.* THIS NEXT SET OF INSTRUCTIONS BUILDS THE ENTRIES FOR THE BINARY    *
.* TREE.  SINCE THE TABLE HAS BEEN SORTED BY THE ABOVE ROUTINE, THE   *
.* MESSAGE TABLE IS NOW ISOMORPHIC WITH THE NATURAL NUMBERS.  THUS,   *
.* BY TAKING THE INTERVAL OF FROM 1 TO THE NUMBER OF ENTRIES, I.E.    *
.* (MIN,MAX), AND, USING THE MIDPOINT OF THE INTERVAL, I CAN FIND THE *
.* MIDPOINT.  NEXT, I HAVE THIS SET OF POINTS - (MIN,MID,MAX).        *
.* AGAIN, I CAN FIND MIDPOINTS TO CREATE THIS SET OF POINTS:          *
.*                                                                    *
.*        (MIN,(MIN+MID)/2,MID,(MAX+MID)/2,MAX).                      *
.*                                                                    *
.* AS I CALCULATE THESE MIDPOINTS, THEY ARE STORED IN THE             *
.* CORRESPONDING ENTRY IN THE SORTED TABLE AS &GLO &GHI.              *
.*                                                                    *
.* THE NEXT ITERATION WILL DETERMINE NEW MIDPOINTS BETWEEN THE POINTS *
.* ESTABLISHED IN THE PREVIOUS ITERATION.                             *
.* ================================================================== *
&L1               SETA   1
&L5               SETA   &GINDEX
&L3               SETA   (&L5+&L1)/2
&LSEED            SETA   &L3
&L2               SETA   (&L3+&L1)/2
&L4               SETA   (&L3+&L5)/2
&GLO(&L3)         SETA   &L2
&GHI(&L3)         SETA   &L4
&GDONE(&L3)       SETB   1
&GLO(1)           SETA   0
&GHI(1)           SETA   0
&GDONE(1)         SETB   1
&GLO(&GINDEX)     SETA   0
&GHI(&GINDEX)     SETA   0
&GDONE(&GINDEX)   SETB   1
&LTBL1(1)         SETA   &L1
&LTBL1(2)         SETA   &L2
&LTBL1(3)         SETA   &L3
&LTBL1(4)         SETA   &L4
&LTBL1(5)         SETA   &L5
.* ================================================================== *
&L1               SETA   6
&L5               SETA   4
.ACTR_LOOP        ANOP
&L2               SETA   (&L5*2)+1
                  AIF    (&L2 GT &GINDEX).END_ACTR
&L5               SETA   &L5*2
                  AGO    .ACTR_LOOP
.END_ACTR         ANOP
&L2               SETA   ((&L5*4)-1)*14
                  ACTR   &L2
.TREE_OUTERLOOP   ANOP
&L2               SETA   1
&L3               SETA   1
.* ------------------------------------------------------------------ *
.TREE_INNERLOOP   ANOP
                  AIF    (&GDONE(&LTBL1(&L2))).ENTRY_DONE
                  AIF    ((&LTBL1(&L2)-&LTBL1(&L2-1)) GT 1).USUAL_LOW
                  AIF    (&LTBL1(&L2) GT 2).SET_NOLOW
&GLO(2)           SETA   1
&LTBL2(2)         SETA   2
&L3               SETA   3
                  AGO    .HIGH_TIME
.SET_NOLOW        ANOP
&L4               SETA   &LTBL1(&L2)
&GLO(&L4)         SETA   0
&LTBL2(&L3)       SETA   &LTBL1(&L2)
&L3               SETA   &L3+1
                  AGO    .HIGH_TIME
.* ------------------------------------------------------------------ *
.USUAL_LOW        ANOP
&L4               SETA   ((&LTBL1(&L2)+&LTBL1(&L2-1)))/2
&L5               SETA   &LTBL1(&L2)
&GLO(&L5)         SETA   &L4
&LTBL2(&L3)       SETA   &L4
&L3               SETA   &L3+1
&LTBL2(&L3)       SETA   &LTBL1(&L2)
&L3               SETA   &L3+1
.* ------------------------------------------------------------------ *
.HIGH_TIME        ANOP
                  AIF    ((&LTBL1(&L2+1)-&LTBL1(&L2)) GT 1).USUAL_HIGH
                  AIF    (&LTBL1(&L2+1) NE &GINDEX).SET_NOHIGH
&L4               SETA   &LTBL1(&L2)
&GHI(&L4)         SETA   &GINDEX
&GDONE(&L4)       SETB   1
                  AGO    .INNER_LOOPEND
.SET_NOHIGH       ANOP
&L4               SETA   &LTBL1(&L2)
&GHI(&L4)         SETA   0
&GDONE(&L4)       SETB   1
                  AGO    .INNER_LOOPEND
.* ------------------------------------------------------------------ *
.USUAL_HIGH       ANOP
&L4               SETA   ((&LTBL1(&L2)+&LTBL1(&L2+1)))/2
&L5               SETA   &LTBL1(&L2)
&GHI(&L5)         SETA   &L4
&LTBL2(&L3)       SETA   &L4
&L3               SETA   &L3+1
&L4               SETA   &LTBL1(&L2)
&GDONE(&L4)       SETB   1
                  AGO    .INNER_LOOPEND
.* ------------------------------------------------------------------ *
.ENTRY_DONE       ANOP
&LTBL2(&L3)       SETA   &LTBL1(&L2)
&L3               SETA   &L3+1
.INNER_LOOPEND    ANOP
&L2               SETA   &L2+1
                  AIF    (&L2 LT &L1).TREE_INNERLOOP
.* ------------------------------------------------------------------ *
&L1               SETA   1
&L4               SETA   0
.MOVE_TABLES      ANOP
&LTBL1(&L1)       SETA   &LTBL2(&L1)
                  AIF    (NOT &GDONE(&L1)).NEXT_L1
&L4               SETA   &L4+1
.NEXT_L1          ANOP
&L1               SETA   &L1+1
                  AIF    (&L1 LT &L3).MOVE_TABLES
                  AIF    (&L4 LT &GINDEX).TREE_OUTERLOOP
.* ------------------------------------------------------------------ *
&L1       SETA  1
                   AIF   (&LSEED LT 10).LSEED_1
                   AIF   (&LSEED LT 100).LSEED_2
                   AIF   (&LSEED LT 1000).LSEED_3
MESSAGE_TBLSEED    DC    A(MESSAGE_&LSEED)
                   AGO   .SEED_SOURCE
.LSEED_3           ANOP
MESSAGE_TBLSEED    DC    A(MESSAGE_0&LSEED)
                   AGO   .SEED_SOURCE
.LSEED_2           ANOP
MESSAGE_TBLSEED    DC    A(MESSAGE_00&LSEED)
                   AGO   .SEED_SOURCE
.LSEED_1           ANOP
MESSAGE_TBLSEED    DC    A(MESSAGE_000&LSEED)
.SEED_SOURCE       ANOP
MESSAGE_TBLSTART   EQU   *
.SOURCE_LOOP       ANOP
&L2                SETA  &GLO(&L1)
&L3                SETA  &GHI(&L1)
                   AIF   (&L2 LT 10).L6_1
                   AIF   (&L2 LT 100).L6_2
                   AIF   (&L2 LT 1000).L6_3
&L6                SETC  'MESSAGE_&L2'
                   AGO   .L6_SOURCE
.L6_3              ANOP
&L6                SETC  'MESSAGE_0&L2'
                   AGO   .L6_SOURCE
.L6_2              ANOP
&L6                SETC  'MESSAGE_00&L2'
                   AGO   .L6_SOURCE
.L6_1              ANOP
&L6                SETC  'MESSAGE_000&L2'
.L6_SOURCE         ANOP
                   AIF   (&L3 LT 10).L7_1
                   AIF   (&L3 LT 100).L7_2
                   AIF   (&L3 LT 1000).L7_3
&L7                SETC  'MESSAGE_&L3'
                   AGO   .L7_SOURCE
.L7_3              ANOP
&L7                SETC  'MESSAGE_0&L3'
                   AGO   .L7_SOURCE
.L7_2              ANOP
&L7                SETC  'MESSAGE_00&L3'
                   AGO   .L7_SOURCE
.L7_1              ANOP
&L7                SETC  'MESSAGE_000&L3'
.L7_SOURCE         ANOP
&L8                SETC  '&GFLAG1(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG2(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG3(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG4(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG5(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG6(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG7(&L1)'.','
&L8                SETC  '&L8'.'&GFLAG8(&L1)'
&L9                SETC  '&L1'
                   AIF   (&L1 LT 10).L9_1
                   AIF   (&L1 LT 100).L9_2
                   AIF   (&L1 LT 1000).L9_3
&L9                SETC  'MESSAGE_&L9'
                   AGO   .L9_SOURCE
.L9_3              ANOP
&L9                SETC  'MESSAGE_0&L9'
                   AGO   .L9_SOURCE
.L9_2              ANOP
&L9                SETC  'MESSAGE_00&L9'
                   AGO   .L9_SOURCE
.L9_1              ANOP
&L9                SETC  'MESSAGE_000&L9'
.L9_SOURCE         ANOP
&L9                DC    CL12'&GMSGID(&L1)'
                   DC    AL1(&L8)
                   DC    &GMESSAGE(&L1)
                   DC    &GPROCESS(&L1)
                   AIF   (&GLO(&L1) NE 0).SOURCE_LOW
                   DC    A(0)
                   AGO   .HIGH_SOURCE
.SOURCE_LOW        ANOP
                   DC    A(&L6)
.HIGH_SOURCE       ANOP
                   AIF   (&GHI(&L1) NE 0).SOURCE_HIGH
                   DC    A(0)
                   AGO   .CHECK_L1
.SOURCE_HIGH       ANOP
                   DC    A(&L7)
.CHECK_L1          ANOP
                   AIF   (&L1 GT 1).SOURCE_BYPASS
MESSAGE_TBLENTRYLEN      EQU   *-&L9
.SOURCE_BYPASS     ANOP
&L1                SETA  &L1+1
                   AIF   (&L1 LE &GINDEX).SOURCE_LOOP
MESSAGE_TBLSTOP    EQU   *
                   MEXIT
.* ================================================================== *
.MNOTE1   MNOTE 8,'MSGID NOT SPECIFIED'
          MEXIT
.* ================================================================== *
.MNOTE2   MNOTE 8,'INVALID SETTING FOR FLAG1'
          MEXIT
.* ================================================================== *
.MNOTE3   MNOTE 8,'INVALID SETTING FOR FLAG2'
          MEXIT
.* ================================================================== *
.MNOTE4   MNOTE 8,'INVALID SETTING FOR FLAG3'
          MEXIT
.* ================================================================== *
.MNOTE5   MNOTE 8,'INVALID SETTING FOR FLAG4'
          MEXIT
.* ================================================================== *
.MNOTE6   MNOTE 8,'INVALID SETTING FOR FLAG5'
          MEXIT
.* ================================================================== *
.MNOTE7   MNOTE 8,'INVALID SETTING FOR FLAG6'
          MEXIT
.* ================================================================== *
.MNOTE8   MNOTE 8,'INVALID SETTING FOR FLAG7'
          MEXIT
.* ================================================================== *
.MNOTE9   MNOTE 8,'INVALID SETTING FOR FLAG8'
          MEXIT
.* ================================================================== *
.MNOTE10  MNOTE 8,'INVALID SETTING FOR MESSAGE'
          MEXIT
.* ================================================================== *
.MNOTE11  MNOTE 8,'INVALID SETTING FOR PROCESS'
          MEXIT
.* ================================================================== *
.MNOTE12  MNOTE 8,'FLAG1 IS ON AND MESSAGE IS OFF'
          MEXIT
.* ================================================================== *
.MNOTE13  MNOTE 8,'FLAG2 IS ON AND PROCESS IS OFF'
          MEXIT
.* ================================================================== *
.MNOTE14  ANOP
          AIF   (&GSET4).MEXIT14
          MNOTE   0,'THE ''MESSAGE_TBLSTOP'' ENTRY HAS BEEN DETECTED'
          MNOTE   0,'THIS AND SUBSEQUENT INVOCATIONS WILL BE IGNORED'
&GSET4    SETB    1
.* ------------------------------------------------------------------ *
.MEXIT14  ANOP
          MEXIT
.* ================================================================== *
.MNOTE15  ANOP
          AIF   (&GSET2).MEXIT15
          MNOTE   0,'THE ''MESSAGE_TBLSTART'' ENTRY HAS NOT BEEN DETECT+
               ED'
          MNOTE   0,'THIS AND SUBSEQUENT INVOCATIONS WILL BE IGNORED'
          MNOTE   0,'UNTIL THE ''MESSAGE_TBLSTART'' ENTRY IS DETECTED'
&GSET2    SETB    1
.* ------------------------------------------------------------------ *
.MEXIT15  ANOP
          MEXIT
.* ================================================================== *
.MNOTE16  ANOP
          AIF   (&GSET6).MEXIT16
&GSET5    SETB    1
          MNOTE   0,'THIS TABLE HAS MORE THAN 1500 ENTRIES'
          MNOTE   0,'SUBSEQUENT ENTRIES WILL BE IGNORED'
          MNOTE   0,'EXCEPT FOR THE ''MESSAGE_TBLSTOP'' ENTRY'
&GSET6    SETB    1
.* ------------------------------------------------------------------ *
.MEXIT16  ANOP
          MEXIT
.* ================================================================== *
.MNOTE17   ANOP
           MNOTE 8,'THIS TABLE HAS EQUAL KEYS'
           MNOTE 8,'MESSAGE:  &GMSGID(&L1)'
          MEXIT
.* ================================================================== *
.MNOTE18   ANOP
           MNOTE 8,'BOTH FLAG3 AND FLAG4 CANNOT BE ON'
          MEXIT
.* ================================================================== *
.MNOTE19   ANOP
           MNOTE 8,'FLAG4 CANNOT BE ON AND PROCESS=NO'
          MEND
