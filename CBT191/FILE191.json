{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011452000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE191.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE191.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x05\\x06'", "DS1TRBAL": "b'\\x93\\x06'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x81\\x00\\x0b\\x01\\x82\\x00\\x01\\x00\\x06'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$INDEX": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x11\\x08\\x00\\x1c\\x00\\x19\\x00\\x06\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T11:08:00", "lines": 28, "newlines": 25, "modlines": 6, "user": "HWSYS4"}, "text": "THESE MODS ARE IN USE AT THE CALIFORNIA HEALTH AND WELFARE DATA CENTER\nINSTALLATION CODE HWC.   THEY ALLOW THE INSTALLATION TO HAVE REAL JOB\nCARDS AND JESDS OUTPUT CARDS FOR STARTED TASKS.\n    WALT SAPP\n    HWDC MS#513\n    1651 ALHAMBRA BLVD\n    SACRAMENTO, CALIFORNIA 95816\n    NODE NAME         HWDC\n    TSO ID            HWSYS4\n    TELEPHONE         (916) 739-7671\n    FAX               (916) 739-7770\n    SHARE CODE        HWC\n    JES2 RELEASE      2.2.0\n\nTHIS IS A BRIEF EXPLANATION OF THE MEMBERS IN THIS DATASET.\n\nMEMBER        DESCRIPTION\n\nASMEXIT       MY JCL FOR ASSEMBLING AN EXIT\nBLDEXIT       MY JCL FOR LINKING AN EXIT\nHASPUSR1      LOADS THE STC JCL TABLE.\nEXITRDR       EXIT 2 ACTUALLY INSERTS THE JCL FOR STARTED TASKS.\n              (YOU MAY DELETE THE REST OF THE CODE IN MODULE.)\nEXIT024       INVOKES HASPUSR1 AT JES2 INITIALIZATION.\nEXIT005       EXIT 5 CODE TO RELOAD THE TABLE WITHOUT RESTARTING JES2.\n              (THIS IS A STAND-ALONE EXIT I CUT OUT OF OUR STANDARD\n               EXIT5.)\nSTCTBL        SAMPLE STC JCL TABLE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMEXIT": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x11\\x15\\x00\\x1e\\x00\\x1d\\x00\\x0f\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T11:15:00", "lines": 30, "newlines": 29, "modlines": 15, "user": "HWSYS4"}, "text": "//HWSYS4C JOB (HW513SM00P,C513,,9,0),'ASM EXIT005',\n//  CLASS=S,MSGCLASS=Y\n//HASPASM PROC ASMBLR=IEV90,MODULE=HASPDOC,S1='SYS2.SP22',\n// MVOL=NEWRES,DVOL=NEWRES\n//* REFER  INLINE MACRO IN HWSYS4.STC.MODS(ASMEXIT)\n//* COMPID SYSTEM\n//* DOC    THIS PROCEDURE IS USED TO ASSEMBLE JES2 EXIT   MODULES.\n//ASM     EXEC PGM=&ASMBLR,\n// PARM='XREF(SHORT),BUFSIZE(MAX)',\n// REGION=2048K\n//* THE SYSLIB CONCATINATION MUST INCLUDE A D.S. WITH STCTBL!!!!!\n//SYSLIB    DD DSN=HWSYS4.STC.MODS,DISP=SHR,DCB=BLKSIZE=32720\n//          DD DSN=&S1..HASPSRC,DISP=SHR\n//          DD DSN=SYS1.SMPMTS,DISP=SHR,\n// VOL=SER=&MVOL,UNIT=SYSDA <-----------------------CAUTION!!!!!\n//          DD DSN=SYS1.MODGEN,DISP=SHR,\n// VOL=SER=&DVOL,UNIT=SYSDA <-----------------------CAUTION!!!!!\n//          DD DSN=SYS1.MACLIB,DISP=SHR,\n// VOL=SER=&MVOL,UNIT=SYSDA <-----------------------CAUTION!!!!!\n//SYSUT1    DD DSN=&&SYSUT1,UNIT=VIO,SPACE=(1700,(1200,300))\n//SYSUT2    DD DSN=&&SYSUT2,UNIT=VIO,SPACE=(1700,(1200,300))\n//SYSUT3    DD DSN=&&SYSUT3,UNIT=VIO,SPACE=(1700,(1200,300))\n//*YSPRINT  DD SYSOUT=*\n//SYSPRINT  DD DSN=&S1..HASPLIST(&MODULE),DISP=OLD <--NOTE: MUST ALLOC\n//SYSIN     DD DSN=HWSYS4.STC.MODS(&MODULE),DISP=SHR E: MUST ALLOC\n//*YSLIN    DD SYSOUT=Z,HOLD=YES\n//SYSLIN    DD DSN=&S1..HASPOBJ(&MODULE),DISP=OLD, <--NOTE: MUST ALLOC C\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=400)\n// PEND\n//S05 EXEC HASPASM,MODULE=EXIT005\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BLDEXIT": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x10\\x13\\x00\\x17\\x00\\x17\\x00\\x00\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T10:13:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "HWSYS4"}, "text": "//HWSYS4L JOB (HW513SM00P,C513,2,1,0),'LINK EXIT  ',\n// CLASS=R,MSGCLASS=Y TYPRUN=HOLD\n/*JOBPARM RESTART=Y\n//EXITBLD PROC LINKLIB='SYS1.JES2.LINKLIB',LINKUNT=SYSDA,\n// S1='SYS2.SP22',LINKVOL=IPORES\n//* REFER  HWSYS4.JES2220.MODS(EXITBLD3)\n//* COMPID SYSTEM\n//* DOC    THIS PROCEDURE IS USED TO LINKEDIT EXITS INTO THE SYSTEM\n//*        FROM OBJECT IN &S1..HASPOBJ DATASET.\n//*\n//* NOTE: SYSX.HASPOBJ MUST BE BUILT BEFORE THIS JOB IS RUN\n//EXIT    EXEC PGM=IEWL,PARM='XREF,LET,LIST,NCAL,AMODE=31',\n// REGION=512K\n//OBJ DD DSN=&S1..HASPOBJ,DISP=SHR\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20),,,ROUND)\n//SYSLMOD   DD DSN=&LINKLIB,UNIT=&LINKUNT,\n//  VOL=SER=&LINKVOL,DISP=SHR\n// PEND\n// EXEC EXITBLD,LINKVOL= LINKLIB='SYS1.UTLLIB'\n//EXIT.SYSLIN DD *\n INCLUDE OBJ(EXIT024)\n NAME EXIT024(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXITRDR": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x10H\\x04+\\x04+\\x00\\x00\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T10:48:00", "lines": 1067, "newlines": 1067, "modlines": 0, "user": "HWSYS4"}, "text": "EXITRDR  TITLE ' H W D C  USER EXIT CODE FOR HASPRDR ROUTINES'    HWDC\n***************************************************************** HWDC\n*                                                               * HWDC\n* MODULE NAME = EXITRDR      H W D C  EXIT 002, 003 AND 004.    * HWDC\n*                                                               * HWDC\n* DESCRIPTIVE NAME = USER EXIT MODULE FOR JOBCARD SCAN,         * HWDC\n*                    AND JCL/JECL SCAN                          * HWDC\n* STATUS =  OS/VS2 MVS/SP3  SEE &VERSION (BELOW) FOR JES2 LEVEL.* HWDC\n*                                                               * HWDC\n* FUNCTION = PROVIDE SUPPORT FOR HWDC MODS THAT HANDLE OUR      * HWDC\n*            SPECIAL REQUIREMENTS FOR THE JOBCARD, AND OUR OWN  * HWDC\n*            SPECIAL CONTROL CARDS. BOTH ARE TAKE FROM HASPRDR. * HWDC\n*            INSERT JCL FOR STARTED TASKS                       * HWDC\n*                                                               * HWDC\n* NOTES = SEE BELOW                                             * HWDC\n*                                                               * HWDC\n*    DEPENDENCIES =                                             * HWDC\n*                                                               * HWDC\n*    RESTRICTIONS =                                             * HWDC\n*                                                               * HWDC\n*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION.      * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n*    PATCH LABEL = NONE                                         * HWDC\n*                                                               * HWDC\n* MODULE TYPE = PROCEDURE ( CSECT TYPE )                        * HWDC\n*                                                               * HWDC\n*    PROCESSOR = ASSEMBLER F                                    * HWDC\n*                                                               * HWDC\n*    MODULE SIZE = SEE $DLENGTH MACRO EXPANSION(S) AT END OF    * HWDC\n*                  ASSEMBLY.                                    * HWDC\n*                                                               * HWDC\n*    ATTRIBUTES = READ ONLY, REENTRANT (BY JES2 DEFINITION).    * HWDC\n*                                                               * HWDC\n* ENTRY POINT = HWDCX002 AND   HWDCX004 AND HWDCX003            * HWDC\n*                                                               * HWDC\n*    PURPOSE = SEE FUNCTION (ABOVE).                            * HWDC\n*                                                               * HWDC\n*    LINKAGE = SEE ENTRY POINT DOCUMENTATION.                   * HWDC\n*                                                               * HWDC\n* INPUT =  SEE ENTRY POINT DOCUMENTATION.                       * HWDC\n*                                                               * HWDC\n* OUTPUT = MODIFIED JCT JRT AND JQE AS NECESSARY                * HWDC\n*          AND IF NECCESSARY THE JOB                            * HWDC\n*          IS FLUSHED.                                          * HWDC\n*                                                               * HWDC\n* EXIT-NORMAL = RETURN TO CALLER USING RETURN MACRO             * HWDC\n*                                                               * HWDC\n* EXIT-ERROR = NONE                                             * HWDC\n*                                                               * HWDC\n* EXTERNAL REFERENCES = SEE BELOW                               * HWDC\n*                                                               * HWDC\n*    ROUTINES = NONE                                            * HWDC\n*                                                               * HWDC\n*    DATA AREAS = SEE BELOW                                     * HWDC\n*                                                               * HWDC\n*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION               * HWDC\n*                                                               * HWDC\n* TABLES = SEE BELOW                                            * HWDC\n*                                                               * HWDC\n* MACROS =                                                      * HWDC\n*                                                               * HWDC\n* CHANGE ACTIVITY                                               * HWDC\n*                                                               * HWDC\n*     RELEASE SP3 = NONE                                        * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         TITLE '    H A S P G E N   P A R A M E T E R S    '      HWDC\n         COPY  $HASPGBL            COPY HASPGEN PARAMETERS        HWDC\n         TITLE 'HASP MODULE INFORMATION TABLE (MIT) '             HWDC\nEXITRDR  $MODULE SYSP=(NOGEN,GEN,NODATA,NOGEN,NOGEN),                  X\n               $HASPEQU,                                               X\n               ASCB,                                                   X\n               CVT,                                                    X\n               RPL,                                                    X\n               $BUFFER,                                                X\n               $JCT,                                                   X\n               $JQE,                                                   X\n               $PCE,                                                   X\n               $SCAT,                                                  X\n               $XECB,                                                  X\n               $PDDB,                                                  X\n               $TAB,                                                   X\n               $CAT,                                                   X\n               $DCT,                                                   X\n               $HCT,                                                   X\n               $HFAME,                                                 X\n               $PADDR,                                                 X\n               $IOT,                                                   X\n               $KIT,                                                   X\n               $LRC,                                                   X\n               $MITETBL,                                               X\n               $MIT,                                                   X\n               $NHD,                                                   X\n               $RDRWORK,                                               X\n               $QSE,                                                   X\n               $RAT,                                                   X\n               $RDT,                                                   X\n               $SMF,                                                   X\n               $SVT,                                                   X\n               UCB,                                                    X\n               $XIT\n         $JRT  DOC=NO\n         SPACE 3                                                  HWDC\n  TITLE 'HWDC EX002 (JOBCARD) EX003 (ACCT) EX004 (JCL/JECL)'      HWDC\n         SPACE 5                                                  HWDC\n*                                                                 HWDC\n         TITLE 'HWDC EXIT002 FOR JOBCARD SCAN SUPPORT    '        HWDC\n***************************************************************** HWDC\n*                                                               * HWDC\n*           J O B  C A R D  S C A N  R O U T I N E  .  EXIT002. * HWDC\n*                                                               * HWDC\n*               ALSO KNOWN AS :                                 * HWDC\n*                                                               * HWDC\n*              HWDC013 - INITIAL CODE FOR HWDC RESOURCE CONTROL * HW013\n*                                                               * HWDC\n***************************************************************** HWDC\n* ENTRY POINT DOCUMENTATION:                                    * HWDC\n*                                                               * HWDC\n*     REGISTERS AT ENTRY;                                       * HWDC\n*                                                               * HWDC\n*           R0  =       = +0 - INITIAL JOBCARD.                 * HWDC\n*                         +4 - CONTINUATION JOBCARD.            * HWDC\n*           R1  =       = ADDRESS OF 3 WORD PARM LIST.          * HWDC\n*                         WORD1 - (+0) POINTER TO JOB           * HWDC\n*                                      STATEMENT IMAGE BUFFER.  * HWDC\n*                         WORD2 - (+4) POINTS TO EXIT FLAG      * HWDC\n*                                      BYTE RDWFLAGX IN PCE.    * HWDC\n*                         WORD3 - (+8) POINTS TO THE JCTXWRK    * HWDC\n*                                      FIELD IN THE JCT.        * HWDC\n*           R2  =       = N/A                                   * HWDC\n*           R3  =       = N/A                                   * HWDC\n*           R4  =       = N/A                                   * HWDC\n*           R5  =       = N/A                                   * HWDC\n*           R6  = BASE4 = N/A                                   * HWDC\n*           R7  =       = N/A                                   * HWDC\n*           R8  = BASE3 = N/A                                   * HWDC\n*           R9  = JRT   = JRT                                   * HWDC\n*           R10 = JCT   = ADDRESS OF JCT                        * HWDC\n*           R11 = R11 = ADDRESS OF HCT                          * HWDC\n*           R12 = R12 = OUR BASE                                * HWDC\n*           R13 = SAVE  = ADDRESS OF PCE                        * HWDC\n*           R14 = LINK  = RETURN ADDRESS                        * HWDC\n*           R15 =       = ENTRY ADDRESS                         * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         SPACE 3                                                  HWDC\nHWDCX002 $ENTRY BASE=R12           PROVIDE PROCESSOR ENTRY POINTHWDC\n         $SAVE                     SAVE CALLERS REGISTERS         HWDC\n         LR    R12,R15             ESTABLISH BASE                 HWDC\n         USING JCT,R10\n         LM    R2,R4,0(R1)         GET PARAMETERS\n         CLI   JCTJOBID,C'J'       BYPASS CREATE OF JRT         HW00012\n         BNE   EX2STC00             IF NOT A BATCH JOB          HW00012\n         LTR   R7,R0               IS THIS FIRST TIME FOR JOB\n         BNZ   CHKNJEX2             NO - GO CHECK NJE\n         USING JCT,R10             ADDRESS THE JCT                HWDC\n         USING PCE,R13             ADDRESS THE PCE                HWDC\n         MVI   JCTUSER4,C' '       BLANK -                        HW013\n         MVC   JCTUSER4+1(15),JCTUSER4 OUT NAMES                  HW013\n         XC    JCTUSER4+16(1),JCTUSER4+16 CLEAR FLAG BYTE.        HW013\n*                                                               HW00012\n*        C R E A T E   T H E   J R T                            HW00012\n*                                                               HW00012\n         SPACE 1                                                HW00012\n         BAL   R6,RGETBUF          GET A BUFFER FOR THE JRT     HW00012\n         LR    R9,R1               ESTABLISH ADDRESSABILITY     HW00012\n         ST    R9,JCTUSER1         SAVE POINTER                 HW00012\n         ST    R9,PCEUSER0         SAVE POINTER                 HW00012\n         MVI   JCTUSERF,X'00'\n         LA    R14,JRTSTART        GET ADDRESS OF START OF JRT  HW00012\n         LH    R15,$BUFSIZE         AND LENGTH OF JRT FIELDS    HW00012\n         SLR   R1,R1               SET TO ZERO FOR CLEARING     HW00012\n         MVCL  R14,R0               AND CLEAR JRT               HW00012\n         MVC   JRTID,RJRTID        SET JRT ID                   HW00012\n         LH    R1,$BUFLENG         SET BLOCK                    HW00012\n         STH   R1,JRTLENG           LENGTH                      HW00012\nCHKNJEX2 EQU   *            ROUTINE TO CHECK FOR USER= FROM NJE\n         TM    JCTUSERF,X'01'      ALREADY FOUND USER\n         BO    EX2RET00            YES\n         L     R6,PCEDCT\n         USING DCT,R6\n         CLC   DCTRDNOD,=AL2(28)    I 'OWN' BELOW HERE\n         BL    EX2RET00\n         CLC   DCTRDNOD,=AL2(46)    MY NODE\n         BE    EX2RET00\n         CLC   DCTRDNOD,=AL2(127)   I 'OWN' ABOVE HERE\n         DROP  R6\n         BH    EX2RET00\n         LA    R8,70\n         LTR   R7,R7\n         BNZ   CONTEX2\nJOBLOOPA EQU   *               FIND ACCOUNT CODE ON JOBCARD\n         LA    R2,1(,R2)       POINT TO NEXT POSITION\n         CLC   =C' JOB ',0(R2) IS THIS THE WORD JOB\n         BE    FNDJOB          YES - GET TO MAIN LOOP\n         BCT   R8,JOBLOOPA     NO - CONTINUE SCAN\n         B     EX2RET08        BAD CARD\nFNDJOB   EQU   *\n         LA    R2,4(R2)        POINT TO BLANK\n         SH    R8,=H'5'        ADJUST COUNTER\n         BZ    EX2RET08        BAD CARD\n         B     FNDPARAM\nCONTEX2  EQU   *\n         LA    R2,2(R2)        POINT TO BLANK\n         CLI   0(R2),C'*'      IS THIS A COMMENT\n         BE    EX2RET00        YES - GET OUT\n         BCTR  R8,0            ADJUST COUNTER\n         BCTR  R8,0            ADJUST COUNTER\nFNDPARAM LA    R2,1(R2)       POINT TO NEXT POSITION\n         CLI   0(R2),C' '     IS IT BLANK\n         BNE   FND1STD        NO - FOUND A PARAMETER\n         BCT   R8,FNDPARAM    CONTINUE SCAN\n         B     EX2RET08       BAD CARD\nFND1ST   EQU   *\n         CLI   0(R2),X'7D'    IS IT QOUTE\n         BE    FNDQUO         YES - GO FIND MATCH\n         CLC   =C'USER=',0(R2)\n         BE    USRFND\n         CLC   =C', ',0(R2)        VALID END TO THIS CARD\n         BE    EX2RET00            YES - OK\n         CLI   0(R2),C' '          END OF JOB STATEMENT?\n         BE    EX2RET08            YES - BAD JOB STATEMENT\nFSTLOOP  EQU   *\n         LA    R2,1(R2)            POINT TO NEXT POSITION\nFND1STD  EQU   *\n         BCT   R8,FND1ST           CONTINUE SCAN\n         CLI   0(R2),C','          COMMA IN LAST POSITION?\n         BE    EX2RET00            YES - OK\n         B     EX2RET08            NO - BAD JOBCARD\nFNDQUO   EQU   *\n         BCT   R8,QUOLOOP         ADJUST COUNTER\n         B     EX2RET00           CHECK FOR CONTINUATION\nQUOLOOP  EQU   *\n         LA    R2,1(R2)\nQUOLOOP2 EQU   *\n         CLI   0(R2),X'7D'        MATCHING QUOTE\n         BE    FSTLOOP\n         BCT   R8,QUOLOOP\n         B     EX2RET00\nUSRFND   EQU   *\n         CLI   5(R2),C'A'          IS THERE A USER\n         BL    EX2RET08            NO - BAD JOBCARD\n         OI    JCTUSERF,X'01'      TURN ON SWITCH\n         B     EX2RET00\nEX2STC00 EQU   *\n         CLI   JCTJOBID,C'S'       IS IT A STC\n         BNE   EX2RET00            NO - MUST BE A TSU\nSTBLOAD  EQU   *\n         L     R15,$USER1          HAS THE TABLE ADDRESS BEEN LOADED?\n         LTR   R15,R15\n         BP    STBLOK              YES - OK\n         BZ    STDEFLT             EMPTY - USE THE DEFAULT?\n         LA    R14,10\nLOOPSTBL EQU   *\n        $WAIT ABIT\n         BCT   R14,LOOPSTBL\n         L     R15,$USER1          HAS THE TABLE ADDRESS BEEN LOADED?\n         LTR   R15,R15\n         BP    STBLOK              YES - OK\n         BZ    STDEFLT             EMPTY - USE THE DEFAULT?\n        $WTO   TBLMSG,L'TBLMSG,JOB=NO,CLASS=$ACTION,ROUTE=$MAIN\n         B     STBLOAD\nSTDEFLT  EQU   *\n         LA    R14,EX2STBL         NO - GET TABLE POINTER\n         ST    R14,$USER1          SAVE IT FOR LATER\nSTBLOK   EQU   *\n         LA    R14,2(R2)           POINT TO JOB IMAGE\nSTCJBLP1 EQU   *\n         CLC   0(5,R14),=C' JOB '  IS IT THE WORD?\n         BE    ENDSTCJB            YES - GO MOVE OUR STUFF\n         LA    R14,1(,R14)         NO - POINT TO THE NEXT POSITION\n         B     STCJBLP1            AND CHECK IT\nENDSTCJB EQU   *\n         LR    R15,R14             GET POINTER\n         SR    R15,R2              SUBTRACT STARTING POINT\nSCTJBLP2 EQU   *\n         CH    R15,=H'10'          ARE THERE 10 POSITIONS?\n         BNL   ESTCLP2             YES - MOVE MY STUFF\n         LA    R15,1(,R15)         NO - ADD 1\n         MVI   0(R14),C' '         BLANK  OUT THE POSITION\n         LA    R14,1(,R14)         POINT TO NEXT POSITION\n         B     SCTJBLP2\nESTCLP2  EQU   *\n         MVC   0(L'STCDEF,R14),STCDEF\n         LR    R14,R2              POINT BACK TO BEGINNING\n         L     R15,$USER1\nSTCLP1   EQU   *\n         CLI   0(R15),X'00'        IS IT END\n         BE    STCLP3I\n         CLI   0(R15),X'FF'        TABLE EXTENSION?\n         BE    EX2RET00            LOAD NEXT POINTER\n         CLC   2(8,R14),2(R15)     DOES JOB MATCH TABLE?\n         BE    EX2STCFN            YES - GO MODIFY CARD\n         CLC   76(4,R15),=C'MORE'  ARE THERE 2 CARDS?\n         BNE   STCLP2              NO - JUST JOB CARD\n         LA    R15,STCENT(,R15)    EXTRA BUMP FOR OUTPUT\nSTCLP2   EQU   *\n         LA    R15,STCENT(,R15)    POINT TO NEXT ENTRY\n         B     STCLP1\nSTCLP3I  EQU   *\n         SLR   R14,R14             CLEAR REGISTER\n         LA    R15,EX2SGEN         POINT TO GENERIC TABLE\nSTCLPG   EQU   *\n         CLI   1(R15),X'00'        IS IT END\n         BE    ESTCLPG             YES - GO CHECK OLD TABLE\n         IC    R14,0(R15)          GET LENGTH\n         EX    R14,EX2GCLC         EXECUTE CLC\n         BE    EX2MVGEN            FOUND ONE\n         LA    R15,160(,R15)       POINT TO NEXT ENTRY\n         B     STCLPG              AND CHECK\nEX2GCLC  CLC   1(,R15),1(R2)\nEX2MVGEN EQU   *\n         MVC   10(70,R2),10(R15)   MOVE GENERIC JOB CARD TO JES2\n         LA    R14,2(R2,R14)       POINT TO SUFFIX\n         MVC   21(3,R2),0(R14)     MOVE ACCOUNT SUFFIX\n         B     EX2GEND             GO CHECK FOR SECOND CARD\nESTCLPG  EQU   *\n         LA    R14,STCTABLE       POINT TO STARTED TASK TABLE\n         SLR   R15,R15             ZERO WORK REG\nSTCLP3   NULL\n         CLI   0(R14),X'FF'        END OF TABLE?\n         BE    EX2RET00            YES - BRANCH\n         IC    R15,0(R14)          GET LENGTH\n         EX    R15,STCLC3          EXECUTE COMPARE\n         BNE   STCINCR3            NO - GO CHECK NEXT\n         MVC   18(3,R2),9(R14)     OVERLAY DEFAULT ACCOUNT CODE\n         MVC   28(3,R2),9(R14)     OVERLAY DEFAULT ROOM NUMBER\n         B     EX2RET00\nSTCINCR3 NULL\n         LA    R14,1+8+3(R14)\n         B     STCLP3\nSTCLC3   CLC   1(0,R14),2(R2)      ***EXECUTED***\nEX2STCFN EQU   *\n         MVC   0(80,R2),0(R15)\nEX2GEND  EQU   *\n         CLC   76(4,R15),=C'MORE'  IS THERE AN OUTPUT\n         BNE   EX2RET00            NO - ALL DONE\n         OI    RDWFLAGX,RDWXXSNC\n         MVC   JCTXWRK(80),STCENT(R15)\n         B     EX2RET00\nEX2RET08 MVC   JCTXWRK(L'MYMESS),MYMESS MOVE IN MY MESSAGE\n         OI    RDWFLAGX,RDWXXSEM INDICATE MY MESSAGE\nEX2RE08A LA    R15,8               SET FLUSH RETURN CODE          HWDC\n         $RETURN RC=(R15)          RETURN TO CALLER               HWDC\nEX2RET00 LA    R15,0               SET ZERO RETURN CODE.        HW00012\n         $RETURN RC=(R15)          RETURN TO CALLER             HW00012\n         SPACE 3                                                HW00012\nRGETBUF  CLI   PCEBUFCT,20         IS BUF COUNT UP TO 20...     HW00012\n         BNH   RGETOK              BR IF NO TO GET BUFFER       HW00012\n        $WAIT  BUF                 WAIT IF 20 BUFFS THIS D/T    HW00012\n         B     RGETBUF             TRY AGAIN                    HW00012\nRGETOK   EQU   *                                                HW00012\n        $GETBUF WAIT=YES           GET OUTPUT BUFFER            HW00012\n         BR    R6                  RETURN                       HW00012\n         SPACE 3                                                  HWDC\n         TITLE 'HWDC EXIT 002 CONSTANTS AND DSECTS      '         HWDC\n***************************************************************** HWDC\n*    CONSTANTS, DSECTS AND EQUATES FOR JOBCARD SUPPORT.         * HWDC\n***************************************************************** HWDC\n         SPACE 1                                                  HWDC\nRJRTID   DC    CL4'JRT'\nMYMESS   DC    C'USERID AND PASSWORD REQUIRED'\nSTCDEF   DC    C' JOB (HW5130000P,C513,,100),MSGLEVEL=1 '\nSTCTABLE DC    X'03',CL8'ASAP',C'610'\n         DC    X'04',CL8'OLTEP',C'620'\n         DC    X'05',CL8'SASWTR',C'321'\n         DC    X'02',CL8'VPS',C'532'\n         DC    X'06',CL8'EPILOGC',C'511'\n         DC    X'04',CL8'MPWTR',C'532'\n         DC    X'03',CL8'OCCI',C'532'\n         DC    X'03',CL8'OMST',C'532'\n         DC    X'04',CL8'HWHSE',C'610'\n         DC    X'02',CL8'VCI',C'422'\n         DC    X'03',CL8'DCMS',C'422'\n         DC    X'03',CL8'EMC2',C'330'\n         DC    X'03',CL8'HWCI',C'532'\n         DC    X'02',CL8'DB2',C'512'\n         DC    X'02',CL8'DBS',C'512'\n         DC    X'02',CL8'DHD',C'512'\n         DC    X'02',CL8'DHW',C'512'\n         DC    X'03',CL8'ZSAM',C'512'\n         DC    X'02',CL8'NET',C'531'\n         DC    X'06',CL8'WITNESS',C'532'\n         DC    X'02',CL8'CDC',C'610'\n         DC    X'02',CL8'STC',C'630'\n         DC    X'02',CL8'STK',C'630'\n         DC    X'02',CL8'IBM',C'620'\n         DC    X'02',CL8'AMD',C'640'\n         DC    X'02',CL8'AMD',C'640'\n         DC    X'FF',CL8'    ',C'600'\n         DC    X'FF',CL8'    ',C'600'\n         DC    X'FF',CL8'    ',C'600'\n         DC    X'FF',CL8'    ',C'600'\n         LTORG                                                    HWDC\nTBLMSG  $MSG   999,'THE STARTED TASK JOB CARD TABLE MAY BE BROKEN'\nEX2SGEN  EQU   *\n         DC    X'03'\n         DC    CL39'/ADA???   JOB (HWADATRN0T,C512,,900),MS'\n         DC    CL36'GCLASS=X,NOTIFY=HWADAB     '\n         DC    CL04'MORE'\n         DC    CL40'//SAR   OUTPUT DEFAULT=Y,JESDS=ALL,CLASS'\n         DC    CL40'=A,DEST=DBSAR                           '\n         DC    X'05'\n         DC    CL39'/HWADA??? JOB (HWADATRN0T,C512,,900),MS'\n         DC    CL36'GCLASS=0,NOTIFY=HWADAB      '\n         DC    CL04'MORE'\n         DC    CL40'//SAR   OUTPUT DEFAULT=Y,JESDS=ALL,CLASS'\n         DC    CL40'=A,DEST=DBSAR                           '\n         DC    X'0000'\nSTCENT   EQU   80\nEX2STBL  EQU   *\n         DC    CL40'//SARHW    JOB (HW5130000P,C513,,100) '\n         DC    CL40' '\n         DC    CL40'//SARHW1   JOB (HW5130000P,C513,,100) '\n         DC    CL40' '\n         DC    CL40'//SARHW2   JOB (HW5120000P,C512,,100) '\n         DC    CL40' '\n         DC    CL40'//SARCS    JOB (CSSAR0000P,TSAR,,100) '\n         DC    CL40' '\n         DC    CL40'//SAREM    JOB (EMPSG7000P,EZDX,,500) '\n         DC    CL40' '\n*                            1         2         3         4         5\n*                   12345678901234567890123456789012345678901234567890\n         DC    CL40' '\n         DC    CL40' '\n         COPY  STCTBL\n         DC    X'0000'      END OF TABLE\n         SPACE 1                                                  HWDC\n         TITLE 'HWDC EXIT003 ACCOUNT FIELD SCAN FOR ROOM#'        HWDC\n***************************************************************** HWDC\n* ENTRY POINT = HWDCX003                                        * HWDC\n*                                                               * HWDC\n*    PURPOSE = SEE FUNCTION (ABOVE).                            * HWDC\n*                                                               * HWDC\n*    LINKAGE = SEE ENTRY POINT DOCUMENTATION.                   * HWDC\n*                                                               * HWDC\n* INPUT =  SEE ENTRY POINT DOCUMENTATION.                       * HWDC\n*                                                               * HWDC\n* OUTPUT = MODIFIED JCT JRT AND JQE AS NECESSARY                * HWDC\n*          AND IF NECCESSARY THE JOB                            * HWDC\n*          IS FLUSHED.                                          * HWDC\n*                                                               * HWDC\n* EXIT-NORMAL = RETURN TO CALLER USING RETURN MACRO             * HWDC\n*                                                               * HWDC\n* EXIT-ERROR = NONE                                             * HWDC\n*                                                               * HWDC\n* EXTERNAL REFERENCES = SEE BELOW                               * HWDC\n*                                                               * HWDC\n*    ROUTINES = NONE                                            * HWDC\n*                                                               * HWDC\n*    DATA AREAS = SEE BELOW                                     * HWDC\n*                                                               * HWDC\n*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION               * HWDC\n*                                                               * HWDC\n* TABLES = SEE BELOW                                            * HWDC\n*                                                               * HWDC\n* MACROS =                                                      * HWDC\n*                                                               * HWDC\n* CHANGE ACTIVITY                                               * HWDC\n*                                                               * HWDC\n*     RELEASE SP3 = NONE                                        * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n***************************************************************** HWDC\n*                                                               * HWDC\n*  A C C O U N T FIELD S C A N R O U T I N E . E X I T 0 0 3 .  * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n* ENTRY POINT DOCUMENTATION:                                    * HWDC\n*                                                               * HWDC\n*     REGISTERS AT ENTRY;                                       * HWDC\n*                                                               * HWDC\n*           R0  =       = LENGTH OF ACCOUNT FIELD               * HWDC\n*           R1  =       = ADDRESS OF 3 WORD PARM LIST.          * HWDC\n*                         WORD1 - (+0) POINTER TO ACCOUNTING    * HWDC\n*                                      FIELD(JCTWORK IN THE JCT.* HWDC\n*                         WORD2 - (+4) POINTS TO EXIT FLAG      * HWDC\n*                                      BYTE RDWFLAGX IN PCE.    * HWDC\n*                         WORD3 - (+8) POINTS TO THE JCTXWRK    * HWDC\n*                                      FIELD IN THE JCT.        * HWDC\n*           R2  =       = ADDRESS OF TYPE 6 SMF RECORD.         * HWDC\n*           R3  =       = N/A                                   * HWDC\n*           R4  =       = N/A                                   * HWDC\n*           R5  =       = N/A                                   * HWDC\n*           R6  = BASE4 = N/A                                   * HWDC\n*           R7  =       = N/A                                   * HWDC\n*           R8  = BASE3 = N/A                                   * HWDC\n*           R9  = JRT   = JRT                                   * HWDC\n*           R10 = JCT   = ADDRESS OF JCT                        * HWDC\n*           R11 = R11 = ADDRESS OF HCT                          * HWDC\n*           R12 = R12 = OUR BASE                                * HWDC\n*           R13 = SAVE  = ADDRESS OF PCE                        * HWDC\n*           R14 = LINK  = RETURN ADDRESS                        * HWDC\n*           R15 =       = ENTRY ADDRESS                         * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         SPACE 3                                                  HWDC\nHWDCX003 $ENTRY BASE=R12             PROVIDE PROCESSOR ENTRY POINTHWDC\n         $SAVE                     SAVE CALLERS REGISTERS         HWDC\n         LR    R12,R15             ESTABLISH BASE                 HWDC\n         USING JCT,R10             ADDRESS THE JCT                HWDC\n         USING PCE,R13             ADDRESS THE PCE                HWDC\n         MVC   JCTUSER1,PCEUSER0\n         TM    JCTJOBFL,JCTBATCH\n         BO    CHKNJE00\n         TM    JCTJOBFL,JCTSTCJB\n         BO    C513\nDBUMP    LA    R3,JCTWORK        BUILD PHONY ROOM IN CASE\nBUMPLOOP CLI   0(R3),X'7D'\n         BE    BUMP\n         CLI   0(R3),C'('\n         BNE   NOBUMP\nBUMP     LA    R3,1(R3)          BUMP 1 POSITION\n         B     BUMPLOOP\nNOBUMP   EQU   *\n         CLI   0(R3),C' '        IS THERE AN ACCOUNT CODE?\n         BNH   EX3RET00          NO - ALL DONE\n         MVC   JCTROOMN(1),0(R3) PICK UP 1ST POS. OF ACCOUNT\n         MVC   JCTROOMN+1(3),=C'$$$'\n         MVC   JCTUSER9(8),2(R3) MOVE LAST 8 POSITIONS OF ACCOUNT\n         MVC   JCTACCTN,0(R3)       SAVE ACCOUNT CODE\n         MVC   JCTNACCT(6),0(R3)       SAVE ACCOUNT CODE\n         MVC   JCTNACCT+2(3),=C'950'\n         LA    R1,IDTABLE-3      ID TABLE MINUS 1 ENTRY LENGTH\nIDLOOP   NULL\n         LA    R1,3(R1)           BUMP TO NEXT ENTRY\n         CLI   0(R1),X'FF'        END OF TABLE?\n         BE    ENDID               YES\n         CLC   0(2,R3),0(R1)      CHECK NEXT\n         BNE   IDLOOP             NOT THE ONE\n         MVC   JCTROOMN(1),2(R1)  MOVE IN THE TMS CODE\nENDID    CLC   0(2,R3),=C'HW'\n         BNE   EX3RET00\n         MVI   JCTROOMN,C'C'\n         MVC   JCTROOMN+1(3),2(R3)\n         B     EX3RET00\nC513     EQU   *                    SAVE ACCOUNT INFO FOR STCS\n         LA    R3,JCTWORK           POINT TO ACCOUNT FIELD\n         MVC   JCTACCTN,1(R3)       SAVE ACCOUNT CODE\n         MVC   JCTNACCT(6),1(R3)       SAVE ACCOUNT CODE\n         MVC   JCTNACCT+2(3),=C'950'\n         MVC   JCTUSER9(8),3(R3) MOVE LAST 8 POSITIONS OF ACCOUNT\n         B     EX3RET00\nIDTABLE  NULL\n         DC    C'CCI'\n         DC    C'CHF'\n         DC    C'CST'\n         DC    C'EOO'\n         DC    C'MMI'\n         DC    C'OAA'\n         DC    C'RBP'\n         DC    C'AGG'\n         DC    C'BCK'\n         DC    C'AUU'\n         DC    C'GHN'\n         DC    C'TWJ'\n         DC    C'BZL'\n         DC    X'FFFFFF'\n         DC    X'FFFFFF'\n         DC    X'FFFFFF'\n         DC    X'FFFFFF'\n         DC    X'FFFFFF'\nCHKNJE00 L     R2,PCEDCT\n         USING DCT,R2\n         CLC   DCTRDNOD,=AL2(72)\n         DROP  R2\n         BNE   DBUMP\nCHKNJE01 LA    R3,JCTWORK\nLOOPBUMP CLI   0(R3),C'('\n         BNE   NOBUMP2\n         LA    R3,1(R3)          BUMP 1 POSITION\n         B     LOOPBUMP\nNOBUMP2  CLC   11(4,R3),=C'C513' IS THIS FOR ME\n         BE    EX3RET00           YES - OK\nCHKNJE02 EQU   *\n         CLC   0(2,R3),=C'EM'\n         BNE   EX3RE12A\nEX3RET00 LA    R15,0               SET ZERO RETURN CODE.          HWDC\n         $RETURN RC=(R15)          RETURN TO CALLER               HWDC\nEX3RE12A LA    R15,12              SET FLUSH RETURN CODE          HWDC\n         $RETURN RC=(R15)          RETURN TO CALLER               HWDC\n         SPACE 3                                                  HWDC\n         TITLE 'HWDC EXIT 003 CONSTANTS AND DSECTS      '         HWDC\n***************************************************************** HWDC\n*    CONSTANTS, DSECTS AND EQUATES FOR JOBCARD SUPPORT.         * HWDC\n***************************************************************** HWDC\n         SPACE 1                                                  HWDC\n         LTORG                                                    HWDC\nPATCH03  DC    C'PATCH '\n         DC    250C' '\n***************************************************************** HWDC\n         SPACE 1                                                  HWDC\n***************************************************************** HWDC\n         TITLE 'HWDC EXIT004 FOR JCL/JECL SCAN SUPPORT.  '        HWDC\n***************************************************************** HWDC\n*                                                               * HWDC\n*   J C L  /  J E C L  S C A N  S U P P O R T .     EXIT004.    * HWDC\n*                                                               * HWDC\n*         ALSO KNOWN AS :                                       * HWDC\n*                                                               * HWDC\n*        HWDC013 - HWDC RESOURCE ROUTING (CONTROL CARD SUPPORT) * HW013\n*                                                               * HWDC\n***************************************************************** HWDC\n* ENTRY POINT DOCUMENTATION:                                    * HWDC\n*                                                               * HWDC\n*  REGISTERS AT ENTRY;                                          * HWDC\n*                                                               * HWDC\n*             R0  =       = +0 - INDICATES JES2 CONTROL CARD.   * HWDC\n*                           +4 - INDICATES JCL CONTROL CARD.    * HWDC\n*             R1  =       = ADDRESS OF 3 WORD PARM LIST.        * HWDC\n*                           WORD1 - (+0) POINTS TO THE CONTROL  * HWDC\n*                                        STATEMENT IMAGE BUFFER.* HWDC\n*                           WORD2 - (+4) POINTS TO EXIT FLAG    * HWDC\n*                                        BYTE RDWFLAGX IN PCE.  * HWDC\n*                           WORD3 - (+8) POINTS TO THE JCTXWRK  * HWDC\n*                                        FIELD IN THE JCT.      * HWDC\n*             R2  =       = N/A                                 * HWDC\n*             R3  =       = N/A                                 * HWDC\n*             R4  =       = N/A                                 * HWDC\n*             R5  =       = N/A                                 * HWDC\n*             R6  = BASE4 = N/A                                 * HWDC\n*             R7  =       = N/A                                 * HWDC\n*             R8  = BASE3 = N/A                                 * HWDC\n*             R9  = JRT   = JRT                                 * HWDC\n*             R10 = JCT   = ADDRESS OF JCT                      * HWDC\n*             R11 = R11 = ADDRESS OF HCT                        * HWDC\n*             R12 = R12 = OUR BASE                              * HWDC\n*             R13 = SAVE  = ADDRESS OF PCE                      * HWDC\n*             R14 = LINK  = RETURN ADDRESS                      * HWDC\n*             R15 =       = ENTRY ADDRESS                       * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         SPACE 3                                                  HWDC\nHWDCX004 $ENTRY BASE=R12           PROVIDE PROCESSOR ENTRY POINT  HWDC\n         $SAVE                     SAVE CALLERS REGISTERS         HWDC\n         LR    R12,R15             ESTABLISH BASE                 HWDC\n         USING JCT,R10             ADDRESS THE JCT                HWDC\n         USING JRTDSECT,R9         ADDRESS THE JRT                HWDC\n         USING PCE,R13             ADDRESS THE PCE                HWDC\n         USING NJH,R7              ADDRESS THE NET. JOB HDR       HWDC\n         LM    R2,R4,0(R1)         POINT TO PARAMETERS.           HWDC\n         TM    RDWFLAGX,RDWXCONT   IS THIS A CONTINUATION CARD    HWDC\n         BO    EX4RET00            YES, RETURN TO JES2.           HWDC\n         LTR   R4,R4               WE ARE IN A JOB.               HWDC\n         BZ    EX4RET00            BRANCH IF NOT.                 HWDC\n         LTR   R10,R10             ARE WE IN A JOB (DOUBLE CHECK) HWDC\n         BZ    EX4RET00            BRANCH IF NO.                  HWDC\n         CLC   =C'\u00a2\u00a2\u00a2\u00a2\u00a2\u00a2\u00a2\u00a2',72(R2) IS THIS MINE?                  HWDC\n         BE    EX4STC00            YES - GO PROCESS               HWDC\n         TM    JCTJOBFL,JCTTSUJB+JCTSTCJB BYPASS CREATE OF JRT    HWDC\n         BO    EX4RET00            IF A TSU JOB                   HWDC\nEX4JOB00 EQU   *\n         LTR   R0,R0               IS THIS A JES2 JECL STATEMENT? HW013\n         BNZ   EX4RET00            BR IF YES OTHERWISE ASSUME JCL HW013\n         L     R9,JCTUSER1        GET JRT POINTER                 HWDC\n         LTR   R9,R9               ?                              HWDC\n         BZ    RNOJRT              ERROR IF NO JRT                HWDC\n         SPACE 1                                                  HW013\n***************************************************************** HW013\n*                                                               * HW013\n*    JES2 'WHILE' 'AFTER'         CONTROL STATEMENT             * HW013\n*                                           PROCESSING ROUTINE. * HW013\n*    THIS ROUTINE ALSO LOOKS FOR JOBPARM FOR HWDC PARAMETERS    * HW013\n*                                                               * HW013\n***************************************************************** HW013\n         SPACE 3                                                  HW013\nHWX4JECL DS    0H                                                 HW013\n         LR    R8,R2               SAVE POINTER TO CARD          *HW013\n         CLC   2(5,R2),RAFTRCRD    IS IT HWDC AFTER CARD?         HW013\n         BE    RAFTCARD            YES GO PROCESS IT.             HW013\n         CLC   2(5,R2),RWHILCRD    IS IT HWDC WHILE CARD?         HW013\n         BE    RWHLCARD            YES GO PROCESS IT.             HW013\n         CLC   2(5,R2),RJOBPCRD    IS IT JES2 JOBPARM CARD?       HW013\n         BE    RJPMCARD            YES GO PROCESS IT.             HW013\n         CLC   2(5,R2),RHWDCCRD    IS IT HWDC JOBPARM CARD?       HW013\n         BE    RHPMCARD            YES GO PROCESS IT.             HW013\n         B     EX4RET00            IF NONE OF THOSE RETURN TO JES HW013\nRWHLCARD DS    0H                                                 HW013\n         CLC   FILLER+2(10),8(R2)  IS IT PRODUCTION?              HW013\n         BE    RSETPROD            YES - SET FLAG                 HW013\n         OI    JCTUSER4+16,QUEWHL  SET TO WHILE CARD              HW013\n         LA    R2,8(,R2)           START OF SCAN                  HW013\n         LA    R5,JCTUSER4         DEPENDENT JOB NAME AREA        HW013\n         TM    JCTUSER4+16,QUEAFT  /*AFTER SPECIFIED              HW013\n         BNO   RMVENAM             NO - USE FIRST DEPENDENT AREA  HW013\n         LA    R5,8(0,R5)          USE SECOND DEPENDENT AREA      HW013\nRMVENAM  LA    R6,50               MAX POSITIONS TO SEARCH        HW013\nRFINDCAR CLI   0(R2),C'A'          FIND START OF JOBNAME          HW013\n         BL    RFINDCON            NOT IN GOOD RANGE              HW013\n         CLI   0(R2),C'Z'          TRY OTHER SIDE                 HW013\n         BNH   RPUTNAM             THIS IS GOOD                   HW013\nRFINDCON LA    R2,1(,R2)           POINT TO NEXT POSITION         HW013\n         BCT   R6,RFINDCAR         LOOP TILL END                  HW013\n         NI    JCTUSER4+16,255-QUEWHL-QUEAFT SET OFF FLAGS        HW013\n         B     RBADWHIL            ILLEGAL WHILE CARD             HW013\nRPUTNAM  DS    0H                                                 HW013\n         MVC   0(8,R5),0(R2)       PUT NAME IN                    HW013\n         B     EX4RET08            GO TERMINATE NORMALLY          HW013\nRSETPROD OI    JRTFLAG,JRTBYP    SET SWITCH                       HW013\n         MVC   0(L'FILLER,R2),FILLER WIPE OUT WHILE               HW013\n         B     EX4RET08          TELL JES2 TO MAKE IT A COMMENT   HW012\nRBADWHIL EQU   *                                                  HW013\n         $MID  935                 SHOW MESSAGE ID.               HW013\n         MVC   JCTXWRK(80),RBADWHLM SET IN ERROR MESSAGE          HW013\n         OI    RDWFLAGX,RDWXXSEM   SHOW MESSAGE SUPPLIED          HW013\n         B     EX4RET12            GO TERMINATE JOB               HW013\n         SPACE 3                                                  HW013\nRNOJRT   EQU   *                                                  HW013\n         $MID  940                 SHOW MESSAGE ID.               HW013\n         MVC   JCTXWRK(80),RNOJRTM SET IN ERROR MESSAGE           HW013\n         OI    RDWFLAGX,RDWXXSEM   SHOW MESSAGE SUPPLIED          HW013\n         B     EX4RET00            GO TERMINATE JOB               HW013\nROUTORDR EQU   *                                                  HW013\n         $MID  939                 SHOW MESSAGE ID.               HW013\n         MVC   JCTXWRK(80),ROUTORDM SET IN ERROR MESSAGE          HW013\n         OI    RDWFLAGX,RDWXXSEM   SHOW MESSAGE SUPPLIED          HW013\n         B     EX4RET12            GO TERMINATE JOB               HW013\n         SPACE 3                                                  HW013\nRAFTCARD DS    0H                                                 HW013\n         TM    JCTUSER4+16,QUEWHL  WHILE SPEC                     HW013\n         BNZ   ROUTORDR            YES - CARDS ARE OUT OF ORDER   HW013\n         OI    JCTUSER4+16,QUEAFT  SET TO AFTER CARD              HW013\n         LA    R2,8(,R2)           SET START OF SCAN              HW013\n         LA    R5,JCTUSER4         DEPENDENT JOB NAME AREA        HW013\nRMVENAM1 LA    R6,50               MAX POSITIONS TO SEARCH        HW013\nRFINDCA1 CLI   0(R2),C'A'          FIND START OF JOBNAME          HW013\n         BL    RFINDCO1            NOT IN GOOD RANGE              HW013\n         CLI   0(R2),C'Z'          TRY OTHER SIDE                 HW013\n         BNH   RPUTNAM             THIS IS GOOD                   HW013\nRFINDCO1 LA    R2,1(,R2)           POINT TO NEXT POSITION         HW013\n         BCT   R6,RFINDCA1         LOOP TILL END                  HW013\n         NI    JCTUSER4+16,255-QUEWHL-QUEAFT SET OFF FLAGS        HW013\n         $MID  936                 SHOW MESSAGE ID.               HW013\n         MVC   JCTXWRK(80),RBADAFTM SET IN ERROR MESSAGE          HW013\n         OI    RDWFLAGX,RDWXXSEM   SHOW MESSAGE SUPPLIED          HW013\n         B     EX4RET12            GO TERMINATE JOB               HW013\nRJPMCARD EQU   *                                                  HW012\n         MVC   JCTXWRK+1(79),0(R2) MOVE COPY TO WORK AREA         HW012\n         MVI   JCTXWRK,C'/'      MAKE IT A COMMENT                HW012\n         LA    R2,9(R2)         POINT TO FIRST AVAILABLE POSITION HW012\n         LA    R6,61            MAX POSITIONS FOR SEARCH          HW012\nRFNDPARM CLI   0(R2),C'A'        FIND FIRST PARAMETER             HW012\n         BL    RFINDCO2          NOT IN GOOD RANGE                HW012\n         CLI   0(R2),C'Z'        TRY OTHER SIDE                   HW012\n         BNH   RPARMFN1          GOT A HIT                        HW012\nRFINDCO2 LA    R2,1(,R2)         INCREMENT POINTER                HW012\n         BCT   R6,RFNDPARM       LOOP TILL END                    HW012\n         B     EX4RET00          BAD JOBPARM? LET JES2 HANDLE IT  HW012\nRPARMFN1 LR    R0,R2             SAVE START OF PARMS              HW012\nRPARMFN2 LA    R14,MYTABLE1      POINT AT TABLE OF PARMS          HW012\nRGETNPRM SR    R15,R15           CLEAR R15                        HW012\n         IC    R15,0(R14)        GET LENGTH OF ENTRY              HW012\n         EX    R15,CLC           COMPARE TO CURRENT               HW012\n         BE    FNDMINE1          BE TO PROCESS                    HW012\n         LA    R14,10(R14)       POINT TO NEXT ENTRY              HW012\n         CLI   0(R14),X'FF'      END OF TABLE                     HW012\n         BNE   RGETNPRM          NO - GO CHECK NEXT PARM          HW012\n         LA    R14,MYTABLE1+7    POINT TO 1 POS TABLE             HW012\n         LA    R15,0             SET EXECUTE REG TO 1             HW012\nRGET1PRM EX    R15,CLC           COMPARE TO CURRENT               HW012\n         BNE   RINC10            NOT THIS ONE TRY NEXT            HW012\n         CLI   1(R2),C' '        BLANK AFTER CHARACTER            HW012\n         BE    FNDMINE2          BE TO PROCESS                    HW012\n         CLI   1(R2),C','        COMMA AFTER CHARACTER            HW012\n         BE    FNDMINE2          BE TO PROCESS                    HW012\n         BNE   RFNDNPRM          CANT BE MINE!                    HW012\nRINC10   LA    R14,10(R14)       POINT TO NEXT ENTRY              HW012\n         CLI   0(R14),X'FF'      END OF TABLE                     HW012\n         BNE   RGET1PRM          NO - GO CHECK NEXT PARM          HW012\nRFNDNPRM CLI   0(R2),C' '        END OF CARD?                     HW012\n         BE    RCHEND1           YES                              HW012\n         CLI   0(R2),C','        END OF PARAMETER?                HW012\n         BNE   RPARMFN3          GOT A HIT                        HW012\n         LA    R2,1(R2)          POINT TO NEXT POSITION           HW012\n         BCT   R6,RPARMFN2       GO CHECK NEXT PARAMETER          HW012\n         B     RCHEND1           CARD ENDS IN A COMMA?            HW012\nRPARMFN3 LA    R2,1(,R2)         INCREMENT POINTER                HW012\n         BCT   R6,RFNDNPRM       LOOP TILL END                    HW012\nRCHEND1  CR    R2,R0             STILL AT START(ALL PARMS MINE)?  HW012\n         BNE   RCHJES2           NO CHECK IF ANY                  HW012\n         L     R2,0(R1)          POINT TO CARD                    HW012\n         MVC   0(79,R2),JCTXWRK+1 PUT ORIGINAL COPY BACK          HW012\n         B     EX4RET08          TELL JES2 TO MAKE IT A COMMENT   HW012\nRCHJES2  TM    JRTFLAG,JRTALL    WERE ANY MINE?                   HW012\n         BZ    EX4RET00          NO - TELL JES2 TO PROCESS        HW012\n         TM    JRTFLAG,JRTBYP+JRTBMPS PRODUCTION?                 HW012\n         BZ    RMIXED            NO                               HW012\n         BO    RRESTBMP          YES                              HW012\n         TM    JRTFLAG,JRTALL-JRTBYP                              HW012\n         BZ    EX4RET00          TELL JES2 TO PROCESS             HW012\nRRESTBMP NI    JRTFLAG,X'FF'-JRTBMPS TURN OFF FLAG                HW012\nRMIXED   OI    RDWFLAGX,RDWXXSNC ELSE GIVE JES2 NEXT RECORD       HW012\n         BCTR  R2,0              SUBTRACT 1\n         CLI   0(R2),C','        COMMA AT END\n         BNE   EX4RET00          NO - OK\n         MVI   0(R2),C' '        YES - BLANK IT OUT\n         B     RMIXED             AND CHECK NEXT POSITION BACK    HW012\nCLC      CLC   0(0,R2),1(R14)    EXECUTED INSTRUCTION             HW012\nFNDMINE1 LA    R5,1(R15,R2)      POINT AFTER PARAMETER            HW012\n         LR    R7,R6             GET LENGTH LEFT                  HW012\n         SR    R7,R15            SUBTRACT PARAMETER LENGTH        HW012\n         EX    R7,MVC            SHIFT OUT MY PARAMETER           HW012\n         CLC   =C'NIGHT',1(R14)  IS THIS NIGHT PARM\n         BNE   RNNIGHT1           NO - OK\n         OI    JCTUSER4+16,QUEUSERH  YES - SET HOLD BIT\nRNNIGHT1 EQU   *\n         LA    R5,9(R14)         POINT TO BIT MASK                HW012\n         B     RORFLAG                                            HW012\nFNDMINE2 LA    R5,1(R15,R2)      POINT AFTER PARAMETER            HW012\n         LR    R7,R6             GET LENGTH LEFT                  HW012\n         SR    R7,R15            SUBTRACT PARAMETER LENGTH        HW012\n         EX    R7,MVC            SHIFT OUT MY PARAMETER           HW012\n         CLI   1(R14),C'W'       IS THIS NIGHT PARM\n         BNE   RNNIGHT2           NO - OK\n         OI    JCTUSER4+16,QUEUSERH  YES - SET HOLD BIT\nRNNIGHT2 EQU   *\n         LA    R5,2(R14)         POINT TO BIT MASK                HW012\nRORFLAG  OC    JRTFLAG,0(R5)     TURN ON BIT(S)                   HW012\n         CLI   0(R2),C','        IS THERE A COMMA NEXT            HW012\n         BNE   RCHEND1           NO  END OF CARD                  HW012\n         LA    R5,1(,R2)         INCREMENT OVER ,                 HW012\n         EX    R7,MVC            SHIFT OUT ,                      HW012\n         B     RPARMFN2          GO LOOK FOR NEXT                 HW012\nRHPMCARD EQU   *               HWDCPARM CARD PROCESSING           HW012\n         LA    R2,10(R2)        POINT TO FIRST AVAILABLE POSITION HW012\n         LA    R6,61            MAX POSITIONS FOR SEARCH          HW012\nHFNDPARM CLI   0(R2),C'A'        FIND FIRST PARAMETER             HW012\n         BL    HFINDCO2          NOT IN GOOD RANGE                HW012\n         CLI   0(R2),C'Z'        TRY OTHER SIDE                   HW012\n         BNH   HPARMFN1          GOT A HIT                        HW012\nHFINDCO2 LA    R2,1(,R2)         INCREMENT POINTER                HW012\n         BCT   R6,HFNDPARM       LOOP TILL END                    HW012\n         B     EX4RET12          BAD HWDCPARM? KILL IT            HW012\nHPARMFN1 LR    R0,R2             SAVE START OF PARMS              HW012\nHPARMFN2 LA    R14,MYTABLE1      POINT AT TABLE OF PARMS          HW012\nHGETNPRM SR    R15,R15           CLEAR R15                        HW012\n         IC    R15,0(R14)        GET LENGTH OF ENTRY              HW012\n         EX    R15,CLC           COMPARE TO CURRENT               HW012\n         BE    FNDHWDC1          BE TO PROCESS                    HW012\n         LA    R14,10(R14)       POINT TO NEXT ENTRY              HW012\n         CLI   0(R14),X'FF'      END OF TABLE                     HW012\n         BNE   HGETNPRM          NO - GO CHECK NEXT PARM          HW012\n         LA    R14,MYTABLE1+7    POINT TO 1 POS TABLE             HW012\n         LA    R15,0             SET EXECUTE REG TO 1             HW012\nHGET1PRM EX    R15,CLC           COMPARE TO CURRENT               HW012\n         BNE   HINC10            NOT THIS ONE TRY NEXT            HW012\n         CLI   1(R2),C' '        BLANK AFTER CHARACTER            HW012\n         BE    FNDHWDC2          BE TO PROCESS                    HW012\n         CLI   1(R2),C','        COMMA AFTER CHARACTER            HW012\n         BE    FNDHWDC2          BE TO PROCESS                    HW012\nHTBL2    LA    R14,MYTABLE2      POINT AT TABLE OF PARMS          HW012\n         LA    R7,JCTNJHDR\nHGETHPRM SR    R15,R15           CLEAR R15                        HW012\n         IC    R15,0(R14)        GET LENGTH OF ENTRY              HW012\n         EX    R15,CLC           COMPARE TO CURRENT               HW012\n         BE    FNDHWDC1          BE TO PROCESS                    HW012\n         LA    R14,10(R14)       POINT TO NEXT ENTRY              HW012\n         CLI   0(R14),X'FF'      END OF TABLE                     HW012\n         BNE   HGETHPRM          NO - GO CHECK NEXT PARM          HW012\n         B     HFNDNPRM          CANT BE MINE!                    HW012\nHINC10   LA    R14,10(R14)       POINT TO NEXT ENTRY              HW012\n         CLI   0(R14),X'FF'      END OF TABLE                     HW012\n         BNE   HGET1PRM          NO - GO CHECK NEXT PARM          HW012\n         B     HTBL2             YES - THEN CHECK TABLE 2\nHFNDNPRM CLI   0(R2),C' '        END OF CARD?                     HW012\n         BE    HCHEND1           YES                              HW012\n         CLI   0(R2),C','        END OF PARAMETER?                HW012\n         BNE   HPARMFN3          GOT A HIT                        HW012\n         LA    R2,1(R2)          POINT TO NEXT POSITION           HW012\n         BCT   R6,HPARMFN2       GO CHECK NEXT PARAMETER          HW012\n         B     HCHEND1           CARD ENDS IN A COMMA?            HW012\nHPARMFN3 LA    R2,1(,R2)         INCREMENT POINTER                HW012\n         BCT   R6,HFNDNPRM       LOOP TILL END                    HW012\nHCHEND1  EQU   *                                                  HW012\nHRESTBMP NI    JRTFLAG,X'FF'-JRTBMPS TURN OFF FLAG                HW012\n         B     EX4RET08          TELL JES2 TO MAKE IT A COMMENT   HW012\nFNDHWDC1 EQU   *                 POINT AFTER PARAMETER            HW012\n         LA    R5,9(R14)         POINT TO BIT MASK                HW012\n         B     HORFLAG                                            HW012\nFNDHWDC2 EQU   *                 POINT AFTER PARAMETER            HW012\n         LA    R5,2(R14)         POINT TO BIT MASK                HW012\nHORFLAG  NULL                                                     HW012\n         CLC   =C'NIGHT',0(R2)\n         BE    OURHOLD\n         CLI   0(R2),C'W' IS THIS NIGHT ABREVIATION\n         BNE   HORFLAG2\n         OI    JCTUSER4+16,QUEUSERH\nOURHOLD  EQU   *\n         OI    JCTUSER4+16,QUEUSERH\nHORFLAG2 OC    JRTFLAG,0(R5)     TURN ON BIT(S)                   HW012\nHORFLAG3 LA    R15,1(R15)        GET TRUE LENGTH\n         LA    R2,0(R15,R2)      POINT AFTER PARAMETER\n         SR    R6,R15            SUBTRACT LENGTH OF PARM FROM\n         BNP   EX4RET12          COUNTER AND BRANCH IF NOTHING LEFT\n         CLI   0(R2),C'='        IS THIS A VALUE PARAMETER?\n         BE    PROCVAL            YES - PROCESS THE VALUE\n         CLI   0(R2),C','        IS THERE A COMMA NEXT            HW012\n         BNE   HCHEND1           NO  END OF CARD                  HW012\n         LA    R5,1(,R2)         INCREMENT OVER ,                 HW012\n         B     HPARMFN2          GO LOOK FOR NEXT                 HW012\nPROCVAL  EQU   *\n         CLI   1(R14),C'B'       IS IT BUILDING?\n         BE    MOVEB\n         CLC   1(3,R14),MYTABLE2+1 IS IT DIVISION?\n         BE    MOVEB              YES - USE BUILDING SLOT\n         CLI   1(R14),C'R'       IS IT ROOM?\n         BE    MOVER\n         CLI   1(R14),C'D'       IS IT DEPARTMENT?\n         BNE   EX4RET12           NO BAD PARM\n         LA    R15,NJHGDEPT\n         B     VALMOVE\nMOVEB    LA    R15,NJHGBLDG\n         B     VALMOVE\nMOVER    LA    R15,NJHGROOM\nVALMOVE  EQU   *\n         CLI   1(R2),X'7D'             IS THERE A APOSTROPHY\n         BE    VALMOVEA                 YES - PROCEED AS NORMAL\n         LA    R14,2(R2)         POINT AFTER FIRST CHARACTER\n         SLR   R5,R5             ZERO OUT COUNTER\nVALMOVE1 EQU   *\n         CLI   0(R14),C' '       END OF CARD\n         BE    ENDVAL\n         CLI   0(R14),C','       END OF VALUE?\n         BE    ENDVAL\n         LA    R14,1(R14)        POINT TO NEXT POSITION\n         LA    R5,1(R5)          ADD ONE TO COUNTER\n         CH    R5,=H'7'          MAX VALUE LENGTH\n         BH    EX4RET12           BAD VALUE\n         BCT   R6,VALMOVE1\nENDVAL   EQU   *\n         EX    R5,MVC2\n         LR    R2,R14\n         B     HFNDNPRM          GO LOOK FOR NEXT                 HW012\nVALMOVEA EQU   *\n         LA    R2,1(R2)                BUMP POINTER\n         BCT   R6,TAG1                 BRANCH IF NOT END\n         B     HCHEND1\nTAG1     EQU   *\n         LA    R14,2(R2)         POINT AFTER FIRST CHARACTER\n         SLR   R5,R5             ZERO OUT COUNTER\nVALMOVA1 EQU   *\n         CLI   0(R14),X'7D'      END OF PARAMETER\n         BE    ENDVALA\n         LA    R14,1(R14)        POINT TO NEXT POSITION\n         LA    R5,1(R5)          ADD ONE TO COUNTER\n         CH    R5,=H'7'          MAX VALUE LENGTH\n         BH    EX4RET12           BAD VALUE\n         BCT   R6,VALMOVA1\nENDVALA  EQU   *\n         EX    R5,MVC2\n         LR    R2,R14\n         LA    R2,1(R2)          POINT AFTER '\n         BCT   R6,HFNDNPRM       GO LOOK FOR NEXT                 HW012\n         B     HCHEND1            END IF NOTHING LEFT\nEX4STC00 EQU   *\n         SLR   R15,R15             CLEAR REG\n         MVC   JCTXWRK(80),0(R2)   COPY OUTPUT STMT\n         IC    R15,2(R2)           GET 1ST CHAR\n         LA    R15,1(,R15)         ADD 1\n         STC   R15,JCTXWRK+2       SAVE FOR NEW OUTPUT\n         LA    R15,20(,R4)         FOR SCAN\nEX4DLP1  EQU   *\n         CLC   =C'DEST=(',0(R15)   IS THIS DEST\n         BE    EX4DEST             YES\n         CLC   =C'\u00a2\u00a2\u00a2\u00a2\u00a2\u00a2\u00a2\u00a2',0(R15) END OF CARD?  SHOULDN'T BE\n         BE    EX4RET00            YES\n         LA    R15,1(,R15)         POINT TO NEXT POSITION\n         B     EX4DLP1             AND PROCESS\nEX4DEST  EQU   *\n         LA    R15,5(,R15)         POINT AFTER DEST=\n         LR    R14,R15             GET\n         SR    R14,R4               OFFSET\n         AR    R14,R2              POINT TO 1ST CARD\n         LA    R1,70(,R2)          GET 'END' OF CARD\n         SR    R1,R14              GET REMAINDER\n         EX    R1,MVCDEST1         MOVE\n         EX    R1,MVCDEST2         MOVE\nEX4DLP2  EQU   *\n         CLI   0(R14),C','         HAVE WE FOUND THE ,\n         BE    EX4DCFND            YES\n         CLI   0(R14),C' '         HAVE WE FOUND THE END\n         BE    EX4RET00            YES\n         LA    R14,1(,R14)         POINT TO NEXT POSITION\n         B     EX4DLP2             AND CHECK\nEX4DCFND EQU   *\n         MVI   0(R14),C' '         BLANK OUT COMMA\n         SR    R14,R2              GET OFFSET\n         AR    R14,R4              POINT TO NEW CARD\n         LA    R1,70(,R4)          GET 'END' OF WORK AREA\n         SR    R1,R14              GET LENGTH\n         EX    R1,MVCDEST3         SHIFT FIRST DEST OUT\n         OI    RDWFLAGX,RDWXXSNC\n         B     EX4RET00\nMVCDEST1 MVC   0(0,R14),1(R14)\nMVCDEST2 MVC   0(0,R15),1(R15)\nMVCDEST3 MVC   0(0,R15),1(R14)\nMVC2     MVC   0(0,R15),1(R2)    EXECUTED INSTRUCTION\nMVC      MVC   0(0,R2),0(R5)     EXECUTED INSTRUCTION             HW012\n         SPACE 3                                                  HWDC\nEX4RET00 DS    0H                                                 HWDC\n         LA    R15,0               SET ZERO RETURN CODE.          HWDC\n         $RETURN RC=(R15)          RETURN TO CALLER               HWDC\n         SPACE 2                                                  HWDC\nEX4RET08 DS    0H                                                 HWDC\n         LA    R15,8               SET 8 TO CALLER CODE.          HWDC\n         $RETURN RC=(R15)          RETURN TO CALLER               HWDC\n         SPACE 2                                                  HWDC\nEX4RET12 DS    0H                                                 HWDC\n         LA    R15,12              SET 12 TO CALLER CODE.         HWDC\n         $RETURN RC=(R15)          RETURN TO CALLER               HWDC\n***************************************************************** HWDC\n         TITLE 'HWDC EXIT 004 CONSTANTS AND DSECTS      '         HWDC\n***************************************************************** HWDC\n*                                                               * HWDC\n*     MISCELLANEOUS CONSTANTS AND DSECTS FOR JCL/JECL SCAN.     * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         SPACE 3                                                  HWDC\nRAFTRCRD DC    C'AFTER'            HWDC /*AFTER    CARD ID.       HW013\nRWHILCRD DC    C'WHILE'            HWDC /*WHILE    CARD ID.       HW013\nRJOBPCRD DC    C'JOBPARM'          JES2   /*JOBPARM CARD ID.      HW012\nRHWDCCRD DC    C'HWDCPARM'         HWDC   /*HWDCPARM CARD ID.     HW012\nFILLER   DC    C'/*PRODUCTION JOB SUBMITTED BY APOLLO'            HW013\n         SPACE 1                                                  HW013\nRBADWHLM DS    0CL80                                              HW013\n         DC    CL8'$HASP935'                                      HW013\n         DC    CL72'* JOBNAME SPECIFIED ON /*WHILE STATEMENT IS  INVALI+\n               D. CORRECT - RESUBMIT'                             HW013\nRBADAFTM DS    0CL80                                              HW013\n         DC    CL8'$HASP936'                                      HW013\n         DC    CL72'* JOBNAME SPECIFIED ON /*AFTER  STATEMENT IS INVALI+\n               D. CORRECT - RESUBMIT'                             HW013\nRNOJRTM  DS    0CL80                                              HW013\n         DC    CL8'$HASP940'                                      HW013\n         DC    CL72'* INTERNAL ERROR - NO JRT AVAILABLE TO PROCESS.    +\n                CONTACT SOFTWARE.    '                            HW013\nROUTORDM DS    0CL80                                              HW013\n         DC    CL8'$HASP939'                                      HW013\n         DC    CL72'*/*WHILE AND /*AFTER STATEMENTS ARE OUT OF  ORDER, +\n               CORRECT AND RESUBMIT.'                             HW013\nMYTABLE1 EQU   *                                                  HW012\n         DC    X'05',CL7'ADABAS',C'A',AL1(JRTADA)\n         DC    X'04',CL7'NIGHT ',C'W',AL1(JRTPROD)\n         DC    X'05',CL7'ONLINE',C'H',AL1(JRTTP)\n         DC    X'05',CL7'REMOVE',C'D',AL1(JRTBYP+JRTBMPS)\n         DC    X'01',CL7'TQ    ',C'Q',AL1(JRTTQ)\n         DC    10X'FF'           END OF TABLE                     HW012\nMYTABLE2 EQU   *                                                  HW012\n         DC    X'02',CL7'DIV   ',C' ',X'00'\n         DC    X'03',CL7'BLDG  ',C' ',X'00'\n         DC    X'03',CL7'ROOM  ',C' ',X'00'\n         DC    X'03',CL7'DEPT  ',C' ',X'00'\n         DC    X'03',CL7'HOLD  ',C' ',X'00'\n         DC    10X'FF'           END OF TABLE                     HW012\nJRTALL   EQU   JRTBYP+JRTBMPS+JRTPROD+JRTADA+JRTTQ+JRTEX+JRTTP\n         EJECT                                                    HW013\n         LTORG                                                    HWDC\nPATCH    DC    C'PATCH '\n         DC    250C' '\n***************************************************************** HWDC\n         TITLE 'COMPLETE MODULE INFORMATION TABLE. '              HWDC\n         $MODEND                                                  HWDC\n         END   ,                                                  HWDC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXIT005": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x10X\\x00\\xc7\\x00\\xa0\\x00+\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T10:58:00", "lines": 199, "newlines": 160, "modlines": 43, "user": "HWSYS4"}, "text": "EXIT005  TITLE '$JT,1      COMMAND -- PROLOG (COMMENTS)'       HWC\n***************************************************************HWC\n*                                                              HWC\n*                                                              HWC\n*                                                              HWC\n*                                                              HWC\n* MODULE NAME = EXIT$TW                                        HWC\n*                                                              HWC\n* DESCRIPTIVE NAME = $JT,1       DYNAMICALLY LOAD STC TABLE    HWC\n*                                                              HWC\n* AUTHOR = WALT SAPP MS#513                                    HWC\n*          HEALTH AND WELFARE DATA CENTER                      HWC\n*          STATE OF CALIFORNIA                                 HWC\n*          1651 ALHAMBRA BLVD                                  HWC\n*          SACRAMENTO, CALIFORNIA 95816                        HWC\n*                                                              HWC\n*          PHONE: (916) 739-7671                               HWC\n*                                                              HWC\n*          SHARE INSTALLATION CODE = HWC                       HWC\n*                                                              HWC\n*                                                              HWC\n* SYSTEM LEVEL = JES2 SYSTEM PRODUCT V2.2.0                    HWC\n*                                                              HWC\n*                                                              HWC\n* FUNCTION = INSTALL A $JT,1 COMMAND IN   AN EXIT 5 ROUTINE    HWC\n*    WHICH LOADS THE STC JCL TABLE                             HWC\n*                                                              HWC\n* NOTES = SEE BELOW                                            HWC\n*                                                              HWC\n*    DEPENDENCIES = SEE BELOW                                  HWC\n*                                                              HWC\n*       (1) THIS IS A STAND ALONE EXIT 5 PROGRAM               HWC\n*                                                              HWC\n*    RESTRICTIONS = NONE                                       HWC\n*                                                              HWC\n*    REGISTER CONVENTIONS = SEE BELOW                          HWC\n*                                                              HWC\n*       R0  = EXIT PARAMETER AND WORK                          HWC\n*       R1  = EXIT PARAMETER AND WORK                          HWC\n*       R2  = WORK                                             HWC\n*       R3  = WORK                                             HWC\n*       R4  = WORK                                             HWC\n*       R5  = WORK OR ADDR OF CURRENT OPERAND                  HWC\n*       R6  = WORK OR INCREMENT VALUE OF 4                     HWC\n*       R7  = WORK OR ADDR OF LAST OPERAND                     HWC\n*       R8  = SEGMENT ADDRESSABILITY                           HWC\n*       R9  = UNUSED                                           HWC\n*       R10 = JCT ADDRESSABILITY                               HWC\n*       R11 = HCT ADDRESSABILITY                               HWC\n*       R12 = PROCESSOR ADDRESSABILITY                         HWC\n*       R13 = PCE ADDRESSABILITY                               HWC\n*       R14 = EXIT LINKAGE AND WORK                            HWC\n*       R15 = EXIT LINKAGE AND WORK                            HWC\n*                                                              HWC\n*    PATCH LABEL = NONE                                        HWC\n*                                                              HWC\n* MODULE TYPE = PROCEDURE (CSECT)                              HWC\n*                                                              HWC\n*    PROCESSOR = OS/VS ASSEMBLER                               HWC\n*                                                              HWC\n*    MODULE SIZE = SEE $MODEND MACRO AT END OF THIS ASSEMBLY.  HWC\n*                                                              HWC\n*    ATTRIBUTES = JES2 REENTRANT                               HWC\n*                                                              HWC\n*                                                              HWC\n*    ENTRY POINT = JTCHX5                                      HWC\n*                                                              HWC\n*       LINKAGE = STANDARD JES2 EXIT LINKAGE                   HWC\n*                                                              HWC\n*       INPUT = SEE JES2 SPL FOR EXIT 5                        HWC\n*                                                              HWC\n*       OUTPUT = NEW STC JCL TABLE                             HWC\n*                                                              HWC\n*       RETURN CODE = SEE BELOW                                HWC\n*                                                              HWC\n*          0 - THE COMMAND WAS NOT RECOGNIZED OR PROCESSED BY  HWC\n*              THIS EXIT JES2 IS TO PERFORM STANDARD HASPCOMM  HWC\n*              PROCESSING ON THE COMMAND.                      HWC\n*                                                              HWC\n*              THIS VALUE IS ALSO USED BY THIS EXIT AFTER      HWC\n*              SUCCESSFUL COMPLETION AFTER THE $V IS CHANGED   HWC\n*              TO A $D AND TO LET JES2 ISSUE AN 'INVALID       HWC\n*              COMMAND' RESPONSE IF NECESSARY.                 HWC\n*                                                              HWC\n*          4 - JES2 WILL IGNORE ANY OTHER EXITS AND PROCEED    HWC\n*              WITH NORMAL COMMAND PROCESSING.                 HWC\n*                                                              HWC\n*          8 - THE COMMAND WAS RECOGNIZED AND PROCESSED BY     HWC\n*              THIS EXIT.  JES2 WILL IMMEDIATELY ISSUE A $CRET HWC\n*              MACRO BYPASSING ANY FUTHER PROCESSING.          HWC\n*                                                              HWC\n*         12 - THE COMMAND WAS RECOGNIZED AND PROCESSED BY     HWC\n*              THIS EXIT.  JES2 WILL IMMEDIATELY ISSUE A $CRET HWC\n*              MACRO SPECIFING THE STANDARD HASP000 \"OK\"       HWC\n*              MESSAGE AND BYPASS ANY FUTHER PROCESSING.       HWC\n*                                                              HWC\n*         16 - THE COMMAND WAS RECOGNIZED AND PROCESSED BY     HWC\n*              THIS EXIT.  JES2 WILL IMMEDIATELY ISSUE A $CRET HWC\n*              MACRO SPECIFING A MESSAGE GENERATED BY THIS     HWC\n*              EXIT ROUTINE AND BYPASS ANY FUTHER PROCESSING.  HWC\n*                                                              HWC\n*                                                              HWC\n* EXTERNAL REFERENCES = SEE BELOW                              HWC\n*                                                              HWC\n*                                                              HWC\n*    DATA AREAS = USES $USER1 IN HCT                           HWC\n*                                                              HWC\n*    CONTROL BLOCKS = SEE $MODULE MACRO INSTRUCTION BELOW.     HWC\n*                                                              HWC\n* TABLES = NONE                                                HWC\n*                                                              HWC\n* OS MACROS = NONE                                             HWC\n*                                                              HWC\n* JES2 MACROS = $CKPT, $CWTO, $ENTRY, $EXIT, $HASPGBL          HWC\n*    (COPIED), $JCAN, $MID, $MODEND, $MODULE, $QLOC, $QSUSE,   HWC\n*    $RETURN, $SAVE                                            HWC\n*                                                              HWC\n*                                                              HWC\n*                                                              HWC\n*                                                              HWC\n***************************************************************HWC\n         TITLE '$JT STC TABLE LOAD   -- PROLOG ($HASPGBL)'     HWC\n         COPY  $HASPGBL            COPY HASP GOBALS            HWC\nEXIT$JT $MODULE TITLE='$JT STC LOAD COMMAND',                  HWC     X\n               RESPA,              GENERATE MVS RESPA DSECT    HWC     X\n               RPL,                GENERATE MVS RPL   DSECT    HWC     X\n               $BUFFER,            GENERATE HASP BUFFER DSECT  HWC     X\n               $CAT,               GENERATE HASP CAT DSECT     HWC     X\n               $COMWORK,           GENERATE HASP COMWORK DSECT HWC     X\n               $CMB,               GENERATE HASP CMB DSECT     HWC     X\n               $DAS,               GENERATE HASP DAS DSECT     HWC     X\n               $DCT,               GENERATE HASP DCT DSECT     HWC     X\n               $HASPEQU,           GENERATE HASP EQUATES       HWC     X\n               $HCT,               GENERATE HASP HCT DSECT     HWC     X\n               $PADDR,             GENERATE HASP     DSECT     HWC     X\n               $JCT,               GENERATE HASP JCT DSECT     HWC     X\n               $JOE,               GENERATE HASP JOE DSECT     HWC     X\n               $JQE,               GENERATE HASP JQE DSECT     HWC     X\n               $KIT,               GENERATE HASP KIT DSECT     HWC     X\n               $MIT,               GENERATE HASP MIT DSECT     HWC     X\n               $PCE,               GENERATE HASP PCE DSECT     HWC     X\n               $PIT,               GENERATE HASP PIT DSECT     HWC     X\n               $RAT,               GENERATE HASP RAT DSECT     HWC     X\n               $SJB,               GENERATE HASP SJB DSECT     HWC     X\n               $TQE                GENERATE HASP TQE DSECT     HWC\n***************************************************************HWC\n*                                                              HWC\n*  LOCAL $JT,1       COMMAND PREPROCESSOR EXIT  (EXIT 5)       HWC\n*                                                              HWC\n***************************************************************HWC\n         SPACE 1                                               HWC\nJTCHX5   $ENTRY BASE=R12           DEFINE EXIT ENTRY POINT     HWC\n         $SAVE                                                 HWC\n         LR    R12,R15                                         HWC\n         SPACE 1                                               HWC\n         CLC   COMVERB(2),=C'JT'   IS THIS $JT                 HWC\n         BNE   EXIT0500            NO - LET THE NEXT EXIT CHECK IT\nCKNEXT   L      R4,0(R5)\n         CLI   0(R4),C'1'            CORRECT KEYWORD?\n         BE    LOADUSR1\n         CLI   0(R4),C'2'            CORRECT KEYWORD?\n         BE    LOADUSR2\n         CLI   0(R4),C'3'            CORRECT KEYWORD?\n         BE    LOADUSR3\n         BXLE  R5,R6,CKNEXT\n         B     EXIT0500                BRANCH IF NO\nLOADUSR1 TM    $USER1,X'80'         IS LOADER ACTIVE            HW00012\n         BO    LDACTIVE             YES, GET OUT                HW00012\n         OI    $USER1,X'80'            SHOW   ACTIVE            HW00012\n         LR    R1,R11             GIVE ADDRESSABILITY TO SUBTASKHW00012\n         ATTACH EP=HASPUSR1,DPMOD=-1                            HW00012\n         B     EXIT0512                BRANCH IF NO\nLOADUSR2 TM    $USER2,X'80'         IS LOADER ACTIVE            HW00012\n         BO    LDACTIVE             YES, GET OUT                HW00012\n         OI    $USER2,X'80'            SHOW   ACTIVE            HW00012\n         LR    R1,R11             GIVE ADDRESSABILITY TO SUBTASKHW00012\n         ATTACH EP=HASPUSR2,DPMOD=-1                            HW00012\n         B     EXIT0512                BRANCH IF NO\nLOADUSR3 TM    $USER3,X'80'         IS LOADER ACTIVE            HW00012\n         BO    LDACTIVE             YES, GET OUT                HW00012\n         OI    $USER3,X'80'            SHOW   ACTIVE            HW00012\n         LR    R1,R11             GIVE ADDRESSABILITY TO SUBTASKHW00012\n         ATTACH EP=HASPUSR3,DPMOD=-1                            HW00012\nEXIT0512 LA    R15,12                 GIVE 'OK'\n         B     EXIT05$$\nLDACTIVE MVC   COMMAND(14),=CL14'LOADER ACTIVE '\n         LA    R15,16                 ISSUE MESSAGE\n         LA    R0,14\n         B     EXIT05$$\nEXIT0500 DS    0H\n         LA    R15,0                   CONTINUE NORMAL PROCESSING\nEXIT05$$ $RETURN RC=(R15)\n         SPACE 3\n         EJECT\n         LTORG\n         EJECT\n        $MODEND ,                  COMPLETE MODULE INFO TABLE  HWC\n         SPACE 2                                               HWC\n         END   ,                   END OF ASSEMBLY             HWC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXIT024": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x10\\t\\x00\\xb8\\x00\\xb8\\x00\\x00\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T10:09:00", "lines": 184, "newlines": 184, "modlines": 0, "user": "HWSYS4"}, "text": "EXIT024 TITLE ' INITIALIZE TABLE OF JOBCARDS FOR EXIT 2   '       HWDC\n***************************************************************** HWDC\n*                                                               * HWDC\n* MODULE NAME = EXIT024                                         * HWDC\n*                                                               * HWDC\n* FUNCTION = THE TABLE LOADER IS INVOKED TO SAVE THE ADDRESS OF * HWDC\n*            THE STARTED TASK JOBCARD TABLE IN $USER1           * HWDC\n*                                                               * HWDC\n* NOTES = SEE BELOW                                             * HWDC\n*                                                               * HWDC\n*    DEPENDENCIES =                                             * HWDC\n*                                                               * HWDC\n*    RESTRICTIONS =                                             * HWDC\n*                                                               * HWDC\n*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION.      * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n*    PATCH LABEL = NONE                                         * HWDC\n*                                                               * HWDC\n* MODULE TYPE = PROCEDURE ( CSECT TYPE )                        * HWDC\n*                                                               * HWDC\n*    PROCESSOR = ASSEMBLER H                                    * HWDC\n*                                                               * HWDC\n*    MODULE SIZE = SEE MACRO EXPANSION(S) AT END OF             * HWDC\n*                  ASSEMBLY.                                    * HWDC\n*                                                               * HWDC\n*    ATTRIBUTES = READ ONLY, REENTRANT (BY JES2 DEFINITION).    * HWDC\n*                                                               * HWDC\n* ENTRY POINT = STCJOBTB                                        * HWDC\n*                                                               * HWDC\n*    PURPOSE = SEE FUNCTION (ABOVE).                            * HWDC\n*                                                               * HWDC\n*    LINKAGE = SEE ENTRY POINT DOCUMENTATION.                   * HWDC\n*                                                               * HWDC\n* INPUT =  SEE ENTRY POINT DOCUMENTATION.                       * HWDC\n*                                                               * HWDC\n* OUTPUT = ADDRESS OF STC JOBNAME TABLE                         * HWDC\n*                                                               * HWDC\n* EXIT-NORMAL = RETURN TO CALLER USING BR R14                   * HWDC\n*                                                               * HWDC\n* EXIT-ERROR = NONE                                             * HWDC\n*                                                               * HWDC\n* EXTERNAL REFERENCES = SEE BELOW                               * HWDC\n*                                                               * HWDC\n*    ROUTINES = NONE                                            * HWDC\n*                                                               * HWDC\n*    DATA AREAS = SEE BELOW                                     * HWDC\n*                                                               * HWDC\n*    CONTROL BLOCKS = SEE $HASPCB MACRO EXPANSION               * HWDC\n*                                                               * HWDC\n* TABLES = SEE BELOW                                            * HWDC\n*                                                               * HWDC\n* MACROS =                                                      * HWDC\n*                                                               * HWDC\n* CHANGE ACTIVITY                                               * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         TITLE '    H A S P G E N   P A R A M E T E R S    '      HWDC\n         COPY  $HASPGBL            COPY HASPGEN PARAMETERS        HWDC\n         TITLE 'HASP MODULE INFORMATION TABLE (MIT) '             HWDC\nEXIT024 $MODULE NOTICE=SP220,                                          X\n               ACB,                                                    X\n               DCB,                                                    X\n               DEB,                                                    X\n               DYN,                                                    X\n               KEYS,                                                   X\n               NEL,                                                    X\n               RPL,                                                    X\n               SSCT,                                                   X\n               TEXT,                                                   X\n               WPL,                                                    X\n               $BUFFER,                                                X\n               $CAT,                                                   X\n               $CMB,                                                   X\n               $CNVWORK,                                               X\n               $ERPL,                                                  X\n               $EXITPL,                                                X\n               $HASPEQU,                                               X\n               $HCT,                                                   X\n               $PADDR,                                                 X\n               $HFAME,                                                 X\n               $IOT,                                                   X\n               $JCT,                                                   X\n               $JQE,                                                   X\n               $KIT,                                                   X\n               $LRC,                                                   X\n               $MIT,                                                   X\n               $RDRWORK,                                               X\n               $PCE,                                                   X\n               $PDDB,                                                  X\n               $TAB,                                                   X\n               $PIT,                                                   X\n               $SCAT,                                                  X\n               $SJB,                                                   X\n               $SVT,                                                   X\n               $TAB,                                                   X\n               $TQE,                                                   X\n               $TRP,                                                   X\n               $TTE,                                                   X\n               $XECB,                                                  X\n               $XIT\n*                                                                 HWDC\n*                             EXTERNAL REFERENCES                 HWDC\n*                                                                 HWDC\n         SPACE 3                                                  HWDC\n         TITLE 'SAVE ADDRESS OF TABLE OF STARTED TASK JOB CARDS'  HWDC\n* ENTRY POINT DOCUMENTATION:                                    * HWDC\n*                                                               * HWDC\n*     REGISTERS AT ENTRY;                                       * HWDC\n*                                                               * HWDC\n*           R11 = BASE1 = ADDRESS OF HCT                        * HWDC\n*           R12 = BASE2 = OUR BASE                              * HWDC\n*           R13 = SAVE  = ADDRESS OF PCE                        * HWDC\n*           R14 = LINK  = RETURN ADDRESS                        * HWDC\n*           R15 =       = ENTRY ADDRESS                         * HWDC\n*                                                               * HWDC\n***************************************************************** HWDC\n         SPACE 3                                                  HWDC\nSTCJOBTB $ENTRY BASE=R12             PROVIDE PROCESSOR ENTRY POINTHWDC\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15\n         GETMAIN R,LV=LSAVA       GETMAIN SAVE/WORK AREAS\n         ST    R13,4(,R1)         STORE BACKWARD POINTER\n         LR    R4,R13             CALLERS SAVE ADDRESS\n         LR    R13,R1\n         ST    R13,8(,R4)         STORE FORWARD POINTER\n         USING JNP,R13\nATTACHIT LA    R3,MYECB                POINT TO ECB\n         XC    MYECB,MYECB             CLEAR ECB\n         LR    R1,R11             GIVE ADDRESSABILITY TO SUBTASK\n         ATTACH EP=HASPUSR1,ECB=(R3)\n         SPACE\n         ST    R1,TCBADDR              SAVE TCB ADDRESS\n         SPACE\n         WAIT  1,ECB=MYECB             WAIT FOR RETURN\n         SPACE\n         LA    R1,TCBADDR              GET TCB ADDRESS\n         DETACH (1)                    DETACH TMP\n         XC    MYECB,MYECB             CLEAR USER AREA\n         XC    TCBADDR,TCBADDR         CLEAR USER AREA\n         CLC   $USER1,$ZEROS\n         BNE   EX24RT00                                           HWDC\n         L     R15,ATABLE                                         HWDC\n         ST    R15,$USER1\nEX24RT00 EQU   *\n         LR    R1,R13\n         L     R13,4(R13)\n         FREEMAIN R,LV=LSAVA,A=(1)\n         RETURN (14,12),RC=0\n         LTORG                                                    HWDC\n         DC    0F'0'\nNTABLE   DC    CL8'STCTBLAD'\nATABLE   DC    A(TABLE)\nLMOD     DC    A(*-EXIT024)\nTABLE    EQU   *\n         DC    CL40'//SARHW    JOB (HW5130000P,C513,,100) '\n         DC    CL40' '\n         DC    CL40'//SARHW1   JOB (HW5130000P,C513,,100) '\n         DC    CL40' '\n         DC    CL40'//SARHW2   JOB (HW5120000P,C512,,100) '\n         DC    CL40' '\n         DC    CL40'//SARCS    JOB (CSSAR0000P,TSAR,,100) '\n         DC    CL40' '\n         DC    CL40'//SAREM    JOB (EMPSG7000P,EZDX,,500) '\n         DC    CL40' '\n*                            1         2         3         4         5\n*                   12345678901234567890123456789012345678901234567890\n         DC    CL40' '\n         DC    CL40' '\n         COPY  STCTBL\n         DC    80X'00'      END OF TABLE\nPATCH    DC    C'PATCH '\n         DC    250C' '\nJNPDSECT DSECT\nJNP      DS    18F\nMYECB    DS    F\nTCBADDR  DS    F\nLSAVA    EQU   *-JNPDSECT\nEXIT024  CSECT ,\n         TITLE 'COMPLETE MODULE INFORMATION TABLE. '              HWDC\n         $MODEND                                                  HWDC\n         END   ,                                                  HWDC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HASPUSR1": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x11\\x13\\x01Y\\x01R\\x00\\x07\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T11:13:00", "lines": 345, "newlines": 338, "modlines": 7, "user": "HWSYS4"}, "text": "*---------------------------------------------------------------------*\n*  THIS PROGRAM IS USED TO LOAD $USER1 WITH NEW TABLE OF STC JOB CARDS*\n*   - ROUTINE DOES (1) A GETMAIN FOR SAVE/WORK AREA               156 *\n*                                                                     *\n*                  (2) A GETMAIN ABOVE THE LINE FOR THE TABLE(64K)    *\n*                                                                     *\n*                  (3) DYNAMICALLY ALLOCATES SYS2.JES2.PARMS(STCTBL)  *\n*                      (CHANGE THIS TO THE PDS YOU USE)               *\n*                                                                     *\n*                  (4) READS THE FILE IN AND MOVES IT TO THE TABLE    *\n*                                                                     *\n*                  (5) FREEMAINS ANY EXTRA MEMORY IF END OF FILE IS   *\n*                      REACHED BEFORE THE TABLE IS FULL               *\n*                                                                     *\n*                  (6) IF THE TABLE FILLS UP BEFORE END OF FILE A WTO *\n*                      IS ISSUED TO TELL THE OPERATORS                *\n*                                                                     *\n*                  (7) SWAPS TABLE POINTERS IF ALL IS WELL            *\n*                                                                     *\n*                  (8) DELETES THE OLD TABLE IF THERE IS ONE          *\n*                                                                     *\n*      EXIT024  ATTACHES ROUTINE AT END OF INITIALIZATION OF JES2     *\n*                                                                     *\n*      HASPCOMM ATTACHES ROUTINE EACH TIME A VALID DYNAMIC RESET IS   *\n*      REQUESTED.  $JT,1                                              *\n*                                                                     *\n*     $USER1            IS  HCT POINTER  TO CURRENT  STCTABLE      .  *\n*                                                                     *\n*  NOTE!!!!                                                           *\n*      THERE IS A COPY STATEMENT FOR STCTBL IN THE SOURCE OF THIS     *\n*      MODULE.  IT IS EXPECTED THAT YOUR INITIALIZATION PDS WILL      *\n*      WILL ALREADY HAVE THE MEMBER IN IT.  IF YOUR INIT DECK IS      *\n*      NOT A PDS, YOU WILL NEED TO CHANGE THE DYNAMIC ALLOCATION      *\n*      TO USE SOME OTHER PDS.                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 1\n         COPY  $HASPGBL\nHASPUSR  $MODULE  NOTICE=SP220,                                        X\n               SDWA,                                                   X\n               RPL,                                                    X\n               WPL,                                                    X\n               $BUFFER,                                                X\n               $HASPEQU,                                               X\n               $JCT,                                                   X\n               $MIT,                                                   X\n               $JQE,                                                   X\n               $MITETBL,                                               X\n               $PADDR,                                                 X\n               $PCE,                                                   X\n               $CAT,                                                   X\n               $HCT\n         SPACE 1\n**-------------------------------------------------------------------**\n***                                                                 ***\n**-------------------------------------------------------------------**\nHASPUSR  AMODE  31\nHASPUSR1 $ENTRY BASE=R12\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         BALR  R12,0              ESTABLISH BASE REG\n         USING *,R12              CSECT ADRESSABILITY\n         USING HCT,R11            HCT   ADRESSABILITY\n         USING JNP,R13            SAVE AREA ADRESSABILITY\nONTOP    EQU   *\n         LR    R11,R1             RELOAD HCT\n         GETMAIN R,LV=LSAVA       GETMAIN SAVE/WORK AREAS\n         ST    R13,4(,R1)         STORE BACKWARD POINTER\n         LR    R4,R13             CALLERS SAVE ADDRESS\n         LR    R13,R1\n         ST    R13,8(,R4)         STORE FORWARD POINTER\n         SPACE 1\n**-------------------------------------------------------------------**\n***    ESTABLISH ESTAE EXIT FOR ABNORMAL TERMINATIONS               ***\n**-------------------------------------------------------------------**\n         LA    R1,12(,R13)        ESTAE PARAM LIST ADDRESS\n         MVC   0(LDRABNDL,R1),LDRABND\n*        ESTAE PARAM=(13),MF=(E,(1))\n         SPACE 1\n**-------------------------------------------------------------------**\n***    OBTAIN STORAGE FOR TABLE                                     ***\n**-------------------------------------------------------------------**\n         SPACE 1\n         SLR   R5,R5\n         ST    R11,SAVBASE1       SAVE R11 FOR ESTAE\n         LR    R4,R1              SAVE ADDRESS\n         L     R0,=F'65536'       GET LENGTH\n         ICM   R0,8,SPNUM\nGETCORE  GETMAIN RC,LV=(0),LOC=ANY\n         LTR   R15,R15\n         BNZ   ERROR1\n         LR    R3,R1              GET STARTING ADDRESS\n         LR    R5,R1              GET STARTING ADDRESS DSECT\n         L     R6,=F'65456'       GET END DISPLACEMENT\n         AR    R6,R5              GET END ADDRESS\n         USING CONSTANT,R5\n         MVC   CONSTANT,=C'OLDTABLE' MARK TABLE FOR FUTURE DELETION\n         ST    R5,AREAADDR        SAVE ADDRESS\n         MVC   AREALENG,=F'65536' SAVE LENGTH\n*   THE FOLLOWING ALLOC LOGIC FROM QUE ALLOCATE MODULE\nALLOC    EQU   *\n         XC     CTLGBLK,CTLGBLK CLEAR WORK AREA\n         LOCATE READCTLG\n         LTR   R15,R15        TEST RETURN CODE\n         BNZ   LNOGOOD        BRANCH IF NOT ZERO\n         MVC   DA08SER(6),CTLGBLK+6\n         LA    R1,DAIRDSN     LOAD ADDRESS OF DATA SET NAME\n         ST    R1,DA08PDSN    STORE IN ALLOC PARM LIST\n         ST    R1,DA18PDSN    STORE IN FREE PARM LIST\n         LA    R1,DA18CD      LOAD ADDRESS OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R9,CALLDAIR    CALL DAIR - FREE THE DDNAME\n         LTR   R15,R15        IS RETURN CODE ZERO?\n         BZ    DDFREE         YES. CONTINUE\n         CH    R15,=H'28'     IS DATASET ALREADY FREE?\n         BNE   DAIRFAI2       NO - GO TELL ABOUT IT\nDDFREE   EQU   *\n         LA    R1,DA08CD      LOAD ADDR OF ALLOC PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R9,CALLDAIR    CALL DAIR - ALLOCATE THE DATASET\n         LTR   R15,R15        IS RETURN CODE ZERO?\n         BZ    OPENFILE       YES. CONTINUE\nDAIRSW   NOP   DAIRFAIL       SWITCH FOR PARM LIBRARY\n         OI    DAIRSW+1,X'F0'\n         MVC   ENQDSN(L'ALTNAME),ALTNAME\n         WTO   'DAIR 1 FAILED'\n         B     ALLOC\nOPENFILE EQU   *\n         OPEN  JOBCARDS\nGETRST   L     R9,=A(XAMODE)\n         SLR   R14,R14\n         BSM   R14,R9\nXAMODE   EQU   *\n         ST    R14,AMODER\n         GET   JOBCARDS                EOD TO EODONRST\n         LA    R15,ENDIT          CLEAR REGISTER 15\n         L     R14,AMODER         GET ADDRESSING MODE\n         OR    R15,R14            SET TO OLD MODE\n         BSM   R0,R15             BRANCH TO SET MODE\nENDIT    EQU   *\n         MVC   RSTREC,0(1)             MOVE REC TO TABLE\n         LA    R5,80(,R5)              POINT TO NEXT SLOT\n         CR    R6,R5                   IS THERE ROOM FOR ANOTHER?\n         BH    GETRST                  YES - GET ANOTHER\n         WTO   'STC JOB CARD TABLE FULL - INFORM SYSTEM SUPPORT',DESC=2\n         MVI   0(R6),X'00'             CLEAR LAST 80\n         MVC   1(79,R6),0(R6)          BYTES\n         B     FNDTAG\nEODONRST EQU   *                       END OF JOBCARDS FILE\n         LA    R15,ENDIT2         CLEAR REGISTER 15\n         L     R14,AMODER         GET ADDRESSING MODE\n         OR    R15,R14            SET TO OLD MODE\n         BSM   R0,R15             BRANCH TO SET MODE\nENDIT2   EQU   *\n         MVI   RSTREC,X'00'            BLANK OUT REST\n         MVC   RSTREC+1(79),RSTREC     OF RECORD\n         LA    R5,80(,R5)              POINT TO NEXT POSITION\n         LA    R0,80(,R6)              POINT TO END OF AREA\n         SR    R0,R5                   GET LENGTH OF EXCESS\n         ICM   R0,8,SPNUM              GET SUB POOL NUMBER\n         LR    R1,R5                   GET POINTER\n         FREEMAIN RC,LV=(0),A=(1)      FREE EXCESS\n         SR    R5,R3                   GET LENGTH OF TABLE\n         ST    R5,12(R3)               SAVE FOR NEXT FREE\nFNDTAG   EQU   *\n         CLOSE (JOBCARDS)\n         LA    R1,DAIRDSN     LOAD ADDRESS OF DATA SET NAME\n         ST    R1,DA08PDSN    STORE IN ALLOC PARM LIST\n         ST    R1,DA18PDSN    STORE IN FREE PARM LIST\n         LA    R1,DA18CD      LOAD ADDRESS OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R9,CALLDAIR    CALL DAIR - FREE THE DDNAME\n         LTR   R15,R15        IS RETURN CODE ZERO?\n         BZ    DDFREE2        YES. CONTINUE\n         CH    R15,=H'28'     IS DATASET ALREADY FREE?\n         BNE   DAIRFAI2       NO - GO TELL ABOUT IT\nDDFREE2  EQU   *\n         L     R2,$USER1          GET OLD POINTER\n         LA    R1,16(,R3)         GET BEGINNING OF TABLE\n         ST    R1,$USER1          SAVE NEW TABLE ADDRESS\n         NI    $USER1,X'7F'       TURN OFF 'LOADING' BIT\n         LA    R2,0(R2)           TURN OFF BIT IF ON\n         SH    R2,=H'16'\n         BNP   GETOUT\n         CLC   0(8,R2),=C'OLDTABLE' WAS THE OLD ADDRESS A LOADED TABLE?\n         BNE   GETOUT             NO - GET OUT\n         L     R1,8(R2)           GET POINTER TO OLD ADDRESS\n         L     R0,12(R2)          GET LENGTH TO FREE\n         ICM   R0,8,SPNUM\nFREECORE FREEMAIN RC,LV=(0),A=(1)\nGETOUT   EQU   *\n         LR    R1,R13\n         L     R13,4(R13)\n         FREEMAIN R,LV=LSAVA,A=(1)\n         RETURN (14,12),RC=0\nCALLDAIR XC    DAIRECB,DAIRECB  CLEAR ECB\n         LA    R1,DAPLUPT     LOAD ADDR OF DAIR CALL LIST\n         LINK  EP=IKJEFD00    CALL DAIR\n         BR    R9             RETURN.\n***********************************************************************\n*  DAIR HAS FAILED. TAKE A PICTURE AND GO HOME                        *\n***********************************************************************\nDAIRFAI2 EQU   *\n         LR    R7,R15\nBADFLMES WTO   'UNABLE TO FREE DD NAME     FOR STC JOB CARDS',DESC=2\n         B     DAIRFAI3\nDAIRFAIL EQU   *\n         LR    R7,R15\nDAIRFAI3 EQU   *\n         ICM   R10,15,DAIRSW\nBADALMES WTO   'UNABLE TO ALLOCATE DATASET FOR STC JOB CARDS',DESC=2\n         WTO   'NOTIFY SYSTEM SUPPORT',DESC=2\nLNOGOOD  EQU   *\n         LR    R8,R0\n         LR    R9,R1\n         ABEND 99,DUMP        ABEND THE JOB. USER CODE 0099\nERROR1   EQU   *\n         WTO   'UNABLE TO OBTAIN STORAGE FOR STC JOB CARDS.',DESC=2\n         WTO   'NOTIFY SYSTEM SUPPORT',DESC=2\n         B     GETOUT\n         SPACE 1\n**-------------------------------------------------------------------**\n***    ESTAE EXIT ROUTINE                                           ***\n**-------------------------------------------------------------------**\n         SPACE 1\n         USING LDRESTAE,R15       PROVIDE LOCAL ADDRESSABILITY\n         USING SDWA,R1            PROVIDE SDWA ADDRESSABILITY\nLDRESTAE LR    R3,R1              ASSUME NO SDWA - GET CC\n         LA    R4,12              TEST FOR\n         CLR   R0,R4                  SDWA PRESENT\n         BE    SKIP               NO SDWA , BRANCH - INFO IN REGS\n         L     R3,SDWAABCC        GET CC\n         L     R2,SDWAPARM        OBTAIN SAVE AREA ADDRESS\nSKIP     ST    R3,ABNCC-JNPDSECT(,R2)  SAVE CC\n         CLR   R0,R4              WAS A SDWA PROVIDED\n         BE    ESTAE1             NO, BRANCH\n         SETRP RC=4,RETADDR=LDRMSG,FRESDWA=YES,DUMP=YES\n         BR    R14\nESTAE1   LA    R15,4              INDICATE RETRY\n         BALR  R0,R14             R0 = RETRY ADDRESS\n         SPACE 1\n**-------------------------------------------------------------------**\n***    RETRY ESTAE ROUTINE     -    INFORM OPERATOR                  **\n**------------------------------------------------------------------***\n         SPACE 1\n         USING LDRMSG,R15         PROVIDE LOCAL ADDRESSABILITY\nLDRMSG   LR    R13,R1             RESTORE JNLOADER SAVE AREA\n         L     R11,SAVBASE1       RESTORE R11\n         L     R12,=A(ONTOP)      RESTORE R12\n         DROP  R15                PICK-UP R12 ADDRESSABILITY\n         B     GETOUT              EXIT\n         SPACE 1\n**-------------------------------------------------------------------**\n***    CONSTANTS   STORAGE   DSECTS                                 ***\n**-------------------------------------------------------------------**\n         SPACE 1\nLDRABND  ESTAE LDRESTAE,RECORD=YES,MF=L\nLDRABNDL EQU   *-LDRABND           LENGTH OF ESTAE\n         LTORG\nREADCTLG CAMLST NAME,ENQDSN,,CTLGBLK\n***********************************************************************\n*  DATASET ALLOCATION FIELDS                                          *\n*     (ADAPTED FROM SYS1.MACLIB (IKJDAPL,IKJDAP08,0C,18))             *\n***********************************************************************\nQDAIR    DS    0D              START OF DAIR WORK AREAS\nDAIRECB  DC    F'0'            ECB USED BE ALLOCATE SUBROUTINE\nDAIRFLAG DC    X'08'           FLAG USED BY ALLOCATE SUBROUTINE\n         DC    XL3'0'          DEAD SPACE FOR ALIGNMENT\n***********************************************************************\n*  THE DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR) PARAMETER LIST     *\n*  (DAPL) IS A LIST OF ADDRESSES PASSED FROM THE INVOKER TO DAIR      *\n*  VIA REGISTER 1                                                     *\n***********************************************************************\nDAPLUPT  DC    A(0)      PTR TO UPT  (USER PROFILE TABLE)\nDAPLECT  DC    A(0)      PTR TO ECT  (ENVIRONMENT CONTROL TABLE)\nDAPLECB  DC    A(DAIRECB) PTR TO CP'S ECB  (EVENT CONTROL BLOCK)\nDAPLPSCB DC    A(0)      PTR TO PSCB  (PROTECTED STEP CONTROL BLOCK)\nDAPLDAPB DC    A(0)      PTR TO DAIR PARAMETER BLOCK\n***********************************************************************\n*  ALLOCATE DDNAME(W) DSNAME(X) SHR UNIT(Y) VOLUME(Z)                 *\n***********************************************************************\nDA08CD   DC    X'0008'   DAIR ENTRY CODE\nDA08FLG  DC    X'00'     FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0\n         DC    X'00'\nDA08DARC DC    H'0'      DYN ALLOC RETURN CODE\nDA08CTRC DC    H'0'      CATALOG RETURN CODE\nDA08PDSN DC    A(DAIRDSN) POINTER TO DSNAME TO BE SEARCHED IN DSE\nDA08DDN  DC    CL8'JOBCARDS' DDNAME TO BE SEARCHED IN DSE\nDA08UNIT DC    CL8'3380'    UNITNAME\nDA08SER  DC    CL8'XXXXXX'  VOLUME SERIAL NUMBER\nDA08BLK  DC    F'0'         DATA SET AVERAGE RECORD LENGTH\nDA08PQTY DC    F'0'         PRIMARY SPACE QUANTITY\nDA08SQTY DC    F'0'         SECONDARY SPACE QUANTITY\nDA08DQTY DC    F'0'         DIRECTORY BLOCK QUANTITY\nDA08MNM  DC    CL8'STCTBL'  MEMBER NAME\nDA08PSWD DC    CL8' '       PASSWORD\nDA08DSP1 DC    X'08'        DATA SET STATUS FLGS - SHR\nDA08DPS2 DC    X'08'        DATA SET DISPOSITION - KEEP\nDA08DPS3 DC    X'08'        DATA SET CONDITIONAL DISPOSITION - KEEP\nDA08CTL  DC    X'00'        FLAGS TO CONTROL ACTIONS TAKEN BY DAIR\n         DC    XL3'0'       RESERVED\nDA08DSO  DC    X'00'        DSORG\nDA08ALN  DC    CL8' '       ATTR-LIST-NAME\n***********************************************************************\n*  FREE DDNAME(XXXXXXXX)                                              *\n***********************************************************************\nDA18CD   DC    X'0018'      DAIR ENTRY CODE\nDA18FLG  DC    X'00'   FUNTIONS TO BE PERFORMED WHEN RET CODE IS  0\n         DC    X'00'\nDA18DARC DC    H'0'         DYNAMIC ALLOCATION RETURN CODE\nDA18CTRC DC    H'0'         CATALOG RETURN CODE AREA\nDA18PDSN DC    A(DAIRDSN)   POINTER TO DSNAME TO BE SEARCHED IN DSE\nDA18DDN  DC    CL8'JOBCARDS' DDNAME TO BE SEARCHED IN DSE\nDA18MNM  DC    CL8' '       MEMBER NAME\nDA18SCLS DC    CL2' '       SYSOUT CLASS DESIRED WHEN UNALLOCATING A\n*                           SYSOUT DATA SET\nDA18DPS2 DC    X'08'        DATA SET DISPOSITION - KEEP\nDA18CTL  DC    X'10'        FLAGS FOR SPECIAL DAIR PROCESSING\nDA18JBNM DC    CL8' '       IGNORED AS OF OS VS/2 RELEASE 2\nDAIRDSN  DC    H'19'        LENGTH OF DSN\nENQDSN   DC    CL44'SYS2.JES2.PARMS'\nJOBCARDS DCB   DDNAME=JOBCARDS,MACRF=(GL),DSORG=PS,EODAD=EODONRST\nXZERO    DC    X'00'\nHSPNUM   DC    H'000'\n         ORG   HSPNUM+1\nSPNUM    DS    XL1\n         DS    0H\nCTLGBLK  DS    0D\n         DS    CL265\nALTNAME  DC    C'SYS2.PARMS.JES2'   THIS IS MY JES2 INIT PDS\nTABLED   DSECT\nCONSTANT DS    CL8\nAREAADDR DS    F\nAREALENG DS    F\nRSTREC   DS    0CL80\nJNPDSECT DSECT\nJNP      DS    18F\nABNCC    DS    F\nSAVBASE1 DS    F\nAMODER   DS    F\nWAREA    DS    16F\nLSAVA    EQU   *-JNPDSECT\nHASPUSR  CSECT ,\n         $MODEND\n         END\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STCTBL": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92%\\x9f\\x10\\x00\\x00\\x03\\x00\\x03\\x00\\x00\\xc8\\xe6\\xe2\\xe8\\xe2\\xf4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-09-15T10:00:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "HWSYS4"}, "text": "//SARHW    JOB (??????????,????,,100)\n//ACCSFT   JOB (??????????,????,,900),MSGCLASS=Y,NOTIFY=HWADAB              MORE\n//SAR   OUTPUT DEFAULT=Y,JESDS=ALL,CLASS=A,DEST=DBSAR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT191/FILE191.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT191", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}