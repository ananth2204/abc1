         COPY  #REGS
         SPACE 2
BASEREG  EQU   R11                BASE REGISTER
LINKREG  EQU   R14                SUBROUTINE LINK REG
         EJECT
         @TOKEN   MF=ALL
         EJECT
$PARSMAP @PARSE   MF=DSECT
         EJECT
$SYNTMAP @SYNTXCK MF=DSECT
         EJECT
***********************************************************************
*                                                                     *
*   PERFORM INITIAL HOUSEKEEPING                                      *
*                                                                     *
***********************************************************************
T@SYNTXC #ENTRY BASEREG=BASEREG,SAVEAREA=SAVEAREA,PARM=@PARM
         EJECT
***********************************************************************
*                                                                     *
*   START OF MAIN PROGRAM                                             *
*                                                                     *
***********************************************************************
BEGIN    DS    0H
         BAL   LINKREG,INIT       INITIALIZE STACK, BUFFERS, ETC.
         SPACE 1
NEXTCARD DS    0H
         GET   SYSIN,INBUFF
         SPACE 1
         MVC   INCARD,INBUFF      COPY INPUT
         LA    R1,ECHOCARD        ECHO INPUT
         BAL   LINKREG,PUTMSG     DISPLAY ERROR MESSAGE
         SPACE 1
         BAL   LINKREG,PARSEIT    PARSE INPUT STRING
         CLI   STATFLAG,ERROR     OK ?
         BE    NEXTCARD           NO, CONTINUE
         SPACE 1
         BAL   LINKREG,SYNTXCHK   CHECK SYNTAX OF INPUT STRING
         SPACE 1
         B     NEXTCARD           NO, CONTINUE
         SPACE 1
EOF      DS    0H
EXIT     DS    0H
         L     R13,SAVEAREA+4     PT TO CALLER'S REG SAVEAREA
         SPACE 1
         RETURN (14,12),RC=0      THAT'S ALL FOLKS!
         EJECT
***********************************************************************
*                                                                     *
*   SUBROUTINE - INITIALIZE BUFFERS, COUNTERS, ETC.                   *
*                                                                     *
***********************************************************************
INIT     DS    0H
         LR    R5,LINKREG         COPY RETURN REG
         SPACE 1
         #STACK STACK=STACK,LEVELS=4,ACTION=INIT  INIT REG STACK
         SPACE 1
         XC    STATFLAG,STATFLAG  RESET STATUS FLAG
         SPACE 1
         OPEN  (SYSIN,(INPUT),SYSPRINT,(OUTPUT))
         SPACE 1
         LR    LINKREG,R5         RESTORE LINK REG
         BR    LINKREG            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*   SUBROUTINE - PARSE INPUT STRING                                   *
*                                                                     *
***********************************************************************
PARSEIT  DS    0H
         #PUSH STACK=STACK        SAVE CALLER'S REGS
         SPACE 1
         LA    R3,PARMLST1        POINT TO PARM LIST
         SPACE 1
         @PARSE MF=(E,R3)
         SPACE 1
         LTR   R15,R15            OK ?
         BZ    PARSEIX            YES, GET OUT
         SPACE 1
         MVI   STATFLAG,ERROR     SET FLAG
         LA    R1,BADLEN          INVALID STRING LENGTH
         BAL   LINKREG,PUTMSG     DISPLAY ERROR MESSAGE
         SPACE 1
PARSEIX  DS    0H
         #POP  STACK=STACK        RESTORE CALLER'S REGS
         BR    LINKREG            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*   SUBROUTINE - CHECK SYNTAX OF INPUT STRING                         *
*                                                                     *
***********************************************************************
SYNTXCHK DS    0H
         #PUSH STACK=STACK        SAVE CALLER'S REGS
         SPACE 1
         LA    R2,PARMLST1        POINT TO @PARSE PARM LIST
         USING $PARSMAP,R2        SET ADDR
         SPACE 1
         LA    R3,PARMLST2        POINT TO @SYNTXCK PARM LIST
         USING $SYNTMAP,R3        SET ADDR
         SPACE 1
         MVC   @SYSYNTB,@SYNTXTB  COPY ADDR OF MY SYNTAX TABLE
         SPACE 1
         @SYNTXCK MF=(E,R3)
         SPACE 1
         LTR   R15,R15            OK ?
         BZ    SYNTXCH1           YES, GET OUT
         SPACE 1
         MVC   INCARD,=80C' '     CLEAR BUFFER
         L     R15,@SYTOKAD       POINT TO TOKEN
         LA    R0,INBUFF          POINT TO INPUT STRING
         SR    R15,R0             RELATIVE LOC. OF ERROR
         LA    R1,INCARD          POINT TO OUTPUT BUFFER
         LA    R1,0(R15,R1)       RELATIVE LOC. OF ERROR FLAG
         MVI   0(R1),C'$'         STORE ERROR FLAG
         LA    R1,ECHOCARD        DISPLAY ERROR FLAG
         BAL   LINKREG,PUTMSG     DISPLAY ERROR MESSAGE
         LA    R1,SYNERR          SYNTAX ERROR
         BAL   LINKREG,PUTMSG     DISPLAY ERROR MESSAGE
         LA    R1,BLNKLNE         BLANK LINE
         BAL   LINKREG,PUTMSG     DISPLAY ERROR MESSAGE
         B     SYNTXCHX           GET OUT
         SPACE 1
SYNTXCH1 DS    0H
         LA    R1,SYNOK           SYNTAX IS GOOD
         BAL   LINKREG,PUTMSG     DISPLAY MESSAGE
         SPACE 1
SYNTXCHX DS    0H
         #POP  STACK=STACK        RESTORE CALLER'S REGS
         BR    LINKREG            RETURN TO CALLER
         SPACE 1
         DROP  R2,R3
         EJECT
***********************************************************************
*                                                                     *
*   SUBROUTINE - DISPLAY MESSAGE                                      *
*                                                                     *
***********************************************************************
PUTMSG   DS    0H
         #PUSH STACK=STACK        SAVE CALLER'S REGS
         SPACE 1
         LR    R4,R1              SAVE MESSAGE ID IN PARM LIST
         LA    R3,PARMLST3        POINT TO #PUTMSG PARM LIST
         SPACE 1
         #PUTMSG MF=(E,R3),MSGID=(R4)
         SPACE 1
         #POP  STACK=STACK        RESTORE CALLER'S REGS
         BR    LINKREG            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*   CONSTANTS, WORK AREAS, ETC.                                       *
*                                                                     *
***********************************************************************
SAVEAREA DS    18F                REGISTER SAVE AREA
@PARM DS       A                  OS PARM ADDR
RETCODE  DS    F                  RETURN CODE
DUBLWORK DS    D                  DOUBLEWORD WORK AREA
*
STATFLAG DS    X                  STATUS FLAG
ERROR    EQU   X'80'              ERROR
*
@SYNTXTB DC    V(T@SYNTBL)        ADDR OF SYNTAX TABLE
@USREXIT DC    V(T@UEXITS)        ADDR OF USER EXITS
@PARSWRK DC    V(TOKNSTAK)        ADDRESS OF TOKEN STACK
*
STACK    #STACK STACK=STACK,LEVELS=4,ACTION=GEN  DEFINE STACK AREA
*
PARMLST1 @PARSE MF=L,CMDLINE=INBUFF,CMDLEN=L'INBUFF,DELIMTB=DELIMTAB
*
PARMLST2 @SYNTXCK MF=L
*
PARMLST3 #PUTMSG MSGTBAD=#MSGTABL,OTDCBAD=SYSPRINT,OTBUFAD=MSGOBUFF,   +
               OTBUFLN=L'MSGOBUFF,MF=L
*
DELIMTAB @DELIM MF=GEN,PTDASH=NO,PTUBAR=NO,PTPOUND=NO,PTSLASH=NO,      +
               PTCOLON=NO,PTPERIOD=NO,PTDOLLAR=NO
*
INBUFF   DS    CL80               INPUT  BUFFER
MSGOBUFF DS    CL120              OUTPUT BUFFER
         EJECT
***********************************************************************
*                                                                     *
*   SYNTAX RULES                                                      *
*                                                                     *
*       MYCMD NAME=YOURNAME, SCORES=(NUM1,NUM2)                       *
*                                                                     *
*                 - OR -                                              *
*                                                                     *
*       MYCMD NAME=YOURNAME, +                                        *
*             SCORES=(NUM1,MUM2)                                      *
*                                                                     *
*   SYNTAX TABLE IS A CSECT CALLED T@SYNTBL                           *
*                                                                     *
***********************************************************************
*        PRINT NOGEN
*        COPY  SYNTXTBL
         EJECT
***********************************************************************
*                                                                     *
*   MESSAGES                                                          *
*                                                                     *
***********************************************************************
#MSGTABL #GENMSG TYPE=INITIAL
         #GENMSG TYPE=ENTRY,MSGID=BADLEN,                              +
               MSGTXT='*** INVALID STRING LENGTH(S) ***'
         #GENMSG TYPE=ENTRY,MSGID=GETMERR,                             +
               MSGTXT='*** GETMAIN FAILED ***'
INCARD   #GENMSG TYPE=ENTRY,MSGID=ECHOCARD,                            +
               MSGTXT='                                                +
                                               '
         #GENMSG TYPE=ENTRY,MSGID=SYNERR,                              +
               MSGTXT='*** SYNTAX ERROR ***'
         #GENMSG TYPE=ENTRY,MSGID=BLNKLNE,                             +
               MSGTXT='  '
         #GENMSG TYPE=ENTRY,MSGID=SYNOK,                               +
               MSGTXT='+++ ABOVE CARD IS SYNTACTICALLY CORRECT +++'
         #GENMSG TYPE=LAST
         EJECT
***********************************************************************
*                                                                     *
*   DATA SET DEFINITIONS                                              *
*                                                                     *
***********************************************************************
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=F,BLKSIZE=120
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=EOF
         SPACE 1
         LTORG *
         SPACE 1
         END
