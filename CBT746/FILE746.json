{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012717000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1822366, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE746.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1822366, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1822366, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE746.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x1d\\x03'", "DS1TRBAL": "b'\\xb6\\xe2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'P\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x18\\x00\\x00\\x05\\x19\\x00\\x0e\\x00\\x1e'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04H\\x00\\x00\\x01\\x06$_\\x01\\x06$_ I\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf2@@@'", "ispf": {"version": "04.72", "flags": 0, "createdate": "2006-09-02T00:00:00", "modifydate": "2006-09-02T20:49:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-472"}, "text": "REGULAR CBT TAPE - VERSION 472    FILE:  746\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT472.FILE746\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 13 MEMBERS COUNTED; CUMULATIVE SIZE IS 16,846 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/02/06    20:49:45    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x06$O\\x01\\x06$O\\x10\\x10\\x13\\xad\\x13\\xad\\x00\\x00\\xd4\\xe2\\xe6\\xd6\\xd9\\xc4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T10:10:00", "lines": 5037, "newlines": 5037, "modlines": 0, "user": "MSWORD"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "$CBTTXT": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00(\\x01\\x06$O\\x01\\x06$_ G\\x00=\\x00>\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-02T20:47:28", "lines": 61, "newlines": 62, "modlines": 0, "user": "SBGOLOB"}, "text": "Parsing, Syntax Checking and Interpretation\n\n    This tells you how to set up the non-MVS platforms\n    after you have taken the $PLATFMS member and unzipped\n    it after transferring it in BINARY to a PC.\n\n$PLATFMS contents  (zipped file)\n\n        Windows executables and object modules\n        C source code\n        H files\n        Sample input files for C code\n        User's Guide\n\n        Windows-readme.txt\n    o       How to setup run-time environment\n    o       How to build tools and samples\n\n        AIX-readme.txt\n    o       How to setup run-time environment\n    o       How to build tools and samples\n\n        HPUX-readme.txt\n    o       How to setup run-time environment\n    o       How to build tools and samples\n\n        OS400-readme.txt\n    o       How to setup run-time environment\n    o       How to build tools and samples\n\n        MVS-readme.txt\n    o       How to setup run-time environment\n    o       How to build tools and samples\n\n        MVS members, PDS XMIT files       (part of File 746 pds)\n    o       JCL\n    o       SOURCE\n    o       MACLIB\n    o       LOADLIB\n\n        AIX compressed tar file\n    o       Executables and object modules\n    o       Sample input files for C code\n    o       Object list file\n    o       make files\n    o       makemod shell script\n    o       makeobj shell script\n\n        HP-UX compressed tar file\n    o       Executables and object modules\n    o       Sample input files for C code\n    o       make files\n    o       makemod shell script\n    o       makeobj shell script\n\n        OS/400 SAVLIB file\n    o       Executables and object modules\n    o       Sample input files for C code\n    o       make files\n    o       makemod CL script\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$PLATFMS": {"ttr": 2565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x06$O\\x01\\x06$O\\x179\\x15\\x9c\\x15\\x9c\\x00\\x00\\xe9\\xc9\\xd7\\xd7\\xc5\\xc4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T17:39:00", "lines": 5532, "newlines": 5532, "modlines": 0, "user": "ZIPPED"}, "mimetype": "application/zip", "datatype": "binary", "extension": ".zip"}, "$README": {"ttr": 4866, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x009\\x01\\x06$O\\x01\\x06$O\\x17B\\x00V\\x00J\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T17:42:39", "lines": 86, "newlines": 74, "modlines": 0, "user": "SBGOLOB"}, "text": "***********************************************************************\n*                                                                     *\n*   MVS README                                                        *\n*                                                                     *\n*   CBT: Parsing, Syntax Checking and Interpreting                    *\n*                                                                     *\n*   rtsujimoto@nyc.rr.com                                             *\n*                                                                     *\n***********************************************************************\n\nNote:  All the other platforms, which are supported with C language\n       code, have their materials included in a zipped file, which\n       has been included here as member $PLATFMS.  To use this file,\n       FTP it in BINARY to a PC and unzip it there.  Then, all the\n       stuff which is supported with C code, instead of Assembler,\n       will be found.\n\nDescription\n-----------\nThe README document describes how to install the executables,\nobject modules, and other files required to build and execute the\ntools, and sample programs.\n\nNOTE: No compilations of the tools or sample programs are\n      required to run the sample executables, or to incorporate\n      the tools into your applications\n\n Detailed documentation is found in the $$DOC member, which is\n in Microsoft WORD format.  To read this document, you must FTP\n it, or otherwise \"file transfer\" it in BINARY to a PC or other\n machine that can read Microsoft WORD.  Then you must read the\n document on that machine.\n\nInstallation\n------------\n01. FTP the following data sets to MVS:\n\n    ftp your.mvs.dns or IP address\n    binary\n    prompt off\n    quote site fixrecfm 80\n    put rti.jcl.xmi\n    put rti.loadlib.xmi\n    put rti.maclib.xmi\n    put rti.source.xmi\n\n02. Use TSO RECEIVE to restore the data sets:\n\n    (See sample job $TSORECV to do all of this at once.)\n\n    RECEIVE USERID(your.userid) INDS(RTI.JCL.XMI)\n\n    When prompted for the restore parameters, enter:\n\n    DSN('whatever you want to call it')\n\n03. Repeat Step 02 for the remaining data sets\n     (or use the $TSORECV sample job).\n\nRunning the sample programs\n---------------------------\n01. Edit the JCL library using ISPF\n02. Select a member and modify the JCL accordingly\n03. Submit the job\n\n\nBuild Instructions\n------------------\n01. Edit the JCL library using ISPF\n02. To build the tools:\n\n    a. Select member BLDTOOLS and modify the JCL accordingly\n    b. Submit the job\n\n03. To build the sample programs:\n\n    a. Select member BLDSAMPL and modify the JCL accordingly\n    b. Submit the job\n\n    NOTE:\n    1. T@SYNTBL and T@UEXITS MUST BE BUILT BEFORE T@SYNTXC\n    2. T@SYNTBL MUST BE LINKED WITH NCAL\n    3. The sample code shows how the syntax table and user exits\n       can be built separate from each other, and the main\n       program.  In the simplest case, the syntax table and user\n       exits can be coded in the main program.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$TSORECV": {"ttr": 4869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00F\\x01\\x06$\\x0f\\x01\\x06$_ H\\x00\\x13\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2006-09-02T20:48:46", "lines": 19, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBT  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//*  YOU MUST ADAPT THIS JOB TO YOUR INSTALLATION'S NAMING  *//\n//*   STANDARDS.  THIS JOB CREATES THE PDS'ES FOR MVS.      *//\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  RECEIVE INDS('CBT.CBT472.FILE746.PDS(JCL)')\n  DSN('userid.RTI.JCL') VOL(volser)\n  RECEIVE INDS('CBT.CBT472.FILE746.PDS(LOADLIB)')\n  DSN('userid.RTI.LOADLIB') VOL(volser)\n  RECEIVE INDS('CBT.CBT472.FILE746.PDS(MACLIB)')\n  DSN('userid.RTI.MACLIB') VOL(volser)\n  RECEIVE INDS('CBT.CBT472.FILE746.PDS(SOURCE)')\n  DSN('userid.RTI.SOURCE') VOL(volser)\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE746": {"ttr": 4871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04H\\x00\\x00\\x01\\x06$_\\x01\\x06$_ I\\x00b\\x00b\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf2@@@'", "ispf": {"version": "04.72", "flags": 0, "createdate": "2006-09-02T00:00:00", "modifydate": "2006-09-02T20:49:00", "lines": 98, "newlines": 98, "modlines": 0, "user": "CBT-472"}, "text": "//***FILE 746 is from Richard Tsujimoto and contains the MVS        *   FILE 746\n//*           version of his Parser, that was featured in a         *   FILE 746\n//*           three-part article in \"Technical Support\" magazine    *   FILE 746\n//*           from NaSPA, (April, May, June 2006).  The materials   *   FILE 746\n//*           for other platforms supported by this parser, are     *   FILE 746\n//*           included in a zipped file, which is member $PLATFMS   *   FILE 746\n//*           in this pds.                                          *   FILE 746\n//*                                                                 *   FILE 746\n//*         CBT: Parsing, Syntax Checking and Interpreting          *   FILE 746\n//*                                                                 *   FILE 746\n//*         email:  rtsujimoto@nyc.rr.com                           *   FILE 746\n//*                                                                 *   FILE 746\n//*     Other platforms for which this parser is supported, are     *   FILE 746\n//*     supported by C language code.  MVS is supported in this     *   FILE 746\n//*     pds, by Assembler code.  The C language code needed for     *   FILE 746\n//*     \"other platform support\" is included in a zip file, that    *   FILE 746\n//*     is member $PLATFMS in this pds.  To use this zip file,      *   FILE 746\n//*     just download it in BINARY to a PC, and unzip it.           *   FILE 746\n//*     Instructions for each of the other platforms supported,     *   FILE 746\n//*     are included there, and you can see how to proceed          *   FILE 746\n//*     further for each platform.                                  *   FILE 746\n//*                                                                 *   FILE 746\n//*     The other platforms supported by C code are:                *   FILE 746\n//*        Windows, AIX, HPUX, and OS-400.                          *   FILE 746\n//*                                                                 *   FILE 746\n//*     Description                                                 *   FILE 746\n//*     -----------                                                 *   FILE 746\n//*     The $README member describes how to install the             *   FILE 746\n//*     executables, object modules, and other files required       *   FILE 746\n//*     to build and execute the tools, and sample programs.        *   FILE 746\n//*                                                                 *   FILE 746\n//*     NOTE: No compilations of the tools or sample programs       *   FILE 746\n//*           are required to run the sample executables, or to     *   FILE 746\n//*           incorporate the tools into your applications          *   FILE 746\n//*                                                                 *   FILE 746\n//*      Detailed documentation is found in the $$DOC member,       *   FILE 746\n//*      which is in Microsoft WORD format.  To read this           *   FILE 746\n//*      document, you must FTP it, or otherwise \"file              *   FILE 746\n//*      transfer\" it in BINARY to a PC or other machine that       *   FILE 746\n//*      can read Microsoft WORD.  Then you must read the           *   FILE 746\n//*      document on that machine.                                  *   FILE 746\n//*                                                                 *   FILE 746\n//*     Installation                                                *   FILE 746\n//*     ------------                                                *   FILE 746\n//*     01. The four TSO XMIT-format datasets are already           *   FILE 746\n//*          loaded onto an MVS system, if you are reading this.    *   FILE 746\n//*                                                                 *   FILE 746\n//*         These are the JCL, LOADLIB, MACLIB, and SOURCE          *   FILE 746\n//*          members of the CBT File 746.                           *   FILE 746\n//*                                                                 *   FILE 746\n//*     02. Use TSO RECEIVE to restore the data sets:               *   FILE 746\n//*                                                                 *   FILE 746\n//*         (See sample job $TSORECV to do all of this at           *   FILE 746\n//*         once.)                                                  *   FILE 746\n//*                                                                 *   FILE 746\n//*         RECEIVE USERID(your.userid) INDS(RTI.JCL.XMI)           *   FILE 746\n//*                                                                 *   FILE 746\n//*         When prompted for the restore parameters, enter:        *   FILE 746\n//*                                                                 *   FILE 746\n//*         DSN('whatever you want to call it')                     *   FILE 746\n//*                                                                 *   FILE 746\n//*     03. Repeat Step 02 for the remaining data sets              *   FILE 746\n//*          (or use the $TSORECV sample job).                      *   FILE 746\n//*                                                                 *   FILE 746\n//*     Running the sample programs                                 *   FILE 746\n//*     ---------------------------                                 *   FILE 746\n//*     01. Edit the JCL library using ISPF                         *   FILE 746\n//*     02. Select a member and modify the JCL accordingly          *   FILE 746\n//*     03. Submit the job                                          *   FILE 746\n//*                                                                 *   FILE 746\n//*     Build Instructions                                          *   FILE 746\n//*     ------------------                                          *   FILE 746\n//*     01. Edit the JCL library using ISPF                         *   FILE 746\n//*                                                                 *   FILE 746\n//*     02. To build the tools:                                     *   FILE 746\n//*                                                                 *   FILE 746\n//*         a. Select member BLDTOOLS and modify the JCL            *   FILE 746\n//*            accordingly                                          *   FILE 746\n//*         b. Submit the job                                       *   FILE 746\n//*                                                                 *   FILE 746\n//*     03. To build the sample programs:                           *   FILE 746\n//*                                                                 *   FILE 746\n//*         a. Select member BLDSAMPL and modify the JCL            *   FILE 746\n//*            accordingly                                          *   FILE 746\n//*         b. Submit the job                                       *   FILE 746\n//*                                                                 *   FILE 746\n//*         NOTE:                                                   *   FILE 746\n//*                                                                 *   FILE 746\n//*         1. T@SYNTBL and T@UEXITS MUST BE BUILT BEFORE           *   FILE 746\n//*            T@SYNTXC                                             *   FILE 746\n//*                                                                 *   FILE 746\n//*         2. T@SYNTBL MUST BE LINKED WITH NCAL 3. The sample      *   FILE 746\n//*            code shows how the syntax table and user exits       *   FILE 746\n//*            can be built separate from each other, and the       *   FILE 746\n//*            main program.  In the simplest case, the syntax      *   FILE 746\n//*            table and user exits can be coded in the main        *   FILE 746\n//*            program.                                             *   FILE 746\n//*                                                                 *   FILE 746\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDSAMPL": {"ttr": 4874, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x01\\x06\\x11_\\x01\\x06$O\\x10\\x04\\x00/\\x00\\x12\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2006-04-25T00:00:00", "modifydate": "2006-09-01T10:04:00", "lines": 47, "newlines": 18, "modlines": 0, "user": "SBGOLOB"}, "text": "//JOBNAME  JOB 'PGMRNAME',MSGLEVEL=(1,1),\n//         CLASS=A,MSGCLASS=X,REGION=1024K\n//*\n//*   JOB TO BUILD SAMPLE PROGRAMS\n//*\n//*   NOTE: T@SYNTBL MUST BE BUILT BEFORE T@SYNTXC, WITH NCAL\n//*         T@UEXITS MUST BE BUILT BEFORE T@SYNTXC\n//*\n//BLDSMPL1 EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(T@PARSE)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(T@PARSE)\n//L.SYSLIB  DD DISP=SHR,DSN=userid.RTI.LOADLIB\n//*\n//BLDSMPL2 EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(T@UEXITS)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(T@UEXITS)\n//L.SYSLIB  DD DISP=SHR,DSN=userid.RTI.LOADLIB\n//*\n//BLDSMPL3 EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//         PARM.L='MAP,LET,XREF,LIST=SUMMARY,NCAL'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(T@SYNTBL)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(T@SYNTBL)\n//L.SYSLIB  DD DISP=SHR,DSN=userid.RTI.LOADLIB\n//*\n//BLDSMPL4 EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(T@SYNTXC)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(T@SYNTXC)\n//L.SYSLIB  DD DISP=SHR,DSN=userid.RTI.LOADLIB\n//*\n//BLDSMPL5 EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(T@INTRPT)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(T@INTRPT)\n//L.SYSLIB  DD DISP=SHR,DSN=userid.RTI.LOADLIB\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BLDTOOLS": {"ttr": 4876, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00)\\x01\\x06\\x11_\\x01\\x06$O\\x10\\x05\\x00 \\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2006-04-25T00:00:00", "modifydate": "2006-09-01T10:05:29", "lines": 32, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": "//JOBNAME  JOB 'PGMRNAME',MSGLEVEL=(1,1),\n//         CLASS=A,MSGCLASS=X,REGION=1024K\n//*\n//*   JOB TO BUILD @PARSE, @SYNTXCK, @INTRPRT AND #PUTMSG\n//*\n//S1       EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY,NCAL'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(@PARSE)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(@PARSE)\n//*\n//S2       EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY,NCAL'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(@SYNTXCK)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(@SYNTXCK)\n//*\n//S3       EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY,NCAL'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(@INTRPRT)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(@INTRPRT)\n//*\n//S4       EXEC ASMHCL,PARM.C='OBJECT,XREF(SHORT)',\n//          PARM.L='MAP,LET,XREF,LIST=SUMMARY,NCAL'\n//C.SYSLIB  DD\n//          DD DISP=SHR,DSN=userid.RTI.MACLIB\n//C.SYSIN   DD DISP=SHR,DSN=userid.RTI.SOURCE(#PUTMSG)\n//L.SYSLMOD DD DISP=SHR,DSN=userid.RTI.LOADLIB(#PUTMSG)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCL": {"ttr": 4878, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x06$O\\x01\\x06$O\\t7\\x00\\x8e\\x00\\x8e\\x00\\x00\\xd9\\xc9\\xc3\\xc8\\xc1\\xd9\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T09:37:00", "lines": 142, "newlines": 142, "modlines": 0, "user": "RICHARD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADLIB": {"ttr": 4882, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x06$O\\x01\\x06$O\\t7\\x01\\xd0\\x01\\xd0\\x00\\x00\\xd9\\xc9\\xc3\\xc8\\xc1\\xd9\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T09:37:00", "lines": 464, "newlines": 464, "modlines": 0, "user": "RICHARD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "MACLIB": {"ttr": 5128, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x06$O\\x01\\x06$O\\t7\\x0c\\xa3\\x0c\\xa3\\x00\\x00\\xd9\\xc9\\xc3\\xc8\\xc1\\xd9\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T09:37:00", "lines": 3235, "newlines": 3235, "modlines": 0, "user": "RICHARD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SOURCE": {"ttr": 6410, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x06$O\\x01\\x06$O\\t7\\x08!\\x08!\\x00\\x00\\xd9\\xc9\\xc3\\xc8\\xc1\\xd9\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-09-01T00:00:00", "modifydate": "2006-09-01T09:37:00", "lines": 2081, "newlines": 2081, "modlines": 0, "user": "RICHARD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT746/FILE746.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT746", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}