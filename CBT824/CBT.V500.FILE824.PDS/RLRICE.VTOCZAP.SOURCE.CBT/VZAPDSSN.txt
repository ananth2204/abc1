* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: VZAPDSSN                                              *
*                                                                     *
*   Display/update data set volume sequence number                    *
*                                                                     *
* ------------------------------------------------------------------- *
VZAPDSSN CSECT
VZAPDSSN AMODE 31
VZAPDSSN RMODE ANY
         USING VZAPCOMM,R12
         USING VZAPDSSN,R15
         B     INIT0000
MODID    DC    CL8'VZAPDSSN'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DSCBEND-VZAPDSSN)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LR    R2,R0                          COPY R0
         LR    R3,R1                          COPY R1
         DROP  R15
         USING VZAPDSSN,R10                   DEFINE BASE
         L     R15,COMM_DXD
         A     R15,DXD_START
         ST    R13,4(,R15)                    SAVE R13
         ST    R15,8(,R13)                    CHAIN SAVE AREA
         LR    R13,R15                        COPY WORK AREA ADDRESS
         USING DXDDSSN,R13                    DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R9,COMM_VZAPSPFD
         USING VZAPSPFD,R9
         L     R8,COMM_SELECTED_DSCB          SELECTED DSCB
         USING VTOCDATA,R8
* ------------------------------------------------------------------- *
*        Copy sequence nbr to allow user to abort                     *
* ------------------------------------------------------------------- *
         MVC   DXD_DSSN,DS1DSSN               COPY VOLSER
* ------------------------------------------------------------------- *
*        Obtain VDATA for dynamic area                                *
* ------------------------------------------------------------------- *
         MVC   COMM_PANEL,FIELD_PANEL         COPY PANEL NAME
         ITRACE ID=PQRY,                                               +
               DATA1=COMM_PANEL
         L     R15,COMM_V_VZAPPQRY            VZAPPQRY ENTRY POINT
         BALR  R14,R15                        CALL VTOPQRY
         L     R0,SPF_VDEPTH                  NUMBER OF ROWS
         MH    R0,SPF_VWIDTH+2                COMPUTE VDATA SIZE
         ST    R0,COMM_VDATA_LENGTH           SAVE LENGTH
         GETMAIN RU,                          GETMAIN STORAGE FOR VDATA+
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,COMM_VDATA_ADDR             SAVE ADDR
         L     R0,COMM_VDATA_LENGTH           LENGTH AGAIN
         GETMAIN RU,                          GETMAIN SHADOW           +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,DXD_SHADOW_VDATA            SAVE SHADOW
         XC    COMM_VDATA_CURSOR,COMM_VDATA_CURSOR
* ------------------------------------------------------------------- *
*        Initialize dyamic area                                       *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=INITVDATA
         L     R0,COMM_VDATA_ADDR             VDATA ADDR
         L     R1,COMM_VDATA_LENGTH           VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA BUFFER
* ------------------------------------------------------------------- *
*        Build detail                                                 *
* ------------------------------------------------------------------- *
         ITRACE ID=BUILD
         L     R7,COMM_VDATA_ADDR             DYNAMIC AREA BUFFER
         L     R6,DXD_SHADOW_VDATA            SHADOW BUFFER
         ST    R7,DXD_CHAR_VDATA              SAVE CHAR LINE VDATA
         ST    R6,DXD_CHAR_SHADOW             SAVE CHAR LINE SHADOW
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         MVC   MSG01_DESC,C_CHAR              CHAR LINE
         MVC   MSG01_DATA,DS1DSSN             COPY DATA AS IS
         MVC   0(MSG01_L,R6),0(R7)            COPY TO SHADOW BUFFER
         DROP  R7

         A     R7,SPF_VWIDTH                  NEXT LINE IN VDATA
         A     R6,SPF_VWIDTH                  NEXT LINE IN SHADOW

         ST    R7,DXD_ZONE_VDATA              SAVE ZONE LINE VDATA
         ST    R6,DXD_ZONE_SHADOW             SAVE ZONE LINE SHADOW
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         MVC   MSG01_DESC,C_ZONE              ZONE LINE
         MVC   MSG01_DATA,DS1DSSN             COPY VOLSER
         MVN   MSG01_DATA,COMM_HEXZERO        CLOBBER NUMERICS
         TR    MSG01_DATA,COMM_TRTABLE        TRANSLATE
         MVC   0(MSG01_L,R6),0(R7)            COPY TO SHADOW BUFFER
         DROP  R7

         A     R7,SPF_VWIDTH                  NEXT LINE
         A     R6,SPF_VWIDTH                  NEXT LINE IN SHADOW

         ST    R7,DXD_NUMR_VDATA              SAVE NUMR LINE VDATA
         ST    R6,DXD_NUMR_SHADOW             SAVE NUMR LINE SHADOW
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         MVC   MSG01_DESC,C_NUMR              NUMERICS LINE
         MVC   MSG01_DATA,DS1DSSN             COPY VOLSER
         MVZ   MSG01_DATA,COMM_HEXZERO        CLOBBER ZONES
         TR    MSG01_DATA,COMM_TRTABLE        TRANSLATE
         MVC   0(MSG01_L,R6),0(R7)            COPY TO SHADOW BUFFER
         DROP  R7

         A     R7,SPF_VWIDTH                  NEXT LINE (ERROR LINE)
         ST    R7,DXD_ERROR_VDATA             SAVE ADDR
* ------------------------------------------------------------------- *
*        Display                                                      *
* ------------------------------------------------------------------- *
MAIN0050 DS    0H
         ITRACE ID=DISPLAY
         MVC   COMM_PANEL,FIELD_PANEL         COPY PANEL NAME
         MVC   COMM_VDATA_ADDR,COMM_VDATA_ADDR
         MVC   COMM_VDATA_LENGTH,COMM_VDATA_LENGTH
         MVC   COMM_VDATA_CURSOR,COMM_VDATA_CURSOR
         L     R15,COMM_V_VZAPDISP            VZAPDISP ENTRY POINT
         BALR  R14,R15                        CALL VZAPDISP
         ITRACE ID=DISP_RC,                                            +
               DATA1=(COMM_DISP_RC,2)
         OC    COMM_DISP_RC,COMM_DISP_RC      RC = 0?
         BNZ   MAIN0200                       NO
* ------------------------------------------------------------------- *
*        Does use want to cancel changes?                             *
* ------------------------------------------------------------------- *
         CLC   SPF_ZCMD,COMM_BLANKS           COMMAND BLANK?
         BE    MAIN0060                       YES
         CLC   CAN,SPF_ZCMD                   CAN?
         BE    MAIN0300                       YES
         CLC   CANCEL,SPF_ZCMD                CANCEL?
         BE    MAIN0300                       YES
         B     ERR0020                        OTHERWISE BAD COMMAND
* ------------------------------------------------------------------- *
*        Character                                                    *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=CHAR
         L     R2,DXD_CHAR_VDATA              CHAR IN VDATA
         AH    R2,DATA_OFFSET
         OC    0(L'MSG01_DATA,R2),COMM_BLANKS FORCE UPPER CASE
         LA    R3,L'MSG01_DATA                DATA LENGTH
         L     R14,DXD_CHAR_SHADOW            CHAR IN SHADOW
         AH    R14,DATA_OFFSET
         LR    R15,R3                         COPY LENGTH
MAIN0100 DS    0H
         CLCL  R2,R14                         COMPARE BUFFERS
         BE    MAIN0110                       ALL EQUAL
         LR    R1,R2                          ADDR COMPARE STOPPED
         S     R1,DXD_CHAR_VDATA              DISP INTO BUFFER
         SH    R1,DATA_OFFSET                 MINUS DATA FIELD OFFSET
         LA    R1,DS1DSSN(R1)                 ADDR OF DATA TO CHANGE
         MVC   0(1,R1),0(R2)                  COPY TO SEQ NBR IN WORK
         LA    R2,1(,R2)                      NEXT IN VDATA BUFFER
         BCTR  R3,0                           MINUS 1 IN LENGTH LEFT
         LA    R14,1(,R14)                    NEXT IN VDATA BUFFER
         BCT   R15,MAIN0100                   MINUS 1, LOOP
* ------------------------------------------------------------------- *
*        Zone                                                         *
* ------------------------------------------------------------------- *
MAIN0110 DS    0H
         ITRACE ID=ZONE
         L     R2,DXD_ZONE_VDATA              ZONE IN VDATA
         AH    R2,DATA_OFFSET
         OC    0(L'MSG01_DATA,R2),COMM_BLANKS FORCE UPPER CASE
         LA    R3,L'MSG01_DATA                DATA LENGTH
         L     R14,DXD_ZONE_SHADOW            ZONE IN SHADOW
         AH    R14,DATA_OFFSET
         LR    R15,R3                         COPY LENGTH
MAIN0120 DS    0H
         CLCL  R2,R14                         COMPARE BUFFERS
         BE    MAIN0140                       ALL EQUAL
         CLI   0(R2),C'A'                     VALID HEX?
         BL    ERR0010                        NO
         CLI   0(R2),C'F'                     VALID HEX?
         BNH   MAIN0130                       YES
         CLI   0(R2),C'0'                     VALID HEX?
         BL    ERR0010                        NO
MAIN0130 DS    0H
         MVC   DXD_WORK,0(R2)                 COPY TO DXD_WORK
         NI    DXD_WORK,X'1F'                 PREPARE FOR TRANSLATE
         TR    DXD_WORK,COMM_CHARHEX          TRANSLATE
         LR    R1,R2                          ADDR COMPARE STOPPED
         S     R1,DXD_ZONE_VDATA              DISP INTO BUFFER
         SH    R1,DATA_OFFSET                 MINUS DATA FIELD OFFSET
         LA    R1,DS1DSSN(R1)                 ADDR OF DATA TO CHANGE
         MVZ   0(1,R1),DXD_WORK               COPY ZONE
         LA    R2,1(,R2)                      NEXT IN VDATA BUFFER
         BCTR  R3,0                           MINUS 1 IN LENGTH LEFT
         LA    R14,1(,R14)                    NEXT IN VDATA BUFFER
         BCT   R15,MAIN0120                   MINUS 1, LOOP
* ------------------------------------------------------------------- *
*        Numeric                                                      *
* ------------------------------------------------------------------- *
MAIN0140 DS    0H
         ITRACE ID=NUMR
         L     R2,DXD_NUMR_VDATA              NUMERIC IN VDATA
         AH    R2,DATA_OFFSET
         OC    0(L'MSG01_DATA,R2),COMM_BLANKS FORCE UPPER CASE
         LA    R3,L'MSG01_DATA                LENGTH
         L     R14,DXD_NUMR_SHADOW            NUMERIC IN SHADOW
         AH    R14,DATA_OFFSET
         LR    R15,R3                         COPY LENGTH
MAIN0150 DS    0H
         CLCL  R2,R14                         COMPARE BUFFERS
         BE    MAIN0010                       ALL EQUAL
         CLI   0(R2),C'A'                     VALID HEX?
         BL    ERR0010                        NO
         CLI   0(R2),C'F'                     VALID HEX?
         BNH   MAIN0160                       YES
         CLI   0(R2),C'0'                     VALID HEX?
         BL    ERR0010                        NO
MAIN0160 DS    0H
         MVC   DXD_WORK,0(R2)                 COPY TO DXD_WORK
         NI    DXD_WORK,X'1F'                 PREPARE FOR TRANSLATE
         TR    DXD_WORK,COMM_CHARHEX          TRANSLATE
         LR    R1,R2                          ADDR COMPARE STOPPED
         S     R1,DXD_NUMR_VDATA              DISP INTO BUFFER
         SH    R1,DATA_OFFSET                 MINUS DATA FIELD OFFSET
         LA    R1,DS1DSSN(R1)                 ADDR OF DATA TO CHANGE
         MVN   0(1,R1),DXD_WORK               COPY NUMERIC
         LA    R2,1(,R2)                      NEXT IN VDATA BUFFER
         BCTR  R3,0                           MINUS 1 IN LENGTH LEFT
         LA    R14,1(,R14)                    NEXT IN VDATA BUFFER
         BCT   R15,MAIN0150                   MINUS 1, LOOP
         B     MAIN0010
* ------------------------------------------------------------------- *
*        Exiting.  Has volser been changed?                           *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         CLC   DXD_DSSN,DS1DSSN               ANYTHING UPDATED?
         BE    EXIT0000                       NO
         ITRACE ID=UPDATE
         OI    COMM_FLAGS,$COMM_UPDATE        UPDATE PENDING
         OI    VTOC_FLAGS,$VTOC_UPDATED       THIS DSCB UPDATED
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         ITRACE ID=CANCEL
         MVC   SPF_ZCMD,COMM_BLANKS
         CLC   DXD_DSSN,DS1DSSN               VOLSER CHANGED?
         BE    EXIT0000                       NO
         MVC   SPF_MSG_1(EMSG02_L),EMSG02     WARN THE USER
         MVC   DS1DSSN,DXD_DSSN               RESET VOLSER
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=BADDIGIT,                                           +
               RDATA1=R2,                                              +
               DATA2=(0(R2),1)
         LR    R1,R2                          ADDR SCAN STOPPED
         S     R1,COMM_VDATA_ADDR             DISP IN TO DATA
         A     R1,DXD_ERROR_VDATA             PLUS ERROR MSG AREA ADDR
         MVI   0(R1),C'+'                     FLAG BYTE WHERE DATA IS
         MVC   SPF_MSG_1(EMSG01_L),EMSG01     COPY MESSAGE
         B     MAIN0050
ERR0020  DS    0H
         MVC   SPF_MSG_1(EMSG03_L),EMSG03     COPY MESSAGE
         B     MAIN0050
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,COMM_VDATA_ADDR          VDATA GETMAINED?
         L     R0,COMM_VDATA_LENGTH           LENGTH
         BZ    EXIT0010                       NO
         FREEMAIN RU,                         FREEMAIN VDATA           +
               A=(1),                                                  +
               LV=(0)
EXIT0010 DS    0H
         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START     DC    Q(DXDDSSN)
              LTORG

DATA_OFFSET   DC    Y(MSG01_DATA-MSG01)

C_CHAR        DC    C'CHAR'
C_NUMR        DC    C'NUMR'
C_ZONE        DC    C'ZONE'

CAN           DC    C'CAN '
CANCEL        DC    C'CANCEL '
FIELD_PANEL   DC    CL8'VZAPFLD'

EMSG01        DS    0C
              DC    C'VZAPDSSN01E Bad hex digit'
EMSG01_L      EQU   *-EMSG01

EMSG02        DS    0C
              DC    C'VZAPDSSN02W Changes to VOLSER cancelled'
EMSG02_L      EQU   *-EMSG02

EMSG03        DS    0C
              DC    C'VZAPDSSN03E Invalid command'
EMSG03_L      EQU   *-EMSG03

MSG01         DS    0C
              DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG01_DESC    DC    CL4' '
              DC    AL1($SCREEN_ATTR_INPUT)
MSG01_DATA    DC    CL06' '
              DC    AL1($SCREEN_ATTR_NORMAL)
MSG01_L       EQU   *-MSG01

DSCBEND       EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDDSSN       DSECT
              COPY  DXDPREF

DXD_SHADOW_VDATA    DS   A
DXD_CHAR_VDATA      DS   A
DXD_CHAR_SHADOW     DS   A
DXD_ZONE_VDATA      DS   A
DXD_ZONE_SHADOW     DS   A
DXD_NUMR_VDATA      DS   A
DXD_NUMR_SHADOW     DS   A
DXD_ERROR_VDATA     DS   A

DXD_WORK      DS    X

DXD_DSSN      DS    CL6               SAVED VOLSER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     VTOCDATA
         ORG      VTOC_DSCB
         IECSDSL1 1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VZAPSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      VZAPDSSN
