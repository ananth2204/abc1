* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: VZAPVPTR                                              *
*                                                                     *
*   Display/update Format-3, format-8, or format-9 address            *
*                                                                     *
* ------------------------------------------------------------------- *
VZAPVPTR CSECT
VZAPVPTR AMODE 31
VZAPVPTR RMODE ANY
         USING VZAPCOMM,R12
         USING VZAPVPTR,R15
         B     INIT0000
MODID    DC    CL8'VZAPVPTR'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DSCBEND-VZAPVPTR)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LR    R2,R0                          COPY R0
         LR    R3,R1                          COPY R1
         DROP  R15
         USING VZAPVPTR,R10                   DEFINE BASE
         L     R15,COMM_DXD
         A     R15,DXD_START
         ST    R13,4(,R15)                    SAVE R13
         ST    R15,8(,R13)                    CHAIN SAVE AREA
         LR    R13,R15                        COPY WORK AREA ADDRESS
         USING DXDVPTR,R13                    DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R9,COMM_VZAPSPFD
         USING VZAPSPFD,R9
         L     R8,COMM_SELECTED_DSCB          SELECTED DSCB
         USING VTOCDATA,R8
         L     R5,COMM_SELECTED_FIELD         SELECTED FIELD
         USING FIELD_DSECT,R5
         ITRACE ID=FIELD,                                              +
               DATA1=FIELD_LABEL,                                      +
               DATA2=(FIELD_DISP,2)
         SR    R4,R4
         ICM   R4,3,FIELD_DISP                DISP TO DATA
         AR    R4,R8                          PLUS BASE
* ------------------------------------------------------------------- *
*        Copy extent info to allow user to abort                      *
* ------------------------------------------------------------------- *
         ITRACE ID=DATA,                                               +
               RDATA1=R4,                                              +
               DATA2=0(R4)
         MVC   DXD_DISK_ADDRESS,0(R4)         SAVE DISK ADDRESS
* ------------------------------------------------------------------- *
*        Obtain VDATA for dynamic area                                *
* ------------------------------------------------------------------- *
         MVC   COMM_PANEL,FIELD_PANEL         COPY PANEL NAME
         ITRACE ID=PQRY,                                               +
               DATA1=COMM_PANEL
         L     R15,COMM_V_VZAPPQRY            VZAPPQRY ENTRY POINT
         BALR  R14,R15                        CALL VTOPQRY
         L     R0,SPF_VDEPTH                  NUMBER OF ROWS
         MH    R0,SPF_VWIDTH+2                COMPUTE VDATA SIZE
         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH
         GETMAIN RU,                          GETMAIN STORAGE FOR VDATA+
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,DXD_VDATA_ADDR              SAVE ADDR
         ITRACE ID=VDATA,                                              +
               RDATA1=R1,                                              +
               DATA2=(DXD_VDATA_LENGTH,4)
* ------------------------------------------------------------------- *
*        Initialize dyamic area                                       *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=INITVDATA
         L     R0,DXD_VDATA_ADDR              VDATA ADDR
         L     R1,DXD_VDATA_LENGTH            VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA BUFFER
         XC    DXD_VDATA_CURSOR,DXD_VDATA_CURSOR
* ------------------------------------------------------------------- *
*        Build detail                                                 *
* ------------------------------------------------------------------- *
         L     R7,DXD_VDATA_ADDR              DYNAMIC AREA BUFFER
         ITRACE ID=BUILD,                                              +
               DATA1=R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0020 DS    0H
         ITRACE ID=CYL,                                                +
               DATA1=(0(R4),2)
         ST    R7,DXD_CYLINDER                SAVE ADDR
         SR    R0,R0
         ICM   R0,3,0(R4)                     CYLINDER NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_EDITWORD,EDITWORD          INITIALIZE EDIT WORD
         ED    DXD_EDITWORD,COMM_DWORD+5      EDIT CYLINDER NUMBER
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         MVC   MSG01_DESC,CYLINDER            FIELD DESCRIPTION
         MVC   MSG01_NBR,DXD_EDITWORD+1       COPY CYLINDER NUMBER
         DROP  R7

         A     R7,SPF_VWIDTH                  NEXT LINE

         ITRACE ID=HEAD,                                               +
               DATA1=(2(R4),2)
         ST    R7,DXD_HEAD                    SAVE ADDR
         SR    R0,R0
         ICM   R0,3,2(R4)                     'FROM' CYLINDER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_EDITWORD,EDITWORD          INITIALIZE EDIT WORD
         ED    DXD_EDITWORD,COMM_DWORD+5      EDIT HEAD
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         MVC   MSG01_DESC,HEAD                FIELD DESCRIPTION
         MVC   MSG01_NBR,DXD_EDITWORD+1       COPY HEAD NUMBER
         DROP  R7

         A     R7,SPF_VWIDTH                  NEXT LINE


         ITRACE ID=RECORD,                                             +
               DATA1=(4(R4),1)
         ST    R7,DXD_RECORD                  SAVE ADDR
         SR    R0,R0
         ICM   R0,1,4(R4)                     RECORD NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_EDITWORD,EDITWORD          INITIALIZE EDIT WORD
         ED    DXD_EDITWORD,COMM_DWORD+5      EDIT RECORD NUMBER
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         MVC   MSG01_DESC,RECORD              FIELD DESCRIPTION
         MVC   MSG01_NBR,DXD_EDITWORD+1       COPY RECORD NUMBER
         DROP  R7

* ------------------------------------------------------------------- *
*        Display                                                      *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=DISPLAY
         MVC   COMM_PANEL,FIELD_PANEL         COPY PANEL NAME
         MVC   COMM_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   COMM_VDATA_LENGTH,DXD_VDATA_LENGTH
         MVC   COMM_VDATA_CURSOR,DXD_VDATA_CURSOR
         L     R15,COMM_V_VZAPDISP            VZAPDISP ENTRY POINT
         BALR  R14,R15                        CALL VZAPDISP
         ITRACE ID=DISP_RC,                                            +
               DATA1=(COMM_DISP_RC,2)
         OC    COMM_DISP_RC,COMM_DISP_RC      RC = 0?
         BNZ   MAIN0300                       NO
* ------------------------------------------------------------------- *
*        Does user want to cancel changes?                            *
* ------------------------------------------------------------------- *
         CLC   SPF_ZCMD,COMM_BLANKS           COMMAND BLANK?
         BE    MAIN0100                       YES
         CLC   CAN,SPF_ZCMD                   CAN?
         BE    MAIN0400                       YES
         CLC   CANCEL,SPF_ZCMD                CANCEL?
         BE    MAIN0400                       YES
         B     ERR0010                        OTHERWISE BAD COMMAND
* ------------------------------------------------------------------- *
*        VERIFY NEW DATA IS VALID                                     *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         L     R7,DXD_CYLINDER                CYLINDER IN VDATA
         BAL   R15,MAIN0200                   VERIFY/CONVERT

         L     R7,DXD_HEAD                    HEAD IN VDATA
         BAL   R15,MAIN0200                   VERIFY/CONVERT

         L     R7,DXD_RECORD                  RECORD IN VDATA
         BAL   R15,MAIN0200                   VERIFY/CONVERT

* ------------------------------------------------------------------- *
*        UPDATE CYLINDER NUMBER                                       *
* ------------------------------------------------------------------- *
         L     R7,DXD_CYLINDER                CYLINDER IN VDATA
         BAL   R15,MAIN0200                   VERIFY/CONVERT
         CLM   R1,3,0(R4)                     SAME VALUE?
         BE    MAIN0130                       YES
         ITRACE ID=NEW_CYL
         STCM  R1,3,0(R4)                     UPDATE CYLINDER NUMBER
         OI    COMM_FLAGS,$COMM_UPDATE        UPDATE PENDING
         OI    VTOC_FLAGS,$VTOC_UPDATED       THIS DSCB UPDATED

* ------------------------------------------------------------------- *
*        UPDATE HEAD                                                  *
* ------------------------------------------------------------------- *
MAIN0130 DS    0H
         L     R7,DXD_HEAD                    HEAD IN VDATA
         BAL   R15,MAIN0200                   VERIFY/CONVERT
         CLM   R1,3,2(R4)                     SAME VALUE?
         BE    MAIN0140                       YES
         ITRACE ID=NEW_HEAD
         STCM  R1,3,2(R4)                     UPDATE HEAD NUMBER
         OI    COMM_FLAGS,$COMM_UPDATE        UPDATE PENDING
         OI    VTOC_FLAGS,$VTOC_UPDATED       THIS DSCB UPDATED

* ------------------------------------------------------------------- *
*        UPDATE RECORD                                                *
* ------------------------------------------------------------------- *
MAIN0140 DS    0H
         L     R7,DXD_RECORD                  RECORD NUMBER IN VDATA
         BAL   R15,MAIN0200                   VERIFY/CONVERT
         CLM   R1,1,4(R4)                     SAME VALUE?
         BE    MAIN0010                       YES
         ITRACE ID=NEW_RECD
         STCM  R1,1,4(R4)                     UPDATE RECORD NUMBER
         OI    COMM_FLAGS,$COMM_UPDATE        UPDATE PENDING
         OI    VTOC_FLAGS,$VTOC_UPDATED       THIS DSCB UPDATED
         B     MAIN0010

* ------------------------------------------------------------------- *
*        Verify numeric is valid                                      *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         USING MSG01,R7
         LA    R1,MSG01_NBR                   1ST DIGIT
         LA    R2,L'MSG01_NBR                 NBR OF DIGITS
         ITRACE ID=VERIFY,                                             +
               DATA1=(MSG01_NBR,5)
MAIN0210 DS    0H
         CLI   0(R1),C'0'                     VALID DIGIT?
         BL    ERR0020                        NO
         CLI   0(R1),C'9'                     VALID DIGIT?
         BH    ERR0020                        NO
         LA    R1,1(,R1)                      NEXT DIGIT
         BCT   R2,MAIN0210                    LOOP
         PACK  COMM_DWORD,MSG01_NBR           PACK THE  NUMBER
         CVB   R1,COMM_DWORD                  CONVERT TO BINARY
         ITRACE ID=NUMBER,                                             +
               RDATA1=R1
         BR    R15
         DROP  R7
* ------------------------------------------------------------------- *
*                                                                     *
*        Exiting.                                                     *
*        Warn user if data is out of range or inconsistent            *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         MVC   SPF_MSG_1,COMM_BLANKS
         MVC   SPF_MSG_2,COMM_BLANKS
         MVC   SPF_MSG_3,COMM_BLANKS
         MVC   SPF_MSG_4,COMM_BLANKS
         MVC   SPF_MSG_5,COMM_BLANKS
         MVI   DXD_RC,0                       FORCE DEFAULT RC
         ITRACE ID=CHK_ADDR,                                           +
               DATA1=(0(R4),5)
         CLC   0(2,R4),COMM_MAX_CC            CYL > DEVICE MAX?
         BNH   MAIN0310                       NO
         MVC   SPF_MSG_1(EMSG04_L),EMSG04     SET MESSAGE
         MVI   DXD_RC,4                       SET RC
MAIN0310 DS    0H
         CLC   2(2,R4),COMM_MAX_HH            HEAD > DEVICE MAX?
         BNH   MAIN0320                       NO
         MVC   SPF_MSG_2(EMSG05_L),EMSG05     SET MESSAGE
         MVI   DXD_RC,4                       SET RC
MAIN0320 DS    0H
         CLI   DXD_RC,0                       RC STILL = 0?
         BE    EXIT0000                       YES
         ITRACE ID=CALLCNFM
         MVC   SPF_YES_OR_NO,COMM_BLANKS      INITIALIZE REPLY
         L     R15,COMM_V_VZAPCNFM            VZAPCNFM ENTRY POINT
         BALR  R14,R15                        CALL VZAPCNFM
         CLI   SPF_YES_OR_NO,C'Y'             USER REPLY 'YES'?
         BE    EXIT0000                       YES
         B     MAIN0010                       DISPLAY AGAIN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0400 DS    0H
         ITRACE ID=CANCEL
         MVC   SPF_ZCMD,COMM_BLANKS
         CLC   DXD_DISK_ADDRESS,0(R4)         ADDRESS CHANGED?
         BE    EXIT0000                       NO
         MVC   SPF_MSG_1(EMSG01_L),EMSG01     WARN THE USER
         MVC   0(5,R4),DXD_DISK_ADDRESS       RESET EXTENT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   SPF_MSG_1(EMSG02_L),EMSG02     COPY MESSAGE
         B     MAIN0060
ERR0020  DS    0H
         ITRACE ID=BADDIGIT
         MVC   SPF_MSG_1(EMSG03_L),EMSG03     COPY MESSAGE
         USING MSG01,R7
         MVC   SPF_MSG_1+(EMSG03_DESC-EMSG03)(L'EMSG03_DESC),MSG01_DESC
         DROP  R7
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,DXD_VDATA_ADDR           VDATA GETMAINED?
         L     R0,DXD_VDATA_LENGTH            LENGTH
         BZ    EXIT0010                       NO
         FREEMAIN RU,                         FREEMAIN VDATA           +
               A=(1),                                                  +
               LV=(0)
EXIT0010 DS    0H
         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START     DC    Q(DXDVPTR)
              LTORG

CAN           DC    C'CAN '
CANCEL        DC    C'CANCEL '
FIELD_PANEL   DC    CL8'VZAPVPTR'
EDITWORD      DC    X'F02020202120'
CYLINDER      DC    CL15'Cylinder'
HEAD          DC    CL15'Head'
RECORD        DC    CL15'Record'

MSG01         DS    0C
              DC    AL1($SCREEN_ATTR_HIGH_GREEN)
MSG01_DESC    DC    C'               '
              DC    AL1($SCREEN_ATTR_INPUT)
MSG01_NBR     DC    CL5' '
              DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
MSG01_L       EQU   *-MSG01

EMSG01        DS    0C
              DC    C'VZAPVPTR01W Updates to extents cancelled'
EMSG01_L      EQU   *-EMSG01

EMSG02        DS    0C
              DC    C'VZAPVPTR02E Invalid command'
EMSG02_L      EQU   *-EMSG02

EMSG03        DS    0C
              DC    C'VZAPVPTR03E Nonnumeric digit in '
EMSG03_DESC   DC    CL15' '
EMSG03_L      EQU   *-EMSG03

EMSG04        DS    0C
              DC    C'VZAPVPTR04E Cylinder out of range'
EMSG04_L      EQU   *-EMSG04

EMSG05        DS    0C
              DC    C'VZAPVPTR05E Head out of range'
EMSG05_L      EQU   *-EMSG05

DSCBEND       EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDVPTR          DSECT
                 COPY  DXDPREF

DXD_VDATA_ADDR   DS    A
DXD_VDATA_LENGTH DS    F
DXD_VDATA_CURSOR DS    F

DXD_CYLINDER     DS    A
DXD_HEAD         DS    A
DXD_RECORD       DS    A

DXD_EDITWORD     DS    CL6

DXD_DISK_ADDRESS DS    XL5               SAVED VTOC DISK ADDRESS

DXD_RC           DS    X
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     VZAPFLD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     VTOCDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VZAPSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      VZAPVPTR
