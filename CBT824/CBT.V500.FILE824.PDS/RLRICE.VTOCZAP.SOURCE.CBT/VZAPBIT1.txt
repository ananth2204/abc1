* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: VZAPBIT1                                              *
*                                                                     *
*   Display/update 1 byte fields that are bit flags                   *
*                                                                     *
* ------------------------------------------------------------------- *
VZAPBIT1 CSECT
VZAPBIT1 AMODE 31
VZAPBIT1 RMODE ANY
         USING VZAPCOMM,R12
         USING VZAPBIT1,R15
         B     INIT0000
MODID    DC    CL8'VZAPBIT1'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DSCBEND-VZAPBIT1)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LR    R2,R0                          COPY R0
         LR    R3,R1                          COPY R1
         DROP  R15
         USING VZAPBIT1,R10                   DEFINE BASE
         L     R15,COMM_DXD
         A     R15,DXD_START
         ST    R13,4(,R15)                    SAVE R13
         ST    R15,8(,R13)                    CHAIN SAVE AREA
         LR    R13,R15                        COPY WORK AREA ADDRESS
         USING DXDBIT1,R13                    DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R9,COMM_VZAPSPFD
         USING VZAPSPFD,R9
         L     R8,COMM_SELECTED_DSCB          SELECTED DSCB
         USING VTOCDATA,R8
* ------------------------------------------------------------------- *
*        Compute data address                                         *
* ------------------------------------------------------------------- *
         L     R5,COMM_SELECTED_FIELD         SELECTED FIELD
         USING FIELD_DSECT,R5
         ITRACE ID=FIELD,                                              +
               DATA1=FIELD_LABEL,                                      +
               DATA2=(FIELD_DISP,2)
         SR    R4,R4
         ICM   R4,3,FIELD_DISP                DISP TO DATA
         AR    R4,R8                          PLUS BASE
* ------------------------------------------------------------------- *
*        Copy data to allow user to abort                             *
* ------------------------------------------------------------------- *
         ITRACE ID=DATA,                                               +
               RDATA1=R4,                                              +
               DATA2=(0(R4),1)
         MVC   DXD_DATA,0(R1)                 COPY DATA
* ------------------------------------------------------------------- *
*        Obtain VDATA for dynamic area                                *
* ------------------------------------------------------------------- *
         MVC   COMM_PANEL,FIELD_PANEL         COPY PANEL NAME
         ITRACE ID=PQRY,                                               +
               DATA1=COMM_PANEL
         L     R15,COMM_V_VZAPPQRY            VZAPPQRY ENTRY POINT
         BALR  R14,R15                        CALL VTOPQRY
         L     R0,SPF_VDEPTH                  NUMBER OF ROWS
         MH    R0,SPF_VWIDTH+2                COMPUTE VDATA SIZE
         ST    R0,COMM_VDATA_LENGTH           SAVE LENGTH
         GETMAIN RU,                          GETMAIN STORAGE FOR VDATA+
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,COMM_VDATA_ADDR             SAVE ADDR
         ITRACE ID=VDATA,                                              +
               RDATA1=R1,                                              +
               DATA2=(COMM_VDATA_LENGTH,4)
* ------------------------------------------------------------------- *
*        Initialize dyamic area                                       *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=INITVDATA
         L     R0,COMM_VDATA_ADDR             VDATA ADDR
         L     R1,COMM_VDATA_LENGTH           VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA BUFFER
* ------------------------------------------------------------------- *
*        Build detail                                                 *
* ------------------------------------------------------------------- *
         ITRACE ID=BUILD
         L     R7,COMM_VDATA_ADDR             DYNAMIC AREA BUFFER
         MVC   0(MSG01_L,R7),MSG01
         USING MSG01,R7
         UNPK  COMM_DWORD(3),0(2,R4)          UNPACK FLAG
         TR    COMM_DWORD(2),COMM_HEXCHAR     TRANSLATE
         MVC   MSG01_HEX,COMM_DWORD           COPY TO VDATA BUFFER
         LA    R1,MSG01_BINARY                BINARY BIT FLAGS
         LA    R2,X'80'                       BIT 1000 0000
         LA    R3,8                           BITS IN A BYTE
MAIN0020 DS    0H
         EX    R2,BIT_TM                      THIS BIT ON?
         BNO   MAIN0030                       NO
         MVI   0(R1),C'1'                     INDICATE BIT IS ON
MAIN0030 DS    0H
         LA    R1,1(,R1)                      NEXT
         SRL   R2,1                           SHIFT BIT
         BCT   R3,MAIN0020                    LOOP
         DROP  R7

         A     R7,SPF_VWIDTH                  NEXT LINE IN VDATA

         L     R6,COMM_BIT_TABLE              BIT TABLE
         USING BIT_DSECT,R6                   DEFINE BASE
MAIN0040 DS    0H
         ITRACE ID=BIT,                                                +
               DATA1=BIT_NAME
         MVC   0(MSG02_L,R7),MSG02
         USING MSG02,R7                       DEFINE BASE
         MVC   MSG02_NAME,BIT_NAME            COPY NAME
         MVC   MSG02_DESC,BIT_DESC            COPY DESCRIPTION
         SR    R1,R1
         IC    R1,BIT_FLAG                    BITS TO TEST
         EX    R1,BIT_TM                      BIT ON?
         BNO   MAIN0050                       NO
         MVI   MSG02_X,C'X'                   INDICATE BIT IS ON
         MVI   MSG02_ATTR_1,$SCREEN_ATTR_HIGH CHANGE ATTRIBUTE
         MVI   MSG02_ATTR_2,$SCREEN_ATTR_HIGH_TURQUOISE
         DROP  R6,R7
MAIN0050 DS    0H
         A     R7,SPF_VWIDTH                  NEXT LINE
         LA    R6,BIT_DSECT_L(,R6)            NEXT BIT
         CLI   0(R6),X'FF'                    END OF TABLE
         BNE   MAIN0040                       NO
* ------------------------------------------------------------------- *
*        Display                                                      *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=DISPLAY
         MVC   COMM_PANEL,FIELD_PANEL         COPY PANEL NAME
         MVC   COMM_VDATA_ADDR,COMM_VDATA_ADDR
         MVC   COMM_VDATA_LENGTH,COMM_VDATA_LENGTH
         MVC   COMM_VDATA_CURSOR,COMM_VDATA_CURSOR
         L     R15,COMM_V_VZAPDISP            VZAPDISP ENTRY POINT
         BALR  R14,R15                        CALL VZAPDISP
         ITRACE ID=DISP_RC,                                            +
               DATA1=(COMM_DISP_RC,2)
         OC    COMM_DISP_RC,COMM_DISP_RC      RC = 0?
         BNZ   MAIN0200                       NO
* ------------------------------------------------------------------- *
*        Does user want to cancel changes?                            *
* ------------------------------------------------------------------- *
         CLC   SPF_ZCMD,COMM_BLANKS           COMMAND BLANK?
         BE    MAIN0070                       YES
         CLC   CAN,SPF_ZCMD                   CAN?
         BE    MAIN0300                       YES
         CLC   CANCEL,SPF_ZCMD                CANCEL?
         BE    MAIN0300                       YES
         B     ERR0010                        OTHERWISE BAD COMMAND
* ------------------------------------------------------------------- *
*        Change bit(s)                                                *
* ------------------------------------------------------------------- *
MAIN0070 DS    0H
         L     R6,COMM_BIT_TABLE              FIRST BIT FLAG
         USING BIT_DSECT,R6
         L     R7,COMM_VDATA_ADDR             FIRST IN DYNAMIC AREA
         A     R7,SPF_VWIDTH                  BITS START ON 2ND LINE
         USING MSG02,R7
         MVI   0(R4),0                        RESET ALL FLAGS
MAIN0080 DS    0H
         ITRACE ID=UPDATE,                                             +
               DATA1=BIT_NAME,                                         +
               DATA2=(MSG02_X,1)
         CLI   MSG02_X,C' '                   BLANK?
         BE    MAIN0090                       YES
         SR    R1,R1
         IC    R1,BIT_FLAG                    BIT(S) TO SET
         EX    R1,BIT_OI                      SET BIT(S)
MAIN0090 DS    0H
         A     R7,SPF_VWIDTH                  NEXT IN DYNAMIC AREA
         LA    R6,BIT_DSECT_L(,R6)            NEXT BIT
         CLI   0(R6),X'FF'                    END OF TABLE?
         BNE   MAIN0080                       NO
         B     MAIN0010
         DROP  R7
* ------------------------------------------------------------------- *
*        Exiting.  Have flags been changed?                           *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         CLC   DXD_DATA,0(R4)                 ANYTHING UPDATED?
         BE    EXIT0000                       NO
         ITRACE ID=UPDATE
         OI    COMM_FLAGS,$COMM_UPDATE        UPDATE PENDING
         OI    VTOC_FLAGS,$VTOC_UPDATED       THIS DSCB UPDATED
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         ITRACE ID=CANCEL
         MVC   SPF_ZCMD,COMM_BLANKS
         CLC   DXD_DATA,0(R4)                 FLAGS CHANGED?
         BE    EXIT0000                       NO
         MVC   SPF_MSG_1(EMSG01_L),EMSG01     WARN THE USER
         MVC   0(1,R4),DXD_DATA               RESET FLAGS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   SPF_MSG_1(EMSG02_L),EMSG02     COPY MESSAGE
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,COMM_VDATA_ADDR          VDATA GETMAINED?
         L     R0,COMM_VDATA_LENGTH           LENGTH
         BZ    EXIT0010                       NO
         FREEMAIN RU,                         FREEMAIN VDATA           +
               A=(1),                                                  +
               LV=(0)
EXIT0010 DS    0H
         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
BIT_TM   TM    0(R4),0                        TEST BIT(S)
BIT_OI   OI    0(R4),0                        SET BIT(S)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START     DC    Q(DXDBIT1)
              LTORG

CAN           DC    C'CAN '
CANCEL        DC    C'CANCEL '
FIELD_PANEL   DC    CL8'VZAPFLD'

MSG01         DS    0C
              DC    AL1($SCREEN_ATTR_HIGH_GREEN)
MSG01_HEX     DC    CL2' '
              DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
              DC    C'(HEX)    '
MSG01_BINARY  DC    CL8'00000000'
              DC    C' (BINARY)'
MSG01_L       EQU   *-MSG01

MSG02         DS    0C
              DC    AL1($SCREEN_ATTR_INPUT)
MSG02_X       DC    C' '
MSG02_ATTR_1  DC    AL1($SCREEN_ATTR_HIGH_GREEN)
MSG02_NAME    DC    CL15' '
MSG02_ATTR_2  DC    AL1($SCREEN_ATTR_NORMAL)
MSG02_DESC    DC    CL50' '
MSG02_L       EQU   *-MSG02

EMSG01        DS    0C
              DC    C'VZAPBIT101W Updates cancelled'
EMSG01_L      EQU   *-EMSG01

EMSG02        DS    0C
              DC    C'VZAPBIT102E Invalid command'
EMSG02_L      EQU   *-EMSG02

DSCBEND       EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDBIT1       DSECT
              COPY  DXDPREF

DXD_DATA      DS    X                 SAVED DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
BIT_DSECT     DSECT
BIT_FLAG      DS    X
BIT_NAME      DS    CL15
BIT_DESC      DS    CL50
BIT_DSECT_L   EQU   *-BIT_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     VZAPFLD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     VTOCDATA
         ORG      VTOC_DSCB
         IECSDSL1 1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VZAPSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      VZAPBIT1
