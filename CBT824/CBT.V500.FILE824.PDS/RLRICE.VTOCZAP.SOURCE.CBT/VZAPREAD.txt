* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: VZAPREAD                                              *
*                                                                     *
*   Read the VTOC.                                                    *
*   Chain DSCBs from COMM_VTOC_DATA.                                  *
*                                                                     *
* ------------------------------------------------------------------- *
VZAPREAD CSECT
VZAPREAD AMODE 31
VZAPREAD RMODE 24
         USING VZAPCOMM,R12
         USING VZAPREAD,R15
         B     INIT0000
MODID    DC    CL8'VZAPREAD'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DISPEND-VZAPREAD)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LR    R2,R0                          COPY R0
         LR    R3,R1                          COPY R1
         DROP  R15
         USING VZAPREAD,R10                   DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_L,                                              +
               LOC=BELOW
         LR    R2,R1
         LA    R3,WORK_INIT_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R2,R14                         INITIALIZE WORK AREA
         ST    R13,4(,R1)                     SAVE R13
         ST    R1,8(,R13)                     CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK,R13                       DEFINE WORK AREA BASE
         USING JFCB,WORK_JFCB
         USING IOB,WORK_IOB
         MVC   DXD_CSECT,MODID
INIT0010 DS    0H
         ITRACE ID=ENTRY
         MVI   WORK_RC,0                      INITIALIZE RC
* ------------------------------------------------------------------- *
*        Verify user is authorized                                    *
* ------------------------------------------------------------------- *
         ITRACE ID=AUTH
         MVI   COMM_VTOCZAP_FUNCTION,$VTOCZAP_READ_VTOC
         L     R15,COMM_V_VZAPAUTH            VZAPAUTH
         BALR  R14,R15                        CALL VZAPAUTH
         LTR   R15,R15                        USER AUTHORIZED?
         ITRACE ID=AUTH_RC,                                            +
               RDATA1=R15                     .. RETURN CODE
         LTR   R15,R15                        USER ALLOWED?
         BNZ   ERR0030                        NO
* ------------------------------------------------------------------- *
*        Initialization                                               *
* ------------------------------------------------------------------- *
         LA     R8,WORK_DCB                   DCB ADDRESS
         STCM  R8,7,IOBDCBPB                  SET DCB ADDR IN IOB
         USING IHADCB,R8
         ITRACE ID=DCB,                                                +
               RDATA1=R8
         MVC   0(DCB_L,R8),DCB_I              INITIALIZE DCB
         MVC   DCBDDNAM+2(6),COMM_VOLSER      ADD VOLSER TO DD NAME
         LA    R0,WORK_EXLST                  EXLST ADDR
         STCM  R0,7,DCBEXLSA                  RELOCATE EXIT LIST
         LA    R0,WORK_JFCB                   JFCB ADDR
         ST    R0,WORK_EXLST                  SET ADDR FOR EXLST
         MVI   WORK_EXLST,X'87'               'RDJFCB'
         MVC   WORK_CCW1(CCW_L),CCW_I         INITIALIZE CCW'S
         LA    R0,WORK_IOB                    IOB ADDRESS
         ST    R0,DCBIOBAD                    SET IOB ADDR IN DCB
         LA    R0,WORK_ECB                    ECB ADDRESS
         STCM  R0,7,IOBECBPB                  SET ADDR IN IOB
         LA    R0,WORK_CCW1                   FIRST CCW
         ST    R0,IOBSTART                    SET ADDR IN IOB
         LA    R0,IOBCC                       CYLINDER IN DISK ADDR
         STCM  R0,7,WORK_CCW1+1               RELOCATE ADDR IN CCW
         LA    R0,WORK_CCW1                   CCW1'S ADDR
         STCM  R0,7,WORK_CCW2+1               RELOCATE ADDR IN CCW
         LA    R0,WORK_IO                     I/O AREA ADDRESS
         STCM  R0,7,WORK_CCW3+1               RELOCATE ADDR IN CCW
         LA    R0,COMM_VTOC_DATA              VTOC DATA CHAIN POINT
         ST    R0,WORK_LAST_VTOCDATA          SAVE ADDRESS
         MVC   WORK_OPEN(OPEN_L),OPEN_I       INITIALIZE OPEN
* ------------------------------------------------------------------- *
*        Read the JFCB                                                *
* ------------------------------------------------------------------- *
         ITRACE ID=RDJFCB
         RDJFCB ((R8)),                       READ THE JFCB            +
               MF=(E,WORK_OPEN)
         ITRACE ID=RC,                                                 +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BZ    INIT0020                       YES
         DC    H'0'
* ------------------------------------------------------------------- *
*        Change DSN to x'04...                                        *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         MVI   JFCBDSNM,X'04'                 CHANGE DSN
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         MVI   JFCBTSDM,JFCNWRIT              NO JFCB WRITE-BACK
* ------------------------------------------------------------------- *
*        Open the VTOC                                                *
* ------------------------------------------------------------------- *
         ITRACE ID=OPEN
         OPEN  ((R8),INPUT),                                           +
               TYPE=J,                                                 +
               MF=(E,WORK_OPEN)
* ------------------------------------------------------------------- *
*        Get the starting disk address from DEB                       *
* ------------------------------------------------------------------- *
         SR    R1,R1
         ICM   R1,7,DCBDEBA                   DEB ADDRESS
         USING DEBBASIC,R1                    DEFINE BASE
         LA    R1,DEBBASND                    END OF BASIC SECTION
         DROP  R1
         USING DEBDASD,R1                     DEFINE BASE
         MVC   WORK_CC(5),DEBSTRCC            COPY STARTING ADDRESS
* ------------------------------------------------------------------- *
*        Start reading the VTOC (Finally!)                            *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=READ,                                               +
               DATA1=(WORK_CC,5)
         MVC   IOBCC(5),WORK_CC               COPY DISK ADDRESS
MAIN0010 DS    0H
         XC    WORK_ECB,WORK_ECB              CLEAR THE ECB
         ITRACE ID=EXCP
         EXCP  IOBSTDRD                       START THE I/O
         ITRACE ID=WAIT
         WAIT  ECB=WORK_ECB
         ITRACE ID=EXCPSTAT,                                           +
               DATA1=(WORK_ECB,1)
         CLI   WORK_ECB,X'42'                 END OF VTOC? (BAD I KNOW)
         BE    EXIT0000                       YES
         CLI   WORK_ECB,X'44'                 RETRY?
         BE    MAIN0010                       YES
         CLI   WORK_ECB,X'7F'                 SUCCESSFUL I/O?
         BNE   ERR0010                        NO
         SR    R0,R0                          CLEAR REGISTER
         SR    R7,R7                          CLEAR REGISTER
         ICM   R7,3,WORK_CCW3+6               LENGTH USED
         ICM   R0,3,IOBSTDRD+14               RESIDUAL LENGTH
         SR    R7,R0                          LENGTH OF DATA READ
         LA    R6,WORK_IO
         USING COUNT,R6
* ------------------------------------------------------------------- *
*        Compute record length                                        *
* ------------------------------------------------------------------- *
MAIN0020 DS    0H
         SR    R0,R0
         SR    R3,R3
         IC    R0,COUNT_KEY_LENGTH            KEY LENGTH
         ICM   R3,3,COUNT_DATA_LENGTH         DATA LENGTH
         AR    R3,R0                          ADD KEY LENGTH
         LA    R3,COUNT_L(,R3)                PLUS LENGTH OF COUNT
         ITRACE ID=DATA,                                               +
               RDATA1=R6,                     .. DATA ADDRESS          +
               RDATA2=R7                      .. DATA LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R1,COUNT_L+44(R6)
         USING FORMAT_4,R1
         ITRACE ID=FMT_ID,                                             +
               DATA1=(DS4IDFMT,1)
         CLI   DS4IDFMT,C'0'                  RECORD IN USE?
         BL    MAIN0040                       NO
         CLI   DS4IDFMT,C'4'                  FORMAT-4?
         BNE   MAIN0030                       NO
         MVC   COMM_MAX_CC(4),DS4DEVSZ        SAVE MAX CYL AND HEAD
         MVC   WORK_VTOC_END,DS4HPCHR         SAVE HIGH VTOC EXTENT
         ITRACE ID=MAX_END,                                            +
               DATA1=(COMM_MAX_CC,4),                                  +
               DATA2=(WORK_VTOC_END,4)
* ------------------------------------------------------------------- *
*        Add data to VTOC DATA chain                                  *
* ------------------------------------------------------------------- *
MAIN0030 ds    0h
         ITRACE ID=VTOCRECD,                                           +
               RDATA1=R6,                                              +
               RDATA2=R3
         CH    R3,H148                        148?
         BNE   ERR0020                        NO.. BAD NEWS
         GETMAIN RU,                          GETMAIN FOR VTOC DATA    +
               LV=VTOCDATA_L,                                          +
               LOC=ANY
         ITRACE ID=VTOCDATA,                                           +
               RDATA1=R1
NEW      USING VTOCDATA,R1
         XC    NEW.VTOCDATA(VTOCDATA_L),NEW.VTOCDATA
         L     R2,WORK_LAST_VTOCDATA          LAST BLOCK ON CHAIN
PREVIOUS USING VTOCDATA,R2
         ST    R1,PREVIOUS.VTOC_NEXT          ADD NEW TO CHAIN
         ST    R2,NEW.VTOC_PREVIOUS
         ST    R1,WORK_LAST_VTOCDATA          UPDATE LAST ON CHAIN
         MVC   NEW.VTOC_EYE,VTOC_ID           IDENTIFY THE BLOCK
         LR    R2,R3                          COPY LENGTH
         BCTR  R2,0                           COMPUTE LENGTH FOR MVC
         EX    R2,DATA_MVC                    COPY DATA
         LA    R0,1                           CONSTANT 1
         A     R0,COMM_VTOC_DSCBS             PLUS NUMBER SO FAR
         ST    R0,COMM_VTOC_DSCBS             UPDATE NUMBER OF DSCBS
* ------------------------------------------------------------------- *
*        Next record in current buffer                                *
* ------------------------------------------------------------------- *
MAIN0040 DS    0H
         AR    R6,R3                          NEXT IN BUFFER
         SR    R7,R3                          LENGTH LEFT
         ITRACE ID=NEXTRECD,                                           +
               RDATA1=R6,                                              +
               RDATA2=R7
         LTR   R7,R7                          ANY DATA LEFT?
         BNZ   MAIN0020                       YES
* ------------------------------------------------------------------- *
*        Update disk address for next read                            *
* ------------------------------------------------------------------- *
         ITRACE ID=UPDT_ADR,                                           +
               DATA1=(WORK_CC,4)
         CLC   WORK_CC(4),WORK_VTOC_END       AT END OF VTOC?
         BE    EXIT0000                       YES
         LH    R1,WORK_HH                     HEAD NUMBER
         LA    R1,1(,R1)                      NEXT HEAD
         CH    R1,COMM_MAX_HH                 AT MAX HEAD?
         BE    MAIN0050                       YES
         STH   R1,WORK_HH                     UPDATE HEAD
         ITRACE ID=NEW_HEAD,                                           +
               DATA1=(WORK_CC,5)
         B     MAIN0000                       READ NEXT TRACK
MAIN0050 DS    0H
         LH    R1,WORK_CC                     CYLINDER NUMBER
         LA    R1,1(,R1)                      NEXT CYLINDER
         STH   R1,WORK_CC                     UPDATE CYLINDER
         XC    WORK_HH,WORK_HH                RESET HEAD NUMBER
         ITRACE ID=NEW_CYL,                                            +
               DATA1=(WORK_CC,5)
         B     MAIN0000                       READ NEXT TRACK

DATA_MVC MVC   NEW.VTOC_DATA,0(R6)            COPY DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=I_O_ERR,                                            +
               DATA1=(WORK_ECB,1)
         DC    H'0'
ERR0020  DS    0H
         ITRACE ID=NOT_148
         DC    H'0'
ERR0030  DS    0H
         ITRACE ID=NOT_AUTH
         MVI   WORK_RC,12
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=CLOSE
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I    INITIALIZE CLOSE
         CLOSE ((R8)),                        CLOSE VTOC DCB           +
               MF=(E,WORK_CLOSE)
EXIT0010 DS    0H
         SR    R2,R2
         IC    R2,WORK_RC                     GET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R2,                                              +
               DATA2=(COMM_VTOC_DSCBS,1)
         LR    R1,R13                         COPY WORK AREA ADDR
         L     R13,4(,R13)                    RESTORE R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORK_L
         L     R14,12(,R13)                   RESTORE R14
         LR    R15,R2                         SET RC
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CCW_I    DS    0D
CCW_I_1  CCW   X'31',*,X'40',5                SEARCH
CCW_I_2  CCW   X'08',CCW_I_1,0,8              TIC
CCW_I_3  CCW   X'5E',*,X'20',65535            READ CKD MULTIPLE
CCW_L    EQU   *-CCW_I

DCB_I    DCB   DSORG=PS,                                               +
               DDNAME=VZ,                                              +
               DEVD=DA,                                                +
               EXLST=*,                                                +
               MACRF=EXCP
DCB_L    EQU   *-DCB_I
OPEN_I   OPEN  (*,INPUT),                                              +
               MF=L
OPEN_L   EQU   *-OPEN_I
CLOSE_I  CLOSE *,                                                      +
               MF=L
CLOSE_L  EQU   *-CLOSE_I

H148     DC    H'148'

VTOC_ID  DC    CL8'VTOCDATA'

              LTORG
DISPEND       EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK          DSECT
              COPY  DXDPREF

WORK_CCWS     DS    0D
WORK_CCW1     DS    D
WORK_CCW2     DS    D
WORK_CCW3     DS    D

WORK_DCB      DS    0A,(DCB_L)X
WORK_ECB      DS    F
WORK_OPEN     DS    0A,(OPEN_L)X
WORK_CLOSE    DS    0A,(CLOSE_L)X
WORK_IOB      DS    0A,(IOB_L)X
WORK_EXLST    DS    A
WORK_LAST_VTOCDATA DS   A
WORK_JFCB     DS    (JFCB_L)X

WORK_CC       DS    H                      CYLINDER NUMBER
WORK_HH       DS    H                      HEAD NUMBER
WORK_R        DS    X                      RECORD NUMBER

WORK_RC       DS    X

WORK_VTOC_END DS    XL4

WORK_INIT_L   EQU   *-WORK

WORK_IO       DS    65536X
WORK_L        EQU   *-WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY      VTOCDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
COUNT              DSECT
COUNT_CC           DS    XL2
COUNT_HH           DS    XL2
COUNT_R            DS    X
COUNT_KEY_LENGTH   DS    X
COUNT_DATA_LENGTH  DS    XL2
COUNT_L            EQU   *-COUNT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VZAPSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD     DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FORMAT_4 DSECT
         IECSDSL1 4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZIOB
IOB_L    EQU      *-IOB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZDEB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
JFCB     DSECT
         IEFJFCBN
JFCB_L   EQU      *-JFCB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      VZAPREAD
