* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VZAPMAIN CSECT
VZAPMAIN AMODE 31
VZAPMAIN RMODE ANY
         USING VZAPMAIN,R15                     DEFINE BASE
         B     INIT0000                         BRANCH
MODID    DC    CL8'VZAPMAIN'                    MODULE NAME
         DC    CL8'&SYSDATE'                    DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                    TIME OF ASSEMBLY
         DC    A(VZAPMAINEND-VZAPMAIN)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                  SAVE ENTRY REGISTERS
         LR    R10,R15                          COPY BASE
         DROP  R15
         USING VZAPMAIN,R10                     DEFINE PROGRAM BASE
         SR    R12,R12                          COMMON AREA NOT LOADED
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LTR   R8,R1                            COPY PARM ADDRESS
* ------------------------------------------------------------------- *
*        Acquire storage for work areas                               *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         L     R3,DXDSIZE                       WORK AREA SIZE
         GETMAIN RU,                            GETMAIN WORK AREA      +
               LV=(R3),                                                +
               LOC=ANY
         LR    R4,R1                            COPY STORAGE ADDRESS
         LR    R5,R1                            COPY STORAGE ADDRESS
         LR    R2,R1                            COPY WORK AREA ADDRESS
         SR    R1,R1                            CLEAR REGISTER
         MVCL  R2,R0                            CLEAR WORK AREA
         A     R5,DXDSTART                      PLUS DISPLACEMENT
         ST    R13,4(,R5)                       CHAINn AREA TO OURS
         ST    R5,8(,R13)                       chain AREA TO CALLER'S
         LR    R13,R5                           SET SAVE AREA ADDRESS
         USING DXDMAIN,R13                      DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID                  IDENTIFY AREA OWNER
* ------------------------------------------------------------------- *
*        LOAD COMMON DATA MODULE                                      *
* ------------------------------------------------------------------- *
         LOAD  EP=VZAPCOMM                      LOAD COMMON DATA MODULE
         LR    R12,R0                           COPY TO PERMANENT BASE
         LA    R12,0(R12)                       TURN OFF AMODE BIT(S)
         USING VZAPCOMM,R12                     DEFINE COMMON AREA BASE
         ST    R5,COMM_DXD                      SAVE WORK AREA BASE
         MVC   COMM_DXD_LENGTH,DXDSIZE
         ST    R8,COMM_COMMAND_ADDRESS          INVOKING COMMAND ADDR
* ------------------------------------------------------------------- *
*        Initialize addresses of statically linked modules            *
* ------------------------------------------------------------------- *
         LA    R0,VCONI                         V CONSTANTS
         LA    R1,VCONL                         V CONSTANTS LENGTH
         LA    R14,COMM_VCONS                   AREA IN VZAPCOMM
         LR    R15,R1                           COPY LENGTH
         MVCL  R14,R0                           COPY V CONSTANTS
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR TRACE TABLE                              *
* ------------------------------------------------------------------- *
         L     R3,TRACE_TABLE_SIZE              TRACE TABLE SIZE
         GETMAIN RU,                            GETMAIN TRACE TABLE    +
               LV=(R3),                                                +
               LOC=ANY
         ST    R1,COMM_TRACE                    SAVE ADDRESS
         SR    R0,R0                            ASSUME ON BOUNDARY
         TM    COMM_TRACE,X'07'                 ALREADY ON BOUNDARY?
         BNO   INIT0020                         YES
         SRL   R1,5                             SHIFT OUT LOW BITS ..
         SLL   R1,5                             .. TO ROUND
         LA    R1,32(,R1)                       PLUS 32
         LA    R0,TR_ENTRY_L                    1 LESS
INIT0020 DS    0H
         ST    R1,COMM_TRACE_1ST                FIRST TRACE ENTRY
         ST    R1,COMM_TRACE_CURR               CURRENT TRACE ENTRY
         A     R1,TRACE_TABLE_SIZE              LAST ENTRY IN TABLE
         SH    R1,=Y(TR_ENTRY_L)                MINUS 1 ENTRY
         SR    R1,R0                            MINUS BOUNDARY
         ST    R1,COMM_TRACE_LAST               LAST TRACE ENTRY
         ITRACE ID=VZAPCOMM,                                           +
               RDATA1=R12,                      .. COMMON AREA         +
               DATA2=(COMM_DXD,4)               .. DXD AREA ADDRESS
* ------------------------------------------------------------------- *
*        LOAD SPF interface                                           *
* ------------------------------------------------------------------- *
         LOAD  EP=ISPLINK                       LOAD ISPLINK
         ST    R0,COMM_ISPLINK                  SAVE ISPLINK ADDRESS
         ITRACE ID=ISPLINK,                                            +
               RDATA1=R0
* ------------------------------------------------------------------- *
*        LOAD SPF variable definitions                                *
* ------------------------------------------------------------------- *
         LOAD  EP=VZAPSPFV                      LOAD VZAPSPFV
         ST    R0,COMM_VZAPSPFV                 SAVE VZAPSPFV ADDRESS
         ITRACE ID=VZAPSPFV,                                           +
               RDATA1=R0
         NI    COMM_VZAPSPFV,X'7F'              TURN OFF AMODE BIT
* ------------------------------------------------------------------- *
*        LOAD SPF data                                                *
* ------------------------------------------------------------------- *
         LOAD  EP=VZAPSPFD                      LOAD VZAPSPFD
         LR    R9,R0                            COPY TO R9
         LA    R9,0(,R9)                        CLEAR AMODE BIT
         ST    R9,COMM_VZAPSPFD                 SAVE VZAPSPFD ADDRESS
         USING VZAPSPFD,R9
         ITRACE ID=VZAPSPFD,                                           +
               RDATA1=R9
* ------------------------------------------------------------------- *
*        VDEFINE SPF variables                                        *
* ------------------------------------------------------------------- *
         MVI   COMM_VAR_COMMAND,$VAR_DEFINE     SET COMMAND
         MVC   COMM_VARIABLE,ALL                ALL VARIABLES
         L     R15,COMM_V_VZAPVMGR
         BALR  R14,R15                          DEFINE VARIABLES
* ------------------------------------------------------------------- *
*        Determine invoking command's address and length              *
* ------------------------------------------------------------------- *
         LTR   R8,R8                            PARM PRESENT?
         BZ    INIT0050                         NO.. PROMPT
         ITRACE ID=CMD_ADDR,                                           +
               RDATA1=R8,                                              +
               DATA2=(0(R8),4)
         ICM   R14,15,0(R8)                     PARM PRESENT?
         BZ    INIT0050                         NO.. PROMPT
         LH    R15,0(R14)                       COMMAND'S LENGTH
         SH    R15,H4                           MINUS LENGTH LENGTH
         ST    R15,COMM_COMMAND_LENGTH          SAVE COMMAND LENGTH
         LA    R15,4(,R14)                      SKIP LENGTH
         ST    R15,COMM_COMMAND_ADDRESS         SET COMMAND ADDR
         L     R15,COMM_V_VZAPPARS              PARSE ENTRY POINT
         ITRACE ID=PARSE
         BALR  R14,R15                          PARSE COMMAND
         ITRACE ID=OPERS,                                              +
               DATA1=(COMM_OPERANDS_NBR,2),                            +
               DATA2=(COMM_OPERAND02,7)
         CLC   COMM_OPERANDS_NBR,H2             CORRECT NBR OF PARMS?
         BNE   INIT0050                         NO.. PROMPT USER
         CLC   COMM_OPERAND02_LENGTH,H6         CORRECT LENGTH?
         BNE   INIT0050                         NO.. PROMPT USER
         ICM   R1,15,COMM_OPERAND02_ADDRESS     VOLSER'S ADDRESS
         MVC   COMM_VOLSER,0(R1)                COPY VOLSER
         ITRACE ID=VOLSER,                                             +
               DATA1=(COMM_VOLSER,6)
         B     INIT0100
* ------------------------------------------------------------------- *
*        No VOLSER given on invoking command.  Prompt user.           *
* ------------------------------------------------------------------- *
INIT0050 DS    0H
         ITRACE ID=PROMPT                       PROMPTING FOR VOLSER
         XC    COMM_VDATA_ADDR,COMM_VDATA_ADDR  NO VDATA IN USE
         MVC   COMM_PANEL,PANEL_VZAP001         SET PANEL NAME
         L     R15,COMM_V_VZAPDISP              VZAPDISP ENTRY POINT
         BALR  R14,R15                          PROMPT USER
         ITRACE ID=PROMP_RC,                                           +
               DATA1=(COMM_DISP_RC,2)
         OC    COMM_DISP_RC,COMM_DISP_RC        ZERO?
         BNZ   EXIT0000                         NO
         MVC   COMM_VOLSER,SPF_VOLSER           COPY VOLSER TO COMMON
* ------------------------------------------------------------------- *
*        Allocate the volume                                          *
* ------------------------------------------------------------------- *
INIT0100 DS    0H
         MVI   COMM_DAIR_FUNC,$DAIR_ALLOC       ALLOCATION FUNCTION
         MVC   SPF_VOLSER,COMM_VOLSER           COPY VOLSER FOR SPF
         ITRACE ID=ALLOC,                                              +
               DATA1=(COMM_VOLSER,6)
         L     R15,COMM_V_VZAPDAIR              VZAPDAIR ENTRY POINT
         BALR  R14,R15                          CALL VZAPDAIR
         OC    COMM_DAIR_R15,COMM_DAIR_R15      SUCCESSFUL?
         BNZ   ERR0010                          NO
* ------------------------------------------------------------------- *
*                                                                     *
*        Read the VTOC                                                *
*                                                                     *
*        All records will be chained from COMM_VTOC_DATA              *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=READVTOC
         LOAD  EP=VZAPREAD                      LOAD VZAPREAD
         LR    R15,R0                           COPY ENTRY POINT
         BALR  R14,R15                          CALL VZAPREAD
         LR    R2,R15                           SAVE RC
         ITRACE ID=READ_RC,                                            +
               RDATA1=R15
         DELETE EP=VZAPREAD                     DELETE VZAPREAD
         LTR   R2,R2                            ERROR FROM VZAPREAD?
         BNZ   ERR0020                          YES
* ------------------------------------------------------------------- *
*        Display the data                                             *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=DISPDSCB
         L     R15,COMM_V_VZAPDSCB              VZAPDSCB ENTRY POINT
         BALR  R14,R15                          LINK TO VZAPDSCB
* ------------------------------------------------------------------- *
*        REWRITE ANY UPDATED RECORDS                                  *
* ------------------------------------------------------------------- *
         ITRACE ID=LOADWRIT
         LOAD  EP=VZAPWRIT                      LOAD VZAPWRIT
         LR    R15,R0                           COPY ENTRY POINT
         ITRACE ID=CALLWRIT,                                           +
               RDATA1=R15
         BALR  R14,R15                          CALL VZAPWRIT
         ITRACE ID=WRIT_RC,                                            +
               RDATA1=R15
         ITRACE ID=DEL_WRIT
         DELETE EP=VZAPWRIT                     DELETE VZAPWRIT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=DAIRFAIL
         MVC   SPF_MSG_1(MSG02_L),MSG02
         UNPK  COMM_INFO_01(5),COMM_DAIR_R15(3)
         TR    COMM_INFO_01(4),COMM_HEXCHAR
         MVC   SPF_MSG_1+(MSG02_R15-MSG02)(L'MSG02_R15),COMM_INFO_01

         MVC   SPF_MSG_2(MSG03_L),MSG03
         UNPK  COMM_INFO_01(5),COMM_DAIR_ERROR(3)
         TR    COMM_INFO_01(4),COMM_HEXCHAR
         MVC   SPF_MSG_2+(MSG03_ERROR-MSG03)(L'MSG03_ERROR),COMM_INFO_0+
               1

         MVC   SPF_MSG_3(MSG04_L),MSG04
         UNPK  COMM_INFO_01(5),COMM_DAIR_INFO(3)
         TR    COMM_INFO_01(4),COMM_HEXCHAR
         MVC   SPF_MSG_3+(MSG04_INFO-MSG04)(L'MSG04_INFO),COMM_INFO_01
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0020  DS    0H
         GETMAIN RU,                            GETMAIN STORAGE        +
               LV=L'SPF_MSG_1,                                         +
               LOC=BELOW
         LR    R2,R1                            COPY ADDRESS
         LA    R3,SPF_MSG_1                     FIRST MESSAGE
         LA    R4,5                             NBR OF MESSAGES
ERR0030  DS    0H
         MVC   0(L'SPF_MSG_1,R2),0(R3)          COPY BELOW 24-BIT LINE
         TPUT  (R2),L'SPF_MSG_1                 ISSUE TPUT
         LA    R3,L'SPF_MSG_1(,R3)              NEXT MESSAGE
         BCT   R4,ERR0030                       LOOP
         FREEMAIN RU,                           FREEMAIN STORAGE       +
               A=(R2),                                                 +
               LV=L'SPF_MSG_1
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXITING
* ------------------------------------------------------------------- *
*        Free DD                                                      *
* ------------------------------------------------------------------- *
EXIT0010 DS    0H
         TM    COMM_FLAGS,$COMM_VOLUME_ALLOCATED
         BNO   EXIT0020                         NOT ALLOCATED
         MVI   COMM_DAIR_FUNC,$DAIR_FREE        DAIR FUNCTION
         ITRACE ID=FREE_DD
         L     R15,COMM_V_VZAPDAIR              VZAPDAIR ENTRY POINT
         BALR  R14,R15                          CALL VZAPDAIR
* ------------------------------------------------------------------- *
*        Delete SPF variables                                         *
* ------------------------------------------------------------------- *
EXIT0020 DS    0H
         ICM   R1,15,COMM_ISPLINK
         BZ    EXIT0030
         OC    COMM_VZAPSPFD,COMM_VZAPSPFD
         BZ    EXIT0030
         ITRACE ID=DELVARS
         MVI   COMM_VAR_COMMAND,$VAR_DELETE
         L     R15,COMM_V_VZAPVMGR
         BALR  R14,R15
* ------------------------------------------------------------------- *
*        DELETE LOADed modules                                        *
* ------------------------------------------------------------------- *
         ITRACE ID=DEL_SPFV
         DELETE EP=VZAPSPFV
         XC    COMM_VZAPSPFV,COMM_VZAPSPFV
         ITRACE ID=DEL_SPFD
         DELETE EP=VZAPSPFD
         XC    COMM_VZAPSPFD,COMM_VZAPSPFD
         ITRACE ID=DEL_LINK
         DELETE EP=ISPLINK
         XC    COMM_ISPLINK,COMM_ISPLINK
* ------------------------------------------------------------------- *
*        FREEMAIN the trace table                                     *
* ------------------------------------------------------------------- *
EXIT0030 DS    0H
         L     R1,COMM_TRACE
         L     R0,TRACE_TABLE_SIZE
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=(0)
* ------------------------------------------------------------------- *
*        Delete VZAPCOMM                                              *
* ------------------------------------------------------------------- *
         L     R2,COMM_DXD
         LH    R3,COMM_RC
         DELETE EP=VZAPCOMM                     DELETE COMMON
* ------------------------------------------------------------------- *
*        FREEMAIN the work area                                       *
* ------------------------------------------------------------------- *
         L     R13,4(,R13)                      RESTORE ADDRESS
         LTR   R2,R2
         BZ    EXIT0040
         L     R0,DXDSIZE                       WORK AREA STORAGE SIZE
         FREEMAIN RU,                           FREEMAIN WORK AREA     +
               A=(R2),                                                 +
               LV=(0)
* ------------------------------------------------------------------- *
*        Set RC and exit                                              *
* ------------------------------------------------------------------- *
EXIT0040 DS    0H
         L     R14,12(R13)                      RESTORE R14
         LR    R15,R3                           SET RETURN CODE
         LM    R0,R12,20(R13)                   RESTORE REGISTERS
         BR    R14                              EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART         DC   Q(DXDMAIN)                DISP TO WORK AREA
DXDSIZE          CXD                            WORK AREA TOTAL SIZE
TRACE_TABLE_SIZE DC   A(TR_ENTRY_L*10000)

VCONI            DS   0A
                 VCONS
VCONL            EQU  *-VCONI

H2               DC   H'2'
H4               DC   H'4'
H6               DC   H'6'

MSG01            DS   0C
                 DC   C'VZAPMAIN01E '
                 DC   C'Volser omitted or incorrect length'
MSG01_L          EQU  *-MSG01

MSG02            DS   0C
                 DC   C'VZAPMAIN02E '
                 DC   C'DAIR FAILED.  R15='
MSG02_R15        DC   CL4' '
MSG02_L          EQU  *-MSG02

MSG03            DS   0C
                 DC   C'VZAPMAIN03E '
                 DC   C'              ERROR='
MSG03_ERROR      DC   CL4' '
MSG03_L          EQU  *-MSG03

MSG04            DS   0C
                 DC   C'VZAPMAIN04E '
                 DC   C'              INFO='
MSG04_INFO       DC   CL4' '
MSG04_L          EQU  *-MSG04

ALL              DC   CL8'ALL'
PANEL_VZAP001    DC   CL8'VZAP001'

VZAPMAINEND      EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDMAIN          DSECT
                 COPY     DXDPREF

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VZAPSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
         COPY    TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY    REGEQU
         END     VZAPMAIN
