{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "ZATLAS1", "INMTNODE": "A", "INMTUID": "ZATLAS1", "INMFTIME": "20200906020731000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 489881, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 1, "INMDSNAM": "ZATLAS1.PCRE2.COB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 489881, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 489881, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"ZATLAS1.PCRE2.COB": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\rXH\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\rXH\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\rXH\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"DUMPMEM": {"ttr": 9, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      ****************************************************************\n      * This file is a copybook, intended as a nested program to     *\n      * display a memory dump of up to 4k bytes.  It could be        *\n      * compiled independently and called a normal subroutine as well*\n      * Calling the dumpmem routine:                                 *\n      * call 'dumpmem' using string-variable length end-call         *\n      * Where                                                        *\n      * whatever is some number and length is how many bytes you want*\n      * to display                                                   *\n      * 01 string-variable      pic x(whatever).                     *\n      * 01 length               pic s9(9) comp-5.                    *\n      ****************************************************************\n      *\n      * Copyright (c) 2015 Ze'ev Atlas\n      * Please refer to the LICENSE document to see all other\n      * applicable copyrights.\n      *\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of Ze'ev Atlas nor the names of other\n      * contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      ****************************************************************\n       identification division.\n       PROGRAM-ID.  'DUMPMEM'.\n      * limited to display 4k bytes\n       data division.\n       working-storage section.\n       01 i          pic s9(9) comp-5.\n       01 j          pic s9(9) comp-5.\n       01 k          pic s9(9) comp-5.\n       01 l          pic s9(9) comp-5.\n       01 xj         pic s9(9) comp-5.\n       01 low-printable  pic s9(4) comp-5 value 31.\n       01 endianess      pic s9(4) comp-5 value 1.\n       01 len-max    pic s9(9) comp-5 value 4096.\n       01 x          pic x(4).\n       01 xi         redefines x pic s9(9) comp-5.\n       01 hextab     pic x(16) value '0123456789ABCDEF'.\n       01 buff       pic x(66).\n       01 ASCII-EBCDIC    pic x value '1'.\n          88 it-is-ebcdic value x'f1'.\n       linkage section.\n       01 datax      pic x(4096).\n       01 len        pic s9(9) comp-5.\n       procedure division using datax len.\n      * a crude way to decide ascii/ebcdic and endianess\n           if it-is-ebcdic\n              move 63 to low-printable\n              move 4 to endianess\n           end-if\n           move 4096 to len-max\n           if len > len-max\n              display 'limiting dump to 4k'\n      *       move 4096 to len-max\n           else\n              move len to len-max\n           end-if\n           move spaces to buff\n           move 1 to j\n           move 49 to k\n           move '|' to buff(k:1)\n           add 1 to k\n           perform varying i from 1 by 1 until i > len-max\n              move low-values to x\n              move datax (i:1) to x(endianess:1)\n      * a crude way to prevent displaying control characters\n              if xi > low-printable and xi < 255\n                 move datax (i:1) to buff(k:1)\n              else\n                 move '.' to buff(k:1)\n              end-if\n              divide xi by 16 giving xj\n              add 1 to xj giving l\n              move hextab(l:1) to buff(j:1)\n              add 1 to j\n              multiply xj by 16 giving xj\n              subtract xj from xi giving xi\n              add 1 to xi giving l\n              move hextab (l:1) to buff (j:1)\n              add 2 to j\n              add 1 to k\n              if j > 47 or i + 1 > len-max\n                  display buff\n                  move spaces to buff\n                  move 1 to j\n                  move 49 to k\n                  move '|' to buff(k:1)\n                  add 1 to k\n              end-if\n           end-perform.\n       END PROGRAM 'DUMPMEM'.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCOBDEA1": {"ttr": 305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01.\\x00\\x05\\x01\\x196/\\x01 \\x13\\x8f\"\\t\\x02d\\x01\\xa3\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.46", "flags": 0, "createdate": "2019-12-28T00:00:00", "modifydate": "2020-05-17T22:09:05", "lines": 612, "newlines": 419, "modlines": 0, "user": "ZATLAS1"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. 'PCOBDEA1'.\n       AUTHOR. Ze'ev Atlas.\n       DATE-WRITTEN. December 2019.\n      **************************************************\n      *           PCRE2 DEMONSTRATION PROGRAM          *\n      **************************************************\n      * This is an adaptation to cobol of the original pcre2demo.c\n      * Also, it assumes z/OS and EBCDIC, so parts and comments that\n      *discuss UNIX/LINUX/WINDOWS were removed or altered, as well as\n      *ASCII specificparts.\n\n      * This is a demonstration program to illustrate a\n      *straightforward way of calling the PCRE2 regular expression\n      *library from a C program.  See the pcre2sample documentation\n      *for a short discussion (\"man pcre2sample\" if you have\n      *the PCRE2 man pages installed). PCRE2 is a revised API for\n      *the library, and is incompatible with the original PCRE API.\n\n      * There are actually three libraries, each supporting a\n      *different code unit width. This demonstration program uses the\n      *8-bit library.  This version deals with EBCDIC only.\n\n      * For installing PCRE2 on z/OS, please follow the instructions\n      *that came with this package.\n      *\n      *---------------------------------------------------------------\n      * Copyright (c) 2015 Ze'ev Atlas\n      * Please refer to the LICENSE document to see all other\n      * applicable copyrights.\n      *\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * While the original UNIX/Windows program now supports the\n      *testing of the 8-bit, 16-bit and 16-bit PCRE libraries\n      *program, the z/OS COBOL (and C) versions support only 8 bit\n      *EBCDIC.  Modules such as COMPLIE2 (originally pcre_compile.c)\n      *in the library itself, are also specifically compiled for 8 bit\n      *EBCDIC.\n\n      *Adaptation of PCOBDEM2 to do some other demonstrations\n      *\n      * The first version of PCOBDEMA demonstrated usage of the native\n      * 'substitute' functionality\n      *\n      * The second version PCOBDEA1 is meant to demonstrate the usage\n      * of the z/OS specific implementation of handling the EBCDIC\n      * horror.  There is a set of functions that try to deal with\n      * differences between various codesets while hiding the gory\n      * details from the user.  The only things that the user needs\n      * to know are: a) his/her target codest name (this knowledge is\n      * not necessary if the target codeset is the native codest used\n      * by the specific machine.) and b) good estimate of the amount\n      * of memory needed for the pattern string, subject string,\n      * replacement string in case of substitute and the result string.\n      * The functions demonstrated are:\n      * pcrz_codeset_init(****)                 ZCSINIT\n      * pcrz_codeset_convert_pattern(****)      ZCSCONVP\n      * pcrz_codeset_convert_subject(****)      ZCSCONVS\n      * pcrz_codeset_init_substitute(****)      ZCSINIS\n      * pcrz_codeset_convert_replacement(****)  ZCSCONVR\n      * pcrz_codeset_convert_substitute_back    ZCSCONVB\n      * pcrz_codeset_release(****)              ZCSRLSE\n      *\n\n      *****************************************************************\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       Special-Names.\n           SYSIN is Pattern-Input.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INFILE ASSIGN TO SYSIN.\n\n      *****************************************************************\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  INFILE\n                RECORDING MODE IS F\n                BLOCK CONTAINS 0 RECORDS\n                LABEL RECORDS ARE STANDARD.\n       01  INPUT-RECORD.\n                05  FILLER                PIC X(80).\n\n       WORKING-STORAGE SECTION.\n       01  WS-PARM-DATA             PIC X(256) VALUE SPACES.\n       01  WS-PARM1                 PIC X(256).\n       01  WS-CNT-PARM1             PIC S9(4) COMP.\n       01  WS-PARM2                 PIC X(256).\n       01  WS-CNT-PARM2             PIC S9(4) COMP.\n       01  WS-PARM3                 PIC X(256).\n       01  WS-CNT-PARM3             PIC S9(4) COMP.\n       01  WS-PARM4                 PIC X(256).\n       01  WS-CNT-PARM4             PIC S9(4) COMP.\n       01  WS-buffer                PIC X(256).\n       01  WS-TALLY-PARM-BUFFER     PIC S9(9) COMP.\n       01  tabptr                   USAGE POINTER.\n       01 display-comp              PIC -(10)9.\n       01 i                         PIC S9(8) COMP.\n       01 j                         PIC S9(8) COMP.\n       01  d                        PIC S9(8) BINARY.\n       01  n                        PIC S9(8) COMP.\n       01  filler                   redefines n.\n           05 filler                pic xx.\n           05 n-x                   pic xx.\n       01  always-zero              pic s9(9) binary value zero.\n       01  always-256               pic s9(9) binary value 256.\n       01  always-60                pic s9(9) binary value 60.\n       01  always-16                pic s9(9) binary value 16.\n       01  always-4                 pic s9(9) binary value 4.\n       01  handle-ptr               usage pointer.\n       01  pattern-ptr              usage pointer.\n       01  subject-ptr              usage pointer.\n       01  subject-ptr-x redefines subject-ptr pic s9(9) comp.\n       01  replacement-ptr          usage pointer.\n       01  buffer-ptr               usage pointer.\n       01  buffer-ptr-x  redefines buffer-ptr  pic s9(9) comp.\n       01  buffer-out-ptr           usage pointer.\n       01  pattern-len              pic s9(9) comp.\n       01  subject-len              pic s9(9) comp.\n       01  replacement-len          pic s9(9) comp.\n       01  buffer-len               pic s9(9) comp.\n       01  codeset-name pic         x(17) value 'IBM-285'.\n       COPY    PCREWS2.\n       COPY    pcre2.\n      *copy    PCRZCONH replacing ==:prefix:== by ==WS==.\n      * define PCRE2_CODE_UNIT_WIDTH 8\n\n       LINKAGE SECTION.\n       01  PARM-BUFFER.\n           05  PARM-LENGTH         pic S9(4)   comp.\n           05  PARM-DATA           pic X(256).\n      * Reasonable size for the demo\n       01  LS-OVEC.\n           05  LS-OVECTOR              pic 9(9) COMP OCCURS 1000\n               INDEXED BY LS-OVECTOR-IX.\n      * Reasonable size for the demo\n       01  LS-NAME-TABLE.\n           05 LS-NAME-NUMBER       PIC 9(4) COMP.\n           05 LS-NAME              PIC X(1024).\n       01  FILLER       REDEFINES LS-NAME-TABLE.\n      * This is a dirty trick to allow setting pointer up\n           05 LS-NAME-X            PIC X OCCURS 1028\n               INDEXED BY LS-NAME-IX.\n       01  LS-short                PIC X(45).\n       01  LS-BUFFER               PIC X(16384).\n\n      *****************************************************************\n       PROCEDURE DIVISION USING PARM-BUFFER.\n\n      ****************************************************************\n      * Here is the program. The API includes the concept of         *\n      * \"contexts\" for setting up unusual interface requirements for *\n      * compiling and matching, \\such as custom memory managers and  *\n      * non-standard newline definitions. This program does not do   *\n      * any of this, so it makes no use of contexts, always passing  *\n      * NULL where a context could be given.                         *\n      ****************************************************************\n\n      ****************************************************************\n      * First, sort out the command line. There is only one possible *\n      * option at the moment, \"-g\" to request repeated matching to   *\n      * find all occurrences, like Perl's /g option. We set the      *\n      * variable find_all to a non-zero value if the -g option is    *\n      * present. Apart from that, there must be exactly two          *\n      * arguments.                                                   *\n      ****************************************************************\n           MOVE 0 TO PCREWS-find-all\n      * In Z/OS we accept parameters.\n           IF PARM-LENGTH > 0\n              MOVE PARM-DATA (1:PARM-LENGTH) TO WS-PARM-DATA\n              DISPLAY 'PCOBDEMA - COBOL PARM'\n              display\n           \"----+----1----+----2----+----3----+----4----+----5----+--\"\n              display WS-PARM-DATA\n      * Parse the command line (JCL PARM) the COBOL way :)\n              UNSTRING WS-PARM-DATA DELIMITED BY ALL SPACE INTO\n                 WS-PARM1 COUNT IN WS-CNT-PARM1\n                 WS-PARM2 COUNT IN WS-CNT-PARM2\n                 WS-PARM3 COUNT IN WS-CNT-PARM3\n                 WS-PARM4 COUNT IN WS-CNT-PARM4\n                 TALLYING IN WS-TALLY-PARM-BUFFER\n              END-UNSTRING\n              MOVE x'00' TO WS-PARM1 (WS-CNT-PARM1 + 1:1)\n              MOVE x'00' TO WS-PARM2 (WS-CNT-PARM2 + 1:1)\n              MOVE x'00' TO WS-PARM3 (WS-CNT-PARM3 + 1:1)\n              MOVE x'00' TO WS-PARM3 (WS-CNT-PARM4 + 1:1)\n              if  WS-CNT-PARM1 = 2\n                 if WS-PARM1(1:2) = '-g'\n                    DISPLAY \"g OPTION USED.\"\n                    MOVE 1 TO PCREWS-find-all\n                    MOVE WS-PARM2 TO WS-PARM1\n                    MOVE WS-CNT-PARM2 TO WS-CNT-PARM1\n                    MOVE WS-PARM3 TO WS-PARM2\n                    MOVE WS-CNT-PARM3 TO WS-CNT-PARM2\n                    MOVE WS-PARM4 TO WS-PARM3\n                    MOVE WS-CNT-PARM4 TO WS-CNT-PARM3\n                    SUBTRACT 1 FROM WS-TALLY-PARM-BUFFER\n                 end-if\n              end-if\n           END-IF\n      * After the options, we require exactly three arguments, which\n      * arethe pattern, subject string and the replacement string.\n           IF WS-TALLY-PARM-BUFFER NOT = 2\n      * Try to read from file, no real error checking\n              OPEN INPUT INFILE\n              READ INFILE INTO WS-PARM1\n              READ INFILE INTO WS-PARM2\n              READ INFILE INTO WS-PARM3\n              CLOSE INFILE\n              DISPLAY 'PCOBDEMA - COBOL READ INPUT'\n              display\n           \"----+----1----+----2----+----3----+----4----+----5----+--\"\n              display WS-PARM1\n              display WS-PARM2\n              display WS-PARM3\n      *    call 'pcrz_space_to_null_term_str' using\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM1\n                                   by value 72\n                                   returning WS-CNT-PARM1\n              end-call\n      * note the returning clause to get the length\n      *    call 'pcrz_space_to_null_term_str' using\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM2\n                                   by value 72\n                                   returning WS-CNT-PARM2\n              end-call\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM3\n                                   by value 72\n                                   returning WS-CNT-PARM3\n              end-call\n      * Make strings into null terminated\n           END-IF\n      * Pattern and subject are char arguments, so they can be\n      * straightforwardly cast to PCRE2_SPTR because we are working\n      * in 8-bit code units. The subject length is cast to PCRE2_SIZE\n      * for completeness, though PCRE2_SIZE is in fact defined to be\n      * size_t. */\n\n           SET PCREWS-PATTERN-PTR TO ADDRESS OF WS-PARM1\n           SET PCREWS-SUBJECT-PTR TO ADDRESS OF WS-PARM2\n           MOVE WS-CNT-PARM2 TO PCREWS-subject-length\n           SET PCREWS-REPL-PTR TO ADDRESS OF WS-PARM3\n           MOVE WS-CNT-PARM3 TO PCREWS-repl-length\n\n      * Initiate the codset manipulation\n      * Firstly, initiate the common fields\n      * Here we demonstrate dealing with a specific codeset 'IBM-285'\n      * on a machine with a different default codeset, so we must\n      * specify it.  If the target codeset is the default, the codeset\n      * parameter could be null.\n      * The estimated lengths of pattern and subject are left zero to\n      * indicate to the program to use defaults.\n\n           display 'DEBUG 1'\n           CALL 'DUMPMEM' USING\n                BY reference codeset-name\n                BY REFERENCE ALWAYS-16 END-CALL\n           display ' '\n      *    call pcrz_codeset_init ...\n           call 'ZCSINIT' using by reference handle-ptr\n                                by reference codeset-name\n                                BY VALUE    7\n                                BY VALUE    0\n                                BY VALUE    0\n                                RETURNING PCREWS-RC\n           end-call\n           if handle-ptr = NULL or PCREWS-RC not = 0\n              MOVE PCREWS-RC TO display-comp\n              DISPLAY 'CODSET initialization failed, RC='\n                 display-comp\n              MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n           CALL 'DUMPMEM' USING\n                BY value     handle-ptr\n                BY REFERENCE ALWAYS-60 END-CALL\n      * debug\n\n      * We know we are going to do substitute, so initiate that part\n      * as well\n\n           display 'DEBUG 2'\n           CALL 'DUMPMEM' USING\n                BY reference buffer-ptr\n                BY REFERENCE ALWAYS-16 END-CALL\n           display ' '\n      *    call pcrz_codeset_init_substitute ...\n           call 'ZCSINIS' using by value handle-ptr\n                                BY VALUE    0\n                                BY VALUE    0\n                                by reference buffer-ptr\n                                RETURNING PCREWS-RC\n           end-call\n           if PCREWS-RC not = 0\n              MOVE PCREWS-RC TO display-comp\n              DISPLAY 'CODSET initialization failed, RC='\n                 display-comp\n              MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n           CALL 'DUMPMEM' USING\n                BY value     handle-ptr\n                BY REFERENCE ALWAYS-60 END-CALL\n\n      *    SET PCREWS-output to address of WS-BUFFER\n\n      * Now  convert the pattern to  IBM-1047.  The result poiner\n      * would be given to the compile function\n\n      *    call pcrz_codeset_convert_pattern ...\n           call 'ZCSCONVP' using by value handle-ptr\n                                 by value PCREWS-PATTERN-PTR\n                                 by value 0\n                                 by reference pattern-ptr\n                                 by reference pattern-len\n                                RETURNING PCREWS-RC\n           end-call\n           if PCREWS-RC not = 0\n              MOVE PCREWS-RC TO display-comp\n              DISPLAY 'pattern conversion failed, RC='\n                 display-comp\n              MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n      * compensate for bug in 'ZSPC2NUL'\n      *    ADD 1 TO PCREWS-subject-length\n      *    ADD 1 TO PCREWS-repl-length\n      *****************************************************************\n      * Now we are going to compile the regular expression pattern,   *\n      * and handle any errors that are detected.                      *\n      *****************************************************************\n      * pcre2_code *pcre2_compile(PCRE2_SPTR pattern,\n      *  PCRE2_SIZE length, uint32_t options, int *errorcode,\n      *  PCRE2_SIZE *erroroffset, pcre2_compile_context *ccontext);\n\n              display 'pattern'\n\n           call 'COMPILE2' using\n      *         by value     pcrews-pattern-ptr\n                by value     pattern-ptr\n      *         BY VALUE     PCRE2-ZERO-TERMINATED\n                BY VALUE     pattern-len\n                BY VALUE 0\n                BY reference PCREWS-errornumber\n                BY reference pcrews-erroroffset\n                BY VALUE pcrews-null-ptr\n                RETURNING PCREWS-RE-PTR\n           end-call\n      * Explanation:\n      * the pattern */\n      * indicates pattern is zero-terminated */\n      * default options */\n      * for error number */\n      * for error offset */\n      * use default compile context */\n\n      * Compilation failed: print the error message and exit.\n      * int pcre2_get_error_message(int errorcode,\n      *   PCRE2_UCHAR *buffer, PCRE2_SIZE bufflen);\n\n           if PCREWS-RE-PTR = NULL\n              call 'GETERROR' USING\n                 BY VALUE PCREWS-errornumber\n                 BY REFERENCE WS-BUFFER\n                 BY VALUE  256\n              end-call\n              MOVE PCREWS-ERROROFFSET TO display-comp\n              DISPLAY 'PCRE2 compilation failed at offset '\n                 display-comp\n                 WS-BUFFER\n                MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n      *****************************************************************\n      * If the compilation succeeded, we call PCRE2 again, in order to*\n      * do a pattern match against the subject string. This does just *\n      * ONE match. If further matching is needed, it will be done     *\n      * below. Before running the match we must set up a match_data   *\n      * block for holding the result.  Using                          *\n      * pcre2_match_data_create_from_pattern() ensures that the block *\n      * is exactly the right size for the number of capturing         *\n      * parentheses in the pattern. If you need to know the actual    *\n      * size of a match_data block as a number of bytes, you can find *\n      * it like this:                                                 *\n      *                                                               *\n      * PCRE2_SIZE match_data_size =                                  *\n      *                     pcre2_get_match_data_size(match_data);    *\n      *****************************************************************\n\n      * Using this function ensures that the block is exactly the right\n      * size for the number of capturing parentheses in the pattern.\n\n      * pcre2_match_data *pcre2_match_data_create_from_pattern(\n      *  const pcre2_code *code, pcre2_general_context *gcontext);\n\n           CALL 'MATCDCFP' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE pcrews-null-ptr\n              RETURNING PCREWS-match-data\n           end-call\n\n      *****************************************************************\n      * Now we are going to substitute the matches with replacement,  *\n      * and handle any errors that are detected.                      *\n      *****************************************************************\n      *    move 256 to pcrews-outlength\n           move zero to PCREWS-OPTION-BITS\n           if PCREWS-find-all > 0\n                 move PCRE2-SUBSTITUTE-GLOBAL to\n                      PCREWS-OPTION-BITS\n                 move PCREWS-OPTION-BITS to display-comp\n                 display 'global substitute ' display-comp\n           end-if\n      * int PCRE2_CALL_CONVENTION\n      * pcre2_substitute(const pcre2_code *code, PCRE2_SPTR subject,\n      *   PCRE2_SIZE length, PCRE2_SIZE start_offset, uint32_t options,\n      *   pcre2_match_data *match_data, pcre2_match_context *mcontext,\n      *   PCRE2_SPTR replacement, PCRE2_SIZE rlength,\n      *   PCRE2_UCHAR *buffer, PCRE2_SIZE *blength)\n      *Points to the compiled pattern*/\n      *Points to the subject string*/\n      *Length of the subject string*/\n      *Offset in the subject at which to start matching*/\n      *Option bits*/\n      *Points to a match data block, or is NULL*/\n      *Points to a match context, or is NULL*/\n      *Points to the replacement string*/\n      *Length of the replacement string*/\n      *Points to the output buffer*/\n      *Points to the length of the output buffer*/\n      * While in the demo we do one subject, in real life there might\n      * be a loop, in which we may supply different subject lines, and\n      * perhaps different replacement patterns, so it is incumbent on\n      * us to apply the codest conversion, unless we know for sure it\n      * is not necessary.\n\n      * Now convert the subject to  IBM-1047.  The result poiner\n      * would be given to the substitute function\n\n      *    call pcrz_codeset_convert_subject ...\n      *    set address of ls-short to PCREWS-SUBJECT-PTR\n      *    display 'subject before: ' ls-short\n           call 'ZCSCONVS' using by value handle-ptr\n                                 by value PCREWS-SUBJECT-PTR\n                                 by value 0\n                                 by reference subject-ptr\n                                 by reference subject-len\n                                RETURNING PCREWS-RC\n           end-call\n           if PCREWS-RC not = 0\n              MOVE PCREWS-RC TO display-comp\n              DISPLAY 'subject conversion failed, RC='\n                 display-comp\n              MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n      * Now convert the replacement to  IBM-1047.  The result poiner\n      * would be given to the substitute function\n\n      *    call pcrz_codeset_convert_subject ...\n           call 'ZCSCONVR' using by value handle-ptr\n                                 by value PCREWS-REPL-PTR\n                                 by value 0\n                                 by reference replacement-ptr\n                                 by reference replacement-len\n                                RETURNING PCREWS-RC\n           end-call\n           if PCREWS-RC not = 0\n              MOVE PCREWS-RC TO display-comp\n              DISPLAY 'replacement conversion failed, RC='\n                 display-comp\n              MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n      * We know what's the output buffer size since we allocated\n      * it.  We used the default by supplying ZERO to ZCSINIS\n           MOVE PCRZ-MAX-SUBSTITUTE_SIZE to pcrews-outlength\n           move pcrews-outlength to display-comp\n           display 'pcrews-outlength before ' display-comp\n\n           CALL 'SUBSTIT2' USING\n              BY VALUE PCREWS-RE-PTR\n      *       BY VALUE PCREWS-SUBJECT-PTR\n              BY VALUE SUBJECT-PTR\n      *       BY VALUE PCREWS-subject-length\n              BY VALUE subject-len\n              BY VALUE 0\n              BY VALUE PCREWS-OPTION-BITS\n              BY VALUE PCREWS-match-data\n              BY VALUE pcrews-null-ptr\n      *       BY VALUE PCREWS-REPL-PTR\n              BY VALUE replacement-PTR\n      *       BY VALUE PCREWS-repl-length\n              BY VALUE replacement-len\n              BY value buffer-ptr\n              BY reference pcrews-outlength\n              RETURNING PCREWS-RC\n           end-call\n\n      * Matching failed: handle error cases\n           IF PCREWS-RC < 0\n              EVALUATE PCREWS-RC\n                 WHEN PCRE2-ERROR-NOMATCH\n                    DISPLAY \"No match\"\n      * Handle other special cases if you like\n                 WHEN OTHER\n                    MOVE PCREWS-RC TO display-comp\n                    DISPLAY \"Matching error \" display-comp\n              END-EVALUATE\n      * Release memory used for the match\n      * void pcre2_match_data_free(match_data);\n              CALL 'MATCHDFR' USING\n                 BY VALUE PCREWS-match-data\n              END-CALL\n      * data and the compiled pattern.\n      * void pcre2_code_free(code);\n              CALL 'CODEFREE' USING\n                 BY VALUE PCREWS-RE-PTR\n              END-CALL\n                MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n           move pcrews-outlength to display-comp\n           display 'pcrews-outlength after ' display-comp\n      *       CALL 'DUMPMEM' USING\n      *             BY VALUE buffer-ptr\n      *             by reference always-256\n           set address of ls-buffer to buffer-ptr\n           MOVE SPACE TO LS-BUFFER\n             (pcrews-outlength + 1:16384 - pcrews-outlength)\n      * Arbitrary number for reasonable display purpose\n           move ls-buffer(1:256) to ws-buffer\n           DISPLAY 'Substituted string before CONVB: '\n           DISPLAY wS-BUFFER.\n\n      * Now convert the result string back to original codeset.  This\n      * is the desired string\n\n      *    call pcrz_codeset_convert_substitute_back ...\n           call 'ZCSCONVB' using by value handle-ptr\n                                 by value buffer-ptr\n                                 by value pcrews-outlength\n                                 by reference buffer-out-ptr\n                                 by reference buffer-len\n                                RETURNING PCREWS-RC\n           end-call\n           if PCREWS-RC not = 0\n              MOVE PCREWS-RC TO display-comp\n              DISPLAY 'conversion back failed, RC='\n                 display-comp\n              MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n           set address of ls-buffer to buffer-out-ptr\n           MOVE SPACE TO LS-BUFFER\n             (buffer-len  + 1:16384 - buffer-len)\n           move ls-buffer(1:256) to ws-buffer\n           DISPLAY 'Substituted string: '\n           DISPLAY wS-BUFFER.\n\n\n       EXIT-FOREVER-LOOP.\n           CALL 'MATCHDFR' USING\n              BY VALUE PCREWS-match-data\n           END-CALL\n           CALL 'CODEFREE' USING\n              BY VALUE PCREWS-RE-PTR\n           END-CALL\n           MOVE 0 TO RETURN-CODE\n           GOBACK.\n        COPY DUMPMEM.\n        END PROGRAM 'PCOBDEA1'.\n      * End of pcre2demo.c\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCOBDEMA": {"ttr": 307, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. 'PCOBDEMA'.\n       AUTHOR. Ze'ev Atlas.\n       DATE-WRITTEN. December 2019.\n      **************************************************\n      *           PCRE2 DEMONSTRATION PROGRAM          *\n      **************************************************\n      * This is an adaptation to cobol of the original pcre2demo.c\n      * Also, it assumes z/OS and EBCDIC, so parts and comments that\n      *discuss UNIX/LINUX/WINDOWS were removed or altered, as well as\n      *ASCII specificparts.\n\n      * This is a demonstration program to illustrate a\n      *straightforward way of calling the PCRE2 regular expression\n      *library from a C program.  See the pcre2sample documentation\n      *for a short discussion (\"man pcre2sample\" if you have\n      *the PCRE2 man pages installed). PCRE2 is a revised API for\n      *the library, and is incompatible with the original PCRE API.\n\n      * There are actually three libraries, each supporting a\n      *different code unit width. This demonstration program uses the\n      *8-bit library.  This version deals with EBCDIC only.\n\n      * For installing PCRE2 on z/OS, please follow the instructions\n      *that came with this package.\n      *\n      *---------------------------------------------------------------\n      * Copyright (c) 2015 Ze'ev Atlas\n      * Please refer to the LICENSE document to see all other\n      * applicable copyrights.\n      *\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * While the original UNIX/Windows program now supports the\n      *testing of the 8-bit, 16-bit and 16-bit PCRE libraries\n      *program, the z/OS COBOL (and C) versions support only 8 bit\n      *EBCDIC.  Modules such as COMPLIE2 (originally pcre_compile.c)\n      *in the library itself, are also specifically compiled for 8 bit\n      *EBCDIC.\n\n      *Adaptation of PCOBDEM2 to do some other demonstrations\n\n      *****************************************************************\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       Special-Names.\n           SYSIN is Pattern-Input.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INFILE ASSIGN TO SYSIN.\n\n      *****************************************************************\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  INFILE\n                RECORDING MODE IS F\n                BLOCK CONTAINS 0 RECORDS\n                LABEL RECORDS ARE STANDARD.\n       01  INPUT-RECORD.\n                05  FILLER                PIC X(80).\n\n       WORKING-STORAGE SECTION.\n       01  WS-PARM-DATA             PIC X(256) VALUE SPACES.\n       01  WS-PARM1                 PIC X(256).\n       01  WS-CNT-PARM1             PIC S9(4) COMP.\n       01  WS-PARM2                 PIC X(256).\n       01  WS-CNT-PARM2             PIC S9(4) COMP.\n       01  WS-PARM3                 PIC X(256).\n       01  WS-CNT-PARM3             PIC S9(4) COMP.\n       01  WS-PARM4                 PIC X(256).\n       01  WS-CNT-PARM4             PIC S9(4) COMP.\n       01  WS-buffer                PIC X(256).\n       01  WS-TALLY-PARM-BUFFER     PIC S9(9) COMP.\n       01  tabptr                   USAGE POINTER.\n       01 display-comp              PIC -(10)9.\n       01 i                         PIC S9(8) COMP.\n       01 j                         PIC S9(8) COMP.\n       01  d                        PIC S9(8) BINARY.\n       01  n                        PIC S9(8) COMP.\n       01  filler                   redefines n.\n           05 filler                pic xx.\n           05 n-x                   pic xx.\n       01  always-zero              pic s9(9) binary value zero.\n       01  always-256               pic s9(9) binary value 256.\n       COPY    PCREWS2.\n       COPY    pcre2.\n      * define PCRE2_CODE_UNIT_WIDTH 8\n\n       LINKAGE SECTION.\n       01  PARM-BUFFER.\n           05  PARM-LENGTH         pic S9(4)   comp.\n           05  PARM-DATA           pic X(256).\n      * Reasonable size for the demo\n       01  LS-OVEC.\n           05  LS-OVECTOR              pic 9(9) COMP OCCURS 1000\n               INDEXED BY LS-OVECTOR-IX.\n      * Reasonable size for the demo\n       01  LS-NAME-TABLE.\n           05 LS-NAME-NUMBER       PIC 9(4) COMP.\n           05 LS-NAME              PIC X(1024).\n       01  FILLER       REDEFINES LS-NAME-TABLE.\n      * This is a dirty trick to allow setting pointer up\n           05 LS-NAME-X            PIC X OCCURS 1028\n               INDEXED BY LS-NAME-IX.\n\n      *****************************************************************\n       PROCEDURE DIVISION USING PARM-BUFFER.\n\n      ****************************************************************\n      * Here is the program. The API includes the concept of         *\n      * \"contexts\" for setting up unusual interface requirements for *\n      * compiling and matching, \\such as custom memory managers and  *\n      * non-standard newline definitions. This program does not do   *\n      * any of this, so it makes no use of contexts, always passing  *\n      * NULL where a context could be given.                         *\n      ****************************************************************\n\n      ****************************************************************\n      * First, sort out the command line. There is only one possible *\n      * option at the moment, \"-g\" to request repeated matching to   *\n      * find all occurrences, like Perl's /g option. We set the      *\n      * variable find_all to a non-zero value if the -g option is    *\n      * present. Apart from that, there must be exactly two          *\n      * arguments.                                                   *\n      ****************************************************************\n           MOVE 0 TO PCREWS-find-all\n      * In Z/OS we accept parameters.\n           IF PARM-LENGTH > 0\n              MOVE PARM-DATA (1:PARM-LENGTH) TO WS-PARM-DATA\n              DISPLAY 'PCOBDEMA - COBOL PARM'\n              display\n           \"----+----1----+----2----+----3----+----4----+----5----+--\"\n              display WS-PARM-DATA\n      * Parse the command line (JCL PARM) the COBOL way :)\n              UNSTRING WS-PARM-DATA DELIMITED BY ALL SPACE INTO\n                 WS-PARM1 COUNT IN WS-CNT-PARM1\n                 WS-PARM2 COUNT IN WS-CNT-PARM2\n                 WS-PARM3 COUNT IN WS-CNT-PARM3\n                 WS-PARM4 COUNT IN WS-CNT-PARM4\n                 TALLYING IN WS-TALLY-PARM-BUFFER\n              END-UNSTRING\n              MOVE x'00' TO WS-PARM1 (WS-CNT-PARM1 + 1:1)\n              MOVE x'00' TO WS-PARM2 (WS-CNT-PARM2 + 1:1)\n              MOVE x'00' TO WS-PARM3 (WS-CNT-PARM3 + 1:1)\n              MOVE x'00' TO WS-PARM3 (WS-CNT-PARM4 + 1:1)\n              if  WS-CNT-PARM1 = 2\n                 if WS-PARM1(1:2) = '-g'\n                    DISPLAY \"g OPTION USED.\"\n                    MOVE 1 TO PCREWS-find-all\n                    MOVE WS-PARM2 TO WS-PARM1\n                    MOVE WS-CNT-PARM2 TO WS-CNT-PARM1\n                    MOVE WS-PARM3 TO WS-PARM2\n                    MOVE WS-CNT-PARM3 TO WS-CNT-PARM2\n                    MOVE WS-PARM4 TO WS-PARM3\n                    MOVE WS-CNT-PARM4 TO WS-CNT-PARM3\n                    SUBTRACT 1 FROM WS-TALLY-PARM-BUFFER\n                 end-if\n              end-if\n           END-IF\n      * After the options, we require exactly three arguments, which\n      * arethe pattern, subject string and the replacement string.\n           IF WS-TALLY-PARM-BUFFER NOT = 2\n      * Try to read from file, no real error checking\n              OPEN INPUT INFILE\n              READ INFILE INTO WS-PARM1\n              READ INFILE INTO WS-PARM2\n              READ INFILE INTO WS-PARM3\n              CLOSE INFILE\n              DISPLAY 'PCOBDEMA - COBOL READ INPUT'\n              display\n           \"----+----1----+----2----+----3----+----4----+----5----+--\"\n              display WS-PARM1\n              display WS-PARM2\n              display WS-PARM3\n      *    call 'pcrz_space_to_null_term_str' using\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM1\n                                   by value 80\n              end-call\n      * note the returning clause to get the length\n      *    call 'pcrz_space_to_null_term_str' using\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM2\n                                   by value 80\n                                   returning WS-CNT-PARM2\n              end-call\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM3\n                                   by value 80\n                                   returning WS-CNT-PARM3\n              end-call\n      * Make strings into null terminated\n           END-IF\n      * Pattern and subject are char arguments, so they can be\n      * straightforwardly cast to PCRE2_SPTR because we are working\n      * in 8-bit code units. The subject length is cast to PCRE2_SIZE\n      * for completeness, though PCRE2_SIZE is in fact defined to be\n      * size_t. */\n\n           SET PCREWS-PATTERN-PTR TO ADDRESS OF WS-PARM1\n           SET PCREWS-SUBJECT-PTR TO ADDRESS OF WS-PARM2\n           MOVE WS-CNT-PARM2 TO PCREWS-subject-length\n           SET PCREWS-REPL-PTR TO ADDRESS OF WS-PARM3\n           MOVE WS-CNT-PARM3 TO PCREWS-repl-length\n           SET PCREWS-output to address of WS-BUFFER\n      * compensate for bug in 'ZSPC2NUL'\n      *    ADD 1 TO PCREWS-subject-length\n      *    ADD 1 TO PCREWS-repl-length\n      *****************************************************************\n      * Now we are going to compile the regular expression pattern,   *\n      * and handle any errors that are detected.                      *\n      *****************************************************************\n      * pcre2_code *pcre2_compile(PCRE2_SPTR pattern,\n      *  PCRE2_SIZE length, uint32_t options, int *errorcode,\n      *  PCRE2_SIZE *erroroffset, pcre2_compile_context *ccontext);\n           call 'COMPILE2' using\n                by value     pcrews-pattern-ptr\n                BY VALUE     PCRE2-ZERO-TERMINATED\n                BY VALUE 0\n                BY reference PCREWS-errornumber\n                BY reference pcrews-erroroffset\n                BY VALUE pcrews-null-ptr\n                RETURNING PCREWS-RE-PTR\n           end-call\n      * Explanation:\n      * the pattern */\n      * indicates pattern is zero-terminated */\n      * default options */\n      * for error number */\n      * for error offset */\n      * use default compile context */\n\n      * Compilation failed: print the error message and exit.\n      * int pcre2_get_error_message(int errorcode,\n      *   PCRE2_UCHAR *buffer, PCRE2_SIZE bufflen);\n\n           if PCREWS-RE-PTR = NULL\n              call 'GETERROR' USING\n                 BY VALUE PCREWS-errornumber\n                 BY REFERENCE WS-BUFFER\n                 BY VALUE  256\n              end-call\n              MOVE PCREWS-ERROROFFSET TO display-comp\n              DISPLAY 'PCRE2 compilation failed at offset '\n                 display-comp\n                 WS-BUFFER\n                MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n      *****************************************************************\n      * If the compilation succeeded, we call PCRE2 again, in order to*\n      * do a pattern match against the subject string. This does just *\n      * ONE match. If further matching is needed, it will be done     *\n      * below. Before running the match we must set up a match_data   *\n      * block for holding the result.  Using                          *\n      * pcre2_match_data_create_from_pattern() ensures that the block *\n      * is exactly the right size for the number of capturing         *\n      * parentheses in the pattern. If you need to know the actual    *\n      * size of a match_data block as a number of bytes, you can find *\n      * it like this:                                                 *\n      *                                                               *\n      * PCRE2_SIZE match_data_size =                                  *\n      *                     pcre2_get_match_data_size(match_data);    *\n      *****************************************************************\n\n      * Using this function ensures that the block is exactly the right\n      * size for the number of capturing parentheses in the pattern.\n\n      * pcre2_match_data *pcre2_match_data_create_from_pattern(\n      *  const pcre2_code *code, pcre2_general_context *gcontext);\n\n           CALL 'MATCDCFP' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE pcrews-null-ptr\n              RETURNING PCREWS-match-data\n           end-call\n\n      *****************************************************************\n      * Now we are going to substitute the matches with replacement,  *\n      * and handle any errors that are detected.                      *\n      *****************************************************************\n           move 256 to pcrews-outlength\n           move zero to PCREWS-OPTION-BITS\n           if PCREWS-find-all > 0\n                 move PCRE2-SUBSTITUTE-GLOBAL to\n                      PCREWS-OPTION-BITS\n                 display 'global substitute'\n           end-if\n      * int PCRE2_CALL_CONVENTION\n      * pcre2_substitute(const pcre2_code *code, PCRE2_SPTR subject,\n      *   PCRE2_SIZE length, PCRE2_SIZE start_offset, uint32_t options,\n      *   pcre2_match_data *match_data, pcre2_match_context *mcontext,\n      *   PCRE2_SPTR replacement, PCRE2_SIZE rlength,\n      *   PCRE2_UCHAR *buffer, PCRE2_SIZE *blength)\n      *Points to the compiled pattern*/\n      *Points to the subject string*/\n      *Length of the subject string*/\n      *Offset in the subject at which to start matching*/\n      *Option bits*/\n      *Points to a match data block, or is NULL*/\n      *Points to a match context, or is NULL*/\n      *Points to the replacement string*/\n      *Length of the replacement string*/\n      *Points to the output buffer*/\n      *Points to the length of the output buffer*/\n\n           CALL 'SUBSTIT2' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE PCREWS-SUBJECT-PTR\n              BY VALUE PCREWS-subject-length\n              BY VALUE 0\n              BY VALUE PCREWS-OPTION-BITS\n              BY VALUE PCREWS-match-data\n              BY VALUE pcrews-null-ptr\n              BY VALUE PCREWS-REPL-PTR\n              BY VALUE PCREWS-repl-length\n              BY reference WS-BUFFER\n              BY reference pcrews-outlength\n              RETURNING PCREWS-RC\n           end-call\n\n      * Matching failed: handle error cases\n           IF PCREWS-RC < 0\n              EVALUATE PCREWS-RC\n                 WHEN PCRE2-ERROR-NOMATCH\n                    DISPLAY \"No match\"\n      * Handle other special cases if you like\n                 WHEN OTHER\n                    MOVE PCREWS-RC TO display-comp\n                    DISPLAY \"Matching error \" display-comp\n              END-EVALUATE\n      * Release memory used for the match\n      * void pcre2_match_data_free(match_data);\n              CALL 'MATCHDFR' USING\n                 BY VALUE PCREWS-match-data\n              END-CALL\n      * data and the compiled pattern.\n      * void pcre2_code_free(code);\n              CALL 'CODEFREE' USING\n                 BY VALUE PCREWS-RE-PTR\n              END-CALL\n                MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n           MOVE SPACE TO WS-BUFFER\n             (pcrews-outlength + 1:256 - pcrews-outlength)\n           DISPLAY 'Substituted string: '\n           DISPLAY WS-BUFFER.\n\n\n       EXIT-FOREVER-LOOP.\n           CALL 'MATCHDFR' USING\n              BY VALUE PCREWS-match-data\n           END-CALL\n           CALL 'CODEFREE' USING\n              BY VALUE PCREWS-RE-PTR\n           END-CALL\n           MOVE 0 TO RETURN-CODE\n           GOBACK.\n        COPY DUMPMEM.\n        END PROGRAM 'PCOBDEMA'.\n      * End of pcre2demo.c\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCOBDEM2": {"ttr": 161, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00#\\x01\\x194O\\x01\\x194_\\x08\\x18\\x02\\xd1\\x02\\xcf\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2019-12-10T00:00:00", "modifydate": "2019-12-11T08:18:23", "lines": 721, "newlines": 719, "modlines": 0, "user": "ZATLAS1"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. 'PCOBDEM2'.\n       AUTHOR. Ze'ev Atlas.\n       DATE-WRITTEN. July 2015.\n      **************************************************\n      *           PCRE2 DEMONSTRATION PROGRAM          *\n      **************************************************\n      * This is an adaptation to cobol of the original pcre2demo.c\n      * Also, it assumes z/OS and EBCDIC, so parts and comments that\n      *discuss UNIX/LINUX/WINDOWS were removed or altered, as well as\n      *ASCII specificparts.\n\n      * This is a demonstration program to illustrate a\n      *straightforward way of calling the PCRE2 regular expression\n      *library from a C program.  See the pcre2sample documentation\n      *for a short discussion (\"man pcre2sample\" if you have\n      *the PCRE2 man pages installed). PCRE2 is a revised API for\n      *the library, and is incompatible with the original PCRE API.\n\n      * There are actually three libraries, each supporting a\n      *different code unit width. This demonstration program uses the\n      *8-bit library.  This version deals with EBCDIC only.\n\n      * For installing PCRE2 on z/OS, please follow the instructions\n      *that came with this package.\n      *\n      *---------------------------------------------------------------\n      * Copyright (c) 2015 Ze'ev Atlas\n      * Please refer to the LICENSE document to see all other\n      * applicable copyrights.\n      *\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * While the original UNIX/Windows program now supports the\n      *testing of the 8-bit, 16-bit and 16-bit PCRE libraries\n      *program, the z/OS COBOL (and C) versions support only 8 bit\n      *EBCDIC.  Modules such as COMPLIE2 (originally pcre_compile.c)\n      *in the library itself, are also specifically compiled for 8 bit\n      *EBCDIC.\n\n      *This experimental version tries to work with memory management\n\n      *****************************************************************\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       Special-Names.\n           SYSIN is Pattern-Input.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INFILE ASSIGN TO SYSIN.\n\n      *****************************************************************\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  INFILE\n                RECORDING MODE IS F\n                BLOCK CONTAINS 0 RECORDS\n                LABEL RECORDS ARE STANDARD.\n       01  INPUT-RECORD.\n                05  FILLER                PIC X(80).\n\n       WORKING-STORAGE SECTION.\n       01  WS-PARM-DATA             PIC X(256) VALUE SPACES.\n       01  WS-PARM1                 PIC X(256).\n       01  WS-CNT-PARM1             PIC S9(4) COMP.\n       01  WS-PARM2                 PIC X(256).\n       01  WS-CNT-PARM2             PIC S9(4) COMP.\n       01  WS-PARM3                 PIC X(256).\n       01  WS-CNT-PARM3             PIC S9(4) COMP.\n       01  WS-buffer                PIC X(256).\n       01  WS-TALLY-PARM-BUFFER     PIC S9(9) COMP.\n       01  tabptr                   USAGE POINTER.\n       01 display-comp              PIC -(10)9.\n       01 i                         PIC S9(8) COMP.\n       01 j                         PIC S9(8) COMP.\n       01  d                        PIC S9(8) BINARY.\n       01  n                        PIC S9(8) COMP.\n       01  filler                   redefines n.\n           05 filler                pic xx.\n           05 n-x                   pic xx.\n       01  always-zero              pic s9(9) binary value zero.\n       01  always-256               pic s9(9) binary value 256.\n       COPY    PCREWS2.\n       COPY    pcre2.\n      * define PCRE2_CODE_UNIT_WIDTH 8\n\n       LINKAGE SECTION.\n       01  PARM-BUFFER.\n           05  PARM-LENGTH         pic S9(4)   comp.\n           05  PARM-DATA           pic X(256).\n      * Reasonable size for the demo\n       01  LS-OVEC.\n           05  LS-OVECTOR              pic 9(9) COMP OCCURS 1000\n               INDEXED BY LS-OVECTOR-IX.\n      * Reasonable size for the demo\n       01  LS-NAME-TABLE.\n           05 LS-NAME-NUMBER       PIC 9(4) COMP.\n           05 LS-NAME              PIC X(1024).\n       01  FILLER       REDEFINES LS-NAME-TABLE.\n      * This is a dirty trick to allow setting pointer up\n           05 LS-NAME-X            PIC X OCCURS 1028\n               INDEXED BY LS-NAME-IX.\n\n      *****************************************************************\n       PROCEDURE DIVISION USING PARM-BUFFER.\n\n      ****************************************************************\n      * Here is the program. The API includes the concept of         *\n      * \"contexts\" for setting up unusual interface requirements for *\n      * compiling and matching, \\such as custom memory managers and  *\n      * non-standard newline definitions. This program does not do   *\n      * any of this, so it makes no use of contexts, always passing  *\n      * NULL where a context could be given.                         *\n      ****************************************************************\n\n      ****************************************************************\n      * First, sort out the command line. There is only one possible *\n      * option at the moment, \"-g\" to request repeated matching to   *\n      * find all occurrences, like Perl's /g option. We set the      *\n      * variable find_all to a non-zero value if the -g option is    *\n      * present. Apart from that, there must be exactly two          *\n      * arguments.                                                   *\n      ****************************************************************\n           MOVE 0 TO PCREWS-find-all\n      * In Z/OS we accept parameters.\n           IF PARM-LENGTH > 0\n              MOVE PARM-DATA (1:PARM-LENGTH) TO WS-PARM-DATA\n              DISPLAY 'PCOBDEM2 - COBOL PARM'\n              display\n           \"----+----1----+----2----+----3----+----4----+----5----+--\"\n              display WS-PARM-DATA\n      * Parse the command line (JCL PARM) the COBOL way :)\n              UNSTRING WS-PARM-DATA DELIMITED BY ALL SPACE INTO\n                 WS-PARM1 COUNT IN WS-CNT-PARM1\n                 WS-PARM2 COUNT IN WS-CNT-PARM2\n                 WS-PARM3 COUNT IN WS-CNT-PARM3\n                 TALLYING IN WS-TALLY-PARM-BUFFER\n              END-UNSTRING\n              MOVE x'00' TO WS-PARM1 (WS-CNT-PARM1 + 1:1)\n              MOVE x'00' TO WS-PARM2 (WS-CNT-PARM2 + 1:1)\n              MOVE x'00' TO WS-PARM3 (WS-CNT-PARM3 + 1:1)\n              if  WS-CNT-PARM1 = 2\n                 if WS-PARM1(1:2) = '-g'\n                    DISPLAY \"g OPTION USED.\"\n                    MOVE 1 TO PCREWS-find-all\n                    MOVE WS-PARM2 TO WS-PARM1\n                    MOVE WS-CNT-PARM2 TO WS-CNT-PARM1\n                    MOVE WS-PARM3 TO WS-PARM2\n                    MOVE WS-CNT-PARM3 TO WS-CNT-PARM2\n                    SUBTRACT 1 FROM WS-TALLY-PARM-BUFFER\n                 end-if\n              end-if\n           END-IF\n      * After the options, we require exactly two arguments, which are\n      * the pattern, and the subject string.\n           IF WS-TALLY-PARM-BUFFER NOT = 2\n      * Try to read from file, no real error checking!\n              OPEN INPUT INFILE\n              READ INFILE INTO WS-PARM1\n              READ INFILE INTO WS-PARM2\n              CLOSE INFILE\n              DISPLAY 'PCOBDEM2 - COBOL READ INPUT'\n              display\n           \"----+----1----+----2----+----3----+----4----+----5----+--\"\n              display WS-PARM1\n              display WS-PARM2\n      *    call 'pcrz_space_to_null_term_str' using\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM1\n                                   by value 80\n              end-call\n      * note the returning clause to get the length\n      *    call 'pcrz_space_to_null_term_str' using\n              call 'ZSPC2NUL' using\n                                   by reference WS-PARM2\n                                   by value 80\n                                   returning WS-CNT-PARM2\n              end-call\n      * Make strings into null terminated\n           END-IF\n      * Pattern and subject are char arguments, so they can be\n      * straightforwardly cast to PCRE2_SPTR because we are working\n      * in 8-bit code units. The subject length is cast to PCRE2_SIZE\n      * for completeness, though PCRE2_SIZE is in fact defined to be\n      * size_t. */\n\n           SET PCREWS-PATTERN-PTR TO ADDRESS OF WS-PARM1\n           SET PCREWS-SUBJECT-PTR TO ADDRESS OF WS-PARM2\n           MOVE WS-CNT-PARM2 TO PCREWS-subject-length\n      * compensate for bug in 'ZSPC2NUL'\n      *    ADD 1 TO PCREWS-subject-length\n\n      *****************************************************************\n      * Now we are going to compile the regular expression pattern,   *\n      * and handle any errors that are detected.                      *\n      *****************************************************************\n      * pcre2_code *pcre2_compile(PCRE2_SPTR pattern,\n      *  PCRE2_SIZE length, uint32_t options, int *errorcode,\n      *  PCRE2_SIZE *erroroffset, pcre2_compile_context *ccontext);\n           call 'COMPILE2' using\n                by value     pcrews-pattern-ptr\n                BY VALUE     PCRE2-ZERO-TERMINATED\n                BY VALUE 0\n                BY reference PCREWS-errornumber\n                BY reference pcrews-erroroffset\n                BY VALUE pcrews-null-ptr\n                RETURNING PCREWS-RE-PTR\n           end-call\n      * Explanation:\n      * the pattern */\n      * indicates pattern is zero-terminated */\n      * default options */\n      * for error number */\n      * for error offset */\n      * use default compile context */\n\n      * Compilation failed: print the error message and exit.\n      * int pcre2_get_error_message(int errorcode,\n      *   PCRE2_UCHAR *buffer, PCRE2_SIZE bufflen);\n\n           if PCREWS-RE-PTR = NULL\n              call 'GETERROR' USING\n                 BY VALUE PCREWS-errornumber\n                 BY REFERENCE WS-BUFFER\n                 BY VALUE  256\n              end-call\n              MOVE PCREWS-ERROROFFSET TO display-comp\n              DISPLAY 'PCRE2 compilation failed at offset '\n                 display-comp\n                 WS-BUFFER\n                MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n      *****************************************************************\n      * If the compilation succeeded, we call PCRE2 again, in order to*\n      * do a pattern match against the subject string. This does just *\n      * ONE match. If further matching is needed, it will be done     *\n      * below. Before running the match we must set up a match_data   *\n      * block for holding the result.  Using                          *\n      * pcre2_match_data_create_from_pattern() ensures that the block *\n      * is exactly the right size for the number of capturing         *\n      * parentheses in the pattern. If you need to know the actual    *\n      * size of a match_data block as a number of bytes, you can find *\n      * it like this:                                                 *\n      *                                                               *\n      * PCRE2_SIZE match_data_size =                                  *\n      *                     pcre2_get_match_data_size(match_data);    *\n      *****************************************************************\n\n      * Using this function ensures that the block is exactly the right\n      * size for the number of capturing parentheses in the pattern.\n\n      * pcre2_match_data *pcre2_match_data_create_from_pattern(\n      *  const pcre2_code *code, pcre2_general_context *gcontext);\n\n           CALL 'MATCDCFP' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE pcrews-null-ptr\n              RETURNING PCREWS-match-data\n           end-call\n\n      * Now run the match. */\n      * int pcre2_match(const pcre2_code *code, PCRE2_SPTR subject,\n      *  PCRE2_SIZE length, PCRE2_SIZE startoffset,\n      *  uint32_t options, pcre2_match_data *match_data,\n      *  pcre2_match_context *mcontext);\n\n           CALL 'MATCH2' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE PCREWS-SUBJECT-PTR\n              BY VALUE PCREWS-subject-length\n              BY VALUE 0\n              BY VALUE 0\n              BY VALUE PCREWS-match-data\n              BY VALUE pcrews-null-ptr\n              RETURNING PCREWS-RC\n           end-call\n      * Explanation:\n      * the compiled pattern */\n      * the subject string */\n      * the length of the subject */\n      * start at offset 0 in the subject */\n      * default options */\n      * block for storing the result */\n      * use default match context */\n\n      * Matching failed: handle error cases\n           IF PCREWS-RC < 0\n              EVALUATE PCREWS-RC\n                 WHEN PCRE2-ERROR-NOMATCH\n                    DISPLAY \"No match\"\n      * Handle other special cases if you like\n                 WHEN OTHER\n                    MOVE PCREWS-RC TO display-comp\n                    DISPLAY \"Matching error \" display-comp\n              END-EVALUATE\n      * Release memory used for the match\n      * void pcre2_match_data_free(match_data);\n              CALL 'MATCHDFR' USING\n                 BY VALUE PCREWS-match-data\n              END-CALL\n      * data and the compiled pattern.\n      * void pcre2_code_free(code);\n              CALL 'CODEFREE' USING\n                 BY VALUE PCREWS-RE-PTR\n              END-CALL\n                MOVE 1 TO RETURN-CODE\n              GOBACK\n           end-if\n\n      * Match succeded. Get a pointer to the output vector, where\n      * string offsets are stored.\n      * PCRE2_SIZE *pcre2_get_ovector_pointer(\n      *  pcre2_match_data *match_data)\n           CALL 'GETOVEPT' USING\n              BY VALUE PCREWS-match-data\n              RETURNING PCREWS-ovector\n           END-CALL\n      *\n           SET ADDRESS OF LS-OVEC TO PCREWS-ovector\n           DISPLAY ' '\n           MOVE LS-OVECTOR (1) TO display-comp\n           DISPLAY \"Match succeeded at offset \" display-comp\n\n      *****************************************************************\n      * We have found the first match within the subject string. If   *\n      * the output vector wasn't big enough, say so. Then output any  *\n      * substrings that were captured.                                *\n      *****************************************************************\n\n      * The output vector wasn't big enough. This should not happen,\n      * because we used pcre2_match_data_create_from_pattern() above.\n\n           IF PCREWS-RC = 0\n              DISPLAY\n           \"ovector was not big enough for all the captured substrings\"\n           end-if\n\n      * Show substrings stored in the output vector by number.\n      * Obviously, in a real application you might want to do things\n      * other than print them.\n\n           PERFORM VARYING I FROM 1 BY 1 UNTIL i > PCREWS-RC\n              COMPUTE j = (i * 2) - 1\n              ADD 1 TO LS-OVECTOR(j) GIVING PCREWS-substring-start\n              SUBTRACT ls-ovector(j) FROM LS-OVECTOR(j + 1)\n                 GIVING PCREWS-substring-length\n              MOVE I TO display-comp\n              DISPLAY display-comp ': '\n                 WS-PARM2\n                (PCREWS-substring-start:PCREWS-substring-length)\n           END-PERFORM\n\n      ****************************************************************\n      * That concludes the basic part of this demonstration program. *\n      * We have compiled a pattern, and performed a single match. The*\n      * code that follows shows first how to access named substrings,*\n      * and then how to code for repeated matches on the same subject*\n      ****************************************************************\n\n      * See if there are any named substrings, and if so, show them by\n      * name. First we have to extract the count of named parentheses\n      * from the pattern.\n      * int pcre2_pattern_info(const pcre2 *code, uint32_t what,\n      *  void *where);\n\n           CALL 'PATTERN2' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE PCRE2-INFO-NAMECOUNT\n              BY REFERENCE PCREWS-NAMECOUNT\n           END-CALL\n      * Explanation:\n      * the compiled pattern */\n      * get the number of named substrings */\n      * where to put the answer */\n\n           if PCREWS-NAMECOUNT <= 0\n              DISPLAY \"No named substrings\"\n           else\n              DISPLAY \"Named substrings\"\n\n      * Before we can access the substrings, we must extract the table\n      * for translating names to numbers, and the size of each entry\n      * in the table.\n\n              CALL 'PATTERN2' USING\n                 BY VALUE PCREWS-RE-PTR\n                 BY VALUE PCRE2-INFO-NAMETABLE\n                 BY REFERENCE PCREWS-NAME-TABLE\n              END-CALL\n      *       CALL 'DUMPMEM' USING\n      *            BY VALUE PCREWS-NAME-TABLE\n      *            BY REFERENCE ALWAYS-256 END-CALL\n      *Explanation:\n      * the compiled pattern */\n      * address of the table */\n      * where to put the answer */\n\n              CALL 'PATTERN2' USING\n                 BY VALUE PCREWS-RE-PTR\n                 BY VALUE PCRE2-INFO-NAMEENTRYSIZE\n                 BY REFERENCE PCREWS-NAME-ENTRY-SIZE\n              END-CALL\n      *Explanation:\n      * the compiled pattern */\n      * size of each entry in the table */\n      * where to put the answer */\n\n      * Now we can scan the table and, for each entry, print the\n      * number, the name,  and the substring itself. In the 8-bit\n      * library the number is held in two bytes, most significant\n      * first.\n\n              SET tabptr TO PCREWS-NAME-TABLE\n              PERFORM VARYING i FROM 1 BY 1 UNTIL i > PCREWS-namecount\n                 SET ADDRESS OF LS-NAME-TABLE TO tabptr\n                 SUBTRACT 3 FROM PCREWS-NAME-ENTRY-SIZE GIVING d\n                 COMPUTE j = ((LS-NAME-NUMBER + 1) * 2) - 1\n                 ADD 1 TO LS-OVECTOR(j) GIVING PCREWS-substring-start\n                 SUBTRACT ls-ovector(j) FROM LS-OVECTOR(j + 1)\n                    GIVING PCREWS-substring-length\n                 MOVE PCREWS-substring-length TO display-comp\n                 DISPLAY '(' display-comp ') '  LS-NAME (1:d) ': '\n                    WS-PARM2\n                    (PCREWS-substring-start:PCREWS-substring-length)\n                 SET LS-NAME-IX TO 1\n                 SET LS-NAME-IX UP BY PCREWS-NAME-ENTRY-SIZE\n                 SET tabptr TO ADDRESS OF LS-NAME-X (LS-NAME-IX)\n              END-PERFORM\n           END-IF\n\n      *****************************************************************\n      * If the \"-g\" option was given on the command line, we want to  *\n      * continue to search for additional matches in the subject      *\n      * string, in a similar way to the /g option in Perl. This turns *\n      * out to be trickier than you might think because of the        *\n      * possibility of matching an empty string. What happens is as   *\n      * follows:                                                      *\n      *                                                               *\n      * If the previous match was NOT for an empty string, we can just*\n      * start the next match at the end of the previous one.          *\n      *                                                               *\n      * If the previous match WAS for an empty string, we can't do    *\n      * that, as it would lead to an infinite loop. Instead, a call of*\n      * pcre2_match() is made with the PCRE2_NOTEMPTY_ATSTART and     *\n      * PCRE2_ANCHORED flags set. The first of these tells PCRE2 that *\n      * an empty string at the start of the subject is not a valid    *\n      * match; other possibilities must be tried. The second flag     *\n      * restricts PCRE2 to one match attempt at the initial string    *\n      * position. If this match succeeds, an alternative to the empty *\n      * string match has been found, and we can print it and proceed  *\n      * round the loop, advancing by the length of whatever was found.*\n      * If this match does not succeed, we still stay in the loop,    *\n      * advancing by just one character. In UTF-8 mode, which can be  *\n      * set by (*UTF) in the pattern, this may be more than one byte. *\n      *                                                               *\n      * However, there is a complication concerned with newlines. When*\n      * the newline convention is such that CRLF is a valid newline,  *\n      * we must advance by two characters rather than one. The newline*\n      * convention can be set in the regex by (*CR), etc.; if not, we *\n      * must find the default.                                        *\n      *****************************************************************\n\n      * Check for -g */\n           if PCREWS-find-all = 0\n      * Release the memory that was used\n      * for the match data and the pattern.\n      * Exit the program.\n\n      * void pcre2_match_data_free(match_data);\n              CALL 'MATCHDFR' USING\n                 BY VALUE PCREWS-match-data\n              END-CALL\n      * void pcre2_code_free(code);\n              CALL 'CODEFREE' USING\n                 BY VALUE PCREWS-RE-PTR\n              END-CALL\n              MOVE 0 TO RETURN-CODE\n              GOBACK\n           END-IF\n\n      * Before running the loop, check for UTF-8 and whether CRLF is a\n      * valid newline sequence. First, find the options with which the\n      * regex was compiled and extract the UTF state.\n           CALL 'PATTERN2' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE PCRE2-INFO-ALLOPTIONS\n              BY REFERENCE PCREWS-OPTION-BITS\n           END-CALL\n      * The original checks individual bits which is hard in COBOL, so\n      * I just display the bits as a number\n      * utf8 = (option_bits & PCRE2_UTF) != 0;\n           move pcrews-option-bits to display-comp\n           display \"COBOL DISPLAY - OPTION BITS IS: \" display-comp\n\n      * Now find the newline convention and see whether CRLF is a\n      * valid newline sequence.\n      * This is irrelevant in z/OS and EBCDIC\n\n           CALL 'PATTERN2' USING\n              BY VALUE PCREWS-RE-PTR\n              BY VALUE PCRE2-INFO-NEWLINE\n              BY REFERENCE PCREWS-newline\n           END-CALL\n      * I just display the newline as a number\n      * crlf_is_newline = newline == PCRE2_NEWLINE_ANY ..\n      *                   newline == PCRE2_NEWLINE_CRLF ..\n      *                   newline == PCRE2_NEWLINE_ANYCRLF;\n           move pcrews-option-bits to display-comp\n           display \"COBOL DISPLAY - NEWLINE IS: \" display-comp\n\n      * Loop for second and subsequent matches\n           PERFORM UNTIL always-zero > 0\n      * Normally no options\n              MOVE ZERO TO PCREWS-OPTION-BITS\n              move ls-ovector (2) TO PCREWS-start-offset\n      * Start at end of previous match */\n\n      * If the previous match was for an empty string, we are finished\n      * if we are at the end of the subject. Otherwise, arrange to run\n      * another match at the same point to see if a non-empty match\n      * can be found.\n\n              IF ls-ovector(1) = ls-ovector(2)\n                 if ls-ovector (1) = PCREWS-subject-length\n      *             EXIT PERFORM\n      * if EXIT PERFORM is not available uncomment the\n      * EXIT-FOREVER-LOOP lable after the end-perform and use:\n                    GO TO EXIT-FOREVER-LOOP\n                 end-if\n                 ADD PCRE2-NOTEMPTY-ATSTART to PCRE2-ANCHORED\n                     GIVING PCREWS-OPTION-BITS\n              end-if\n\n      * Run the next matching operation */\n      * the compiled pattern */\n      * the subject string */\n      * the length of the subject */\n      * starting offset in the subject */\n      * options */\n      * block for storing the result */\n      * use default match context */\n              CALL 'MATCH2' USING\n                 BY VALUE PCREWS-RE-PTR\n                 BY VALUE PCREWS-SUBJECT-PTR\n                 BY VALUE PCREWS-subject-length\n                 BY VALUE PCREWS-start-offset\n                 BY VALUE PCREWS-OPTION-BITS\n                 BY VALUE PCREWS-match-data\n                 BY VALUE pcrews-null-ptr\n                 RETURNING PCREWS-RC\n              end-call\n\n      * This time, a result of NOMATCH isn't an error. If the value in\n      * \"options\" is zero, it just means we have found all possible\n      * matches, so the loop ends.  Otherwise, it means we have failed\n      * to find a non-empty-string match at a point where there was a\n      * previous empty-string match. In this case, we do what Perl\n      * does: advance the matching position by one character, and\n      * continue. We do this by setting the \"end of previous match\"\n      * offset, because that is picked up at the top of the loop as\n      * the point at which to start again.\n\n      * There are two complications: (a) When CRLF is a valid newline\n      * sequence, and the current position is just before it, advance\n      * by an extra byte. (b) Otherwise we must ensure that we skip an\n      * entire UTF character if we are in UTF mode.\n      * ZA: however, these complications are irrelevant foe z/OS and\n      * EBCDIC, so the whole dealing with them was eliminated.\n\n              if PCREWS-RC = PCRE2-ERROR-NOMATCH\n                 if PCREWS-OPTION-BITS = 0\n      * All matches found */\n      *             EXIT PERFORM\n      * if EXIT PERFORM is not available uncomment the\n      * EXIT-FOREVER-LOOP lable after the end-perform and use:\n                    GO TO EXIT-FOREVER-LOOP\n                 end-if\n                 ADD 1 to PCREWS-start-offset giving ls-ovector (2)\n      * Advance one code unit */\n      * eliminated code:\n      * if (crlf_is_newline &&              /* If CRLF is newline & */\n      *    start_offset < subject_length - 1 && /* we are at CRLF, */\n      *    subject.start_offset. == '\\r' &&\n      *    subject.start_offset + 1. == '\\n')\n      *    ovector.1. += 1;                 /* Advance by one more. */\n      * else if (utf8)                      /* Otherwise, ensure we */\n      * {                                   /* advance a whole UTF-8 */\n      *    while (ovector.1. < subject_length) /* character. */\n      *    {\n      *    if ((subject.ovector.1.. & 0xc0) != 0x80) break;\n      *    ovector.1. += 1;\n      *    }\n      * }\n      *          EXIT PERFORM CYCLE\n      * Go round the loop again */\n      * if EXIT PERFORM CYCLE is not available in your compiler then\n      * you'll have to comment the next end-if and  confine the\n      * restricts of the perform within else/if or evaluate\n      *       end-if\n      * The else below is for COBOL prior to 5.2 <---<<<\n              else\n\n      * Other matching errors are not recoverable. */\n\n              if PCREWS-RC < 0\n                 MOVE PCREWS-RC TO display-comp\n                 DISPLAY \"Matching error \" display-comp\n                 CALL 'MATCHDFR' USING\n                    BY VALUE PCREWS-match-data\n                 END-CALL\n                 CALL 'CODEFREE' USING\n                    BY VALUE PCREWS-RE-PTR\n                 END-CALL\n                 MOVE 1 TO RETURN-CODE\n                 GOBACK\n              end-if\n\n      * Match succeded\n\n              DISPLAY ' '\n              MOVE LS-OVECTOR(1) TO display-comp\n              DISPLAY \"Match succeeded again at offset \" display-comp\n\n      * The match succeeded, but the output vector wasn't big enough.\n      * This should not happen.\n\n              if PCREWS-RC = 0\n                 DISPLAY\n           \"ovector was not big enough for all the captured substrings\"\n              end-if\n\n      * As before, show substrings stored in the output vector by\n      * number, and then also any named substrings.\n\n              PERFORM VARYING I FROM 1 BY 1 UNTIL i > PCREWS-RC\n                 COMPUTE j = (i * 2) - 1\n                 ADD 1 TO LS-OVECTOR(j) GIVING PCREWS-substring-start\n                 SUBTRACT ls-ovector(j) FROM LS-OVECTOR(j + 1)\n                    GIVING PCREWS-substring-length\n                 MOVE I TO display-comp\n                 DISPLAY display-comp ': '\n                    WS-PARM2\n                    (PCREWS-substring-start:PCREWS-substring-length)\n              END-PERFORM\n\n              if PCREWS-namecount <= 0\n                 DISPLAY \"No named substrings\"\n\n              else\n                 SET tabptr TO PCREWS-NAME-TABLE\n                 display \"Named substrings\"\n                 PERFORM VARYING i FROM 1 BY 1 UNTIL i >\n                         PCREWS-namecount\n                    SET ADDRESS OF LS-NAME-TABLE TO tabptr\n                    SUBTRACT 3 FROM PCREWS-NAME-ENTRY-SIZE GIVING d\n                    COMPUTE j = ((LS-NAME-NUMBER + 1) * 2) - 1\n                    ADD 1 TO LS-OVECTOR(j) GIVING\n                        PCREWS-substring-start\n                    SUBTRACT ls-ovector(j) FROM LS-OVECTOR(j + 1)\n                       GIVING PCREWS-substring-length\n                    MOVE PCREWS-substring-length TO display-comp\n                    DISPLAY '(' display-comp ') '  LS-NAME (1:d) ': '\n                       WS-PARM2\n                       (PCREWS-substring-start:PCREWS-substring-length)\n                    SET LS-NAME-IX TO 1\n                    SET LS-NAME-IX UP BY PCREWS-NAME-ENTRY-SIZE\n                    SET tabptr TO ADDRESS OF LS-NAME-X (LS-NAME-IX)\n                 END-PERFORM\n              end-if\n      * The end-if below is for COBOL prior to 5.2 <---<<<\n      * and it closes the superflouos else\n              end-if\n           END-PERFORM.\n      * End of loop to find second and subsequent matches */\n\n       EXIT-FOREVER-LOOP.\n           CALL 'MATCHDFR' USING\n              BY VALUE PCREWS-match-data\n           END-CALL\n           CALL 'CODEFREE' USING\n              BY VALUE PCREWS-RE-PTR\n           END-CALL\n           MOVE 0 TO RETURN-CODE\n           GOBACK.\n        COPY DUMPMEM.\n        END PROGRAM 'PCOBDEM2'.\n      * End of pcre2demo.c\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCOBDOC": {"ttr": 195, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x194_\\x01\\x194_\"\\x11\\x00\\x9e\\x00\\x9e\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-12-11T00:00:00", "modifydate": "2019-12-11T22:11:05", "lines": 158, "newlines": 158, "modlines": 0, "user": "ZATLAS1"}, "text": "      * Contributed by:   Ze'ev Atlas  2019.\n      * Copyright (c) 2019, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\nThis document documents the COBOL modules and copybooks available\nherein\n\n1. COBOL Library hlq.PCRE2.COB and members' origin in the original\n   package\n\nDUMPMEM   A utility function, dumps a chunk of memmory, not a port.\nPCOBDEM2  A port of pcre2demo.c to COBOL\nPCOBDEMA  A simple adaptation of PCOBDEM2 to demonstarte usage of\n          pcre2-substitute (SUBSTIT2)\nPCOBDOC   This document\nPCRCMPCN  A port of 'typedef struct pcre2_real_compile_context'\nPCRE2     A aprtial port of pcre2.h to COBOL\nPCRECAL2  A port of 'typedef struct pcre2_callout_block'\n          and 'typedef struct pcre2-callout-enumerate-block'\n          and 'typedef struct pcre2_substitute_callout_block'\nPCRECODE  A port of 'typedef struct pcre2_real_code'\nPCRECTXT  A port of 'typedef struct pcre2_real_convert_context'\nPCREWS2   Some useful fields for COBOL WORKING-STORAGE SECTION, not a\n          port.\nPCRGENCN  A port of 'typedef struct pcre2_real_general_context'\nPCRMECTL  A port of 'typedef struct pcre2_memctl'\nPCRMTCCN  A port of 'typedef struct pcre2_real_match_context'\nPCRMTCDA  A port of 'typedef struct pcre2_real_match_data'\nREGEX1    A sample program of how to use the IBM POSIX functions, not\n          a port.\n\nSix of the above typedef's  are located in pcre2_intmodedep.h in a\nsection marked as:\n----------------------- HIDDEN STRUCTURES ----------------------------\nwith the NOTE: All these structures *must* start with a pcre2_memctl\nstructure. The code that uses them is simpler because it assumes this.\n\nZA Note: You may notice that all copybooks that represent these\nstructure indeed start with COPY PCRMECTL.  I do NOT expect anybody to\nactually refer directly to any field within that structure, so I left\nall of them as FILLER.  I will change that if proven to be wrong.\n\npcre2_real_general_context\npcre2_real_compile_context\npcre2_real_match_context\npcre2_real_convert_context\npcre2_real_code\npcre2_real_match_data\n\npcre2_memctl is located in pcre2_internal.h\n\npcre2_callout_block\npcre2_callout_enumerate_block\npcre2_substitute_callout_block\n\nare located in pcre2.h and available to all.\n\n2. Why these ported structures.\n\nThe driving force in deciding whether to port structures  to COBOL or\nnot was whether they are used in pcre2test.c or not.  I figured out\nthat anything used in that program is likely to be exposed to the\nadvanced user who may want to go beyond compiling and matching while\nstructures not exposed in that program are probably internal to the\npackage and are less likely to ever be used by even an advanced user.\nI will  change that if proven to be wrong.\n\nHowever, in my judgement, the  chance that an ordinary user would ever\nuse these structures uis slim.  I myself do not use them in my demo\nprograms.\n\n3. General usage\n\nThe copybooks above, all but PCRMECTL use the :prefix: notation\nrequiring:\n        COPY mambername REPLACING ==:PREFIX:== by someprefix\ndue to long names in the original c code, it is better to limit\nprefixes to two characters, lest you surpass the allowd 30 characters\nin COBOL names.  The prefix notation allow you to use multiple\ninstances of the structure as needed, and wherever needed (such as in\nWORKING-STORAGE SECTION, LINKAGE SECTION, etc.\n\nPCRECAL2 contains three structurs, all use :PREFIX:-version, so if you\nneed to refer to that variable use the\n        someprefix-version OF someprefix-pcre2-callout-block (or\nwhichever you are referring to.)\n\nAlso see a comment about PCRMECTL above.\n\n4. What is demonstrated and why\n\nThe two demo programs demonstrate basic usage of:\nCOMPILE2  pcre2_compile\nMATCH2    pcre2_match\nSUBSTIT2  pcre2_substitute\nGETOVEPT  pcre2_get_ovector_pointer\nMATCDCFP  pcre2_match_data_create_from_pattern\nPATTERN2  pcre2_pattern_info\nGETERROR  pcre2_get_error_message\nCODEFREE  pcre2_code_free\nMATCHDFR  pcre2_match_data_free\n\nThe original demo program that comes with the library demonstrates the\nabove functions except of pcre2_substitute.  I added the second demo\nprogram that completes the set.  If you thonk about it, the most\ncommon activities with regex objects are compiling them initially,\nSearching or matching the pattern with the subject string and\nsubstituting certain parts of the string with alternative replacemt\nstrings.  The author of the original demo pogram chose to demonstrate\nsome fonctions that give a glimpse into the pattern and match data.\nDeciphering error meassges and memory bookkeeping (free momory) are\na good idea in any type of programming.\n\n9. Road Map\n\nIf all is good and I have time, I will try to choose more functions\nand create some more demo programs to demonstrate said funcions.\nI encourage my users to do same and contribute, so we all could push\nthe usage of PCRE2 in the COBOL (and Rexx) context, beyond the minimal\nfunctionality that is demonstrated in the PCOBDEM2 and PCOBDEMOA.\n\nNote that my demo programs tend to be simplified.  I do not play too\nmuch with the available options word, let alone more  complicated\nstructures.  My goal is to demonstrate the basic functionality, such\nas match, substitute and perhaps substring.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRCMPCN": {"ttr": 13, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      * This is a partial port of a private header (pcre2_intmodedep.h)\n      * file for the PCRE library to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * The real compile context structure\n\n       01  :PREFIX:-pcre2-compile-context.\n      * memctl;\n           COPY PCRMECTL.\n           05  :PREFIX:-stack-guard          USAGE POINTER.\n           05  :PREFIX:-stack-guard-data     USAGE POINTER.\n           05  :PREFIX:-tables               USAGE POINTER.\n           05  :PREFIX:-max-pattern-length   PIC 9(4) COMP.\n           05  :PREFIX:-bsr-convention       PIC 9(4) COMP.\n           05  :PREFIX:-newline-convention   PIC 9(4) COMP.\n           05  :PREFIX:-parens-nest-limit    PIC 9(9) COMP.\n           05  :PREFIX:-extra-options        PIC 9(9) COMP.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRECAL2": {"ttr": 123, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\x194/\\x01\\x194/\"\\x16\\x00\\x95\\x00\\x95\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-12-08T00:00:00", "modifydate": "2019-12-08T22:16:42", "lines": 149, "newlines": 149, "modlines": 0, "user": "ZATLAS1"}, "text": "      * This is a partial port of the public header (pcre2.h) file for\n      * the PCRE library to COBOL.  It is to be COPIED by applications\n      * that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * The structures for passing out data via callout functions.\n      * We use structures so that new fields can be added on the end\n      * in future versions, without changing the API of the function,\n      * thereby allowing old clients to work without modification.\n      * Define the generic versions in a macro; the width-specific\n      * is always 8 in z/OS EBCDIC.\n\n       01 PCRE2-CALLOUT-STARTMATCH-x PIC X(4) VALUE    x'00000001'.\n       01 PCRE2-CALLOUT-STARTMATCH\n             REDEFINES PCRE2-CALLOUT-STARTMATCH-x PIC 9(9) COMP.\n       * Set for each bumpalong\n       01 PCRE2-CALLOUT-BACKTRACK-x  PIC X(4) VALUE    x'00000002'.\n       01 PCRE2-CALLOUT-BACKTRACK\n             REDEFINES PCRE2-CALLOUT-BACKTRACK-x PIC 9(9) COMP.\n      * Set after a backtrack\n\n       01 :PREFIX:-pcre2-callout-block.\n      * Identifies version of block\n           05 :PREFIX:-version                 PIC 9(9) COMP.\n      * ------------------------ Version 0 ---------------------------\n      * Number compiled into pattern\n           05 :PREFIX:-callout-number          PIC 9(9) COMP.\n      * Max current capture\n           05 :PREFIX:-capture-top             PIC 9(9) COMP.\n      * Most recently closed capture\n           05 :PREFIX:-capture-last            PIC 9(9) COMP.\n      * The offset vector -\n           05 :PREFIX:-offset-vector           USAGE POINTER.\n      * Pointer to current mark or NULL\n           05 :PREFIX:-mark                    USAGE POINTER.\n      * The subject being matched\n           05 :PREFIX:-subject                 USAGE POINTER.\n      * The length of the subject\n           05 :PREFIX:-subject-length          PIC 9(9) COMP.\n      * Offset to start of this match attempt\n           05 :PREFIX:-start-match             PIC 9(9) COMP.\n      * Where we currently are in the subject\n           05 :PREFIX:-current-position        PIC 9(9) COMP.\n      * Offset to next item in the pattern\n           05 :PREFIX:-pattern-position        PIC 9(9) COMP.\n      * Length of next item in the pattern\n           05 :PREFIX:-next_item-length        PIC 9(9) COMP.\n      * ------------------- Added for Version 1 ----------------------\n      * Offset to string within pattern\n           05 :PREFIX:-callout-string-offset   PIC 9(9) COMP.\n      * Length of string compiled into pattern\n           05 :PREFIX:-callout-string-length   PIC 9(9) COMP.\n      * String compiled into pattern\n           05 :PREFIX:-callout-string          USAGE POINTER.\n      * --------------------------------------------------------------\n      * ------------------- Added for Version 2 ----------------------\n           05 :PREFIX:-callout_flags          PIC 9(9) COMP.\n      * See above for list\n\n       01 :PREFIX:-pcre2-callout-enumerate-block.\n      * Identifies version of block */ \\\n           05 :PREFIX:-version                    PIC 9(9) COMP.\n      * ------------------------ Version 0 ---------------------------\n      * Offset to next item in the pattern */ \\\n           05 :PREFIX:-en-pattern-position        PIC 9(9) COMP.\n      * Length of next item in the pattern */ \\\n           05 :PREFIX:-en-next_item-length        PIC 9(9) COMP.\n      * Number compiled into pattern */ \\\n           05 :PREFIX:-en-callout-number          PIC 9(9) COMP.\n      * Offset to string within pattern */ \\\n           05 :PREFIX:-en-callout-string-offset   PIC 9(9) COMP.\n      * Length of string compiled into pattern */ \\\n           05 :PREFIX:-en-callout-string-length   PIC 9(9) COMP.\n      * String compiled into pattern */ \\\n           05 :PREFIX:-en-callout-string          USAGE POINTER.\n      * --------------------------------------------------------------\n\n       01 :PREFIX:-pcre2-callout-enumerate-block.\n      * Identifies version of block\n           05 :PREFIX:-version                    PIC 9(9) COMP.\n      * ------------------------ Version 0 ---------------------------\n      * Offset to next item in the pattern\n           05 :PREFIX:-pattern-position           PIC 9(9) COMP.\n      * Length of next item in the pattern\n           05 :PREFIX:-next-item-length           PIC 9(9) COMP.\n      * Number compiled into pattern\n           05 :PREFIX:-callout-number             PIC 9(9) COMP.\n      * Offset to string within pattern\n           05 :PREFIX:-callout-string-offset      PIC 9(9) COMP.\n      * Length of string compiled into pattern\n           05 :PREFIX:-callout-string-length      PIC 9(9) COMP.\n      * String compiled into pattern\n           05 :PREFIX:-callout-string             USAGE POINTER.\n      * --------------------------------------------------------------\n\n       01 :PREFIX:-pcre2_substitute_callout_block { \\\n      * Identifies version of block */ \\\n           05 :PREFIX:-version;\n      * ------------------------ Version 0 ---------------------------\n      * Pointer to input subject string\n           05 :PREFIX:-input                      USAGE POINTER.\n      * Pointer to output buffer\n           05 :PREFIX:-output                     USAGE POINTER.\n      * Changed portion of the output\n           05 :PREFIX:-output-offsets  PIC 9(9) COMP   occurs 2.\n      * Pointer to current ovector\n           05 :PREFIX:-ovector                    USAGE POINTER.\n      * Count of pairs set in ovector\n           05 :PREFIX:-oveccount                  PIC 9(9) COMP.\n      * Substitution number\n           05 :PREFIX:-subscount                  PIC 9(9) COMP.\n      * ---------------------------------------------------------------\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRECODE": {"ttr": 17, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      * This is a partial port of a private header (pcre2_intmodedep.h)\n      * file for the PCRE library to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * The real compiled code structure. The type for the blocksize\n      * field is defined specially because it is required in\n      * pcre2_serialize_decode() when copying the size from possibly\n      * unaligned memory into a variable of the same type. Use a macro\n      * rather than a typedef to avoid compiler warnings when this\n      * file is included multiple times by pcre2test.\n\n      * CODE_BLOCKSIZE_TYPE size_t\n\n       01  :PREFIX:-pcre2-code.\n      * memctl;            Memory control fields\n           COPY PCRMECTL.\n      * The character tables\n           05  :PREFIX:-tables              USAGE POINTER.\n      * Pointer to JIT code */\n           05  :PREFIX:-executable-jit      USAGE POINTER.\n      * Bitmap for starting code unit < 256\n           05  :PREFIX:-start-bitmap        PIC X OCCURS 32.\n      * CODE_BLOCKSIZE_TYPE  Total (bytes) that was malloc-ed\n           05  :PREFIX:-blocksize           PIC 9(9) COMP.\n      * Paranoid and endianness check */\n           05  :PREFIX:-magic-number        PIC 9(9) COMP.\n      * Options passed to pcre2_compile() */\n           05  :PREFIX:-compile-options     PIC 9(9) COMP.\n      * Options after processing the pattern */\n           05  :PREFIX:-overall-options     PIC 9(9) COMP.\n      * Various state flags */\n           05  :PREFIX:-flags               PIC 9(9) COMP.\n      * Limit set in the pattern */\n           05  :PREFIX:-limit-heap          PIC 9(9) COMP.\n      * Limit set in the pattern */\n           05  :PREFIX:-limit-match         PIC 9(9) COMP.\n      * Limit set in the pattern */\n           05  :PREFIX:-limit-depth         PIC 9(9) COMP.\n      * Starting code unit */\n           05  :PREFIX:-first-codeunit      PIC 9(9) COMP.\n      * This codeunit must be seen */\n           05  :PREFIX:-last-codeunit       PIC 9(9) COMP.\n      * What \\R matches */\n           05  :PREFIX:-bsr-convention      PIC 9(9) COMP.\n      * What is a newline? */\n           05  :PREFIX:-newline-convention  PIC 9(9) COMP.\n      * Longest lookbehind (characters) */\n           05  :PREFIX:-max-lookbehind      PIC 9(9) COMP.\n      * Minimum length of match */\n           05  :PREFIX:-minlength           PIC 9(9) COMP.\n      * Highest numbered group */\n           05  :PREFIX:-top-bracket         PIC 9(9) COMP.\n      * Highest numbered back reference */\n           05  :PREFIX:-top-backref         PIC 9(9) COMP.\n      * Size (code units) of table entries */\n           05  :PREFIX:-name-entry-size     PIC 9(9) COMP.\n      * Number of name entries in the table */\n           05  :PREFIX:-name-count          PIC 9(9) COMP.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRECTXT": {"ttr": 19, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      * This is a partial port of a private header (pcre2_intmodedep.h)\n      * file for the PCRE library to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.1\n      * Contributed by:   Ze'ev Atlas  2017.\n      * Copyright (c) 2017, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * The real convert context structure. */\n       01  :PREFIX:-pcre2-convert-context.\n      * memctl;\n           COPY PCRMECTL.\n           05  :PREFIX:-glob-separator   PIC 9(9) COMP.\n           05  :PREFIX:-glob-escape      PIC 9(9) COMP.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCREWS2": {"ttr": 127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x194O\\x01\\x194O#\\x11\\x00R\\x00R\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-12-10T00:00:00", "modifydate": "2019-12-10T23:11:55", "lines": 82, "newlines": 82, "modlines": 0, "user": "ZATLAS1"}, "text": "      * this is a description of the working-storage section, common\n      * needed variables.\n      *\n      * Copyright (c) 2015 Ze'ev Atlas\n      * Please refer to the LICENSE document to see all other\n      * applicable copyrights.\n      *\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * While the original UNIX/Windows program now supports the\n      *testing of both the 8-bit and 16-bit PCRE libraries in a single\n      *program, the z/OS COBOL (and C) versions support only 8 bit\n      *EBCDIC.  Modules such as COMPLIE8 (originally pcre_compile.c)\n      *in the library itself, are also specifically compiled for 8 bit\n      *EBCDIC.  It does, however, make use of SUPPORT_PCRE8 to ensure\n      *that it calls only supported library functions.\n\n      *****************************************************************\n       01   PCREWS-NULL-PTR         USAGE POINTER VALUE NULL.\n       01   PCREWS-RE-PTR           USAGE POINTER VALUE NULL.\n       01   PCREWS-RE-I         redefines PCREWS-RE-PTR pic 9(9) comp.\n       01   PCREWS-PATTERN-PTR      USAGE POINTER VALUE NULL.\n       01   PCREWS-SUBJECT-PTR      USAGE POINTER VALUE NULL.\n       01   PCREWS-REPL-PTR         USAGE POINTER VALUE NULL.\n       01   PCREWS-NAME-TABLE       USAGE POINTER VALUE NULL.\n       01   PCREWS-ovector          USAGE POINTER VALUE NULL.\n       01   PCREWS-start-offset     pic s9(9) binary value 0.\n\n       01   PCREWS-OPTION-BITS      PIC 9(9) COMP.\n       01   PCREWS-OPTION-BITS-X    REDEFINES\n                                    PCREWS-OPTION-BITS PIC X(4).\n       01   PCREWS-crlf-is-newline  PIC S9(8) COMP.\n       01   PCREWS-errornumber      PIC S9(8) COMP.\n       01   PCREWS-find-all         PIC S9(8) COMP.\n       01   PCREWS-NAMECOUNT        PIC S9(8) COMP.\n       01   PCREWS-NAME-ENTRY-SIZE  PIC S9(8) COMP.\n       01   PCREWS-RC               PIC S9(8) COMP.\n       01   PCREWS-UTF8             PIC S9(8) COMP.\n       01   PCREWS-newline          PIC 9(9) COMP.\n       01   PCREWS-ERROROFFSET      PIC 9(9) COMP.\n\n       01   PCREWS-subject-length   PIC S9(9) COMP.\n       01   PCREWS-repl-length      PIC S9(9) COMP.\n       01   PCREWS-match-data       USAGE POINTER VALUE NULL.\n       01   PCREWS-output           USAGE POINTER VALUE NULL.\n       01   pcrews-outlength        PIC S9(9) COMP.\n\n      * The original C does pointer arithmetic.  COBOL usees\n      * reference modification, so the below is a number, not pointer.\n       01   PCREWS-substring-start       PIC 9(9) COMP.\n       01   PCREWS-substring-length      PIC 9(9) COMP.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRE2": {"ttr": 299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01 \\x13\\x8f\\x01 \\x13\\x8f\\x01\\x01\\x02\\xe0\\x02\\xe0\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-05-17T00:00:00", "modifydate": "2020-05-17T01:01:10", "lines": 736, "newlines": 736, "modlines": 0, "user": "ZATLAS1"}, "text": "      **************************************************\n      *       Perl-Compatible Regular Expressions      *\n      **************************************************\n\n      * This is a port of the public header (pcre2.h) file for the\n      * PCRE library, second API, to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.3\n      * Contributed by:   Ze'ev Atlas  2013.\n      * Copyright (c) 2013-2017 Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n\n      * The current PCRE version information.\n\n       01 PCRE2-MAJOR       PIC S9(9) COMP VALUE  10.\n       01 PCRE2-MINOR       PIC S9(9) COMP VALUE  35.\n       01 PCRE2-PRERELEASE  PIC X(4)  VALUE  '    '.\n       01 PCRE2-DATE        PIC X(10) VALUE  '2020-05-09'.\n\n      * The following option bits can be passed to pcre2_compile(),\n      * pcre2_match(), or pcre2_dfa_match(). PCRE2_NO_UTF_CHECK\n      * affects only the function to which it is passed. Put these\n      * bits at the most significant end of the options word so\n      * others can be added next to them\n\n       01 PCRE2-ANCHORED-x          PIC X(4) VALUE    x'80000000'.\n       01 PCRE2-ANCHORED\n             REDEFINES PCRE2-ANCHORED-x PIC 9(9) COMP.\n       01 PCRE2-NO-UTF-CHECK-x      PIC X(4) VALUE    x'40000000'.\n       01 PCRE2-NO-UTF-CHECK\n             REDEFINES PCRE2-NO-UTF-CHECK-x PIC 9(9) COMP.\n       01 PCRE2-ENDANCHORED-x       PIC X(4) VALUE    x'20000000'.\n       01 PCRE2-ENDANCHORED\n             REDEFINES PCRE2-ENDANCHORED-x PIC 9(9) COMP.\n\n      * The following option bits can be passed only to\n      * pcre2_compile(). However, they may affect compilation, JIT\n      * compilation, and/or interpretive execution.\n      * The following tags indicate which:\n\n      * C   alters what is compiled by pcre2_compile()\n      * J   alters what is compiled by pcre2_jit_compile()\n      * M   is inspected during pcre2_match() execution\n      * D   is inspected during pcre2_dfa_match() execution\n\n       01 PCRE2-ALLOW-EMPTY-CLASS-x PIC X(4) VALUE    x'00000001'.\n       01 PCRE2-ALLOW-EMPTY-CLASS\n             REDEFINES PCRE2-ALLOW-EMPTY-CLASS-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-ALT-BSUX-x          PIC X(4) VALUE    x'00000002'.\n       01 PCRE2-ALT-BSUX\n             REDEFINES PCRE2-ALT-BSUX-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-AUTO-CALLOUT-x      PIC X(4) VALUE    x'00000004'.\n       01 PCRE2-AUTO-CALLOUT\n             REDEFINES PCRE2-AUTO-CALLOUT-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-CASELESS-x          PIC X(4) VALUE    x'00000008'.\n       01 PCRE2-CASELESS\n             REDEFINES PCRE2-CASELESS-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-DOLLAR-ENDONLY-x    PIC X(4) VALUE    x'00000010'.\n       01 PCRE2-DOLLAR-ENDONLY\n             REDEFINES PCRE2-DOLLAR-ENDONLY-x PIC 9(9) COMP.\n      *   J M D */\n       01 PCRE2-DOTALL-x            PIC X(4) VALUE    x'00000020'.\n       01 PCRE2-DOTALL\n             REDEFINES PCRE2-DOTALL-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-DUPNAMES-x          PIC X(4) VALUE    x'00000040'.\n       01 PCRE2-DUPNAMES\n             REDEFINES PCRE2-DUPNAMES-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-EXTENDED-x          PIC X(4) VALUE    x'00000080'.\n       01 PCRE2-EXTENDED\n             REDEFINES PCRE2-EXTENDED-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-FIRSTLINE-x         PIC X(4) VALUE    x'00000100'.\n       01 PCRE2-FIRSTLINE\n             REDEFINES PCRE2-FIRSTLINE-x PIC 9(9) COMP.\n      *   J M D */\n       01 PCRE2-MATCH-UNSET-BACKREF-x pIC X(4) VALUE  x'00000200'.\n       01 PCRE2-MATCH-UNSET-BACKREF\n             REDEFINES PCRE2-MATCH-UNSET-BACKREF-x PIC 9(9) COMP.\n      * C J M   */\n       01 PCRE2-MULTILINE-x         PIC X(4) VALUE    x'00000400'.\n       01 PCRE2-MULTILINE\n             REDEFINES PCRE2-MULTILINE-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-NEVER-UCP-x         PIC X(4) VALUE    x'00000800'.\n       01 PCRE2-NEVER-UCP\n             REDEFINES PCRE2-NEVER-UCP-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-NEVER-UTF-x         PIC X(4) VALUE    x'00001000'.\n       01 PCRE2-NEVER-UTF\n             REDEFINES PCRE2-NEVER-UTF-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-NO-AUTO-CAPTURE-x   PIC X(4) VALUE    x'00002000'.\n       01 PCRE2-NO-AUTO-CAPTURE\n             REDEFINES PCRE2-NO-AUTO-CAPTURE-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-NO-AUTO-POSSESS-x   PIC X(4) VALUE    x'00004000'.\n       01 PCRE2-NO-AUTO-POSSESS\n             REDEFINES PCRE2-NO-AUTO-POSSESS-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-NO-DOTSTAR-ANCHOR-x PIC X(4) VALUE    x'00008000'.\n       01 PCRE2-NO-DOTSTAR-ANCHOR\n             REDEFINES PCRE2-NO-DOTSTAR-ANCHOR-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-NO-START-OPTIMIZE-x PIC X(4) VALUE    x'00010000'.\n       01 PCRE2-NO-START-OPTIMIZE\n             REDEFINES PCRE2-NO-START-OPTIMIZE-x PIC 9(9) COMP.\n      *   J M D */\n       01 PCRE2-UCP-x               PIC X(4) VALUE    x'00020000'.\n       01 PCRE2-UCP\n             REDEFINES PCRE2-UCP-x PIC 9(9) COMP.\n      * C J M D */\n       01 PCRE2-UNGREEDY-x          PIC X(4) VALUE    x'00040000'.\n       01 PCRE2-UNGREEDY\n             REDEFINES PCRE2-UNGREEDY-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-UTF-x               PIC X(4) VALUE    x'00080000'.\n       01 PCRE2-UTF\n             REDEFINES PCRE2-UTF-x PIC 9(9) COMP.\n      * C J M D */\n       01 PCRE2-NEVER-BACKSLASH-C-x PIC X(4) VALUE    x'00100000'.\n       01 PCRE2-NEVER-BACKSLASH-C\n             REDEFINES PCRE2-NEVER-BACKSLASH-C-x PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-ALT-CIRCUMFLEX-x    PIC X(4) VALUE    x'00200000'.\n       01 PCRE2-ALT-CIRCUMFLEX\n             REDEFINES PCRE2-ALT-CIRCUMFLEX-x PIC 9(9) COMP.\n      *   J M D */\n       01 PCRE2-ALT-VERBNAMES-x    PIC X(4)  VALUE    x'00400000'.\n       01 PCRE2-ALT-VERBNAMES\n             REDEFINES PCRE2-ALT-VERBNAMES-x  PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-USE-OFFSET-LIMIT-x PIC X(4)  VALUE    x'00800000'.\n       01 PCRE2-USE-OFFSET-LIMIT\n             REDEFINES PCRE2-USE-OFFSET-LIMIT-x  PIC 9(9) COMP.\n      *   J M D */\n       01 PCRE2-EXTENDED-MORE-x    PIC X(4)  VALUE    x'01000000'.\n       01 PCRE2-EXTENDED-MORE\n             REDEFINES PCRE2-EXTENDED-MORE-x  PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-LITERAL-x          PIC X(4)  VALUE    x'02000000'.\n       01 PCRE2-LITERAL\n             REDEFINES PCRE2-LITERAL-x  PIC 9(9) COMP.\n      * C       */\n       01 PCRE2-MATCH-INVALID-UTF-x  PIC X(4)  VALUE  x'04000000'.\n      *   J M D */\n       01 PCRE2-MATCH-INVALID-UTF\n             REDEFINES PCRE2-MATCH-INVALID-UTF-x  PIC 9(9) COMP.\n\n\n      * An additional compile options word is available in the compile\n      * context. */\n\n       01 PCRE2-EXTRA-ALLOW-SURRGT-ESC-x PIC x(4) VALUE x'00000001'.\n       01 PCRE2-EXTRA-ALLOW-SURRGT-ESC\n             REDEFINES PCRE2-EXTRA-ALLOW-SURRGT-ESC-x\n                                        PIC 9(9) COMP.\n      * C */\n       01 PCRE2-EXTRA-BAD-ESC-IS-LITRL-x PIC x(4) VALUE x'00000002'.\n       01 PCRE2-EXTRA-BAD-ESC-IS-LITRL\n             REDEFINES PCRE2-EXTRA-BAD-ESC-IS-LITRL-x\n                                        PIC 9(9) COMP.\n      * C */\n       01 PCRE2-EXTRA-MATCH-WORD-x     PIC x(4) VALUE x'00000004'.\n       01 PCRE2-EXTRA-MATCH-WORD\n             REDEFINES PCRE2-EXTRA-MATCH-WORD-x PIC 9(9) COMP.\n      * C */\n       01 PCRE2-EXTRA-MATCH-LINE-x     PIC x(4) VALUE x'00000008'.\n       01 PCRE2-EXTRA-MATCH-WORD\n             REDEFINES PCRE2-EXTRA-MATCH-LINE-x  PIC 9(9) COMP.\n      * C */\n       01 PCRE2-EXTRA-ESCAPED-CR-IS-LF-x PIC x(4) VALUE x'00000010'.\n       01 PCRE2-EXTRA-ESCAPED-CR-IS-LF\n             REDEFINES PCRE2-EXTRA-ESCAPED-CR-IS-LF-x\n                                        PIC 9(9) COMP.\n      * C */\n       01 PCRE2-EXTRA-ALT-BSUX-x       PIC x(4) VALUE x'00000020'.\n       01 PCRE2-EXTRA-ALT-BSUX\n             REDEFINES PCRE2-EXTRA-ALT-BSUX-x  PIC 9(9) COMP.\n\n      * These are for pcre2_jit_compile(). */\n\n       01 PCRE2-JIT-COMPLETE-x      PIC X(4) VALUE    x'00000001'.\n       01 PCRE2-JIT-COMPLETE\n             REDEFINES PCRE2-JIT-COMPLETE-x PIC 9(9) COMP.\n      * For full matching */\n       01 PCRE2-JIT-PARTIAL-SOFT-x  PIC X(4) VALUE    x'00000002'.\n       01 PCRE2-JIT-PARTIAL-SOFT\n             REDEFINES PCRE2-JIT-PARTIAL-SOFT-x PIC 9(9) COMP.\n       01 PCRE2-JIT-PARTIAL-HARD-x  PIC X(4) VALUE    x'00000004'.\n       01 PCRE2-JIT-PARTIAL-HARD\n             REDEFINES PCRE2-JIT-PARTIAL-HARD-x PIC 9(9) COMP.\n       01 PCRE2-JIT-INVALID-UTF-x   PIC X(4) VALUE    x'00000100'.\n       01 PCRE2-JIT-INVALID-UTF\n             REDEFINES PCRE2-JIT-INVALID-UTF-x PIC 9(9) COMP.\n\n      * These are for pcre2_match(), pcre2_dfa_match(), and\n      * pcre2_jit_match(). Note that PCRE2_ANCHORED and\n      * PCRE2_NO_UTF_CHECK can also be passed to these functions\n      * (though pcre2_jit_match() ignores the latter since it\n      * bypasses all sanity checks).\n\n       01 PCRE2-NOTBOL-x            PIC X(4) VALUE    x'00000001'.\n       01 PCRE2-NOTBOL\n             REDEFINES PCRE2-NOTBOL-x PIC 9(9) COMP.\n       01 PCRE2-NOTEOL-x            PIC X(4) VALUE    x'00000002'.\n       01 PCRE2-NOTEOL\n             REDEFINES PCRE2-NOTEOL-x PIC 9(9) COMP.\n       01 PCRE2-NOTEMPTY-x          PIC X(4) VALUE    x'00000004'.\n       01 PCRE2-NOTEMPTY\n             REDEFINES PCRE2-NOTEMPTY-x PIC 9(9) COMP.\n      * ) These two must be kept */\n       01 PCRE2-NOTEMPTY-ATSTART-x  PIC X(4) VALUE    x'00000008'.\n       01 PCRE2-NOTEMPTY-ATSTART\n             REDEFINES PCRE2-NOTEMPTY-ATSTART-x PIC 9(9) COMP.\n\n      * ) adjacent to each other. */\n       01 PCRE2-PARTIAL-SOFT-x      PIC X(4) VALUE    x'00000010'.\n       01 PCRE2-PARTIAL-SOFT\n             REDEFINES PCRE2-PARTIAL-SOFT-x PIC 9(9) COMP.\n       01 PCRE2-PARTIAL-HARD-x      PIC X(4) VALUE    x'00000020'.\n       01 PCRE2-PARTIAL-HARD\n             REDEFINES PCRE2-PARTIAL-HARD-x PIC 9(9) COMP.\n\n      * These are additional options for pcre2_dfa_match(). */\n\n       01 PCRE2-DFA-RESTART-x       PIC X(4) VALUE    x'00000040'.\n       01 PCRE2-DFA-RESTART\n             REDEFINES PCRE2-DFA-RESTART-x PIC 9(9) COMP.\n       01 PCRE2-DFA-SHORTEST-x      PIC X(4) VALUE    x'00000080'.\n       01 PCRE2-DFA-SHORTEST\n             REDEFINES PCRE2-DFA-SHORTEST-x PIC 9(9) COMP.\n\n      * This is an additional option for pcre2_substitute(). */\n\n       01 PCRE2-SUBSTITUTE-GLOBAL-x PIC X(4) VALUE    x'00000100'.\n       01 PCRE2-SUBSTITUTE-GLOBAL\n             REDEFINES PCRE2-SUBSTITUTE-GLOBAL-x PIC 9(9) COMP.\n       01 PCRE2-SUBSTITUTE-EXTENDED-x PIC X(4)   VALUE x'00000200'.\n       01 PCRE2-SUBSTITUTE-EXTENDED\n             REDEFINES PCRE2-SUBSTITUTE-EXTENDED-x PIC 9(9) COMP.\n       01 PCRE2-SUBSTITUTE-UNSET-EMPTY-x PIC X(4) VALUE x'00000400'.\n       01 PCRE2-SUBSTITUTE-UNSET-EMPTY\n             REDEFINES PCRE2-SUBSTITUTE-UNSET-EMPTY-x PIC 9(9) COMP.\n       01 PCRE2-SUBSTITUTE-UNKNOWN-UNS-x PIC X(4) VALUE x'00000800'.\n       01 PCRE2-SUBSTITUTE-UNKNOWN-UNSET\n             REDEFINES PCRE2-SUBSTITUTE-UNKNOWN-UNS-x PIC 9(9) COMP.\n       01 PCRE2-SUBSTITUTE-OVERFLOW-LN-x PIC X(4) VALUE x'00001000'.\n       01 PCRE2-SUBSTITUTE-OVERFLOW-LEN\n             REDEFINES PCRE2-SUBSTITUTE-OVERFLOW-LN-x PIC 9(9) COMP.\n      * A further option for pcre2_match(), not allowed for\n      * pcre2_dfa_match(), ignored for pcre2_jit_match().\n       01 PCRE2-NO-JIT-x                 PIC X(4) VALUE x'00002000'.\n       01 PCRE2-NO-JIT\n             REDEFINES PCRE2-NO-JIT-x    PIC 9(9) COMP.\n       01 PCRE2-COPY-MATCHED-SUBJECT-x   PIC X(4) VALUE x'00004000'.\n       01 PCRE2-COPY-MATCHED-SUBJECT\n             REDEFINES PCRE2-COPY-MATCHED-SUBJECT-x   PIC 9(9) COMP.\n       01 PCRE2-SUBSTITUTE-LITERAL-x     PIC X(4) VALUE x'00008000'.\n       01 PPCRE2-SUBSTITUTE-LITERAL\n             REDEFINES PCRE2-SUBSTITUTE-LITERAL-x     PIC 9(9) COMP.\n      * pcre2_substitute() only */\n       01 PCRE2-SUBSTITUTE-MATCHED-x     PIC X(4) VALUE x'00010000'.\n       01 PCRE2-SUBSTITUTE-MATCHED\n             REDEFINES PCRE2-SUBSTITUTE-MATCHED-x     PIC 9(9) COMP.\n      * pcre2_substitute() only */\n       01 PCRE2-SUBSTITUTE-REPLCMENT-O-x PIC X(4) VALUE x'00020000'.\n       01 PCRE2-SUBSTITUTE-REPLCMENT-O\n             REDEFINES PCRE2-SUBSTITUTE-REPLCMENT-O-x PIC 9(9) COMP.\n      * pcre2_substitute() only */\n\n      * Options for pcre2_pattern_convert(). */\n\n       01 PCRE2-CONVERT-UTF-x             PIC X(4) VALUE x'00000001'.\n       01 PCRE2-CONVERT-UTF\n             REDEFINES PCRE2-CONVERT-UTF-x PIC 9(9) COMP.\n       01 PCRE2-CONVERT-NO-UTF-CHECK-x    PIC X(4) VALUE x'00000002'.\n       01 PCRE2-CONVERT-NO-UTF-CHECK\n             REDEFINES PCRE2-CONVERT-NO-UTF-CHECK-x PIC 9(9) COMP.\n       01 PCRE2-CONVERT-POSIX-BASIC-x     PIC X(4) VALUE x'00000004'.\n       01 PCRE2-CONVERT-POSIX-BASIC\n             REDEFINES PCRE2-CONVERT-POSIX-BASIC-x PIC 9(9) COMP.\n       01 PCRE2-CONVERT-POSIX-EXTENDED-x  PIC X(4) VALUE x'00000008'.\n       01 PCRE2-CONVERT-POSIX-EXTENDED\n             REDEFINES PCRE2-CONVERT-POSIX-EXTENDED-x PIC 9(9) COMP.\n       01 PCRE2-CONVERT-GLOB-x            PIC X(4) VALUE x'00000010'.\n       01 PCRE2-CONVERT-GLOB\n             REDEFINES PCRE2-CONVERT-GLOB-x PIC 9(9) COMP.\n       01 PCRE2-CONVERT-GLOB-NOWLD-SPR-x  PIC X(4) VALUE x'00000030'.\n       01 PCRE2-CONVERT-GLOB-NOWLD-SPR\n             REDEFINES PCRE2-CONVERT-GLOB-NOWLD-SPR-x PIC 9(9) COMP.\n       01 PCRE2-CONVERT-GLOB-NO-STRSTR-x  PIC X(4) VALUE x'00000050'.\n       01 PCRE2-CONVERT-GLOB-NO-STRSTR\n             REDEFINES PCRE2-CONVERT-GLOB-NO-STRSTR-x PIC 9(9) COMP.\n\n      * Newline and \\R settings, for use in compile contexts. The\n      * newline values must be kept in step with values set in\n      * config.h and both sets must all be greater than zero.\n\n       01 PCRE2-NEWLINE-CR          PIC S9(9) COMP VALUE 1.\n       01 PCRE2-NEWLINE-LF          PIC S9(9) COMP VALUE 2.\n       01 PCRE2-NEWLINE-CRLF        PIC S9(9) COMP VALUE 3.\n       01 PCRE2-NEWLINE-ANY         PIC S9(9) COMP VALUE 4.\n       01 PCRE2-NEWLINE-ANYCRLF     PIC S9(9) COMP VALUE 5.\n       01 PCRE2-NEWLINE-NUL         PIC S9(9) COMP VALUE 6.\n\n       01 PCRE2-BSR-UNICODE         PIC S9(9) COMP VALUE 1.\n       01 PCRE2-BSR-ANYCRLF         PIC S9(9) COMP VALUE 2.\n\n       01 PCRE2-COB-ERROR-CODES.\n\n      * Error codes for pcre2_compile(). Some of these are also used by\n      * pcre2_pattern_convert().\n\n           05 RE2ER-END-BACKSLASH\n                                    PIC s9(9) COMP VALUE 101.\n           05 RE2ER-END-BACKSLASH-C\n                                    PIC s9(9) COMP VALUE 102.\n           05 RE2ER-UNKNOWN-ESCAPE\n                                    PIC s9(9) COMP VALUE 103.\n           05 RE2ER-QUANTIFIER-OUT-OF-ORDER\n                                    PIC s9(9) COMP VALUE 104.\n           05 RE2ER-QUANTIFIER-TOO-BIG\n                                    PIC s9(9) COMP VALUE 105.\n           05 RE2ER-MISSING-SQUARE-BRACKET\n                                    PIC s9(9) COMP VALUE 106.\n           05 RE2ER-ESCAPE-INVALID-IN-CLASS\n                                    PIC s9(9) COMP VALUE 107.\n           05 RE2ER-CLASS-RANGE-ORDER\n                                    PIC s9(9) COMP VALUE 108.\n           05 RE2ER-QUANTIFIER-INVALID\n                                    PIC s9(9) COMP VALUE 109.\n           05 RE2ER-INTERNAL-UNEXPECTED-REPT\n                                    PIC s9(9) COMP VALUE 110.\n           05 RE2ER-INVALID-AFTER-PARENS-QRY\n                                    PIC s9(9) COMP VALUE 111.\n           05 RE2ER-POSIX-CLASS-NOT-IN-CLASS\n                                    PIC s9(9) COMP VALUE 112.\n           05 RE2ER-POSIX-NO-SUPPORT-COLLATI\n                                    PIC s9(9) COMP VALUE 113.\n           05 RE2ER-MISSING-CLOSING-PARENTHE\n                                    PIC s9(9) COMP VALUE 114.\n           05 RE2ER-BAD-SUBPATTERN-REFERENCE\n                                    PIC s9(9) COMP VALUE 115.\n           05 RE2ER-NULL-PATTERN\n                                    PIC s9(9) COMP VALUE 116.\n           05 RE2ER-BAD-OPTIONS\n                                    PIC s9(9) COMP VALUE 117.\n           05 RE2ER-MISSING-COMMENT-CLOSING\n                                    PIC s9(9) COMP VALUE 118.\n           05 RE2ER-PARENTHESES-NEST-TOO-DP\n                                    PIC s9(9) COMP VALUE 119.\n           05 RE2ER-PATTERN-TOO-LARGE\n                                    PIC s9(9) COMP VALUE 120.\n           05 RE2ER-HEAP-FAILED\n                                    PIC s9(9) COMP VALUE 121.\n           05 RE2ER-UNMATCHED-CLOSING-PAREN\n                                    PIC s9(9) COMP VALUE 122.\n           05 RE2ER-INTERNAL-CODE-OVERFLOW\n                                    PIC s9(9) COMP VALUE 123.\n           05 RE2ER-MISSING-CONDITION-CLOSIN\n                                    PIC s9(9) COMP VALUE 124.\n           05 RE2ER-LOOKBEHIND-NOT-FIXED-LEN\n                                    PIC s9(9) COMP VALUE 125.\n           05 RE2ER-ZERO-RELATIVE-REFERENCE\n                                    PIC s9(9) COMP VALUE 126.\n           05 RE2ER-TOO-MANY-CONDITION-BRANC\n                                    PIC s9(9) COMP VALUE 127.\n           05 RE2ER-CONDITION-ASSERTION-EXPC\n                                    PIC s9(9) COMP VALUE 128.\n           05 RE2ER-BAD-RELATIVE-REFERENCE\n                                    PIC s9(9) COMP VALUE 129.\n           05 RE2ER-UNKNOWN-POSIX-CLASS\n                                    PIC s9(9) COMP VALUE 130.\n           05 RE2ER-INTERNAL-STUDY-ERROR\n                                    PIC s9(9) COMP VALUE 131.\n           05 RE2ER-UNICODE-NOT-SUPPORTED\n                                    PIC s9(9) COMP VALUE 132.\n           05 RE2ER-PARENTHESES-STACK-CHECK\n                                    PIC s9(9) COMP VALUE 133.\n           05 RE2ER-CODE-POINT-TOO-BIG\n                                    PIC s9(9) COMP VALUE 134.\n           05 RE2ER-LOOKBEHIND-TOO-COMPLICAT\n                                    PIC s9(9) COMP VALUE 135.\n           05 RE2ER-LOOKBEHIND-INVALID-BKS-C\n                                    PIC s9(9) COMP VALUE 136.\n           05 RE2ER-UNSUPPORTED-ESCAPE-SEQUE\n                                    PIC s9(9) COMP VALUE 137.\n           05 RE2ER-CALLOUT-NUMBER-TOO-BIG\n                                    PIC s9(9) COMP VALUE 138.\n           05 RE2ER-MISSING-CALLOUT-CLOSING\n                                    PIC s9(9) COMP VALUE 139.\n           05 RE2ER-ESCAPE-INVALID-IN-VERB\n                                    PIC s9(9) COMP VALUE 140.\n           05 RE2ER-UNRECOGNIZED-AFTER-QUERY\n                                    PIC s9(9) COMP VALUE 141.\n           05 RE2ER-MISSING-NAME-TERMINATOR\n                                    PIC s9(9) COMP VALUE 142.\n           05 RE2ER-DUPLICATE-SUBPATTERN-NAM\n                                    PIC s9(9) COMP VALUE 143.\n           05 RE2ER-INVALID-SUBPATTERN-NAME\n                                    PIC s9(9) COMP VALUE 144.\n           05 RE2ER-UNICODE-PROPERTIES-UNAVA\n                                    PIC s9(9) COMP VALUE 145.\n           05 RE2ER-MALFORMED-UNICODE-PROPER\n                                    PIC s9(9) COMP VALUE 146.\n           05 RE2ER-UNKNOWN-UNICODE-PROPERTY\n                                    PIC s9(9) COMP VALUE 147.\n           05 RE2ER-SUBPATTERN-NAME-TOO-LONG\n                                    PIC s9(9) COMP VALUE 148.\n           05 RE2ER-TOO-MANY-NAMED-SUBPATTER\n                                    PIC s9(9) COMP VALUE 149.\n           05 RE2ER-CLASS-INVALID-RANGE\n                                    PIC s9(9) COMP VALUE 150.\n           05 RE2ER-OCTAL-BYTE-TOO-BIG\n                                    PIC s9(9) COMP VALUE 151.\n           05 RE2ER-INTERNAL-OVERRAN-WORKSPA\n                                    PIC s9(9) COMP VALUE 152.\n           05 RE2ER-INTERNAL-MISSING-SUBPATT\n                                    PIC s9(9) COMP VALUE 153.\n           05 RE2ER-DEFINE-TOO-MANY-BRANCHES\n                                    PIC s9(9) COMP VALUE 154.\n           05 RE2ER-BACKSLASH-O-MISSING-BRAC\n                                    PIC s9(9) COMP VALUE 155.\n           05 RE2ER-INTERNAL-UNKNOWN-NEWLINE\n                                    PIC s9(9) COMP VALUE 156.\n           05 RE2ER-BACKSLASH-G-SYNTAX\n                                    PIC s9(9) COMP VALUE 157.\n           05 RE2ER-PARENS-QUERY-R-MISSING-C\n                                    PIC s9(9) COMP VALUE 158.\n      * Error 159 is obsolete and should now never occur */\n           05 RE2ER-VERB-ARGUMENT-NOT-ALLOWE\n                                    PIC s9(9) COMP VALUE 159.\n           05 RE2ER-VERB-UNKNOWN\n                                    PIC s9(9) COMP VALUE 160.\n           05 RE2ER-SUBPATTERN-NUMBER-TOO-BI\n                                    PIC s9(9) COMP VALUE 161.\n           05 RE2ER-SUBPATTERN-NAME-EXPECTED\n                                    PIC s9(9) COMP VALUE 162.\n           05 RE2ER-INTERNAL-PARSED-OVERFLOW\n                                    PIC s9(9) COMP VALUE 163.\n           05 RE2ER-INVALID-OCTAL\n                                    PIC s9(9) COMP VALUE 164.\n           05 RE2ER-SUBPATTERN-NAMES-MISMATC\n                                    PIC s9(9) COMP VALUE 165.\n           05 RE2ER-MARK-MISSING-ARGUMENT\n                                    PIC s9(9) COMP VALUE 166.\n           05 RE2ER-INVALID-HEXADECIMAL\n                                    PIC s9(9) COMP VALUE 167.\n           05 RE2ER-BACKSLASH-C-SYNTAX\n                                    PIC s9(9) COMP VALUE 168.\n           05 RE2ER-BACKSLASH-K-SYNTAX\n                                    PIC s9(9) COMP VALUE 169.\n           05 RE2ER-INTERNAL-BAD-CODE-LOOKBE\n                                    PIC s9(9) COMP VALUE 170.\n           05 RE2ER-BACKSLASH-N-IN-CLASS\n                                    PIC s9(9) COMP VALUE 171.\n           05 RE2ER-CALLOUT-STRING-TOO-LONG\n                                    PIC s9(9) COMP VALUE 172.\n           05 RE2ER-UNICODE-DISALLOWED-CODE\n                                    PIC s9(9) COMP VALUE 173.\n           05 RE2ER-UTF-IS-DISABLED\n                                    PIC s9(9) COMP VALUE 174.\n           05 RE2ER-UCP-IS-DISABLED\n                                    PIC s9(9) COMP VALUE 175.\n           05 RE2ER-VERB-NAME-TOO-LONG\n                                    PIC s9(9) COMP VALUE 176.\n           05 RE2ER-BACKSLASH-U-CDPT-TOO-BI\n                                    PIC s9(9) COMP VALUE 177.\n           05 RE2ER-MISSING-OCTAL-OR-HEX-DI\n                                    PIC s9(9) COMP VALUE 178.\n           05 RE2ER-VERSION-CONDITION-SYNTA\n                                    PIC s9(9) COMP VALUE 179.\n           05 RE2ER-INTERNAL-BAD-AUTO-POSSE\n                                    PIC s9(9) COMP VALUE 180.\n           05 RE2ER-CALLOUT-NO-STRING-DELIM\n                                    PIC s9(9) COMP VALUE 181.\n           05 RE2ER-CALLOUT-BAD-STRING-DELI\n                                    PIC s9(9) COMP VALUE 182.\n           05 RE2ER-BACKSLASH-C-CALLER-DISA\n                                    PIC s9(9) COMP VALUE 183.\n           05 RE2ER-QUERY-BARJX-NEST-TOO-DE\n                                    PIC s9(9) COMP VALUE 184.\n           05 RE2ER-BACKSLASH-C-LIBRARY-DIS\n                                    PIC s9(9) COMP VALUE 185.\n           05 RE2ER-PATTERN-TOO-COMPLICATED\n                                    PIC s9(9) COMP VALUE 186.\n           05 RE2ER-LOOKBEHIND-TOO-LONG\n                                    PIC s9(9) COMP VALUE 187.\n           05 RE2ER-PATTERN-STRING-TOO-LONG\n                                    PIC s9(9) COMP VALUE 188.\n           05 RE2ER-INTERNAL-BAD-CODE\n                                    PIC s9(9) COMP VALUE 189.\n           05 RE2ER-INTERNAL-BAD-CODE-IN-SKI\n                                    PIC s9(9) COMP VALUE 190.\n           05 RE2ER-NO-SURROGATES-IN-UTF16\n                                    PIC s9(9) COMP VALUE 191.\n           05 RE2ER-BAD-LITERAL-OPTIONS\n                                    PIC s9(9) COMP VALUE 192.\n           05 RE2ER-SUPPORTED-ONLY-IN-UNICOD\n                                    PIC s9(9) COMP VALUE 193.\n           05 RE2ER-INVALID-HYPHEN-IN-OPTION\n                                    PIC s9(9) COMP VALUE 194.\n           05 PCRE2-ERROR-ALPHA-ASSERTIONUNK\n                                    PIC s9(9) COMP VALUE 195.\n           05 PCRE2-ERROR-SCRIPTRUNNOTAVAILA\n                                    PIC s9(9) COMP VALUE 196.\n           05 PCRE2-ERROR-TOO-MANY-CAPTURES\n                                    PIC s9(9) COMP VALUE 197.\n           05 PCRE2-ERROR-CONDATOMASRTEXPECT\n                                    PIC s9(9) COMP VALUE 198.\n\n      * \"Expected\" matching error codes: no match and partial match.\n\n           05 PCRE2-ERROR-NOMATCH         PIC s9(9) COMP VALUE -1.\n           05 PCRE2-ERROR-PARTIAL         PIC s9(9) COMP VALUE -2.\n\n      * Error codes for UTF-8 validity checks\n\n           05 PCRE2-ERROR-UTF8-ERR1       PIC s9(9) COMP VALUE -3.\n           05 PCRE2-ERROR-UTF8-ERR2       PIC s9(9) COMP VALUE -4.\n           05 PCRE2-ERROR-UTF8-ERR3       PIC s9(9) COMP VALUE -5.\n           05 PCRE2-ERROR-UTF8-ERR4       PIC s9(9) COMP VALUE -6.\n           05 PCRE2-ERROR-UTF8-ERR5       PIC s9(9) COMP VALUE -7.\n           05 PCRE2-ERROR-UTF8-ERR6       PIC s9(9) COMP VALUE -8.\n           05 PCRE2-ERROR-UTF8-ERR7       PIC s9(9) COMP VALUE -9.\n           05 PCRE2-ERROR-UTF8-ERR8      PIC s9(9) COMP VALUE -10.\n           05 PCRE2-ERROR-UTF8-ERR9      PIC s9(9) COMP VALUE -11.\n           05 PCRE2-ERROR-UTF8-ERR10     PIC s9(9) COMP VALUE -12.\n           05 PCRE2-ERROR-UTF8-ERR11     PIC s9(9) COMP VALUE -13.\n           05 PCRE2-ERROR-UTF8-ERR12     PIC s9(9) COMP VALUE -14.\n           05 PCRE2-ERROR-UTF8-ERR13     PIC s9(9) COMP VALUE -15.\n           05 PCRE2-ERROR-UTF8-ERR14     PIC s9(9) COMP VALUE -16.\n           05 PCRE2-ERROR-UTF8-ERR15     PIC s9(9) COMP VALUE -17.\n           05 PCRE2-ERROR-UTF8-ERR16     PIC s9(9) COMP VALUE -18.\n           05 PCRE2-ERROR-UTF8-ERR17     PIC s9(9) COMP VALUE -19.\n           05 PCRE2-ERROR-UTF8-ERR18     PIC s9(9) COMP VALUE -20.\n           05 PCRE2-ERROR-UTF8-ERR19     PIC s9(9) COMP VALUE -21.\n           05 PCRE2-ERROR-UTF8-ERR20     PIC s9(9) COMP VALUE -22.\n           05 PCRE2-ERROR-UTF8-ERR21     PIC s9(9) COMP VALUE -23.\n\n      * Error codes for UTF-16 validity checks\n\n           05 PCRE2-ERROR-UTF16-ERR1     PIC s9(9) COMP VALUE -24.\n           05 PCRE2-ERROR-UTF16-ERR2     PIC s9(9) COMP VALUE -25.\n           05 PCRE2-ERROR-UTF16-ERR3     PIC s9(9) COMP VALUE -26.\n\n      * Error codes for UTF-32 validity checks\n\n           05 PCRE2-ERROR-UTF32-ERR1     PIC s9(9) COMP VALUE -27.\n           05 PCRE2-ERROR-UTF32-ERR2     PIC s9(9) COMP VALUE -28.\n\n      * Miscellaneous error codes for pcre2\u00dd_dfa\u00a8_match(), substring\n      * extraction functions, context functions, and serializing\n      * functions. They are in numerical order. Originally they were\n      * in alphabetical order too, but now that PCRE2 is released,\n      * the numbers must not be changed.\n\n           05 PCRE2-ERROR-BADDATA          PIC s9(9) COMP VALUE -29.\n           05 PCRE2-ERROR-MIXEDTABLES      PIC s9(9) COMP VALUE -30.\n      * Name was changed */\n           05 PCRE2-ERROR-BADMAGIC         PIC s9(9) COMP VALUE -31.\n           05 PCRE2-ERROR-BADMODE          PIC s9(9) COMP VALUE -32.\n           05 PCRE2-ERROR-BADOFFSET        PIC s9(9) COMP VALUE -33.\n           05 PCRE2-ERROR-BADOPTION        PIC s9(9) COMP VALUE -34.\n           05 PCRE2-ERROR-BADREPLACEMENT   PIC s9(9) COMP VALUE -35.\n           05 PCRE2-ERROR-BADUTFOFFSET     PIC s9(9) COMP VALUE -36.\n           05 PCRE2-ERROR-CALLOUT          PIC s9(9) COMP VALUE -37.\n      * Never used by PCRE2 itself */\n           05 PCRE2-ERROR-DFA-BADRESTART   PIC s9(9) COMP VALUE -38.\n           05 PCRE2-ERROR-DFA-RECURSE      PIC s9(9) COMP VALUE -39.\n           05 PCRE2-ERROR-DFA-UCOND        PIC s9(9) COMP VALUE -40.\n           05 PCRE2-ERROR-DFA-UFUNC        PIC s9(9) COMP VALUE -41.\n           05 PCRE2-ERROR-DFA-UITEM        PIC s9(9) COMP VALUE -42.\n           05 PCRE2-ERROR-DFA-WSSIZE       PIC s9(9) COMP VALUE -43.\n           05 PCRE2-ERROR-INTERNAL         PIC s9(9) COMP VALUE -44.\n           05 PCRE2-ERROR-JIT-BADOPTION    PIC s9(9) COMP VALUE -45.\n           05 PCRE2-ERROR-JIT-STACKLIMIT   PIC s9(9) COMP VALUE -46.\n           05 PCRE2-ERROR-MATCHLIMIT       PIC s9(9) COMP VALUE -47.\n           05 PCRE2-ERROR-NOMEMORY         PIC s9(9) COMP VALUE -48.\n           05 PCRE2-ERROR-NOSUBSTRING      PIC s9(9) COMP VALUE -49.\n           05 PCRE2-ERROR-NOUNIQUESUBSTRING PIC s9(9) COMP VALUE -50.\n           05 PCRE2-ERROR-NULL             PIC s9(9) COMP VALUE -51.\n           05 PCRE2-ERROR-RECURSELOOP      PIC s9(9) COMP VALUE -52.\n           05 PCRE2-ERROR-DEPTHLIMIT       PIC s9(9) COMP VALUE -53.\n      * Obsolete synonym */\n           05 PCRE2-ERROR-RECURSIONLIMIT   PIC s9(9) COMP VALUE -53.\n           05 PCRE2-ERROR-UNAVAILABLE      PIC s9(9) COMP VALUE -54.\n           05 PCRE2-ERROR-UNSET            PIC s9(9) COMP VALUE -55.\n           05 PCRE2-ERROR-BADOFFSETLIMIT   PIC s9(9) COMP VALUE -56.\n           05 PCRE2-ERROR-BADREPESCAPE     PIC s9(9) COMP VALUE -57.\n           05 PCRE2-ERROR-REPMISSINGBRACE  PIC s9(9) COMP VALUE -58.\n           05 PCRE2-ERROR-BADSUBSTITUTION  PIC s9(9) COMP VALUE -59.\n           05 PCRE2-ERROR-BADSUBSPATTERN   PIC s9(9) COMP VALUE -60.\n           05 PCRE2-ERROR-TOOMANYREPLACE   PIC s9(9) COMP VALUE -61.\n           05 PCRE2-ERROR-BADSERIALIZEDDATA PIC s9(9) COMP VALUE -62.\n           05 PCRE2-ERROR-HEAPLIMIT        PIC s9(9) COMP VALUE -63.\n           05 PCRE2-ERROR-CONVERT-SYNTAX   PIC s9(9) COMP VALUE -64.\n           05 PCRE2-ERROR-INTERNAL-DUPMATCH PIC s9(9) COMP VALUE -65.\n       01 PCRE2-COB-INFO-CODES.\n      * Request types for pcre2_pattern_info() */\n\n           05 PCRE2-INFO-ALLOPTIONS         PIC s9(9) COMP VALUE  0.\n           05 PCRE2-INFO-ARGOPTIONS         PIC s9(9) COMP VALUE  1.\n           05 PCRE2-INFO-BACKREFMAX         PIC s9(9) COMP VALUE  2.\n           05 PCRE2-INFO-BSR                PIC s9(9) COMP VALUE  3.\n           05 PCRE2-INFO-CAPTURECOUNT       PIC s9(9) COMP VALUE  4.\n           05 PCRE2-INFO-FIRSTCODEUNIT      PIC s9(9) COMP VALUE  5.\n           05 PCRE2-INFO-FIRSTCODETYPE      PIC s9(9) COMP VALUE  6.\n           05 PCRE2-INFO-FIRSTBITMAP        PIC s9(9) COMP VALUE  7.\n           05 PCRE2-INFO-HASCRORLF          PIC s9(9) COMP VALUE  8.\n           05 PCRE2-INFO-JCHANGED           PIC s9(9) COMP VALUE  9.\n           05 PCRE2-INFO-JITSIZE            PIC s9(9) COMP VALUE 10.\n           05 PCRE2-INFO-LASTCODEUNIT       PIC s9(9) COMP VALUE 11.\n           05 PCRE2-INFO-LASTCODETYPE       PIC s9(9) COMP VALUE 12.\n           05 PCRE2-INFO-MATCHEMPTY         PIC s9(9) COMP VALUE 13.\n           05 PCRE2-INFO-MATCHLIMIT         PIC s9(9) COMP VALUE 14.\n           05 PCRE2-INFO-MAXLOOKBEHIND      PIC s9(9) COMP VALUE 15.\n           05 PCRE2-INFO-MINLENGTH          PIC s9(9) COMP VALUE 16.\n           05 PCRE2-INFO-NAMECOUNT          PIC s9(9) COMP VALUE 17.\n           05 PCRE2-INFO-NAMEENTRYSIZE      PIC s9(9) COMP VALUE 18.\n           05 PCRE2-INFO-NAMETABLE          PIC s9(9) COMP VALUE 19.\n           05 PCRE2-INFO-NEWLINE            PIC s9(9) COMP VALUE 20.\n           05 PCRE2-INFO-DEPTHLIMIT         PIC s9(9) COMP VALUE 21.\n      * Obsolete synonym */\n           05 PCRE2-INFO-RECURSIONLIMIT     PIC s9(9) COMP VALUE 21.\n           05 PCRE2-INFO-SIZE               PIC s9(9) COMP VALUE 22.\n           05 PCRE2-INFO-HASBACKSLASHC      PIC s9(9) COMP VALUE 23.\n           05 PCRE2-INFO-FRAMESIZE          PIC s9(9) COMP VALUE 24.\n           05 PCRE2-INFO-HEAPLIMIT          PIC s9(9) COMP VALUE 25.\n           05 PCRE2-INFO-EXTRAOPTIONS       PIC s9(9) COMP VALUE 26.\n\n       01 PCRE2-COB-CONFIG-CODES.\n      * Request types for pcre2_config(). */\n\n           05 PCRE2-CONFIG-BSR               PIC s9(9) COMP VALUE  0.\n           05 PCRE2-CONFIG-JIT               PIC s9(9) COMP VALUE  1.\n           05 PCRE2-CONFIG-JITTARGET         PIC s9(9) COMP VALUE  2.\n           05 PCRE2-CONFIG-LINKSIZE          PIC s9(9) COMP VALUE  3.\n           05 PCRE2-CONFIG-MATCHLIMIT        PIC s9(9) COMP VALUE  4.\n           05 PCRE2-CONFIG-NEWLINE           PIC s9(9) COMP VALUE  5.\n           05 PCRE2-CONFIG-PARENSLIMIT       PIC s9(9) COMP VALUE  6.\n           05 PCRE2-CONFIG-DEPTHLIMIT        PIC s9(9) COMP VALUE  7.\n      * Obsolete synonym */\n           05 PCRE2-CONFIG-RECURSIONLIMIT    PIC s9(9) COMP VALUE  7.\n      * Obsolete synonym */\n           05 PCRE2-CONFIG-STACKRECURSE      PIC s9(9) COMP VALUE  8.\n           05 PCRE2-CONFIG-UNICODE           PIC s9(9) COMP VALUE  9.\n           05 PCRE2-CONFIG-UNICODE-VERSION   PIC s9(9) COMP VALUE 10.\n           05 PCRE2-CONFIG-VERSION           PIC s9(9) COMP VALUE 11.\n           05 PCRE2-CONFIG-HEAPLIMIT         PIC s9(9) COMP VALUE 12.\n           05 PCRE2-CONFIG-NEVER-BACKSLASH-C PIC s9(9) COMP VALUE 13.\n           05 PCRE2-CONFIG-COMPILED-WIDTHS   PIC s9(9) COMP VALUE 14.\n           05 PCRE2-CONFIG-TABLES-LENGTH     PIC s9(9) COMP VALUE 15.\n\n      * The PCRE2_SIZE type is used for all string lengths and offsets\n      * in PCRE2, including pattern offsets for errors and subject\n      * offsets after a match. We define special values to indicate\n      * zero-terminated strings and unset offsets in the offset vector\n      * (ovector). */\n\n       01 PCRE2-SIZE            PIC 9(9) COMP.\n       01 PCRE2-SIZE-MAX        PIC 9(9) COMP.\n      *   defining PCRE2_SIZE_MAX to SIZE_MAX is irrelevant. IBM COBOL\n      *   is always 32 bits\n       01 PCRE2-ZERO-TERMINATED PIC S9(9) COMP VALUE -1.\n       01 PCRE2-UNSET           PIC S9(9) COMP VALUE -1.\n\n      * Types *\n      *  typedef unsigned char pcre_uint8 => X.\n      *  typedef unsigned int pcre_uint32 => 9(9) BINARY.\n      *  typedef int pcre_int32 => S9(9) Binary.\n      *  typedef unsigned short pcre_uint16 => 9(4) BINARY.\n      *  typedef short pcre_int16 => S9(4) BINARY.\n      * If PCRE is compiled with 32 bit character support, PCRE_UCHAR32\n      * must contain a 32 bit wide signed data type. Otherwise it can\n      * be a dummy data type since pcre32 functions are not\n      * implemented. There is a check for this in pcre_internal.h.\n\n      * When PCRE is compiled as a C++ library, the subject pointer\n      * type can be replaced with a custom type. For conventional use,\n      * the public interface is a const char *.\n       01 PCRE2-SPTR                            USAGE POINTER.\n\n      * COBOL COPYBOOK DOES NOT CONTAIN FUNCTION DEFINITIONS\n      * structure types delegated to specific copybooks\n\n      * Private z/OS definitions for the PCRZ functions\n       01   PCRZ-NULL-TERMINATED    pic s9(9) comp value -1.\n       01   PCRZ-SPACE-TERMINATED   pic s9(9) comp value -2.\n       01   PCRZ-LENGTH-TERMINATED  pic s9(9) comp value -3.\n\n       01   PCRZ-MAX-PATTERN_SIZE   pic s9(9) comp value 2048.\n       01   PCRZ-MAX-SUBJECT_SIZE   pic s9(9) comp value 8192.\n       01   PCRZ-MAX-REPLACEMENT_SIZE pic s9(9) comp value 1024.\n       01   PCRZ-MAX-SUBSTITUTE_SIZE  pic s9(9) comp value 16384.\n       01   PCRZ-MAX-CODESET_SIZE   pic s9(9) comp value 16.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRGENCN": {"ttr": 27, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      * This is a partial port of a private header (pcre2_intmodedep.h)\n      * file for the PCRE library to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * The real general context structure. At present it holds only\n      * data for custom memory control.\n\n       01  :PREFIX:-pcre2-general-context.\n      * memctl;\n           COPY PCRMECTL.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRMECTL": {"ttr": 29, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      * This is a partial port of the public header (pcre2.h) file for\n      * the PCRE library to COBOL.  It is to be COPIED by applications\n      * that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * Structure to hold data for custom memory management.\n      * pcre2-memctl.\n           05 FILLER.\n      * void *    (*malloc)(size_t, void *);\n              10 FILLER             USAGE POINTER.\n      * void      (*free)(void *, void *);\n              10 FILLER             USAGE POINTER.\n      * void      *memory_data;\n              10 FILLER             USAGE POINTER.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRMTCCN": {"ttr": 125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x194/\\x01\\x194/\"\\x17\\x009\\x009\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-12-08T00:00:00", "modifydate": "2019-12-08T22:17:19", "lines": 57, "newlines": 57, "modlines": 0, "user": "ZATLAS1"}, "text": "      * This is a partial port of a private header (pcre2_intmodedep.h)\n      * file for the PCRE library to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * The real match context structure.\n      * The original C code allos for HEAP_MATCH_RECURSE and\n      * SUPPORT_JIT.  The z/OS implementation ignores those\n      * posibilities.\n\n       01  :PREFIX:-pcre2-match-context.\n      * memctl;\n           COPY PCRMECTL.\n           05  :PREFIX:-callout         USAGE POINTER.\n           05  :PREFIX:-callout-data    USAGE POINTER.\n           05  :PREFIX:-substitute-callout         USAGE POINTER.\n           05  :PREFIX:-substitute-callout-data    PIC 9(9) COMP.\n           05  :PREFIX:-offset-limit    PIC 9(9) COMP.\n           05  :PREFIX:-heap-limit      PIC 9(9) COMP.\n           05  :PREFIX:-match-limit     PIC 9(9) COMP.\n           05  :PREFIX:-depth-limit     PIC 9(9) COMP.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRMTCDA": {"ttr": 119, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00!\\x01\\x19\\x12\\x9f\\x01\\x194\\x1f!\\x11\\x00N\\x00N\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-05-09T00:00:00", "modifydate": "2019-12-07T21:11:21", "lines": 78, "newlines": 78, "modlines": 0, "user": "ZATLAS1"}, "text": "      * This is a partial port of a private header (pcre2_intmodedep.h)\n      * file for the PCRE library to COBOL.  It is to be COPIED by\n      * applications that call the PCRE functions.\n      * Version 0.2\n      * Contributed by:   Ze'ev Atlas  2015.\n      * Copyright (c) 2015, Ze'ev Atlas.\n      * All rights reserved.\n\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      *\n      * The real match data structure. Define ovector as large as it\n      * can ever actually be so that array bound checkers don't\n      * grumble. Memory for this structure is obtained by calling\n      * pcre2_match_data_create(), which sets the size as the\n      * offset of ovector plus a pair of elements for each\n      * capturable string, so the size varies from call to call.\n      * As the maximum number of capturing subpatterns is 65535 we\n      * must allow for 65536 strings to include the overall match.\n      * (See also the heapframe structure below.)\n\n       01  :PREFIX:-pcre2-match-data.\n      * memctl;\n           COPY PCRMECTL.\n      * The pattern used for the match\n           05  :PREFIX:-code          USAGE POINTER.\n      * The subject that was matched\n           05  :PREFIX:-subject       USAGE POINTER.\n      * Pointer to last mark\n           05  :PREFIX:-mark          USAGE POINTER.\n      * Offset to leftmost code unit\n           05  :PREFIX:-leftchar      PIC 9(9) COMP.\n      * Offset to rightmost code unit\n           05  :PREFIX:-rightchar     PIC 9(9) COMP.\n      * Offset to starting code unit\n           05  :PREFIX:-startchar     PIC 9(9) COMP.\n      * Type of match (normal, JIT, DFA)\n      * There is no uint8_t in COBOL\n           05  :PREFIX:-matchedby     PIC X.\n           05  :PREFIX:-flags         PIC X.\n      * Number of pairs\n           05  :PREFIX:-oveccount     PIC 9(4) COMP.\n      * The return code from the match\n           05  :PREFIX:-rc           PIC 9(9) COMP.\n      * The first field */\n           05  :PREFIX:-ovector      PIC 9(9) COMP OCCURS 1.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCRZCONH": {"ttr": 229, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00P\\x01\\x196?\\x01\\x196_\\x08\\x03\\x00:\\x00I\\x00\\x00\\xe9\\xc1\\xe3\\xd3\\xc1\\xe2\\xf1@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2019-12-29T00:00:00", "modifydate": "2019-12-31T08:03:50", "lines": 58, "newlines": 73, "modlines": 0, "user": "ZATLAS1"}, "text": "      * this is a description of the working-storage section, common\n      * needed variables.\n      *\n      * Copyright (c) 2019 Ze'ev Atlas\n      * Please refer to the LICENSE document to see all other\n      * applicable copyrights.\n      *\n      *---------------------------------------------------------------\n      *Redistribution and use in source and binary forms, with or\n      *without modification, are permitted provided that the following\n      *conditions are met:\n\n      * 1. Redistributions of source code must retain the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer.\n\n      * 2. Redistributions in binary form must reproduce the above\n      * copyright notice, this list of conditions and the following\n      * disclaimer in the documentation and/or other materials\n      * provided with the distribution.\n\n      * 3. Neither the name of the University of Cambridge nor the\n      * names of its contributors may be used to endorse or promote\n      * products derived from this software without specific prior\n      * written permission.\n\n      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n      *CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      *---------------------------------------------------------------\n      * PCRZCONH\n      * Support some z/OS specific routines in PCRZFUNC\n      *****************************************************************\n\n       01   :PREFIX:-PCRZ-ZCSSTRCT.\n\n            05  :PREFIX:-charset-locale pic x(16).\n            05  :PREFIX:-cd               usage pointer.\n            05  :PREFIX:-cd-reverse       usage pointer.\n            05  :PREFIX:-pattern-size     pic s9(9) comp.\n            05  :PREFIX:-subject-size     pic s9(9) comp.\n            05  :PREFIX:-replacement-size pic s9(9) comp.\n            05  :PREFIX:-substitute_size  pic s9(9) comp.\n            05  :PREFIX:-pattern-1047     usage pointer.\n            05  :PREFIX:-subject-1047     usage pointer.\n            05  :PREFIX:-replacement-1047 usage pointer.\n            05  :PREFIX:-substitute-1047  usage pointer.\n            05  :PREFIX:-substitute       usage pointer.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REGEX1": {"ttr": 35, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "      ***************************************************************\n      *                                                             *\n      * This COBOL program was written by Frank Swarbrick (based on *\n      * C code found here:                                          *\n      * http://stackoverflow.com/questions/1085083/                 *\n      *regular-expressions-in-c-examples)                           *\n      * with some enhancement suggested by Peter Farley.            *\n      * This code demonstrates how one can write a simple regex     *\n      * functionality without using PCRE. However, it relies on the *\n      * IBM supplied, C standard, C run-time library and its regex, *\n      * Posix compliant functions with all the limitations of that  *\n      * standard                                                    *\n      *                                                             *\n      ***************************************************************\n      * This code is published here with permission from Mr. Frank  *\n      * Swarbrick and under the same BSD licesnce as the rest of the*\n      * package.                                                    *\n      ***************************************************************\n      * One my enhance this program by adding some PARM=            *\n      * manipulation to accept pattern and input string from the    *\n      * JCL                                                         *\n      ***************************************************************\n      ****process nodynam pgmname(mixed)\n       process codepage(1047)\n       identification division.\n       program-id.  'REGEX1'.\n       data division.\n       working-storage section.\n       01  regex.\n           05  re-nsub         comp-5    pic s9(8).\n           05  re-comp         pointer.\n           05  re-cflags       comp-5    pic s9(8).\n           05  re-erroff       comp-5    pic s9(8).\n           05  re-len          comp-5    pic s9(8).\n           05  re-ucoll        comp-5    pic s9(4)  occurs 2.\n           05  re-lsub         pointer              occurs 10.\n           05  re-esub         pointer              occurs 10.\n           05  re-map          display   pic x(256).\n           05  re-shift        comp-5    pic s9(4).\n           05  re-dbcs         comp-5    pic s9(4).\n       77  reti                comp-5    pic s9(8).\n       77  msgbuf              display   pic x(100).\n      *77  lmsgbuf             comp      pic s9(8).\n       procedure division.\n           call 'regcomp' using regex\n                                content z'^a\u00dd\u00dd:alnum:\u00a8\u00a8'\n                                value 0\n                returning reti\n           if reti is not equal to zero\n               display 'Could not compile regex'\n               stop run\n           end-if\n           call 'regexec' using regex\n                                content z'abc'\n                                value 0 0 0\n                returning reti\n           perform check-reti\n           call 'regexec' using regex\n                                content z'qxp'\n                                value 0 0 0\n                returning reti\n           perform check-reti\n           call 'regfree' using regex\n           goback.\n\n       check-reti.\n           evaluate reti\n           when zero\n               display 'match'\n           when 1\n               display 'no match'\n           when other\n      *        move length of msgbuf to lmsgbuf\n               call 'regerror' using regex\n                                                 msgbuf\n                      value length of msgbuf\n                    returning reti\n               display 'Regex match failed: ' msgbuf\n               stop run\n           end-evaluate\n           .\n\n       end program 'REGEX1'.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT939/CBT.V500.FILE939.PDS/COB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT939/CBT.V500.FILE939.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}