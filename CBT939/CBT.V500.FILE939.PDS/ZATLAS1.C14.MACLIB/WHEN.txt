         MACRO
&LAB     WHEN
.*
.* THIS MACRO IS ONE OF A RELATED SET OF MACROS WHICH ENGINEER THE
.* SELECTED EXECUTION OF CODE DEPENDING ON THE CONTENTS OF A FIELD.
.*
.* THE GENERAL STRUCTURE IS AS FOLLOWS -
.*    EVALUATE OPCODE,OP1(,OP2.REP.TYPE.LTH)
.*      WHEN   OP2REST,OP2REST
.*      WHEN   OP2REST-OP2REST,OP2REST
.*      OTHERWSE
.*    ENDEVAL
.*
.* OPCODE FOR EACH POSSIBLE DEPTH
         GBLC  &OP(16)
.* COMPONENTS OF OPERAND 1 FOR EACH POSSIBLE DEPTH
         GBLC  &OP1(16)
.* OPERAND 2 (REP.TYPE.LENGTH) IF ANY - FOR EACH POSSIBLE DEPTH
         GBLC  &OP2(16)
.* CURRENT LABEL GENERATION NUMBER FOR EACH POSSIBLE DEPTH
         GBLA  &ON(16)
.* CURRENT END LABEL NUMBER FOR EACH POSSIBLE DEPTH
         GBLA  &OE(16)
.* CURRENT DEPTH OF OPTION NESTING (1 TO 16)
         GBLA  &OD
.* IMMEDIATE INDICATOR FOR EACH POSSIBLE DEPTH
         GBLB  &OI(16)
.* QUOTES INDICATOR FOR EACH POSSIBLE DEPTH
         GBLB  &OQ(16)
.* STATUS INDICATOR FOR EACH POSSIBLE DEPTH
         GBLB  &OS(16)
.* OPTELSE INDICATOR FOR EACH POSSIBLE DEPTH
         GBLB  &OELSE(16)
.* OPTION INDICATOR FOR EACH POSSIBLE DEPTH
         GBLB  &OPTN(16)
.*
.* LOCAL WORK FIELDS
         LCLA  &A,&B,&C,&D,&E,&U
         LCLC  &L1,&L2,&L3,&L4,&L5,&L6,&L7
         LCLB  &H,&Z
.*
.IF0     AIF   (T'&LAB EQ 'O').END0
&LAB     EQU   *
.END0    ANOP
.IF0A    AIF   (&OD GT 0).END0A
         MNOTE 16,'OPTION MISSING'
         MEXIT
.END0A   ANOP
.IF1     AIF   (&OD LE 16).END1
         MNOTE 16,'MAX OPTION NESTING OF 16 EXCEEDED'
         MEXIT
.END1    ANOP
.* SET EXIT FOR PREVIOUS CODE
         BRU   @D&OD.E&OE(&OD)
.* SET LABEL FOR ENTRY
@D&OD.N&ON(&OD) EQU   *
.* INCREMENT LABEL GENERATION NUMBER
&ON(&OD) SETA  &ON(&OD)+1
.* SET OPTION INDICATOR OFF
&OPTN(&OD) SETB (0)
.IF1AA   AIF   ((&OELSE(&OD)) EQ (0)).END1AA
         MNOTE 16,'OPTELSE PRECEDES OPT'
         MEXIT
.END1AA  ANOP
.* SAVE CURRENT LABEL GENERATION NUMBER FOR USER-CODE LABEL
&U       SETA  &ON(&OD)
.* INCREMENT LABEL GENERATION NUMBER
&ON(&OD) SETA  &ON(&OD)+1
.IF1AB   AIF   ((&OS(&OD)) EQ (0)).END1AB
         MNOTE 16,'OPTION STATEMENT ERROR'
         MEXIT
.END1AB  ANOP
&A       SETA  N'&SYSLIST
.IF1B    AIF   (&A NE 0).END1B
         MNOTE 16,'NO OPT PARAMETERS'
         MEXIT
.END1B   ANOP
&B       SETA  0
.DO1     AIF   (&A EQ &B).NDO1
.* DO FOR EACH PARAMETER OF OPT
&B       SETA  &B+1
&C       SETA  K'&SYSLIST(&B)
.IF2     AIF   ((&OQ(&OD)) EQ (0)).ELS2
         AIF   ('&SYSLIST(&B)'(1,1) NE '''').QMN
         AIF   ('&SYSLIST(&B)'(&C,1) EQ '''').OKQ
.QMN     MNOTE 16,'UNQUOTED OPT PARAMETER'
         MEXIT
.OKQ     AIF   (&C GT 2).END2
         MNOTE 16,'NULL QUOTES OPT PARAMETER'
         MEXIT
.ELS2    AIF   ('&SYSLIST(&B)'(1,1) NE '''').END2
         MNOTE 16,'MISQUOTED OPT PARAMETER'
         MEXIT
.END2    ANOP
.* FIND IF THERE IS A RANGE
&D       SETA  0
&H       SETB  (0)
.DO2     AIF   (&C EQ &D).NDO2
.* DO FOR EACH CHARACTER OF PARAMETER
&D       SETA  &D+1
         AIF   ('&SYSLIST(&B)'(&D,1) NE '-').ADO2
.IF4     AIF   ((&OQ(&OD)) EQ (0)).ELS4
         AIF   ('&SYSLIST(&B)'(&D-1,1) NE '''').ADO2
         AIF   ('&SYSLIST(&B)'(&D+1,1) NE '''').ADO2
         AIF   (&D EQ 2).ADO2
.* HAVE FOUND A HYPHEN (BETWEEN QUOTES BECAUSE QUOTES ARE CURRENT)
&H       SETB  (1)
         AGO   .NDO2
.ELS4    ANOP
.* HAVE FOUND A HYPHEN
&H       SETB  (1)
         AGO   .NDO2
.END4    ANOP
.ADO2    AGO   .DO2
.NDO2    ANOP
&L1      SETC  '&OP(&OD)'
&L2      SETC  '&OP1(&OD)'
&L3      SETC  '&OP2(&OD)'
.*
.* GENERATE LABEL FOR COMPARE CLAUSE IF NOT 1ST AND RANGE NOT PREVIOUS
.IF5     AIF   (&B EQ 1).END5
         AIF   ((&Z) EQ (0)).END5
@D&OD.N&ON(&OD) EQU *
.* INCREMENT LABEL GENERATION COUNT
&ON(&OD) SETA  &ON(&OD)+1
.END5    ANOP
.* GENERATE COMPARE CLAUSE LOGIC
.IF6     AIF   ((&H) EQ (0)).ELS6
.* WHEN A RANGE  &H IS 1 AND &D WILL HOLD HYPHEN OFFSET
&E       SETA  &D-1
&L4      SETC  '&SYSLIST(&B)'(1,&E)
         &L1   &L2,&L3&L4
         JL    @D&OD.N&ON(&OD)
&E       SETA  &C-&D
&L5      SETC  '&SYSLIST(&B)'(&D+1,&E)
         &L1   &L2,&L3&L5
.IF7     AIF   (&B EQ &A).ELS7
.* WHEN NOT LAST CLAUSE GENERATE BRANCH DIRECT TO USER-CODE
         JNH   @D&OD.N&U
         AGO   .END7
.ELS7    ANOP
.* FOR LAST CLAUSE GENERATE BRANCH TO NEXT OPTION
         JH    @D&OD.N&ON(&OD)
.IF7A    AIF   (&A EQ 1).END7A
.* GENERATE USER-CODE ENTRY LABEL WHEN MORE THAN A SINGLE PARAMETER
@D&OD.N&U EQU  *
.END7A   ANOP
.END7    ANOP
&Z       SETB  (1)
         AGO   .END6
.ELS6    ANOP
.* HAVE SIMPLE CLAUSE WITH SINGLE TERM
&L6      SETC  '&SYSLIST(&B)'(1,&C)
         &L1   &L2,&L3&L6
.IF8     AIF   (&B EQ &A).ELS8
.* WHEN NOT LAST CLAUSE GENERATE BRANCH DIRECT TO USER-CODE
         JE    @D&OD.N&U
         AGO   .END8
.ELS8    ANOP
.* FOR LAST CLAUSE GENERATE BRANCH TO NEXT OPTION
         JNE   @D&OD.N&ON(&OD)
.IF9     AIF   (&A EQ 1).END9
.* GENERATE USER-CODE ENTRY LABEL WHEN MORE THAN A SINGLE PARAMETER
@D&OD.N&U EQU  *
.END9    ANOP
.END8    ANOP
&Z       SETB  (0)
.END6    ANOP
.ADO1    AGO   .DO1
.NDO1    ANOP
         MEND
