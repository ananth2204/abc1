*PROCESS SUPRWARN(303)
RRSORT   START
         USING *,15
         MVC   SAVEX+2(2),FTADR        * SET SAVE EXIT TO FTRTN.
         B     SAVEM                   * GO SAVE REGISTERS.
         L     15,42(15)               * EP FROM RELEASE.
         MVC   SAVEX+2(2),RLSEADR      * SET SAVE EXIT TO RLSERTN.
         B     SAVEM                   * GO SAVE REGISTERS.
         L     15,28(15)               * EP FROM IN PROC EXIT.
         MVC   SAVEX+2(2),ISTXADR      * SET SAVE EXIT TO ISTXRTN.
         B     SAVEM                   * GO SAVE REGISTERS.
         L     15,14(15)               * EP FROM RETURN.
         MVC   SAVEX+2(2),OSTXADR      * SET SAVE EXIT TO OSTXRTN.
         B     SAVEM                   * GO SAVE REGISTERS.
EPADR    DC    A(RRSORT)
FTADR    DC    S(FTRTN)
RLSEADR  DC    S(RELEASE)
ISTXADR  DC    S(SORTEM)
OSTXADR  DC    S(RETURN)
SAVEM    SAVE  (14,12)                 * SAVE RRGEN REGS
         BALR  12,0                    *
         USING *,12                    *
START    LA    11,MYSAVE               *
         ST    11,8(13)                *
         ST    13,4(11)                *
         LR    13,11                   *
SAVEX    B     FTRTN
* THIS ROUTINE CALLS THE SORT AND PASSES THE PARAMETER ADDRESS. THIS
*  ROUTINE IS ENTERED WHEN THE SORT MACRO IS EXECUTED IN THE COMPILED
*  RRGEN PROGRAM. THE SORT RETURNS TO THIS MODULE AT END OF SORT.
*  THIS ROUTINE THEN RETURNS TO THE RRGEN PROGRAM AT TGEF.
FTRTN    MVC   LHESCD(4),0(1)          * MOVE LHE SORT STAT TO PARM.
         MVC   LHERECD(4),4(1)         * MOVE LHE REC STAT TO PARM.
         MVC   ADRIN(4),8(1)           * RRGEN INPUT PROC ADDR TO HOLD.
         MVC   ADROUT(4),12(1)         * RRGEN OUT PROC ADDR TO HOLD.
         MVC   RECAR(4),16(1)          * RECAR ADDR TO HOLD.
         ST    14,ADREOF               * STORE RETURN ADDR.
* FIND RHE OF SORT STATEMENT .
         L     5,LHESCD                * 5 POINT TO LHE OF SORT STAT.
         LA    6,45(5)                 * SET SEARCH LIMIT.
FT01     CLC   0(6,5),=C'FIELDS'       * START OF FIELD PARAMETER?
         BE    FT02                    * YES
         LA    5,1(5)                  * NO, 5 UP BY 1.
         CR    5,6                     * END OF SEARCH?
         BL    FT01                    * NO.
         ST    6,RHESCD                * YES, BAD SORT STATEMENT.
         B     FT04
         LA    5,6(5)
FT02     CLI   0(5),C' '               * END OF SORT STATEMENT?
         BE    FT03                    * YES
         LA    5,1(5)                  * NO, 5 UP BY 1
         B     FT02                    *  GO LOOK AT NEXT POS.
FT03     ST    5,RHESCD                * RHE SORT STAT TO HOLD.
* FIND RECORD  SIZE FOR MOVE OF RECORD AND RHE OF RECORD STATEMENT.
FT04     L     5,LHERECD               * 5 TO LHE RECORD STATEMENT.
         LA    6,45(5)                 * SET SEARCH LIMIT.
FT05     CLC   0(6,5),=C'LENGTH'       * LENGTH PARM?
         BE    FT06                    * YES
         LA    5,1(5)                  * 5 UP BY 1.
         CR    5,6                     * SEARCH LIMIT REACHED?
         BL    FT05                    * NO, GO CHECK NEXT POS.
         ST    6,RHERECD               * BAD RECORD STATEMENT
         B     FT13
FT06     TRT   7(5,5),NUMTAB           * 5 POS SIZE.
         BNZ   FT06A                   * NO, CHECK 4.
         MVC   SIZWK+3(5),7(5)         * YES, MOVE TO WORK.
         B     FT08
FT06A    TRT   7(4,5),NUMTAB           * 4 POS SIZE.
         BNZ   FT06B                   * NO, CHECK 3.
         MVC   SIZWK+4(4),7(5)         * YES, MOVE TO WORK.
         B     FT08
FT06B    TRT   7(3,5),NUMTAB           * 3 POS SIZE?
         BNZ   FT07
         MVC   SIZWK+5(3),7(5)         * RECORD SIZE TO HOLD AREA.
         B     FT08
FT07     TRT   7(2,5),NUMTAB           * SIZE 2 POS ?
         BNZ   FT08                    * NO - BUT LET SORT BRING DOWN.
         MVC   SIZWK+6(2),7(5)         * MOVE 2 POS SIZE TO HOLD AREA.
FT08     CLI   0(5),C' '               * END OF RECORD STATEMENT.
         BE    FT09                    * YES
         LA    5,1(5)                  * NO, 5 UP BY 1.
         B     FT08                    * GO LOOK AT NEXT POS.
FT09     ST 5,RHERECD                  * RHE RECORD STATEMENT TO HOLD.
         CLC   SIZWK+3(5),=C'00900'    * RECORD GREATER THAN 900 POS.
         BH    FT13
         PACK  SIZWK(8),SIZWK(8)       * PACK RECORD SIZE.
         CVB   7,SIZWK                 * RECORD SIZE TO BINARY.
         LTR   7,7                     * RECORD SIZE ZERO.
         BZ    FT13                    * YES. ERROR.
         LH    5,=H'256'               * 5 = MAX MOVE CNT.
         LA    6,MOVE1                 * 6 TO 1ST MOVE INS
         BCTR  7,0                     * REC SIZE DOWN BY 1.
FT10     CR    5,7                     * REC SIZE LESS THAN 256?
         BH    FT11                    * YES.
         MVI   7(6),X'00'              * NO,SET MOVE SWITCH.
         SR    7,5                     * REC SIZE DOWN BY 256.
         LA    6,10(6)                 * 6 TO NEXT MOVE INS
         B     FT10                    *
FT11     STC   7,1(6)                  * REMAINDER TO MOVE INS.
         LA    1,SORTPARM
         LINK  EP=SORT,MF=(E,(1))      * GO SORT.
FT12     L     14,ADREOF
         L     13,MYSAVE+4
         LM    0,12,20(13)
         BR    14
FT13     LA    15,11(0)                * SET RETURN CODE.
         B     FT12
APROCOUT DC    A(PROCOUT)
* THIS ROUTINE PASSES A RECORD FROM RRGEN INPUT PROCEDURE TO THE SORT.
*  RETURN FROM SORT IS TO PROCIN.
RELEASE  ST    14,ADRIN                * SET RRGEN RETURN ADDR.
         L     13,SRTSAVE              * GET SORT SAVE AREA ADDR.
         L     1,RECAR                 * R1 POINTS TO RECORD.
         LM    14,0,12(13)
         LM    2,12,28(13)
         LA    15,12(0)                * R15 = RETURN CODE
         BR    14                      * RETURN TO SORT.
* THIS ROUTINE GOES TO THE SORT AT END OF INPUT PROCEDURE.
*  RETURN FROM SORT IS TO PROCOUT.
SORTEM   L     13,SRTSAVE              * GET SORT SAVE AREA ADDR.
         RETURN (14,12),,RC=8          * RETURN TO SORT.
* THIS ROUTINE GOES TO THE SORT TO GET ANOTHER RECORD.
*  RETURN FROM SORT IS AT PROCOUT
RETURN   ST    14,ADROUT               * SET RRGEN RETURN ADDR.
         L     13,SRTSAVE              * GET SORT SAVE AREA ADDR.
FTSW1    BC    0,RETURN01              * ONE TIME SWITCH.
         MVI   FTSW1+1,X'F0'           * RESET ONE TIME SWITCH.
         MVI   FTSW2+1,X'00'           * RESET OUT PROC ONE TIME SW.
         L     5,24(13)                * GET SORT RECAR ADDR.
         L     5,0(5)
         L     15,APROCOUT
         B     MOVEREC                 * GO GET FIRST RECORD.
RETURN01 RETURN (14,12),,RC=4          * RETURN TO SORT.
         DS    0F
         DC    X'0000'
SRTPARM  DC    XL2'001C'
LHESCD   DC    A(0)
RHESCD   DC    A(0)
LHERECD  DC    A(0)
RHERECD  DC    A(0)
INPROC   DC    A(PROCIN)
OUTPROC  DC    A(PROCOUT)
         DC    XL4'FF00C1D7'
ADRIN    DC    A(0)
ADROUT   DC    A(0)
ADREOF   DC    A(0)
RECAR    DC    A(0)
SORTPARM DC    X'80'
         DC    AL3(SRTPARM)
SRTSAVE  DC    A(0)
MYSAVE   DC    18F'0'
* THIS ROUTINE IS THE INPUT PROCEDURE FOR THE SORT. THE SORT LINKS TO
*  THIS ROUTINE AND THIS ROUTINE BRANCHES TO RRGEN AT TGSI.
         USING *,15
PROCIN   SAVE  (14,12)                 * SAVE SORT REGS.
         L     12,IBASE                * ESTABLISH MYBASE.
         ST    13,SRTSAVE              * SAVE SORT SAVE AREA ADR.
         L     13,MYSAVE+4             * GET RRGEN SAVE AREA.
         L     14,ADRIN                * POINT 14 TO TGSI.
         LM    15,12,16(13)            * RESTORE RRGEN REGS.
         BR    14                      * BRANCH TO TGSI
IBASE    DC    A(START)
** THIS ROUTINE IS THE OUTPUT PROCEDURE FOR THE SORT. THE SORT LINK
**  TO THIS ROUTINE WHEN IT IS THROUGH SORTING. THIS ROUTINE MOVE A
*   RECORD TO RECAR AND BRANCHES TO RRGEN AT TGSO. AT END OF FILE
*   THIS ROUTINE BRANCHES BACK TO THE SORT.
         USING *,15
PROCOUT  SAVE  (14,12)                 * SAVE SORT REGS.
         L     12,OBASE                * ESTABLISH MY BASE.
         ST    13,SRTSAVE              * SAVE SORT SAVE AREA ADR.
         L     5,0(1)                  * 5=RECAR FROM SORT
         LTR   5,5                     * EOF ?
         BZ    SRTEOF                  * YES
FTSW2    BC    15,PROCX                * FIRST TIME FROM SORT SWITCH.
MOVEREC  L     6,RECAR                 * GET RRGEN RECAR ADDR.
MOVE1    MVC   0(256,6),0(5)           * MOVE 1ST PART OF RECORD.
SW1      BC    15,PROCX                * BRANCH IF NO MORE RECORD.
MOVE2    MVC   256(256,6),256(5)       * MOVE 2ND PART OF REC.
SW2      BC    15,PROCX                * BRANCH IF NO MORE.
MOVE3    MVC   512(256,6),512(5)       * MOVE 3RD PART OF RECORD.
SW3      BC    15,PROCX                * BRANCH IF NO MORE.
MOVE4    MVC   768(132,6),768(5)       * MOVE REST OF REC (MAX 900)
PROCX    L     13,MYSAVE+4             * GET RRGEN SAVE AREA ADDR.
         L     14,ADROUT               * GET TGSO ADDR.
         LM    15,12,16(13)            * RESTORE RRGEN REGS.
         BR    14                      * GO TO TGSO.
SRTEOF   RETURN (14,12),,RC=8          * GO TO SORT.
OBASE    DC    A(START)
         DS    0D
SIZWK    DC    CL8'00000000'
NUMTAB   DC    CL240' '
         DC    XL10'00'
         DC    CL6' '
         END
