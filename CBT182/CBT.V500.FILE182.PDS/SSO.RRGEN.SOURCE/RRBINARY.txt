BINARY01  CSECT
R1       EQU        1
R2       EQU        2
R3       EQU        3
R4       EQU        4
R5       EQU        5
R6       EQU        6
R7       EQU        7
R8       EQU        8
R9       EQU        9
R10      EQU        10
R11      EQU        11
R12      EQU        12
R13      EQU        13
R14      EQU        14
R15      EQU        15
EP1      SAVE      (14,12)
         BALR       12,0
         USING      *,12
         ST         R13,SAVE+4
         LR         R6,R13
         LA         R13,SAVE
         ST         R13,8(R6)
         CLI       12(R1),X'80'    INSURE A COMPLETE PARM LIST.
         BNE       ATEND
         CLI       0(R1),X'80'      HAVE I CKED THIS PARM BEFORE
         BE        LOADEM          YES SET UP FOR A SEARCH
EP2      XR         R9,R9
         LA         R10,PARM            LOOK  THRU MY PARM LIST
LOOK     L          R11,0(R10)           IF REG 14 HAS BEEN SAVED
         L          R15,0(R11)           IN IT- THEN I ASSUME THIS
         CR         R9,R15
         BE         INSERT
         CLI        0(R10),X'80'         THIS IS A BUILD & EDIT.
         BE        ATEND
         LA         R10,4(R10)
         B          LOOK
LOADEM   LA        R14,14(R14)       SET UP 14 FOR RETURN TO RRGEN
         L         R11,0(R1)
         ST        R14,12(R6)           PUT R14 IN HIS SAVE FOR ME
****    LOAD MY REGISTERS HERE........
         LM         R2,R10,4(R11)       ONLY 4 DIFFERENT SEARCHES CAN
*                                       CALL THIS MODULE AT ONE TIME-
         MVC       COMP(6),40(R11)      FOR I BUILD IN HOLD AND ONLY
         B          INCR                RESTORE REG & COMP FOR A SEARCH
INSERT   L          R3,0(R1)            BUILD 4 HOLD AREAS HERE:
         L          R6,4(R1)           * R3 = INQUIRY ADR
         L          R2,4(R1)           * R2,R6,R5,HAVE LHE OF TABLE ADR
         L          R5,4(R1)           * R4 = LENGTH OF EACH ENTRY
         ST          R1,0(R11)         * R7 = RHE OF TABLE-1 ENTRY
         ST        R11,0(R1)
         MVI       0(R1),X'80'
         MVC       36(4,R11),8(R1)        INDEX ADR
******     WHAT WE HANDLE IN THIS RTN. LOOKS LIKE THIS.
*********                    (0012,005,000,002)
**********                   (12,5,0,2)
**********                   (12,5,,2)
**********           THE DEFAULT IS ZERO.
         L         R8,12(R1)       SET 8 AT TBL DESCP.
         LA        R7,WRK1            SET  7 AT RECEIVE FIELD
         CLI       0(R8),X'4D'           FIRST MUST BE A (.
         BNE       ATEND          ITS AN ERROR BYE.
INCRR8   LA        R8,1(R8)        BUMP R8 BY ONE.
         ST        R8,REGHLD        SAVE R8 FOR LATER USE.
         LA        R4,WRK5        SET 5 AT A WOKR AREA.
COMMA    CLI       0(R8),X'6B'       IS A COMMA HERE.
         BE        GOTONE           YES IT IS.
         CLI       0(R8),X'5D'          IS A ). RHE
         BE        GOTONE       YES IT IS.
         C         R4,LOOKAT4         HAVE WE EXCEEDED RHE
         BH        ATEND          YES ITS AN ERROR.
         MVC       0(1,R4),0(R8)        MOVE A CHAR IN WRK5.
         LA        R4,1(R4)      INCR WRK5 ADR
         LA        R8,1(R8)          BUMP THRU TBL DESCP.
         B         COMMA        GO LOOK SOME MORE.
GOTONE   ST        R8,RHLD          SAVE 8 FOR LATER USE.
         S         R8,REGHLD     HOW MANY DID I MOVE 0-4.
         CL        R8,CON4      WAS IT MORE THAN 4.
         BH        ATEND        YES ITS A USER ERROR.
         L         R4,CON32      MAX NR OF BITS IN A REG IS 32.
         LR        R9,R8          FOR THE MPY
         M         R8,CON8    NR MOVED X 8 = NR BITS MOVED.
         SR        R4,R9       MINUS MAX NR BITS = EXCESS BITS.
         STC       R4,SRL1+3   PUT EM IN SHIFT INST.
         L         R8,WRK5        WHO GETS IT.
SRL1     SRL       R8,0(0)         SHIFT IT OVER.
         ST        R8,0(R7)     STORE IT IN WRK1-4
         MVZ       0(4,R7),HIVAL        ALL F ZONE.
         LA        R7,4(R7)    INCR 7 TO NEXT WRK AREA.
         L         R8,RHLD        RESTORE 8 TO THE COMMA
         CLI       0(R8),X'5D'     WAS A ).  RHE
         BE        OUT       YES GET OUT OF HERE.
         CL        R7,ENDOF
         BH        ATEND   WE ARE OUT OF THE WRK AREA.
         B         INCRR8      GO LOOK SOME MORE.
********        DO SOME EDITING HERE.
OUT      CLC       WRK4(4),CON255     REL KEY POS CANNOT EXCEED 255.
         BH        ATEND
         CLC       WRK3(4),CON256   LENGTH OF KEY NOT 256
         BH        ATEND        YES ITS GREATER SORRY.
         CLC       WRK3(4),WRK2    KEYLEN CANNOT BE GREATER THAN THE
         BH        ATEND           SIZE OF AN ENTRY.
         CLC       WRK2(4),ZERO      SIZE CANNOT BE ZERO.
         BE        ATEND
         CLC       WRK1(4),ZERO      NR OF ENTRIES CANNOT BE ZERO.
         BE        ATEND
         CLC       WRK3(4),ZERO      KEYLEN CANNOT BE ZERO.
         BE        ATEND
         CLC       WRK4(4),WRK2     REL KEY POS CANNOT BE GREATER
         BH        ATEND             THAN THE SIZE.
         PACK       DBLWRD(8),WRK1(4)
         CVB        R7,DBLWRD
         PACK       DBLWRD(8),WRK2(4)
         CVB        R4,DBLWRD
         PACK       DBLWRD(8),WRK4(4)
         CVB       R9,DBLWRD
         STC       R9,COMP+3        REL KEY POS IN COMPARE DISP.
         PACK       DBLWRD(8),WRK3(4)
         CVB        R8,DBLWRD
         AR        R9,R8       REL POS + KEYLEN
         CLR       R9,R4         CANNOT BE GREATER THAN THE SIZE.
         BH        ATEND
         S         R8,ONE       DECR BY ONE FOR COMP SIZE INST.
         STC        R8,COMP+1              SIZE OF COMP
         S          R7,ONE
         LR        R9,R7
         MR         R8,R4                NR ENTRIES-1 X SIZE OF ENTRY
         LR         R7,R6               PLUS LHE ADR = RHE ADR.
         AR        R7,R9
         MVC       40(6,R11),COMP
         STM        R2,R7,4(R11)       STORE REG INTO HOLD AREA.
*  CHANGE 14 TO GO BACK +14 WHEN TESTING IS DONE.
*   EXCEPT WHEN RRGEN CALLS,DONT GO BACK WHERE 14 POINTS.
GOBACK   L          R13,SAVE+4
         RETURN     (14,12),T,RC=0
ATEND    L          R13,SAVE+4
         RETURN     (14,12),T,RC=1
*****  THIS IS THE SEARCH ROUTINE.  IT WORKS ON AN ADDRESS PRINCIPLE.
*****  THE COMPARE IS HERE. SIZE AND DISPLACEMENT CHANGES WITH EACH
*****  SEARCH.
COMP     CLC        0(1,R2),0(R3)
         BE         POSHIT
         BL        LOOKUP
         SR         R2,R4
         LR         R7,R2
         B          GOON
LOOKUP   AR         R2,R4
         LR         R6,R2
GOON     CLR        R6,R7
         BH         ATEND
         LR         R9,R4
         AR         R9,R7
         SR         R9,R6
         SR         R8,R8
         DR         R8,R4
         LR        R8,R9
         SRL        R8,1(0)
         SLL        R8,1(0)
         CLR        R8,R9
         LR         R2,R7
         BNE        INCR
         SR         R2,R4
***** ADD THE TWO ADRESSES TOGETHER AND DIVIDE BY 2 TO GET THE NEXT
*****   LOOK IN THE TABLE.
INCR     AR         R2,R6
         SLL       R2,8(0)
         SRL       R2,9(0)
         B          COMP
POSHIT   SR         R2,R5
         CVD       R2,DBLWRD
         UNPK      WRK4(4),DBLWRD+5(3)
         MVZ       WRK4+3(1),WRK4+2
         MVC       0(4,R10),WRK4
         CR         R2,R2
         B          GOBACK
SAVE     DC         18F'0'
PARM     DC         AL4(HOLD1)
         DC         AL4(HOLD2)
         DC         AL4(HOLD3)
         DC        AL4(HOLD4)
         DC        AL4(HOLD5)
         DC        AL4(HOLD6)
         DC        AL4(HOLD7)
         DC        AL4(HOLD8)
         DC        AL4(HOLD9)
         DC         X'80'
         DC        AL3(HOLD10)
WRK      DS        0F
WRK1     DC        1F'0'
WRK2     DC        1F'0'
WRK3     DC        1F'0'
WRK4     DC        1F'0'
WRK5     DC        1F'0'
ENDOF    DC        AL4(WRK4)
LOOKAT4  DC        AL4(WRK5+4)
REGHLD   DC        1F'0'
RHLD     DC        1F'0'
HIVAL    DC        XL4'FFFFFFFF'
ZERO     DC        CL4'0000'
ONE      DC         XL4'00000001'
CON4     DC        XL4'00000004'
CON8     DC        XL4'00000008'
CON32    DC        XL4'00000020'
CON255   DC        CL4'0255'
CON256   DC        CL4'0256'
DBLWRD   DC        1D'0'
HOLD1    DC        1F'0'           H    HOLD  R14
         DC        1F'0'           H    LHETBL  R2
         DC        1F'0'                INQUIRY R3
         DC        1F'0'                ENTLEN  R4
         DC        1F'0'                LHETBL  R5
         DC        1F'0'                LHETBL  R6
         DC        1F'0'                RHETBL  R7
         DC        1F'0'               ZERO FOR R8
         DC        1F'0'               ZERO FOR R9
         DC        1F'0'           H    INDEX ADR   R10
         DC        1D'0'               CLC  HOLD
HOLD2    DC        12F'0'               SAME AS HOLD1
HOLD3    DC        12F'0'               SAME AS HOLD1
HOLD4    DC        12F'0'               SAME AS HOLD1
HOLD5    DC        12F'0'               SAME AS HOLD1
HOLD6    DC        12F'0'               SAME AS HOLD1
HOLD7    DC        12F'0'               SAME AS HOLD1
HOLD8    DC        12F'0'               SAME AS HOLD1
HOLD9    DC        12F'0'               SAME AS HOLD1
HOLD10   DC        12F'0'               SAME AS HOLD1
         END
