ASSIST - Assembler System for Student Instruction & Systems Teaching

ASSIST is a small, high-speed, low-overhead assembler/interpreter
system especially designed for use by students learning assembler
language.  The assembler program accepts a large subset of the
standard Assembler Language under OS/360, and includes most
common features.  The execution-time interpreter simulates the
full 360 instruction set, with complete checking for errors,
meaningful diagnostics, and completion dumps of much smaller size
than the normal system dumps.

The ASSIST package has been available from several Internet sites
for some time.  In fact, I had acquired an AWS tape image
containing the package sometime in 2001, but my pursuit of
installing it was interrupted by a hard drive crash and I just
did not get back to it until recently.  The package, as found on
the CBT tape (file #085 on the overflow tape) and at least a
couple of other locations I checked, seems to have been last
updated in March, 1975.  Part of the struggle in getting ASSIST
into an easily installable package for Hercules/MVS 3.8 was
dealing with some strange spurious hex characters appearing in
some of the distribution members where only display characters
should have been.  I am extremely grateful for the help of Mike
Stack at NIU in attempting to help me track down the source of
these errors.  Eventually, I scrapped the CBT tape copy and used
the source from Mike's site at NIU, as well as using his
installation jobstream as the model for what I built for
Hercules/MVS 3.8.  [Mike subsequently moved his ASSIST material
to his personal site: http://kcats.org/]  Following this route
greatly reduced the problems with the source and, with a single
exception, the source is exactly what is contained on Mike's
site.  By building SYSIN jobstreams for the installation reduced
the size of the files to download and hopefully prevents
introduction of further errors by translation of compressed data
from ASCII/EBCIDIC and back repeatedly.

The installation archive - assist.tgz
[MD5: 79D3361EF4ADAAD1FC1284C144E98C32] - contains six jobstreams:

    assist$.jcl         This large jobstream installs the ASSIST
                        load module, the macros ASSIST needs
                        during execution, and a procedure to
                        execute ASSIST.
    astest00.jcl
    astest01.jcl
    astest02.jcl
    astest03.jcl
    astest04.jcl
    astest05.jcl        These six jobs may be submitted to verify
                        successful installation of ASSIST.  They
                        contain many actual programs submitted by
                        students, some with errors still intact.

Following Mike's example, the assist$.jcl. jobstream copies all
the original source statements from SYSIN statements in the
jobstream to two temporary datasets.  Updates are then applied to
the datasets using statements also read from SYSIN.  All of
ASSISTs default options are controlled by settings of symbolic
variables in the ASSYSGEN macro.  As supplied, pretty much
everything is "turned on" and it should be suitable for most
folks, as is.  If you want to make changes, you should make them
in the update statements, not in the original.  With a little
rearranging, IFOX00 is suitable for assembling ASSIST, so after
the updates are made to the temporary datasets, ASSIST is
assembled and link-edited to SYS2.LINKLIB.  As always, if you
don't use SYS2.LINKLIB, simply change the DSN for the target
library.  The last two steps of the jobstream add the ASSIST
macros to SYS1.MACLIB and the catalogued procedure to
SYS2.PROCLIB.  Again, change as required for your system.  The
completion codes for all steps of this job should be 0000.

Submit one or all of the test jobs to verify successful
installation.  Completion codes for all of these jobs should be
0000, even though there will be errors listed for some of the
programs in the SYSOUT.

The ASSIST documentation included formatting control characters
and were best when processed with the included copyed program
(which I have not included here).  I have processed the members
with the program and subsequently placed the output into PDF
files.  PDF compression greatly reduces the size of the files and
the text in the PDF is 100% searchable.  You may chose which, if
any, of the documentation members to download and use:

 PDF File (Original Member)  Pages / Download Size   Contents
 asmintro (ASASSIGN)           247 / 660kb     Pennsylvania State
                                               University introductory
                                               information for beginning
                                               students of assembler
 logic (ASPLMXXX)              181 / 403kb     ASSIST System Program
                                               Logic Manual
 usergd (ASUSERGD)             72 / 205kb      ASSIST User's Guide
 xmsysgen (XMSYSGEN)            7 / 24kb       Summary of the XMacro
                                               package
 xmwrites (XMWRITES)           22 / 61.2kb     XMacro Usage

The first document - asmintro - contains actual assignments given
to students and a fair amount of basic information about OS and
good assembler programming methods.  Likewise, the ASSIST User's
Guide - usergd - includes much basic assembler information.  The
xmsysgen document will probably only be of interest to someone
seeking to write additional X macros for the ASSIST system.

A good textbook that incorporates the use of ASSIST in learning
370 Assembler is IBM Assembly Language with ASSIST; Structured
Concepts and Advanced Topics by Charles J. Kacmar.  As I write
this, there are 4 copies listed for sale at www.abebooks.com.

I hope this has provided you with the information you need to get
started assembling, compiling, link-editing, and executing
programs on your own.  If I can answer any questions about using
catalogued procedures for the compilers or if you find errors in
these instructions, please don't hesitate to send them to me:

