{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "IBMUSER", "INMTNODE": "N1", "INMTUID": "SOFT", "INMFTIME": "20140406105311000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 20986602, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "NSQ.V120.NSQTEST", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 20986602, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 20986602, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"NSQ.V120.NSQTEST": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "140096", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\xc0\\x00\\x00\\n'", "DS1LSTAR": "b'\\x01*\\x0e'", "DS1TRBAL": "b'o*'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x030\\x00\\x04\\x8a\\xa0\\xc8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x030\\x00\\x04\\x8a\\xa0\\xc8'", "b'P\\xf4\\xbc\\x90\\x00\\x00\\x08\\x81\\x00\\x00\\x08\\x9e\\x00\\x0e\\x01\\xc2'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"ASMREAD": {"ttr": 76289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00I\\x01\\x14\\tO\\x01\\x14\\tO\\t5\\x00?\\x00;\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2014-04-04T00:00:00", "modifydate": "2014-04-04T09:35:49", "lines": 63, "newlines": 59, "modlines": 0, "user": "IBMUSER"}, "text": "* NOSQLZ DIRECT READ ON DATABASE\n*\nASMREAD  CSECT\nASMREAD  AMODE 31\nASMREAD  RMODE ANY\n         YREGS  ,\n         BAKR  R14,0\n         LR    R12,R15\n         USING ASMREAD,R12\n* READ ACCESS\n         MVI   NSQ_VRSN,C'1'\n         MVC   NSQ_ACT,=CL8'READ'\n         MVI   NSQ_OPT,C'N'\n         MVC   NSQ_TBLNM,=CL8'DBSTATES'\n         MVC   NSQ_INLEN,=A(L'OUTZONE)\n         XC    NSQ_OUTLN,NSQ_OUTLN\n         MVC   NSQ_KYLEN,=AL2(L'INSTATE)\n         MVC   NSQ_KYVAL(L'INSTATE),INSTATE\n         CALL  NSQTCAPI,(NSQ_BLOCK,OUTZONE),VL\n* PROCESS RESULT\n         CLC   NSQ_RETCD,=F'0'                NOSQLZ RC=0 ?\n         BNE   ERROR\n         WTO   TEXT=INMSG                     DISPLAY INPUT KEY\n         MVC   OUTLGTH,NSQ_OUTLN+2\n         WTO   TEXT=OUTLGTH                   DISPLAY RECORD DATA\n         XR    R15,R15\n         PR    ,\nERROR    DS    0H\n         MVC   ERRORTXT,NSQ_MESSG             COPY ERROR MESSAGE\n         WTO   TEXT=ERRORMSG                  DISPLAY ERROR MESSAGE\n         ICM   R15,15,NSQ_RETCD\n         PR    ,\n*\nINMSG    DC    H'57'                      USED FOR DISPLAY WTO\nINSTATE  DS    0CL75\n         DC    XL5'D481899585',CL52' '                   \"MAINE\"\n         DC    XL5'D481899585',CL13' '                   \"MAINE\"\nOUTLGTH  DS    H\nOUTZONE  DS    CL100\n*\nERRORMSG DC    H'100'\nERRORTXT DS    CL100\n* PARAMETER BLOCK\nNSQ_BLOCK DS   0H\nNSQ_VRSN  DS   CL1           VERSION OF PARAMETER BLOCK: C'1'\nNSQ_OPT   DS   CL1           READ OPTION: 'N'EWEST (RECOMMENDED)\nNSQ_ACT   DS   CL8        ACTION (\"START\", \"CREATE\", \"READ\", \"UPDATE\",\n*                                 \"DELETE\", \"COMMIT\", \"ROLLBACK\")\nNSQ_TBLNM DS   CL8           NAME OF TABLE DATA SET TO BE ACCESSED\n* DATA ZONE INFORMATION\nNSQ_INLEN DS   CL4   IN      LENGTH OF DATA ZONE SUPPLIED BY CALLER\n*                            (FOR ALL OPERATIONS)\nNSQ_OUTLN DS   CL4   OUT     LENGTH OF DATA COPIED INTO ZONE BY NOSQLZ\n*                            (ONLY FOR \"READ\" OPERATIONS)\n* ERROR INFORMATION\nNSQ_RETCD DS   CL4           RETURN CODE\nNSQ_MESSG DS   CL100         ERROR MESSAGE (IF RETURN CODE NOT ZERO)\n* KEY PARAMETER\nNSQ_KYLEN DS   CL2           LENGTH OF KEY (1-250)\nNSQ_KYVAL DC   XL250'00'     VALUE OF KEY\n*\n         LTORG\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COBCREAT": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00G\\x01\\x14\\x08\\x8f\\x01\\x14\\x08\\x9f\\x11\\x03\\x00C\\x00:\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2014-03-29T00:00:00", "modifydate": "2014-03-30T11:03:47", "lines": 67, "newlines": 58, "modlines": 0, "user": "IBMUSER"}, "text": "CBL LIB,QUOTE\n      *MODULE/FILE NAME: COBCREAT\n      **************************************************\n      **                                              **\n      ** COBCREAT - SAMPLE PROGRAM TO DEMONSTRATE     **\n      **  HOW NOSQLZ CREATE IS WORKING.               **\n      **                                              **\n      **************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COBCREAT.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       FILE SECTION.\n      ************************************************\n       WORKING-STORAGE SECTION.\n      ************************************************\n       01  NSQ-BLOCK.\n           02 NSQ-VRSN             PIC X    VALUE '1'.\n           02 NSQ-OPT              PIC X.\n           02 NSQ-ACT              PIC X(8).\n           02 NSQ-TBLNM            PIC X(8).\n           02 NSQ-INLEN            PIC S9(5) COMP.\n           02 NSQ-OUTLN            PIC S9(5) COMP.\n           02 NSQ-RETCD            PIC S9(5) COMP VALUE 0.\n           02 NSQ-MESSG            PIC X(100) VALUE SPACES.\n           02 NSQ-KYLEN            PIC S9(2) COMP VALUE 0.\n           02 NSQ-KYVAL.\n              05 NSQ-KYVAL75       PIC X(75) VALUE SPACES.\n              05 FILLER            PIC X(175).\n      ************************************************\n       01  INZONE                 PIC X(50) VALUE '00000'.\n      ************************************************\n       01  DREAMLAND.\n           02  KEY-CITY    PIC X(57)  VALUE 'Dreamland city'.\n           02  KEY-STATE   PIC X(18)  VALUE 'Nevada'.\n       01  DBCITIES                PIC X(8) VALUE 'DBCITIES'.\n      ************************************************\n       PROCEDURE DIVISION.\n      ************************************************\n      *\n      *  DIRECT ACCESS ON DBCITIES\n      *\n           DISPLAY '** TESTING CREATION OF A GIVEN KEY'.\n           MOVE 75           TO NSQ-KYLEN.\n           MOVE 50           TO NSQ-INLEN.\n           MOVE DREAMLAND    TO NSQ-KYVAL.\n           MOVE 'CREATE'     TO NSQ-ACT.\n           MOVE DBCITIES     TO NSQ-TBLNM.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK, INZONE.\n      *\n      *  TESTING RC\n      *\n           IF NSQ-RETCD NOT EQUAL 0    THEN\n              DISPLAY 'Key= ' NSQ-KYVAL75\n              DISPLAY 'CREATE RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n      *\n      *  MUST COMMIT, OTHERWISE CREATE NOT DONE\n      *\n           MOVE 'COMMIT'     TO NSQ-ACT.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK.\n           IF NSQ-RETCD NOT EQUAL 0    THEN\n              DISPLAY 'COMMIT RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COBDELET": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x008\\x01\\x14\\x08\\x8f\\x01\\x14\\x08\\x8f\\x19$\\x00@\\x00@\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-29T00:00:00", "modifydate": "2014-03-29T19:24:38", "lines": 64, "newlines": 64, "modlines": 0, "user": "IBMUSER"}, "text": "CBL LIB,QUOTE\n      *MODULE/FILE NAME: COBDELET\n      **************************************************\n      **                                              **\n      ** COBDELET - SAMPLE PROGRAM TO DEMONSTRATE     **\n      **  HOW NOSQLZ DELETE IS WORKING.               **\n      **                                              **\n      **************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COBDELET.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       FILE SECTION.\n      ************************************************\n       WORKING-STORAGE SECTION.\n      ************************************************\n       01  NSQ-BLOCK.\n           02 NSQ-VRSN             PIC X    VALUE '1'.\n           02 NSQ-OPT              PIC X.\n           02 NSQ-ACT              PIC X(8).\n           02 NSQ-TBLNM            PIC X(8).\n           02 NSQ-INLEN            PIC S9(5) COMP.\n           02 NSQ-OUTLN            PIC S9(5) COMP.\n           02 NSQ-RETCD            PIC S9(5) COMP VALUE 0.\n           02 NSQ-MESSG            PIC X(100) VALUE SPACES.\n           02 NSQ-KYLEN            PIC S9(2) COMP VALUE 0.\n           02 NSQ-KYVAL.\n              05 NSQ-KYVAL75       PIC X(75) VALUE SPACES.\n              05 FILLER            PIC X(175).\n      ************************************************\n       01  DREAMLAND.\n           02  KEY-CITY    PIC X(57)  VALUE 'Dreamland city'.\n           02  KEY-STATE   PIC X(18)  VALUE 'Nevada'.\n       01  DBCITIES                PIC X(8) VALUE 'DBCITIES'.\n      ************************************************\n       PROCEDURE DIVISION.\n      ************************************************\n      *\n      *  DIRECT ACCESS ON DBCITIES\n      *\n           DISPLAY '** TESTING DELETE OF A GIVEN KEY'.\n           MOVE 75           TO NSQ-KYLEN.\n           MOVE DREAMLAND    TO NSQ-KYVAL.\n           MOVE 'DELETE'     TO NSQ-ACT.\n           MOVE DBCITIES     TO NSQ-TBLNM.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK.\n      *\n      *  TESTING RC\n      *\n           IF NSQ-RETCD NOT EQUAL 0    THEN\n              DISPLAY 'Key= ' NSQ-KYVAL75\n              DISPLAY 'DELETE RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n      *\n      *  MUST COMMIT, OTHERWISE DELETE NOT DONE\n      *\n           MOVE 'COMMIT'     TO NSQ-ACT.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK.\n           IF NSQ-RETCD NOT EQUAL 0    THEN\n              DISPLAY 'COMMIT RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COBREAD": {"ttr": 26, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00&\\x01\\x14\\x07\\x9f\\x01\\x14\\x08o\\x19\\x03\\x00A\\x00H\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "2014-03-20T00:00:00", "modifydate": "2014-03-27T19:03:26", "lines": 65, "newlines": 72, "modlines": 0, "user": "IBMUSER"}, "text": "CBL LIB,QUOTE\n      *MODULE/FILE NAME: COBREAD\n      **************************************************\n      **                                              **\n      ** COBREAD - SAMPLE PROGRAM TO DEMONSTRATE      **\n      **  HOW NOSQLZ DIRECT READ IS WORKING.          **\n      **                                              **\n      **************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COBREAD.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       FILE SECTION.\n      ************************************************\n       WORKING-STORAGE SECTION.\n      ************************************************\n       01  NSQ-BLOCK.\n           02 NSQ-VRSN             PIC X    VALUE '1'.\n           02 NSQ-OPT              PIC X    VALUE 'N'.\n           02 NSQ-ACT              PIC X(8).\n           02 NSQ-TBLNM            PIC X(8).\n           02 NSQ-INLEN            PIC S9(5) COMP VALUE 100.\n           02 NSQ-OUTLN            PIC S9(5) COMP.\n           02 NSQ-RETCD            PIC S9(5) COMP VALUE 0.\n           02 NSQ-MESSG            PIC X(100) VALUE SPACES.\n           02 NSQ-KYLEN            PIC S9(2) COMP VALUE 0.\n           02 NSQ-KYVAL.\n              05 NSQ-KYVAL75       PIC X(75) VALUE SPACES.\n              05 FILLER            PIC X(175).\n      ************************************************\n       01  OUTZONE                 PIC X(100) VALUE SPACES.\n      ************************************************\n       01  MIAMI.\n           02  MIAMI-CITY  PIC X(57)  VALUE 'Miami city'.\n           02  MIAMI-STATE PIC X(18)  VALUE 'Florida'.\n       01  DBCITIES                PIC X(8) VALUE 'DBCITIES'.\n      ************************************************\n       PROCEDURE DIVISION.\n      ************************************************\n      *\n      *  DIRECT ACCESS ON DBCITIES\n      *\n           DISPLAY '** TESTING DIRECT ACCESS FOR A GIVEN KEY'.\n           MOVE 75           TO NSQ-KYLEN.\n           MOVE 55           TO NSQ-INLEN.\n           MOVE MIAMI        TO NSQ-KYVAL.\n           MOVE 'READ'       TO NSQ-ACT.\n           MOVE DBCITIES     TO NSQ-TBLNM.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK, OUTZONE.\n      *\n      *  READ OK OR MAYBE TRUNCATED\n      *\n           IF NSQ-RETCD NOT > 4  THEN\n              DISPLAY 'Key= ' NSQ-KYVAL75\n              DISPLAY 'Data=' OUTZONE\n              DISPLAY 'Data length=' NSQ-OUTLN.\n      *\n      *  READ IN ERROR\n      *\n           IF NSQ-RETCD >= 4     THEN\n              DISPLAY 'READ ACCESS, RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COBREADS": {"ttr": 28, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x02\\x01\\x14\\x08o\\x01\\x14\\x08o\\x18H\\x00;\\x00=\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-27T18:48:02", "lines": 59, "newlines": 61, "modlines": 0, "user": "IBMUSER"}, "text": "CBL LIB,QUOTE\n      *MODULE/FILE NAME: COBREADS\n      **************************************************\n      **                                              **\n      ** COBREADS - SAMPLE PROGRAM TO DEMONSTRATE     **\n      **  HOW NOSQLZ SEQUENTIAL READ IS WORKING.      **\n      **                                              **\n      **************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COBREADS.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       FILE SECTION.\n      ************************************************\n       WORKING-STORAGE SECTION.\n      ************************************************\n       01  NSQ-BLOCK.\n           02 NSQ-VRSN             PIC X    VALUE '1'.\n           02 NSQ-OPT              PIC X    VALUE 'N'.\n           02 NSQ-ACT              PIC X(8).\n           02 NSQ-TBLNM            PIC X(8).\n           02 NSQ-INLEN            PIC S9(5) COMP VALUE 100.\n           02 NSQ-OUTLN            PIC S9(5) COMP.\n           02 NSQ-RETCD            PIC S9(5) COMP VALUE 0.\n           02 NSQ-MESSG            PIC X(100) VALUE SPACES.\n           02 NSQ-KYLEN            PIC S9(2) COMP VALUE 0.\n           02 NSQ-KYVAL.\n              05 NSQ-KYVAL75       PIC X(75) VALUE SPACES.\n              05 FILLER            PIC X(175).\n      ************************************************\n       01  OUTZONE                 PIC X(100) VALUE SPACES.\n      ************************************************\n       01  DBSTATES                PIC X(8) VALUE 'DBSTATES'.\n       01  STATE-COUNT             PIC S9(5) COMP VALUE 0.\n      ************************************************\n       PROCEDURE DIVISION.\n      ************************************************\n      *\n      *  SEQUENTIAL ACCESS ON DBSTATES, CALLING NOSQLZ UNTIL RC>0\n      *\n           DISPLAY '** TESTING SEQUENTIAL ACCESS'.\n           MOVE 'READSEQ '   TO NSQ-ACT.\n           MOVE DBSTATES     TO NSQ-TBLNM.\n       LOOP.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK, OUTZONE.\n           IF NSQ-RETCD = 0   THEN\n              DISPLAY 'Key length=' NSQ-KYLEN\n              DISPLAY 'Key=' NSQ-KYVAL75\n              DISPLAY 'Data length=' NSQ-OUTLN\n              DISPLAY 'Data=' OUTZONE\n              DISPLAY '----------------------------------------------'\n              ADD  1  TO STATE-COUNT\n              GO TO LOOP.\n           DISPLAY 'END OF PROGRAM, RC=' NSQ-RETCD.\n           DISPLAY NSQ-MESSG.\n           DISPLAY STATE-COUNT ' records have been read'.\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COBREADT": {"ttr": 30, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00 \\x01\\x14\\x08o\\x01\\x14\\x08o#\\x07\\x002\\x00>\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-27T23:07:20", "lines": 50, "newlines": 62, "modlines": 0, "user": "IBMUSER"}, "text": "CBL LIB,QUOTE\n      *MODULE/FILE NAME: COBREADT\n      **************************************************\n      **                                              **\n      ** COBREADT - SAMPLE PROGRAM TO DEMONSTRATE     **\n      **  HOW NOSQLZ TESTING READ IS WORKING.         **\n      **                                              **\n      **************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COBREADT.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       FILE SECTION.\n      ************************************************\n       WORKING-STORAGE SECTION.\n      ************************************************\n       01  NSQ-BLOCK.\n           02 NSQ-VRSN             PIC X    VALUE '1'.\n           02 NSQ-OPT              PIC X    VALUE 'N'.\n           02 NSQ-ACT              PIC X(8).\n           02 NSQ-TBLNM            PIC X(8).\n           02 NSQ-INLEN            PIC S9(5) COMP.\n           02 NSQ-OUTLN            PIC S9(5) COMP.\n           02 NSQ-RETCD            PIC S9(5) COMP VALUE 0.\n           02 NSQ-MESSG            PIC X(100) VALUE SPACES.\n           02 NSQ-KYLEN            PIC S9(2) COMP VALUE 0.\n           02 NSQ-KYVAL.\n              05 NSQ-KYVAL75       PIC X(75) VALUE SPACES.\n              05 FILLER            PIC X(175).\n      ************************************************\n       01  MIAMI.\n           02  MIAMI-CITY  PIC X(57)  VALUE 'Miami city'.\n           02  MIAMI-STATE PIC X(18)  VALUE 'Florida'.\n       01  DBCITIES                PIC X(8) VALUE 'DBCITIES'.\n      ************************************************\n       PROCEDURE DIVISION.\n      ************************************************\n      *\n      *  DIRECT ACCESS ON DBCITIES\n      *\n           DISPLAY '** TESTING WHETHER A GIVEN KEY EXISTS'.\n           MOVE 75           TO NSQ-KYLEN.\n           MOVE MIAMI        TO NSQ-KYVAL.\n           MOVE 'READTEST'   TO NSQ-ACT.\n           MOVE DBCITIES     TO NSQ-TBLNM.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK.\n           DISPLAY 'RC=' NSQ-RETCD ' ' NSQ-MESSG.\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COBUPDAT": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x02\\x01\\x14\\x08\\x8f\\x01\\x14\\x08\\x8f\\x19%\\x00C\\x00C\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-29T00:00:00", "modifydate": "2014-03-29T19:25:02", "lines": 67, "newlines": 67, "modlines": 0, "user": "IBMUSER"}, "text": "CBL LIB,QUOTE\n      *MODULE/FILE NAME: COBUPDAT\n      **************************************************\n      **                                              **\n      ** COBUPDAT - SAMPLE PROGRAM TO DEMONSTRATE     **\n      **  HOW NOSQLZ UPDATE IS WORKING.               **\n      **                                              **\n      **************************************************\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COBUPDAT.\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n       DATA DIVISION.\n       FILE SECTION.\n      ************************************************\n       WORKING-STORAGE SECTION.\n      ************************************************\n       01  NSQ-BLOCK.\n           02 NSQ-VRSN             PIC X    VALUE '1'.\n           02 NSQ-OPT              PIC X.\n           02 NSQ-ACT              PIC X(8).\n           02 NSQ-TBLNM            PIC X(8).\n           02 NSQ-INLEN            PIC S9(5) COMP.\n           02 NSQ-OUTLN            PIC S9(5) COMP.\n           02 NSQ-RETCD            PIC S9(5) COMP VALUE 0.\n           02 NSQ-MESSG            PIC X(100) VALUE SPACES.\n           02 NSQ-KYLEN            PIC S9(2) COMP VALUE 0.\n           02 NSQ-KYVAL.\n              05 NSQ-KYVAL75       PIC X(75) VALUE SPACES.\n              05 FILLER            PIC X(175).\n      ************************************************\n       01  INZONE                 PIC X(50) VALUE '11111'.\n      ************************************************\n       01  DREAMLAND.\n           02  KEY-CITY    PIC X(57)  VALUE 'Dreamland city'.\n           02  KEY-STATE   PIC X(18)  VALUE 'Nevada'.\n       01  DBCITIES                PIC X(8) VALUE 'DBCITIES'.\n      ************************************************\n       PROCEDURE DIVISION.\n      ************************************************\n      *\n      *  DIRECT ACCESS ON DBCITIES\n      *\n           DISPLAY '** TESTING UPDATE OF A GIVEN KEY'.\n           MOVE 75           TO NSQ-KYLEN.\n           MOVE 50           TO NSQ-INLEN.\n           MOVE DREAMLAND    TO NSQ-KYVAL.\n           MOVE 'UPDATE'     TO NSQ-ACT.\n           MOVE DBCITIES     TO NSQ-TBLNM.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK, INZONE.\n      *\n      *  TESTING RC\n      *\n           IF NSQ-RETCD NOT EQUAL 0    THEN\n              DISPLAY 'Key= ' NSQ-KYVAL75\n              DISPLAY 'UPDATE RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n      *\n      *  MUST COMMIT, OTHERWISE UPDATE NOT DONE\n      *\n           MOVE 'COMMIT'     TO NSQ-ACT.\n           CALL 'NSQTCAPI' USING NSQ-BLOCK.\n           IF NSQ-RETCD NOT EQUAL 0    THEN\n              DISPLAY 'COMMIT RC=' NSQ-RETCD\n              DISPLAY NSQ-MESSG.\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DBCITIES": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00)\\x01\\x14\\t?\\x01\\x14\\t?\\x11$\\x00G\\x00#\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-04-03T00:00:00", "modifydate": "2014-04-03T11:24:29", "lines": 71, "newlines": 35, "modlines": 0, "user": "IBMUSER"}, "text": "//DBCITIES JOB 1,'DBCITIES',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//* CREATE AND INITIALIZE DATABASE PRD1.DBCITIES ON VOL VVVVVV\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  NSQCNTL='NSQ.NSQCNTL'\n//   SET  DBDSN='PRD1.DBCITIES'\n//*\n//* TAILOR TABLE SIZE\n//*\n//TAILOR    EXEC PGM=IRXJCL,PARM='ZCOMP 400 82000'\n//SYSEXEC   DD  DISP=SHR,DSN=&NSQCNTL\n//SYSTSPRT  DD  SYSOUT=*\n//SYSTSIN   DD  DUMMY\n//NSQOUTP   DD  DISP=(NEW,PASS),DSN=&&OUTP,UNIT=SYSALLDA,\n//          SPACE=(TRK,1),LRECL=80,RECFM=FB,DSORG=PS\n//NSQOUTI   DD  DISP=(NEW,PASS),DSN=&&OUTI,UNIT=SYSALLDA,\n//          SPACE=(TRK,1),LRECL=80,RECFM=FB,DSORG=PS\n//*\n//* CREATE VSAM CLUSTER\n//*\n//DEFINE1  EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n  DELETE      'PRD1.DBCITIES'\n  SET  MAXCC = 0\n  DEF CL(NAME('PRD1.DBCITIES') -\n      NUMBERED    VOLUME(VVVVVV)  SHR(4 4)                  -\n//         DD   DISP=SHR,DSN=&&OUTI\n//*\n//* INITIALIZE VSAM DATASET\n//*\n//INIT2    EXEC PGM=NSQDUT01,REGION=80M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//NSQOUT   DD   DISP=SHR,DSN=PRD1.DBCITIES\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   *\nTBLNAME=DBCITIES      MUST MATCH THE DBNAME\nHASHALG=3            (HASH ALGORITHM, DEFAULT IS 1 FOR SHA-1)\n//         DD   DISP=SHR,DSN=&&OUTP\n//*\n//* PREPARE DATA TO LOAD FROM SEQUENTIAL FILE\n//*\n//PREPARE  EXEC PGM=IKJEFT01\n//SYSTSPRT DD   SYSOUT=*\n//SYSTSIN  DD   *\n PROF NOPREF\n RECEIVE INDA('NSQ.NSQTEST(SAMPDATA)')  NODISPLAY NONAMES\n DA('PRD1.NSQ.NSQSAMP.SEQ')  VOL(VVVVVV)\n//*\n//* LOAD DATA FROM SEQUENTIAL FILE TO NOSQLZ DATABASE\n//*\n//LOAD     EXEC PGM=NSQDUT02\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//NSQOUT   DD   DISP=SHR,DSN=&DBDSN           OUTPUT DATABASE\n//SYSUT1   DD   DISP=SHR,DSN=PRD1.NSQ.NSQSAMP.SEQ   INPUT SEQ. DATASET\n//SYSIN    DD   *\n* DUPLICATE KEYS ARE NOT INSERTED. THE FIRST ONE IS KEPT.\nDUP=IGNORE                   IGNORE DUPLICATE KEYS (FIRST ONE WINS)\nKEYLEN=75\nDATALEN=55\n//*\n//* DISPLAY SOME STATISTICS FOR THE LOADED DATABASE\n//*\n//STATS    EXEC PGM=NSQDUT03,REGION=800M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//NSQIN    DD   DISP=SHR,DSN=&DBDSN,\n//         AMP=('BUFND=200')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBSTATES": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Q\\x01\\x14\\t?\\x01\\x14\\t?\\x11\\x15\\x00m\\x00s\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-04-03T00:00:00", "modifydate": "2014-04-03T11:15:51", "lines": 109, "newlines": 115, "modlines": 0, "user": "IBMUSER"}, "text": "//DBSTATES JOB 1,'DBSTATES',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//* CREATE AND INITIALIZE DATABASE PRD1.DBSTATES ON VOL VVVVVV\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  NSQCNTL='NSQ.NSQCNTL'\n//*\n//* TAILOR TABLE SIZE\n//*\n//TAILOR    EXEC PGM=IRXJCL,PARM='ZCOMP 400 60'\n//*               1ST PARM: KEYLEN+DATALEN  2ND PARM: RECORD NUMBER\n//SYSEXEC   DD  DISP=SHR,DSN=&NSQCNTL\n//SYSTSPRT  DD  SYSOUT=*\n//SYSTSIN   DD  DUMMY\n//NSQOUTP   DD  DISP=(NEW,PASS),DSN=&&OUTP,UNIT=SYSALLDA,\n//          SPACE=(TRK,1),LRECL=80,RECFM=FB,DSORG=PS\n//NSQOUTI   DD  DISP=(NEW,PASS),DSN=&&OUTI,UNIT=SYSALLDA,\n//          SPACE=(TRK,1),LRECL=80,RECFM=FB,DSORG=PS\n//*\n//* CREATE VSAM CLUSTER\n//*\n//DEFINE1  EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n  DELETE      'PRD1.DBSTATES'\n  SET  MAXCC = 0\n  DEF CL(NAME('PRD1.DBSTATES') -\n      NUMBERED    VOLUME(VVVVVV)  SHR(4 4)                  -\n//         DD   DISP=SHR,DSN=&&OUTI\n//*\n//* INITIALIZE VSAM DATASET\n//*\n//INIT2    EXEC PGM=NSQDUT01,REGION=80M\n//STEPLIB  DD   DISP=SHR,DSN=&NSQLOAD\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   *\nTBLNAME=DBSTATES      MUST MATCH THE DBNAME\nHASHALG=3            (HASH ALGORITHM, DEFAULT IS 1 FOR SHA-1)\n//         DD   DISP=SHR,DSN=&&OUTP\n//NSQOUT   DD   DISP=SHR,DSN=PRD1.DBSTATES\n//*\n//LOAD3    EXEC PGM=NSQDUT02\n//STEPLIB  DD   DISP=SHR,DSN=&NSQLOAD\n//SYSUDUMP DD   SYSOUT=*\n//NSQOUT   DD   DISP=SHR,DSN=PRD1.DBSTATES\n//SYSUT1   DD   *\nAlabama                                                  Alabama            AL\nAlaska                                                   Alaska             AK\nArizona                                                  Arizona            AZ\nArkansas                                                 Arkansas           AR\nCalifornia                                               California         AK\nColorado                                                 Colorado           CA\nConnecticut                                              Connecticut        CT\nDelaware                                                 Delaware           DE\nDistrict of Columbia                                     District of Columb DC\nFlorida                                                  Florida            FL\nGeorgia                                                  Georgia            GA\nHawaii                                                   Hawaii             HI\nIdaho                                                    Idaho              ID\nIllinois                                                 Illinois           IL\nIndiana                                                  Indiana            IN\nIowa                                                     Iowa               IA\nKansas                                                   Kansas             KS\nKentucky                                                 Kentucky           KY\nLouisiana                                                Louisiana          LA\nMaine                                                    Maine              ME\nMaryland                                                 Maryland           MD\nMassachusetts                                            Massachusetts      MA\nMichigan                                                 Michigan           MI\nMinnesota                                                Minnesota          MN\nMississippi                                              Mississippi        MS\nMissouri                                                 Missouri           MO\nMontana                                                  Montana            MT\nNebraska                                                 Nebraska           NE\nNevada                                                   Nevada             NV\nNew Hampshire                                            New Hampshire      NH\nNew Jersey                                               New Jersey         NJ\nNew Mexico                                               New Mexico         NM\nNew York                                                 New York           NY\nNorth Carolina                                           North Carolina     NC\nNorth Dakota                                             North Dakota       ND\nOhio                                                     Ohio               OH\nOklahoma                                                 Oklahoma           OK\nOregon                                                   Oregon             OR\nPennsylvania                                             Pennsylvania       PA\nRhode Island                                             Rhode Island       RI\nSouth Carolina                                           South Carolina     SC\nSouth Dakota                                             South Dakota       SD\nTennessee                                                Tennessee          TN\nTexas                                                    Texas              TX\nUtah                                                     Utah               UT\nVermont                                                  Vermont            VT\nVirginia                                                 Virginia           VA\nWashington                                               Washington         WA\nWest Virginia                                            West Virginia      WV\nWisconsin                                                Wisconsin          WI\nWyoming                                                  Wyoming            WY\n//SYSIN    DD   *\n* DUPLICATE KEYS ARE NOT INSERTED. THE FIRST ONE IS KEPT.\nDUP=IGNORE                   IGNORE DUPLICATE KEYS (FIRST ONE WINS)\nKEYLEN=75\nDATALEN=55\n//*\n//STATS    EXEC PGM=NSQDUT03,REGION=800M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//NSQIN    DD   DISP=SHR,DSN=PRD1.DBSTATES,\n//         AMP=('BUFND=200')\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLASM": {"ttr": 76038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00'\\x01\\x14\\tO\\x01\\x14\\tO\\t)\\x00\\x1c\\x00\\x18\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-04-04T00:00:00", "modifydate": "2014-04-04T09:29:27", "lines": 28, "newlines": 24, "modlines": 0, "user": "IBMUSER"}, "text": "//JCLASM   JOB 1,JCLASM,MSGLEVEL=(1,1),MSGCLASS=X,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//   SET NSQLOAD='NSQ.NSQLOAD'\n//   SET NSQTEST='NSQ.NSQTEST'\n//*\n//ASSEMBLY EXEC    PGM=ASMA90,PARM='OBJECT,NODECK,ALIGN' ,RENT'\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(4,3))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(4,3))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(4,3))\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSLIN   DD  DSN=&&OBJ,DISP=(,PASS),\n//         UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSIN    DD  DISP=SHR,DSN=&NSQTEST.(ASMREAD)\n//*\n//LINKEDIT EXEC PGM=IEWL,PARM='XREF,LIST'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSLIN   DD  DSN=*.ASSEMBLY.SYSLIN,DISP=(OLD,DELETE)\n//SYSLIB   DD  DSN=&NSQLOAD,DISP=SHR\n//SYSLMOD  DD  DSN=&&LOAD(ASMREAD),DISP=(NEW,PASS),\n//         UNIT=SYSALLDA,SPACE=(CYL,(1,1,1))\n//*\n//TEST     EXEC PGM=ASMREAD\n//STEPLIB  DD  DISP=SHR,DSN=&&LOAD\n//NSQLPRD1 DD  DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLCOB": {"ttr": 263, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x008\\x01\\x14\\x07\\x9f\\x01\\x14\\t\\x1f\\x15E\\x000\\x000\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2014-03-20T00:00:00", "modifydate": "2014-04-01T15:45:38", "lines": 48, "newlines": 48, "modlines": 0, "user": "IBMUSER"}, "text": "//JCLCOB   JOB 1,JCLCOB,MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=64M\n//*\n//*% SAMPLE PROGRAM FOR COMPILING AND EXECUTING A COBOL PROGRAM\n//*\n//   SET PROG=COBREADT\n//*\n//   SET NSQLOAD='NSQ.NSQLOAD'\n//   SET ASMLIB='NSQ.NSQTEST'              COBOL LIBRARY\n//   SET COMPILER='IGY.SIGYCOMP'\n//   SET CEELKED='CEE.SCEELKED'        LE/370 LINK LIBRARY\n//*\n//*********************************************************************\n//* COMPILE\n//*********************************************************************\n//COMPILE  EXEC PGM=IGYCRCTL,\n// PARM=('LIST,BUFSIZE(24K),XREF,VBREF,RENT,NODYNAM,MAP')\n//STEPLIB  DD   DSN=&COMPILER,DISP=SHR\n//SYSPRINT DD   SYSOUT=*\n//SYSLIN   DD   DSNAME=&LOADSET,UNIT=SYSALLDA,DISP=(MOD,PASS),\n//             SPACE=(TRK,(3,3))\n//SYSUT1   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSIN    DD   DISP=SHR,DSN=&ASMLIB.(&PROG)\n//*\n//* LINK EDIT\n//*\n//LINK     EXEC PGM=IEWL,PARM='LIST,XREF,MAP,AMODE(31),RMODE(ANY)'\n//SYSLIB   DD   DSNAME=&CEELKED,DISP=SHR\n//         DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUT1   DD   UNIT=SYSALLDA,SPACE=(CYL,(1,1))\n//SYSPRINT DD   SYSOUT=*\n//SYSLIN   DD   DSNAME=&LOADSET,DISP=(OLD,DELETE)\n//SYSLMOD  DD   DSN=&&LIB(&PROG),DISP=(NEW,PASS),\n//  SPACE=(CYL,(1,1,5)),UNIT=SYSALLDA\n//*\n//* EXECUTE\n//*\n//EXECUTE  EXEC PGM=&PROG\n//STEPLIB  DD   DSN=&&LIB,DISP=SHR\n//         DD   DSN=&NSQLOAD,DISP=SHR\n//SYSOUT   DD   SYSOUT=*,LRECL=133,RECFM=F\n//NSQLPRD1 DD   DUMMY                <--- \"PRD1\" = NOSQLZ SYSTEM NAME\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NOSQLZ": {"ttr": 265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x12\\x01\\x14\\x08o\\x01\\x14\\x08\\x8f\\x18H\\x00V\\x00V\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-29T18:48:12", "lines": 86, "newlines": 86, "modlines": 0, "user": "IBMUSER"}, "text": "             /* REXX INTERFACE FOR NOSQLZ FUNCTION CALLS */\n  /*                                                                 */\n  /* PARAMETERS:                                                     */\n  /* - ACTION (READ, UPDATE, CREATE, DELETE, COMMIT...)              */\n  /* - DBNAME (8C)                                                   */\n  /* - KEY (1-250C)                                                  */\n  /* - READ OPTION (IF READ ACTION) OR DATA TO CREATE/UPDATE         */\n  /*                                                                 */\nNSQ_VRSN = '1'\nNSQ_OPT  = 'N'\nNSQ_ACT  = LEFT(ARG(1),8)\nNSQ_TBLNM = LEFT(ARG(2),8)\nNSQ_KYVAL = ARG(3)                  /* VALUE OF KEY  */\nREAD_OPT  = ARG(4)                  /* READ OPTION IF ANY */\nNSQ_RETCD = '00000000'X\nNSQ_OUTLN = '00000000'X\nNSQ_INLEN = '00000000'X\nNSQ_MESSG = COPIES(' ',100)\nFILLER    = COPIES('00'X,250)\n\n/* SET READ OPTION      */\nIF NSQ_ACT = 'READ    ' THEN DO\n   IF  READ_OPT <> '' THEN NSQ_OPT = LEFT(READ_OPT,1)\n   END\n\n/* SET LENGTHS OF ZONES */\n\nNSQ_KYLEN = D2C(LENGTH(NSQ_KYVAL),2)\nIF  ARG(3) = '' THEN NSQ_KYLEN = '0000'X\nIF NSQ_ACT = 'READ    ' | NSQ_ACT = 'READSEQ ' THEN DO\n   OUTPUT_ZN = COPIES(' ',1000000)\n   NSQ_INLEN = D2C(LENGTH(OUTPUT_ZN),4)  /* LENGTH OF RECEIVING ZONE */\n   END\nIF NSQ_ACT = 'CREATE  ' | NSQ_ACT = 'UPDATE  '  THEN DO\n   INPUT_ZN = ARG(4)\n   NSQ_INLEN = D2C(LENGTH(INPUT_ZN),4)  /* LENGTH OF PASSED ZONE */\n   END\n\n /* PREPARE PARAMETER BEFORE CALL */\n\nPARMBLK= NSQ_VRSN||NSQ_OPT||NSQ_ACT||NSQ_TBLNM||,\n    NSQ_INLEN||NSQ_OUTLN||NSQ_RETCD||NSQ_MESSG||NSQ_KYLEN||NSQ_KYVAL||,\n    FILLER\nALLPARM = \"NSQTCAPI  PARMBLK\"    /* ONLY 1 PARAMETER BY DEFAULT */\nIF NSQ_ACT = 'READ    '  | NSQ_ACT = 'READSEQ ' THEN ,\n    ALLPARM = \"NSQTCAPI  PARMBLK  OUTPUT_ZN\"\nIF NSQ_ACT = 'CREATE  '  | NSQ_ACT = 'UPDATE  '  THEN ,\n    ALLPARM = \"NSQTCAPI  PARMBLK   INPUT_ZN\"\n\n /* CALL, GET RC AND ERROR MESSAGE */\n\nADDRESS LINKPGM ALLPARM\nNSQ_MESSG = SUBSTR(PARMBLK,31,100)\nNSQ_RETCD = SUBSTR(PARMBLK,27,4)\n\n/* READ MUST RETURN READ ZONE */\n\nIF NSQ_ACT = 'READ    '   THEN DO\nIF C2D(NSQ_RETCD) = 0 THEN DO\n   NSQ_OUTLN = SUBSTR(PARMBLK,23,4)\n/* SAY C2D(NSQ_OUTLN) 'BYTES READ'  */\n   READ_ZONE=LEFT(OUTPUT_ZN,C2D(NSQ_OUTLN))\n   PUSH READ_ZONE                  /* PUT ZONE IN THE STACK */\n   END\n   END\n\n/* READSEQ MUST RETURN READ ZONE AND KEY VALUE */\n\nIF NSQ_ACT = 'READSEQ ' THEN DO\nIF C2D(NSQ_RETCD) = 0 THEN DO\n   NSQ_OUTLN = SUBSTR(PARMBLK,23,4)\n   NSQ_KYLEN = C2D(SUBSTR(PARMBLK,131,2))\n   NSQ_KYVAL = SUBSTR(PARMBLK,133,NSQ_KYLEN)\n/* SAY C2D(NSQ_OUTLN) 'BYTES READ'  */\n   READ_ZONE='K='NSQ_KYVAL' D='LEFT(OUTPUT_ZN,C2D(NSQ_OUTLN))\n   PUSH READ_ZONE                  /* PUT ZONE IN THE STACK */\n   END\n   END\n\n/* SAY NSQ_ACT 'RC ='C2X(NSQ_RETCD)\n   SAY NSQ_MESSG */\n   IF NSQ_ACT = 'READTEST' THEN SAY NSQ_MESSG\n   IF NSQ_ACT = 'COMMIT  ' THEN SAY NSQ_MESSG\n   RETC = C2D(NSQ_RETCD)\n   IF  RETC > 8 & RETC <> 14 THEN SAY 'ERROR, RC='RETC '-' NSQ_MESSG\nRETURN C2D(NSQ_RETCD)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXCREAT": {"ttr": 76291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x04\\x01\\x14\\x08\\x8f\\x01\\x14\\to\\x11D\\x00)\\x00(\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2014-03-29T00:00:00", "modifydate": "2014-04-06T11:44:04", "lines": 41, "newlines": 40, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX       SAVE;TSO EX 'NSQ.NSQTEST(REXCREAT)'           */\n\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"   /* Nosqlz system PRD1 */\n\n  TABLE = 'DBCITIES'\n  kv='Dreamland city                                           Nevada'\n  kv = left(kv,75)\n  data= left('Created on 'date() time(),70)   /* Data value  */\n\n /* CREATE RECORD       */\n\n RETC=NOSQLZ(CREATE, TABLE,  kv, data)     /* CREATE record  */\n IF   RETC = 0 THEN ,\n      DO\n\n         /* COMMIT ALL UPDATES  */\n         RETC=NOSQLZ(COMMIT)               /* COMMIT updates */\n         IF   RETC > 0 THEN ,\n              DO\n              SAY 'COMMIT ERROR, RC='RETC\n              EXIT\n              END\n      END\n               ELSE ,\n      DO\n      SAY 'CREATE ERROR, RC='RETC\n      END\n\n /* READ RECORD IN ALL CASES */\n\n RETC=NOSQLZ(READ, TABLE,    kv)         /* current version */\n IF   RETC < 5 THEN ,\n      DO\n      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n      SAY 'READ RECORD, ZONE=' READ_ZONE\n      END\n               ELSE ,\n      DO\n      SAY 'READ ERROR, RC='RETC\n      END\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXDELET": {"ttr": 76293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\t\\x01\\x14\\x08\\x8f\\x01\\x14\\to\\x11D\\x00(\\x00(\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-03-29T00:00:00", "modifydate": "2014-04-06T11:44:09", "lines": 40, "newlines": 40, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX       SAVE;TSO EX 'NSQ.NSQTEST(REXDELET)'           */\n\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"   /* Nosqlz system PRD1 */\n\n  TABLE = 'DBCITIES'\n  kv='Dreamland city                                           Nevada'\n  kv = left(kv,75)\n\n /* DELETE RECORD       */\n\n RETC=NOSQLZ(DELETE, TABLE,  kv)           /* DELETE record  */\n IF   RETC = 0 THEN ,\n      DO\n\n         /* COMMIT ALL UPDATES  */\n         RETC=NOSQLZ(COMMIT)               /* COMMIT DELETE  */\n         IF   RETC > 0 THEN ,\n              DO\n              SAY 'COMMIT ERROR, RC='RETC\n              EXIT\n              END\n      END\n               ELSE ,\n      DO\n      SAY 'DELETE ERROR, RC='RETC\n      END\n\n /* TRY TO READ RECORD IN ALL CASES */\n\n RETC=NOSQLZ(READ, TABLE,    kv)         /* current version */\n IF   RETC < 5 THEN ,\n      DO\n      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n      SAY 'READ RECORD, ZONE=' READ_ZONE\n      END\n               ELSE ,\n      DO\n      SAY 'READ ERROR, RC='RETC\n      END\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXREAD": {"ttr": 76295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x15\\x01\\x14\\x08o\\x01\\x14\\to\\x11D\\x00\"\\x00\\x16\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-04-06T11:44:15", "lines": 34, "newlines": 22, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX       SAVE;TSO EX 'NSQ.NSQTEST(REXREAD)'            */\n\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"   /* Nosqlz system PRD1 */\n\n  TABLE = 'DBCITIES'\n  kv='Miami city                                               Florida'\n  kv = left(kv,75)\n\n /*    DIRECT  READ     */\n\n RETC=NOSQLZ(READ, TABLE,    kv)         /* newest version */\n IF   RETC < 5 THEN ,\n      DO\n      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n      SAY 'READ NEWEST, ZONE=' READ_ZONE\n      END\n               ELSE ,\n      DO\n      SAY 'READ ERROR, RC='RETC\n      END\n\n /* READ   2 */\n\n RETC=NOSQLZ(READ, TABLE,    kv, 'O')    /* oldest version */\n IF   RETC < 5 THEN ,\n      DO\n      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n      SAY 'READ OLDEST, ZONE=' READ_ZONE\n      END\n               ELSE ,\n      DO\n      SAY 'READ ERROR, RC='RETC\n      END\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXREADS": {"ttr": 76297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\"\\x01\\x14\\x08o\\x01\\x14\\to\\x11D\\x00\\x16\\x00\\x14\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-04-06T11:44:22", "lines": 22, "newlines": 20, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX       SAVE;TSO EX 'NSQ.NSQTEST(REXREADS)'        */\n   Call msg('OFF')\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"      /* Nosqlz system */\n   Call msg('ON')\n\n   TABLE = 'DBSTATES'\n\n  /* READ LOOP to read all STATES */\n    RETC = 0\n    readct = 0\n\n    DO WHILE RETC = 0\n      KEYVAL    = ''                      /* VALUE OF KEY  */\n      RETC=NOSQLZ(READSEQ, TABLE)\n      IF RETC < 5 THEN DO\n         PARSE PULL READ_ZONE             /* GET ZONE FROM STACK */\n         readct = readct + 1\n         SAY substr(READ_ZONE,3,18)       /* Only display key */\n         END\n      end\n\n  SAY readct 'states read'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXREADT": {"ttr": 76299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00'\\x01\\x14\\x08o\\x01\\x14\\to\\x11D\\x00\\r\\x00\\r\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-04-06T11:44:27", "lines": 13, "newlines": 13, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX       SAVE;TSO EX 'NSQ.NSQTEST(REXREADT)'            */\n\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"   /* Nosqlz system PRD1 */\n\n  TABLE = 'DBCITIES'\n  kv='Miami city                                               Florida'\n  kv = left(kv,75)\n\n /*   READ TEST         */\n\n RETC=NOSQLZ(READTEST, TABLE,    kv)\n SAY 'READ RC='RETC\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXUPDAT": {"ttr": 76301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x003\\x01\\x14\\x08\\x8f\\x01\\x14\\to\\x11D\\x00)\\x00%\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-29T00:00:00", "modifydate": "2014-04-06T11:44:33", "lines": 41, "newlines": 37, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX       SAVE;TSO EX 'NSQ.NSQTEST(REXUPDAT)'           */\n\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"   /* Nosqlz system PRD1 */\n\n  TABLE = 'DBCITIES'\n  kv='Dreamland city                                           Nevada'\n  kv = left(kv,75)\n  data= left('Updated on 'date() time(),70)   /* Data value  */\n\n /* UPDATE RECORD       */\n\n RETC=NOSQLZ(UPDATE, TABLE,  kv, data)     /* UPDATE record  */\n IF   RETC = 0 THEN ,\n      DO\n\n         /* COMMIT ALL UPDATES  */\n         RETC=NOSQLZ(COMMIT)               /* COMMIT updates */\n         IF   RETC > 0 THEN ,\n              DO\n              SAY 'COMMIT ERROR, RC='RETC\n              EXIT\n              END\n      END\n               ELSE ,\n      DO\n      SAY 'UPDATE ERROR, RC='RETC\n      END\n\n /* READ RECORD IN ALL CASES */\n\n RETC=NOSQLZ(READ, TABLE,    kv)         /* current version */\n IF   RETC < 5 THEN ,\n      DO\n      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n      SAY 'READ RECORD, ZONE=' READ_ZONE\n      END\n               ELSE ,\n      DO\n      SAY 'READ ERROR, RC='RETC\n      END\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXXCITY": {"ttr": 76036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00R\\x01\\x14\\t?\\x01\\x14\\t?\\x11S\\x00O\\x00O\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-04-03T00:00:00", "modifydate": "2014-04-03T11:53:52", "lines": 79, "newlines": 79, "modlines": 0, "user": "IBMUSER"}, "text": "      /* REXX exec run by:       TSO EX 'NSQ.NSQTEST(REXXCITY)'      */\n   Call msg('OFF')\n   ADDRESS TSO  \"ALLOC F(NSQLPRD1) DUMMY\"      /* PRD1 Nosqlz system */\n   Call msg('ON')\n\n  /* READ LOOP to read all STATES */\n    RETC = 0\n    readct = 0\n    states. = ''\n    DO WHILE RETC = 0\n      KEYVAL    = ''                      /* VALUE OF KEY  */\n      RETC=NOSQLZ(READSEQ, DBSTATES, KEYVAL)\n      IF RETC < 5 THEN DO\n         PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n         readct = readct + 1\n         states.readct = substr(READ_ZONE,3,18)\n      /* say states.readct */\n         END\n      end\n\n  say readct 'states read'\n  if readct = 0 then DO\n     say 'No states read from DB'\n     exit(16)\n     END\n\n  SAY 'Enter the name of a state / city / town / village in the USA:'\n  PULL   name\n  if name = '' then EXIT\n\n  outname = ''\n  do j=1 to words(name)\n     outname = outname CONVERT(word(name,j))\n     end\n  name = outname\n  say 'Searching for:' name\n\n   DO  k = 1 to readct\n   state = states.k\n   rr = READCITY(name, state, ' ')\n   rr = READCITY(name, state, 'city')\n   rr = READCITY(name, state, 'town')\n   rr = READCITY(name, state, 'township')\n   rr = READCITY(name, state, 'County')\n   rr = READCITY(name, state, 'village')\n   rr = READCITY(name, state, 'borough')\n   rr = READCITY(name, state, 'Parish')\n\n  END    /* DO  k = 1 to readct  */\n\nexit\n\nCONVERT: procedure\n  parse arg name\n  l = length(name)\n  mask = copies('10111111'b,l)\n  name  = bitand(name,mask)           /* convert to lowercase */\n  char1 = left(name,1)\n  char1 = bitor(char1,'40'x)           /* convert to uppercase */\n  name = char1||right(name,length(name)-1)\n  if name = 'Of' then name = 'of'\n  return name\n\nREADCITY: procedure\n  parse arg name, state, type\n  kv = strip(name) type\n  kv = left(kv,57)\n  kv = kv || state\n  kv = left(kv,75)\n\n RETC=NOSQLZ(READ, DBCITIES, kv)         /* newest version */\n IF   RETC < 5 THEN DO\n      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */\n      say LEFT(strip(name) type,30) state ,\n      substr(READ_ZONE,1,7) ,\n      'Population='substr(READ_ZONE,8,10)\n      END\n\n return 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAMPDATA": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x14\\t?\\x01\\x14\\t?\\x11&\\xff\\xff\\xff\\xff\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-04-03T00:00:00", "modifydate": "2014-04-03T11:26:30", "lines": 65535, "newlines": 65535, "modlines": 0, "user": "IBMUSER"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT910/CBT.V500.FILE910.PDS/NSQTEST.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT910/CBT.V500.FILE910.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}