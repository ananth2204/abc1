{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "IBMUSER", "INMTNODE": "N1", "INMTUID": "SOFT", "INMFTIME": "20140406105310000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "NSQ.V120.NSQCNTL", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"NSQ.V120.NSQCNTL": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "140096", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\xc0\\x00\\x00\\x05'", "DS1LSTAR": "b'\\x00\\x01\\x02'", "DS1TRBAL": "b'\\x93\\x06'"}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x030\\x00\\x04\\x8a\\xa0\\xb8'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x030\\x00\\x04\\x8a\\xa0\\xb8'", "b'P\\xf4\\xbd\\xa0\\x00\\x00\\x08\\xe4\\x00\\x00\\x08\\xec\\x00\\x0e\\x00\\x87'", "b'P\\xf4\\xbd\\xa0\\x00\\x00\\x0cy\\x00\\x00\\x0c~\\x00\\x0e\\x00Z'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"COMDSINI": {"ttr": 26, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\t\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x14S\\x00\\x1e\\x00\\x1c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T14:53:09", "lines": 30, "newlines": 28, "modlines": 0, "user": "IBMUSER"}, "text": "//COMDSINI JOB 1,'COMDSINI',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//*\n//* CREATE AND INITIALIZE FILE PRD1.NSQCOMDS ON VOL VVVVVV\n//*\n//* CREATE VSAM CLUSTER\n//*\n//DEFINE1  EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n  DELETE      'PRD1.NSQCOMDS'\n  SET  MAXCC = 0\n  DEF CL(NAME('PRD1.NSQCOMDS') -\n      NUMBERED    VOLUME(VVVVVV)  SHR(4 4)                  -\n    RECORDS(70    0)  -\n    RECORDSIZE(18425 18425) CISZ(18432))\n//*\n//* INITIALIZE VSAM DATASET\n//*\n//INIT2    EXEC PGM=NSQDUT01,REGION=80M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//NSQOUT   DD   DISP=SHR,DSN=PRD1.NSQCOMDS\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   *\nTBLNAME=NSQCOMDS\nHASHALG=1\nDATAHASHMASK=0000003F\nKEYHASHMASK=00000001\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBCLEAN": {"ttr": 28, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x13\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x14S\\x00\\r\\x00\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T14:53:13", "lines": 13, "newlines": 12, "modlines": 0, "user": "IBMUSER"}, "text": "//DBCLEAN  JOB 1,'DBCLEAN',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  DBDSN='PRD1.DBCITIES'\n//*\n//* CLEAN-UP DATABASE\n//*\n//CLEANUP  EXEC PGM=NSQDUT04,REGION=800M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//NSQIN    DD   DISP=SHR,DSN=&DBDSN,\n//         AMP=('BUFND=200')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBINIT": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x02\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x14S\\x00*\\x00'\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T14:53:02", "lines": 42, "newlines": 39, "modlines": 0, "user": "IBMUSER"}, "text": "//DBINIT   JOB 1,'DBINIT',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  NSQCNTL='NSQ.NSQCNTL'\n//*\n//* CREATE AND INITIALIZE DATABASE PRD1.DBCITIES ON VOL VVVVVV\n//*\n//* TAILOR TABLE SIZE\n//*\n//TAILOR    EXEC PGM=IRXJCL,PARM='ZCOMP 400 82000'\n//*               1ST PARM: KEYLEN+DATALEN  2ND PARM: RECORD NUMBER\n//SYSEXEC   DD  DISP=SHR,DSN=&NSQCNTL\n//SYSTSPRT  DD  SYSOUT=*\n//SYSTSIN   DD  DUMMY\n//NSQOUTP   DD  DISP=(NEW,PASS),DSN=&&OUTP,UNIT=SYSALLDA,\n//          SPACE=(TRK,1),LRECL=80,RECFM=FB,DSORG=PS\n//NSQOUTI   DD  DISP=(NEW,PASS),DSN=&&OUTI,UNIT=SYSALLDA,\n//          SPACE=(TRK,1),LRECL=80,RECFM=FB,DSORG=PS\n//*\n//* CREATE VSAM CLUSTER\n//*\n//DEFINE1  EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n  DELETE      'PRD1.DBCITIES'\n  SET  MAXCC = 0\n  DEF CL(NAME('PRD1.DBCITIES') -\n      NUMBERED    VOLUME(VVVVVV)  SHR(4 4)                  -\n//         DD   DISP=SHR,DSN=&&OUTI\n//*\n//*\n//* INITIALIZE VSAM DATASET\n//*\n//INIT2    EXEC PGM=NSQDUT01,REGION=80M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//NSQOUT   DD   DISP=SHR,DSN=PRD1.DBCITIES\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   *\nTBLNAME=DBCITIES      MUST MATCH THE DBNAME\nHASHALG=3            (HASH ALGORITHM, DEFAULT IS 1 FOR SHA-1)\n//         DD   DISP=SHR,DSN=&&OUTP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBLOAD": {"ttr": 38, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00C\\x01\\x14\\t\\x1f\\x01\\x14\\t?\\x114\\x00\\x1b\\x00\\x1e\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-03T11:34:43", "lines": 27, "newlines": 30, "modlines": 0, "user": "IBMUSER"}, "text": "//DBLOAD   JOB 1,'DBLOAD',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  DBDSN='PRD1.DBCITIES'\n//   SET  SEQDS='????.????????'\n//*\n//* LOAD DATA FROM SEQUENTIAL FILE TO NOSQLZ DATABASE\n//*\n//LOAD     EXEC PGM=NSQDUT02\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//NSQOUT   DD   DISP=SHR,DSN=&DBDSN           OUTPUT DATABASE\n//SYSUT1   DD   DISP=SHR,DSN=&SEQDS           INPUT SEQ. DATASET\n//SYSIN    DD   *\n*\n* DUPLICATE KEYS ARE NOT INSERTED. THE FIRST ONE IS KEPT.\n*\nDUP=IGNORE                   IGNORE DUPLICATE KEYS (FIRST ONE WINS)\n*\n* DUPLICATE KEYS ARE INSERTED. THE LAST ONE \"WINS\" OVER PREVIOUS ONES.\n* WARNING: THE RISK IS TO FILL UP THE DATABASE PREMATURELY.\n*\n*DUP=INSERT                   INSERT DUPLICATE KEYS (LAST ONE WINS)\n*\nKEYLEN=75\nDATALEN=55\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DBSTATS": {"ttr": 32, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00$\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x14Y\\x00\\r\\x00\\x0c\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T14:59:24", "lines": 13, "newlines": 12, "modlines": 0, "user": "IBMUSER"}, "text": "//DBSTATS  JOB 1,'DBSTATS',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  DBDSN='PRD1.DBCITIES'\n//*\n//* STATS ABOUT DATABASE\n//*\n//STATS    EXEC PGM=NSQDUT03,REGION=800M\n//STEPLIB  DD   DSN=&NSQLOAD,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//NSQIN    DD   DISP=SHR,DSN=&DBDSN,\n//         AMP=('BUFND=200')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NSQPARM": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x14\\t\\x00\\x07\\x00\\x07\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T14:09:36", "lines": 7, "newlines": 7, "modlines": 0, "user": "IBMUSER"}, "text": "* PARAMETERS FOR NOSQLZ SYSTEM \"PRD1\"\n*\n*---+----1----+----2----+----3----+----4----+----5----+----6----+----\nDBNAME   DBCITIES PRD1.DBCITIES                                W (R/W)\nDBNAME   DBSTATES PRD1.DBSTATES                                W (R/W)\nDBNAME   NSQCOMDS PRD1.NSQCOMDS                                W (R/W)\nCOMTIME  0000002000              MAX DURATION ALLOWED FOR COMMIT = 20 S.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NSQTASK": {"ttr": 30, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x14S\\x00\\x05\\x00\\x05\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T14:53:33", "lines": 5, "newlines": 5, "modlines": 0, "user": "IBMUSER"}, "text": "//NSQTASK  PROC NSQLOAD='NSQ.NSQLOAD',P=\n//NSQTASK  EXEC PGM=NSQTMAIN,REGION=400M,TIME=1440,PARM='&P'\n//STEPLIB  DD   DISP=SHR,DSN=&NSQLOAD                   NOSQLZ LOADLIB\n//NSQPARM  DD   DISP=SHR,DSN=NSQ.NSQCNTL(NSQP&P)        PARAMETERS\n//SYSABEND DD   SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RECRBYID": {"ttr": 36, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x01\\x14\\t/\\x01\\x14\\t/\\x146\\x00\\x0e\\x00\\x10\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-04-02T00:00:00", "modifydate": "2014-04-02T14:36:02", "lines": 14, "newlines": 16, "modlines": 0, "user": "IBMUSER"}, "text": "//RECRBYID JOB 1,'RECRBYID',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//* READ A RECORD BY ITS RECORD-ID\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  DBDSN='PRD1.DBCITIES'\n//*\n//READ1    EXEC PGM=NSQDUT11\n//STEPLIB  DD   DISP=SHR,DSN=&NSQLOAD\n//SYSUDUMP DD   SYSOUT=*\n//NSQIN    DD   DISP=SHR,DSN=&DBDSN\n//SYSIN    DD   *\nRECID=00112233445566778899AABBCC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RECREAD": {"ttr": 34, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x14\\t\\x1f\\x01\\x14\\t\\x1f\\x15\\x01\\x00\\x14\\x00\\x14\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-01T15:01:09", "lines": 20, "newlines": 20, "modlines": 0, "user": "IBMUSER"}, "text": "//RECREAD  JOB 1,'RECREAD',MSGLEVEL=(1,1),MSGCLASS=H,CLASS=A,\n//    NOTIFY=&SYSUID,COND=(4,LT),REGION=800M\n//*\n//* READ A RECORD, OPTIONALLY DELETE IT\n//*\n//   SET  NSQLOAD='NSQ.NSQLOAD'\n//   SET  DBDSN='PRD1.DBCITIES'\n//*\n//READ     EXEC PGM=NSQDUT10\n//STEPLIB  DD   DISP=SHR,DSN=&NSQLOAD\n//SYSUDUMP DD   SYSOUT=*\n//NSQDEBUG DD   SYSOUT=*                   ISSUE DEBUG WTOS\n//NSQIN    DD   DISP=SHR,DSN=&DBDSN\n//SYSIN    DD   *\n* Length of key (KEYLEN=0 : sequential read)\nKEYLEN=075             KEY LENGTH (utility supports up to 78)\n* Value of key\nV=Roswell city                                             New Mexico\n* Delete or not the record\nDELETE=N               Y/N: LOGICALLY DELETE OR NOT RECORD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZCOMP": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00@\\x01\\x14\\t\\x1f\\x01\\x14\\tO\\x18 \\x00\\xf1\\x00\\xfa\\x00\\x00\\xc9\\xc2\\xd4\\xe4\\xe2\\xc5\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-04-01T00:00:00", "modifydate": "2014-04-04T18:20:40", "lines": 241, "newlines": 250, "modlines": 0, "user": "IBMUSER"}, "text": "  /* REXX EXEX   -  COMPUTE CISZ AND RECORDSIZE OF NOSQLZ DATABASE */\n  /*                                                               */\n  /* OUTPUT FILE: NSQOUTP FOR NOSQLZ TABLE INIT PARAMETERS         */\n  /* OUTPUT FILE: NSQOUTI FOR IDCAMS                               */\n  /*                                                               */\n  ARG KLDL  RECNB  VERSNB\n\n  DATA_PFX = 18        /* NUMBER OF BYTES IN A DATA RECORD,\n                          NOT COUNTING THE KEY AND DATA FIELDS     */\n  MAX_CISZ = 18432     /* MAXIMUM CI SIZE SUPPORTED                */\n  MIN_CISZ = 512       /* MINIMUM CI SIZE SUPPORTED                */\n  MAX_RSZ  = 4096*18432   /* MAXIMUM SIZE OF A LOGICAL RECORD      */\n  MIN_RSZ  = MIN_CISZ - DATA_PFX -7 /* MINIMUM SIZE OF LOGICAL RECORD */\n\n  /* RULE : 1 CI CAN STORE A RECORD (OR RATHER SEGMENT) OF SIZE =\n                 CISZ - DATA_PFX - 7                               */\n\n  NUMERIC DIGITS 20\n  IF KLDL='' THEN DO\n    SAY 'ENTER KEYLEN+DATALEN (LENGTH OF KEY + LENGTH OF NON-KEY DATA)'\n    SAY '(MAXIMUM RECORD SIZE ENVISIONED FOR RECORD)'\n    PULL KLDL\n    END\n  SAY 'KEYLEN+DATALEN (LENGTH OF KEY + LENGTH OF NON-KEY DATA)='KLDL\n  KLDL0 = KLDL + 0\n  IF KLDL0 > MAX_RSZ   THEN DO\n     SAY '** ERROR, RECORD SIZE CANNOT EXCEED' MAX_RSZ '**'\n     EXIT(8)\n     END\n\n  IF RECNB='' THEN DO\n    SAY 'ENTER MAXIMUM NUMBER OF LOGICAL RECORDS TO BE STORED'\n    PULL RECNB\n    END\n  SAY 'MAXIMUM NUMBER OF LOGICAL RECORDS TO BE STORED='RECNB\n\n  /* SINCE NOSQLZ PUTS ONE SEGMENT IN A CI, AND CISIZE>=512,\n     THE SIZE OF A DATA RECORD HAS A MINIMUM VALUE */\n\n  IF KLDL < MIN_RSZ THEN KLDL = MIN_RSZ\n  SAY 'REQUESTED RECORD LENGTH='KLDL0\n  IF KLDL0 <> KLDL THEN SAY '==> CHANGED TO 'KLDL\n\n  /* SIZE OF NOSQLZ RECORD */\n  NOSQLZ_REC_LENGTH = KLDL + DATA_PFX /* NOSQLZ ADDS PFX TO DATA REC */\n  SAY 'NOSQLZ RECORD LENGTH='NOSQLZ_REC_LENGTH\n\n  /* COMPUTED CISZ = SMALLEST MULTIPLE OF 512\n     THAT IS LARGER THAN NOSQLZ_REC_LENGTH + 7\n     (THE CI ADDS 7 BYTES TO THE DATA */\n\n  CISZ = (7+NOSQLZ_REC_LENGTH) % 512\n  IF 512 * CISZ <> 7+NOSQLZ_REC_LENGTH THEN CISZ = CISZ + 1\n  CISZ = 512 * CISZ\n\n  CIS_BY_REC = 1    /* USUALLY 1 CI NEEDED TO STORE 1 SEGMENT */\n  IF KLDL + DATA_PFX + 7 > MAX_CISZ     THEN DO\n                     CISZ = MAX_CISZ  /* ROOM FOR 32740 K+D BYTES */\n                     CIS_BY_REC = KLDL % (MAX_CISZ-7-DATA_PFX)\n                     IF   CIS_BY_REC*(MAX_CISZ-7-DATA_PFX)<>KLDL THEN ,\n                          CIS_BY_REC = CIS_BY_REC + 1\n                     END\n\n  SAY 'CISZ AS MULTIPLE OF 512='CISZ\n\n  /* VSAM RULE:\n     FROM 512 TO 8192, CISZ IS MULTIPLE OF 512\n     FROM 8192 TO 32768, CISZ IS MULTIPLE OF 2048 */\n\n  IF  CISZ > 8192 THEN DO\n      D  =   CISZ % 2048\n      IF 2048*D <> CISZ THEN D = D + 1\n      CISZ = 2048 * D\n      SAY 'CISZ AS MULTIPLE OF 2048='CISZ\n      END\n\n\n  VSAMRS = CISZ - 7   /* MAXIMUM LENGTH OF DATA IN 1 RECORD  */\n  SAY\n  SAY 'CI SIZE = 'CISZ        ' - VSAM RECORD SIZE = 'VSAMRS\n  SAY ' (THAT IS ' (VSAMRS-DATA_PFX)*CIS_BY_REC ,\n      ' OF KEY_AND_DATA INSTEAD OF 'KLDL0')'\n\n  IF CIS_BY_REC <> 1 THEN DO\n     SAY '** NOTE THAT 'CIS_BY_REC' CIS ARE REQUIRED FOR 1 RECORD **'\n     END\n\n  /*                                                                 */\n  /*  ROUND NUMBER OF RECORDS TO NEXT POWER OF 2                     */\n  /*                                                                 */\n\n  /* FIND POWER OF TWO JUST SUPERIOR TO NUMBER OF RECORDS */\n  DO G = 1 TO 31\n     IF 2**G >= RECNB    THEN LEAVE\n     END\n\n  /* MINIMUM NUMBER OF RECORDS MUST BE 16384 = 2**14          */\n  /* MINIMUM NUMBER OF RECORDS MUST BE   128 = 2**7           */\n  IF G < 7  THEN G = 7\n  /* CHECK WHETHER MAXIMUM NUMBER OF RECORDS HAS BEEN REACHED */\n  IF G >= 31 THEN DO\n     IF RECNB    > 2**31 THEN DO\n        SAY '   ** WARNING **'\n        SAY '   ** CAN ALLOCATE ONLY' 2**31 'RECORDS'\n        SAY '   ** INSTEAD OF 'RECNB' NORMALLY NEEDED'\n        RECNB_ADJ= 2**31\n        G = 31\n        END\n     END\n\n  RECNB_ADJ =2**G       /* ADJUST NUMBER = NB OF KEYS                */\n  SAY 'LOGICAL RECORD NUMBER ADJUSTED FROM' RECNB 'TO' RECNB_ADJ\n  SAY '        (ROUNDED TO NEXT POWER OF 2)  '\n\n  /*                                                                 */\n  /*  COMPUTE NUMBER OF SEGMENTS                                     */\n  /*                                                                 */\n\n  /* COMPUTE NUMBER OF SEGMENTS= NUMBER OF CIS */\n  TOT_SGMT = RECNB*CIS_BY_REC\n  TOT_SGMT1= TOT_SGMT\n\n  /* MULTIPLY BY 1.5 TO ACCOMODATE FOR COLLISIONS                */\n /*  TOT_SGMT = TOT_SGMT*(1+VERSNB)   */\n     TOT_SGMT = TOT_SGMT*1.5        /* ALWAYS 2 VERSIONS OF RECORD */\n     TOT_SGMT = TOT_SGMT % 1        /* ALWAYS 2 VERSIONS OF RECORD */\n  SAY 'SEGMENT NUMBER SHOULD BE AT LEAST' TOT_SGMT\n  SAY '** TO BE ROUNDED TO NEXT POWER OF 2 **'\n  TOT_SGMT2= TOT_SGMT\n\n  /* FIND POWER OF TWO JUST SUPERIOR TO NUMBER OF RECORDS */\n  DO I = 1 TO 31\n     IF 2**I >= TOT_SGMT THEN LEAVE\n     END\n\n  /* MINIMUM NUMBER OF RECORDS MUST BE 16384 = 2**14          */\n  /* MINIMUM NUMBER OF RECORDS MUST BE   128 = 2**7           */\n  IF I < 7  THEN I = 7\n  /* CHECK WHETHER MAXIMUM NUMBER OF RECORDS HAS BEEN REACHED */\n  IF I >= 31 THEN DO\n     IF TOT_SGMT > 2**31 THEN DO\n        SAY '   ** WARNING **'\n        SAY '   ** CAN ALLOCATE ONLY' 2**31 'RECORDS'\n        SAY '   ** INSTEAD OF 'TOT_SGMT' NORMALLY NEEDED'\n        TOT_SGMT = 2**31\n        I = 31\n        END\n     END\n\n  TOT_SGMT = 2**I       /* ADJUST NUMBER = NB OF ADDRESSABLE RECORDS */\n  SAY 'SIZE OF DATASPACE=' TOT_SGMT 'CIS OF' CISZ\n  SAY\n  SAY 'DATA HASH MASK=' D2X(2**I-1,8)\n\n  /* COMPUTE SIZE OF KEY SPACE    */\n\n  KEY_CELL_BY_SLOT = KCBS(CISZ)    /* NUMBER OF KEYS IN 1 KEY-RECORD*/\n  K = REDUCT(CISZ)       /* REDUCTION FACTOR KEY / DATA      */\n  SAY 'REDUCTION FACTOR FROM DATA SPACE TO KEY SPACE = ' K\n  SAY 'NUMBER OF KEYS MANAGED BY 1 KEY-RECORD= ' KEY_CELL_BY_SLOT\n  TOT_KSPC = RECNB_ADJ/K\n  SAY 'SIZE OF KEY SPACE=' TOT_KSPC 'CIS OF' CISZ\n  SAY\n  IF TOT_KSPC < 2 THEN TOT_KSPC = 2\n  SAY 'KEY  HASH MASK=' D2X(TOT_KSPC-1,8)\n\n  /* NUMBER OF RECORDS                                             */\n  TOTRECS = TOT_SGMT+TOT_KSPC+1\n  NREC1   = TOTRECS\n  NREC2   = 0\n  COMMENT = ''\n  IF  NREC1 > 16777215 THEN DO         /* (VSAM MAX IS 16,777,215) */\n      NREC1 = 16777215\n      NREC2 = TOTRECS - 16777215\n      IF  NREC2 > 16777215 THEN NREC2 = 16777215\n      COMMENT = '/* ('TOTRECS' RECORDS NEEDED) */'\n      END\n\n  /* DISPLAY RESULTING IDCAMS     */\n  SAY\n  SAY \"DEF CL(NAME('DSNAME_OF_DATA_SET                        ') -\"\n  SAY \"    NUMBERED    VOLUME(VVVVVV)  SHR(4 4)                  -\"\n  SAY \"    RECORDS(\"NREC1  NREC2\") \"COMMENT\" -\"\n  SAY \"    RECORDSIZE(\"VSAMRS\" \"VSAMRS\") CISZ(\"CISZ\"))\"\n\n  SAY\n  SAY '********* SUMMARY OF ROUNDINGS *********'\n  SAY\n  SAY '* RECORD NUMBER='RECNB 'ROUNDED TO' RECNB_ADJ\n  SAY '   FROM THAT, WITH FACTOR='K ', NEEDED' TOT_KSPC 'SLOTS OF KSPC'\n  SAY '              KEY  HASH MASK=' D2X(TOT_KSPC-1,8)\n  SAY\n  SAY '* SEGMENT NUMBER=        'TOT_SGMT1 '('RECNB'*'CIS_BY_REC')'\n  SAY '  WITH VERSION + SLACK ='TOT_SGMT2\n  SAY '  WITH ROUNDING TO 2**N='TOT_SGMT\n  SAY '   FROM THAT, DATA HASH MASK=' D2X(TOT_SGMT-1,8)\n\n  /* WRITE TO DD NSQOUTP */\n\n  OUTP.1 = 'KEYHASHMASK='D2X(TOT_KSPC-1,8)\n  OUTP.2 = 'DATAHASHMASK='D2X(TOT_SGMT-1,8)\n  SAY OUTP.1\n  SAY OUTP.2\n  \"EXECIO * DISKW NSQOUTP (STEM OUTP. FINIS \"\n\n  /* WRITE TO DD NSQOUTI */\n\n  OUTP.1 = \"    RECORDS(\"NREC1  NREC2\") \"COMMENT\" -\"\n  OUTP.2 = \"    RECORDSIZE(\"VSAMRS\" \"VSAMRS\") CISZ(\"CISZ\"))\"\n  \"EXECIO * DISKW NSQOUTI (STEM OUTP. FINIS \"\n\n  EXIT\nREDUCT: PROCEDURE\n   ARG      CI         /* CI SIZE  */\n   RES = 0\n   IF CI = 512     THEN RES = 2\n   IF CI = 1024    THEN RES = 4\n   IF CI = 1536    THEN RES = 8\n   IF CI = 2048    THEN RES = 16\n   IF CI = 2560    THEN RES = 16\n   IF CI = 3072    THEN RES = 32\n   IF CI = 3584    THEN RES = 32\n   IF CI = 4096    THEN RES = 64\n   IF CI = 4608    THEN RES = 64\n   IF CI = 5120    THEN RES = 64\n   IF CI = 5632    THEN RES = 64\n   IF CI = 6144    THEN RES = 64\n   IF CI = 6656    THEN RES = 128\n   IF CI = 7168    THEN RES = 128\n   IF CI = 7680    THEN RES = 128\n   IF CI = 8192    THEN RES = 128\n   IF CI = 10240   THEN RES = 128\n   IF CI = 12288   THEN RES = 256\n   IF CI = 14336   THEN RES = 256\n   IF CI = 16384   THEN RES = 256\n   IF CI = 18432   THEN RES = 256\n   RETURN RES\n\nKCBS: PROCEDURE\n   ARG      CI         /* RECORD NUMBER, CI SIZE  */\n   RETURN 1+CI/32\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT910/CBT.V500.FILE910.PDS/NSQCNTL.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT910/CBT.V500.FILE910.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}