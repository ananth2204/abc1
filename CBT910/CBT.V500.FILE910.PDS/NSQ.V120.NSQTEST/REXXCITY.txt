      /* REXX exec run by:       TSO EX 'NSQ.NSQTEST(REXXCITY)'      */
   Call msg('OFF')
   ADDRESS TSO  "ALLOC F(NSQLPRD1) DUMMY"      /* PRD1 Nosqlz system */
   Call msg('ON')

  /* READ LOOP to read all STATES */
    RETC = 0
    readct = 0
    states. = ''
    DO WHILE RETC = 0
      KEYVAL    = ''                      /* VALUE OF KEY  */
      RETC=NOSQLZ(READSEQ, DBSTATES, KEYVAL)
      IF RETC < 5 THEN DO
         PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */
         readct = readct + 1
         states.readct = substr(READ_ZONE,3,18)
      /* say states.readct */
         END
      end

  say readct 'states read'
  if readct = 0 then DO
     say 'No states read from DB'
     exit(16)
     END

  SAY 'Enter the name of a state / city / town / village in the USA:'
  PULL   name
  if name = '' then EXIT

  outname = ''
  do j=1 to words(name)
     outname = outname CONVERT(word(name,j))
     end
  name = outname
  say 'Searching for:' name

   DO  k = 1 to readct
   state = states.k
   rr = READCITY(name, state, ' ')
   rr = READCITY(name, state, 'city')
   rr = READCITY(name, state, 'town')
   rr = READCITY(name, state, 'township')
   rr = READCITY(name, state, 'County')
   rr = READCITY(name, state, 'village')
   rr = READCITY(name, state, 'borough')
   rr = READCITY(name, state, 'Parish')

  END    /* DO  k = 1 to readct  */

exit

CONVERT: procedure
  parse arg name
  l = length(name)
  mask = copies('10111111'b,l)
  name  = bitand(name,mask)           /* convert to lowercase */
  char1 = left(name,1)
  char1 = bitor(char1,'40'x)           /* convert to uppercase */
  name = char1||right(name,length(name)-1)
  if name = 'Of' then name = 'of'
  return name

READCITY: procedure
  parse arg name, state, type
  kv = strip(name) type
  kv = left(kv,57)
  kv = kv || state
  kv = left(kv,75)

 RETC=NOSQLZ(READ, DBCITIES, kv)         /* newest version */
 IF   RETC < 5 THEN DO
      PARSE PULL READ_ZONE                  /* GET ZONE FROM STACK */
      say LEFT(strip(name) type,30) state ,
      substr(READ_ZONE,1,7) ,
      'Population='substr(READ_ZONE,8,10)
      END

 return 0
