             /* REXX INTERFACE FOR NOSQLZ FUNCTION CALLS */
  /*                                                                 */
  /* PARAMETERS:                                                     */
  /* - ACTION (READ, UPDATE, CREATE, DELETE, COMMIT...)              */
  /* - DBNAME (8C)                                                   */
  /* - KEY (1-250C)                                                  */
  /* - READ OPTION (IF READ ACTION) OR DATA TO CREATE/UPDATE         */
  /*                                                                 */
NSQ_VRSN = '1'
NSQ_OPT  = 'N'
NSQ_ACT  = LEFT(ARG(1),8)
NSQ_TBLNM = LEFT(ARG(2),8)
NSQ_KYVAL = ARG(3)                  /* VALUE OF KEY  */
READ_OPT  = ARG(4)                  /* READ OPTION IF ANY */
NSQ_RETCD = '00000000'X
NSQ_OUTLN = '00000000'X
NSQ_INLEN = '00000000'X
NSQ_MESSG = COPIES(' ',100)
FILLER    = COPIES('00'X,250)

/* SET READ OPTION      */
IF NSQ_ACT = 'READ    ' THEN DO
   IF  READ_OPT <> '' THEN NSQ_OPT = LEFT(READ_OPT,1)
   END

/* SET LENGTHS OF ZONES */

NSQ_KYLEN = D2C(LENGTH(NSQ_KYVAL),2)
IF  ARG(3) = '' THEN NSQ_KYLEN = '0000'X
IF NSQ_ACT = 'READ    ' | NSQ_ACT = 'READSEQ ' THEN DO
   OUTPUT_ZN = COPIES(' ',1000000)
   NSQ_INLEN = D2C(LENGTH(OUTPUT_ZN),4)  /* LENGTH OF RECEIVING ZONE */
   END
IF NSQ_ACT = 'CREATE  ' | NSQ_ACT = 'UPDATE  '  THEN DO
   INPUT_ZN = ARG(4)
   NSQ_INLEN = D2C(LENGTH(INPUT_ZN),4)  /* LENGTH OF PASSED ZONE */
   END

 /* PREPARE PARAMETER BEFORE CALL */

PARMBLK= NSQ_VRSN||NSQ_OPT||NSQ_ACT||NSQ_TBLNM||,
    NSQ_INLEN||NSQ_OUTLN||NSQ_RETCD||NSQ_MESSG||NSQ_KYLEN||NSQ_KYVAL||,
    FILLER
ALLPARM = "NSQTCAPI  PARMBLK"    /* ONLY 1 PARAMETER BY DEFAULT */
IF NSQ_ACT = 'READ    '  | NSQ_ACT = 'READSEQ ' THEN ,
    ALLPARM = "NSQTCAPI  PARMBLK  OUTPUT_ZN"
IF NSQ_ACT = 'CREATE  '  | NSQ_ACT = 'UPDATE  '  THEN ,
    ALLPARM = "NSQTCAPI  PARMBLK   INPUT_ZN"

 /* CALL, GET RC AND ERROR MESSAGE */

ADDRESS LINKPGM ALLPARM
NSQ_MESSG = SUBSTR(PARMBLK,31,100)
NSQ_RETCD = SUBSTR(PARMBLK,27,4)

/* READ MUST RETURN READ ZONE */

IF NSQ_ACT = 'READ    '   THEN DO
IF C2D(NSQ_RETCD) = 0 THEN DO
   NSQ_OUTLN = SUBSTR(PARMBLK,23,4)
/* SAY C2D(NSQ_OUTLN) 'BYTES READ'  */
   READ_ZONE=LEFT(OUTPUT_ZN,C2D(NSQ_OUTLN))
   PUSH READ_ZONE                  /* PUT ZONE IN THE STACK */
   END
   END

/* READSEQ MUST RETURN READ ZONE AND KEY VALUE */

IF NSQ_ACT = 'READSEQ ' THEN DO
IF C2D(NSQ_RETCD) = 0 THEN DO
   NSQ_OUTLN = SUBSTR(PARMBLK,23,4)
   NSQ_KYLEN = C2D(SUBSTR(PARMBLK,131,2))
   NSQ_KYVAL = SUBSTR(PARMBLK,133,NSQ_KYLEN)
/* SAY C2D(NSQ_OUTLN) 'BYTES READ'  */
   READ_ZONE='K='NSQ_KYVAL' D='LEFT(OUTPUT_ZN,C2D(NSQ_OUTLN))
   PUSH READ_ZONE                  /* PUT ZONE IN THE STACK */
   END
   END

/* SAY NSQ_ACT 'RC ='C2X(NSQ_RETCD)
   SAY NSQ_MESSG */
   IF NSQ_ACT = 'READTEST' THEN SAY NSQ_MESSG
   IF NSQ_ACT = 'COMMIT  ' THEN SAY NSQ_MESSG
   RETC = C2D(NSQ_RETCD)
   IF  RETC > 8 & RETC <> 14 THEN SAY 'ERROR, RC='RETC '-' NSQ_MESSG
RETURN C2D(NSQ_RETCD)
