* JES2 Commands - 14.11.2016
* Samples for the EX (SDSF/EJES) line command from YCLMACRX
* If you use EJES change all SDSF EJES in column 1
* all commands can also be called from outside EDIT:
* TSO YCLMACRX sdsf $D I
* This way could also be used in a Rexx Batch|
/*+------------------------------------------------------------------+*/
/*| YCLMACRX     (c)  YCOS Yves Colliard Software                    |*/
/*|                   2004-16                                        |*/
/*|                   Mail yves.colliard§ycos.de                     |*/
/*|                   Use at your own RISK|                          |*/
/*+------------------------------------------------------------------+*/

* Console and Display MAX
* $HASP003 RC=(57),........ - DISPLAY TERMINATED DUE TO
* $HASP003         EXCESSIVE OUTPUT (AS DEFINED BY CONDEF DISPMAX)
sdsf $D CONDEF
sdsf $T CONDEF,DISPMAX=###
* Changes will AFFECT ALL COMMANDS|

* Start JES2 activities (NOREQ)
* $HASP400 ENTER REQUESTS
sdsf $S

* Stop JES2 activities (Initiator, Printer, Puncher, Job Trans...)
sdsf $P
* $HASP623 MEMBER DRAINING
* $HASP099 ALL AVAILABLE FUNCTIONS COMPLETE

* Display JES2 activities (z/OS>1.8):
sdsf $D JES2
* $HASP608 ALL AVAILABLE FUNCTIONS COMPLETE
* or see $PJES2
* ACTIVE PROCESSORS (PCES)
* ACTIVE ADDRESS SPACES
* ACTIVE NETWORKING DEVICES
* HELD PROCESSORS
* ALLOCATED INTERNAL READERS
* OUTSTANDING CROSS MEMBER REQUESTS
* OUTSTANDING BERT LOCK REQUESTS
* INTERNAL ACTIVITY

* Stop JES2
sdsf $P JES2Ä,ABENDÄ,FORCEÜ]QUICK]TERMÜ
* see $DJES2
* ABEND:
*$HASP095 JES2 CATASTROPHIC ERROR.  CODE = $PJ2
*$HASP198 REPLY TO $HASP098 WITH ONE OF THE FOLLOWING: 417
*  END            - STANDARD ABNORMAL END
*  END,DUMP       - END JES2 WITH A DUMP (WITH AN OPTIONAL TITLE)
*  END,NOHOTSTART - ABBREVIATED ABNORMAL END (HOT-START IS AT RISK)
*  SNAP           - RE-DISPLAY $HASP088
*  DUMP           - REQUEST SYSTEM DUMP (WITH AN OPTIONAL TITLE)
*## $HASP098 ENTER TERMINATION OPTION

* Display Jobclass
sdsf $D JOBCLASS
sdsf $D JOBCLASS(A)
sdsf $D JOBCLASS(A),LONG

* Display Initiators
sdsf $D I
sdsf $D I(5),LONG
sdsf $D I,C=*A*
* Display Initiators serving class A and INACTIVE - waiting on job
sdsf $D I,/C=*A*,/STATUS=INACTIVE
* Display Initiators serving class A and ACTIVE - serving a job
sdsf $D I,/C=*A*,/STATUS=ACTIVE

* start Initiators - previous Status DRAINED or HALTED
sdsf $S I(5)

* hold Initiators - Status HALTING -> HALTED
sdsf $Z I(5)

* stop Initiators - Status DRAINING -> DRAINED
sdsf $P I(5)

* change Initiators
sdsf $T I(5),CLASS=Z

* Display Information About Currently Active Jobs
sdsf $D A
* Started Tasks
sdsf $D A,S
* TSO Users
sdsf $D A,T
* Executing
sdsf $D A,XEQ
* Executing on system SYS1
sdsf $D A,XEQ,SYS1

* Display Information About Specified Jobs
sdsf $D Job
*  Job Selection:
     $DJnnnn $DSnnnn $DTnnnn
     $DJnn-mm $DSnn-mm $DTnn-mm nn-*
     $DJ'jobname' or $DJ(jobname)
     $DJQ,JM=mask Mask: ? *
*  Other Selection/Display:
     ,ARM_element]CANCEL]PURGE]REBUILD Ä=][=Yes]NoÜ
     ,CMDauth]OFFS]SCHENV_AFF]Sysaff]XEQNode Ä=][=sel_parmÜ
     ,CARDS]Class]INITASID]Priority]SCHENV]SECLABEL]
     SRVCLASS]USERID Ä=][=]<]>sel_parmÜ
     ,Age]DAys]Hours Ä<]>sel_parmÜ
     ,CCÄ=(ABENDÄ=][=system]userÜ]ABENDED]CANcelled]CNVT_abend]
     CODEÄ=][=]<]>condcodeÜ]COMPleted]ENDed_by_cc]
     EOM_failure]JCLerror]SECurity_failure)Ü
     ,DELAYÄ=][=BUSY_ON_DEVICE]HOLD]LIMIT]LOCKED]No]SCHENV]
     SPOOLS_NOT_AVAILABLE]SYSAFF]MEMBER_STATUS]Yes
     ,HOLDÄ=][=ALL]ARM]DUP]JOB]NONEÜ
     ,QueueÄ=][=CNV]INPUT]OUT]PPU]PURGE]RCV]SETUP]SPIN]XEQ]XMTÜ
     ,SPooLÄ=(%]Percent]Tgs]VolumesÄ<]>]=][=value)Ü
     ,TYPEÄ=][=JOB]STC]TSUÜ
     ,JC]JOBCORR=sys:usr
     ,HOLDUNTL
     ,JOBGROUP
     ,STARTBY
     ,WITH
*  Other Display:
     ,STATUS
     ,LONG

* Long job display
sdsf $D JOBQ,JM=THISJOB
* age of job
sdsf $D JOBQ,JM=THISJOB,AGE
* job spool usage over 2%
$DJQ,SPL=(%>2)
* use L=Z to see job numbers - using generic name
sdsf $D JOBQ,JM=TH?SJOB*,L=Z
* jobs abended
sdsf $DJQ,CC=ABENDED
* jobs abended with system abend 806
sdsf $DJQ,CC=ABEND=S806
* jobs abended with user abend 123
sdsf $DJQ,CC=ABEND=(S000,U0123)
* jobs abended with system abend 22
sdsf $DJQ,CC=ABEND=*22
* jobs with condition code > 4
sdsf $DJQ,CC=CODE>4
* job display with Hold and Delay reason
sdsf $DJ'J201A',HOLD,DELAY

* Release Held Jobs - selection see $DJ
sdsf $A Job

* Hold Specific Jobs - selection see $DJ
sdsf $H Job

* Cancel a Job - selection see $DJ
sdsf $C Job
* with dump
sdsf $C Job,Dump
* purge output
sdsf $C Job,Purge
* use ARMRESTART policy
sdsf $C Job,ARMRESTART

* Purge a Job - selection see $DJ
sdsf $P Job

* Change a Job - selection see $DJ
sdsf $T Job
* Class
sdsf $T Job,C=class
* Priority
sdsf $T Job,P=Ä+]-Ün
* Affinity
sdsf $T Job,S=Ä+]-Üsys
* Scheduling Environment
sdsf $T Job,SCHENV=sch
* Service Class
sdsf $T Job,SRVCLASS=s

* Duplicate jobs
sdsf $D DUPJOB

* Initiate a Batch Job into Execution - RUN
sdsf $S Jnnn]'jobname'

* Restart a job - BE VERY CAREFUL|
sdsf $E Job,C
* will: $H - HOLD THE JOB
*       $E - REQUEUE THE JOB FOR EXECUTION
*       $C - CANCEL THE JOB FOR RERUN

* Send a Message to Job Log
* only Job: Jn,Sn,Tn,'jobname'
* Only Job executing
sdsf $D M Job,'msg'
sdsf $DMJ84,'YCOS Message to User'
18.25.27 JOB00084 IEF403I JC90A - STARTED - TIME=18.25.27
...
18.27.03 JOB00084 MSG FROM OPER: 'YCOS MESSAGE TO USER'

* Display the Number of Jobs Queued
sdsf $D QÄ,sysÜÄ,Q=qÜ
* Display the Number of Jobs Waiting for execution in Class H
sdsf $D Q,Q=XEQH

* Display Job Queue Information
sdsf $D NÄ,sysÜÄ,Q=qÜ
* waiting on converstion
sdsf $D N,Q=CNV
* waiting execution class A
sdsf $D N,Q=XEQA

* Display Output Classes
sdsf $D OUTCLASS

* Display Job Output Characteristics - many section and display parms
sdsf $D O Job
sdsf $DOJQ,JM=YVES,LONG
sdsf $DOJQ,JM=YVES,ALL
sdsf $DOJQ,JM=YVES,CRTIME
sdsf $DOJQ,JM=YVES,STATUS

* Change Job Output
sdsf $T O Job
* new output class
sdsf $TOJ1472,ALL,Q=F
* new output form
sdsf $TOJ'MEINJOB',ALL,F=A4QW
* new output class for a range of jobs
sdsf $TOT4123-4200,ALL,Q=B
* all output for job MEIN* will be changed from Outdisp=Hold to Write
sdsf $TOJQ,JM=MEIN*,/OUTD=H,OUTD=W
* delete all output older than 5 days in class Z
sdsf $TOJQ,A>5,OUTD=P,Q=Z

* Release Job Output
sdsf $O O Job

* Cancel Job Output
sdsf $C O Job

* Purge Job Output
sdsf $P O Job

* Display Spool
sdsf $D SPL
* Display Spool all volumes
sdsf $D SPL,ALL
* job spool usage over 2%
sdsf $DJQ,SPL=(%>2)

* Automatic Commands
* Display, Specify, and Modify Automatic Commands
sdsf $T Acccc]A,ALL
* Display all automatic commands
sdsf $T A,ALL

* Set automatic command
sdsf $T AccccÄ,I=ssss]T=hh.mmÜ,'commandÄ;commandÜ'
* every 60 seconds $DA,X
sdsf $T A7,I=60,'$DA,X'
* stop init 5 at 12:30
sdsf $T A9,T=12.30,'$PI5'
* every 10 seconds an MVS Command D T
sdsf $TA,I=10,'$VS,''D T'''

* Cancel one or all automatic command
sdsf $C Acccc]A,ALL
* Cancel automatic Command 7
sdsf $C A7

* Start all Automatic Commands
sdsf $S A,ALL

* Halt all Automatic Commands
sdsf $Z A,ALL

* Job Groups -----------------------------------------------------------

sdsf $D G###
sdsf $D G###-###
sdsf $D G'YVESGRP1'
sdsf $D G'YVESGRP1',LONG

* List of Jobs
sdsf $D G###,JOBS
* List of Jobs with full job group detail
sdsf $D G###,JOBF
* List of Jobs with job group dependency
sdsf $D G###,DEP
* List of Jobs with job group concurrent
sdsf $D G###,CON
* List of Jobs with job group erros
sdsf $D G###,INERROR

* Work with groups
sdsf $A/H/P/C G###

* Display Group Definitions (Sysprog)
sdsf $D GRPDEF
 Ä,ZJCNUMÜÄ,ZJCWARNÜÄ,CONCURRENT_MAXÜÄ,JOBGROUP_JOB_MAXÜÄ,ZJCUSEÜÄ,ZJCFREEÜ

* mostly SYSPROG -------------------------------------------------------
* mostly SYSPROG -------------------------------------------------------

* MAS
sdsf $D MASDEF

* Members
sdsf $D MEMBER
sdsf $D MEMBER(1)
sdsf $D MEMBER,NAME=YVES
sdsf $D MEMBER,NAME=YV*

* Checkpoint
sdsf $D CKPTDEF

sdsf $D CKPTSPACE
sdsf $D CKPTSPACE,BERTUSE
sdsf $JD HISTORY(BERT)

* Display Spool
sdsf $D SPL
* Display Spool all volumes
sdsf $D SPL,ALL
* job spool usage over 2%
sdsf $DJQ,SPL=(%>2)
* Display Spool definition
sdsf $D SPOOLDEF
sdsf $D SPOOLDEF,GCRATE
* Change Spool Garbage collector
sdsf $T SPOOLDEF,GCRATE=FAST
sdsf $T SPOOLDEF,GCRATE=NORMAL
* Display Unitdata information of spool
sdsf $D SPL,V=SPOOYB,UNITDATA

* Proclib
sdsf $D PROCLIB(*)
sdsf $D PROCLIB(*),STATICÄ=YES]NOÜ
sdsf $ADD PROCLIB(YVES),DD1=DSN=YVES.PROCLIB
sdsf $T   PROCLIB(YVES),DD2=DSN=SYS1.PROCLIB
sdsf $DEL PROCLIB(YVES)
sdsf $DEL PROCLIB(YVES),/DD2=DSN=SYS1.PROCLIB

* PCE - Processor Controller Element
sdsf $D PCEDEF
sdsf $JD DETAILS
sdsf $D PCE

* Exit Display
sdsf $D EXIT
sdsf $D EXIT,/STATUS=ENABLED
sdsf $D EXIT(40)
sdsf $D EXIT(40),LONG
* Exit Change
sdsf $T EXIT(40),STATUS=ENABLED
sdsf $T EXIT(40),STATUS=DISABLED
sdsf $T EXIT(40),ROUTINE=Ä+/-Üroutine
sdsf $T EXIT(40),REFRESH
sdsf $D   LOADMOD(loadmod)
sdsf $D   LOADMOD(loadmod),LONG
sdsf $ADD LOADMOD(loadmod),STORAGE=PVT/PRIVATE/CSA/LPA
sdsf $DEL LOADMOD(loadmod)
sdsf $T   LOADMOD(loadmod),REFRESH

* Output Default
sdsf $D OUTDEF

* Output Control
sdsf $D ESTLNCT
sdsf $T ESTLNCT,NUM=120,INT=240000

* Initiators
sdsf $D INITDEF

* Output priority
sdsf $D OUTPRTY

* Output classes
sdsf $D OUTCLASS
sdsf $D OUTCLASS(J)
sdsf $D OUTCLASS(*)
sdsf $D OUTCLASS(I)
sdsf $T OUTCLASS(I),OUTDISP=(HOLD,HOLD)
sdsf $T OUTCLASS(I),OUTDISP=(WRITE,WRITE)

* Internal Reader
sdsf $D INTRDR
sdsf $D RDI

* Jobclass
sdsf $D JOBCLASS
sdsf $D JOBCLASS(nn)
sdsf $D JOBCLASS(A),LONG
sdsf $T JOBCLASS(nn),

* Job default
sdsf $D JOBDEF
sdsf $T JOBDEF,RANGE=(1-999999)

* Printer default
sdsf $D PRINTDEF

* NJE - Network Job Entry
* NJE Definition
sdsf $D NJEDEF
* NJE Node
sdsf $D NODE(1)
* NJE Netserver
sdsf $D NETSERV
sdsf $S NETSERV1
sdsf $P NETSERV1
* NJE Socket
sdsf $D SOCKET
sdsf $SN SOCKET=mysock
* NJE Line
sdsf $D LINE(1)
sdsf $S LINE(1)
sdsf $P LINE(1)
* NJE overall
sdsf $D NETwork
sdsf $S NETwork
sdsf $P NETwork

* show JES2 start information
$D INITINFOÄ,STARTCMDÜÄ,HASPPARMÜÄ,STEPLIBÜ
* Monitoring
* Display non-severe incident report
sdsf $JDJES

* Display current status
sdsf $JDSTATUS

* Display details summary of jobs
sdsf $JDDETAILS Ä(RESOURCE/MAIN/WAIT/ERROR/STORAGE)Ü
sdsf $JDDETAILS(MAIN)

* Display history of JES2 resource usage
sdsf $JDHISTORY Ä(MAIN/BERT/BSCB/BUFX/CKVR/CMBS/ERROR/ICES/JNUM/
                 JOES/JQES/LBUF/NHBS/SMFB/TGS/TTAB/VTMB)Ü
                ÄHours=72Ü
sdsf $JDHISTORY(JQES,JOES,TGS),HOURS=24
* Display current status of JES2 monitor subtasks
sdsf $JDMONITOR

* Terminate monitor address space
* automatic restart
sdsf $JSTOP

* how you can write commands:

sdsf $ D I N T R D R
sdsf $D/*good sample*/JQ
