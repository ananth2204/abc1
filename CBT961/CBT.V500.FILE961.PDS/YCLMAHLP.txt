/* Rexx by YCOS Yves Colliard Software - www.ycos.de                  */
/*                                                                    */
/*+------------------------------------------------------------------+*/
/*| YCLMACRX     (c)  YCOS Yves Colliard Software                    |*/
/*|                   2004-17                                        |*/
/*|                   Mail yves.colliardÂ§ycos.de                     |*/
/*|                   Use at your own RISK|                          |*/
/*+------------------------------------------------------------------+*/
/*| Help File - see YCLMACRX                                         |*/
/*+------------------------------------------------------------------+*/

befq=queued()
queue '+------------------------------------------------------------------+'
queue '| YCLMACRX     (c)  YCOS Yves Colliard Software                    |'
queue '+------------------------------------------------------------------+'
queue '|                                                                   '
queue '| Functions of YCLMACRX:                                            '
queue '| H      ==>> Show help as note                                     '
queue '| HELP   ==>> Show help                                             '
queue '|             Help from outside - TSO YCLMACRX                      '
queue '| HV     ==>> Show help as view                                     '
queue '| HC     ==>> Show a Short description of each command              '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| RV     ==>> Reverse the line text                                 '
queue '|             Block: RVV - RVV                                      '
queue '|             Multi: RV#                                            '
queue '|                                                                   '
queue 'RV 024 Help File - see YCLMACRX                                     '
queue '-> Result:                                                          '
queue '000024                                      XRCAMLCY ees - eliF pleH'
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| CE     ==>> Center the line text                                  '
queue '|             Block: CEE - CEE                                      '
queue '|             Multi: CE#                                            '
queue '|                                                                   '
queue 'CE 024 Help File - see YCLMACRX                                     '
queue '-> Result:                                                          '
queue '000024                   Help File - see YCLMACRX                   '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| AL     ==>> Align Left the line text                              '
queue '|             Block: ALL - ALL                                      '
queue '|             Multi: AL#                                            '
queue '|                                                                   '
queue 'AL 024                   Help File - see YCLMACRX                   '
queue '-> Result:                                                          '
queue '000024 Help File - see YCLMACRX                                     '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| AR     ==>> Align Right the line text                             '
queue '|             Block: ARR - ARR                                      '
queue '|             Multi: AR#                                            '
queue '|                                                                   '
queue 'AR 024 Help File - see YCLMACRX                                     '
queue '-> Result:                                                          '
queue '000024                                      Help File - see YCLMACRX'
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| AU     ==>> Align Up the line text as the previous line           '
queue '|             Block: AUU - AUU                                      '
queue '|             Multi: AU#                                            '
queue '|                                                                   '
queue '000107      ISupport="CE RV AL AR E EX V DI DL",                    '
queue 'AU 108 newl="YVES"                                                  '
queue '-> Result:                                                          '
queue '000107      ISupport="CE RV AL AR E EX V DI DL",                    '
queue '000108      newl="YVES"                                             '
queue '|                                                                   '
queue '|             if JCL found - alignment based on:                    '
queue '|             Ref Line "JCL Comment   -> column 15                  '
queue '|             Ref Line "// "          -> first parameter statement  '
queue '|                     if more than 16 -> use column 15              '
queue '|             else     "//D1 DD DSN=" -> third parameter statement  '
queue '|                     if more than 16 -> use column 15              '
queue '000093 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue 'AU5 94 //   DISP=(,CATLG),                                          '
queue '000095 //     SPACE=(TRK,(15,15),RLSE),                             '
queue '000096 // STORCLAS=SMS,                                             '
queue '000097 //     RECFM=FB,                                             '
queue '000098 //    LRECL=4160                                             '
queue '-> Result:                                                          '
queue '000093 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '000094 //         DISP=(,CATLG),                                    '
queue '000095 //         SPACE=(TRK,(15,15),RLSE),                         '
queue '000096 //         STORCLAS=SMS,                                     '
queue '000097 //         RECFM=FB,                                         '
queue '000098 //         LRECL=4160                                        '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| AD     ==>> Align Down the line text as the next line             '
queue '|             Block: ADD - ADD                                      '
queue '|             Multi: AD#                                            '
queue '|                                                                   '
queue 'AD 108 newl="YVES"                                                  '
queue '000109            "DS DM DX AU AD CM YX LD HELP H AE EA CL"         '
queue '-> Result:                                                          '
queue '000108            newl="YVES"                                       '
queue '000109            "DS DM DX AU AD CM YX LD HELP H AE EA CL"         '
queue '|                                                                   '
queue '|             if JCL found - alignment based on:                    '
queue '|             Ref Line "JCL Comment   -> column 15                  '
queue '|             Ref Line "// "          -> first parameter statement  '
queue '|                     if more than 16 -> use column 15              '
queue '|             else     "//D1 DD DSN=" -> third parameter statement  '
queue '|                     if more than 16 -> use column 15              '
queue '000107 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue 'ADD 08 //   DISP=(,CATLG),                                          '
queue '000109 //     SPACE=(TRK,(15,15),RLSE),                             '
queue '000110 // STORCLAS=SMS,                                             '
queue 'ADD 11 //     RECFM=FB,                                             '
queue '000112 //      LRECL=4160                                           '
queue '-> Result:                                                          '
queue '000107 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '000108 //      DISP=(,CATLG),                                       '
queue '000109 //      SPACE=(TRK,(15,15),RLSE),                            '
queue '000110 //      STORCLAS=SMS,                                        '
queue '000111 //      RECFM=FB,                                            '
queue '000112 //      LRECL=4160                                           '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| YX     ==>> Hex one line as note (native support 1.11|)           '
queue '|             Block: YXX - YXX                                      '
queue '|             Multi: YX#                                            '
queue '|                                                                   '
queue 'YX 107 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '-> Result:                                                          '
queue '000107 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '====== 66EEEDCEDD4CC4CED7EECE4ECDE4EC4CEDD6444444444444444          '
queue '====== 11282444470440425E8552B8362B26B4447B000000000000000          '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| YD     ==>> Hex one line as note (in data form)                   '
queue '|             Block: YDD - YDD                                      '
queue '|             Multi: YD#                                            '
queue '|                                                                   '
queue 'YD 107 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '-> Result:                                                          '
queue '000107 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '====== 6161E2E8E2D4C4E4D4D740C4C440C4E2D57EE8E5C5E24BE8C3D6E24BE2...'
queue '====== 4040404040404040404040404040404040404040404040404040404040...'
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| CL     ==>> Compare lines                                         '
queue '|             NO-Block and NO-Multi                                 '
queue '|             the lines to be compared could be marked with labels: '
queue '|               .EF and .EL                                         '
queue '|             the selected line and the next line will be compared  '
queue '|             differences will be shown with an infoline:           '
queue '|             - single character difference with a |                '
queue '|             - many characters with <----> or <>                   '
queue '|                                                                   '
queue 'CL 001 THIS IS MY FIRST LINE WITH SOME HEX          AND OTHER DATA  '
queue '000002 THIX IS MY OTHER LINE WITH SOME HEX          AND XTHER ADTA  '
queue '-> Result:                                                          '
queue '000001 THIS IS MY FIRST LINE WITH SOME HEX          AND OTHER DATA  '
queue '======    |       <--->                     |     |     |     <>    '
queue '000002 THIX IS MY OTHER LINE WITH SOME HEX          AND XTHER ADTA  '
queue '|                                                                   '
queue '|        ==>> Compare lines - NOT ADJACENT|                         '
queue '|                                                                   '
queue 'CL 005 lmactest                                                     '
queue '000006 lmactest                                                     '
queue '.EF 07 THIS IS MY FIRST LINE WITH SOME HEX          AND OTHER DATA  '
queue '000008 lmactest                                                     '
queue '000009 lmactest                                                     '
queue '.EL 10 THIX IS MY OTHER LINE WITH SOME HEX          AND XTHER ADTA  '
queue '-> Result:                                                          '
queue '.EF    THIS IS MY FIRST LINE WITH SOME HEX          AND OTHER DATA  '
queue '======    |       <--->                     |     |     |     <>    '
queue '.EL    THIX IS MY OTHER LINE WITH SOME HEX          AND XTHER ADTA  '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| CM     ==>> Comment/uncomment lines                               '
queue '|             Block: CMM - CMM                                      '
queue '|             Multi: CM#                                            '
queue '|             if JCL: try to toggle // and //*                      '
queue '|                                                                   '
queue '000117 //SYSPRINT DD DSN=YVESCOL.AMBLIST,                           '
queue 'CM4 18 //            DISP=SHR                                       '
queue '000119 //*            DISP=(,CATLG),                                '
queue '000120 //*            SPACE=(TRK,(50,10),RLSE),                     '
queue '000121 //*            DCB=(RECFM=VBA,LRECL=137),MGMTCLAS=BAT#NJ     '
queue '000122 //SYSIN      DD      *                                       '
queue '-> Result:                                                          '
queue '000117 //SYSPRINT DD DSN=YVESCOL.AMBLIST,                           '
queue '000118 //*            DISP=SHR                                      '
queue '000119 //            DISP=(,CATLG),                                 '
queue '000120 //            SPACE=(TRK,(50,10),RLSE),                      '
queue '000121 //            DCB=(RECFM=VBA,LRECL=137),MGMTCLAS=BAT#NJ      '
queue '000122 //SYSIN      DD      *                                       '
queue '|                                                                   '
queue '|             not JCL: create a before/after comment a la rexx      '
queue '|                                                                   '
queue '000124 else do                                                      '
queue 'CM3 25   ISupport="CE RV AL AR E EX V DI DL",                       '
queue '000126            newl="YVES"                                       '
queue '000127            "DS DM DX AU AD CM YX LD HELP H AE EA CL"         '
queue '000128 end                                                          '
queue '-> Result:                                                          '
queue '000124 else do                                                      '
queue '000125   /* Comment Start                                           '
queue '000126   ISupport="CE RV AL AR E EX V DI DL",                       '
queue '000127            newl="YVES"                                       '
queue '000128            "DS DM DX AU AD CM YX LD HELP H AE EA CL"         '
queue '000129      Comment End */                                          '
queue '000130 end                                                          '
queue '|                                                                   '
queue '|                  if given on "Comment Start" or "Comment End"     '
queue '|                     it will delete them                           '
queue '000124 else do                                                      '
queue '000125   /* Comment Start                                           '
queue 'CM 126   ISupport="CE RV AL AR E EX V DI DL",                       '
queue '000127            newl="YVES"                                       '
queue '000128            "DS DM DX AU AD CM YX LD HELP H AE EA CL"         '
queue '000129      Comment End */                                          '
queue '000130 end                                                          '
queue '-> Result:                                                          '
queue '000025   ISupport="CE RV AL AR E EX V DI DL",                       '
queue '000126            newl="YVES"                                       '
queue '000127            "DS DM DX AU AD CM YX LD HELP H AE EA CL"         '
queue '             +---------------------------------------+              '
queue '             ] Comments on lines 125 and 129 deleted ]              '
queue '             +---------------------------------------+              '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| LN     ==>> Display the number of characters of variable length   '
queue '|             Block: LNN - LNN                                      '
queue '|             Multi: LN#                                            '
queue '|             datasets - could be important for USS|                '
queue '|             L= line size/length                                   '
queue '|                                                                   '
queue 'LN2 01 information of line 1                                        '
queue '000002 even more information on line 2                              '
queue '000003 nothing...                                                   '
queue '-> Result:                                                          '
queue '====== L=00021 -1----+----2-                                        '
queue '000001 information of line 1                                        '
queue '====== L=00031 -1----+----2----+----3-                              '
queue '000002 even more information on line 2                              '
queue '000003 nothing...                                                   '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| TOPD   ==>> Delete all lines from here to the top                 '
queue '|             NO-Block and NO-Multi                                 '
queue '|             will inform about number of lines                     '
queue '|                                                                   '
queue '000104 //SYSPROC  DD DSN=YVES.CLIST,DISP=SHR                        '
queue '000105 //SYSEXEC  DD DSN=YVES.CLIST,DISP=SHR                        '
queue '000106 //SYSTSPRT DD SYSOUT=*                                       '
queue 'TOPD 7 //SYSOUT   DD SYSOUT=*                                       '
queue '000108 //SYSPRINT DD SYSOUT=*                                       '
queue '000109 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '000110 //   DISP=(,CATLG),                                          '
queue '000111 //     SPACE=(TRK,(15,15),RLSE),                             '
queue '000112 // STORCLAS=SMS,                                             '
queue '-> Result:                                                          '
queue '000001 //SYSPRINT DD SYSOUT=*                                       '
queue '000002 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '000003 //   DISP=(,CATLG),                                          '
queue '000004 //     SPACE=(TRK,(15,15),RLSE),                             '
queue '000005 // STORCLAS=SMS,                                             '
queue '               +-------------------+                                '
queue '               ] 107 lines deleted ]                                '
queue '               +-------------------+                                '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| BOTD   ==>> Delete all lines from here to the bottom              '
queue '|             NO-Block and NO-Multi                                 '
queue '|             will inform about number of lines                     '
queue '|             D9999 could also be used, but sometime not so "good"  '
queue '|                                                                   '
queue '000087 //*----------------------------*                             '
queue '000088 //PRINT     EXEC PGM=IKJEFT01,REGION=0M                      '
queue 'BOTD 9 //STEPLIB  DD DISP=SHR,DSN=YVES.YCDIAG.LINKLIB               '
queue '000090 //SYSPROC  DD DSN=YVES.CLIST,DISP=SHR                        '
queue '-> Result:                                                          '
queue '000088 //PRINT     EXEC PGM=IKJEFT01,REGION=0M                      '
queue '               +------------------+                                 '
queue '               ] 86 lines deleted ]                                 '
queue '               +------------------+                                 '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| TOPX   ==>> eXclude all lines from here to the top                '
queue '|             NO-Block and NO-Multi                                 '
queue '|             will inform about number of lines                     '
queue '|                                                                   '
queue '000104 //SYSPROC  DD DSN=YVES.CLIST,DISP=SHR                        '
queue '000105 //SYSEXEC  DD DSN=YVES.CLIST,DISP=SHR                        '
queue '000106 //SYSTSPRT DD SYSOUT=*                                       '
queue 'TOPX 7 //SYSOUT   DD SYSOUT=*                                       '
queue '000108 //SYSPRINT DD SYSOUT=*                                       '
queue '000109 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '000110 //   DISP=(,CATLG),                                          '
queue '000111 //     SPACE=(TRK,(15,15),RLSE),                             '
queue '000112 // STORCLAS=SMS,                                             '
queue '-> Result:                                                          '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -  93 Line(s) not Displayed '
queue '000094 //SYSPRINT DD SYSOUT=*                                       '
queue '000095 //SYSMDUMP DD DSN=YVES.YCOS.SF.DUMP,                         '
queue '000096 //   DISP=(,CATLG),                                          '
queue '000097 //     SPACE=(TRK,(15,15),RLSE),                             '
queue '000098 // STORCLAS=SMS,                                             '
queue '               +-------------------+                                '
queue '               ] 93 lines excluded ]                                '
queue '               +-------------------+                                '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| BOTX   ==>> eXclude all lines from here to the bottom             '
queue '|             NO-Block and NO-Multi                                 '
queue '|             will inform about number of lines                     '
queue '|             X9999 could also be used, but sometime not so "good"  '
queue '|                                                                   '
queue '000087 //*----------------------------*                             '
queue '000088 //PRINT     EXEC PGM=IKJEFT01,REGION=0M                      '
queue 'BOTX 9 //STEPLIB  DD DISP=SHR,DSN=YVES.YCDIAG.LINKLIB               '
queue '000090 //SYSPROC  DD DSN=YVES.CLIST,DISP=SHR                        '
queue '-> Result:                                                          '
queue '000088 //PRINT     EXEC PGM=IKJEFT01,REGION=0M                      '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -  86 Line(s) not Displayed '
queue '               +------------------+                                 '
queue '               ] 86 lines deleted ]                                 '
queue '               +------------------+                                 '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| FI     ==>> FindFirst where the cursor is placed - or first word  '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue 'FI 176 we search sdsf                                               '
queue '|                 |                                                 '
queue '|                 +-- cursor pointing on SDSF                       '
queue '-> Result:                                                          '
queue '000130 * time                                                       '
queue '000131 sdsf d t                                                     '
queue '|      |                                                            '
queue '|      +-- sdsf on line 131 found                                   '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| FL     ==>> FindLast  where the cursor is placed - or first word  '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue 'FL 131 we search sdsf                                               '
queue '                  |                                                 '
queue '                  +-- cursor pointing on SDSF                       '
queue '-> Result:                                                          '
queue '000780 * time                                                       '
queue '00 781 sdsf d t                                                     '
queue '       |                                                            '
queue '       +-- sdsf on line 781 found                                   '
queue '|                                                                   '
queue '| =========== Text Commands ======================================= '
queue '| FA     ==>> FindAll   where the cursor is placed - or first word  '
queue '|                       other lines will be excluded                '
queue '|             Multi: FA#                                            '
queue '|                       will also show # lines before and after     '
queue '|                                                                   '
queue '000130 * time                                                       '
queue '000131 sdsf d t                                                     '
queue '000132                                                              '
queue '000133 * work with exits                                            '
queue 'FA 134 sdsf SETPROG EXIT,ADD,  +                                    '
queue '        |                                                           '
queue '        +-- cursor pointing on SDSF                                 '
queue '-> Result:                                                          '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -  130 Line(s) not Displayed'
queue '000131 sdsf d t                                                     '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -  - 2 Line(s) not Displayed'
queue '000134 sdsf SETPROG EXIT,ADD,  +                                    '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -   41 Line(s) not Displayed'
queue '000176 we search sdsf                                               '
queue '|                                                                   '
queue '|             Multi: FA#                                            '
queue '000130 * time                                                       '
queue '000131 sdsf d t                                                     '
queue '000132                                                              '
queue '000133 * work with exits                                            '
queue 'FA2 34 sdsf SETPROG EXIT,ADD,  +                                    '
queue '        |                                                           '
queue '        +-- cursor pointing on SDSF                                 '
queue '-> Result:                                                          '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -  128 Line(s) not Displayed'
queue '000129                                                              '
queue '000130 * time                                                       '
queue '000131 sdsf d t                                                     '
queue '000132 next line1                                                   '
queue '000133 next line2                                                   '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -  - 2 Line(s) not Displayed'
queue '000136 previous line2                                               '
queue '000137 * work with exits                                            '
queue '000138 sdsf SETPROG EXIT,ADD,  +                                    '
queue '000139           EX=SYS.IEFUSI,    +                                '
queue '000140      MOD=YCDUSI,    +                                        '
queue '- - -  -  -  -  -  -  -  -  -  -  -  -  -   37 Line(s) not Displayed'
queue '000178        *C*                                                   '
queue '000179                                                              '
queue '000180 we search sdsf                                               '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '|             Analyse the line to find a dataset                    '
queue '|             Make a difference if JCL or not                       '
queue '|             JCL search DSN= and JCLLIB ORDER= and PATH=           '
queue '|             For JCL which is not DSN or JCLLIB (e.g. PROC)        '
queue '|             support dataset in parameter=dataset                  '
queue '|             If not JCL search a nn.nn.nn                          '
queue '|             If more than one nn.nn.nn in line process first       '
queue '|             or nn.nn.nn pointed to by cursor position.            '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| E      ==>> Edit the dataset                                      '
queue '| EZ     ==>> Edit the dataset in new Split Screen                  '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| V      ==>> View the dataset                                      '
queue '| VZ     ==>> View the dataset in new Split Screen                  '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DA     ==>> Dataset allocation like - JCL and TSO Allocate        '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DI     ==>> DSINFO the dataset                                    '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DL     ==>> LISTCAT the dataset                                   '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DS     ==>> DSLIST the dataset 3.4                                '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DX     ==>> DSLIST first n Qualifiers 3.4                         '
queue '|             Multi: DX#                                            '
queue '|             Default (not like DZ) will show first qualifier       '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DZ     ==>> DSLIST first n Qualifiers 3.4 in new Split Screen     '
queue '|             Multi: DZ#                                            '
queue '|             Default (not like DX) will show all qualifiers        '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DM     ==>> MemberList 3.1                                        '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| LD     ==>> Execute the RACF LISTDSD/LD Command                   '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Dataset Commands ==================================== '
queue '| DH     ==>> HSM List command - Display HSM Migrate/Backup         '
queue '|             data and give the possibility to                      '
queue '|             HRECALL or HRESTORE                                   '
queue '|             the selected data - using the EX Line Command         '
queue '|             NO-Block and NO-Multi                                 '
queue '|                                                                   '
queue '| =========== Edit Command     ==================================== '
queue '| RU     ==>> Call RU to create a ruler as a note starting at the   '
queue '|             current cursor position                               '
queue '| Example:      X <== Cursor is here when RULER starts              '
queue '|               ----+----1----+----2----+----3----+----4----+---... '
queue '| RU# (any number from 1-...) will give the number                  '
queue '|               ----+---10----+---20----+----30-...--150----+---... '
queue '|             Author: Norbert Haas                                  '
queue '|                                                                   '
queue '+------------------------------------------------------------------+'
queue '| =========== TSO Commands ======================================== '
queue '| EX     ==>> Execute the cmd line - as a tso cmd                   '
queue '|             NO-Block and NO-Multi                                 '
queue '|             Output will be displayed using ISPF VIEW              '
queue '|             TSO is default and has not to be given|               '
queue '|             the lines can be continued with a + or a ,            '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        execute the command under TSO               |  '
queue '|           |                                                    |  '
queue '|        -> | EX0002 lista st h                                  |  '
queue "|           | 000003 listc ent('a.very.imp.ds') all              |  "
queue "|           | 000004 listc ent('a.very.imp.ds') all              |  "
queue '|           | 000005 tso listc,                                  |  '
queue "|           | 000006     ent('a.very.imp.ds')+                   |  "
queue '|           | 000007     all                                     |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACTSO                                    '
queue '|                                                                   '
queue '| =========== SDSF Commands ======================================= '
queue '| EX     ==>> Execute the cmd line - as a SDSF command like /...    '
queue '|             NO-Block and NO-Multi                                 '
queue '|             Output will be displayed using ISPF EDIT              '
queue '|             the lines can be continued with a + or a ,            '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        execute the command under SDSF              |  '
queue '|           |                                                    |  '
queue '|           | 000001 sdsf  d a                                   |  '
queue '|           | 000002 sdsf  d xcf,str                             |  '
queue '|        -> | EX0003 sdsf  d prog,     +                         |  '
queue '|           | 000004        lpa, +                               |  '
queue '|           | 000005         mod=iefbr14                         |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACMVS                                    '
queue '|             see member LMACJES2                                   '
queue '|             see member LMACJES3                                   '
queue '|                                                                   '
queue '| =========== Other Commands ====================================== '
queue '| EX     ==>> Execute the cmd line - as an EJES command like /...   '
queue '|             NO-Block and NO-Multi                                 '
queue '|             Output will be displayed using ISPF EDIT              '
queue '|             the lines can be continued with a + or a ,            '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        execute the command under EJES (c)          |  '
queue '|           |                                                    |  '
queue '|           | 000001 ejes  d a                                   |  '
queue '|           | 000002 ejes  d xcf,str                             |  '
queue '|        -> | EX0003 ejes  d prog,     +                         |  '
queue '|           | 000004        lpa, +                               |  '
queue '|           | 000005         mod=iefbr14                         |  '
queue '|           +----------------------------------------------------+  '
queue '|                                                                   '
queue '| =========== Unix Commands ======================================= '
queue '| EX     ==>> Execute the cmd line - as a UNIX command like Shell   '
queue '|             NO-Block and NO-Multi                                 '
queue '|             the command can also be run as a Superuser - if       '
queue '|                 authority is given - using the UNIXSU prefix      '
queue '|             Output will be displayed using ISPF EDIT              '
queue '|             the lines can be continued with a + or a ,            '
queue '|                 ||| but here not a directory |||                  '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        execute the command under Unix USS          |  '
queue '|           |                                                    |  '
queue '|           | 000018 unix ls                                     |  '
queue '|           | 000019 unixsu  ls                                  |  '
queue '|        -> | EX0020 unixsu mkdir -m 755 /u/AUTH                 |  '
queue '|           | 000021 unix mkdir -m 755 /u/NOTAUTH                |  '
queue '|           | 000022 unix ls -l /u/PFA                           |  '
queue '|           | 000023 unix ls -l +                                |  '
queue '|           | 000024         /u                                  |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACUSS                                    '
queue '|                                                                   '
queue '|             Since version 2.11 you can use the                    '
queue '|             unixenv and unixsuenv                                 '
queue '|             to run the command using the same environment         '
queue '|             variables like you would have starting the command    '
queue '|             under the OMVS Shell                                  '
queue '|             - this will cost some more overhead|                  '
queue '|             - the used environment variables will be listed at    '
queue '|               the end of the display                              '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        execute the command under Unix USS          |  '
queue '|           |        using the environment variables             |  '
queue '|           |                                                    |  '
queue '|           | 000018 unixenv javac mypgm.java                    |  '
queue '|           +----------------------------------------------------+  '
queue '|                                                                   '
queue '|           +----------------------------------------------------+  '
queue '|           |        execute the command under Unix USS          |  '
queue '|           |        using the environment variables             |  '
queue '|           |        and setting own environment variables       |  '
queue '|           | Syntax:                                            |  '
queue '|           |   first line only: unixenv +                       |  '
queue '|           |   second line eyecatcher: env_variable_start       |  '
queue '|           |   many lines with environment variables            |  '
queue '|           |   eyecatcher: env_variable_end                     |  '
queue '|           |   command line (with continuation if needed)       |  '
queue '|           |                                                    |  '
queue '|           | 000167 unixenv +                                   |  '
queue '|           | 000168 env_variable_start                          |  '
queue '|           | 000169 PATH=/usr/lpp/dfsms/bin                     |  '
queue '|           | 000170 env_variable_end                            |  '
queue '|           | 000171   confighfs +                               |  '
queue '|           | 000172   -l                                        |  '
queue '|           +----------------------------------------------------+  '
queue '|                                                                   '
queue '| =========== Unix File/Directory List commands =================== '
queue '| EX     ==>> Execute the cmd line - as a UDLIST 3.17 command       '
queue '|             the lines can be continued with a + or a ,            '
queue '|             NO-Block and NO-Multi                                 '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        display the path using UDLIST - 3.17        |  '
queue '|           |                                                    |  '
queue '|           | 000039 udlist /u                                   |  '
queue '|           | 000040 udlist /u/zfs/YVES                          |  '
queue '|        -> | EX0041 udlist /u/zfs      +                        |  '
queue '|           | 000042              /YVES +                        |  '
queue '|           | 000043        /DIR                                 |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACUSS                                    '
queue '|                                                                   '
queue '| =========== Unix Directory Find Commands ======================== '
queue '| EX     ==>> Execute the cmd line - as a Unix FIND for a           '
queue '|             directory and show all results with UDLIST 3.17       '
queue '|             the lines can be continued with a + or a ,            '
queue '|                 ||| but here not the directory |||                '
queue '|             NO-Block and NO-Multi                                 '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        find and display all directories within     |  '
queue '|           |        first parm is path                          |  '
queue '|           |        second parm is directory name (also generic)|  '
queue '|           |                                                    |  '
queue '|           | 000047 ufdir  /u o*                                |  '
queue '|        -> | EX0048 ufdir  /u/zfs/YVES *u*                      |  '
queue '|           | 000049 * the directory name CANNOT be continued||| |  '
queue '|           | 000050 ufdir  /u/zfs/YVES +                        |  '
queue '|           | 000051        *I*                                  |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACUSS                                    '
queue '|                                                                   '
queue '| =========== Unix File Find Commands ============================= '
queue '| EX     ==>> Execute the cmd line - as a Unix FIND for a           '
queue '|             file name and show all results with UDLIST 3.17       '
queue '|             the lines can be continued with a + or a ,            '
queue '|                 ||| but here not the directory |||                '
queue '|             NO-Block and NO-Multi                                 '
queue '|             for example with following lines                      '
queue '|           +----------------------------------------------------+  '
queue '|           |        find and display all files within given     |  '
queue '|           |        name within a given directoy tree           |  '
queue '|           |        first parm is path                          |  '
queue '|           |        second parm is file name (also generic)     |  '
queue '|           |                                                    |  '
queue '|           | 000062 uffil  /u/zfs/YVES +                        |  '
queue '|           | 000063        *y*                                  |  '
queue '|           | 000064 uffil  /u/zfs/YVES +                        |  '
queue '|           | 000065        *                                    |  '
queue '|           | 000066 * the directory name CANNOT be continued||| |  '
queue '|        -> | EX0067 uffil  /u          +                        |  '
queue '|           | 000068        *C*                                  |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACUSS                                    '
queue '|                                                                   '
queue '| =========== SA Commands ========================================= '
queue '| EX     ==>> Call IBM System Automation commands (need cust of SA) '
queue '|           +----------------------------------------------------+  '
queue '|        -> | EX0062 ing inglist                                 |  '
queue '|           | 000063 ing inglist ycplex                          |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACING                                    '
queue '|                                                                   '
queue '| =========== ISPF Commands ======================================= '
queue '| EX     ==>> Execute ISPF functions                                '
queue '|           +----------------------------------------------------+  '
queue '|           | 000062 * ispf diagnosis                            |  '
queue '|        -> | EX0063 ispf select cmd(ispvcall)                   |  '
queue '|           +----------------------------------------------------+  '
queue '|             see member LMACISPF                                   '
queue '|                                                                   '
queue '| =========== Other Commands ====================================== '
queue '| EX     ==>> External call of the EX function:                     '
queue '|             TSO YCLMACRX tso lista st h                           '
queue '|             TSO YCLMACRX sdsf d a,l                               '
queue '|             TSO YCLMACRX ejes d a,l                               '
queue '|             TSO YCLMACRX unix ps -le                              '
queue '|             TSO YCLMACRX unixsu ps -le                            '
queue '|             TSO YCLMACRX udlist /u/zfs/YVES                       '
queue '|             TSO YCLMACRX ufdir  /u o*                             '
queue '|             TSO YCLMACRX uffil  /u/zfs/YVES *y*                   '
queue '|                                                                   '
queue '| =========== Other Commands ====================================== '
queue '| AE     ==>> Ascii -> Ebcdic - simple table                        '
queue '|             Block: AEE - AEE                                      '
queue '|             Multi: AE#                                            '
queue '| EA     ==>> Ebcdic -> Ascii - simple table                        '
queue '|             Block: EAA - EAA                                      '
queue '|             Multi: EA#                                            '
queue '|                                                                   '
queue '| =========== Other Commands ====================================== '
queue '| JU     ==>> JCL Upper Case                                        '
queue '|             Block: JUU - JUU                                      '
queue '|             Multi: JU#                                            '
queue '|             Work "like" UC but it will not Uppercase              '
queue '|             - jcl comment lines                                   '
queue '|             - sysin (not JCL)                                     '
queue '|             - all quoted data, like PATH=, PARM=...               '
queue '|                                                                   '
queue '| =========== General Information ================================= '
queue '| H HELP E V EZ VZ DH DI DL DM DS EX CL LD REV FI FL FA             '
queue '| are single line commands                                          '
queue '|                                                                   '
queue '| All othes can be given in the forms                               '
queue '|     CE5                                                           '
queue '|   or                                                              '
queue '|     CEE                                                           '
queue '|      ...                                                          '
queue '|     CEE                                                           '
queue '|                                                                   '
queue '| =========== Usage Hint ========================================== '
queue '| Line Commands could also be defined on PFKs using :xx notation    '
queue '| Possible good candidates like :E or :V or :DS and others          '
queue '|                                                                   '
queue '+------------------------------------------------------------------+'
queue '| Vers 2.20  02.03.2018 Yves Colliard                              |'
queue '|            - Extention of YCLMACRX to execute                    |'
queue '|              the RU command - RULER                              |'
queue '| Based on - many thanks to Norbert Haas                           |'
queue '| Name:        RULER                                               |'
queue '| Type:        Macro                                               |'
queue '| Author:      Norbert Haas                                        |'
queue '|              Y$RU member needed                                  |'
queue '+------------------------------------------------------------------+'

call yclmahlu                                          /* 2.17 */

parse source . calltype .
if calltype="SUBROUTINE" then exit

/* direct call */
Address  ISPEXEC "CONTROL ERRORS RETURN"     /* Return ispf errors  */

Address ISPEXEC "VGET (ZOS390RL)"                      /* 2.10 */
                   /* "z/OS   01.13.00"   */           /* 2.10 */
ed_parms=""                                            /* 2.10 */
if ZOS390RL = "z/OS   01.13.00" |,                     /* 2.10 */
   left(ZOS390RL,10)="z/OS   02." then do              /* 2.10 */
  Address ISPEXEC "VGET (ZLMAC)"                       /* 2.10 */
  if ZLMAC <> "" then do                               /* 2.10 */
    ed_parms=" LINECMDS("strip(ZLMAC)")"               /* 2.10 */
  end                                                  /* 2.10 */
end                                                    /* 2.10 */
do cnt1=1 to befq
         parse pull bm.cnt1
end
do cnt=1 to queued()
         parse pull msg
         m.cnt=Msg
end
do cnt1=1 to befq
         queue bm.cnt1
end
/* alloc output datasets */
call bpxwdyn "alloc space(15,15) tracks new delete lrecl(80)",
"recfm(f,b) dsorg(ps) msg(ymsg1.) rtddn(ydd1) rtdsn(ydsn1)"
if result<>0 then do
  say "Alloc temp dataset error:" result
  do i=1 to ymsg1.0
    say ymsg1.i
  end
  do i=1 to cnt-1
    say m.i
  end
  exit 0
end
/* write the data */
address mvs "execio "cnt-1" diskw "ydd1" (stem m. finis"
/* show the result */
address ispexec "lminit dataid(myou) ddname("ydd1")"
address ispexec "edit dataid("myou")"ed_parms          /* 2.10 */
address ispexec "lmfree dataid("myou")"
msgset=msg('OFF')
address tso "free fi("ydd1")"
msgset=msg(msgset)
