/* Rexx by YCOS Yves Colliard Software - www.ycos.de                  */
/*                                                                    */
/*+------------------------------------------------------------------+*/
/*| Help File - Displays only the commands with 1 line description   |*/
/*+------------------------------------------------------------------+*/

ADDRESS ISREDIT

"ISREDIT MACRO"

befq=queued()
queue '+------------------------------------------------------------------+'
queue '|                                                                   '
queue '| Line commands and a short description:                            '
queue '|                                                                   '
queue '| H      ==>> Show help as note                                     '
queue '| HC     ==>> Show a Short description of each command              '
queue '| HELP   ==>> Show help                                             '
queue '| HV     ==>> Show help as view                                     '
queue '| RV     ==>> Reverse the line text                                 '
queue '| CE     ==>> Center the line text                                  '
queue '| AL     ==>> Align Left the line text                              '
queue '| AR     ==>> Align Right the line text                             '
queue '| AU     ==>> Align Up the line text as the previous line           '
queue '| AD     ==>> Align Down the line text as the next line             '
queue '| YX     ==>> Hex one line as note (native support 1.11|)           '
queue '| YD     ==>> Hex one line as note (in data form)                   '
queue '| CL     ==>> Compare lines                                         '
queue '| CM     ==>> Comment/uncomment lines                               '
queue '| LN     ==>> Display the number of characters of variable length   '
queue '| TOPD   ==>> Delete all lines from here to the top                 '
queue '| BOTD   ==>> Delete all lines from here to the bottom              '
queue '| TOPX   ==>> eXclude all lines from here to the top                '
queue '| BOTX   ==>> eXclude all lines from here to the bottom             '
queue '| FI     ==>> FindFirst where the cursor is placed - or first word  '
queue '| FL     ==>> FindLast  where the cursor is placed - or first word  '
queue '| FA     ==>> FindAll   where the cursor is placed - or first word  '
queue '| E      ==>> Edit the dataset                                      '
queue '| EZ     ==>> Edit the dataset in new Split Screen                  '
queue '| V      ==>> View the dataset                                      '
queue '| VZ     ==>> View the dataset in new Split Screen                  '
queue '| REV    ==>> View the dataset with REVIEW (also VSAM)              '
queue '| DA     ==>> Dataset allocation like - JCL and TSO Allocate        '
queue '| DI     ==>> DSINFO the dataset                                    '
queue '| DL     ==>> LISTCAT the dataset                                   '
queue '| DS     ==>> DSLIST the dataset 3.4                                '
queue '| DX     ==>> DSLIST first n Qualifiers 3.4                         '
queue '| DZ     ==>> DSLIST first n Qualifiers 3.4 in new Split Screen     '
queue '| DM     ==>> MemberList 3.1                                        '
queue '| LD     ==>> Execute the RACF LISTDSD/LD Command                   '
queue '| DH     ==>> HSM List command - Display HSM Migrate/Backup         '
queue '] RU     ==>> Create a ruler as a notes where cursor is located     '
queue '| EX     ==>> Execute the cmd line - as a tso cmd                   '
queue '| EX     ==>> Execute the cmd line - as a SDSF command like /...    '
queue '| EX     ==>> Execute the cmd line - as an EJES command like /...   '
queue '| EX     ==>> Execute the cmd line - as a UNIX command like Shell   '
queue '| EX     ==>> Execute the cmd line - as a UDLIST 3.17 command       '
queue '| EX     ==>> Execute the cmd line - as a Unix FIND for a directory '
queue '| EX     ==>> Execute the cmd line - as a Unix FIND for a file name '
queue '| EX     ==>> Execute the cmd line - as a System automation cmd     '
queue '| EX     ==>> Execute the cmd line - as an ISPF command             '
queue '| AE     ==>> Ascii -> Ebcdic - simple table                        '
queue '| EA     ==>> Ebcdic -> Ascii - simple table                        '
queue '| JU     ==>> JCL Upper Case                                        '
queue '|                                                                   '
queue '| =========== General Information ================================= '
queue '|                                                                   '
queue '| H HELP E V EZ VZ DH DI DL DM DS EX CL LD REV FI FL FA             '
queue '| are single line commands                                          '
queue '|                                                                   '
queue '| All othes can be given in the forms                               '
queue '|     CE5                                                           '
queue '|   or                                                              '
queue '|     CEE                                                           '
queue '|      ...                                                          '
queue '|     CEE                                                           '
queue '|                                                                   '
queue '| =========== Usage Hint ========================================== '
queue '|                                                                   '
queue '| Line Commands could also be defined on PFKs using :xx notation    '
queue '| Possible good candidates like :E or :V or :DS and others          '
queue '|                                                                   '
queue '+------------------------------------------------------------------+'
parse source . calltype .
if calltype="SUBROUTINE" then exit

/* direct call */
Address  ISPEXEC "CONTROL ERRORS RETURN"     /* Return ispf errors  */

Address ISPEXEC "VGET (ZOS390RL)"                      /* 2.10 */
                   /* "z/OS   01.13.00"   */           /* 2.10 */
ed_parms=""                                            /* 2.10 */
if ZOS390RL = "z/OS   01.13.00" |,                     /* 2.10 */
   left(ZOS390RL,10)="z/OS   02." then do              /* 2.10 */
  Address ISPEXEC "VGET (ZLMAC)"                       /* 2.10 */
  if ZLMAC <> "" then do                               /* 2.10 */
    ed_parms=" LINECMDS("strip(ZLMAC)")"               /* 2.10 */
  end                                                  /* 2.10 */
end                                                    /* 2.10 */
do cnt1=1 to befq
         parse pull bm.cnt1
end
do cnt=1 to queued()
         parse pull msg
         m.cnt=Msg
end
do cnt1=1 to befq
         queue bm.cnt1
end
/* alloc output datasets */
call bpxwdyn "alloc space(15,15) tracks new delete lrecl(80)",
"recfm(f,b) dsorg(ps) msg(ymsg1.) rtddn(ydd1) rtdsn(ydsn1)"
if result<>0 then do
  say "Alloc temp dataset error:" result
  do i=1 to ymsg1.0
    say ymsg1.i
  end
  do i=1 to cnt-1
    say m.i
  end
  exit 0
end
/* write the data */
address mvs "execio "cnt-1" diskw "ydd1" (stem m. finis"
/* show the result */
address ispexec "lminit dataid(myou) ddname("ydd1")"
address ispexec "edit dataid("myou")"ed_parms          /* 2.10 */
address ispexec "lmfree dataid("myou")"
msgset=msg('OFF')
address tso "free fi("ydd1")"
msgset=msg(msgset)
