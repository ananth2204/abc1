{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012550000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 529074, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE667.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE667.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\t\\n'", "DS1TRBAL": "b'\\x07,'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xba\\x00\\x04\\x04\\xba\\x00\\r\\x00\\n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04A\\x00\\x00\\x01\\x04\\x05?\\x01\\x04\\x05?\\x10\\x18\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf5@@@'", "ispf": {"version": "04.65", "flags": 0, "createdate": "2004-02-22T00:00:00", "modifydate": "2004-02-22T10:18:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-465"}, "text": "REGULAR CBT TAPE - VERSION 465    FILE:  667\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT465.FILE667\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 20 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,646 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/22/04    10:18:27    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$INTRO": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x01\\x04\\x04\\x8f\\x01\\x04\\x05\\x0f\\x10\\x13\\x00P\\x00O\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-02-19T10:13:32", "lines": 80, "newlines": 79, "modlines": 0, "user": "RPGTUTR"}, "text": "\n\n    RPG Tutorial\n\n\nI began learning RPG in 1973 at the same time I began learning\nCOBOL.  I had the good fortune of becoming employed by the\ncollege I was attending on a work-study program, so the same\npeople who were teaching the courses were available to me\nvirtually all day, everyday.  When I first started working there,\nthere were two programmers teaching and maintaining systems for\nthe school.  One of the programmers wrote only in RPG and the\nother wrote only in COBOL.  Each programmer tried to convince me\nthat his own language specialty was the one I should concentrate\non.  Consequently, I came to appreciate both languages for their\nstrengths.\n\nMost of my career I have been writing COBOL programs.  The last\ntime I wrote any significant RPG (by which I mean code that went\ninto production) was in 1982.  Still, I think RPG is a simple but\npowerful problem solving tool that shouldn't be overlooked or\ndismissed simply because it is viewed by the majority of computer\nprofessionals as a \"minicomputer\" language.\n\nA visitor to my Hercules' site lamented that there were few RPG\ntextbooks available.  I can add from personal knowledge that the\nfew which are available are prohibitively expensive, as are most\ncomputer texts.  Another fact is that if you intend to write RPG\nto compile with the RPG compiler we have available with MVT, you\nwill find that most texts available concentrate on RPG II, RPG\nIII, and RPG IV (or RPG/400).  These variants contain extensions\nto RPG I (which I often refer to as RPG with no number) that are\nnot recognized or supported by the MVT RPG compiler.\n\nSo, my goal in writing this tutorial was to provide enough basic\ninformation to allow someone who had little or no RPG experience\nto begin writing RPG programs, specifically with the MVT RPG\ncompiler running under Hercules as the target system.  I have\nincluded a series of annotated RPG programs, each emphasizing a\nspecific concept.  Along with the page containing the annotated\nprogram source there is a link with the compiled program and\noutput of the program's execution.  There is also an archive\ncontaining the jobstream with the source and the data files\nrequired for the program.  Beginning with the third program, the\ndata files updated by each program are necessary for the\nsuccessive programs.\n\nIf you are interested in learning about RPG, I hope these pages\nare useful to you.  From my own experience, if you have a solid\nunderstanding of RPG and later need to advance to RPG II, RPG\nIII, or RPG IV, you will find the transition almost painless.\n\nTopics Covered:\nWhat is RPG\nBasic statement types (Header/File/Input/Output)\nThe RPG Logic Cycle\nCalculation Specifications\nExpanded discussion of selected calculation operations\nAdvanced statement types (Extension/Line Counter)\nRPG Indicators\nOutput Edit Words\nExternal Subroutines (calling Assembler from RPG)\nUsing Tables\nIndexed-Sequential File Processing\nMatching Records Processing\nResolving RPG Programming Problems - dump reading for RPG\n\nExample Programs\nExample Program 1 - List cards on printer\nExample Program 2 - Copy cards to tape\nExample Program 3 - Create ISAM file from cards\nExample Program 4 - Update ISAM File from Tape (chaining)\nExample Program 5 - Calling Assembler subroutine from RPG main\nExample Program 6 - Control totals (multiple control levels) and\n                    tables\nExample Program 7 - Matching Records file update\nExample Program 8 - Using a Record Address File for ISAM access\n\nThis page was last updated on September 03, 2001.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PDSLOAD": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x04\\x01\\x01\\x15\\x7f\\x01\\x04\\x05\\x1f\\x10C\\x00\\x17\\x00\\x1b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-06-06T00:00:00", "modifydate": "2004-02-20T10:43:04", "lines": 23, "newlines": 27, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*   PDSLOAD COMES FROM FILE 093 OF THE CBT TAPE COLLECTION\n//*   ITS LOAD MODULE IS IN FILE 035 OF THE CBT TAPE COLLECTION\n//*\n//*   YOU CAN USE IEBUPDTE INSTEAD OF PDSLOAD, BUT YOU LOSE THE\n//*   EMBEDDED ISPF STATISTICS.\n//*\n//*   THE PDSLOAD LOAD MODULE IS INCLUDED IN XMIT FORMAT.\n//*   TO GET THE LOAD LIBRARY CONTAINING IT, ISSUE (UNDER TSO):\n//*\n//*   TSO RECEIVE INDS(USERID.CBT465.FILE667(PDSLOAD))\n//*\n//ZEXAMPLS EXEC  PGM=PDSLOAD,PARM='UPDTE(><)',COND=EVEN\n//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=SBGOLOB.CBT465.FILE667(ZEXAMPLS),DISP=SHR\n//SYSUT2   DD  DSN=SBGOLOB.ZEXAMPLS.PDS,DISP=(NEW,CATLG,DELETE),\n//         UNIT=SYSALLDA,VOL=SER=WORK03,SPACE=(TRK,(15,15,44),RLSE),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=8880)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE667": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04A\\x00\\x00\\x01\\x04\\x05?\\x01\\x04\\x05?\\x10\\x18\\x00+\\x00+\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf5@@@'", "ispf": {"version": "04.65", "flags": 0, "createdate": "2004-02-22T00:00:00", "modifydate": "2004-02-22T10:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "CBT-465"}, "text": "//***FILE 667 is from Jay Moseley and contains a tutorial about     *   FILE 667\n//*           how to use the RPG/F compiler which is on File 327.   *   FILE 667\n//*           This tutorial is especially complete and valuable,    *   FILE 667\n//*           since it is difficult to find RPG/F manuals from      *   FILE 667\n//*           IBM which date back to the 1960s and 1970s.  With     *   FILE 667\n//*           this tutorial, you should be able to use the free     *   FILE 667\n//*           RPG/F compiler and library from File 327 profitably   *   FILE 667\n//*           and productively.                                     *   FILE 667\n//*                                                                 *   FILE 667\n//*           The tutorial was extracted from Jay Moseley's web     *   FILE 667\n//*           site:  www.jaymoseley.com .                           *   FILE 667\n//*                                                                 *   FILE 667\n//*              email:     jay@jaymoseley.com                      *   FILE 667\n//*              web site:  www.jaymoseley.com                      *   FILE 667\n//*                                                                 *   FILE 667\n//*           Members of this pds are prefixed with one alphabetic  *   FILE 667\n//*           character, so they remain in the order in which they  *   FILE 667\n//*           should be read.  A member list follows:               *   FILE 667\n//*                                                                 *   FILE 667\n//*      AWHATIS   - What is RPG                                    *   FILE 667\n//*      BBASIC    - Basic statement types                          *   FILE 667\n//*                  (Header/File/Input/Output)                     *   FILE 667\n//*      CRPGFLGC  - The RPG Logic Cycle                            *   FILE 667\n//*      CRPGFLOW  - PDF format illustration of logic flow          *   FILE 667\n//*      DRPGCALC  - Calculation Specifications                     *   FILE 667\n//*      EDISCUSS  - Expanded discussion of selected                *   FILE 667\n//*                  calculation operations                         *   FILE 667\n//*      FADVANCD  - Advanced statement types                       *   FILE 667\n//*                  (Extension/Line Counter)                       *   FILE 667\n//*      GRPGINDC  - RPG Indicators                                 *   FILE 667\n//*      HOUTEDIT  - Output edit words                              *   FILE 667\n//*      ICALLASM  - External Subroutines                           *   FILE 667\n//*                  (calling Assembler from RPG)                   *   FILE 667\n//*      JUSETABL  - Using Tables                                   *   FILE 667\n//*      KISAM     - Indexed-Sequential File processing             *   FILE 667\n//*      LMATCH    - Matching Records processing                    *   FILE 667\n//*      LMATCHPI  - Match Records Flow Chart - PDF format          *   FILE 667\n//*      MDMPREAD  - Resolving RPG Programming Problems -           *   FILE 667\n//*                  dump reading for RPG                           *   FILE 667\n//*      ZEXAMPLS  - Machine readable coding examples in PDSLOAD    *   FILE 667\n//*                  format.  Use the $PDSLOAD job to create the    *   FILE 667\n//*                  target partitioned dataset with the examples.  *   FILE 667\n//*                                                                 *   FILE 667\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "AWHATIS": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00'\\x01\\x04\\x04\\x8f\\x01\\x04\\x05\\x0f\\x10\\x13\\x00)\\x00(\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-02-19T10:13:27", "lines": 41, "newlines": 40, "modlines": 0, "user": "RPGTUTR"}, "text": "RPG Tutorial:  What is RPG\n\n\nRPG is a \"program generator\" and not a language.  My first mentor\nstressed that to me so often, I couldn't start writing anything\nabout RPG without saying that.  He was such an advocate of RPG\nover other programming languages, he insisted that the appeal and\npower of RPG was that it was not a complex programming language.\nIt was a tool that could be quickly and simply used to create\nsolutions to business needs without getting caught up in language\nsyntax and internal mechanics.\n\nHowever, in spite of my mentor's adamant statement to the\ncontrary, RPG is a programming language with all the requisite\nsyntax, structure, and rules that accompany any programming\nlanguage.  RPG was designed to appeal to that set of people who\nwere familiar with punched card accounting equipment - collators,\nreproducing punches, accounting machines.  These machines were\n\"programmed\" using wires and plug boards.  Data was input with\npunched cards.  The extremely simple \"programs\" that could be\ndevised for these machines could read a series of cards, collated\nwith information related to a single entity (a student for\nexample) in a group of cards, and produce a simple report from\nthe information.  Much of the terminology in RPG relates to this\norigin in punched card methodologies - indicator \"switches\",\nmatching records, and control levels, for example.\n\nThese accounting machines achieved their results by very\nmechanical means.  The plugs and wires used to \"program\" them\nconveyed electrical charges originating from reading data from\npunched cards to specific control points in a physical cycle.\nThe functioning of an RPG program is also related to a fixed\nprocessing cycle.  An individual RPG program effects calculations\nand produces output by turning indicators on or off.  The basic\nlogic of all RPG programs is essentially identical and is defined\nby the RPG Logic Flow.\n\nSo RPG is a simple language with only a few different types of\ninput statements.  However, it can be used to produce very\ncomplex programs which do much more than simply produce reports.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BBASIC": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x15\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f\\x10\\x13\\x01B\\x01A\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T10:13:15", "lines": 322, "newlines": 321, "modlines": 0, "user": "RPGTUTR"}, "text": "RPG Tutorial: Basic statement types (Header/File/Input/Output)\n\n\nRPG source statements consist of a relatively small set of\nrigidly formatted specification statements.  Because RPG programs\ncan be complex, and deal with complex collections of data, the\nformats of the specifications can, at first glance, seem\noverwhelming.  However, the specifications are designed to be\nable to handle a large range of needs, so in actual practice any\nindividual program will only require entries to be made in a\nsmall number of the fields.\n\nSince I am intending for this to be an introductory tutorial, I\nhave not covered every entry possible in every specification\nfield.  For example, I have not covered combined reader/punch\nfiles since it is unlikely that under Hercules/MVT anyone will be\ndealing with physical card devices.  If you come to the end of\nthe material I have presented here and find that you have needs\nbeyond what I have covered, try the nearest university library.\nYou will be amazed at the books that are tucked away in some of\nthe stacks gathering dust.\n\nAlthough the number of specifications has been increased with the\nlater extensions (RPG II, RPG III, and RPG IV), the RPG Debugging\nTemplate I acquired back in 1973 (I still have two well-worn\ncopies) defines only ten types of specification.  Of those ten, a\nsimple program may be written using only four:\n\n   1. Header\n   2. File Description\n   3. Input\n   4. Output\n\nColumns one through five of any specification statement are\ntraditionally used for sequence numbers, with the first two\ndigits typically containing the coding sheet page number and the\nlast three digits containing the statement number within that\npage.  Like all other languages, once we started moving away from\nphysical cards, the sequence numbers lost some of their utility\nand were omitted most of the time.  The default behavior of the\nMVT RPG compiler is to not sequence check the source, so you may\nleave the first five columns of each statement blank.\n\nColumn six of the specification statement designates the type - H\nfor Header, F for File Description, I for Input, and O for\nOutput.  The order the specification statements must occur in\nwhen processed by the compiler is:\n\n   1. Header\n   2. File Description\n   3. Extension\n   4. Line Counter\n   5. Input\n   6. Calculation\n   7. Output\n\nAll specifications of an individual type are processed together.\nSo, there should be a single Header specification, followed by\none or more File description specifications, and so on through\nthe Output specifications.\n\nColumn seven of any specification statement may contain an\nasterisk (*) to designate a comment.  The contents of the card\nwill be printed on the compiler listing and otherwise ignored.\nHowever, the specification type (column six) must be correct and\nin the correct order (as shown above).\n\nHeader Specification\n\nThe Header specification statement provides the overall\ncharacteristics of the program and its operating environment.\nMost of the fields had much more significance on the earlier\n(smaller) IBM 360 series mainframes or on the later System/3 (and\nother minicomputers) than they do for RPG programs written to run\nunder OS/360.  I do remember using some of the fields when I was\nwriting programs on a System/3, but 99% of the time all entries\nare left blank.  However, the presence of the Header\nspecification is mandatory, so you must include the card with an\n'H' in column six.\n\nThe only significant entry for RPG I is the program name, which\nmay be entered in columns 75-80.  If provided, this will be the\nname used for the object program (the name of the CSECT, or\ncontrol section).  If omitted, the name of the program will be\nthe default: RPGOBJ.\n\nFile Description Specification\n\nThe File Description specification statement provides the\ncharacteristics of the files to be read and/or written by the\nprogram.  No file will use every entry in the file specification\nand only an indexed sequential (ISAM) disk file will use a\nsignificant number of entries.\n\nColumn(s)   Field Name           Use\n7 - 14      File Name            name of file used internally and in\n                                 JCL (DD name)\n15          File Type            I = input, O = output, U = update\n16          File Designation     P = primary, S = secondary, C = chained,\n                                 R = record address, T = table\n17          End of File          enter E for each input file to be\n                                 checked to determine when the last\n                                 record has been read and processed\n                                 (LR indicator)\n18          Sequence             A = ascending, D = descending\n                                 (required for Matching Records\n                                 otherwise leave blank)\n19          File format          F = fixed or V = variable\n20 - 23     Block Length         enter block size for fixed blocked,\n                                 enter record size for fixed\n                                 unblocked, enter largest record\n                                 size for variable\n24 - 27     Record Length        enter record size for fixed, enter\n                                 largest record size for variable\n28          Mode of              blank = sequential, L = segment\n            Processing           (limits), R = random\n29 - 30     Length of            if the file is a Record Address\n            Record Address       File file, enter the number of\n            or Length of         positions that each entry in the\n            Key Field            file occupies; if the file is an\n                                 Indexed-Sequential file, enter the\n                                 length of the record key\n31          Record Address       K = records retrieved using record\n            Type                 keys\n32          Type of File         blank = sequential, I = indexed\n            Organization or      sequential\n            Dual I/O Areas\n33 - 34     Overflow Indicator   Overflow indicator (OF, OA, OB, OC,\n                                 OD, OE, OG, or OV ) to use for this\n                                 file\n35 - 38     Key field starting\n            location\n39          Extension or         E = extension specifications\n            Line Counter         provided for this file, L = line\n            specifications       counter specifications provided for\n                                 this file\n40 - 46     Device               READ40 = card reader, PRINTER,\n                                 TAPE, DISK14\n47 - 52     Symbolic Device      leave blank for MVT/MVS\n53          Labels               blank = no labels, S = standard,\n                                 E = standard plus user\n66          File Addition        A = new records are to be added to\n            or Unordered         indexed sequential file\n71 - 72     File Condition       U1, U2, ... U8 external switches\n                                 conditioning optional file\n\nInput Specification\n\nThe Input specification statement provides characteristics of\ninput records and defines the individual data fields associated\nwith each input record.  A great deal of program logic may be\nspecified with the input specification, such as control fields,\nmatching multiple inputs on a common field (such as account\nnumber), automatically using a key value in one file to read the\ncorresponding record in a secondary file, and setting indicators\ndepending upon the presence of data in specified fields.\n\nUsing the input specification is done a bit differently from the\nfile specification.  One or more specification statements are\nused to first define characteristics of the record in order to\nallow the program to identify the record uniquely.  Following\nthese specification statements are one or more statements which\ndefine the data fields which are to be processed from the input\nrecord.\n\nTo clearly differentiate these functions, I have divided the\nfields of the input specification into two groups.  These fields\ndefine record characteristics and provide the means to uniquely\nidentify each discrete record type:\n\n Column(s)   Field Name        Use\n7 - 14      File Name         name of file used internally and in\n                              JCL (DD name)\n14 - 16     OR/AND            used when specifying more than 3\n                              record identifiers or for\n                              specifying alternate indicators to\n                              be turned on for identical record\n                              formats\n15 - 16     Sequence          used to specify sequence checking\n                              on record groups - enter number,\n                              beginning with 01, for each record\n                              type - enter any 2 alphabetic\n                              characters for unsequenced input\n                              record groups\n17          Number            used in conjunction with sequence,\n                              enter 1 to indicate only one\n                              instance of a specific record type\n                              should occur in a group; enter N to\n                              indicate one or more instances may\n                              be present\n18          Option            used in conjunction with sequence,\n                              enter O if a specific record need\n                              not be present in a group; leave\n                              blank if an instance is required to\n                              be present\n19 - 20     Record Indicator  enter the indicator (01 - 99) to be\n                              set on when this record is read\n21 - 24     Position in\n            record where\n            identifying\n            characters\n28 - 31     located\n34 - 38\n25          Negates           the code described must not be\n            comparison        present in the position specified\n32\n39\n26          Comparison Type   C = character, Z = zone, D = decimal\n33\n40\n27          Literal to Match  if comparison type is C, enter any\n                              EBCDIC character; if comparison\n                              type is Z, enter & or A-I to check\n                              for 12-zone, enter - or J-R to\n                              check for 11-zone, S-Z to check for\n                              0-zone, blank or 0-9 to check for\n                              the absence of zones\n\n34\n41\n42          Stacker Select\n\nThese fields define individual data fields in the input records,\nalong with identifying control level, matching, and other special\ncharacteristics of data fields:\n\n Column(s)   Field Name        Use\n43          Packed            enter P if field is in packed\n                              decimal format\n44 - 47     Field Begins      enter record position containing\n                              first position of field\n48 - 51     Field Ends        enter record position containing\n                              last position of field\n52          Decimal Positions for numeric fields, enter the\n                              number of decimal positions (0-9)\n53 - 58     Field Name\n59 - 60     Control Level     L1, L2, ... L9\n61 - 62     Matching Fields   M1, M2, M3\n            or\n            Chaining Fields   C1, C2, ... C9\n63 - 64     Field/Record      enter the record indicator to\n            Relation          relate identically named fields\n                              contained in different positions\n                              within a group of records\n65 - 66     Positive          for numeric fields, enter indicator\n                              to turn on if the field contains a\n                              positive value when read\n67 - 68     Negative          for numeric fields, enter indicator\n                              to turn on if the field contains a\n                              negative value when read\n69 - 70     Zero or Blank     for numeric fields, enter indicator\n                              to turn on if the field contains\n                              zero when read; for alphabetic\n                              fields, enter indicator to turn on\n                              if the field contains blanks when\n                              read\n\nOutput Specification\n\nThe Output specification statement provides characteristics of\noutput records and defines the individual data fields or\nconstants to be written for a particular output (or updated)\nrecord.\n\nLike the input specification, the output specification is used to\nprovide two separate, but related, types of information.  First,\none or more specification statements are used to define the\nconditions under which an output record is produced.  Following\nthese specification statements are one or more statements which\ndefine the data fields or literals to be written to the output\nrecord.\n\nTo clearly differentiate these functions, I have divided the\nfields of the output specification into two groups.  These fields\ndefine when an output record is written:\n\n Column(s)   Field Name        Use\n7 - 14      File name         name of file used internally and in\n                              JCL (DD name)\n14 - 16     AND/OR            used when specifying more than 3\n                              record indicators\n15          H = heading       specifies the time in the RPG logic\n            D = detail        cycle when this output is to occur\n            T = total         - note that for all practical\n                              purposes, Heading and Detail time\n                              are the same\n16 - 18     ADD               to add records to an ISAM file\n17          Space Before      enter 0-3 to specify number of\n                              lines to space before printing\n18          Space After       enter 0-3 to specify number of\n                              lines to space after printing\n19 - 20     Skip Before       enter 01-12 to specify channel to\n                              skip to before printing\n21 - 22     Skip After        enter 01-12 to specify channel to\n                              skip to after printing\n23          Negates           enter N to specify that the\n26          indicator         associated indicator must not be on\n29                            as a condition of this output\n                              operation\n24 - 25     Indicator         enter the indicator to be used to\n27 - 28                       condition this output operation\n30 - 31\n\nThese fields define individual data fields or literal values to\nbe placed in the output record:\n\n Column(s)   Field Name        Use\n32 - 37     Field Name        enter field to be written to output\n38          Edit Code         enter edit code or leave blank to\n                              use edit constant word\n39          Blank After       reset source data field contents to\n                              blank or zero after field is moved\n                              to the output record\n40 - 43     End Position      enter position in output record to\n                              contain right-most character of\n                              output field\n44          Packed            enter P if output is to be written\n                              in packed decimal format\n45 - 70     Constant or       enter literal constant or edit word\n            Edit Word         enclosed in apostrophes\n\nThis page was last updated on August 21, 2003.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CRPGFLGC": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x08\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f\\x168\\x00%\\x00\"\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T16:38:08", "lines": 37, "newlines": 34, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: The RPG Logic Cycle\n\n\nRPG is a non-procedural language.  The events that happen in any\nparticular RPG programs occur in exactly the same order as in every\nother RPG program.  This order is known as the RPG Logic Cycle.  What\nmakes one RPG program different from another is that \"indicators\" or\nswitches are turned on or off, based upon tests performed on the data\nbeing processed, which cause or prevent input, calculation, or output\nevents at specific points in the cycle.\n\nI have seen several flow charts of the RPG Logic Cycle, but the most\nuseful to me has been the one that is on the RPG Debugging template I\nacquired in 1973.  Using VISIO, I have recreated it below and you may\ndownload a printable copy of it in an Adobe PDF using this\nlink: rpglogic.tar.gz <../download/zips/rpglogic.tar.gz>.  (The archive\nmay be uncompressed using tar on Linux platforms and WinZip or ZipNAll\non Windows/?? platforms.)\n\nSimple RPG programs may be written with only the understanding that the\norder of processing is Input followed by Calculations followed by\nOutput.  But the more complex an RPG program is, the more important it\nwill be for the programmer to thoroughly understand the RPG Logic Cycle.\n\n------------------------------------------------------------------------\n\nYou may view the logic flow chart, which is in Adobe PDF format,\nby downloading member CRPGFLOW in BINARY to a PC, and using the\nAdobe reader.  You can also print it out from the PC, using the\nAdobe reader.\n\n------------------------------------------------------------------------\n\nThis page was last updated on August 21, 2003.\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRPGFLOW": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f\\x08&\\x00M\\x00M\\x00\\x00\\xd7\\xc4\\xc6@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T08:26:00", "lines": 77, "newlines": 77, "modlines": 0, "user": "PDF"}, "mimetype": "application/pdf", "datatype": "binary", "extension": ".pdf"}, "DRPGCALC": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x01\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f\\x10\\x13\\x00\\xb0\\x00\\xaf\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T10:13:01", "lines": 176, "newlines": 175, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: Calculation Specifications\n\n\nThe Calculation specification is used to define arithmetic and\ndata manipulation operations which are performed either at Total\ntime or Detail time in the RPG Logic cycle <rpg003.htm>.\n\n Column(s)   Field Name        Use\n ---------   ----------        ---\n7 - 8       Control Level     enter a control level indicator (L0\n                              through L9, or LR) to specify that\n                              this operation is to be performed\n                              at total. time; leave blank if\n                              operation is to be performed at\n                              detail time\n9           Negate indicator  enter N if the corresponding\n12                            indicator is to be OFF to condition\n15                            this operation\n10 - 11     Indicators        enter one to three indicators to\n13 - 14                       condition this operation; if more\n16 - 17                       than one indicator is entered, they\n                              are considered in an AND\n                              relationship\n18 - 27     Factor 1          enter field name or literal to use\n                              in operation; alphanumeric literals\n                              must be enclosed in apostrophes\n28 - 32     Operation         enter one of the operation codes;\n                              an entry is required in this field\n                              in each specification statement\n                              except in a comment (* in column\n                              seven)\n33 - 42     Factor 2          enter field name or literal to use\n                              in operations requiring a second\n                              operand\n43 - 48     Result Field      enter the field name to receive the\n                              result of the operation\n49 - 51     Result Field      enter the number of storage\n            Length            positions to reserve for the result\n                              field; maximum length of numeric\n                              fields is 15 digits; maximum length\n                              of alphanumeric fields is 256\n                              characters; may be left blank if\n                              result field has been previously\n                              defined in prior calculation\n                              specification or input specification\n52          Decimal Positions enter number of decimal positions\n                              (0 to 9) to reserve for the result\n                              field; required for all numeric\n                              result fields used with arithmetic\n                              operations; the number of integer\n                              positions (left of the decimal\n                              place) is calculated by subtracting\n                              this value from the field length\n                              (49-51)\n53          Half Adjust       enter H to round the result of\n                              arithmetic operations to the\n                              nearest whole number\n\n54 - 55     +                 after arithmetic operation, the\n            1 > 2             indicator to turn on if result is\n            HI                positive; after compare operation,\n                              the indicator to turn on if Factor\n                              1 > Factor 2; after LOKUP or TESTZ,\n                              the indicator to turn on for High\n                              condition\n56 - 57     -                 after arithmetic operation, the\n            1 < 2             indicator to turn on if result is\n            LO                negative; after compare operation,\n                              the indicator to turn on if Factor\n                              1 < Factor 2; after LOKUP or TESTZ,\n                              the indicator to turn on for Low\n                              condition\n58 - 59     zero              after arithmetic operation, the\n            1 = 2             indicator to turn on if result is\n            EQUAL             zero; after compare operation, the\n                              indicator to turn on if Factor 1 =\n                              Factor 2; after LOKUP the indicator\n                              to turn on for Equal; after TESTZ\n                              the indicator to turn on for no\n                              zone or any other zone\n\n\n    Summary of RPG I Operations:\n    ------- -- ----- ----------\n\nOPERATION   Con-  Indi- Fac- Ope-  Fac-   Re-   Field Dec-  Half  Resul-\n            trol  ca-   tor  ra-   tor    sult  Len-  imal  Ad-   ting\n            Level tors  1    tion  2      Field gth   Posi- just  Indi-\n                             Code                     tions       cators\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nAdd         O     O     R     ADD   R     R     O     O     O     O\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nZero and    O     O     blank Z-ADD R     R     O     O     O     O\nAdd\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nSubtract    O     O     R     SUB   R     R     O     O     O     O\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nZero and    O     O     blank Z-SUB R     R     O     O     O     O\nSubtract\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMultiply    O     O     R     MULT  R     R     O     O     O     O\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nDivide      O     O     R     DIV   R     R     O     O     O     O\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove        O     O     blank MVR   blank R     O     O     blank O\nRemainder\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove        O     O     blank MOVE  R     R     O     blank blank O\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove Left   O     O     blank MOVEL R     R     O     blank blank O\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove        O     O     blank MHLZO R     R     O     blank blank blank\nHigh-to-\nLow Zone\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove        O     O     blank MLHZO R     R     O     blank blank blank\nLow-to-\nHigh Zone\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove        O     O     blank MHHZO R     R     O     blank blank blank\nHigh-to-\nHigh Zone\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nMove        O     O     blank MLLZO R     R     O     blank blank blank\nLow-to-\nLow Zone\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nCompare     O     O     R     COMP  R     blank blank blank blank R\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nTest Zone   O     O     blank TESTZ blank R     R     R     blank R\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nExit to a   O     O     blank EXIT  R     blank blank blank blank blank\nSubroutine\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nRPG Label   O     blank blank RLABL blank R     O     O     blank blank\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nUser's      O     blank blank ULABL blank R     R     R     blank blank\nLabel\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nBranching   O     O     blank GOTO  R     blank blank blank blank blank\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nLabel for   O     blank R     TAG   blank blank blank blank blank blank\nBranch\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nSet         O     O     blank SETON blank blank blank blank blank R\nIndicators\nON\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nSet         O     O     blank SETOF blank blank blank blank blank R\nIndicators\nOFF\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nTable       O     O     R     LOKUP R     O     O     O     blank R\nLookup\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nRPG         O     blank R     RPGCV blank R     R     blank blank blank\nConversion\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nEnd of RPG  O     blank blank ERPGC blank blank blank blank blank blank\nConversion\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nExternal    O     blank R     EXTCV R     R     R     blank blank blank\nConversion\nRoutine\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\nRecord Key  O     blank blank KEYCV blank R     O     O     blank blank\n----------  ----- ----- ----- ----- ----- ----- ----- ----- ----- -----\n\n\nO = Optional       R = Required       blank = must be blank\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EDISCUSS": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00U\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f\\x10\\x12\\x01@\\x01?\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T10:12:55", "lines": 320, "newlines": 319, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial:\n    Expanded discussion of selected calculation operations\n\n\nArithmetic Operations\n\nFields and literals used in arithmetic operations must always be\nnumeric.  Decimal point alignment is automatically handled by the\nRPG compiler so that the addition, say, of two fields -- 567.94\nand 3.4578 -- will result in the correct sum: 571.3978.  The\nnumber of positions to the right of the decimal in the result\nfield is determined by an entry in column 52 of the calculation\nspecification.  The maximum field length for an arithmetic\noperation is 15 digits and the result field, after automatic\ndecimal alignment is taken into account, also must not exceed 15\ndigits.  In many programming languages, an arithmetic calculation\nmay result in an overflow condition.  This comes about when the\ndata field which is to contain the answer has fewer positions\nthan the number of positions in the answer.  Consider, for\nexample, adding two four-position fields together and causing the\nsum (result) to be stored in a four-position field.  If the first\nfield contains the value 5923 and the second field contains 4670,\nthe answer, 10593, clearly has more digits than can be\nrepresented in a four-position result field.  In this case, an\narithmetic overflow has occurred.  The result field will contain\n0593 and the 1 in the ten thousands position will be lost.  Most\nlanguage compilers generate overflow indicators that will signal\nwhen this type of overflow occurs and the program can test the\nindicator and take appropriate action.  This is not possible in\nRPG.  Overflows are not detectable by the object program and, if\nresulting fields are not specified with sufficient length,\nerroneous results may occur.\n\nAdd (ADD)\n\nThis operation causes the contents of the data field named in\nfactor 2 to be added to the data field named in factor 1.  The\nsum is stored in the data field named in the result.   The number\nof digits to the right of the decimal point in the result field\nmust be specified in column 52.\n\nZero and Add (Z-ADD)\n\nThis operation first sets the data field named in the result of\nthe specification statement to zero.  The contents of the data\nfield named in factor 2 are then added to the result field.\nFactor 1 is not used in this operation.  Factor 2 may contain a\nnumeric literal rather than the name of a data field.\n\nSubtract (SUB)\n\nThe contents of the data field named in factor 2 are subtracted\nfrom the contents of the data field named in factor 1, and the\ndifference is placed in the data field named in the result of the\nspecification statement.  The sign of the result will be derived\nusing conventional algebraic rules.\n\nZero and Subtract (Z-SUB)\n\nAs with Z-ADD, this operation sets the data field named in the\nresult portion of the specification statement to zero.  Then the\ndata field named in factor 2 is subtracted from the data field\nnamed in the result.  This has the effect of placing a value in\nthe result field that has the opposite sign from that in factor\n2.  Factor 1 is not used in this operation.  Factor 2 may contain\na numeric literal rather than the name of a data field.\n\nHalf Adjusting\n\n\u00f4Half adjusting\u00f6 is a term that refers to a method of rounding\nthe results of calculations. Suppose, for example, that a program\nis to divide one three-digit value into a four-digit value and\nthe result is to be rounded to four significant digits.  The\nanswer, known as the quotient, might have any number of digits.\nIf the divisor were 035 and the dividend were 4671, the quotient\nwould be 0133.462....  If we want to round this to four\nsignificant digits, we would write 0133.  If the digit in the\ntenths position had been five or greater, we would have written\n0134.  When calculations are being performed by a computer, a way\nmust be developed that will cause the computer to record the\nrounded value, 0134 in this case, rather than the 0133 which\nwould result from simply dropping the low-order digits.  This can\nbe done by adding the digit 5 one position to the right of the\nposition containing the least significant digit of the answer. In\nour example, this would look like this:\n\n    0133.46 + .5 = 0133.96\n\nNow, dropping the two digits to the right of the decimal point\nyields the value 0133 which is the correct rounded value given a\ntenths position digit of less than 5.  If the result of a similar\ncalculation were 1198.67, a similar rounding technique would\nresult in the following:\n\n    1198.67 + .5 = 1199.17\n\nDropping the two unwanted digits yields, again, the correct\nrounded value of 1199.  Half adjusting is a technique that adds\nthe digit 5 to the position immediately to the right of the least\nsignificant digit desired in a result data field.  In RPG\nprogramming, half adjusting of result fields is caused by\nentering the letter H in column 53 of the specification\ncontaining the arithmetic calculation operation to be half\nadjusted.\n\nMultiply (MULT)\n\nThis operation multiplies the contents of the data field or\nliteral specified in factor 2 by the contents of the data field\nor literal specified in factor 1.  The result is placed in the\ndata field named in the result.  The sign of the result will be\nderived using conventional algebraic rules.  The number of digits\nrequired to the right of the decimal point is entered in column\n52 and the total length of the result field is specified in\ncolumns 49-51.\n\nDivide (DIV)\n\nThe contents of the data field named in factor 1 or the literal\nspecified in factor 1 is divided by the data field or literal\nspecified in factor 2.  Since division by zero is not defined as\na mathematical operation, the data field specified in factor 2 or\na literal entered there may not have a value of zero.  In divide\noperations, the lengths of the data fields or literals specified\nin factors 1 and 2 must adhere to specific rules or invalid\nresults will be obtained. These length rules must be followed:\n\n    L1 + (D2 - D1 + DR) =< 15\n    L2 - (D2 - D1 + DR) =< 15\n\n    where:\n\n     L1 represents the length of the data field specified in factor 1;\n     L2 represents the length of the data field specified in factor 2;\n     D1 represents the number of digits to the right of the decimal\n     point in factor 1;\n     D2 represents the number of digits to the right of the decimal\n     point in factor 2;\n     DR represents the number of digits to the right of the decimal\n     point in the result field.\n\nIf half adjusting is specified, the length formula involving\nfactor 1 must satisfy this:\n\n    L1 + (D2 - D1 + DR) =< 14.\n\nThe process of division often leaves a remainder.  The remainder\nis available to the object program immediately after the execution\nof the divide operation.  Thereafter, it is lost.  If the object\nmodule is to make use of the remainder, a Move Remainder operation\nmust follow immediately after the divide operation.\n\nMove Remainder (MVR)\n\nThis operation places the remainder, resulting from a divide\noperation, in the data field specified in the result columns of\nthe specification statement.  The length of the result field\nspecified in a MVR operation must be equal either to the number\nof positions to the right of the decimal point in the dividend\n(D1) or to the sum of the number of positions to the right of the\ndecimal point in the divisor and the quotient (D2 + DR),\nwhichever is greater.  Half adjusting should not be performed on\na quotient if the remainder is to be saved by a MVR operation.\nResulting indicators may be specified for MVR operations using\ncolumns 54-59.\n\nMOVE OPERATIONS\n\nA move operation is one in which data are moved from one data\nfield to another without arithmetic operations being performed.\nA move operation causes data stored in the data field named in\nfactor 2 to be moved to the data field named in the result of the\nspecification statement.  The data in the field named in factor 2\nare not changed.  Thus, after a move operation, some or all of\nthe data in the factor 2 field are stored in two fields, the\nfactor 2 field and the result field.  One use of move operations\ncauses the data field moved to be changed from alphanumeric to\nnumeric or vice versa.\n\nIf an alphanumeric field is moved to a numeric result field\n(decimal positions specified in column 52), the alphanumeric data\nare converted to numeric form.  In internal storage, this amounts\nto converting from character mode to packed decimal.\n\nThe reverse of this process occurs when a numeric field is moved\nto an alphanumeric result field (decimal positions are not\nspecified by leaving column 52 blank).\n\nMove (MOVE)\n\nThis operation causes characters to be moved from the data field\nspecified in factor 2 to the data field specified in the result.\nMovement may be visualized as from the right-most position of the\nsending field (factor 2) to the right-most position of the\nreceiving field (result).  Characters move one at a time, from\nright to left.  If the receiving field is longer than the sending\nfield, the high-order or left-most positions of the receiving\nfield, which are not replaced by characters from the sending\nfield, are left undisturbed.  If the receiving field is shorter\nthan the sending field, the excess high-order positions of the\nsending field are not moved.  Factor 1 is not used in MOVE\noperations.\n\nMove Left (MOVEL)\n\nThe MOVEL operation transfers data in a manner just the opposite\nof the MOVE operation.  Characters are moved from left to right\nfrom the data field specified in factor 2 to the data field\nspecified in the result of the specification statement.  If the\nfactor 2 data field is longer than the result data field, the\nexcess low-order or right-most positions of the factor 2 field\nare not moved.  If the result data field is longer than the field\nspecified in factor 2, the low-order positions of the result\nfield, which are not replaced by characters from the factor 2\ndata field, are left undisturbed.  If the result data field is\nnumeric (a digit is placed in column 52 of the specification),\nthe result field will contain the sign of the factor 2 field\nunless the factor 2 field is shorter than the result field in\nwhich case the sign of the result field will be the same as it\nwas before the move.  Factor 1 is not used in MOVEL operations.\n\nCompare (COMP)\n\nThis operation causes the contents of the data field named in\nfactor 1 (or the literal specified) to be compared against the\ndata field or literal specified in factor 2.  Resulting\nindicators to be turned on according to whether the factor 1 data\nwere higher than, lower than, or equal to the factor 2 data may\nbe entered in columns 54-59.   The indicator specified in columns\n54-55 (High, 1 > 2), for example, will be turned on by the object\nmodule if the factor 1 data field (or literal) is greater than\nthe factor 2 data field (or literal).  Similarly, the indicators\nspecified in columns 56-57 (low, 1 < 2) and 58-59 (equal, 1 = 2)\nare turned on if the factor 1 data is less than or equal to the\nfactor 2 data respectively.\n\nIn performing compare operations, the RPG compiler generates\nobject code to align the data fields to be compared according to\nwhether they are alphanumeric or numeric.  If alphanumeric fields\nof unequal length are compared, the fields are aligned to their\nleft-most characters and unused positions of the shorter field\nare filled with blanks.  The blanks filled into the short field\nwill then be compared with the characters in the low-order\npositions of the long field.  If numeric fields of unequal length\nare compared, the fields are aligned according to their decimal\npoint, and missing digits are filled with zeros.  As a result,\ncomparison of unequal numeric fields will yield a valid\ncomparison.   Alphanumeric fields of equal length to be compared\nmust not exceed 256 characters each.  If alphanumeric fields are\nunequal in length, they must not exceed 200 characters each.  In\nRPG, numeric comparisons are always made on an algebraic basis,\nthat is, the sign of the data is taken into account.  Thus, the\nvalue -89 is not equal to, but is less than 89.\n\nBranch (GOTO) and (TAG)\n\nOperations, as specified in the calculation specifications, are\nperformed at either detail time or total time in the sequence\nthey occur in the source program.  Occasionally, it may be\ndesirable to branch to other parts of the object program rather\nthan proceeding through the sequential execution of calculation\noperations.  When this is the case, the GOTO specification may be\nused.  This entry specifies the next operation to be performed.\nThis operation (to which branching is to take place) must be\nidentified by a special label called a tag.  A tag is a name that\nthe programmer assigns to the specification statement to which he\nwants the object program to branch.  A tag operation is one which\nassigns a label to an instruction. The operation code TAG is\nentered in columns 28-30, and the label to be associated with the\noperation on the following line is entered in factor 1.\nBranching operations may be forward or backward, however,\nbranching may not be performed from a detail routine into a total\nroutine or vice versa.\n\nINDICATOR CONTROL OPERATIONS\n\nIndicators are used to control the various operations to be\nperformed by the object program.  Three types of indicators are\nused in RPG specifications.  These include the resulting\nindicators, which may be turned on to identify types of input\nrecords and status of data fields; control level indicators that\nare used to cause appropriate action to be taken in the event of\na control break; halt indicators that are used to cause the\nobject module to terminate the program that can be specified to\nbe turned on under certain circumstances on the calculation and\ninput specification sheets.  In addition to being turned on as\nthe result of a calculation or other processing specification,\nthese indicators may also be turned on and off by special\nspecifications for that purpose.  The specifications that do this\nare the SETON and SETOF operations.\n\nSet On (SETON)\n\nThis operation may be used to turn on any indicator except the LO\nindicator and 00 indicator, which are always on throughout the\nprogram.  The indicators to be turned on are specified in columns\n54-59 which are normally used for entry of resulting indicators\nfor specifications other than SETON or SETOF.  As many as three\nindicators may be turned on in one SETON specification.  Whether\nor not a SETON operation is to be performed may be controlled by\nindicators entered, as with all calculation specifications, in\ncolumns 7-17.\n\nSet Off (SETOF)\n\nThis operation may be used to turn off any indicator except the\nLO indicator and the 00 indicator, which are always on throughout\nthe program.  The indicators to be turned off are specified in\ncolumns 54-59 which are normally used for entry of resulting\nindicators for specifications other than SETON or SETOF.  As many\nas three indicators may be turned off in one SETOF specification.\nWhether or not a SETOF operation is to be performed may be\ncontrolled by indicators entered, as with all calculation\nspecifications, in columns 7-17.\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FADVANCD": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00F\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f\\x10\\x12\\x00\\xb8\\x00\\xb8\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T10:12:46", "lines": 184, "newlines": 184, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial:\n    Advanced statement types (Extension/Line Counter)\n\n\nThe Extension and Line Counter specifications are both used to\nsupply additional information about specific types of files to be\nprocessed by the RPG program.\n\nIt is rare to have a printer file that will not require a Line\nCounter specification, but the specification is uncomplicated and\nwill, for the most part, be the same for all programs.\n\nThe Extension specification is used for defining tables and\nestablishing relationships to indexed-sequential files that are to\nbe read \"automatically\" using chaining fields or Record Address\nFiles.  Therefore, the need to code Extension specifications will\noccur less frequently.\n\nIf used, Extension and Line Counter specifications follow the\nFile Description specifications in the source program.\n\n   1. Line Counter\n   2. Extension\n\n\n      Line Counter specification\n\nWhen writing an output file to a physical printer, the printer\nrelies upon carriage control tape punches (or the equivalent\ncarriage control buffer) to control skipping and page overflow\noperations.  When such a file is first written to an intermediary\nstorage device, such as happens under MVT spooling, the RPG program\nmust count the number of output lines written and simulate the\npresence of a carriage control tape/buffer.\n\nThis functionality is provided with the Line Counter specification.\nIn a physical carriage control tape, a channel 12 punch is used to\nsignal that the end of the physical page has been reached.  A\nchannel 01 punch is used to advance the carriage to the top of the\nnext physical page.  Punches in other channels are optionally used\nto specify stopping at intermediate points on the physical page.\nEntries on the Line Counter specifications are used to provide the\nfunctional equivalent of the carriage control tape punches (or\nforms control buffer).\n\nColumn(s)  Field Name      Use\n--------   ----------      ---\n7 - 14     File Name       name of the output file to which this\n                           line counter specification applies\n15 - 17\n20 - 22\n25 - 27\n30 - 32\n35 - 37\n40 - 42\n45 - 47\n50 - 52\n55 - 57\n60 - 62\n65 - 67\n70 - 72    Line Number     the number of the line at which\n                           channel punches are to be simulated -\n                           as a minimum, the lines at which\n                           channel 01 and channel 12 punches\n                           occur must be defined to specify the\n                           top and bottom limits of the page\n18 - 19\n23 - 24\n28 - 29\n33 - 34\n38 - 39\n43 - 44\n48 - 49\n53 - 54\n58 - 59\n63 - 64\n68 - 69\n73 - 74    Channel Number  the channel punch to simulate for the\n                           corresponding line number\n\n\n      File Extension specification\n\nRPG programs which utilize Record Address Files, chained\nindexed-sequential files, and table files require that information\nspecific to these files be specified in addition to the standard\ninformation contained on the File Description specification.  The\nFile Extension specification is used to provide that information.\nBecause this specification is used to specify such a variety of\ndissimilar information, it can be confusing.  I have divided the\ninformation into three groups - the first for chained files, the\nsecond for record address files, and the third for tables.\n\n\n        Entries for chained files\n\nColumn(s)  Field Name      Use\n--------   ----------      ---\n7 - 8      Record          enter the sequence entry (from column\n           Sequence of     15-16 of the input specification) for\n           chaining file   the input file which is the 'chained\n                           from' file\n9 - 10     Number of the   enter the number (C1 - C9) identifying\n           chaining        the field used to link the chaining\n           field           record with the chained record (from\n                           column 61-62 of the input\n                           specification)\n11 - 18    From Filename   enter the name of the chaining file\n19 - 26    To Filename     enter the name of the chained file\n\n\n        Entries for Record Address Files\n\nColumn(s)  Field Name      Use\n--------   ----------      ---\n11 - 18    From Filename   enter the name of the record address\n                           file\n19 - 26    To Filename     enter the name of the\n                           Indexed-Sequential file that contains\n                           the data records to be processed\n\n\n        Entries for tables\n\nColumn(s)  Field Name      Use\n--------   ----------      ---\n11 - 18    From Filename   enter the name of the file from which\n                           the table entries will be read\n19 - 26    To Filename     enter the name of the file to which\n                           the updated table will be written\n27 - 32    Table Name      enter the name of the table (the first\n                           three positions must be \"TAB\")\n33 - 35    Entries         enter the number of table elements\n           per Record      read from/written to each physical\n                           record (used only when table is read\n                           from or written to a file)\n36 - 39    Entries per     enter the number of elements to be\n           Table           contained in the table\n40 - 42    Length of       enter the length of each element in\n           Entry           the table\n43         Packed          enter \"P\" if the data in the table\n                           elements is in packed decimal format\n44         Decimal         enter the number of decimal positions\n           Positions       (0 - 9) if the data in the table\n                           elements are numeric - leave blank for\n                           alphanumeric data\n45         Sequence        enter \"A\" if the table elements are in\n                           ascending sequence;\n                           enter \"D\" if in descending sequence;\n                           leave blank if unsequenced - in tables\n                           consisting of alternating arguments\n                           and functions, the sequence refers to\n                           the order in which the arguments\n                           appear in the table\n46 - 51    Table Name      enter the name of the table to contain\n                           the function elements related to the\n                           argument table specified in columns\n                           27-32 (the first three positions must\n                           be \"TAB\")\n52 - 54    Length of       enter the length of each element in\n           Entry           the function table\n55         Packed          enter \"P\" if the data in the table\n                           elements is in packed decimal format\n56         Decimal         enter the number of decimal positions\n           Positions       (0 - 9) if the data in the table\n                           element are numeric - leave blank for\n                           alphanumeric data\n\n57        Sequence         enter \"A\" if the table elements are in\n                           ascending sequence;\n                           enter \"D\" if in descending sequence;\n                           leave blank if unsequenced - in tables\n                           consisting of alternating arguments\n                           and functions, the sequence refers to\n                           the order in which the arguments\n                           appear in the table\n\n\n\n\n\nThis page was last updated on August 21, 2003\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GRPGINDC": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x04\\x05\\x0f\\x01\\x04\\x05\\x0f!2\\x00\\xc8\\x00\\xc8\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-02-19T21:32:16", "lines": 200, "newlines": 200, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: RPG Indicators\n\n\nThis page outlines the conditions under which various RPG\nindicators are set on or off and the times during the execution\nof each iteration of the RPG object module at which the\nindicators are set.\n\nThe condition of any indicator may be governed by SETON and SETOF\noperations included among the calculation specifications.  The RPG\nobject module will turn indicators on only if the conditions\nspecified in the RPG specifications are met, that is, last record\n(LR), matching record (MR), and overflow (OV or OA, OB, ... OG).\nIn addition, certain conditions may arise that will cause the RPG\nobject module to set on the halt indicator HO.  These conditions\nare listed below.  Unless the HO indicator is turned off by a SETOF\noperation (entered in the calculation specifications), the object\nmodule will terminate before the next input record is read.  The\nRPG object module will turn on indicator HO whenever the program:\n\n    * Reads an input record that was not defined on the input\n      specifications sheet (columns 21-41).\n    * Finds an input record out of the predetermined sequence of\n      card types specified by the entry in Sequence (columns\n      15-16) on the input specifications sheet.\n    * Finds an input record out of sequence when the entry in\n      Matching Fields (columns 61-62) on the input specifications\n      sheet was used for sequence checking a single input file.\n    * Encounters a chaining field in the chaining file that does\n      not appear in the chained file during random processing of\n      multiple input files.\n    * Does not find the record key that designates the lower limit\n      (obtained from the Record Address File) during sequential\n      processing between limits of an indexed-sequential file.\n    * Finds a wrong length record during processing of an\n      indexed-sequential file.\n    * Finds an invalid length record (zero or too long) during\n      random processing by record identification of a file\n      residing on a disk device.\n    * Finds a difference between the key length of a record in an\n      indexed-sequential file and the length as specified in\n      Length of Record Address Field (columns 29-30) on the file\n      description specifications sheet during processing with\n      Record Address File support (random or between limits).\n    * Finds a difference between the key length in the chained\n      indexed-sequential file and the length as specified\n      (columns 44-51) on the input specifications sheet during\n      chaining of multiple input files.\n    * Encounters a disk device error during sequential or random\n      processing of an indexed-sequential file.\n    * Does not find keys in a directly organized file when the\n      entry in Record Address Type (column 31) on the file\n      description specifications sheet specified processing by\n      key.\n    * Does not find a record with the specified key during random\n      processing of an indexed-sequential file.\n    * Encounters an irrecoverable input-output error during\n      processing of a sequential file.\n\n\n    RPG Indicator Chart\n\n\nIndicators  Where       Where Used  Turned On   Turned Off  Notes\n            Specified\n----------  ---------   ----------  ---------   ----------  -----\nResulting   Internal    Output      This        Can never\nIndicator               Indicators  Indicator   be turned\n00                      on Output   is always   OFF\n                        Specifica-  ON\n                        tions (cols\n                        24-25,27-28,\n                        30-31)\n----------  ---------   ----------  ---------   ----------  -----\nResulting   Input       Indicators  When spe-   Before the  Turning\nIndicators  Specifi-    on Calcu-   cified      first re-   OFF and\n(01-99)     cations     lation      record has  cord is     ON can\n            (cols       Specifica-  been read   read on     also be\n            19-20)      tions (cols and is      the next    accom-\n                        10-11,13-14 ready for   processing  plished\n                        16-17)      processing  cycle       by using\n                                                            SETON and\n                        Output In-                          SETOF\n                        dicators on                         operation\n                        Output Spe-                         codes\n                        cifications\n                        (cols 24-25,\n                        27-28,30-31)\n            ---------   ----------  ---------   ----------  -----\n            Calcula-    Same as     Whenever    The next    Same as\n            tion Spe-   above       the speci-  time that   above\n            cifica-                 fied field  this field\n            tions                   status      status is\n            (cols                   condition   to be\n            54-55,56-57             is satis-   tested\n            58-59)                  fied\n----------  ---------   ----------  ---------   ----------  -----\nField       Input       Same as     Same as     Same as     Same as\nIndicators  Specifi-    above       above       above       above\n(01-99)     cations\n            (cols 65-66\n            67-68,69-70)\n----------  ---------   ----------  ---------   ----------  -----\nHalt        Input       Same as     Same as                 If these\nIndicators  Specifi-    above       above                   indicators\n(H0-H9)     cations                                         remain ON\n            (cols 65-66             H0 is       Can only    the object\n            67-68,69-70)            automati-   be turned   program\n                                    cally       OFF by      will ter-\n            Calculation             turned on   SETOF ope-  minate\n            Specifi-                for the     ration      before\n            cations                 conditions  code (see   reading\n            (cols 54-55             listed in   note at     the next\n            56-57.58-59)            the text    right)      record\n                                    above\n----------  ---------   ----------  ---------   ----------  -----\nLR          Internal    Same as     After                   All Control\n                        above and   processing              Level Indi-\n                        Calcula-    the last                cators (L1-\n                        tion        record of               L9) are\n                        Specifi-    the last                also turned\n                        cations     file                    ON when the\n                        (cols 7-8)                          LR is\n                                                            turned ON\n----------  ---------   ----------  ---------   ----------  -----\nControl     Input       Same as     When the    Before the  Turning OFF\nLevel       Specifi-    above and   value in    first       and ON can\nIndicators  cations     Calcula-    a control   record is   be accomp-\n(L1-L9)     (cols       tion        field       read on     lished by\n            59-60)      Specifi-    changes.    the next    using\n                        cations     All indi-   processing  SETON and\n                        (cols 7-8)  cators of   cycle       SETOF\n                                    the lower               operation\n                                    levels are              codes\n                                    also\n                                    turned ON\n----------  ---------   ----------  ---------   ----------  -----\nL0          Internal    Indicators  This        Can never\n                        on Calcu-   indicator   be turned\n                        lation      is always   OFF\n                        Specifi-    ON\n                        cations\n                        (cols 10-11\n                        13-14,16-17)\n\n                        Output\n                        Indicators\n                        on Output\n                        Specifica-\n                        tions (cols\n                        24-25,27-28\n                        30-31)\n----------  ---------   ----------  ---------   ----------  -----\nMR          Internal    Same as     When        Before the\n                        above       multiple    first\n                                    input       record is\n                                    files and   read on\n                                    the match-  the next\n                                    ing fields  processing\n                                    specifica-  cycle\n                                    tion are\n                                    used, this\n                                    indicator\n                                    is turned\n                                    ON if a\n                                    secondary\n                                    file record\n                                    matches the\n                                    primary\n                                    file record\n----------  ---------   ----------  ---------   ----------  -----\nOverflow    File        Same as     One line    After the   These\nIndicators  Descrip-    above       after       detail and  indicators\n(OA,OB,OC   tion                    channel 12  heading     remain ON\nOD,OE,OF,   (cols                   of the      records     for one\nOG,OV)      33-34)                  carriage    are         complete\n                                    control     written     processing\n                                    tape is                 cycle\n                                    sensed\n----------  ---------   ----------  ---------   ----------  -----\n1P          Internal    Output      This        Before the  This\n                        Indicators  indicator   first       indicator\n                        on Output   is ON at    record is   is used\n                        Specifica-  the begin-  read        to govern\n                        tions       ning of                 printing\n                        (cols 24-25 processing              of the\n                        27-28,      before any              first page\n                        30-31)      records                 of the\n                                    are read                report\n----------  ---------   ----------  ---------   ----------  -----\n\n\n\n\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HOUTEDIT": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01\\x04\\x05\\x1f\\x01\\x04\\x05\\x1f\\x01\\x04\\x00\\x80\\x00\\x80\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-20T01:04:40", "lines": 128, "newlines": 128, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: Output edit words\n\n\nRPG, like most programming languages, has a mechanism for editing\nnumeric data.  Typical editing involves suppression of leading\nzeros, inserting commas and decimal points, inserting fixed or\nfloating dollar symbols to clarify monetary amounts, and providing\nsign status (+/- or DB/CR).\n\nIn order to edit a numeric field using an edit word, column 38 of\nthe output specification (Edit Codes) must remain blank.  Under\nRPG I, only the Z edit code is functional, so most of the time it\nis necessary to utilize an edit word to achieve the most\ndesirable result in editing numeric information.\n\nThe name of the numeric field to be edited is placed in columns\n32-37 (Field Name) and the edit word, enclosed in apostrophes, is\nplaced in columns 45-70 (Constant or Edit Word) of the same\noutput specification.\n\nHere are a few general rules to follow for forming edit words:\n\n    * A blank in the edit word is replaced with the digit from\n      the corresponding position of the data field.\n    * An ampersand (&) causes a space in the edited field.  There\n      is no way to obtain an ampersand in an edited field.\n    * A zero (0) is used to stop zero suppression.  It is placed\n      in the rightmost position where zero suppression is to take\n      place.  It will be replaced with the character from the\n      corresponding position of the data field, unless that\n      character is a zero.  At least one leading zero is\n      suppressed.  If you do not want any leading zeros\n      suppressed, make the edit word one character larger than\n      the data field and place a zero in the first position of\n      the edit word.\n    * An asterisk (*) is used for asterisk protection and zero\n      suppression.  Like the zero (above), it is placed in the\n      rightmost position where zero suppression is to take place.\n      It will be replaced with the character from the\n      corresponding position of the data field unless that\n      character is a zero and there is no significant digit to\n      its left.  Each zero that is suppressed is replaced by an\n      asterisk.\n    * A dollar sign in the edit word placed immediately to the\n      left of the zero suppression code (0) causes the insertion\n      of a dollar sign in the position to the left of the first\n      significant digit.  This is what is usually referred to as\n      a floating dollar sign.  If it is necessary for the dollar\n      sign to appear when all digits in the data are significant,\n      the edit word must start with a blank to allow space in\n      which the dollar sign can print.  A dollar sign in the edit\n      word placed immediately after the initial apostrophe will\n      be printed in the same location each time.  This is\n      referred to as a fixed dollar sign.\n    * Commas and decimal points placed in the edit word are\n      printed in the edited output in the same relative positions\n      in which they were written unless they are to the left of\n      significant digits.  If zero suppression has not been\n      stopped by the presence of a zero in the edit word, they\n      will be replaced by either spaces or asterisks, depending\n      upon the method of zero suppression specified.  Other than\n      the fixed dollar sign, any characters that precede the\n      first non-zero digit position will always be suppressed.\n    * All other characters used in the edit word are printed if\n      they are to the right of the non-zero digits in the data\n      field.  If they are to the left of the first non-zero digit\n      in the data field, they will be replaced by spaces or\n      asterisks.\n    * The letters CR or the minus symbol (-) placed on the\n      rightmost position of the edit word (typically known as the\n      status portion of the edit word) will be printed if the\n      sign in the dat field is minus.  If the sign is positive,\n      they will be replaced by spaces.\n    * Asterisks to the right of the CR or minus symbol (-) are\n      printed.  They are typically used to indicate a specific\n      level of control total.\n    * If there are more digit positions in the edit word than\n      there are digits in the field to be edited, leading zeros\n      will be added to the field before editing.\n    * An edit word can contain a maximum of fifteen digit\n      positions, the maximum length of a numeric data field in\n      RPG.\n    * When multiple CR or minus symbols are placed in an edit\n      word, the first one to the right of the last replaceable\n      data character is considered the status.  Any other CR or\n      minus symbols are treated as constants.\n\n\n        Examples of Edit Words\n\n\n*                 *                  *                  *\nEdit Word         Data Field         Result             Result\n                                     if data positive   if data negative\n\n\n' ,  0.  '        000005             .05                .05\n' ,  0.  '        100000             1,000.00           1,000.00\n'  AMT0'          005                5                  5\n'  AMT0'          100                10AMT0             10AMT0\n'  0AMT '         005                AMT5               AMT5\n'  0AMT '         1005               100AMT5            100AMT5\n'  XX  '          005                5                  5\n'  XX  '          100                1XX00              1XX00\n'.  '             05                 5                  5\n'  , $0.  '       000005             $.05               $.05\n'  , $0.  '       100000             $1,000.00          $1,000.00\n'  ,$0 .  '       000010             $0.10              $0.10\n'$0  .  '         00100              $ 01.00            $ 01.00\n'  0-'            010                10                 10-\n'  0CR*'          010                10 *               10CR*\n'0  -  -    '     123456789          123-45-6789        123-45-6789\n' 0CR-'           05                 5 -                5CR-\n' 0CREDIT'        05                 5 EDIT             5CREDIT\n'  **'            10                 *10*               *10*\n' 0**'            10                 10**               10**\n'$ ,  *.  '       000010             $*****.10          $*****.10\n'$ ,  *.  '       050000             $**500.00          $**500.00\n'    0 '          05                 5                  5\n'   0  '          05                 05                 05\n' 0    '          05                 0005               0005\n\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ICALLASM": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x04\\x05\\x1f\\x01\\x04\\x05\\x1f\\x01\\x13\\x00\\x9a\\x00\\x9a\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-20T01:13:24", "lines": 154, "newlines": 154, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial:\n    External Subroutines (calling Assembler from RPG)\n\n\nAlthough the extensions to RPG syntax that came with RPG II and\nRPG III (and undoubtedly RPG IV as well) remove any barriers that\nprevent RPG programs from completing any task that can be\nachieved with any other programming language, the original RPG\ndoes have some shortcomings.  However, when confronted with a\ntask that RPG syntax can't handle, it is easy to call an external\nroutine written in Assembler.\n\nThree operation codes are provided for this function: EXIT,\nRLABL, and ULABL.\n\n\n        EXIT\n\nThe EXIT operation names the ENTRY name or CSECT name of the\nAssembler program to be called.  In fact, the EXIT operation\ntransfers control to the Assembler program at the point in the\nCalculation specifications where the EXIT operation is coded.\nThe requisite RLABL and/or ULABL operations that are coded along\nwith the EXIT operation are typically coded following the EXIT\noperation.  Upon completion of the Assembler program, control\nreturns to the RPG main program and execution continues with the\nnext operation following the last RLABL or ULABL associated with\nthe EXIT.\n\nThe Assembler CSECT or ENTRY name must be coded in the Factor 2\nfield (columns 33-42).\n\nLike other Calculation Specifications, the EXIT operation is\nexecuted in sequence with other specifications at the same level\n(detail or total time) and may be controlled by resulting and\ncontrol level indicators.  If the EXIT operation is either the\nfirst or the last entry of the detail or total time\nspecifications, the branch to the subprogram will take place as\nfollows:\n\n    Operation placement     When the branch will occur\n    -------------------     --------------------------\n    first detail            at the end of the data routine -\n                            after the data is extracted from the\n                            input record(s)\n    last detail             immediately before heading output\n                            records are written\n    first total             at the end of the input routine -\n                            after the record type(s) have been\n                            determined and the control field\n                            break(s) have been tested\n    last total              immediately before total output\n                            records are written\n\n\n        RLABL\n\nThe RLABL operation specifies data fields defined in the RPG\nprogram that are to be made available to the Assembler\nsubprogram.  The data field name must be coded in the Result\nfield (columns 43-48).  Optionally, the length of the data field\nand number of decimal positions may be entered (columns 49-51 and\n52 respectively).  I can find nothing (in my admittedly small\namount or RPG reference sources) about the effect of coding\nlength and decimal positions, but from my knowledge of the\nlinkage mechanism, I can't believe these entries will have much\naffect on the transfer of information between the main program\nand the subprogram.\n\n\n        ULABL\n\nThe ULABL operation specifies data fields that are defined in the\nAssembler subprogram that are to be referenced by the RPG main\nprogram after control returns from the subprogram.  The data\nfield name must be coded in the Result field (columns 43-48).\nThis name must be the same as the name declared in the Assembler\nsubprogram in an ENTRY statement in order for the linkage to be\nestablished correctly.  The field length must be coded for ULABL\nfields (columns 49-51) and the number of decimal positions must\nbe entered if the field is to be treated as a numeric field by\nthe RPG program (column 52).  Remember, fields named in ULABL\noperations are defined in the Assembler subprogram, but you must\ngive the RPG compiler the information it needs to process the\nfields properly when referenced by other RPG statements.\n\nRLABL and ULABL operations may be interspersed, and can occur\nanywhere in the Calculation specifications.  By convention, RLABL\nand ULABL operations are placed immediately preceding or\nfollowing the EXIT operation with which they are associated.\nFunctionally, these operations simply identify the symbols to be\nresolved by the linkage editor and do not actually generate any\nadditional code in the RPG program.\n\nAny RPG defined data field or indicator may be named in an RLABL\noperation, including table fields.  The Assembler subprogram can\nreference the data accessed from a LOKUP operation by referring\nto the data field TABXXX, that is, the table name of the function\naccessed.\n\nIndicators may be made available to the Assembler subprogram by\nusing the field name INnn where nn refers to the indicator\nidentifier.\n\nBoth data fields and indicators made available to an Assembler\nsubprogram must be defined in the RPG main program in an\noperation distinct from and in addition to the RLABL operation.\nFor example, if an Assembler subprogram is to be able to set on\nindicator 50 to signal a particular condition to the RPG main\nprogram upon return, it would be necessary to include indicator\n50 in a SETOF operation in addition to the indicator appearing in\na RLABL field, if indicator 50 were not defined in any other\nmanner in the RPG program.\n\nTo test indicators in an Assembler subprogram:\n\n        * if on, the data at INxx will be hexadecimal F0,\n        * if off, the data at INxx will be hexadecimal 00.\n\nTo set indicators in an Assembler subprogram:\n\n        * to set an indicator on, set the data located at INxx to\n          hexadecimal F0,\n        * to set an indicator off, set the data located at INxx\n          to hexadecimal 00.\n\nIndicators 00 and L0 must never be set off.\n\n\n        Resolving Links\n\nManaging the linkage between an RPG main and Assembler\nsubprograms is almost easier than the mechanism used to pass\nvariables used in other higher level languages.  The RLABL\noperation makes data field names defined in the RPG main program\nvisable externally to the RPG object program.  That is, they\nbecome ENTRY names in the symbol dictionary.  The ULABL operation\ndefines external references using the name supplied as an entry\nin the symbol dictionary.  These field references, along with the\nnames of the Assembler CSECT(s) named in EXIT operations will be\nresolved by the Linkage Editor.\n\nExternal subprograms may be supplied to the Linkage Editor either\nby using libraries of separately assembled and link edited\nmodules (DD SYSLIB) or by including specific datasets containing\nthe object modules and referencing these datasets in Linkage\nEditor control statements.\n\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JUSETABL": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x04\\x05\\x1f\\x01\\x04\\x05\\x1f\\x01\\x19\\x00O\\x00O\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-20T01:19:56", "lines": 79, "newlines": 79, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: Using Tables\n\n\nTables are used in RPG to store collections of related data.\nUsually, but not always, tables are defined, loaded, and utilized\nin pairs.  The first table of a pair contains a list of arguments\nthat is searched to obtain the location of both the argument\nelement and the corresponding function element in the related\ntable.  A simple example of a pair of tables is a list of\ndepartment numbers and their related department names:\n\n\n     Department Number    Department Name\n\n            01               Art\n            02               Business\n            03               Biology\n            04               Chemistry\n            05               Economics\n\n\nIt is also possible to define and utilize a single table.  One\nuse of such a table might be to validate a data field using a\nlist of possible valid field contents.  The single table of\ndepartment numbers could be used to validate that a department\nnumber field contained a valid entry, without the necessity of\nloading the corresponding department name table.\n\nA table file is a collection of records that provides all of the\ntable entries for a particular table.  Table files are associated\nwith the tables for which they contain entries by utilizing the\nFile Extension specification.  The organization of a table file\nmust be sequential.  A table file is identified on the File\nspecification by placing a T in the File Designation (column 16).\n\nTable files are loaded into main storage from the device on which\nthey are stored, prior to reading the first record from any other\ninput or update file defined.  The table files are loaded in the\norder in which they appear in the File Extension specifications.\nTable files may reside on cards, tape, or disk files.  The rules\nfor preparing table records are:\n\n    * each record must being with the first table entry of that\n      record in position 1\n    * all records in the table file, except the last, must\n      contain the same number of table entries\n    * entries in table file records must be adjacent (no unused\n      positions between the entries)\n    * entries in table file records must all be of the same\n      length\n    * when alternating (paired) table files are utilized,\n      each record in the file must begin with an entry of the\n      same type (argument or function)\n    * entries in table file records must not be split from one\n      record to another\n    * the number of entries in a table file must be exactly equal\n      to the number entered in columns 36-39 of the File\n      Extension specification\n\nThe information in tables may be updated by specifying the table\nelement as the target of a calculation operation following a\nsuccessful LOKUP operation.  The updated tables may then be\nwritten out at the conclusion of the RPG program by specifying a\ntarget file in the To File Name (columns 19-26) of the File\nExtension specification.  Although table entries may be updated,\nthey may not be added.  Entries may be provided to allow for\n\"expansion\" in the table by including \"dummy\" elements which can\nbe identified by the data they contain.  These \"dummy\" elements\nmay be updated by the program, replacing the elements with valid\ndata.  The files to receive the updated table elements must be\ndefined on the File Description specifications as Output (O in\ncolumn 15) and Table (T in column 16).\n\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KISAM": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x04\\x05\\x1f\\x01\\x04\\x05\\x1f\\x01$\\x00\\x80\\x00\\x80\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-20T01:24:28", "lines": 128, "newlines": 128, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: Indexed-Sequential File processing\n\n\nWhile researching a problem I encountered writing the example\nprograms for this tutorial, I read something that leads me to\nbelieve that the capability to create, update, and access\nIndexed-Sequential files with RPG programs became available\naround the time that the RPG compiler included with OS/360 MVT\n21.8f.  This may explain why a bug that I experienced in the RPG\ncompiler included with DOS 26 in 1973-1975 is also present in the\nMVT 21.8f compiler.  I state this to explain why some of the\nIndexed-Sequential processing with RPG I is rather primitive and\nlimited.\n\n\n    Building Indexed-Sequential Files\n\nThe additional entries required on the File specification for an\noutput Indexed-Sequential file (as compared to an ordinary\nsequential output file) are:\n\n    * Length of Key Field (columns 29-30)\n    * Record Address Type (column 31) should contain K to specify\n      that records are accessed with record keys\n    * Type of File Organization (column 32) should contain I to\n      specify Indexed-Sequential organization\n\nThe records written to the Indexed-Sequential file being built\nmust be written in ascending key sequence.  If an attempt is made\nto write a record with a key equal to or less than the key of the\nrecord previously written to the file, H0 will be set on and the\nprogram will terminate abnormally.\n\n\n    Processing Indexed-Sequential Files Sequentially\n\nThere are no additional entries required beyond those listed\nabove (for building Indexed-Sequential files) in order to process\nan Indexed-Sequential file in its entirety.  A sequentially\nprocessed file may be used as input (I in column 15 on the File\nspecification) or update (U in column 15).  If processed as an\nupdate file, records from the file may be updated at either\ndetail or total time.  The record available for updating is the\nrecord read on the previous input cycle.\n\n\n    Processing Indexed-Sequential Files by Chaining\n\nFrom one to nine Indexed-Sequential files may be processed by the\nuse of record key fields specified as chaining fields.  A data\nfield in an input record is designated as a chaining field by\nplacing the chaining field identifier (C1, C2, C3, ... C9 in\ncolumns 61-62 of the Input specification).  Each chaining field\nmust also be included on an Extension specification which\nfunctions to link the chaining file to the chained file.\n\nDuring the input cycle, the record key(s) contained in one or\nmore chaining fields are used to retrieve the corresponding\nrecord(s) from the Indexed-Sequential file specified on the\nExtension specification.  Chaining is the only circumstance in\nwhich more than one record identifying indicator may be on during\na single cycle.\n\nIf an attempt to read a record from an Indexed-Sequential file\nrandomly using a chaining field is not successful, the H0\nindicator will be turned on.  It is the responsibility of the\nprogram to turn off the H0 indicator if the program is not to be\nterminated abnormally at the end of the detail cycle.\n\n\n    Processing Indexed-Sequential Files by Record Address File\n\nA Record Address File, containing either individual record keys\nor a range of record keys, may be used to control which records\nare selected for processing from an Indexed-Sequential file.\n\nWhenever a Record Address File is used, an Extension\nspecification must be used to associate the Record Address File\nwith the Indexed-Sequential file it controls.  Only one Record\nAddress File may be used in any single RPG I program.\n\nIf the Record Address File is used to specify range(s) of records\nto process, the Mode of Processing (column 28) for the\nIndexed-Sequential file must contain an L (limits).  Each record\nin the Record Address File must contain one or more pairs of\nrecord keys.  The first record key of the first (or only) pair of\nrecord keys must begin in position one of the record.  The second\nrecord key of each (or the only) pair must immediately follow the\nfirst record key of the pair.  The last (or only) pair of record\nkeys in the Record Address File record must be followed by a\nseries of blanks as long as an individual record key.  This\nsignals the RPG program to read the next record from the Record\nAddress File.  The two record keys provided in the Record Address\nFile record represent the upper and lower limits of the\nIndexed-Sequential file area containing records to be processed.\n\nIf the Record Address File is used to specify individual records\nto process, the Mode of Processing (column 28) for the\nIndexed-Sequential file must contain an R (random).  Each record\nin the Record Address File must contain one or more record keys.\nThe first (or only) record key must begin in position one of the\nrecord.  Each successive record key must immediately follow the\nprevious record key.  The last (or only) record key in the Record\nAddress File record must be followed by a series of blanks as\nlong as an individual record key.  This signals the RPG program\nto read the next record from the Record Address File.\n\n\n    Adding Records to Indexed-Sequential Files\n\nRecords may be added to Indexed-Sequential files if the\nIndexed-Sequential file is being processed randomly.  File\nAddition (column 66) on the File specification for the\nIndexed-Sequential file must contain an A.  The Output\nspecification used to add a record to the Indexed-Sequential file\nmust contain ADD in columns 16-18.  The program logic must ensure\nthat an attempt is not made to add a record to the\nIndexed-Sequential file containing a key identical to a record\nalready existing in the file.  If an attempt is made to add a\nduplicate key, H0 will be turned on and the program will be\nabnormally terminated at the beginning of the next input cycle.\n\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMATCH": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00@\\x01\\x04\\x05\\x1f\\x01\\x04\\x05?\\x10\\x11\\x00B\\x00A\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-22T10:11:40", "lines": 66, "newlines": 65, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial: Matching Records processing\n\n\nThe matching records capability of RPG provides the means to\nprocess records from two or more files sequentially, performing\noperations when records from multiple files contain identical\ndata in the specified matching fields.\n\nI personally have not used matching records a great deal, having\nrelied much more heavily upon random processing, especially with\nthe advent of VSAM.  However, using matching records in RPG is\nmuch easier to implement than writing an equivalent COBOL program\nto accomplish a multi-file match/merge.  Even when records are\ncontained in an indexed file organization (ISAM or VSAM), if the\nmajority of records are likely to be updated, it would make more\nsense from a processing overhead standpoint to process the files\nsequentially.  Matching records is the perfect solution for such\nupdates.\n\nThe basic concept of matching records is simple - only one record\nis the \"active\" record at a particular time in the RPG logic\ncycle, however the \"next\" record from each input file is available\nat the beginning of the record selection cycle.  Therefore, the\nRPG program can indicate, via MR (the matching record indicator),\nif the currently selected record contains matching records in the\nother input files.\n\nAs many as three fields may be specified as matching fields in a\nsingle program.  Input fields are designated as matching fields\nby the inclusion of M1, M2, or M3 in columns 61-62 of the Input\nspecification.  If more than M1 is specified, the three data\nfields are considered by the RPG program as a single logical\nfield for the purpose of comparing to the corresponding fields in\neach input file.  In RPG I, the three fields must be specified in\nthe order they occur in the record, ie the field designated M1\nmust be to the left of the field designated M2, and the field\ndesignated M2 must be to the left of the field designated M3.\n\nThe order of hierarchy by which records are selected for\nprocessing is determined by the order in which files are\nspecified in the File Specifications.  The primary file has the\nhighest precedence, followed by the first secondary, followed by\nthe next secondary, etc.  Without using matching records, all of\nthe records from the primary file are processed before any\nrecords are processed from the first secondary.  Then all of the\nrecords from the first secondary file are processed, and so on.\n\nUsing matching records, the file from which the next record is\nselected for processing depends upon both the file specification\norder and the condition of whether the designated matching fields\ncontain identical data.  The order in which records are processed\nfrom two input files, using matching records, can be illustrated\nby this flowchart:\n\n------------------------------------------------------------------------\n\nYou may view the logic flow chart, which is in Adobe PDF format,\nby downloading member LMATCHPI in BINARY to a PC, and using the\nAdobe reader.  You can also print it out from the PC, using the\nAdobe reader.\n\n------------------------------------------------------------------------\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LMATCHPI": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x04\\x05?\\x01\\x04\\x05?\\x10\\x10\\x00u\\x00u\\x00\\x00\\xd7\\xc4\\xc6@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-22T00:00:00", "modifydate": "2004-02-22T10:10:00", "lines": 117, "newlines": 117, "modlines": 0, "user": "PDF"}, "mimetype": "application/pdf", "datatype": "binary", "extension": ".pdf"}, "MDMPREAD": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x04\\x05\\x1f\\x01\\x04\\x05\\x1f\\x100\\x00\\xa8\\x00\\xa8\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-20T10:30:51", "lines": 168, "newlines": 168, "modlines": 0, "user": "RPGTUTR"}, "text": "\n    RPG Tutorial:\n    Resolving RPG Programming Problems - dump reading for RPG\n\n\nI'm not sure that I should admit this, but most of the time I\nreally enjoy an opportunity (when the timing is right, of course)\nto go digging into a dump.  In my earlier days I saw it as a\nchallenge.  Sometime after that it became a matter of pride that\nI could work my way through a dump when many of the other\nprogrammers around me couldn't (or wouldn't).\n\nAnyway, RPG being a bit unique as a programming language, it also\nhas some unique approaches to using a dump to resolve a bad bug.\nFirst, where most programs use a higher number register (usually\nRegister 12) as a base register, the key to an RPG dump is\nRegister 3.  When a condition exists that causes an RPG program\nto terminate abnormally, for example - a sequence error in an\ninput file, the program will terminate with a User Abend (numbers\nin the range of 0040 to 0064 are common).  Some of these are\nlisted in the abend list <../sabends.htm> here on my site.  But\njust knowing why the abend occured may not be enough to resolve\nthe problem.\n\nThe most frequent indicator of why an RPG program abended will be\nfound by analyzing the Indicators that were on at the time of the\nabend, specifically the Halt Indicators.  Following the RPG\nsource listing In the compiler output is a symbol table.  Here is\nthe one from Example program three:\n\n(Output has been squeezed to fit into 80 columns - sbg)\n\n                                                  SYMBOL  TABLES\n\nRESULTING INDICATORS\n\nADDRESS RI ADDRESS RI ADDRESS RI ADDRESS RI ADDRESS RI ADDRESS RI ADDRESS RI\n\n 000004 U1  000005 U2  000006 U3  000007 U4  000008 U5  000009 U6  00000A U7\n 00000B U8  000011 OF  000014 1P  000015 LR  000016 00  000017 01  000018 02\n 00002A 20  00002B 21  00007A L0  000085 H0  000086 H1  000087 H2  000088 H3\n 000089 H4  00008A H5  00008B H6  00008C H7  00008D H8  00008E H9\n\nFIELD  NAMES\n\nADDRESS FIELD   ADDRESS FIELD   ADDRESS FIELD   ADDRESS FIELD   ADDRESS FIELD\n\n000127  IDENTA  00012E  NAME    000151  ADDR1   000174  IDENTB  00017B  ADDR2\n00019E  GENDER  00019F  PHONE   0001A5  BDATE   0001AA  MAJOR   0001AD  Z5\n0001B0  B40     0001D8  CACNT   0001DA  CBCNT   0001DC  PREVA   0001E3  MISSB\n0001EA  KEYH    0001F1  ADDCNT\n\nThe table gives the offset address (in hexadecimal) for all the\nIndicators and Fields used in the program.  Adding the address to\nthe contents of Register 3 yields the absolute location in the\ndump to find the Indicator or Field contents at the time of the\ndump.\n\n\n      H0 Analysis\n\nOf particular interest is H0, which is always located at x'85'.\nIf H0 is on, there is a table (the H0 analysis table) that may\ngive additional information about the abend.  The contents of\nthis table are found by adding Register 3 to x'11C', x'120',\nx'121', and x'122'.  Obviously the last three are adjacent single\nbyte fields, so it is really only necessary to compute the first\naddress.  The first address, if applicable, points to either an\nInput Output Request Block (IORB) or a Define The File (DTF)\ntable.  The possible meanings that can be ascribed to the three\nreason codes are:\n\nCondition that turned H0 on               x'11C'  x'120'  x'121'  x'122'\n---------------------------\nInitialized on or turned on by programmer    N/A     00     00      00\nInvalid chaining request                     N/A     02     N/A     N/A\nUndefined record type                       IORB     10     N/A     N/A\nCollating sequence error (matching records)  N/A     04     N/A     N/A\nRecord sequence error                        N/A     08     N/A     N/A\nDAM (record not found)                       DTF     N/A     80     N/A\nDAM (data check)                             DTF     N/A     40     N/A\nDAM (wrong length record)                    DTF     N/A     20     N/A\nISAM (invalid key length)                   IORB     N/A     N/A     FF\nISAM (DASD error)                            DTF     N/A     N/A     80\nISAM (wrong length record)                   DTF     N/A     N/A     40\nISAM (illegal End Of File within limits)     DTF     N/A     N/A     20\nISAM Load (prime data area full)             DTF     N/A     N/A     20\nISAM Load (master index full)                DTF     N/A     N/A     08\nISAM (duplicate record)                      DTF     N/A     N/A     04\nISAM Load (sequence error)                   DTF     N/A     N/A     02\nISAM Load (overflow area full)               DTF     N/A     N/A     02\nISAM (no record found)                       DTF     N/A     N/A     10\nISAM Load (cylinder index full)              DTF     N/A     N/A     10\nISAM Retrieve (illegal ID specified)         DTF     N/A     N/A     08\nISAM Retrieve                                DTF     N/A     N/A     01\n   (record retrieved from overflow area)\n\n       Input/Output Request Blocks\n\nThe address listed in the Memory Map for Input Output Request\nBlocks Pointer, when adjusted by the addition of the contents of\nRegister 3, points to a table of Input/Output information about\nthe files defined in the RPG program which abended.  Each\nthirty-two byte entry in the table has the following format:\n\nDisplacement    Contents\n\n 0    address of record buffer\n 4    address of parameter list for DAM or ISAM\n 8    record length\n10    line counter value\n12    line counter info (x'11' = line counter present, x'EE'\n      error in line counter routine\n13    file number\n14    action type (x'00' = read, x'02' = write, x'04' = stacker\n      select\n15    skip before or stacker number\n16    space before\n17    skip after\n18    space after\n19    overflow or end of file switch (x'00' = off, x'11' =\n      printer overflow, x'22' end of file or end of extents,\n      x'33' end of ISFMS limits\n20    overflow switch two\n21    sense overflow\n22    ISAM with limits\n23    first pass switch\n24    file type\n25    stacker select codes for device assigned to the file\n27    record read from ISAM file (x'11' = record read, x'00' =\n      record not read)\n28    SETL switch (x'FF' = SETL or SETFL have been executed,\n      x'00' = ESETL or ENDFL have been executed\n29    ISAM key length\n30    ISAM key location within data record\n\n\n      Table Information\n\nWhen tables are used, the table names can be found in the\nfield-names section of the Symbol Table.  Each table name will\nhave an associated hexadecimal address.  By adjusting this\naddress by the addition of the contents of Register 3, the table\nholding area can be found.  Initially, this holding area\nspecifies the contents of the first table entry.  After a table\nLOKUP operation, the holding area will contain the contents of\nthe last table entry found.\n\nThe actual table in core can be found by use of a sixteen byte\ntable linkage field.  The table linkage field is found by\nsubtracting x'10' from the address of the table holding area.\nThe starting address of the table data is located in bytes five\nthrough eight of the table linkage field.  Bytes nine through\ntwelve contain the address of the byte following the table.  The\nwork address is found in bytes thirteen through sixteen.\nInitially, this address contains hexadecimal zeros, but after a\ntable LOKUP operation it contains the address of the last table\nelement found.\n\nAlthough not an exhaustive treatment of RPG dump analysis, this\nshould be enough information to steer you to solving the majority\nof program problems.\n\n\n\n\nThis page was last updated on August 21, 2003.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZEXAMPLS": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x04\\x05\\x1f\\x01\\x04\\x05\\x1f\\x105\\x08\\xf3\\x08\\xf3\\x00\\x00\\xd9\\xd7\\xc7\\xe3\\xe4\\xe3\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-20T00:00:00", "modifydate": "2004-02-20T10:35:00", "lines": 2291, "newlines": 2291, "modlines": 0, "user": "RPGTUTR"}, "text": "./ ADD NAME=$INDEX   8000-76050-76050-1740-00027-00027-00000-JAY01\n$INDEX - THIS MEMBER\nEX1    - RPG TUTORIAL EXAMPLE PROGRAM 1 SOURCE\nEX1$   - JCL TO COMPILE AND EXECUTE PROGRAM 1\nEX1D   - DATA FOR PROGRAM 1\nEX2    - RPG TUTORIAL EXAMPLE PROGRAM 2 SOURCE\nEX2$   - JCL TO COMPILE AND EXECUTE PROGRAM 2\nEX2D   - DATA FOR PROGRAM 2\nEX3    - RPG TUTORIAL EXAMPLE PROGRAM 3 SOURCE\nEX3$   - JCL TO COMPILE AND EXECUTE PROGRAM 3\nEX3D   - DATA FOR PROGRAM 3\nEX4    - RPG TUTORIAL EXAMPLE PROGRAM 4 SOURCE\nEX4$   - JCL TO COMPILE AND EXECUTE PROGRAM 4\nEX4D   - DATA FOR PROGRAM 4\nEX5    - RPG TUTORIAL EXAMPLE PROGRAM 5 SOURCE\nEX5$   - JCL TO COMPILE AND EXECUTE PROGRAM 5\nEX5A   - RPG TUTORAL EXAMPLE PROGRAM 5 ASSEMBLER ROUTINE SOURCE\nEX6    - RPG TUTORIAL EXAMPLE PROGRAM 6 SOURCE\nEX6$   - JCL TO COMPILE AND EXECUTE PROGRAM 6\nEX6D1  - DATA FOR PROGRAM 6 (TABLE 1)\nEX6D2  - DATA FOR PROGRAM 6 (TABLE 2) (ALSO USED FOR PROGRAM 8)\nEX6D3  - DATA FOR PROGRAM 6 (TABLE 3)\nEX7    - RPG TUTORIAL EXAMPLE PROGRAM 7 SOURCE\nEX7$   - JCL TO COMPILE AND EXECUTE PROGRAM 7\nEX7D   - DATA FOR PROGRAM 7\nEX8    - RPG TUTORIAL EXAMPLE PROGRAM 8 SOURCE\nEX8$   - JCL TO COMPILE AND EXECUTE PROGRAM 8\nEX8D   - DATA FOR PROGRAM 8\n./ ADD NAME=EX1      8000-76050-76050-1347-00025-00025-00000-JAY01\n     H\n     H*\n     H* READ ADDRESS CARDS AND PRINT ADDRESS LIST\n     H*\n     FINCARDS IPE F  80  80            READ40\n     FOUTLIST O   F 132 132     OF    LPRINTER\n     LOUTLIST 0010106012\n     IINCARDS AA  01\n     I                                        1  25 NAME\n     I                                       26  50 ADDR1\n     I                                       51  75 ADDR2\n     OOUTLIST H  201   1P\n     O       OR        OF\n     O                         PAGE  Z   40\n     O                                   36 'PAGE'\n     O                                   23 'ADDRESS LIST'\n     O                         UDATE      8 ' 0/  /  '\n     O        D  1     01\n     O                         NAME      30\n     O        D  1     01\n     O                         ADDR1     30\n     O        D  2     01\n     O                         ADDR2     30\n     O        T 3   01 LR\n     O                                   24 '*** END OF LIST ***'\n./ ADD NAME=EX1$     8002-76050-76050-1446-00012-00012-00000-JAY01\n//EXAMPLE1 JOB (001),'RPG TUTORIAL 1',\n//             CLASS=A,MSGCLASS=A,REGION=512K\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX1)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.INCARDS  DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX1D)\n//GO.OUTLIST  DD SYSOUT=*\n//\n./ ADD NAME=EX1D     8000-76050-76050-1347-00050-00050-00000-JAY01\nMICHELLE COOK            9561 BAYVIEW STREET      BALDWIN, MO 63022\nPATTY JENNINGS           806 JACKSON STREET       VALPARAISO, IN 46383\nRICHARD SMITH            279 PARKER BLVD          NASHAU, NH 03060\nDUNCAN POWERS            9496 BAYVIEW STREET      BUFFALO, NY 14225\nWILLIAM EUBANKS          736 FETLOCK AVENUE       FALLS VILLAGE, CT 06031\nSHIRLEY GARLAND          827 SHORE AVENUE         GREENVILLE, SC 29616\nJOAN FRANKLIN            4550 BIENVILLE CIRCLE    KANSAS CITY, MO 64118\nANDREW BLUME             2942 BAYVIEW AVENUE      ROCHESTER, NY 03840\nELIZABETH BOWERS         1023 SOUTHLAND STREET    RIVERSIDE, NJ 08370\nDIANE HAMMOND            3732 BENSON CIRCLE       FORT COLLINS, CO 80524\nLUCY ROSS                208 ALLEN PLACE          EVERETT, WA 98204\nLISA ELISON              488 WESTRIDGE STREET     SPARKS, NV 89431\nMATTHEW RIGHT            6267 BRIARGLEN PLACE     CLEVELAND, OH 44104\nZELDA BARBER             442 COLISEUM STREET      ALBANY, NY 12206\nBRIAN HARMON             872 GRANT BLVD           WICHITA, KS 67208\nNATHAN MCKAY             1184 JUNIPER CIRCLE      HOUSTON, TX 77053\nLUCY JACOBY              144 MEADOW PLACE         SPARKS, NV 89431\nSCOTT PARRISH            9387 A & M CIRCLE        DES PLAINES, IL 60018\nCALVIN MULL              5924 TWILIGHT COURT      SPARKS, NV 89431\nCYBIL NOELKE             6782 BRIDGE CIRCLE       LAGO VISTA, TX 78645\nRUTH VANACKER            6021 BAYSHORE CIRCLE     NEWPORT BEACH, CA 92663\nJARED BROCKTON           761 GARRETT AVENUE       GREENVILLE, SC 29616\nMATTHEW JACKSON          4691 SHERWOOD STREET     LA JOLLA, CA 92037\nCALVIN POWERS            867 ALLEN STREET         SPRING, TX 77373\nSUE SMITH                9848 PLUM STREET         PALM DESERT, CA 92211\nARNOLD WEAVER            701 TWILIGHT ROAD        KNOXVILLE, TN 37932\nKEVIN NORTON             5343 PARSON AVENUE       JUNEAU, AK 99801\nSCOTT RENFRO             5418 ATOLL ROAD          PASADENA, CA 91186\nERNIE LABROIE            2913 BRANDYWINE CIRCL    SAN ANGELO, TX 76903\nSHARON JACKSON           2934 ROSA LINDA AVENU    NEW YORK, NY 10001\nPETER ALEXANDER          7444 ROBINHOOD ROAD      NEW YORK, NY 10001\nSHARON EUBANKS           9619 JUNIPER ROAD        SIOUX FALLS, SD 57112\nSHIRLEY ERICKSON         596 COLLEGE STREET       GRAND RAPIDS, MN 55745\nANN STUART               9581 DESERT STREET       OKLAHOMA CITY, OK 73120\nSUE FONTAINE             2229 WESTRIDGE STREET    SAN ANTONIO, TX 78216\nKEVIN COOK               3055 ROSA LINDA STREE    DES PLAINES, IL 60018\nDIANE EUBANKS            4404 SOUTHLAND BLVD      PRESCOTT, AZ 86314\nBOB JEFFERSON            542 KINGS RIDGE BLVD     NEWPORT, RI 02840\nCRAIG LANDERS            6276 ELLIS STREET        ANN ARBOR, MI 48107\nNELSON HORTON            3066 SHERWOOD ROAD       NORWALK, CT 06854\nKEITH ERICKSON           227 BAYSHORE PLACE       GREENVILLE, KY 42345\nRICHARD GOODWIN          294 RIDGEWAY ROAD        OKLAHOMA CITY, OK 73120\nDANIEL ROBERTSON         379 ALTAVISTA CIRCLE     EVERETT, WA 98204\nJOAN AUSTIN              203 EASTHAVEN STREET     NEWPORT, RI 02840\nJARED MEEHAN             555 EDMUND CIRCLE        EVERETT, WA 98204\nCRAIG STONE              6791 GUADLAUPE COURT     WEST PALM BEACH, FL 33406\nJACOB SCHAEFER           8278 LINDENWOOD AVENU    JUNEAU, AK 99801\nJARED HILLFORD           846 QUAIL AVENUE         PHOENIX, AZ 85040\nCLIFF PARKER             674 BRANDYWINE AVENUE    LAGO VISTA, TX 78645\nJOHN SCHAEFER            7210 PARSON COURT        LA HABRA, CA 90631\n./ ADD NAME=EX2      8001-76050-76050-1359-00038-00038-00000-JAY01\n     H\n     H*\n     H* MERGE CUSTOMER CARDS (1-2-3) CREATING CUSTOMER TAPE\n     H*\n     FINCARDS IPE F  80  80            READ40\n     FOUTTAPE O   F2900 116            TAPE         S\n     IINCARDS 011 01   1 C1\n     I                                        3   90CUST#\n     I                                       11  21 FNAME\n     I                                       23  23 INITL\n     I                                       25  34 LNAME\n     I                                       36  60 ADDR\n     I        021 02   1 C2\n     I                                        3   90CUST#\n     I                                       11  30 CITY\n     I                                       32  33 STATE\n     I                                       35  39 ZIP\n     I        031 03   1 C3\n     I                                        3   90CUST#\n     I                                       11  11 SEX\n     I                                       13  22 PHONE\n     I                                       24  310BDATE\n     I                                       33  400ADATE\n     I                                       42  490LDATE\n     OOUTTAPE D        03\n     O                         LDATE    116\n     O                         ADATE    108\n     O                         BDATE    100\n     O                         PHONE     92\n     O                         SEX       82\n     O                         ZIP       81\n     O                         STATE     76\n     O                         CITY      74\n     O                         ADDR      54\n     O                         LNAME     29\n     O                         INITL     19\n     O                         FNAME     18\n     O                         CUST#      7\n./ ADD NAME=EX2$     8004-76050-76050-1446-00023-00021-00000-JAY01\n//EXAMPLE2 JOB (001),'RPG TUTORIAL 2',\n//             CLASS=A,MSGCLASS=A,REGION=512K\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX2)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.INCARDS DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX2D)\n//GO.OUTTAPE  DD DSN=CUSTOMER.DATA,UNIT=TAPE,VOL=SER=RPGET1,\n//             DISP=(NEW,PASS)\n//***************************************************************\n//PRINT    EXEC PGM=IEBPTPCH,REGION=128K\n//SYSIN    DD  *\n  PRINT MAXFLDS=1\n  RECORD FIELD=(116)\n/*\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=CUSTOMER.DATA,DISP=OLD\n//SYSUT2   DD  SYSOUT=*\n//\n./ ADD NAME=EX2D     8000-76050-76050-1356-00300-00300-00000-JAY01\n1 0697106 Howard      P Hall       7299 Caribbean Street\n2 0697106 Valparaiso           IN 46383\n3 0697106 M 7653650809 19370905 19441117 19521210\n1 0584185 John        F Hammond    2268 Michigan Court\n2 0584185 Bridgeport           CT 06605\n3 0584185 M 8606128230 19230526 19590810 19260513\n1 0910463 Jared       T Powers     464 Lakefront Avenue\n2 0910463 Wichita              KS 67208\n3 0910463 M 3165112293 19260421 19440809 19600628\n1 0694749 Jared       F Renfro     874 Mill Mountain Circle\n2 0694749 Chicago              IL 60611\n3 0694749 M 7086766824 19430322 19500531 19460509\n1 0401511 Rita        H Lockett    3590 Atoll Road\n2 0401511 Baldwin              MO 63022\n3 0401511 F 4177196868 19440913 19340122 19330918\n1 0256182 Jill        C McQueen    8362 Plum Blvd\n2 0256182 Nashau               NH 03060\n3 0256182 F 6033956751 19600219 19090101 19351001\n1 0183911 Caitlin     W Robertson  9460 Bayview Blvd\n2 0183911 St. Clair            MI 48048\n3 0183911 F 3137171015 19161116 19210410 19520902\n1 0085946 Duncan      E Powers     3300 Walden Avenue\n2 0085946 Chicago              IL 60611\n3 0085946 M 7081016465 19120731 19420622 19260211\n1 0289054 Cheryl      D Jennings   1215 Lincoln Place\n2 0289054 Stephenville         TX 76401\n3 0289054 F 8172457424 19540907 19600423 19180203\n1 0073094 Yolanda     B Shriver    5559 Strawberry Circle\n2 0073094 Newport Beach        CA 92663\n3 0073094 F 4083574020 19480402 19500307 19430225\n1 0945065 Christopher T Erwin      9062 Juniper Place\n2 0945065 San Angelo           TX 76903\n3 0945065 M 9154614851 19430322 19500531 19460509\n1 0993640 Zelda       H Conley     232 Bayshore Place\n2 0993640 Kearney              NE 68848\n3 0993640 F 4021321358 19310130 19370406 19310921\n1 0528624 Jack        I Jackson    2373 Westridge Street\n2 0528624 Rochester            NY 03840\n3 0528624 M 3151398500 19161104 19620703 19630327\n1 0172138 Louise      K Gerblick   2013 Fetlock Avenue\n2 0172138 Sioux Falls          SD 57112\n3 0172138 F 6057095553 19460321 19211122 19471229\n1 0288661 Calvin      D Stone      8467 Bayshore Street\n2 0288661 Fremont              CA 94538\n3 0288661 M 9099522296 19260421 19440809 19600628\n1 0541369 Matthew     L Peterson   7809 Windtree Street\n2 0541369 Charlotte            NC 28262\n3 0541369 M 7046946147 19350331 19230131 19440731\n1 0793289 Angela      G Erickson   1142 Camelot Avenue\n2 0793289 Santa Fe             NM 87501\n3 0793289 F 5052826183 19390812 19440602 19400412\n1 0823522 Bob         R Peterson   7030 Lincoln Street\n2 0823522 Dallas               TX 75287\n3 0823522 M 2146645310 19350826 19461106 19180425\n1 0470904 Marcia      J Teasdale   485 College Street\n2 0470904 Columbus             GA 31997\n3 0470904 F 9121129585 19600219 19090101 19351001\n1 0172974 Clara       K Ross       922 Koberlin Blvd\n2 0172974 St. Clair            MI 48048\n3 0172974 F 3132316320 19250623 19241001 19510724\n1 0490291 Michelle    R Weaver     2936 Atoll Court\n2 0490291 Murfreesboro         TN 37128\n3 0490291 F 6154727445 19220622 19310215 19390730\n1 0390020 Cliff       G Drake      185 Lincoln Street\n2 0390020 Austin               TX 78759\n3 0390020 M 5128936227 19130411 19361119 19360821\n1 0977517 Clara       L Gerblick   163 Parson Street\n2 0977517 Denver               CO 80256\n3 0977517 F 3034515657 19580615 19270221 19400114\n1 0239087 Laurie      L Brockton   6086 Bayshore Place\n2 0239087 New York             NY 10001\n3 0239087 F 2125006763 19540907 19600423 19180203\n1 0128941 Harold      G Powers     811 Hedgewood Avenue\n2 0128941 Albany               NY 12206\n3 0128941 M 5186129061 19460321 19211122 19471229\n1 0467019 Craig       N Bryant     6037 Millbrook Blvd\n2 0467019 Missoula             MT 59802\n3 0467019 M 4065360205 19330415 19640313 19171216\n1 0925566 Laurie      K Mattox     4154 Benson Road\n2 0925566 Santa Fe             NM 87501\n3 0925566 F 5056549287 19440430 19390627 19460819\n1 0743783 Caitlin     J Jennings   1913 Lindenwood Avenue\n2 0743783 Louisville           KY 40207\n3 0743783 F 5025805269 19300714 19180714 19080712\n1 0768290 Shirley     A Murray     702 Industrial Road\n2 0768290 Roswell              GA 30075\n3 0768290 F 4049975093 19320109 19320226 19500412\n1 0147313 Cliff       H Tyler      1492 Maple Street\n2 0147313 Falls Village        CT 06031\n3 0147313 M 2038054996 19220416 19220619 19460805\n1 0530271 Jerry       P Weaver     8414 Parkway Blvd\n2 0530271 Oklahoma City        OK 73120\n3 0530271 M 4056506379 19251124 19461225 19420701\n1 0172753 Louis       P Ross       598 Charleston Place\n2 0172753 Santa Fe             NM 87501\n3 0172753 M 5058909117 19460209 19470202 19450910\n1 0945929 Everett     R Hammond    984 Quail Circle\n2 0945929 San Diego            CA 92154\n3 0945929 M 6195553413 19370905 19441117 19521210\n1 0870037 Christopher B Lockett    8027 Sand Creek Court\n2 0870037 Sioux Falls          SD 57112\n3 0870037 M 6051604138 19141125 19610701 19320930\n1 0925405 Andrew      J Harmon     3059 Benson Road\n2 0925405 Peabody              MA 01961\n3 0925405 M 5086458021 19500609 19201206 19250620\n1 0588023 Yolanda     K Lockett    901 Guadlaupe Avenue\n2 0588023 St. Clair            MI 48048\n3 0588023 F 3135258050 19070929 19400918 19520701\n1 0872297 Hannah      F Mull       5756 Rosa Linda Road\n2 0872297 Buffalo              NY 14225\n3 0872297 F 9149506972 19330801 19280810 19430622\n1 0093472 Helen       H Horton     6441 Caribbean Street\n2 0093472 Peabody              MA 01961\n3 0093472 F 5082492366 19350331 19230131 19440731\n1 0539642 Sharon      K Moreno     884 Main Street\n2 0539642 Cleveland            OH 44104\n3 0539642 F 2162470329 19241202 19200405 19550212\n1 0796024 Adolf       W McKenzie   808 Industrial Blvd\n2 0796024 Baton Rouge          LA 70805\n3 0796024 M 3182516312 19161209 19440925 19470629\n1 0879500 Betty       D Garland    225 Charleston Road\n2 0879500 Chicago              IL 60611\n3 0879500 F 7087942517 19470108 19480902 19240403\n1 0186119 Craig       T Cook       663 College Avenue\n2 0186119 Salina               KS 67401\n3 0186119 M 7853243687 19600219 19090101 19351001\n1 0142690 Tom         G Horton     171 Bright Street\n2 0142690 Providence           RI 02917\n3 0142690 M 4012429121 19251124 19461225 19420701\n1 0884612 Roland      I Stone      2227 Bienville Court\n2 0884612 Minneapolis          MN 55437\n3 0884612 M 3205718647 19260318 19600326 19320411\n1 0591578 Bill        L Elison     448 Briarglen Street\n2 0591578 Norwalk              CT 06854\n3 0591578 M 2034610747 19130115 19530202 19620321\n1 0556455 Kevin       N Barber     738 Seabreeze Street\n2 0556455 Madison              WI 53704\n3 0556455 M 6089525916 19081120 19480204 19390407\n1 0965823 Kathryn     A Richards   309 Van Zandt Street\n2 0965823 Downey               CA 90302\n3 0965823 F 2139765031 19250815 19350301 19200927\n1 0854406 Lisa        B Martin     7814 Maple Blvd\n2 0854406 Kansas City          MO 64118\n3 0854406 F 8167459162 19130411 19361119 19360821\n1 0874374 Diane       E Franklin   574 Pecan Valley Street\n2 0874374 Buffalo              NY 14225\n3 0874374 F 9148236939 19431231 19561120 19360604\n1 0064835 Lisa        D Winston    6078 Green Valley Street\n2 0064835 Covington            LA 70433\n3 0064835 F 5047413171 19220622 19310215 19390730\n1 0956533 Darryl      A Trujillo   750 Michigan Road\n2 0956533 Madison              WI 53704\n3 0956533 M 6084913086 19460321 19211122 19471229\n1 0617132 Louis       A Larue      4587 Rio Vista Place\n2 0617132 Murfreesboro         TN 37128\n3 0617132 M 6153801303 19330415 19640313 19171216\n1 0046247 Sharon      A Fontaine   3229 Atoll Avenue\n2 0046247 San Antonio          TX 78216\n3 0046247 F 2103141991 19140402 19480929 19580824\n1 0394300 John        O Hall       5838 Apple Valley Avenue\n2 0394300 Hatteras             NC 27943\n3 0394300 M 9196390200 19250815 19350301 19200927\n1 0319423 Jacob       O McKay      550 Parkway Place\n2 0319423 Fort Collins         CO 80524\n3 0319423 M 9708144539 19510421 19411213 19080405\n1 0577080 Marcia      D Teasdale   264 A & M Avenue\n2 0577080 New York             NY 10001\n3 0577080 F 2128834754 19460209 19470202 19450910\n1 0445867 Caitlin     C Alexander  643 Windwood Road\n2 0445867 Roanoak              VA 24014\n3 0445867 F 5406480236 19460220 19490707 19251213\n1 0353177 Brian       A Stone      8622 Desert Blvd\n2 0353177 Fort Collins         CO 80524\n3 0353177 M 9709205785 19620619 19470416 19260311\n1 0557326 Everett     A Ervin      8640 Michigan Avenue\n2 0557326 West Palm Beach      FL 33406\n3 0557326 M 5619332412 19431231 19561120 19360604\n1 0257579 Jerry       F Conley     108 Villa Park Street\n2 0257579 Berkeley             CA 94704\n3 0257579 M 5106069427 19310130 19370406 19310921\n1 0722219 Jesse       E Alexander  667 Coliseum Street\n2 0722219 Fort Lauderdale      FL 33304\n3 0722219 M 9549580902 19211226 19351201 19550112\n1 0077771 Michelle    H Trujillo   865 Bayshore Blvd\n2 0077771 Buffalo              NY 14225\n3 0077771 F 9149975489 19230526 19590810 19260513\n1 0770262 Louis       A Dunbar     247 Easthaven Court\n2 0770262 Annapolis            MD 21402\n3 0770262 M 4106265373 19680208 19330523 19390501\n1 0768302 Jared       C Parrish    6448 College Place\n2 0768302 Forest Heights       MD 20745\n3 0768302 M 2404084382 19390812 19440602 19400412\n1 0812479 Lucy        W Ramsey     241 Hillside Place\n2 0812479 Chattanooga          TN 37422\n3 0812479 F 6159734806 19250706 19260601 19570809\n1 0920323 Keith       W Reed       2590 Garrett Avenue\n2 0920323 Greenville           SC 29616\n3 0920323 M 8038457821 19220622 19310215 19390730\n1 0336619 Louise      G Norton     890 Sheridan Road\n2 0336619 Fort Worth           TX 76119\n3 0336619 F 8173627296 19300531 19080402 19340823\n1 0866676 Peter       T Stone      9253 Seaside Avenue\n2 0866676 Forest Heights       MD 20745\n3 0866676 M 2409129569 19440520 19030913 19500206\n1 0723947 Daniel      E Barber     325 Cobbs Circle\n2 0723947 Fremont              CA 94538\n3 0723947 M 9092774543 19560606 19090103 19170124\n1 0335500 Clara       T Reed       615 Apple Valley Street\n2 0335500 Denver               CO 80256\n3 0335500 F 3032886714 19440520 19030913 19500206\n1 0259331 Troy        M Harris     4217 Cobbs Street\n2 0259331 Anchorage            AK 99508\n3 0259331 M 9074158569 19540907 19600423 19180203\n1 0631537 Cindy       L Tyler      999 Meadow Avenue\n2 0631537 Salt Lake City       UT 84109\n3 0631537 F 8013316042 19310904 19300828 19490624\n1 0986970 Brian       A Murray     3109 Benson Road\n2 0986970 Salt Lake City       UT 84109\n3 0986970 M 8012261639 19240612 19570615 19190205\n1 0627262 Jack        R Parker     2398 Cumberland Avenue\n2 0627262 Houston              TX 77053\n3 0627262 M 7137219689 19411003 19460520 19120815\n1 0103316 Bill        G Winston    4504 Juniper Street\n2 0103316 Austin               TX 78759\n3 0103316 M 5123940543 19380829 19331126 19181107\n1 0778613 Louis       A Stuart     536 Atoll Street\n2 0778613 Fremont              CA 94538\n3 0778613 M 9099167194 19750222 19531208 19370108\n1 0693514 Joyce       E Dunbar     3570 Atoll Street\n2 0693514 Palm Desert          CA 92211\n3 0693514 F 7603787181 19460220 19490707 19251213\n1 0667249 Peter       B Yaeger     980 Northcross Avenue\n2 0667249 Binghamton           NY 11704\n3 0667249 M 3151552575 19540615 19400508 19380522\n1 0615942 Yolanda     P Ross       3678 Rio Vista Street\n2 0615942 Falls Village        CT 06031\n3 0615942 F 2034989268 19340217 19370330 19490916\n1 0660148 Evelyn      R Reed       355 Rosa Linda Street\n2 0660148 Fort Lauderdale      FL 33304\n3 0660148 F 9541970391 19430206 19270916 19390206\n1 0890481 Robert      J Robertson  644 Quail Avenue\n2 0890481 Tulsa                OK 74135\n3 0890481 M 9181129443 19540907 19600423 19180203\n1 0675113 Richard     H Renfro     753 Bonanza Road\n2 0675113 St. Clair            MI 48048\n3 0675113 M 3134419723 19220726 19600630 19410227\n1 0927088 Adolf       D Parrish    816 Strawberry Avenue\n2 0927088 Derby                KS 67037\n3 0927088 M 3167839497 19510131 19120518 19300825\n1 0400595 Everett     R Parker     5788 Pecan Valley Street\n2 0400595 Greenville           KY 42345\n3 0400595 M 6023351344 19241202 19200405 19550212\n1 0433640 Angela      R Bowers     5308 Atoll Avenue\n2 0433640 Pittsburgh           PA 15226\n3 0433640 F 8146453756 19250815 19350301 19200927\n1 0167182 Debra       G Murray     207 Garden Road\n2 0167182 Fort Collins         CO 80524\n3 0167182 F 9706346996 19161209 19440925 19470629\n1 0637079 Jacob       H Rodgers    2264 Northfield Street\n2 0637079 Juneau               AK 99801\n3 0637079 M 9075385237 19390812 19440602 19400412\n1 0974534 Ernie       M Hillford   571 Villa Park Blvd\n2 0974534 Santa Fe             NM 87501\n3 0974534 M 5055940984 19330801 19280810 19430622\n1 0813872 Heather     W Johnson    551 Guadlaupe Avenue\n2 0813872 Baton Rouge          LA 70805\n3 0813872 F 3187805492 19390210 19420624 19480727\n1 0199707 Troy        O Larue      874 Allen Road\n2 0199707 Ashland              KY 41103\n3 0199707 M 6064489045 19180129 19621119 19610609\n1 0268301 Ronald      I Templeton  1966 Northfield Circle\n2 0268301 Los Angeles          CA 90077\n3 0268301 M 2133294283 19410109 19180329 19310917\n1 0798982 Howard      O Jacoby     936 Grant Place\n2 0798982 Atlanta              GA 30305\n3 0798982 M 4043167093 19211226 19351201 19550112\n1 0659250 Ronald      T Yaeger     803 Macadam Circle\n2 0659250 Roswell              GA 30075\n3 0659250 M 4047797871 19431231 19561120 19360604\n1 0483218 Keith       W Fontaine   392 Lincoln Blvd\n2 0483218 Salina               KS 67401\n3 0483218 M 7859098712 19600219 19090101 19351001\n1 0868375 Darryl      S McQueen    743 Grant Street\n2 0868375 Phoenix              AZ 85040\n3 0868375 M 6024713398 19300531 19080402 19340823\n1 0061326 Beverly     G Norton     1072 Robinhood Street\n2 0061326 Boise                ID 83714\n3 0061326 F 2086349723 19370712 19200325 19600710\n1 0039655 Diane       R Hammond    1052 Bridge Court\n2 0039655 New York             NY 10001\n3 0039655 F 2128697778 19251124 19461225 19420701\n1 0109007 Andrew      K Jefferson  6448 Shore Road\n2 0109007 Helena               MT 59602\n3 0109007 M 4064552010 19251124 19461225 19420701\n1 0531538 Kimberly    I Carlisle   4090 Pecan Valley Street\n2 0531538 Norman               OK 73252\n3 0531538 F 4053946245 19240612 19570615 19190205\n1 0457349 Peter       C Tucker     4936 Macadam Street\n2 0457349 Louisville           KY 40207\n3 0457349 M 5028622464 19220416 19220619 19460805\n./ ADD NAME=EX3      8000-76050-76050-1406-00115-00115-00000-JAY01\n     H\n     H*\n     H*  CREATE ISAM STUDENT MASTER FILE FROM CARDS\n     H*\n     FINCARDS IPE F  80  80            READ40\n     FSTMASTR O   F 250 250  7KI     2 DISK14       S\n     FREPORT  O   F 132 132     OF    LPRINTER\n     LREPORT    101 6012\n     IINCARDS AA  01   1 CA\n     I                                        3   9 IDENTA\n     I                                       10  44 NAME\n     I                                       45  79 ADDR1\n     I        BB  02   1 CB\n     I                                        3   9 IDENTB\n     I                                       10  44 ADDR2\n     I                                       45  45 GENDER\n     I                                       46  550PHONE\n     I                                       56  630BDATE\n     I                                       64  66 MAJOR\n     C*\n     C* DURING FIRST CYCLE (1P), SETUP CONSTANT FIELDS\n     C* TO INITIALIZE MASTER FIELDS NOT PROVIDED ON\n     C* INPUT CARDS\n     C*\n     C   1P                Z-ADD0         Z5      52\n     C   1P                MOVE ' '       B40    40\n     C*\n     C* COUNT INPUT CARDS OF EACH TYPE FOR REPORT TOTALS\n     C*\n     C   01      CACNT     ADD  1         CACNT   30\n     C   02      CBCNT     ADD  1         CBCNT   30\n     C*\n     C* FOR \"A\" CARD, IF LAST CARD READ NOT \"A\" CARD,\n     C* SETON INDICATOR 20\n     C*\n     C   01                SETOF                     20\n     C   01      '       ' COMP PREVA                    20\n     C*\n     C* FOR \"A\" CARD, SAVE STUDENT ID IN PREVA\n     C*\n     C   01                MOVE IDENTA    PREVA   7\n     C*\n     C* FOR \"B\" CARD, IF MATCHES PREVIOUS \"A\" CARD,\n     C* SETON INDICATOR 21\n     C*\n     C   02                SETOF                     2021\n     C   02      IDENTA    COMP PREVA                    21\n     C*\n     C* IF THIS \"B\" MATCHES PREVIOUS \"A\" AND THE STUDENT\n     C* ID IS GREATER THAN LAST STUDENT ID ADDED,\n     C* SETON INDICATOR 20\n     C*\n     C   02 21   IDENTB    COMP KEYH                 20\n     C   02 20             MOVE IDENTB    KEYH    7\n     C*\n     C* CARD SET IS COMPLETE, COUNT AS ADDED RECORD\n     C*\n     C   02 20   ADDCNT    ADD  1         ADDCNT  30\n     C*\n     C* WHEN CARD \"B\" IS READ, RESET ID FROM PREVIOUS CARD \"A\"\n     C*\n     C   02                MOVE '       ' PREVA\n     OSTMASTR D        02 20\n     O                         B40      250\n     O                         Z5       210P\n     O                         Z5       207P\n     O                                  204 '000000'\n     O                         Z5       198P\n     O                                  195 '000000'\n     O                         Z5       189P\n     O                                  186 '000000'\n     O                         Z5       180P\n     O                                  177 '000000'\n     O                         Z5       171P\n     O                                  168 '000000'\n     O                         Z5       162P\n     O                                  159 '000000'\n     O                         Z5       153P\n     O                                  150 '000000'\n     O                         Z5       144P\n     O                                  141 '000000'\n     O                         MAJOR    135\n     O                         BDATE    132\n     O                         PHONE    124\n     O                         GENDER   114\n     O                         ADDR2    113\n     O                         ADDR1     78\n     O                         NAME      43\n     O                         IDENTB     8\n     O                                    1 'A'\n     OREPORT  H  201   1P\n     O       OR        OF\n     O                                   23 'CREATION'\n     O                                   15 'STUDENT MASTER '\n     O        D  1     02 20\n     O                         NAME      52\n     O                                   17 'ADDED: '\n     O                         IDENTB     9\n     O        D  1     02N20\n     O                                   51 'B CARD WITHOUT A CARD'\n     O                         IDENTB     9\n     O        D  1     01N20\n     O                                   51 'A CARD WITHOUT B CARD'\n     O                         IDENTA     9\n     O        T 31     LR\n     O                                   20 '\"A\" CARDS READ'\n     O                         CACNT Z    5\n     O        T  1     LR\n     O                                   20 '\"B\" CARDS READ'\n     O                         CBCNT Z    5\n     O        T  1     LR\n     O                                   19 'RECORDS ADDED'\n     O                         ADDCNTZ    5\n     O        T 31     LR\n     O                                   22 '*** END OF REPORT ***'\n./ ADD NAME=EX3$     8003-76050-76050-1447-00052-00051-00000-JAY01\n//EXAMPLE3 JOB (001),'RPG TUTORIAL 3',\n//             CLASS=A,MSGCLASS=A,REGION=512K\n//JOBCAT   DD  DSN=UCPUB001,DISP=SHR\n//***************************************************************\n//DEFINE   EXEC PGM=IDCAMS,REGION=4096K\n//SYSPRINT DD  SYSOUT=*\n//DD1      DD  DSN=STUDENT.KSDS,\n//             DISP=SHR,UNIT=3350,VOL=SER=PUB001\n//SYSIN    DD  *\n\n  /* DELETE KSDS CLUSTER                                    */\n\n  DELETE STUDENT.KSDS                                  -\n         CLUSTER FILE(DD1) PURGE\n\n  /* DEFINE KSDS CLUSTER                                    */\n\n  DEFINE CLUSTER (                                      -\n         NAME ( STUDENT.KSDS                          ) -\n         VOLUMES ( PUB001 )                             -\n         RECORDSIZE ( 250 250 ) /* AVG MAX */           -\n         RECORDS ( 500 100 )                            -\n         FREESPACE ( 25 30 )    /* CI CA */             -\n         KEYS ( 7 1 )           /* LEN POS */           -\n         INDEXED                                        -\n                  )                                     -\n         DATA (                                         -\n         NAME ( STUDENT.KSDS.DATA                     ) -\n              )                                         -\n         INDEX (                                        -\n         NAME ( STUDENT.KSDS.INDEX                    ) -\n               )\n/*\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX3)\n//GO.REPORT DD SYSOUT=*\n//GO.INCARDS DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX3D)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.STMASTR DD DSN=STUDENT.KSDS,DISP=MOD,AMP=(AMORG,'RECFM=F')\n//***************************************************************\n//PRINT    EXEC PGM=IDCAMS,REGION=4096K\n//SYSPRINT DD  SYSOUT=*\n//DD1      DD  DSN=STUDENT.KSDS,DISP=SHR\n//SYSIN    DD  *\n  PRINT INFILE(DD1) DUMP\n/*\n//\n./ ADD NAME=EX3D     8000-76050-76050-1406-00197-00197-00000-JAY01\nA 0025654SAMANTHA D. LABROIE                3023 SEASIDE AVENUE\nB 0025654WEST PALM BEACH      FL 33406      F561566137719390618BA\nA 0034591NELSON E. CHILDRESS                6323 ROSA LINDA STREET\nB 0034591FALLS VILLAGE        CT 06031      M203853895819140402MAT\nB 0038851ROANOAK              VA 24014      F540329282719440430PHS\nA 0040736ELIZABETH W. GLOVER                6117 MILLBROOK STREET\nB 0040736ROSWELL              GA 30075      F404544606019540907PHS\nA 0043415ROLAND D. JOHNSON                  185 VAN ZANDT PLACE\nB 0043415OKLAHOMA CITY        OK 73120      M405866617619281230CSC\nA 0054796MIKE T. RICHARDS                   258 WINDWOOD ROAD\nB 0054796ST. CLAIR            MI 48048      M313936088619460209CHE\nB 0063296ROCHESTER            NY 03840      M315131844019490831ART\nA 0072697HANNAH E. NORTON                   268 GRANT COURT\nB 0072697KEARNEY              NE 68848      F402970934019370104EDU\nA 0099174CINDY D. MCQUEEN                   8589 PECAN VALLEY STREET\nB 0099174BALDWIN              MO 63022      F417845642619350331ENG\nA 0118376THELMA B. SCHWAB                   9023 RIO VISTA STREET\nA 0120756SARAH V. MCKENZIE                  4292 SEABREEZE COURT\nB 0120756BOSTON               MA 02130      F617327380219510131EDU\nA 0136491LAURIE B. REED                     3022 GARRETT PLACE\nB 0136491AUSTIN               TX 78759      F512217767119120731PHS\nA 0139894SAMANTHA I. HASTINGS               8541 MICHIGAN STREET\nB 0139894SAN ANTONIO          TX 78216      F210749116219141125ART\nA 0141670RICHARD A. GARLAND                 1933 MILL MOUNTAIN AVENUE\nB 0141670SAN ANTONIO          TX 78216      M210331468419500609MAT\nA 0152570HEATHER J. HORTON                  1774 MILLBROOK AVENUE\nB 0152570FALLS VILLAGE        CT 06031      F203830803719700429CHE\nA 0166305HEATHER J. MORENO                  637 ELLIS AVENUE\nB 0166305RIVERSIDE            NJ 08370      F201936049319120731CHE\nA 0176560ARNOLD O. HILLFORD                 6786 MEADOW STREET\nB 0176560FALLS VILLAGE        CT 06031      M203795493619510131EDU\nA 0190433CINDY E. NOELKE                    936 WINDTREE CIRCLE\nB 0190433ANCHORAGE            AK 99508      F907101171419250623BIO\nA 0194091DEBRA A. NEWTON                    6701 SUN MEADOW CIRCLE\nB 0194091ANCHORAGE            AK 99508      F907726505319260318BA\nA 0202663RICHARD O. HAMMOND                 2300 EDMUND CIRCLE\nB 0202663HATTERAS             NC 27943      M919395398819130714ENG\nA 0208198JACK D. MEEHAN                     7174 COBBS STREET\nB 0208198OKLAHOMA CITY        OK 73120      M405683178719250815BA\nA 0223563KATHRYN I. SCHWAB                  788 TWILIGHT ROAD\nB 0223563KNOXVILLE            TN 37932      F901211505519460321CSC\nA 0243012DIANE G. NOELKE                    5460 ELLIS AVENUE\nB 0243012ANCHORAGE            AK 99508      F907844097419250623ART\nA 0243815JIM N. MEEHAN                      892 SAND CREEK STREET\nB 0243815BOISE                ID 83714      M208976331319440430PHS\nA 0244106JACOB T. WINSTON                   7563 LIVE OAK STREET\nB 0244106PHOENIX              AZ 85040      M602605906819281230ART\nA 0285887EVERETT K. VANACKER                160 COLISEUM STREET\nB 0285887SALT LAKE CITY       UT 84109      M801325183219350216CSC\nA 0289051ANN H. BURNETT                     644 PARKER ROAD\nB 0289051NEWPORT              RI 02840      F401839617119310904ENG\nA 0291088ERNIE S. CHILDRESS                 3921 HANOVER STREET\nB 0291088GREENVILLE           KY 42345      M602796366419471208EDU\nA 0297566LARRY H. ALAN                      538 VILLA PARK AVENUE\nB 0297566ST. CLAIR            MI 48048      M313723913919370905PE\nA 0306654CALVIN B. RODGERS                  916 DESERT STREET\nB 0306654FREMONT              CA 94538      M909773572919440520EDU\nA 0318326LOUISE L. PARKER                   345 ATOLL STREET\nB 0318326MINNEAPOLIS          MN 55437      F320271396519450204ART\nA 0322868JANET F. NORRIS                    8817 LINCOLN BLVD\nB 0322868BALDWIN              MO 63022      F417837136719180129CSC\nA 0331623LUCY B. LANDERS                    9830 LIVE OAK BLVD\nB 0331623FALLS VILLAGE        CT 06031      F203814999019250706CSC\nA 0342751MARILYN W. JACOBY                  440 TWILIGHT STREET\nB 0342751ALBUQUERQUE          NM 87108      F505688491019120731BA\nA 0356637KAREN A. TUCKER                    2123 MILL MOUNTAIN BLVD\nB 0356637ALBUQUERQUE          NM 87108      F505343053419390812MAT\nA 0358768EVERETT R. PARRISH                 773 SIERRA VISTA BLVD\nB 0358768SAN ANGELO           TX 76903      M915629380319141125ENG\nA 0365482BETTY J. NEWTON                    2349 SEASIDE AVENUE\nB 0365482SPARKS               NV 89431      F702865109619430608PHS\nA 0366869EVELYN C. LANDERS                  2078 COLISEUM STREET\nB 0366869BATON ROUGE          LA 70805      F318315600319440913CSC\nA 0371633HELEN C. BENSON                    6969 MILL MOUNTAIN AVENUE\nB 0371633DENTON               TX 76201      F817156393019680208PHS\nA 0395489JACK S. HASTINGS                   8646 BALBOA STREET\nB 0395489KANSAS CITY          MO 64118      M816792085919330314BIO\nA 0405326CALVIN B. BRYANT                   536 HORSESHOE CIRCLE\nB 0405326PHOENIX              AZ 85040      M602644000219430322BA\nA 0427620TED R. MCKAY                       777 STRAWBERRY STREET\nB 0427620RIVERSIDE            NJ 08370      M201809262519440520BA\nA 0464796LAURIE N. TEASDALE                 396 ROSEWOOD STREET\nB 0464796SAN ANTONIO          TX 78216      F210353006819161104CHE\nA 0466722TAMMY T. NEWBURY                   8255 ROSEWOOD STREET\nB 0466722ALBUQUERQUE          NM 87108      F505223881919390210CSC\nA 0467007LARRY W. WINSTON                   602 TAPPAN STREET\nB 0467007ATLANTA              GA 30305      M404244055319440430ART\nA 0478623KIMBERLY G. GLOVER                 7677 LIVE OAK PLACE\nB 0478623EUGENE               OR 97402      F541951445219460209MAT\nA 0487226CHARLES K. HALL                    264 LAKEFRONT BLVD\nB 0487226PHOENIX              AZ 85040      M602491155719620619EDU\nA 0552068TED D. MULL                        323 WESTRIDGE ROAD\nB 0552068LAGO VISTA           TX 78645      M512723905419221103BIO\nA 0555590CAITLIN I. MEEHAN                  211 GUADLAUPE ROAD\nB 0555590DENTON               TX 76201      F817806895919161104MAT\nA 0560806HOWARD B. HODGES                   9889 INDUSTRIAL STREET\nB 0560806ROCHESTER            NY 03840      M315836788019230810MAT\nA 0566030CYBIL M. CONLEY                    5786 FOREST ROAD\nB 0566030TAMPA                FL 33619      F813618619619320109PHS\nA 0574793WANDA I. LARUE                     730 LIVE OAK CIRCLE\nB 0574793CHARLOTTE            NC 28262      F704713043819410730CSC\nA 0575617RUSSELL S. ERICKSON                548 FOREST AVENUE\nB 0575617LA HABRA             CA 90631      M530108677919440520PE\nA 0591132ERNIE E. GLASSMAN                  908 WESTRIDGE ROAD\nB 0591132SAN ANGELO           TX 76903      M915981938019500609PE\nA 0597225JIM O. AUSTIN                      355 KOBERLIN STREET\nB 0597225GRAND RAPIDS         MN 55745      M218152100919220707BIO\nA 0610936BOB A. SCHAEFER                    9049 SAND CREEK AVENUE\nB 0610936PONCA CITY           OK 74603      M405189815719411003PHS\nA 0612082MARGUERITE K. HASTINGS             345 BIENVILLE STREET\nB 0612082ENGLEWOOD            CO 80112      F303463490819370104MAT\nA 0612533RONALD I. HODGES                   9037 DESERT STREET\nB 0612533KNOXVILLE            TN 37932      M901757278019310130CHE\nA 0625143ARNOLD W. PARRISH                  6374 BRIARGLEN STREET\nB 0625143DES PLAINES          IL 60018      M708562985119190206PE\nA 0637591EVERETT H. BURNETT                 230 HANOVER STREET\nB 0637591ROANOAK              VA 24014      M540122530519230810EDU\nA 0643686PETER H. HASTINGS                  186 TAPPAN PLACE\nB 0643686CHICAGO              IL 60611      M708282975719300531BA\nA 0647893SAMANTHA B. HORTON                 1389 ROBINHOOD STREET\nB 0647893JUNEAU               AK 99801      F907279340519251124BA\nA 0687119LARRY V. WEAVER                    3903 BRIGHT STREET\nB 0687119DOWNEY               CA 90302      M213711623619070929CHE\nA 0687191CALVIN D. LABROIE                  841 SHERIDAN CIRCLE\nB 0687191TAMPA                FL 33619      M813244295519280523PHS\nA 0700304MARGUERITE N. HILLFORD             1769 WILSHIRE ROAD\nB 0700304MIDLAND              TX 79702      F915209076519220416MAT\nA 0713816TED A. FRANKLIN                    2964 SHERWOOD STREET\nB 0713816PALM DESERT          CA 92211      M760165410419560709PE\nA 0717587DANIEL R. MCKAY                    869 MILL MOUNTAIN ROAD\nB 0717587TULSA                OK 74135      M918619489819180129BA\nA 0722338WILLIAM K. HALL                    318 WESTRIDGE ROAD\nB 0722338DENTON               TX 76201      M817568166619370706PHS\nA 0728987SHARON T. YAEGER                   1323 VILLA PARK STREET\nB 0728987DETROIT              MI 48205      F313594043719350826CHE\nA 0740764ZELDA E. MCKENZIE                  1351 BUCKLEY STREET\nB 0740764KANSAS CITY          MO 64118      F816436224919340217PE\nA 0748067EVERETT I. RAMSEY                  534 INDUSTRIAL AVENUE\nB 0748067PHOENIX              AZ 85040      M602939268219161104PE\nA 0748758JACOB K. PARKER                    1510 SUNSET COURT\nB 0748758SANTA FE             NM 87501      M505655987619310130BIO\nA 0755610TAMMY L. NORRIS                    658 BRIARGLEN ROAD\nB 0755610WASHINGTON           DC 20009      F202974608819440430EDU\nA 0757139JOAN L. GARLAND                    9268 HEDGEWOOD COURT\nB 0757139SPRING               TX 77373      F281285951019540907BIO\nA 0766116RONALD M. GARLAND                  514 HILLSIDE ROAD\nB 0766116OKLAHOMA CITY        OK 73120      M405948446719330314ART\nA 0778839JOHN J. JACKSON                    932 BURWELL CIRCLE\nB 0778839BRIDGEPORT           CT 06605      M860856694319161209BIO\nA 0790544THELMA I. RODGERS                  8625 HILLSIDE PLACE\nB 0790544SAN ANGELO           TX 76903      F915601388519241202BIO\nA 0791357LOUISE W. HARMON                   7886 ATOLL STREET\nB 0791357JUNEAU               AK 99801      F907779756519220622BA\nA 0793297LARRY C. GERBLICK                  455 KINGS RIDGE ROAD\nB 0793297SAN FRANCISCO        CA 94105      M415385026619540907EDU\nA 0793617CLIFF N. WHITE                     8002 BRIARGLEN CIRCLE\nB 0793617ANNAPOLIS            MD 21402      M410844307519320109BIO\nA 0809327RUTH H. FRANKLIN                   347 WHITE SANDY COURT\nB 0809327PRESCOTT             AZ 86314      F520220720519471208MAT\nA 0822928DAWN I. FITZGERALD                 661 RIVER OAKS BLVD\nB 0822928ST. CLAIR            MI 48048      F313803464919540907CSC\nA 0825790LOUIS E. AUSTIN                    906 CARBONDALE COURT\nB 0825790KNOXVILLE            TN 37932      M901721385519240916PHS\nA 0836832BRENDA F. TUCKER                   605 ROSEWOOD CIRCLE\nB 0836832ALBUQUERQUE          NM 87108      F505822369719130115CSC\nA 0853058CINDY O. MCKAY                     984 PARKWAY STREET\nB 0853058BINGHAMTON           NY 11704      F315181899019230526MAT\nA 0853466CLARA T. MORENO                    3204 CARBONDALE PLACE\nB 0853466TULSA                OK 74135      F918286516619351221CSC\nA 0857212VIRGINIA A. PETERSON               7414 MEADOW CIRCLE\nB 0857212DENVER               CO 80256      F303762015319250706MAT\nA 0858241PATTY S. VANACKER                  205 STRAWBERRY ROAD\nB 0858241ROANOAK              VA 24014      F540594920619081120EDU\nA 0881002ROLAND F. BRYANT                   527 HILLSIDE STREET\nB 0881002DENTON               TX 76201      M817122555619411003MAT\nA 0888561ERNIE A. HALL                      369 GUADLAUPE CIRCLE\nB 0888561LOUISVILLE           KY 40207      M502712639719580615CHE\nA 0892174BETTY P. DRAKE                     7925 BRIARGLEN CIRCLE\nB 0892174ALBANY               NY 12206      F518436247719220622CSC\nA 0928546JOSEPH R. SMITH                    7615 ATOLL PLACE\nB 0928546TAMPA                FL 33619      M813954200419750222CHE\nA 0935786ROBERT I. BARBER                   925 PARKER BLVD\nB 0935786DENTON               TX 76201      M817842196219510131PHS\nA 0965296YOLANDA C. LARUE                   818 MILL MOUNTAIN BLVD\nB 0965296VALPARAISO           IN 46383      F765813447819270301BIO\nA 0967407JANET V. TEASDALE                  456 HEDGEWOOD CIRCLE\nB 0967407CHICAGO              IL 60611      F708976195319270301PHS\nA 0967791LUCY I. POWERS                     1146 BUCKLEY ROAD\nB 0967791ALBUQUERQUE          NM 87108      F505107437819491128EDU\nA 0968791BEVERLY L. RICHARDS                8040 SHORE CIRCLE\nB 0968791TULSA                OK 74135      F918839057119450204PHS\nA 0970626JILL K. JENNINGS                   6941 SOUTHLAND STREET\nB 0970626COLUMBUS             GA 31997      F912212539519081120MAT\nA 0979347TOM T. COOK                        829 PARSON CIRCLE\nB 0979347MISSOULA             MT 59802      M406243461319470906EDU\nA 0982436JOSEPH H. THATCHER                 246 WILSHIRE STREET\nB 0982436JUNEAU               AK 99801      M907303834119310904EDU\n./ ADD NAME=EX4      8000-76050-76050-1424-00078-00078-00000-JAY01\n     H\n     H*\n     H* UPDATE STUDENT MASTER WITH ENROLLED COURSES\n     H*\n     FCOURSES IPE F6300  63           ETAPE         S\n     FSTMASTR UC  F 250 250R 7KI     2 DISK14       S\n     FREPORT  O   F 132 132     OF    LPRINTER\n     EAAC1COURSES STMASTR\n     LREPORT    101 6012\n     ICOURSES AA  01\n     I                                        1   7 IDENT   C1\n     I                                        9  14 CN1\n     I                                        9  140CN1N            11\n     I                                       16  21 CN2\n     I                                       16  210CN2N            12\n     I                                       23  28 CN3\n     I                                       23  280CN3N            13\n     I                                       30  35 CN4\n     I                                       30  350CN4N            14\n     I                                       37  42 CN5\n     I                                       37  420CN5N            15\n     I                                       44  49 CN6\n     I                                       44  490CN6N            16\n     I                                       51  56 CN7\n     I                                       51  560CN7N            17\n     I                                       58  63 CN8\n     I                                       58  630CN8N            18\n     ISTMASTR BB  02\n     I                                        9  43 NAME\n     C*\n     C* IF INDICATORS H0 AND 01 ARE ON, BUT 02 IS OFF, THEN\n     C* NO STUDENT MASTER RECORD WAS READ DURING THE CHAINING\n     C* OPERATION.  H0 IS AUTOMATICALLY SET ON WHEN THIS\n     C* OCCURS, SO IT WILL NEED TO BE SET OFF TO AVOID AN\n     C* ABNORMAL TERMINATION OF THE PROGRAM.\n     C*\n     C   01N02 H0          SETOF                     H0\n     C*\n     C* COUNT RECORDS PROCESSED FOR SUMMARY AT END OF REPORT\n     C*\n     C   01      CCOUNT    ADD  1         CCOUNT  30\n     C   01 02   UCOUNT    ADD  1         UCOUNT  30\n     OSTMASTR D        01 02\n     O                         CN8      204\n     O                         CN7      195\n     O                         CN6      186\n     O                         CN5      177\n     O                         CN4      168\n     O                         CN3      159\n     O                         CN2      150\n     O                         CN1      141\n     OREPORT  H  201   1P\n     O       OR        OF\n     O                                   45 'STUDENT MASTER'\n     O                                   30 'COURSES TO'\n     O                                   19 'POST REGISTERED'\n     O        D  1     01\n     O                N14      CN4N      87 '0  -   - '\n     O                N13      CN3N      77 '0  -   - '\n     O                N12      CN2N      67 '0  -   - '\n     O                N11      CN1N      57 '0  -   - '\n     O                 02      NAME      47\n     O                N02                38 'MASTER ***'\n     O                N02                27 '*** NO MATCHING'\n     O                         IDENT     11\n     O        D  2     01\n     O                N18      CN8N      87 '0  -   - '\n     O                N17      CN7N      77 '0  -   - '\n     O                N16      CN6N      67 '0  -   - '\n     O                N15      CN5N      57 '0  -   - '\n     O        T 31     LR\n     O                         CCOUNTZ    7\n     O                                   27 'COURSE REGISTRATION'\n     O                                   40 'RECORDS READ'\n     O        T  1     LR\n     O                         UCOUNTZ    7\n     O                                   22 'STUDENT MASTER'\n     O                                   38 'RECORDS UPDATED'\n./ ADD NAME=EX4$     8002-76050-76050-1445-00026-00015-00000-JAY01\n//EXAMPLE4 JOB (001),'RPG TUTORIAL 4',\n//             CLASS=A,MSGLEVEL=(1,1),REGION=1024K\n//JOBCAT   DD  DSN=UCPUB001,DISP=SHR\n//***************************************************************\n//GENER    EXEC PGM=IEBGENER,REGION=128K\n//SYSUT1   DD  DISP=SHR,DSN=JAY01.RPG.TUTOR(EX4D)\n//SYSUT2   DD  DSN=REG.DATA,DISP=(NEW,PASS),UNIT=(TAPE,,DEFER),\n//             VOL=SER=RPGET2,LABEL=(1,SL),\n//             DCB=(RECFM=FB,LRECL=63,BLKSIZE=6300)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n  GENERATE MAXFLDS=1\n  RECORD FIELD=(63,1,,1)\n/*\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD  UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX4)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.STMASTR DD DSN=STUDENT.KSDS,DISP=MOD,AMP=(AMORG,'RECFM=F')\n//GO.COURSES DD DSN=REG.DATA,DISP=OLD,UNIT=TAPE,VOL=SER=RPGET2\n//GO.REPORT  DD SYSOUT=*\n//\n./ ADD NAME=EX4D     8000-76050-76050-1424-00100-00100-00000-JAY01\n0625143 011003 022102 032001 101101 101102 000000 000000 000000\n0043415 011501 131011 131012 132011 000000 000000 000000 000000\n0857212 011501 121001 121002 121003 000000 000000 000000 000000\n0791357 011001 031002 041503 051504 000000 000000 000000 000000\n0427620 011001 031002 041503 051504 000000 000000 000000 000000\n0713816 011003 022102 032001 101101 101102 000000 000000 000000\n0979347 011001 022002 031003 041504 000000 000000 000000 000000\n0935786 141401 141402 141403 000000 000000 000000 000000 000000\n0748067 011501 022311 032002 101101 101102 101103 000000 000000\n0687119 041501 041502 041503 000000 000000 000000 000000 000000\n0825790 141401 141402 141403 000000 000000 000000 000000 000000\n0809327 011002 031003 041504 121001 000000 000000 000000 000000\n0612533 011002 031003 041501 051504 000000 000000 000000 000000\n0591132 011501 022311 032002 101101 101102 101103 000000 000000\n0118376 141401 141402 141403 000000 000000 000000 000000 000000\n0643686 011501 022001 022002 022101 000000 000000 000000 000000\n0040736 141401 141402 141403 000000 000000 000000 000000 000000\n0285887 011501 131011 131012 132011 000000 000000 000000 000000\n0243012 011001 011002 011003 011501 000000 000000 000000 000000\n0223563 011003 022102 131011 131012 000000 000000 000000 000000\n0487226 011501 083011 083012 083013 000000 000000 000000 000000\n0968791 011003 022102 141401 141402 000000 000000 000000 000000\n0881002 011003 022102 121001 121002 000000 000000 000000 000000\n0072697 011001 031002 041503 051504 000000 000000 000000 000000\n0141670 011501 121001 121002 121003 000000 000000 000000 000000\n0342751 011003 022001 022002 031004 000000 000000 000000 000000\n0063296 011001 011002 022101 031004 000000 000000 000000 000000\n0552068 031001 031002 031003 000000 000000 000000 000000 000000\n0566030 011003 022102 141401 141402 000000 000000 000000 000000\n0306654 083011 083012 083013 083031 000000 000000 000000 000000\n0597225 011002 031001 041503 051504 000000 000000 000000 000000\n0405326 011003 022001 022002 031004 000000 000000 000000 000000\n0928546 041501 041502 041503 000000 000000 000000 000000 000000\n0244106 011001 031002 041503 051504 000000 000000 000000 000000\n0574793 131011 131012 132011 132012 000000 000000 000000 000000\n0717587 022001 022002 022101 022102 000000 000000 000000 000000\n0965296 011002 031001 041503 051504 000000 000000 000000 000000\n0892174 131011 131012 132011 132012 000000 000000 000000 000000\n0637591 011501 083011 083012 083013 000000 000000 000000 000000\n0766116 011001 031002 041503 051504 000000 000000 000000 000000\n0478623 011003 022102 121001 121002 000000 000000 000000 000000\n0970626 011003 022102 121001 121002 000000 000000 000000 000000\n0291088 011001 031002 041503 051504 000000 000000 000000 000000\n0136491 141401 141402 141403 000000 000000 000000 000000 000000\n0034591 011003 022102 121001 121002 000000 000000 000000 000000\n0822928 011501 131011 131012 132011 000000 000000 000000 000000\n0700304 011003 022102 121001 121002 000000 000000 000000 000000\n0038851 011003 022102 141401 141402 000000 000000 000000 000000\n0740764 011003 022102 032001 101101 101102 000000 000000 000000\n0371633 011003 022102 141401 141402 000000 000000 000000 000000\n0395489 031001 031002 031003 000000 000000 000000 000000 000000\n0793297 011001 031002 041503 051504 000000 000000 000000 000000\n0612082 121001 121002 121003 121051 000000 000000 000000 000000\n0176560 011501 083011 083012 083013 000000 000000 000000 000000\n0365482 011003 022102 141401 141402 000000 000000 000000 000000\n0120756 011001 031002 041503 051504 000000 000000 000000 000000\n0139894 011001 011002 011003 022102 000000 000000 000000 000000\n0647893 011003 022001 022002 031004 000000 000000 000000 000000\n0054796 011002 031003 041501 051504 000000 000000 000000 000000\n0610936 141401 141402 141403 000000 000000 000000 000000 000000\n0331623 011501 131011 131012 132011 000000 000000 000000 000000\n0243815 011003 022102 141401 141402 000000 000000 000000 000000\n0888561 041501 041502 041503 000000 000000 000000 000000 000000\n0790544 011003 022102 031001 031002 000000 000000 000000 000000\n0464796 011002 031003 041501 051504 000000 000000 000000 000000\n0722338 011002 031003 041504 141401 000000 000000 000000 000000\n0982436 011001 022002 031003 041504 000000 000000 000000 000000\n0099174 011501 091011 091012 091021 000000 000000 000000 000000\n0208198 011501 022001 022002 022101 000000 000000 000000 000000\n0728987 011002 031003 041501 051504 000000 000000 000000 000000\n0836832 131011 131012 132011 132012 000000 000000 000000 000000\n0190433 031001 031002 031003 000000 000000 000000 000000 000000\n0202663 011002 031003 041504 091011 000000 000000 000000 000000\n0687191 141401 141402 141403 000000 000000 000000 000000 000000\n0366869 011002 031003 041504 131011 000000 000000 000000 000000\n0358768 091011 091012 091021 091022 000000 000000 000000 000000\n0778839 031001 031002 031003 000000 000000 000000 000000 000000\n0967407 141401 141402 141403 000000 000000 000000 000000 000000\n0757139 031001 031002 031003 000000 000000 000000 000000 000000\n0560806 121001 121002 121003 121051 000000 000000 000000 000000\n0322868 131011 131012 132011 132012 000000 000000 000000 000000\n0318326 011001 031002 041503 051504 000000 000000 000000 000000\n0853466 011002 031003 041504 131011 000000 000000 000000 000000\n0466722 131011 131012 132011 132012 000000 000000 000000 000000\n0755610 011001 031002 041503 051504 000000 000000 000000 000000\n0967791 011001 031002 041503 051504 000000 000000 000000 000000\n0297566 011002 031003 041504 101101 000000 000000 000000 000000\n0748758 031001 031002 031003 000000 000000 000000 000000 000000\n0166305 011002 031003 041501 051504 000000 000000 000000 000000\n0853058 121001 121002 121003 121051 000000 000000 000000 000000\n0793617 011002 031001 041503 051504 000000 000000 000000 000000\n0025654 011001 031002 041503 051504 000000 000000 000000 000000\n0356637 011002 031003 041504 121001 000000 000000 000000 000000\n0858241 083011 083012 083013 083031 000000 000000 000000 000000\n0194091 011001 031002 041503 051504 000000 000000 000000 000000\n0575617 011002 031003 041504 101101 000000 000000 000000 000000\n0555590 011002 031003 041504 121001 000000 000000 000000 000000\n0152570 011002 031003 041501 051504 000000 000000 000000 000000\n0289051 011002 031003 041504 091011 000000 000000 000000 000000\n0467007 011001 031002 041503 051504 000000 000000 000000 000000\n./ ADD NAME=EX5      8000-76050-76050-1451-00090-00090-00000-JAY01\n     H\n     H*\n     H* BUILD FILE TO PRODUCE CLASS ROSTER REPORT\n     H*\n     FSTMASTR IPE F 250 250  7KI     2 DISK14       S\n     FROSTER  O   F4800  48            DISK14       S\n     FREPORT  O   F 132 132           LPRINTER\n     LREPORT    101 6012\n     ISTMASTR AA  01   1 CA\n     I       OR   02   1NCA\n     I                                        2   8 IDENT\n     I                                        9  43 NAME\n     I                                      136 1410CN1N            11\n     I                                      136 141 CN1\n     I                                      145 1500CN2N            12\n     I                                      145 150 CN2\n     I                                      154 1590CN3N            13\n     I                                      154 159 CN3\n     I                                      163 1680CN4N            14\n     I                                      163 168 CN4\n     I                                      172 1770CN5N            15\n     I                                      172 177 CN5\n     I                                      181 1860CN6N            16\n     I                                      181 186 CN6\n     I                                      190 1950CN7N            17\n     I                                      190 195 CN7\n     I                                      199 2040CN8N            18\n     I                                      199 204 CN8\n     C*\n     C* CALL ASSEMBLER SUBROUTINE TO BUILD SORT NAME\n     C*\n     C   01                MOVE ' '       SNAME  35\n     C   01                EXIT EX5SUB\n     C                     RLABL          NAME   35\n     C                     ULABL          SNAME  35\n     C*\n     C* COUNT STUDENT RECORDS AND RECORDS WRITTEN\n     C*\n     C   01      STCNT     ADD  1         STCNT   30\n     C   01N11   OUTCNT    ADD  1         OUTCNT  30\n     C   01N12   OUTCNT    ADD  1         OUTCNT\n     C   01N13   OUTCNT    ADD  1         OUTCNT\n     C   01N14   OUTCNT    ADD  1         OUTCNT\n     C   01N15   OUTCNT    ADD  1         OUTCNT\n     C   01N16   OUTCNT    ADD  1         OUTCNT\n     C   01N17   OUTCNT    ADD  1         OUTCNT\n     C   01N18   OUTCNT    ADD  1         OUTCNT\n     OROSTER  D        01N11\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN1        6\n     O        D        01N12\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN2        6\n     O        D        01N13\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN3        6\n     O        D        01N14\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN4        6\n     O        D        01N15\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN5        6\n     O        D        01N16\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN6        6\n     O        D        01N17\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN7        6\n     O        D        01N18\n     O                         SNAME     48\n     O                         IDENT     13\n     O                         CN8        6\n     OREPORT  H  201   1P\n     O                                   33 'RECORD EXTRACT'\n     O                                   19 'COURSE ROSTER '\n     O        T 32     LR\n     O                         STCNT Z    7\n     O                                   24 'STUDENT RECORDS '\n     O                                   28 'READ'\n     O        T  1     LR\n     O                         OUTCNTZ    7\n     O                                   23 'ROSTER RECORDS '\n     O                                   30 'WRITTEN'\n./ ADD NAME=EX5$     8002-76050-76050-1455-00039-00037-00000-JAY01\n//EXAMPLE5 JOB (001),'RPG TUTORIAL 5',\n//             CLASS=A,MSGCLASS=A,REGION=1024K\n//JOBCAT   DD  DSN=UCPUB001,DISP=SHR\n//***************************************************************\n//ASMFC    EXEC ASMFC,PARM.ASM='LIST,LOAD,NODECK,NOXREF'\n//ASM.SYSUT1 DD UNIT=SYSDA\n//ASM.SYSUT2 DD UNIT=SYSDA\n//ASM.SYSUT3 DD UNIT=SYSDA\n//ASM.SYSGO  DD DSN=&&ALCOBJ,DISP=(NEW,PASS),\n//             UNIT=SYSDA,SPACE=(TRK,(9,9),RLSE)\n//ASM.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX5A)\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD  UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX5)\n//LKED.SYSIN  DD *\n  INCLUDE ALCMOD\n/*\n//LKED.ALCMOD DD DSN=&&ALCOBJ,DISP=OLD\n//LKED.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//GO.SYSUDUMP DD SYSOUT=A\n//GO.STMASTR DD DSN=STUDENT.KSDS,DISP=SHR,AMP=(AMORG,'RECFM=F')\n//GO.ROSTER  DD DSN=CLASS.ROSTER,DISP=(NEW,KEEP),\n//             UNIT=2314,VOL=SER=PUB002,\n//             SPACE=(CYL,(2,2),RLSE)\n//GO.REPORT  DD SYSOUT=A\n//***************************************************************\n//IEBPTPCH EXEC PGM=IEBPTPCH,REGION=128K\n//SYSIN    DD  *\n  PRINT MAXFLDS=1\n  RECORD FIELD=(48)\n/*\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=CLASS.ROSTER,UNIT=2314,VOL=SER=PUB002,DISP=OLD\n//SYSUT2   DD  SYSOUT=*\n//\n./ ADD NAME=EX5A     8000-76050-76050-1450-00106-00106-00000-JAY01\n         TITLE 'EXAMPLE5 - BUILD SORT NAME FOR RPG MAIN PROGRAM'\n* ******************************************************************* *\n* ******************************************************************* *\n*                                                                     *\n* THIS SUBROUTINE SCANS A NAME FIELD PASSED TO IT BY THE CALLING      *\n* RPG MAIN PROGRAM - THE FORMAT OF THE FIELD PASSED IS ASSUMED TO     *\n* BE: FIRST I. LAST - AND REVERSES THE ORDER OF THE FIELD ELEMENTS    *\n* TO CONSTRUCT A NAME SUITABLE FOR SORTING IN ORDER TO PLACE THE      *\n* NAME INTO ALPHABETICAL SEQUENCE ON THE SURNAME (LAST) PORTION OF    *\n* THE FIELD - LAST, FIRST I                                           *\n*                                                                     *\n* NO VERIFICATION OF THE FIELD IS PERFORMED BY THIS ROUTINE SINCE     *\n* THIS IS INTENDED AS AN ILLUSTRATION OF CALLING A SUBROUTINE BY AN   *\n* RPG PROGRAM                                                         *\n*                                                                     *\n* THE CALLING PROGRAM SHOULD USE THE FOLLOWING SYNTAX:                *\n*                                                                     *\n*     .-OPERATION   .-FACTOR 2   .-RESULT   .-LENGTH                  *\n*     EXIT          EX5SUB                                            *\n*     RLABL                      FULLNAME   35                        *\n*     ULABL                      SORTNAME   35                        *\n*                                                                     *\n* ******************************************************************* *\n* ******************************************************************* *\n*\nEX5SUB   CSECT\n*\n         ENTRY SNAME                   MAKE SNAME VISABLE TO RPG\n*\n         PRINT NOGEN\n         SAVE  (14,12)                 SAVE CALLER'S REGISTERS\n*\n         BALR  R12,0                   ESTABLISH BASE REGISTER\n         USING *,R12                   ASSUME BASE REGISTER\n*\n         L     R10,=V(NAME)            LOAD ADDRESS OF RPG FIELD\n*\n         LA    R3,34(,R10)             STARTING AT END OF NAME\n*\nLOOP1    CLI   0(R3),C' '              LOOK FOR NON-BLANK\n         BNE   CONT1                   FOUND, NEXT STEP\n         BCT   R3,LOOP1                CONTINUE LOOPING\n*\nCONT1    LA    R4,1(,R3)               A(LAST NAME ENDS)\n*\nLOOP2    CLI   0(R3),C' '              LOOKING FOR BLANK\n         BE    CONT2                   FOUND, NEXT STEP\n         BCT   R3,LOOP2                CONTINUE LOOPING\n*\nCONT2    LA    R5,1(,R3)               A(LAST NAME BEGINS)\n*\nLOOP3    CLI   0(R3),C'.'              LOOKING FOR PERIOD\n         BE    CONT3                   FOUND, NEXT STEP\n         BCT   R3,LOOP3                CONTINUE LOOPING\n*\nCONT3    BCTR  R3,0                    MOVE BEYOND PERIOD\n         LR    R6,R3                   A(INITIAL)\n*\n         MVI   SNAME,C' '              CLEAR OUTPUT FIELD\n         MVC   SNAME+1(L'SNAME-1),SNAME  TO SPACES\n*\n         LR    R1,R4                   A(LAST NAME END)\n         SR    R1,R5                   SUBTRACT A(LAST NAME BEG)\n         EX    R1,MOVELAST             MOVE LAST NAME\nMOVELAST MVC   SNAME(*-*),0(R5)        ** EXECUTED **\n*\n         LA    R11,SNAME(R1)           A(TO PLACE COMMA)\n         MVI   0(R11),C','             INSERT COMMA\n         LA    R11,2(,R11)             INCREASE FOR COMMA + SPACE\n*\n         LR    R1,R6                   A(INITIAL)\n         SR    R1,R10                  SUBTRACT A(NAME BEG)\n         EX    R1,MOVEREST             MOVE FIRST/INITIAL\nMOVEREST MVC   0(*-*,R11),0(R10)       ** EXECUTED **\n*\n*    RETURN TO CALLER WITH ZERO RETURN CODE\n*\n         RETURN (14,12),RC=0\n*\n* ******************************************************************* *\n* *************************** VARIABLES ***************************** *\n* ******************************************************************* *\n*\nSNAME    DS    CL35                    CONTAINER FOR SORT NAME\n         LTORG\n         EJECT\n* ******************************************************************* *\n* ***************************** EQUATES ***************************** *\n* ******************************************************************* *\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n./ ADD NAME=EX6      8000-76050-76050-1516-00109-00109-00000-JAY01\n     H                                                                    EXAMP6\n     H*\n     H* PRINT CLASS ROLL AND ENROLLMENT REPORTS\n     H*\n     FROSTER  IPE F4800  48            DISK14       S\n     FTABLE1  IT  F 800  80           EDISK14       S\n     FTABLE2  IT  F 800  80           EDISK14       S\n     FTABLE3  IT  F 800  80           EDISK14       S\n     FREPORT1 O   F1320 132     OF    LPRINTER\n     FREPORT2 O   F1320 132     OV    LPRINTER\n     E    TABLE1          TABDNR  1  50  2 0ATABDNA 40\n     E    TABLE2          TABCNR  1 125  5 0ATABCNA 51\n     E    TABLE3          TABSNR  1 250  6 0ATABSNA 20\n     LREPORT1   101 6012\n     LREPORT2   101 6012\n     IROSTER  AA  01\n     I                                        1   20DEPT  L3\n     I                                        3   50COURSEL2\n     I                                        1   50CTK\n     I                                        6   60SECT  L1\n     I                                        1   60STK\n     I                                        7  13 STUID\n     I                                       14  48 NAME\n     C*\n     C* COUNT STUDENTS ENROLLED IN A SECTION\n     C* (THIS COUNT IS USED IN PRINTING THE CLASS ROLL)\n     C*\n     C   01      STCNTR    ADD  1         STCNTR  40\n     C*\n     C* WHEN A LEVEL BREAK OCCURS, LOOK UP THE DEPARTMENT,\n     C* COURSE, AND SECTION IN THE APPROPRIATE TABLE TO\n     C* MAKE THE CORRESPONDING TEXT AVAILABLE FOR OUTPUT\n     C*\n     C   L1      STK       LOKUPTABSNR    TABSNA 20      31\n     C   L2      CTK       LOKUPTABCNR    TABCNA 51      32\n     C   L3      DEPT      LOKUPTABDNR    TABDNA 40      33\n     C*\n     C* BECAUSE THE COURSE NAME CONTAINS THE CREDIT HOURS IN\n     C* THE RIGHTMOST POSITION OF THE FIELD, IF THE TABLE\n     C* LOOKUP WAS SUCCESSFUL, MOVE THE NAME TO A WORK FIELD\n     C* TO TRUNCATE THE HOURS\n     C*\n     C   L2 32             MOVELTABCNA    CRSNAM 50\n     C*\n     C* COUNT STUDENTS ENROLLED IN A SECTION\n     C* (THIS COUNT IS USED IN PRINTING THE ENROLLMENT REPORT)\n     C*\n     C   01      STCNT     ADD  1         STCNT   40\n     C*\n     C* WHEN A LEVEL BREAK HAS OCCURRED, \"ROLL UP\" THE LOWER\n     C* LEVEL COUNT INTO THE NEXT HIGHER LEVEL COUNTER\n     C* (THESE COUNTS ARE USED IN PRINTING THE ENROLLMENT REPORT)\n     C*\n     CL1         STCNT2    ADD  STCNT     STCNT2  40\n     CL2         STCNT3    ADD  STCNT2    STCNT3  40\n     OREPORT1 H  101   1P\n     O       OR        OF\n     O                         PAGE  Z   72\n     O                                   68 'PAGE'\n     O                                   43 'ENROLLMENT REPORT'\n     O                         UDATE      8 '0 /  /  '\n     O        H 11     L3\n     O                 33      TABDNA    55\n     O                N33                32 '*** NOT FOUND ***'\n     O                         DEPT  Z   14\n     O                                   11 'DEPARTMENT:'\n     O        H 12     L2\n     O                 32      CRSNAM    65\n     O                N32                32 '*** NOT FOUND ***'\n     O                         COURSEZ   14\n     O                                   10 'COURSE:'\n     O        T  1     L1\n     O                         STCNT  B  63 ' ,  0*'\n     O                 31      TABSNA    37\n     O                N31                34 '*** NOT FOUND ***'\n     O                         SECT  Z   16\n     O                                   14 'SECTION:'\n     O        T 11     L2\n     O                                   20 'COURSE ENROLLMENT'\n     O                         STCNT2 B  64 ' ,  0**'\n     O        T 11     L3\n     O                                   21 'DEPARTMENT ENROLLMENT'\n     O                         STCNT3 B  65 ' ,  0***'\n     OREPORT2 H  101   L1\n     O       OR        OV\n     O                                   36 'CLASS ROLL'\n     O                         UDATE      8 '0 /  /  '\n     O        H 11     L1\n     O                 31      TABDNA    55\n     O                N31                32 '*** NOT FOUND ***'\n     O                         DEPT  Z   14\n     O                                   11 'DEPARTMENT:'\n     O        H 11     L1\n     O                 32      CRSNAM    65\n     O                N32                32 '*** NOT FOUND ***'\n     O                         COURSEZ   14\n     O                                   10 'COURSE:'\n     O        H 12     L1\n     O                 33      TABSNA    37\n     O                N33                34 '*** NOT FOUND ***'\n     O                         SECT  Z   16\n     O                                   14 'SECTION:'\n     O        D  1     01\n     O                         STUID     16\n     O                         NAME      60\n     O        T 31     L1\n     O                         STCNTR B  63 ' ,  0*'\n     O                                   34 'STUDENTS ENROLLED:'\n     O                                   15 'NUMBER OF'\n./ ADD NAME=EX6$     8002-76050-76050-1522-00058-00058-00000-JAY01\n//EXAMPLE6 JOB (001),'RPG TUTORIAL 6',\n//             CLASS=A,MSGCLASS=A,REGION=512K\n//JOBCAT   DD  DSN=UCPUB001,DISP=SHR\n//***************************************************************\n//SORTD   EXEC PGM=IERRCO00,PARM='MSG=AP'\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTWK01 DD UNIT=2314,VOL=SER=PUB002,SPACE=(CYL,3)\n//SORTWK02 DD UNIT=2314,VOL=SER=PUB002,SPACE=(CYL,3)\n//SORTWK03 DD UNIT=2314,VOL=SER=PUB002,SPACE=(CYL,3)\n//SYSOUT   DD SYSOUT=*\n//SORTIN   DD DSN=CLASS.ROSTER,UNIT=2314,VOL=SER=PUB002,DISP=OLD\n//SORTOUT  DD DSN=&&SROSTER,DISP=(NEW,PASS),\n//            UNIT=2314,VOL=SER=PUB002,SPACE=(TRK,(9,9),RLSE),\n//            DCB=(RECFM=FB,LRECL=48,BLKSIZE=4800)\n//SYSIN    DD *\n  SORT FIELDS=(1,6,A,14,35,A),FORMAT=CH\n  RECORD TYPE=F,LENGTH=48\n  END\n/*\n//***************************************************************\n//COPY1   EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX6D1)\n//SYSUT2   DD DSN=&&TABLE1,DISP=(NEW,PASS),\n//            UNIT=2314,VOL=SER=PUB002,SPACE=(TRK,(9,9),RLSE),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)\n//***************************************************************\n//COPY2   EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX6D2)\n//SYSUT2   DD DSN=&&TABLE2,DISP=(NEW,PASS),\n//            UNIT=2314,VOL=SER=PUB002,SPACE=(TRK,(9,9),RLSE),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)\n//***************************************************************\n//COPY3   EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX6D3)\n//SYSUT2   DD DSN=&&TABLE3,DISP=(NEW,PASS),\n//            UNIT=2314,VOL=SER=PUB002,SPACE=(TRK,(9,9),RLSE),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD  UNIT=SYSDA\n//RPG.SYSIN DD  DISP=SHR,DSN=JAY01.RPG.TUTOR(EX6)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.ROSTER  DD DSN=&&SROSTER,DISP=(OLD,DELETE)\n//GO.TABLE1  DD DSN=&&TABLE1,DISP=(OLD,DELETE)\n//GO.TABLE2  DD DSN=&&TABLE2,DISP=(OLD,DELETE)\n//GO.TABLE3  DD DSN=&&TABLE3,DISP=(OLD,DELETE)\n//GO.REPORT1 DD SYSOUT=*\n//GO.REPORT2 DD SYSOUT=*\n//\n./ ADD NAME=EX6D1    8000-76050-76050-1516-00014-00014-00000-JAY01\n01ART\n02BUSINESS\n03BIOLOGY\n04CHEMESTRY\n05ECONOMICS\n06ACCOUNTING\n07FINANCE\n08EDUCATION\n09ENGLISH\n10PHYSICAL EDUCATION\n11HISTORY\n12MATHEMATICS\n13COMPUTER SCIENCE\n14PHYSICS\n./ ADD NAME=EX6D2    8000-76050-76050-1516-00114-00114-00000-JAY01\n01100ART APPRECIATION                                  3\n01150SCULPTURE I                                       3\n01201INTRODUCTION TO THE HISTORY OF WESTERN ART I      3\n01202INTRODUCTION TO THE HISTORY OF WESTERN ART II     3\n01284INTERIOR DESIGN: COLOR AND LIGHT                  3\n01285HISTORY OF ARCHITECTURE AND INTERIOR DESIGN       3\n01302MEDIEVAL ART                                      3\n01307ART HISTORY TRAVEL                                6\n01370PAINTING III                                      3\n01450SCULPTURE IV                                      3\n02200INTRODUCTION TO BUSINESS                          3\n02210BUSINESS COMMUNICATION                            3\n02231MANAGEMENT                                        3\n02241INTRODUCTION TO MARKETING                         3\n02242CONSUMER BEHAVIOR                                 3\n02341INTERNATIONAL BUSINESS                            3\n02342MARKETING RESEARCH                                3\n03100GENERAL BIOLOGY                                   4\n03200INTRODUCTION TO HUMAN GENETICS                    4\n03201CELL BIOLOGY                                      4\n03210HUMAN ANATOMY                                     4\n03250HORTICULTURAL BOTANY                              4\n03260INTRODUCTION TO HUMAN BIOLOGY                     4\n03305COMPARATIVE CHORDATE ANATOMY                      4\n03312MICROBIOLOGY                                      4\n03408MOLECULAR BIOLOGY OF THE CELL                     4\n03420HISTOLOGY                                         4\n04150CONCEPTS OF CHEMISTRY                             4\n04160INTRODUCTION TO GEOLOGY                           4\n04201GENERAL COLLEGE CHEMISTRY                         4\n04251QUANTITATIVE ANALYSIS                             4\n04303ORGANIC CHEMISTRY                                 4\n04311ENVIRONMENTAL CHEMISTRY                           4\n04315PHYSICAL CHEMISTRY                                4\n04402ADVANCED ORGANIC CHEMISTRY                        4\n04410INSTRUMENTAL ANALYSIS                             4\n04415BIOCHEMISTRY                                      4\n05150ECONOMIC CONCEPTS                                 3\n05201MICROECONOMICS                                    3\n05202MACROECONOMICS                                    3\n05394QUANTITATIVE METHODS                              3\n06211ACCOUNTING PRINCIPLES I                           3\n06212ACCOUNTING PRINCIPLES II                          3\n06380ACCOUNTING SYSTEMS                                3\n06409TAX ACCOUNTING                                    3\n06451COST ACCOUNTING                                   3\n07200PERSONAL FINANCE                                  3\n07321MONEY AND FINANCIAL INSTITUTIONS                  3\n07324BUSINESS AND THE PUBLIC SECTOR                    3\n08301THE TEACHING OF READING                           3\n08303MATHEMATICS FOR THE ELEMENTARY CHILD              3\n08309LITERATURE FOR THE CHILD                          3\n08403METHODS AND MATERIALS FOR THE PRESCHOOL           3\n08405PRESCHOOL CURRICULUM                              3\n08412STUDENT TEACHING                                  3\n09101COMPOSITION                                       3\n09102INTRODUCTION TO LITERARY TYPES                    3\n09150STUDIES IN FILM                                   3\n09201MAJOR BRITISH WRITERS                             3\n09203SURVEY OF AMERICAN LITERATURE                     3\n09294INTRODUCTION TO JOURNALISM                        3\n09304TOPICS IN MEDIEVAL LITERATURE                     3\n09315ADOLESCENT LITERATURE                             3\n09320SHAKESPEARE                                       3\n09392CREATIVE POETRY WRITING                           3\n10110BEGINNING DANCE                                   1\n10120BEGINNING INDIVIDUAL SPORT                        1\n10140SWIMMING                                          1\n10150FITNESS                                           1\n10180FIRST AID AND PERSONAL SAFETY                     2\n10195ATHLETIC TRAINING                                 3\n10197CURRENT HEALTH TOPICS                             3\n10245LIFEGUARD TRAINING                                1\n10393HEALTH AND PHYSICAL EDUCATION FOR TEACHERS        3\n11201AMERICAN HISTORY                                  3\n11210WOMEN IN AMERICAN HISTORY                         3\n11306AFRICAN-AMERICAN HISTORY                          3\n11375THE VIETNAM EXPERIENCE                            3\n11408THE COLONIAL AND REVOLUTIONARY ERA                3\n11421THE ERA OF THE CIVIL WAR                          3\n11455AMERICAN FOREIGN POLICY                           3\n12100INTRODUCTION TO MODERN MATHEMATICS                3\n12105COLLEGE ALGEBRA                                   3\n12110ELEMENTARY FUNCTIONS                              3\n12115INTRODUCTION TO CALCULUS                          3\n12203THEORY OF NUMBERS                                 3\n12205DISCRETE MATHEMATICS                              3\n12210CALCULUS AND ANALYTICAL GEOMETRY                  3\n12323PROBABILITY AND STATISTICS                        3\n12330INTRODUCTION TO NUMERICAL ANALYSIS                3\n12401MULTIVARIABLE CALCULUS                            3\n12410DIFFERENTIAL EQUATIONS                            3\n12413ALGEBRAIC STRUCTURES                              3\n13101COMPUTER LITERACY                                 3\n13201INTRODUCTION TO COMPUTING                         3\n13202DATA STRUCTURES                                   3\n13290SOFTWARE WORKSHOP                                 1\n13305DATABASE DESIGN AND FILE STRUCTURES               3\n13309COBOL                                             3\n13310COMPUTER ORGANIZATON                              3\n13315ASSEMBLER                                         3\n13350PRINCIPLES OF PROGRAMMING LANGUAGES               3\n13390SOFTWARE WORKSHOP                                 1\n13410OPERATING SYSTEMS AND ARCHITECTURE                3\n13420SOFTWARE ENGINEERING                              3\n13440ALGORITHM ANALYSIS                                3\n13490SOFTWARE WORKSHOP                                 1\n14140CONCEPTS OF PHYSICS                               4\n14143ASTRONOMY                                         4\n14241ELEMENTS OF PHYSICS I                             4\n14242ELEMENTS OF PHYSICS II                            4\n14251ESSENTIALS OF PHYSICS I                           4\n14252ESSENTIALS OF PHYSICS II                          4\n14431ANALYTICAL MECHANICS                              4\n./ ADD NAME=EX6D3    8000-76050-76050-1516-00228-00228-00000-JAY01\n011001MWF  8:00AM\n011002TTH  8:00AM\n011003MWF  9:00AM\n011501TTH  9:30AM\n012011MWF 10:00AM\n012012TTH 11:00AM\n012013MWF 11:00AM\n012021TTH 12:30PM\n012022MWF 12:00PM\n012841TTH  2:00PM\n012851MWF  1:00PM\n013021MWF  2:00PM\n013071TBA  0:00\n013701MWF  8:00AM\n013702TTH  8:00AM\n013703MWF  9:00AM\n013704TTH  9:30AM\n014501MWF 10:00AM\n014502TTH 11:00AM\n014503MWF 11:00AM\n022001MWF  8:00AM\n022002TTH  8:00AM\n022101MWF  9:00AM\n022102TTH  9:30AM\n022311MWF 10:00AM\n022411MWF 12:00PM\n022412TTH  2:00PM\n022413MWF  1:00PM\n022421TTH 11:00AM\n023411MWF 11:00AM\n023421TTH 12:30PM\n031001MWF  8:00AM\n031002TTH  8:00AM\n031003MWF  9:00AM\n031004TTH  9:30AM\n032001MWF 10:00AM\n032002TTH 11:00AM\n032011MWF 11:00AM\n032101TTH 12:30PM\n032102MWF 12:00PM\n032501TTH  2:00PM\n032601MWF  1:00PM\n032602MWF  2:00PM\n033051MWF  8:00AM\n033121TTH  8:00AM\n034081MWF  9:00AM\n034201TTH  9:30AM\n041501MWF  8:00AM\n041502TTH  8:00AM\n041503MWF  9:00AM\n041504TTH  9:30AM\n041601MWF 10:00AM\n041602TTH 11:00AM\n042011MWF 11:00AM\n042012TTH 12:30PM\n042511MWF 12:00PM\n042512TTH  2:00PM\n043031MWF  1:00PM\n043111MWF  2:00PM\n043151MWF  8:00AM\n044021TTH  8:00AM\n044101MWF  9:00AM\n044151TTH  9:30AM\n051501MWF  8:00AM\n051502TTH  8:00AM\n051503MWF  9:00AM\n051504TTH  9:30AM\n052011MWF 10:00AM\n052012TTH 11:00AM\n052013MWF 11:00AM\n052021TTH 12:30PM\n052022MWF 12:00PM\n052023TTH  2:00PM\n053941MWF  1:00PM\n062111MWF  8:00AM\n062112TTH  8:00AM\n062113MWF  9:00AM\n062121TTH  9:30AM\n062122MWF 10:00AM\n062123TTH 11:00AM\n063801MWF 11:00AM\n064091TTH 12:30PM\n064511MWF 12:00PM\n072001MWF  8:00AM\n073211TTH  8:00AM\n073241MWF  9:00AM\n083011MWF  8:00AM\n083012TTH  8:00AM\n083013MWF  9:00AM\n083031TTH  9:30AM\n083032MWF 10:00AM\n083033TTH 11:00AM\n083091MWF 11:00AM\n083092TTH 12:30PM\n084031MWF 12:00PM\n084032TTH  2:00PM\n084051MWF  1:00PM\n084121MO   8:00AM\n084122TU   8:00AM\n084123WE   8:00AM\n084124TH   8:00AM\n084125FR   8:00AM\n091011MWF  8:00AM\n091012TTH  8:00AM\n091021MWF  9:00AM\n091022TTH  9:30AM\n091023MWF 10:00AM\n091501TTH 11:00AM\n091502MWF 11:00AM\n092011TTH 12:30PM\n092031MWF 12:00PM\n092032TTH  2:00PM\n092033MWF  1:00PM\n092941MWF  2:00PM\n092942MWF  8:00AM\n092943TTH  8:00AM\n093041MWF  9:00AM\n093151TTH  9:30AM\n093201MWF 10:00AM\n093202TTH 11:00AM\n093921MWF 11:00AM\n101101MWF  8:00AM\n101102TTH  8:00AM\n101103MWF  9:00AM\n101104TTH  9:30AM\n101105MWF 10:00AM\n101201TTH 11:00AM\n101202MWF 11:00AM\n101203TTH 12:30PM\n101204MWF 12:00PM\n101205TTH  2:00PM\n101401MWF  1:00PM\n101402MWF  2:00PM\n101403MWF  8:00AM\n101404TTH  8:00AM\n101501MWF  9:00AM\n101502TTH  9:30AM\n101503MWF 10:00AM\n101504TTH 11:00AM\n101505MWF 11:00AM\n101801TTH 12:30PM\n101802MWF 12:00PM\n101803TTH  2:00PM\n101951MWF  1:00PM\n101952MWF  2:00PM\n101971MWF  8:00AM\n101972TTH  8:00AM\n102451MWF  9:00AM\n103931TTH  9:30AM\n103932MWF 10:00AM\n103933TTH 11:00AM\n112011MWF  8:00AM\n112012TTH  8:00AM\n112013MWF  9:00AM\n112014TTH  9:30AM\n112101MWF 10:00AM\n112102TTH 11:00AM\n112103MWF 11:00AM\n113061TTH 12:30PM\n113062MWF 12:00PM\n113751TTH  2:00PM\n114081MWF  1:00PM\n114211MWF  2:00PM\n114551MWF  8:00AM\n121001MWF  8:00AM\n121002TTH  8:00AM\n121003MWF  9:00AM\n121051TTH  9:30AM\n121052MWF 10:00AM\n121053TTH 11:00AM\n121054MWF 11:00AM\n121101TTH 12:30PM\n121102MWF 12:00PM\n121151TTH  2:00PM\n121152MWF  1:00PM\n122031MWF  2:00PM\n122032MWF  8:00AM\n122051TTH  8:00AM\n122101MWF  9:00AM\n122102TTH  9:30AM\n123231MWF 10:00AM\n123232TTH 11:00AM\n123301MWF 11:00AM\n124011TTH 12:30PM\n124101MWF 12:00PM\n124131TTH  2:00PM\n131011MWF  8:00AM\n131012TTH  8:00AM\n132011MWF  9:00AM\n132012TTH  9:30AM\n132013MWF 10:00AM\n132021TTH 11:00AM\n132901MO   3:00PM\n132902TU   3:00PM\n132903WE   3:00PM\n132904TH   3:00PM\n132905FR   3:00PM\n133051MWF 11:00AM\n133052TTH 12:30PM\n133091MWF 12:00PM\n133101TTH  2:00PM\n133151MWF  1:00PM\n133501MWF  2:00PM\n133901MO   3:00PM\n133902TU   3:00PM\n133903WE   3:00PM\n133904TH   3:00PM\n133905FR   3:00PM\n134101MWF  8:00AM\n134201TTH  8:00AM\n134401MWF  9:00AM\n134901MO   3:00PM\n134902TU   3:00PM\n134903WE   3:00PM\n134904TH   3:00PM\n134905FR   3:00PM\n141401MWF  8:00AM\n141402TTH  8:00AM\n141403MWF  9:00AM\n141431TTH  9:30AM\n141432MWF 10:00AM\n142411TTH 11:00AM\n142412MWF 11:00AM\n142421TTH 12:30PM\n142511MWF 12:00PM\n142512TTH  2:00PM\n142521MWF  1:00PM\n144311MWF  2:00PM\n./ ADD NAME=EX7      8000-76050-76050-1612-00086-00086-00000-JAY01\n     H                                                                    EXAMP7\n     H*\n     H* UPDATE STUDENT MASTER WITH GRADE INFORMATION\n     H*\n     FGRADES  IPEAF2080 104            TAPE         S\n     FSTMASTR USEAF 250 250  7KI     2 DISK14       S\n     FREPORT  O   F 132 132     OF    LPRINTER\n     LREPORT    101 6012\n     IGRADES  011 01\n     I                                        1   7 GIDENT  M1\n     I                                        9  140C1N             11\n     I                                       16  192C1G\n     I                                       21  260C2N             12\n     I                                       28  312C2G\n     I                                       33  380C3N             13\n     I                                       40  432C3G\n     I                                       45  500C4N             14\n     I                                       52  552C4G\n     I                                       57  620C5N             15\n     I                                       64  672C5G\n     I                                       69  740C6N             16\n     I                                       76  792C6G\n     I                                       81  860C7N             17\n     I                                       88  912C7G\n     I                                       93  980C8N             18\n     I                                      100 1032C8G\n     ISTMASTR 011 02   1 CA\n     I       OR   92   1 CD\n     I                                        2   8 SIDENT  M1\n     I                                        9  43 NAME\n     C*\n     C* COUNT RECORDS PROCESSED FOR SUMMARY AT END OF REPORT\n     C*\n     C   01      GCOUNT    ADD  1         GCOUNT  30\n     C   02      SCOUNT    ADD  1         SCOUNT  30\n     C   02 MR   UCOUNT    ADD  1         UCOUNT  30\n     OSTMASTR D        02 MR\n     O                         C1G      144P\n     O                         C2G      153P\n     O                         C3G      162P\n     O                         C4G      171P\n     O                         C5G      180P\n     O                         C6G      189P\n     O                         C7G      198P\n     O                         C8G      207P\n     OREPORT  H  201   1P\n     O       OR        OF\n     O                                   43 'STUDENT MASTER'\n     O                                   29 'GRADES TO '\n     O                                   19 'POST COURSE '\n     O        D 11     01\n     O                N14      C4G      111 ' 0.  '\n     O                N14      C4N      105 '0  -   - '\n     O                N13      C3G       95 ' 0.  '\n     O                N13      C3N       89 '0  -   - '\n     O                N12      C2G       79 ' 0.  '\n     O                N12      C2N       73 '0  -   - '\n     O                N11      C1G       63 ' 0.  '\n     O                N11      C1N       57 '0  -   - '\n     O                NMR                45 'STUDENT MASTER ***'\n     O                NMR                27 '*** NO MATCHING '\n     O                         GIDENT    11\n     O        D  1     01\n     O                N18      C8G      111 ' 0.  '\n     O                N18      C8N      105 '0  -   - '\n     O                N17      C7G       95 ' 0.  '\n     O                N17      C7N       89 '0  -   - '\n     O                N16      C6G       79 ' 0.  '\n     O                N16      C6N       73 '0  -   - '\n     O                N15      C5G       63 ' 0.  '\n     O                N15      C5N       57 '0  -   - '\n     O        D  1     02\n     O                 MR                57 'UPDATED'\n     O                         NAME      47\n     O                         SIDENT    11\n     O        T 31     LR\n     O                         GCOUNTZ    7\n     O                                   26 'GRADE RECORDS READ'\n     O        T  1     LR\n     O                         SCOUNTZ    7\n     O                                   23 'STUDENT MASTER '\n     O                                   35 'RECORDS READ'\n     O        T  1     LR\n     O                         UCOUNTZ    7\n     O                                   22 'STUDENT MASTER'\n     O                                   38 'RECORDS UPDATED'\n./ ADD NAME=EX7$     8004-76050-76050-1711-00031-00031-00000-JAY01\n//EXAMPLE7 JOB (001),'RPG TUTORIAL 7',\n//             CLASS=A,MSGCLASS=A,REGION=1024K\n//JOBCAT   DD  DSN=UCPUB001,DISP=SHR\n//***************************************************************\n//IEBDG    EXEC PGM=IEBDG,REGION=128K\n//DATAIN   DD  DISP=SHR,DSN=JAY01.RPG.TUTOR(EX7D)\n//DATAOUT  DD  DSN=GRADE.DATA,UNIT=TAPE,DISP=(NEW,PASS),\n//             VOL=(PRIVATE,RETAIN,SER=RPGET3),LABEL=(1,SL),\n//             DCB=(RECFM=FB,LRECL=104,BLKSIZE=2080)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n  DSD OUTPUT=(DATAOUT),INPUT=(DATAIN)\n  FD NAME=FLD1,LENGTH=79,STARTLOC=1,FROMLOC=1,INPUT=DATAIN\n  FD NAME=FLD2,LENGTH=07,STARTLOC=81,PICTURE=7,'000000 '\n  FD NAME=FLD3,LENGTH=05,STARTLOC=88,PICTURE=5,'000{ '\n  FD NAME=FLD4,LENGTH=07,STARTLOC=93,PICTURE=7,'000000 '\n  FD NAME=FLD5,LENGTH=05,STARTLOC=100,PICTURE=5,'000{ '\n  CREATE NAME=(FLD1,FLD2,FLD3,FLD4,FLD5),INPUT=DATAIN\n/*\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX7)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.REPORT  DD SYSOUT=*\n//GO.STMASTR DD DSN=STUDENT.KSDS,DISP=OLD,AMP=(AMORG,'RECFM=F')\n//GO.GRADES  DD DSN=GRADE.DATA,DISP=OLD,UNIT=TAPE,VOL=SER=RPGET3\n//\n./ ADD NAME=EX7D     8000-76050-76050-1711-00100-00100-00000-JAY01\n0025654 011001 013C 031002 026G 041503 023C 051504 013C 000000 000{ 000000 000{\n0034591 121001 023C 121002 016G 011003 010{ 022102 030{ 000000 000{ 000000 000{\n0038851 141401 036G 141402 033C 011003 036G 022102 026G 000000 000{ 000000 000{\n0040736 141401 013C 141402 023C 141403 033C 000000 000{ 000000 000{ 000000 000{\n0043415 131011 013C 131012 033C 132011 033C 011501 030{ 000000 000{ 000000 000{\n0054796 041501 026G 011002 016G 031003 030{ 051504 023C 000000 000{ 000000 000{\n0063296 011001 013C 011002 036G 022101 010{ 031004 026G 000000 000{ 000000 000{\n0072697 011001 026G 031002 020{ 041503 036G 051504 023C 000000 000{ 000000 000{\n0099174 091011 020{ 091012 030{ 091021 036G 011501 030{ 000000 000{ 000000 000{\n0118376 141401 023C 141402 036G 141403 013C 000000 000{ 000000 000{ 000000 000{\n0120756 011001 033C 031002 016G 041503 033C 051504 040{ 000000 000{ 000000 000{\n0136491 141401 036G 141402 016G 141403 016G 000000 000{ 000000 000{ 000000 000{\n0139894 011001 036G 011002 036G 011003 026G 022102 030{ 000000 000{ 000000 000{\n0141670 121001 010{ 121002 030{ 121003 026G 011501 033C 000000 000{ 000000 000{\n0152570 041501 023C 011002 016G 031003 013C 051504 010{ 000000 000{ 000000 000{\n0166305 041501 026G 011002 010{ 031003 033C 051504 023C 000000 000{ 000000 000{\n0176560 083011 023C 083012 020{ 083013 036G 011501 020{ 000000 000{ 000000 000{\n0190433 031001 040{ 031002 033C 031003 023C 000000 000{ 000000 000{ 000000 000{\n0194091 011001 020{ 031002 020{ 041503 033C 051504 036G 000000 000{ 000000 000{\n0202663 091011 000{ 011002 023C 031003 013C 041504 036G 000000 000{ 000000 000{\n0208198 022001 030{ 022002 033C 022101 040{ 011501 030{ 000000 000{ 000000 000{\n0223563 131011 030{ 131012 040{ 011003 026G 022102 023C 000000 000{ 000000 000{\n0243012 011001 020{ 011002 026G 011003 033C 011501 033C 000000 000{ 000000 000{\n0243815 141401 033C 141402 000{ 011003 033C 022102 010{ 000000 000{ 000000 000{\n0244106 011001 016G 031002 016G 041503 023C 051504 036G 000000 000{ 000000 000{\n0285887 131011 023C 131012 013C 132011 020{ 011501 040{ 000000 000{ 000000 000{\n0289051 091011 026G 011002 033C 031003 016G 041504 010{ 000000 000{ 000000 000{\n0291088 011001 020{ 031002 036G 041503 023C 051504 000{ 000000 000{ 000000 000{\n0297566 101101 033C 011002 033C 031003 040{ 041504 036G 000000 000{ 000000 000{\n0306654 083011 016G 083012 040{ 083013 000{ 083031 026G 000000 000{ 000000 000{\n0318326 011001 036G 031002 033C 041503 023C 051504 023C 000000 000{ 000000 000{\n0322868 131011 030{ 131012 013C 132011 033C 132012 023C 000000 000{ 000000 000{\n0331623 131011 036G 131012 016G 132011 030{ 011501 000{ 000000 000{ 000000 000{\n0342751 022001 023C 022002 026G 011003 030{ 031004 020{ 000000 000{ 000000 000{\n0356637 121001 023C 011002 023C 031003 030{ 041504 030{ 000000 000{ 000000 000{\n0358768 091011 036G 091012 030{ 091021 010{ 091022 026G 000000 000{ 000000 000{\n0365482 141401 016G 141402 033C 011003 010{ 022102 013C 000000 000{ 000000 000{\n0366869 131011 020{ 011002 033C 031003 013C 041504 030{ 000000 000{ 000000 000{\n0371633 141401 033C 141402 016G 011003 036G 022102 023C 000000 000{ 000000 000{\n0395489 031001 016G 031002 020{ 031003 033C 000000 000{ 000000 000{ 000000 000{\n0405326 022001 023C 022002 030{ 011003 040{ 031004 023C 000000 000{ 000000 000{\n0427620 011001 040{ 031002 036G 041503 033C 051504 040{ 000000 000{ 000000 000{\n0464796 041501 026G 011002 033C 031003 013C 051504 023C 000000 000{ 000000 000{\n0466722 131011 016G 131012 036G 132011 033C 132012 023C 000000 000{ 000000 000{\n0467007 011001 010{ 031002 040{ 041503 030{ 051504 010{ 000000 000{ 000000 000{\n0478623 121001 033C 121002 040{ 011003 026G 022102 023C 000000 000{ 000000 000{\n0487226 083011 033C 083012 020{ 083013 016G 011501 026G 000000 000{ 000000 000{\n0552068 031001 016G 031002 023C 031003 030{ 000000 000{ 000000 000{ 000000 000{\n0555590 121001 010{ 011002 026G 031003 023C 041504 016G 000000 000{ 000000 000{\n0560806 121001 016G 121002 030{ 121003 023C 121051 020{ 000000 000{ 000000 000{\n0566030 141401 016G 141402 036G 011003 033C 022102 036G 000000 000{ 000000 000{\n0574793 131011 023C 131012 036G 132011 033C 132012 023C 000000 000{ 000000 000{\n0575617 101101 016G 011002 030{ 031003 020{ 041504 026G 000000 000{ 000000 000{\n0591132 101101 020{ 101102 030{ 101103 036G 011501 030{ 022311 040{ 032002 023C\n0597225 031001 030{ 011002 036G 041503 033C 051504 010{ 000000 000{ 000000 000{\n0610936 141401 033C 141402 020{ 141403 030{ 000000 000{ 000000 000{ 000000 000{\n0612082 121001 036G 121002 023C 121003 036G 121051 023C 000000 000{ 000000 000{\n0612533 041501 020{ 011002 036G 031003 020{ 051504 033C 000000 000{ 000000 000{\n0625143 101101 033C 101102 036G 011003 013C 022102 016G 032001 013C 000000 000{\n0637591 083011 023C 083012 026G 083013 000{ 011501 036G 000000 000{ 000000 000{\n0643686 022001 036G 022002 020{ 022101 020{ 011501 013C 000000 000{ 000000 000{\n0647893 022001 040{ 022002 030{ 011003 020{ 031004 033C 000000 000{ 000000 000{\n0687119 041501 020{ 041502 026G 041503 013C 000000 000{ 000000 000{ 000000 000{\n0687191 141401 030{ 141402 030{ 141403 020{ 000000 000{ 000000 000{ 000000 000{\n0700304 121001 033C 121002 036G 011003 026G 022102 036G 000000 000{ 000000 000{\n0713816 101101 026G 101102 013C 011003 026G 022102 020{ 032001 033C 000000 000{\n0717587 022001 033C 022002 000{ 022101 033C 022102 026G 000000 000{ 000000 000{\n0722338 141401 020{ 011002 033C 031003 030{ 041504 023C 000000 000{ 000000 000{\n0728987 041501 026G 011002 010{ 031003 016G 051504 023C 000000 000{ 000000 000{\n0740764 101101 013C 101102 036G 011003 023C 022102 026G 032001 036G 000000 000{\n0748067 101101 020{ 101102 010{ 101103 033C 011501 026G 022311 036G 032002 033C\n0748758 031001 036G 031002 020{ 031003 016G 000000 000{ 000000 000{ 000000 000{\n0755610 011001 030{ 031002 036G 041503 023C 051504 023C 000000 000{ 000000 000{\n0757139 031001 040{ 031002 013C 031003 036G 000000 000{ 000000 000{ 000000 000{\n0766116 011001 026G 031002 010{ 041503 033C 051504 013C 000000 000{ 000000 000{\n0778839 031001 010{ 031002 013C 031003 023C 000000 000{ 000000 000{ 000000 000{\n0790544 031001 016G 031002 040{ 011003 016G 022102 036G 000000 000{ 000000 000{\n0791357 011001 033C 031002 023C 041503 026G 051504 013C 000000 000{ 000000 000{\n0793297 011001 030{ 031002 036G 041503 016G 051504 000{ 000000 000{ 000000 000{\n0793617 031001 040{ 011002 036G 041503 033C 051504 033C 000000 000{ 000000 000{\n0809327 121001 026G 011002 026G 031003 026G 041504 016G 000000 000{ 000000 000{\n0822928 131011 030{ 131012 036G 132011 026G 011501 010{ 000000 000{ 000000 000{\n0825790 141401 033C 141402 026G 141403 036G 000000 000{ 000000 000{ 000000 000{\n0836832 131011 033C 131012 040{ 132011 020{ 132012 033C 000000 000{ 000000 000{\n0853058 121001 036G 121002 023C 121003 026G 121051 016G 000000 000{ 000000 000{\n0853466 131011 020{ 011002 036G 031003 023C 041504 030{ 000000 000{ 000000 000{\n0857212 121001 030{ 121002 026G 121003 036G 011501 030{ 000000 000{ 000000 000{\n0858241 083011 023C 083012 016G 083013 033C 083031 020{ 000000 000{ 000000 000{\n0881002 121001 033C 121002 040{ 011003 030{ 022102 013C 000000 000{ 000000 000{\n0888561 041501 030{ 041502 030{ 041503 000{ 000000 000{ 000000 000{ 000000 000{\n0892174 131011 016G 131012 023C 132011 030{ 132012 016G 000000 000{ 000000 000{\n0928546 041501 026G 041502 033C 041503 030{ 000000 000{ 000000 000{ 000000 000{\n0935786 141401 036G 141402 020{ 141403 033C 000000 000{ 000000 000{ 000000 000{\n0965296 031001 040{ 011002 020{ 041503 040{ 051504 030{ 000000 000{ 000000 000{\n0967407 141401 026G 141402 016G 141403 033C 000000 000{ 000000 000{ 000000 000{\n0967791 011001 040{ 031002 023C 041503 013C 051504 016G 000000 000{ 000000 000{\n0968791 141401 013C 141402 023C 011003 036G 022102 033C 000000 000{ 000000 000{\n0970626 121001 030{ 121002 020{ 011003 000{ 022102 013C 000000 000{ 000000 000{\n0979347 011001 033C 022002 030{ 031003 033C 041504 000{ 000000 000{ 000000 000{\n0982436 011001 023C 022002 040{ 031003 023C 041504 036G 000000 000{ 000000 000{\n./ ADD NAME=EX8      8000-76050-76050-1713-00114-00114-00000-JAY01\n     H                                                                    EXAMP8\n     H*\n     H* PRINT STUDENT GRADE REPORT\n     H*\n     FSTMASTR UP  F 250 250R 7KI     2 DISK14       S\n     FRAF     IRE F5000  50  7        ETAPE         S\n     FTABLE   IT  F  80  80           ETAPE         S\n     FREPORT  O   F 132 132     OF    LPRINTER\n     E    RAF     STMASTR\n     E    TABLE           TABCNR  1 120  5  ATABCNA 51\n     LREPORT    101 6012\n     ISTMASTR AA  01   1 CA\n     I       OR   91   1 CD\n     I                                        9  43 NAME\n     I                                      136 1410CN1N            11\n     I                                      136 140 CN1\n     I                                    P 142 1442CN1G\n     I                                      145 1500CN2N            12\n     I                                      145 149 CN2\n     I                                    P 151 1532CN2G\n     I                                      154 1590CN3N            13\n     I                                      154 158 CN3\n     I                                    P 160 1622CN3G\n     I                                      163 1680CN4N            14\n     I                                      163 167 CN4\n     I                                    P 169 1712CN4G\n     I                                      172 1770CN5N            15\n     I                                      172 176 CN5\n     I                                    P 178 1802CN5G\n     I                                      181 1860CN6N            16\n     I                                      181 185 CN6\n     I                                    P 187 1892CN6G\n     I                                      190 1950CN7N            17\n     I                                      190 194 CN7\n     I                                    P 196 1982CN7G\n     I                                      199 2040CN8N            18\n     I                                      199 203 CN8\n     I                                    P 205 2072CN8G\n     I                                    P 208 2102GPA\n     C*\n     C*  FOR EACH COURSE IN THE STUDENT RECORD WHICH CONTAINS A COURSE\n     C*  NUMBER, COMPUTE EARNED GRADE POINTS AND ACCUMULATE ATTEMPTED\n     C*  HOURS AND GRADE POINTS\n     C*\n     C   01                Z-ADD0         THOURS  30\n     C   01                Z-ADD0         TGPTS   52\n     C*\n     C   01                SETOF                     21\n     C   01N11   CN1       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS  10\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN1G      MULT CRSHRS    GPTS    52\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N12   CN2       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN2G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N13   CN3       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN3G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N14   CN4       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN4G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N15   CN5       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN5G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N16   CN6       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN6G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N17   CN7       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN7G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C   01                SETOF                     21\n     C   01N18   CN8       LOKUPTABCNR    TABCNA 51      21\n     C   01 21             MOVE TABCNA    CRSHRS\n     C   01 21   THOURS    ADD  CRSHRS    THOURS\n     C   01 21   CN8G      MULT CRSHRS    GPTS\n     C   01 21   TGPTS     ADD  GPTS      TGPTS\n     C*\n     C* COMPUTE FINAL GRADE POINT AVERAGE\n     C*\n     C   01      TGPTS     DIV  THOURS    GPA       H\n     OSTMASTR D        01\n     O                         GPA      210P\n     OREPORT  H  201   1P\n     O       OR        OF\n     O                                   34 'STUDENT GRADE REPORT'\n     O        D  1     01\n     O                         GPA       55 '  0.  '\n     O                         NAME      40\n./ ADD NAME=EX8$     8005-76050-76050-1729-00035-00018-00000-JAY01\n//EXAMPLE8 JOB (001),'RPG TUTORIAL 8',\n//             CLASS=A,MSGCLASS=A,REGION=1024K\n//JOBCAT   DD  DSN=UCPUB001,DISP=SHR\n//**************************************************************\n//GENER1   EXEC PGM=IEBGENER,REGION=128K\n//SYSUT1   DD  DISP=SHR,DSN=JAY01.RPG.TUTOR(EX8D)\n//SYSUT2   DD  DSN=STUDENTS.RAF,DISP=(NEW,PASS),UNIT=(TAPE,,DEFER),\n//             VOL=(PRIVATE,RETAIN,SER=RPGET4),LABEL=(1,SL),\n//             DCB=(RECFM=FB,LRECL=50,BLKSIZE=5000)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n  GENERATE MAXFLDS=1\n  RECORD FIELD=(50,1,,1)\n/*\n//***************************************************************\n//GENER2  EXEC PGM=IEBGENER,REGION=128K\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX6D2)\n//SYSUT2   DD DSN=TABLE.DATA.F0002,DISP=(NEW,PASS),\n//            UNIT=(TAPE,,DEFER),VOL=(PRIVATE,RETAIN,SER=RPGET5),\n//            LABEL=(1,SL),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)\n//***************************************************************\n//RPGCLG   EXEC RPGECLG,COND.LKED=(9,LT,RPG)\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO DD UNIT=SYSDA\n//RPG.SYSIN DD DISP=SHR,DSN=JAY01.RPG.TUTOR(EX8)\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.REPORT  DD SYSOUT=*\n//GO.RAF     DD DSN=STUDENTS.RAF,DISP=OLD,LABEL=(1,SL)\n//GO.TABLE   DD DSN=TABLE.DATA.F0002,DISP=OLD,LABEL=(1,SL)\n//GO.STMASTR DD DSN=STUDENT.KSDS,DISP=OLD,AMP=(AMORG,'RECFM=F')\n//\n./ ADD NAME=EX8D     8000-76050-76050-1713-00097-00097-00000-JAY01\n0297566       ALAN, LARRY H\n0597225       AUSTIN, JIM O\n0825790       AUSTIN, LOUIS E\n0935786       BARBER, ROBERT I\n0371633       BENSON, HELEN C\n0405326       BRYANT, CALVIN B\n0881002       BRYANT, ROLAND F\n0289051       BURNETT, ANN H\n0637591       BURNETT, EVERETT H\n0291088       CHILDRESS, ERNIE S\n0034591       CHILDRESS, NELSON E\n0566030       CONLEY, CYBIL M\n0979347       COOK, TOM T\n0892174       DRAKE, BETTY P\n0575617       ERICKSON, RUSSELL S\n0822928       FITZGERALD, DAWN I\n0809327       FRANKLIN, RUTH H\n0713816       FRANKLIN, TED A\n0757139       GARLAND, JOAN L\n0141670       GARLAND, RICHARD A\n0766116       GARLAND, RONALD M\n0793297       GERBLICK, LARRY C\n0591132       GLASSMAN, ERNIE E\n0040736       GLOVER, ELIZABETH W\n0478623       GLOVER, KIMBERLY G\n0487226       HALL, CHARLES K\n0888561       HALL, ERNIE A\n0722338       HALL, WILLIAM K\n0202663       HAMMOND, RICHARD O\n0791357       HARMON, LOUISE W\n0395489       HASTINGS, JACK S\n0612082       HASTINGS, MARGUERITE K\n0643686       HASTINGS, PETER H\n0139894       HASTINGS, SAMANTHA I\n0176560       HILLFORD, ARNOLD O\n0700304       HILLFORD, MARGUERITE N\n0560806       HODGES, HOWARD B\n0612533       HODGES, RONALD I\n0152570       HORTON, HEATHER J\n0647893       HORTON, SAMANTHA B\n0778839       JACKSON, JOHN J\n0342751       JACOBY, MARILYN W\n0970626       JENNINGS, JILL K\n0043415       JOHNSON, ROLAND D\n0687191       LABROIE, CALVIN D\n0025654       LABROIE, SAMANTHA D\n0366869       LANDERS, EVELYN C\n0331623       LANDERS, LUCY B\n0574793       LARUE, WANDA I\n0965296       LARUE, YOLANDA C\n0853058       MCKAY, CINDY O\n0717587       MCKAY, DANIEL R\n0427620       MCKAY, TED R\n0120756       MCKENZIE, SARAH V\n0740764       MCKENZIE, ZELDA E\n0099174       MCQUEEN, CINDY D\n0555590       MEEHAN, CAITLIN I\n0208198       MEEHAN, JACK D\n0243815       MEEHAN, JIM N\n0853466       MORENO, CLARA T\n0166305       MORENO, HEATHER J\n0552068       MULL, TED D\n0466722       NEWBURY, TAMMY T\n0365482       NEWTON, BETTY J\n0194091       NEWTON, DEBRA A\n0190433       NOELKE, CINDY E\n0243012       NOELKE, DIANE G\n0322868       NORRIS, JANET F\n0755610       NORRIS, TAMMY L\n0072697       NORTON, HANNAH E\n0748758       PARKER, JACOB K\n0318326       PARKER, LOUISE L\n0625143       PARRISH, ARNOLD W\n0358768       PARRISH, EVERETT R\n0857212       PETERSON, VIRGINIA A\n0967791       POWERS, LUCY I\n0748067       RAMSEY, EVERETT I\n0136491       REED, LAURIE B\n0968791       RICHARDS, BEVERLY L\n0054796       RICHARDS, MIKE T\n0306654       RODGERS, CALVIN B\n0790544       RODGERS, THELMA I\n0610936       SCHAEFER, BOB A\n0223563       SCHWAB, KATHRYN I\n0928546       SMITH, JOSEPH R\n0967407       TEASDALE, JANET V\n0464796       TEASDALE, LAURIE N\n0982436       THATCHER, JOSEPH H\n0836832       TUCKER, BRENDA F\n0356637       TUCKER, KAREN A\n0285887       VANACKER, EVERETT K\n0858241       VANACKER, PATTY S\n0687119       WEAVER, LARRY V\n0793617       WHITE, CLIFF N\n0244106       WINSTON, JACOB T\n0467007       WINSTON, LARRY W\n0728987       YAEGER, SHARON T\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT667/FILE667.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT667", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}