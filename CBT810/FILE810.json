{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012840000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 11933558, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE810.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 11933558, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 11933558, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE810.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\xb6\\x05'", "DS1TRBAL": "b'\\x85X'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x7f\\x00\\x0c\\x05\\x8b\\x00\\x0e\\x00\\xb7'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04P\\x00\\x15\\x01\\x11\\x01/\\x01\\x11\\x01/\\x005\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf0@@@'", "ispf": {"version": "04.80", "flags": 0, "createdate": "2011-01-12T00:00:00", "modifydate": "2011-01-12T00:35:15", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-480"}, "text": "REGULAR CBT TAPE - VERSION 480    FILE:  810\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT480.FILE810\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 19 MEMBERS COUNTED; CUMULATIVE SIZE IS 113,174 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   01/12/11    00:35:15    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$INSTALL": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00$\\x01\\x06$\\x0f\\x01\\t$\\x9f\\x11\\x00\\x00b\\x00A\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2009-09-06T11:00:24", "lines": 98, "newlines": 65, "modlines": 0, "user": "ONSCREN"}, "text": "\n\n               Installing OS  (OnScreen)\n\nYou should have received all the data sets except\n  a    the OBJECT library\n       allocate a PDS with about 15 tracks of 3390 space\n       10 directory blocks\n       RECFM=FB, LRECL=80, BLKSIZE=4000\n  b    the LOADLIB\n       allocate a PDS with about 15 tracks of 3390 space\n       10 directory blocks\n       RECFM=U, BLKSIZE=6144\n       the library DOES NOT need to be APF authorized\n  c    the LISTINGS library\n       allocate a PDS with about 450 tracks of 3390 space\n       10 directory blocks\n       RECFM=FBM, LRECL=121, BLKSIZE=6050\n\nEdit member ASMLINK in the JCL library\n   . Add a valid JOB card\n   . Update the DSN on the SYSPRINT DD in the ASM in-line PROC\n     to the name of the data set you allocated in step c\n   . Update the MACLIB DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the SOURCE DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the DSN on the SYSPUNCH DD in the ASM in-line proc\n     to the name of the data set you allocated in step a\n   . Update the SOURCE DSN on the SYSIN DD in the ASM in-line PROC\n   . Update the DSN on the SYSLMOD DD of the LKED1 and LKED2 steps\n     to the name you used in step b\n   . Update the DSN on the SYSLIB DD of the LKED1 and LKED2 steps\n     to the name you used in step a\n\nSubmit member ASMLINK\n\n\n\nEdit member ASMFMT\n   . Add a valid JOB card\n   . Update the DSN on the SYSPRINT DD in the ASM in-line PROC\n     to the name of the data set you allocated in step c\n   . Update the MACLIB DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the SOURCE DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the DSN on the SYSPUNCH DD in the ASM in-line proc\n     to the name of the data set you allocated in step a\n   . Update the SOURCE DSN on the SYSIN DD in the ASM in-line PROC\n     ** note this is the name of the SMF source\n   . Update the DSN on the SYSLMOD DD of the LKED step to the name\n     you used in step b\n\nSubmit member ASMFMT\n\n\n\nEdit member ASMSMF\n   . Add a valid JOB card\n   . Update the DSN on the SYSPRINT DD in the ASM in-line PROC\n     to the name of the data set you allocated in step c\n   . Update the MACLIB DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the SOURCE DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the DSN on the SYSPUNCH DD in the ASM in-line proc\n     to the name of the data set you allocated in step a\n   . Update the SOURCE DSN on the SYSIN DD in the ASM in-line PROC\n     ** note this is the name of the SMF source\n   . Update the DSN on the SYSLMOD DD of the LKED step to the name\n     you used in step b\n\nSubmit member ASMSMF\n\n\nEdit member ASMSMGR\n   . Add a valid JOB card\n   . Update the DSN on the SYSPRINT DD in the ASM in-line PROC\n     to the name of the data set you allocated in step c\n   . Update the MACLIB DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the SOURCE DSN in the SYSLIB DD in the ASM in-line PROC\n   . Update the DSN on the SYSPUNCH DD in the ASM in-line proc\n     to the name of the data set you allocated in step a\n   . Update the SOURCE DSN on the SYSIN DD in the ASM in-line PROC\n     ** note this is the name of the SMF source\n   . Update the DSN on the SYSLMOD DD of the LKED step to the name\n     you used in step b\n\nSubmit member ASMSMGR\n\n\n\nCopy the FM and FM2 REXX EXECs to a library in your SYSPROC\nEdit the DSNs for the FMFORMAT, FMOPTS and ISPPLIBs\n  . these EXECs use TSOPLUS.  If you use TSOPLUS,\n      edit the STEPLIBX DSNs.  If you do not use TSOPLUS,\n      remove the STEPLIBX statements and add the LOADLIB to\n      to a STEPLIB, ISPLLIB, system LNKLST, etc\n\n\n\nOS should be ready to use\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INTRO": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00%\\x01\\x06$\\x0f\\x01\\t$\\x9f\\x11\\x14\\x00\\x98\\x00\\x9a\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2009-09-06T11:14:25", "lines": 152, "newlines": 154, "modlines": 0, "user": "ONSCREN"}, "text": "OS  (OnScreen - File Browser)\n\nOS allows users to view sequential files, PDSs, PDSEs, and VSAM files\nof most types and VTOCs.\n\nThe purpose of OS is to allow data to not only be viewed in plain text,\nbut also to be 'formatted'.  The design of OS allows new formats to\nbe added easily.  Some types of data common to most all MVS (OS/390,\nz/OS or whatever it is called now) systems like SMF are already known\n(at least some SMF record types).\n\nThe utility determines the data set's DSORG dynamically.  That is it\ndetermines if the data set is sequential, a PDS, VSAM, etc and uses\nthe appropriate access method.\n\nIf a PDS or PDSE is referenced without a member name, a list of the\nmembers is displayed.  PDS(/E)s with RECFM U are assumed to be\n\"loadlibs\", all other RECFMs are \"non loadlibs\".\n\nData from the data set or directory is read into a data space before\nbeing displayed.  This has its advantages and disadvantes.  On the\nplus side, file I/O is only required once.  You can scroll forward,\nbackward, reference anything read into the data space with the system\ndoing any required I/O via system paging which has less overhead and\nis faster than file I/O.  On the negative side, if the data is too\nlarge to be loaded into the data space, only a portion can be OS'd\nat a time.  There are options on invocation that allow you to specify\nrecords to skip, number of records to read, and for VSAM files you\ncan use FROMKEY and TOKEY or RBA for positioning.\n(I intend to add the FROMKEY and TOKEY someday!)\nThe system defualt for the dataspace's size is 239 pages.  I intend\nto add a keyword to allow users to request a larger dataspace.\n\n\n\n\nI tried to keep the hard-coded message text to a minimum.  Since I\nam only (somewhat) literate in Enligsh (United States variety),\nthe only messages provided now are English.  If anyone wants to\ntake on translating the messages, the source for US english is\nin source OSMSGUS.  The language you use can be customized on a\nuser by user basis.  The options are kept in member OS of the\nISPPROF data set.  If you do create a new messages module, don't\nforget to add it to the assemble and link-edit JCL.\nI suppose you could even translate the text in the SPF panels.\n\n\n\n\n\n\n\n\n\n\n\n\n\nOther odds/ends\nAs of now, OS depends on SPF.  I have been looking at 'faking out'\nthe SPF functions.\n\nI plan on allowing you to enter \"OS\" as a primary command so you\ncan start a new \"session\" on a new data set.\n\n\nI work at a JES3 shop.  We don't have any JES2 SMF data so I don't\nhave much motivation for worrying about formatting any SMF records\nthat would be created by JES2.\n\n\nI have been thinking about OSing storage.  This would allow\nformatting of in storage control blocks.  Anyone know much about\ncross memory stuff?  Anyone know how to get the ALET for another\naddress space?  Is using ALETs and the access registers even\npossible for accessing data in another address space?\n\n\nOS really doesn't 'know' much about tapes.  In the last several\nyears the use of tape has declined drastically here.  The older\nround-reels were notorious for causing problems.  The main purpose\nfor developing DITTO was for messing around with tapes.  By the\nway DO NOT USE DITTO on any system later than about MVS 3 (ESA).\nOn anything later, DITTO CLOBBERS something and the system becomes\nunusable requiring an IPL.\n\n\nCommands can be recalled via a question mark (?).\nUp to the last 20 commands can be recalled.\n\n\nYou can see the contents of various fields in the common area by\nentering DEBUG as a primary command.\n\n\n\n\n\n\n\nFORMATs\n\nWhen a sequential file is first displayed, it is shown using the\ndefault format which is BROWSE.  PDS(/E) directories are displayed\nas member lists.  You can change which format is being used by\nentering \"FORMAT nnnnnnnn\" as a primary command.\n\n\nFormats are defined by members in the OSFORMAT library.\n\nAs supplied the formats available are:\n BROWSE        Displays data 'a-line-at-a-time' that allows up, down,\n               left, and right scrolling.\n\n DIR           Used to display non-loadlib PDS(/E) directories\n\n HEX           Displays data as two hex characters per byte.  The\n               display allows scrolling up, down, left, and right.\n\n LDIR          Used to display loadlib PDS(/E) directories.\n\n RVTOC         Displays VTOC info in \"raw\" form.\n\n SMF           Assumes the data is SMF data.  Most SMF record types\n               have customized displays.  Some records have multiple\n               \"screens\".  \"up\" and \"down\" scrolls records, \"left\"\n               and \"right\" change \"screens\" for a given record.\n\n\n VHEX          Displays data in 'vertical'  hex.  Each record is\n\n VTOC          Displays data sets on a volume.\n\n\n\n\n\n\nOS does not require APF authorization and does not update data sets.\n\nIt does not do much to verify data is valid (like packed decimal)\nbefore using it.  If dates in PDS(/E) directores are not valid,\nSMF data is not valid, etc, etc, OS will ABEND.  Intercepting ABENDs\nis another one of those 'round tuit's.\n\n\n\nOS does not update anything, so the best way to learn how to use\nit is to just \"play around\" with it.\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$SESSION": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00 \\x01\\x06$\\x0f\\x01\\t$\\x9f\\x11\\x04\\x00\\x15\\x00\\x15\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2009-09-06T11:04:20", "lines": 21, "newlines": 21, "modlines": 0, "user": "ONSCREN"}, "text": "Each PDS, sequential file, or PDS member \"OS'd\" is considered a\n\"session\".\n\nFor example if you start OS by displaying the list of members in a\nPDS(/E), the member list display itself is a \"session\".  If you browse\n(with the S, B, or V line command or primary commands), the member\ncontents is a second \"session\".  You may display the list of \"sessions\"\nyou have started by entering \"SESS\" or \"SESSION\" as a primary command.\n\n\nAs of now there are three types of \"sessions\"\n  1) List of data sets in a VTOC\n  2) List of members in a PDS(/E)\n  3) Display of a file or PDS(/E) member\n\nThe session display shows one line for each \"session\"\n\nYou may switch \"sessions\" by entering a non-blank in the line command\narea.\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$STARTUP": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x006\\x01\\x06$\\x0f\\x01\\t$\\x9f\\x11\\x04\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2009-09-06T11:04:36", "lines": 30, "newlines": 30, "modlines": 0, "user": "ONSCREN"}, "text": "Start up OS from SPF option 6 by entering:\n\n OS DSN=xxxxx\n\n   or\n\n OS DSN=xxxxx MEMBER=mmmmmmm\n\n   or\n\n OS VTOC=vvvvvv\n\n   or\n\n OS RAWVTOC=vvvvvv (or VTOCRAW=vvvvvv)\n\n\n From SPF 3.4 you can enter \"OS DSN=/\" as a line command\n\n\n DSN can be the name of a sequential file, PDS (or PDS/E), or VSAM file\n\n If the data set is a PDS or PDS/E, a member name is optional.\n\n If the data set is a PDS or PDS/E and no member name is given,\n a listing of the members in the library will be displayed.\n\n\n If started with the VTOC keyword, a list of the data sets on the\n volume will be displayed.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$TSORECV": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x08\\x00'\\x01\\x06$\\x0f\\x01\\x10\\x04o\\x00R\\x00$\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.08", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2010-02-15T00:52:27", "lines": 36, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBT  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//*  YOU MUST ADAPT THIS JOB TO YOUR INSTALLATION'S NAMING  *//\n//*   STANDARDS.  THIS JOB CREATES THE PDS'ES.  SEE THE     *//\n//*   OS.DOC PDS FOR FURTHER INSTRUCTIONS.                  *//\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(DISASM)'\n  DSN('SBGOLOB.OS.DISASM') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(DOC)'\n  DSN('SBGOLOB.OS.DOC') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(MACS)'\n  DSN('SBGOLOB.OS.FORMATS') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(ISPPLIB)'\n  DSN('SBGOLOB.OS.ISPPLIB') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(JCL)'\n  DSN('SBGOLOB.OS.JCL') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(OPTS)'\n  DSN('SBGOLOB.OS.MACS') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(FORMATS)'\n  DSN('SBGOLOB.OS.OPTS') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(SMF)'\n  DSN('SBGOLOB.OS.SMF') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(SMGR)'\n  DSN('SBGOLOB.OS.SMGR') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(SOURCE)'\n  DSN('SBGOLOB.OS.SOURCE') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(STORAGE)'\n  DSN('SBGOLOB.OS.STORAGE') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE810(USERFMT)'\n  DSN('SBGOLOB.OS.USERFMT') VOL(WORK05)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE810": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04P\\x00\\x08\\x01\\x11\\x01/\\x01\\x11\\x01/\\x005\\x00\\x14\\x00\\x14\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf0@@@'", "ispf": {"version": "04.80", "flags": 0, "createdate": "2011-01-12T00:00:00", "modifydate": "2011-01-12T00:35:08", "lines": 20, "newlines": 20, "modlines": 0, "user": "CBT-480"}, "text": "//***FILE 810 is from Richard L. Rice and contains his ONSCREEN     *   FILE 810\n//*           package, which is his complete reworking of his file  *   FILE 810\n//*           browser package called FM (File Manager) that is on   *   FILE 810\n//*           CBT File 745.   This package is completely original,  *   FILE 810\n//*           although it has features that were suggested by the   *   FILE 810\n//*           REVIEW program from File 134.                         *   FILE 810\n//*                                                                 *   FILE 810\n//*           The idea here is to create a flexible file browser    *   FILE 810\n//*           package which is customizable.  The reason for the    *   FILE 810\n//*           rename from FM, is that FM sounded too much like a    *   FILE 810\n//*           utility for pre-formatting datasets, rather than a    *   FILE 810\n//*           data viewer.                                          *   FILE 810\n//*                                                                 *   FILE 810\n//*           This package now has a built-in code disassembler.    *   FILE 810\n//*                                                                 *   FILE 810\n//*           email:  <Richard.L.Rice@conocophillips.com>           *   FILE 810\n//*                                                                 *   FILE 810\n//*           New shipment of files (02/2010) marked as 1.02 in     *   FILE 810\n//*           the ISPF stats.                                       *   FILE 810\n//*                                                                 *   FILE 810\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISASM": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00b6b6\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 25142, "newlines": 25142, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "DOC": {"ttr": 10761, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x04\\xbf\\x04\\xbf\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 1215, "newlines": 1215, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "FORMATS": {"ttr": 11273, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x01E\\x01E\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 325, "newlines": 325, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "ISPPLIB": {"ttr": 11525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x0b$\\x0b$\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 2852, "newlines": 2852, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "JCL": {"ttr": 12554, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x03\\xbb\\x03\\xbb\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 955, "newlines": 955, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "MACS": {"ttr": 13062, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x11\\x94\\x11\\x94\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 4500, "newlines": 4500, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "OPTS": {"ttr": 14856, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x00\\x06\\x00\\x06\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SMF": {"ttr": 14858, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x11\\x01/\\x01\\x11\\x01/\\x003B\\x95B\\x95\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2011-01-12T00:00:00", "modifydate": "2011-01-12T00:33:00", "lines": 17045, "newlines": 17045, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SMGR": {"ttr": 21769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\t\\x11\\t\\x11\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 2321, "newlines": 2321, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SOURCE": {"ttr": 22791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\xa3\\xed\\xa3\\xed\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 41965, "newlines": 41965, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "STORAGE": {"ttr": 39940, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x004&4&\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 13350, "newlines": 13350, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "USERFMT": {"ttr": 45318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x10\\x04_\\x01\\x10\\x04_!\\x00\\x0c9\\x0c9\\x00\\x00\\xd6\\xd5\\xe2\\xc3\\xd9\\xc5\\xd5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-14T00:00:00", "modifydate": "2010-02-14T21:00:00", "lines": 3129, "newlines": 3129, "modlines": 0, "user": "ONSCREN"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT810/FILE810.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT810", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}