* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSVRAW                                                *
*                                                                     *
*  Build main raw VTOC                                                *
*                                                                     *
* ------------------------------------------------------------------- *
OSVRAW   CSECT
OSVRAW   AMODE 31
OSVRAW   RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSVRAW,R15
         B     INIT0000
MODID    DC    CL8'OSVRAW'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSVRAWEND-OSVRAW)
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         USING DS1FMTID,SESS_DSCB             DEFINE BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LA    R9,2048(,R10)
         LA    R9,2048(,R9)
         DROP  R15
         USING OSVRAW,R10,R9                  DEFINE BASE
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0020
         ICM   R2,15,SESS_DXD_ADDR
         BNZ   INIT0010
         LA    R0,OSVRAW_WORK_L
         ST    R0,SESS_DXD_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_DXD_ADDR
         LR    R2,R1
         LR    R0,R1
         LA    R1,OSVRAW_WORK_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
INIT0010 DS    0H
         ST    R13,4(,R2)                     SAVE R13
         ST    R2,8(,R13)                     CHAIN SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING OSVRAW_WORK,R13                DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY1
         L     R5,SESS_IO_AREA                I/O AREA ADDRESS
         ST    R5,DSPCREQ_RECORD_ADDR
         MVI   WORK_HYPEN_1,C'-'
         MVI   WORK_HYPEN_2,C'-'
         MVC   SPF_VOLSER,SESS_VOLSER
         MVC   COMM_MSG_CSECT,MODID
         MVI   COMM_MSG_ID,0
         LA    R1,DATASPACE_1                 USE DATA SPACE 1
         ST    R1,DSPCREQ_DATASPACE
         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC         VTOC INFO?
         BNE   EXIT0000                               NO
         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_DSN
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         MVC   SESS_DISP_PANEL,VRAW_PANEL
         LA    R1,SESS_DISP_PANEL
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15
         ST    R0,WORK_VDATA1_LENGTH
         ST    R1,WORK_VDATA1_ADDR
         MVC   WORK_VWIDTH,SPF_VWIDTH
         MVC   WORK_VDEPTH,SPF_VDEPTH
         LA    R1,SESS_DISP_PANEL
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15
         ST    R0,WORK_VDATA2_LENGTH
         ST    R1,WORK_VDATA2_ADDR
         B     EXIT0000
INIT0020 DS    0H
         ICM   R15,15,SESS_DXD_ADDR
         BZ    ERR0030
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         ITRACE ID=ENTRY2
         XC    WORK_RC,WORK_RC
         L     R5,SESS_IO_AREA                I/O AREA ADDRESS
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL
         BE    EXIT0000
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    CLEAN000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=1ST_RECD,                                           +
               DATA1=(DATASPACE_1_DISPLAY_FIRST_RECORD,4)
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
* ------------------------------------------------------------------- *
*        Clear VDATA                                                  *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         L     R0,WORK_VDATA1_ADDR
         L     R1,WORK_VDATA1_LENGTH
         ITRACE ID=CLRVDATA,                                           +
               RDATA1=R0,                                              +
               RDATA2=R1
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R7,WORK_VDATA1_ADDR                  BUFFER ADDRESS
         L     R6,WORK_VDEPTH                       NUMBER OF LINES
         XC    WORK_LINES,WORK_LINES                RESET NBR OF LINES
* ------------------------------------------------------------------- *
*        "Retrieve" records and build display                         *
* ------------------------------------------------------------------- *
MAIN0020 DS    0H
         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC       VTOC INFO?
         BNE   ERR0040                              NO
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD
         BH    MAIN0040                             END OF RECORDS
         ITRACE ID=GET_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DATASPACE_1_LAST_RECORD,4)
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    MAIN0030
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0010
         ITRACE ID=RECORD,                                             +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         MVC   0(MENU_L,R7),MENU
         USING MENU,R7
         MVC   MENU_DSN,1(R5)
         UNPK  WORK_WORK_2(11),DSPCREQ_CCHHR(6)
         TR    WORK_WORK_2(10),COMM_HEXCHAR
         MVC   MENU_CYLINDER,WORK_WORK_2+0
         MVC   MENU_HEAD,WORK_WORK_2+4
         MVC   MENU_RECORD,WORK_WORK_2+8
         DROP  R7
         LH    R1,WORK_LINES
         LA    R1,1(,R1)
         STH   R1,WORK_LINES
         A     R7,SPF_VWIDTH
         BCT   R6,MAIN0030
         B     MAIN0040
MAIN0030 DS    0H
         L     R1,DSPCREQ_RECORD_NBR
         A     R1,F1
         ST    R1,DSPCREQ_RECORD_NBR
         B     MAIN0020
* ------------------------------------------------------------------- *
*        DISPLAY                                                      *
* ------------------------------------------------------------------- *
MAIN0040 DS    0H
         ITRACE ID=DISPLAY
         NI    WORK_FLAGS,255-$LINE_CMD
         MVC   SESS_DISP_PANEL,VRAW_PANEL
         MVC   SESS_DISP_VDATA_ADDR,WORK_VDATA1_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,WORK_VDATA1_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15                        LINK TO OSDISP
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS
         BNE   EXIT0000                       NEW FORMAT SELECTED
         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?
         BNE   EXIT0000                       YES
         OC    SESS_RC,SESS_RC                RC = 0?
         BZ    MAIN0045                       YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*        CHECK FOR LINE COMMAND(S)                                    *
* ------------------------------------------------------------------- *
MAIN0045 DS    0H
         L     R7,WORK_VDATA1_ADDR
         USING MENU,R7
         LH    R6,WORK_LINES                  NUMBER OF LINES
         L     R4,DATASPACE_1_DISPLAY_FIRST_RECORD
MAIN0050 DS    0H
         OC    MENU_SELECT,C' '
         CLI   MENU_SELECT,C' '               SELECTED?
         BE    MAIN0060                       NO
         ST    R4,DSPCREQ_RECORD_NBR
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0010
         USING VTOC_DATA,R5                   DEFINE BASE
         SR    R0,R0
         ICM   R0,3,DSPCREQ_CCHHR
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   WORK_CYLINDER,WORK_WORK_1+2
         ICM   R0,3,DSPCREQ_CCHHR+2
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   WORK_HEAD,WORK_WORK_1+2
         SR    R0,R0
         IC    R0,DSPCREQ_CCHHR+4
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   WORK_RECORD,WORK_WORK_1+3
         CLI   DS1FMTID,C'1'                  FORMAT 1?
         BE    MAIN1000                       YES
         CLI   DS1FMTID,C'3'                  FORMAT 3?
         BE    MAIN3000                       YES
         CLI   DS1FMTID,C'4'                  FORMAT 4?
         BE    MAIN4000                       YES
         CLI   DS1FMTID,C'5'                  FORMAT 5?
         BE    MAIN5000                       YES
         DC    H'0'
MAIN0060 DS    0H
         A     R7,SPF_VWIDTH                  NEXT LINE
         LA    R4,1(,R4)                      NEXT RECORD NBR
         BCT   R6,MAIN0050                    LOOP
         TM    WORK_FLAGS,$LINE_CMD
         BO    MAIN0040
         DROP  R7
* ------------------------------------------------------------------- *
*        Check for scrolling                                          *
* ------------------------------------------------------------------- *
MAIN0070 DS    0H
         ITRACE ID=CMDS,                                               +
               DATA1=SPF_ZVERB,                                        +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'B'                 BOTTOM?
         BE    MAIN0090                       YES
         CLI   SPF_ZVERB,C'D'                 DOWN?
         BE    MAIN0130                       YES
         CLI   SPF_ZVERB,C'T'                 TOP?
         BE    MAIN0150                       YES
         CLI   SPF_ZVERB,C'U'                 UP?
         BE    MAIN0160                       YES
         OC    SPF_ZCMD,COMM_BLANKS           'TRANSLATE' TO UPPER CASE
         CLC   SPF_ZCMD,COMM_BLANKS           ANY COMMAND?
         BE    MAIN0000                       NO
         ITRACE ID=PRI_CMD,                                            +
               DATA1=SPF_ZCMD+00,                                      +
               DATA2=SPF_ZCMD+08
         SR    R3,R3                          CLEAR REGISTER
         ICM   R3,3,COMM_OPERANDS_NBR
         BZ    MAIN0040                       NO OPERANDS
         CLC   OPERAND_01_LENGTH,H4           FOUR BYTES?
         BNE   MAIN0080
         ICM   R2,15,OPERAND_01_ADDRESS
         CLC   =C'SORT ',0(R2)                SORT?
         BE    MAIN0200
MAIN0080 DS    0H
         MVC   SPF_MSG_1(EMSG_03_L),EMSG_03
         B     MAIN0040
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0090 DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD
         L     R1,DATASPACE_1_LAST_RECORD
         S     R1,WORK_VDEPTH                 MINUS SCREEN DEPTH
         BH    MAIN0100
         LA    R1,1                           FORCE RECORD 1
         B     MAIN0110
MAIN0100 DS    0H
         LA    R1,1(R1)                       PLUS 1
MAIN0110 DS    0H
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE STARTING RECd D
         B     MAIN0000                       REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0130 DS    0H
         ITRACE ID=DOWN
         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                    MAX?
         BE    MAIN0090                             YES
         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD  RECORD DISPLAYED
         A     R1,SPF_ZSCROLLN                      PLUS SCROLL AMOUNT
         C     R1,DATASPACE_1_LAST_RECORD           BEYOND END OF DATA?
         BH    MAIN0140                             YES
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE RECD NBR
         B     MAIN0000                             REBUILD EVERYTHING
MAIN0140 DS    0H
         MVC   SPF_MSG_1(EMSG_01_L),EMSG_01
         B     MAIN0000                        REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         ITRACE ID=TOP
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD
        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD
         B     MAIN0000                       REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0160 DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    MAIN0150                            YES
         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD RECORD DISPLAYED
         S     R1,SPF_ZSCROLLN                     MINUS SCROLL AMOUNT
         BL    MAIN0150                            LIMIT TO 'TOP'
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE RECORD NUMBER
         B     MAIN0000                            REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         CLC   COMM_OPERANDS_NBR,H2           CORRECT NBR OF OPERANDS?
         BH    MAIN0240                       TOO MANY
         ICM   R2,15,OPERAND_02_ADDRESS
         CLC   =C'DSN',0(R2)                  SORT BY DSN?
         BE    MAIN0210                       YES
         CLC   =C'NAME',0(R2)                 SORT BY DSN?
         BE    MAIN0210                       YES
         CLC   =C'ADDR',0(R2)                 SORT BY ADDR
         BE    MAIN0220                       YES
         CLC   =C'CCHHR',0(R2)                SORT BY ADDR
         BE    MAIN0220                       YES
         MVI   COMM_MSG_ID+1,1
         B     MAIN0250
MAIN0210 DS    0H
         ITRACE ID=SORT_DSN
         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_DSN
         B     MAIN0230
MAIN0220 DS    0H
         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_CCHHR
MAIN0230 DS    0H
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         MVC   SPF_ZCMD,COMM_BLANKS
         B     MAIN0000
MAIN0240 DS    0H
         MVI   COMM_MSG_ID+1,2
MAIN0250 DS    0H
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         B     MAIN0000
* ------------------------------------------------------------------- *
*        Format 1 records                                             *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=FORMAT_1
         ST    R6,WORK_SAVE_R6
         ST    R7,WORK_SAVE_R7
         L     R0,WORK_VDATA2_ADDR            INITIALIZE VDATA
         L     R1,WORK_VDATA2_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         L     R7,WORK_VDATA2_ADDR
         L     R6,SPF_VDEPTH
         L     R1,A_MSG_101
         MVC   0(MSG_101_L,R7),0(r1)
         USING MSG_101,R7
         MVC   MSG_101_ADDRESS,WORK_DISK_ADDRESS
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         ITRACE ID=MSG_102
         L     R1,A_MSG_102
         MVC   0(MSG_102_L,R7),0(R1)
         USING MSG_102,R7
         MVC   MSG_102_DSN,DS1DSNAM
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         ITRACE ID=MSG_103
         L     R1,A_MSG_103
         MVC   0(MSG_103_L,R7),0(R1)
         USING MSG_103,R7
         CLI   DS1DSSN,C' '
         BL    MAIN1010
         MVC   MSG_103_VOLSER,DS1DSSN
         SR    R1,R1
         ICM   R1,3,DS1VOLSQ
         CVD   R1,COMM_DWORD
         ED    MSG_103_VOLSEQ,COMM_DWORD+5
         DROP  R7
MAIN1010 DS    0H
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         ITRACE ID=MSG_104
         L     R1,A_MSG_104
         MVC   0(MSG_104_L,R7),0(R1)
         USING MSG_104,R7
         OC    DS1CREDT,DS1CREDT
         BZ    MAIN1020
         SR    R1,R1
         IC    R1,DS1CREDT
         CVD   R1,COMM_DWORD
         AP    COMM_DWORD,P1900
         MVC   WORK_WORK_1(6),EDIT_WORD_1
         ED    WORK_WORK_1(6),COMM_DWORD+5
         MVC   MSG_104_CREATE(4),WORK_WORK_1+2
         MVI   MSG_104_CREATE+4,C'.'
         ICM   R1,3,DS1CREDT+1
         CVD   R1,COMM_DWORD
         MVC   WORK_WORK_1(6),EDIT_WORD_1
         ED    WORK_WORK_1(6),COMM_DWORD+5
         MVC   MSG_104_CREATE+5(3),WORK_WORK_1+3

MAIN1020 DS    0H
         ITRACE ID=MAIN1020
         OC    DS1EXPDT,DS1EXPDT
         BZ    MAIN1030
         SR    R1,R1
         IC    R1,DS1EXPDT
         CVD   R1,COMM_DWORD
         AP    COMM_DWORD,P1900
         MVC   WORK_WORK_1(6),EDIT_WORD_1
         ED    WORK_WORK_1(6),COMM_DWORD+5
         MVC   MSG_104_EXPIRE(4),WORK_WORK_1+2
         MVI   MSG_104_EXPIRE+4,C'.'
         ICM   R1,3,DS1EXPDT+1
         CVD   R1,COMM_DWORD
         MVC   WORK_WORK_1(6),EDIT_WORD_1
         ED    WORK_WORK_1(6),COMM_DWORD+5
         MVC   MSG_104_EXPIRE+5(3),WORK_WORK_1+3

MAIN1030 DS    0H
         ITRACE ID=MAIN1030
         OC    DS1REFD,DS1REFD
         BZ    MAIN1040
         SR    R1,R1
         IC    R1,DS1REFD
         CVD   R1,COMM_DWORD
         AP    COMM_DWORD,P1900
         MVC   WORK_WORK_1(6),EDIT_WORD_1
         ED    WORK_WORK_1(6),COMM_DWORD+5
         MVC   MSG_104_REF(4),WORK_WORK_1+2
         MVI   MSG_104_REF+4,C'.'
         ICM   R1,3,DS1REFD+1
         CVD   R1,COMM_DWORD
         MVC   WORK_WORK_1(6),EDIT_WORD_1
         ED    WORK_WORK_1(6),COMM_DWORD+5
         MVC   MSG_104_REF+5(3),WORK_WORK_1+3
         OC    DS1REFD,DS1REFD
         DROP  R7

MAIN1040 DS    0H
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         ITRACE ID=MSG_105
         L     R1,A_MSG_105
         MVC   0(MSG_105_L,R7),0(R1)
         USING MSG_105,R7
         LA    R1,DSORG_TABLE
         USING DSORG_DSECT,R1
MAIN1050 DS    0H
         CLI   0(R1),X'FF'
         BE    MAIN1060
         CLC   DS1DSORG,DSORG_CODE
         BE    MAIN1060
         LA    R1,DSORG_DSECT_L(,R1)
         B     MAIN1050
MAIN1060 DS    0H
         ITRACE ID=MAIN1060,                                           +
               DATA1=(DSORG_OPTS,4),                                   +
               DATA2=(DSORG_DESCRIPTION,4)
         MVC   WORK_OPTS,DSORG_OPTS
         MVC   MSG_105_DSORG,DSORG_DESCRIPTION
         DROP  R1
         LA    R1,RECFM_TABLE
         USING RECFM_DSECT,R1
MAIN1070 DS    0H
         CLI   0(R1),X'FF'
         BE    MAIN1080
         CLC   DS1RECFM,RECFM_CODE
         BE    MAIN1080
         LA    R1,RECFM_DSECT_L(,R1)
         B     MAIN1070
MAIN1080 DS    0H
         ITRACE ID=RECFM,                                              +
               DATA1=(RECFM_CODE,4),                                   +
               DATA2=(RECFM_DESCRIPTION,4)
         MVC   MSG_105_RECFM,RECFM_DESCRIPTION
         SR    R1,R1
         ICM   R1,3,DS1LRECL
         CVD   R1,COMM_DWORD
         ED    MSG_105_LRECL,COMM_DWORD+5
         ICM   R1,3,DS1BLKL
         CVD   R1,COMM_DWORD
         ED    MSG_105_BLKL,COMM_DWORD+5
         DROP  R1,R7
         A     R7,WORK_VWIDTH
         BCTR  R6,0

         ITRACE ID=MSG_106
         L     R1,A_MSG_106
         MVC   0(MSG_106_L,R7),0(R1)
         USING MSG_106,R7
         SR    R1,R1
         IC    R1,DS1KEYL
         CVD   R1,COMM_DWORD
         ED    MSG_106_KEYL,COMM_DWORD+5
         ICM   R1,3,DS1RKP
         CVD   R1,COMM_DWORD
         ED    MSG_106_RKP,COMM_DWORD+5
         DROP  R7

         ITRACE ID=MSG_107
         A     R7,WORK_VWIDTH
         BCTR  R6,0
         L     R1,A_MSG_107
         MVC   0(MSG_107_L,R7),0(R1)
         USING MSG_107,R7
         UNPK  WORK_WORK_1(3),DS1FLAG1(2)
         TR    WORK_WORK_1(2),COMM_HEXCHAR
         MVC   MSG_107_CODE,WORK_WORK_1
         LA    R1,FLAG1_TABLE
         USING FLAG1_DSECT,R1
         SR    R15,R15
MAIN1090 DS    0H
         CLI   FLAG1_CODE,X'FF'
         BE    MAIN1110
         IC    R15,FLAG1_CODE
         EX    R15,FLAG1_TM
         BNO   MAIN1100
         MVC   MSG_107_DESC,FLAG1_DESCRIPTION
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN1100 DS    0H
         LA    R1,FLAG1_DSECT_L(,R1)
         B     MAIN1090
MAIN1110 DS    0H
         DROP  R1,R7

         A     R7,WORK_VWIDTH
         BCTR  R6,0
         ITRACE ID=MSG_108
         L     R1,A_MSG_108
         MVC   0(MSG_108_L,R7),0(R1)
         USING MSG_108,R7
         UNPK  WORK_WORK_1(3),DS1SMSFG(2)
         TR    WORK_WORK_1(2),COMM_HEXCHAR
         MVC   MSG_108_CODE,WORK_WORK_1
         LA    R1,SMS_TABLE
         USING SMS_DSECT,R1
         SR    R15,R15
MAIN1120 DS    0H
         CLI   SMS_CODE,X'FF'
         BE    MAIN1140
         IC    R15,SMS_CODE
         EX    R15,SMS_TM
         BNO   MAIN1130
         MVC   MSG_108_DESC,SMS_DESCRIPTION
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN1130 DS    0H
         LA    R1,SMS_DSECT_L(,R1)
         B     MAIN1120
         DROP  R1,R7

MAIN1140 DS    0H
         A     R7,WORK_VWIDTH
         BCTR  R6,0
         ITRACE ID=MSG_109
         L     R1,A_MSG_109
         MVC   0(MSG_109_L,R7),0(R1)
         USING MSG_109,R7
         UNPK  WORK_WORK_1(3),DS1DSIND(2)
         TR    WORK_WORK_1(2),COMM_HEXCHAR
         MVC   MSG_109_CODE,WORK_WORK_1
         LA    R1,DSIND_TABLE
         USING DSIND_DSECT,R1
         SR    R15,R15
MAIN1150 DS    0H
         CLI   DSIND_CODE,X'FF'
         BE    MAIN1170
         IC    R15,DSIND_CODE
         EX    R15,DSIND_TM
         BNO   MAIN1160
         MVC   MSG_109_DESC,DSIND_DESCRIPTION
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN1160 DS    0H
         LA    R1,DSIND_DSECT_L(,R1)
         B     MAIN1150
MAIN1170 DS    0H
         TM    DS1DSIND,X'10'
         BNO   MAIN1200
         TM    DS1DSIND,X'04'
         BO    MAIN1180
         MVC   MSG_109_DESC,READ_WRITE_PROTECTED
         B     MAIN1190
MAIN1180 DS    0H
         MVC   MSG_109_DESC,WRITE_PROTECTED
MAIN1190 DS    0H
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN1200 DS    0H
         DROP  R1,R7

         ITRACE ID=MSG_110
         L     R1,A_MSG_110
         MVC   0(MSG_110_L,R7),0(R1)
         USING MSG_110,R7
         UNPK  WORK_WORK_1(3),DS1OPTCD(2)
         TR    WORK_WORK_1(2),COMM_HEXCHAR
         MVC   MSG_110_CODE,WORK_WORK_1
         ICM   R1,15,WORK_OPTS
         BZ    MAIN1330
         USING OPTCD_DSECT,R1
         SR    R15,R15
MAIN1310 DS    0H
         CLI   OPTCD_CODE,X'FF'
         BE    MAIN1330
         IC    R15,OPTCD_CODE
         EX    R15,OPTCD_TM
         BNO   MAIN1320
         MVC   MSG_110_DESC,OPTCD_DESCRIPTION
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN1320 DS    0H
         LA    R1,OPTCD_DSECT_L(,R1)
         B     MAIN1310
         DROP  R1,R7

MAIN1330 DS    0H
         ITRACE ID=MSG_111
         L     R1,A_MSG_111
         MVC   0(MSG_111_L,R7),0(R1)
         USING MSG_111,R7
         SR    R1,R1
         ICM   R1,7,DS1SCAL3
         CVD   R1,COMM_DWORD
         ED    MSG_111_VALUE,COMM_DWORD+4
         LA    R1,SCAL1_TABLE
         USING SCAL1_DSECT,R1
MAIN1340 DS    0H
         CLI   SCAL1_CODE,X'FF'
         BE    MAIN1360
         SR    R15,R15
         IC    R15,SCAL1_CODE
         EX    R15,SCAL1_TM
         BO    MAIN1350
         LA    R1,SCAL1_DSECT_L(,R1)
         B     MAIN1340
MAIN1350 DS    0H
         MVC   MSG_111_DESC,SCAL1_DESCRIPTION
         A     R7,WORK_VWIDTH
         BCTR  R6,0

         DROP  R1,R7

MAIN1360 DS    0H
         A     R7,WORK_VWIDTH
         BCTR  R6,0
         TM    DS1SCAL1,DS1EXT
         BNO   MAIN1400
         ITRACE ID=MSG_112
         L     R1,A_MSG_112
         MVC   0(MSG_112_L,R7),0(R1)
         USING MSG_112,R7
         ICM   R1,3,DS1SCXTV
         CVD   R1,COMM_DWORD
         ED    MSG_112_VALUE,COMM_DWORD+5
         LA    R1,SCXTF_TABLE
         USING SCXTF_DSECT,R1
MAIN1370 DS    0H
         CLI   SCXTF_CODE,X'FF'
         BE    MAIN1390
         CLC   SCXTF_CODE,DS1SCXTF
         BE    MAIN1380
         LA    R1,SCXTF_DSECT_L(,R1)
         B     MAIN1370
MAIN1380 DS    0H
         MVC   MSG_112_DESC,SCXTF_DESCRIPTION
         DROP  R1,R7

MAIN1390 DS    0H
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN1400 DS    0H
         ITRACE ID=MSG_113
         L     R1,A_MSG_113
         MVC   0(MSG_113_L,R7),0(R1)
         USING MSG_113,R7
         OC    DS1PTRDS,DS1PTRDS
         BZ    MAIN1410
         UNPK  WORK_WORK_2(11),DS1PTRDS(6)
         TR    WORK_WORK_2,COMM_HEXCHAR
         MVC   MSG_113_CCHHR+0(4),WORK_WORK_2+0
         MVI   MSG_113_CCHHR+4,C'-'
         MVC   MSG_113_CCHHR+5(4),WORK_WORK_2+4
         MVI   MSG_113_CCHHR+9,C'-'
         MVC   MSG_113_CCHHR+10(2),WORK_WORK_2+8
         B     MAIN1420
MAIN1410 DS    0H
         MVC   MSG_113_CCHHR(L'NONE),NONE
MAIN1420 DS    0H
         A     R7,SPF_VWIDTH
         BCTR  R6,0
         A     R7,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_EXTENT_HEADING
         MVC   0(EXTENT_HEADING_L,R7),0(R1)
         A     R7,SPF_VWIDTH
         BCTR  R6,0

         LA    R1,DS1EXT1                     1ST EXTENT
         LA    R2,3                           NBR OF EXTENTS
         BAL   R15,XTNT0000
         B     MAIN6000                       DISPLAY DATA

FLAG1_TM TM    DS1FLAG1,0
SMS_TM   TM    DS1SMSFG,0
DSIND_TM TM    DS1DSIND,0
OPTCD_TM TM    DS1OPTCD,0
SCAL1_TM TM    DS1SCAL1,0
* ------------------------------------------------------------------- *
*        FORMAT 3 RECORDS                                             *
* ------------------------------------------------------------------- *
MAIN3000 DS    0H
         ITRACE ID=FORMAT_3
         ST    R6,WORK_SAVE_R6
         ST    R7,WORK_SAVE_R7
         L     R7,WORK_VDATA2_ADDR
         L     R6,SPF_VDEPTH
         L     R1,A_MSG_301
         MVC   0(MSG_301_L,R7),0(R1)
         USING MSG_301,R7
         MVC   MSG_301_ADDRESS,WORK_DISK_ADDRESS
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0
         A     R7,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_EXTENT_HEADING
         MVC   0(EXTENT_HEADING_L,R7),0(R1)
         A     R7,SPF_VWIDTH
         BCTR  R6,0

         LA    R1,DS3EXTNT                    1ST EXTENT
         LA    R2,4                           NBR OF EXTENTS
         BAL   R15,XTNT0000

         LA    R1,DS3ADEXT                    1ST EXTENT
         LA    R2,9                           NBR OF EXTENTS
         BAL   R15,XTNT0000
         B     MAIN6000
* ------------------------------------------------------------------- *
*        FORMAT 4 RECORDS                                             *
* ------------------------------------------------------------------- *
MAIN4000 DS    0H
         ITRACE ID=FORMAT_4
         ST    R6,WORK_SAVE_R6
         ST    R7,WORK_SAVE_R7
         L     R7,WORK_VDATA2_ADDR
         L     R6,SPF_VDEPTH
         L     R1,A_MSG_401
         MVC   0(MSG_401_L,R7),0(R1)
         USING MSG_401,R7
         MVC   MSG_401_ADDRESS,WORK_DISK_ADDRESS
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_402
         MVC   0(MSG_402_L,R7),0(R1)
         USING MSG_402,R7
         UNPK  WORK_WORK_1(9),DS4HCCHH(5)
         TR    WORK_WORK_1(8),COMM_HEXCHAR
         MVC   MSG_402_CCHH+0(4),WORK_WORK_1+0
         MVI   MSG_402_CCHH+4,C'-'
         MVC   MSG_402_CCHH+5(4),WORK_WORK_1+4
         SR    R1,R1
         ICM   R1,3,DS4NOATK
         CVD   R1,COMM_DWORD
         ED    MSG_402_AVAIL,COMM_DWORD+5
         A     R7,WORK_VWIDTH
         BCTR  R6,R0
         DROP  R7

         L     R1,A_MSG_403
         MVC   0(MSG_403_L,R7),0(R1)
         USING MSG_403,R7
         UNPK  WORK_WORK_1(3),DS4VTOCI(2)
         TR    WORK_WORK_1(2),COMM_HEXCHAR
         MVC   MSG_403_CODE,WORK_WORK_1
         LA    R1,VTOCI_TABLE
         USING VTOCI_DSECT,R1
MAIN4010 DS    0H
         CLI   0(R1),X'FF'
         BE    MAIN4030
         CLC   DS4VTOCI,VTOCI_CODE
         BNE   MAIN4020
         MVC   MSG_403_VTOCI,VTOCI_DESCRIPTION
         A     R7,WORK_VWIDTH
         BCTR  R6,0
MAIN4020 DS    0H
         LA    R1,VTOCI_DSECT_L(,R1)
         B     MAIN4010
MAIN4030 DS    0H
         DROP  R1,R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_404
         MVC   0(MSG_404_L,R7),0(R1)
         USING MSG_404,R7
         SR    R1,R1
         IC    R1,DS4NOEXT
         CVD   R1,COMM_DWORD
         ED    MSG_404_EXTENTS,COMM_DWORD+6
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_405
         MVC   0(MSG_405_L,R7),0(R1)
         USING MSG_405,R7
         UNPK  WORK_WORK_1(3),DS4SMSFG(2)
         TR    WORK_WORK_1(2),COMM_HEXCHAR
         MVC   MSG_405_CODE,WORK_WORK_1
         LA    R1,SMS_TABLE_2
         USING SMS_DSECT2,R1
MAIN4040 DS    0H
         CLI   0(R1),X'FF'
         BE    MAIN4060
         CLC   SMS_CODE2,DS4SMSFG
         BE    MAIN4050
         LA    R1,SMS_DSECT2_L(,R1)
         B     MAIN4040
MAIN4050 DS    0H
         MVC   MSG_405_DESC,SMS_DESCRIPTION2
MAIN4060 DS    0H
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_406
         MVC   0(MSG_406_L,R7),0(R1)
         USING MSG_406,R7
         SR    R1,R1
         IC    R1,DS4DEVAC
         CVD   R1,COMM_DWORD
         ED    MSG_406_CYL,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_407
         MVC   0(MSG_407_L,R7),0(R1)
         USING MSG_407,R7
         SR    R1,R1
         ICM   R1,3,DS4DSCYL
         CVD   R1,COMM_DWORD
         ED    MSG_407_CYL,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_408
         MVC   0(MSG_408_L,R7),0(R1)
         USING MSG_408,R7
         SR    R1,R1
         ICM   R1,3,DS4DSTRK
         CVD   R1,COMM_DWORD
         ED    MSG_408_TRACKS,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_409
         MVC   0(MSG_409_L,R7),0(R1)
         USING MSG_409,R7
         SR    R1,R1
         ICM   R1,3,DS4DSCYL
         MVC   WORK_HALFWORD,DS4DSTRK
         MH    R1,WORK_HALFWORD
         CVD   R1,COMM_DWORD
         ED    MSG_409_TRACKS,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_410
         MVC   0(MSG_410_L,R7),0(R1)
         USING MSG_410,R7
         SR    R1,R1
         ICM   R1,3,DS4DEVTK
         CVD   R1,COMM_DWORD
         ED    MSG_410_SIZE,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_411
         MVC   0(MSG_411_L,R7),0(R1)
         USING MSG_411,R7
         SR    R1,R1
         IC    R1,DS4DEVDT
         CVD   R1,COMM_DWORD
         ED    MSG_411_DSCBS,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_412
         MVC   0(MSG_412_L,R7),0(R1)
         USING MSG_412,R7
         SR    R1,R1
         IC    R1,DS4DEVDB
         CVD   R1,COMM_DWORD
         ED    MSG_412_BLOCKS,COMM_DWORD+5
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_413
         MVC   0(MSG_413_L,R7),0(R1)
         USING MSG_413,R7
         UNPK  WORK_WORK_2(9),DS4VTOCE+2(5)
         TR    WORK_WORK_2(8),COMM_HEXCHAR
         MVC   MSG_413_CCHH+0(4),WORK_WORK_2+0
         MVI   MSG_413_CCHH+4,C'-'
         MVC   MSG_413_CCHH+5(4),WORK_WORK_2+4
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_414
         MVC   0(MSG_414_L,R7),0(R1)
         USING MSG_414,R7
         UNPK  WORK_WORK_2(9),DS4VTOCE+6(5)
         TR    WORK_WORK_2(8),COMM_HEXCHAR
         MVC   MSG_414_CCHH+0(4),WORK_WORK_2+0
         MVI   MSG_414_CCHH+4,C'-'
         MVC   MSG_414_CCHH+5(4),WORK_WORK_2+4
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0

         B     MAIN6000
* ------------------------------------------------------------------- *
*        FORMAT 5 RECORDS                                             *
* ------------------------------------------------------------------- *
MAIN5000 DS    0H
         ITRACE ID=FORMAT_5
         ST    R6,WORK_SAVE_R6
         ST    R7,WORK_SAVE_R7
         L     R7,WORK_VDATA2_ADDR
         L     R6,SPF_VDEPTH
         L     R1,A_MSG_501
         MVC   0(MSG_501_L,R7),0(R1)
         USING MSG_501,R7
         MVC   MSG_501_ADDRESS,WORK_DISK_ADDRESS
         DROP  R7
         A     R7,WORK_VWIDTH
         BCTR  R6,R0
         A     R7,WORK_VWIDTH
         BCTR  R6,R0
         LA    R1,DS5AVEXT
         LA    R2,8
         BAL   R15,MAIN5010
         LA    R1,DS5MAVET
         LA    R2,19
         BAL   R15,MAIN5010
         B     MAIN6000

MAIN5010 DS    0H
         OC    0(5,R1),0(R1)
         BZR   R15
         L     R14,A_MSG_502
         MVC   0(MSG_502_L,R7),0(R14)
         USING MSG_502,R7
         SR    R0,R0
         ICM   R0,3,0(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_502_FIRST,WORK_WORK_1+1
         ICM   R0,3,2(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_502_CYL,WORK_WORK_1+1
         SR    R0,R0
         IC    R0,4(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_502_TRACKS,WORK_WORK_1+1
         A     R7,SPF_VWIDTH
         BCT   R6,MAIN5020
         BR    R15
MAIN5020 DS    0H
         LA    R1,5(,R1)
         BCT   R2,MAIN5010
         BR    R15
         DROP  R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN6000 DS    0H
         ITRACE ID=DISPLAY2
         MVC   SESS_DISP_PANEL,VRAW_PANEL
         MVC   SESS_DISP_VDATA_ADDR,WORK_VDATA2_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,WORK_VDATA2_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15                        LINK TO OSDISP
MAIN6010 DS    0H
         ITRACE ID=DISP2_RC,                                           +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         L     R6,WORK_SAVE_R6
         L     R7,WORK_SAVE_R7
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
XTNT0000 DS    0H
         CLI   0(R1),0
         BER   R15
         L     R14,A_EXTENT_MSG
         MVC   0(EXTENT_MSG_L,R7),0(R14)
         USING EXTENT_MSG,R7
         UNPK  EXTENT_TYPE(3),0(2,R1)
         TR    EXTENT_TYPE,COMM_HEXCHAR
         MVI   EXTENT_TYPE+2,C' '
         SR    R0,R0
         IC    R0,1(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   EXTENT_SEQUENCE,WORK_WORK_1+3
         ICM   R0,3,2(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   EXTENT_LOW_CC,WORK_WORK_1+2
         ICM   R0,3,4(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   EXTENT_LOW_HH,WORK_WORK_1+2
         ICM   R0,3,6(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   EXTENT_HIGH_CC,WORK_WORK_1+2
         ICM   R0,3,8(R1)
         CVD   R0,COMM_DWORD
         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   EXTENT_HIGH_HH,WORK_WORK_1+2
         A     R7,SPF_VWIDTH
         BCT   R6,XTNT0010
         BR    R15
XTNT0010 DS    0H
         LA    R1,10(,R1)
         BCT   R2,XTNT0000
         BR    R15
         DROP  R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'0',C'Error from OSDSPACE'
ERR0030  DS    0H
         DC    H'2'
ERR0040  DS    0H
         MVC   SPF_MSG_1(EMSG_04_L),EMSG_04
         B     MAIN0040
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R0,WORK_VDATA1_LENGTH
         L     R1,WORK_VDATA1_ADDR
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        FREE VDATA1
         L     R0,WORK_VDATA2_LENGTH
         L     R1,WORK_VDATA2_ADDR
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        FREE VDATA2
         ITRACE ID=CLEAN_UP
         LA    R0,OSVRAW_WORK_L               WORK AREA SIZE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(,R13)                    RESTORE R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_DXD_ADDR,SESS_DXD_ADDR
         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,WORK_RC                    RETURN CODE
         L     R13,4(,R13)                    RESTORE R13
EXIT0010 DS    0H
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                LTORG

A_MSG_101       DC    A(MSG_101)
A_MSG_102       DC    A(MSG_102)
A_MSG_103       DC    A(MSG_103)
A_MSG_104       DC    A(MSG_104)
A_MSG_105       DC    A(MSG_105)
A_MSG_106       DC    A(MSG_106)
A_MSG_107       DC    A(MSG_107)
A_MSG_108       DC    A(MSG_108)
A_MSG_109       DC    A(MSG_109)
A_MSG_110       DC    A(MSG_110)
A_MSG_111       DC    A(MSG_111)
A_MSG_112       DC    A(MSG_112)
A_MSG_113       DC    A(MSG_113)

A_MSG_301       DC    A(MSG_301)

A_MSG_401       DC    A(MSG_401)
A_MSG_402       DC    A(MSG_402)
A_MSG_403       DC    A(MSG_403)
A_MSG_404       DC    A(MSG_404)
A_MSG_405       DC    A(MSG_405)
A_MSG_406       DC    A(MSG_406)
A_MSG_407       DC    A(MSG_407)
A_MSG_408       DC    A(MSG_408)
A_MSG_409       DC    A(MSG_409)
A_MSG_410       DC    A(MSG_410)
A_MSG_411       DC    A(MSG_411)
A_MSG_412       DC    A(MSG_412)
A_MSG_413       DC    A(MSG_413)
A_MSG_414       DC    A(MSG_414)

A_MSG_501       DC    A(MSG_501)
A_MSG_502       DC    A(MSG_502)

A_EXTENT_HEADING DC   A(EXTENT_HEADING)
A_EXTENT_MSG     DC   A(EXTENT_MSG)

F1              DC    F'1'
H2              DC    H'2'
H4              DC    H'4'

VRAW_PANEL      DC    CL8'OSVRAW '
NONE            DC    C'NONE'

READ_WRITE_PROTECTED  DC CL40'READ/WRITE PASSWORD'
WRITE_PROTECTED       DC CL40'WRITE PASSWORD'

EDIT_WORD_1     DC    X'F02020202120'

P1900           DC    P'1900'

EMSG_01         DC    C'At bottom of data'
EMSG_01_L       EQU   *-EMSG_01

EMSG_02         DC    C'At top of data'
EMSG_02_L       EQU   *-EMSG_02

EMSG_03         DC    C'Invalid primary command'
EMSG_03_L       EQU   *-EMSG_03

EMSG_04         DC    C'NOT VTOC DATA'
EMSG_04_L       EQU   *-EMSG_04

FLAG1_TABLE     DS    0C
                DC    AL1(DS1COMPR),CL20'Compressable extend '
                DC    AL1(DS1CPOIT),CL20'Checkpointed        '
                DC    AL1(DS1EXPBY),CL20'VSE retention period'
                DC    AL1(DS1RECAL),CL20'Recalled            '
                DC    AL1(DS1LARGE),CL20'>64 K track coexist '
                DC    X'FF'

DSIND_TABLE     DS    0C
                DC    X'80',CL40'Last volume containing data'
                DC    X'40',CL40'Dataset is RACF defined'
                DC    X'20',CL40'Block length is a multiple of 8'
                DC    x'08',CL40'Modified since recall'
                DC    x'02',CL40'Opened for update since backup'
                DC    x'01',CL40'Secure checkpoint data set'
                DC    X'FF'

SMS_TABLE       DS    0C
                DC    AL1(DS1SMSDS),CL20'SMS managed         '
                DC    AL1(DS1SMSUC),CL20'No BCS entry exists '
                DC    AL1(DS1REBLK),CL20'May be reblocked    '
                DC    AL1(DS1CRSDB),CL20'DADSM origin blksize'
                DC    AL1(DS1PDSE),CL20'PDSE                '
                DC    AL1(DS1STRP),CL20'Extended format     '
                DC    AL1(DS1PDSEX),CL20'HFS                 '
                DC    AL1(DS1DSAE),CL20'Extended attributes '
                DC    X'FF'

SCAL1_TABLE     DS    0C
                DC    X'C4',CL20'Contiguous cylinders'
                DC    X'C0',CL20'Cylinders'
                DC    X'84',CL20'Contiguous tracks'
                DC    X'80',CL20'Tracks'
                DC    X'44',CL20'Contiguous Blocks'
                DC    X'40',CL20'Blocks'
                DC    X'41',CL20'Blocks (rounded)'
                DC    X'FF'
                DC    X'FF'

SCXTF_TABLE     DS    0C
                DC    AL1(DS1SCAVB),CL20' blksize units     '
                DC    AL1(DS1SCMB),CL20'MB                  '
                DC    AL1(DS1SCKB),CL20'KB                  '
                DC    AL1(DS1SCUB),CL20' bytes              '
                DC    AL1(DS1SCCP1),CL20' 256 byte units    '
                DC    AL1(DS1SCCP2),CL20' 65536 byte units  '
                DC    X'FF'

DSORG_TABLE    DS    0C
               DC    AL1(DS1DSGIS),AL1(0),AL4(0),CL4'ISAM'
               DC    AL1(DS1DSGPS),AL1(0),AL4(PS_OPTS),CL4'PS'
               DC    AL1(DS1DSGPS+DS1DSGU),AL1(0),AL4(PS_OPTS),CL4'PSU'
               DC    AL1(DS1DSGDA),AL1(0),AL4(DA_OPTS),CL4'DA'
               DC    AL1(DS1DSGDA+DS1DSGU),AL1(0),AL4(DA_OPTS),CL4'DAU'
               DC    AL1(DS1DSGCX),AL1(0),AL4(0),CL4'BTAM'
               DC    AL1(DS1DSGPO),AL1(0),AL4(PS_OPTS),CL4'PO'
               DC    AL1(DS1DSGPO+DS1DSGU),AL1(0),AL4(PS_OPTS),CL4'POU'
               DC    AL1(0),AL1(DS1DSGGS),AL4(0),CL4'GS'
               DC    AL1(0),AL1(DS1DSGTX),AL4(0),CL4'TX'
               DC    AL1(0),AL1(DS1DSGTQ),AL4(0),CL4'TQ'
               DC    AL1(0),AL1(DS1ORGAM),AL4(VSAM_OPTS),CL4'VS'
               DC    AL1(DS1DSGU),AL1(DS1ORGAM),AL4(VSAM_OPTS),CL4'VSU'
               DC    AL1(0),AL1(DS1DSGTR),AL4(0),CL4'TR'
               DC    X'FF',AL1(0),AL4(0),CL4'UNKN'

RECFM_TABLE     DS    0C
                DC    AL1(DS1RECFF),CL4'F'
                DC    AL1(DS1RECFF+DS1RECFS),CL4'FS'
                DC    AL1(DS1RECFF+DS1RECFA),CL4'FA'
                DC    AL1(DS1RECFF+DS1RECMC),CL4'FM'
                DC    AL1(DS1RECFF+DS1RECFB),CL4'FB'
                DC    AL1(DS1RECFF+DS1RECFB+DS1RECFS),CL4'FBS'
                DC    AL1(DS1RECFF+DS1RECFB+DS1RECFA),CL4'FBA'
                DC    AL1(DS1RECFF+DS1RECFB+DS1RECMC),CL4'FBM'
                DC    AL1(DS1RECFV),CL4'V'
                DC    AL1(DS1RECFV+DS1RECFA),CL4'VA'
                DC    AL1(DS1RECFV+DS1RECFB),CL4'VB'
                DC    AL1(DS1RECFV+DS1RECFS),CL4'VS'
                DC    AL1(DS1RECFV+DS1RECFB+DS1RECFS),CL4'VBS'
                DC    AL1(DS1RECFV+DS1RECFB+DS1RECFA),CL4'VBA'
                DC    AL1(DS1RECFV+DS1RECFB+DS1RECMC),CL4'VBM'
                DC    AL1(DS1RECFF+DS1RECFV),CL4'U'
                DC    X'FF',CL4'UNKN'

DA_OPTS         DS    0C
                DC    X'80',CL40'Write validity check'
                DC    X'40',CL40'Track overflow'
                DC    X'20',CL40'Extended search'
                DC    X'10',CL40'Feedback'
                DC    X'08',CL40'Actual addressing'
                DC    X'04',CL40'Dynamic buffering'
                DC    X'02',CL40'Read exclusive'
                DC    X'01',CL40'Relative block addr '
                DC    X'FF'

PS_OPTS         DS    0C
                DC    X'80',CL40'Write validity check'
                DC    X'40',CL40'Allow data check'
                DC    X'20',CL40'Chained scheduling  '
                DC    X'10',CL40'VSE/OS interchange  '
                DC    X'08',CL40'Treat EOF as EOV    '
                DC    X'04',CL40'Search direct       '
                DC    X'02',CL40'User label totalling'
                DC    X'01',CL40'3800 print subsystem'
                DC    X'FF'

VSAM_OPTS       DS    0C
                DC    AL1(DS1OPTIC),CL40'Cataloged in ICF CAT'
                DC    AL1(DS1OPTBC),CL40'ICF catalog'
                DC    X'FF'

VTOCI_TABLE     DS    0C
                DC    AL1(DS4DOSBT),CL40'VSE contamination'
                DC    AL1(DS4DVTOC),CL40'INDEX was disabled'
                DC   AL1(DS4EFVLD),CL40'Extended free space management'
                DC    AL1(DS4DSTKP),CL40'VSE stacked pack'
                DC    AL1(DS4DOCVT),CL40'VSE converted VTOC'
                DC    AL1(DS4DIRF),CL40'DADSM interrupt recording'
                DC    AL1(DS4DICVT),CL40'DIRF reclaimed'
                DC    AL1(DS4IVTOC),CL40'Index created'
                DC    AL1(DS4IVTOC+DS4DOSBT),CL40'Index valid'
                DC    AL1(DS4IVTOC+DS4DOCVT+DS4DOSBT),CL40'Index valid'
                DC    X'FF'

SMS_TABLE_2     DS    0C
                DC    AL1(DS4SMS),CL40'SMS managed volume'
                DC    AL1(DS4SMSCV),CL40'SMS volume in initial state'
                DC    X'FF'
*
*             Menu
*
MENU            DS    0C
                DC    AL1($SCREEN_ATTR_INPUT)
MENU_SELECT     DC    C' '
                DC    AL1($SCREEN_ATTR_NORMAL)
                DC    C' '
MENU_DSN        DC    CL44' '
                DC    C' '
MENU_CYLINDER   DC    CL4' '
                DC    C'-'
MENU_HEAD       DC    CL4' '
                DC    C'-'
MENU_RECORD     DC    CL3' '
MENU_L          EQU   *-MENU
*
*             FORMAT 1
*
MSG_101         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    26C'-'
                DC    C' FORMAT 1 AT '
MSG_101_ADDRESS DC    CL13' '
                DC    C' '
                DC    26C'-'
MSG_101_L       EQU   *-MSG_101

MSG_102         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DSN           '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_102_DSN     DC    CL44' '
MSG_102_L       EQU   *-MSG_102

MSG_103         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'1st VOLSER    '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_103_VOLSER  DC    CL06' '
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  Vol sequence'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_103_VOLSEQ  DC    X'402020202120'
MSG_103_L       EQU   *-MSG_103

MSG_104         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Created       '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_104_CREATE  DC    CL08'-None-'
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  Expire'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_104_EXPIRE  DC    CL08'-None-'
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  Referenced'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_104_REF     DC    CL08' '
MSG_104_L       EQU   *-MSG_104

MSG_105         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DSORG       '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_105_DSORG   DC    CL04' '
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  RECFM'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_105_RECFM   DC    CL04' '
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  LRECL'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_105_LRECL   DC    X'402020202120'
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  BLKL'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_105_BLKL    DC    X'402020202120'
                DC    AL1($SCREEN_ATTR_HIGH)
MSG_105_L       EQU   *-MSG_105

MSG_106         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'KEYL'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_106_KEYL    DC    X'402020202120'
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'        RKP'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_106_RKP     DC    X'402020202120'
MSG_106_L       EQU   *-MSG_106

MSG_107         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DS1FLAG1'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_107_CODE    DC    CL2' '
                DC    CL2' '
MSG_107_DESC    DC    CL20' '
MSG_107_L       EQU   *-MSG_107

MSG_108         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DS1SMSFG'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_108_CODE    DC    CL2' '
                DC    CL2' '
MSG_108_DESC    DC    CL20' '
MSG_108_L       EQU   *-MSG_108

MSG_109         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DS1DSIND'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_109_CODE    DC    CL2' '
                DC    CL2' '
MSG_109_DESC    DC    CL40' '
MSG_109_L       EQU   *-MSG_109

MSG_110         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DS1OPTCD'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_110_CODE    DC    CL2' '
                DC    CL2' '
MSG_110_DESC    DC    CL40' '
MSG_110_L       EQU   *-MSG_110

MSG_111         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Secondary space          '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_111_VALUE   DC    X'4020202020202120'
                DC    C' '
MSG_111_DESC    DC    CL20' '
MSG_111_L       EQU   *-MSG_111

MSG_112         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Secondary space extension'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_112_VALUE   DC    X'402020202120'
MSG_112_DESC    DC    CL20' '
MSG_112_L       EQU   *-MSG_112

MSG_113         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'FORMAT_3 ADDRESS         '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_113_CCHHR   DC    CL12' '
MSG_113_L       EQU   *-MSG_113


*
*             FORMAT 3
*
MSG_301         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    26C'-'
                DC    C' FORMAT 3 AT '
MSG_301_ADDRESS DC    CL13' '
                DC    C' '
                DC    26C'-'
MSG_301_L       EQU   *-MSG_301

*
*             FORMAT 4
*
MSG_401         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    26C'-'
                DC    C' FORMAT 4 AT '
MSG_401_ADDRESS DC    CL13' '
                DC    C' '
                DC    26C'-'
MSG_401_L       EQU   *-MSG_401

MSG_402         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'CCHH of next alternate track'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_402_CCHH    DC    CL09' '
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'   Number available'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_402_AVAIL   DC    X'402020202120'
MSG_402_L       EQU   *-MSG_402

MSG_403         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'VTOC INDICATORS             '
MSG_403_CODE    DC    CL2' '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_403_VTOCI   DC    CL40' '
MSG_403_L       EQU   *-MSG_403

MSG_404         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Number of VTOC extents      '
MSG_404_EXTENTS DC    X'40202120'
MSG_404_L       EQU   *-MSG_404

MSG_405         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'SMS flags                   '
MSG_405_CODE    DC    CL2' '
                DC    C' '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_405_DESC    DC    CL40' '
MSG_405_L       EQU   *-MSG_405

MSG_406         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Alternate cylinders         '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_406_CYL     DC    X'402020202120'
MSG_406_L       EQU   *-MSG_406

MSG_407         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Total cylinders             '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_407_CYL     DC    X'402020202120'
MSG_407_L       EQU   *-MSG_407

MSG_408         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Tracks per cylinder         '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_408_TRACKS  DC    X'402020202120'
MSG_408_L       EQU   *-MSG_408

MSG_409         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Total tracks                '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_409_TRACKS  DC    X'402020202120'
MSG_409_L       EQU   *-MSG_409

MSG_410         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Track size                  '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_410_SIZE    DC    X'402020202120'

MSG_410_L       EQU   *-MSG_410

MSG_411         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'DSCBs per track             '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_411_DSCBS   DC    X'402020202120'
MSG_411_L       EQU   *-MSG_411

MSG_412         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Directory blocks per track  '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_412_BLOCKS  DC    X'402020202120'
MSG_412_L       EQU   *-MSG_412

MSG_413         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'VTOC extent  from:          '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_413_CCHH    DC    CL9' '
MSG_413_L       EQU   *-MSG_413

MSG_414         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'               to:          '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_414_CCHH    DC    CL9' '
MSG_414_L       EQU   *-MSG_414

*
*             FORMAT 5
*
MSG_501         DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    26C'-'
                DC    C' FORMAT 5 AT '
MSG_501_ADDRESS DC    CL13' '
                DC    C' '
                DC    26C'-'
MSG_501_L       EQU   *-MSG_501

MSG_502         DS    0C
MSG_502_FIRST   DC    CL5' '
                DC    CL5' '
MSG_502_CYL     DC    CL5' '
                DC    CL5' '
MSG_502_TRACKS  DC    CL5' '
MSG_502_L       EQU   *-MSG_502

EXTENT_HEADING  DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Extent type    Seq#    From          To'
                DC    AL1($SCREEN_ATTR_NORMAL)
EXTENT_HEADING_L EQU  *-EXTENT_HEADING

EXTENT_MSG      DS    0C
                DC    C'         '
EXTENT_TYPE     DC    CL2' '
                DC    C'     '
EXTENT_SEQUENCE DS    CL3' '
                DC    CL2' '
EXTENT_LOW_CC   DC    CL4' '
                DC    C'-'
EXTENT_LOW_HH   DC    CL4' '
                DC    CL5' '
EXTENT_HIGH_CC  DC    CL4' '
                DC    C'-'
EXTENT_HIGH_HH  DC    CL4' '
EXTENT_MSG_L    EQU   *-EXTENT_MSG

OSVRAWEND       EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSVRAW_WORK         DSECT
                    COPY   DXDPREF

WORK_OPTS           DS     A

WORK_SAVE_R6        DS     F
WORK_SAVE_R7        DS     F

WORK_VDATA1_ADDR    DS     A
WORK_VDATA1_LENGTH  DS     F
WORK_VDATA2_ADDR    DS     A
WORK_VDATA2_LENGTH  DS     F

WORK_VDEPTH         DS     F
WORK_VWIDTH         DS     F

WORK_RC             DS     H
WORK_LINES          DS     H
WORK_HALFWORD       DS     H

WORK_WORK_1         DS     CL10
WORK_WORK_2         DS     CL100

WORK_DISK_ADDRESS   DS     0C
WORK_CYLINDER       DS     CL4
WORK_HYPEN_1        DS     C
WORK_HEAD           DS     CL4
WORK_HYPEN_2        DS     C
WORK_RECORD         DS     CL3

WORK_FLAGS          DS     X
$LINE_CMD           EQU    X'80'

                    DSPCREQ  DSECT=NO
OSVRAW_WORK         DSECT
OSVRAW_WORK_L       EQU    *-OSVRAW_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECFM_DSECT       DSECT
RECFM_CODE        DS   X
RECFM_DESCRIPTION DS   CL4
RECFM_DSECT_L     EQU  *-RECFM_DSECT

DSORG_DSECT       DSECT
DSORG_CODE        DS   XL2
DSORG_OPTS        DS   AL4
DSORG_DESCRIPTION DS   CL4
DSORG_DSECT_L     EQU  *-DSORG_DSECT

FLAG1_DSECT       DSECT
FLAG1_CODE        DS   X
FLAG1_DESCRIPTION DS   CL20
FLAG1_DSECT_L     EQU  *-FLAG1_DSECT


SMS_DSECT         DSECT
SMS_CODE          DS   X
SMS_DESCRIPTION   DS   CL20
SMS_DSECT_L       EQU  *-SMS_DSECT

DSIND_DSECT       DSECT
DSIND_CODE        DS   X
DSIND_DESCRIPTION DS   CL40
DSIND_DSECT_L     EQU  *-DSIND_DSECT

OPTCD_DSECT       DSECT
OPTCD_CODE        DS   X
OPTCD_DESCRIPTION DS   CL40
OPTCD_DSECT_L     EQU  *-OPTCD_DSECT

SCXTF_DSECT       DSECT
SCXTF_CODE        DS   X
SCXTF_DESCRIPTION DS   CL20
SCXTF_DSECT_L     EQU  *-SCXTF_DSECT

SCAL1_DSECT       DSECT
SCAL1_CODE        DS   X
SCAL1_DESCRIPTION DS   CL20
SCAL1_DSECT_L     EQU  *-SCAL1_DSECT

VTOCI_DSECT       DSECT
VTOCI_CODE        DS   X
VTOCI_DESCRIPTION DS   CL40
VTOCI_DSECT_L     EQU  *-VTOCI_DSECT

SMS_DSECT2        DSECT
SMS_CODE2         DS   X
SMS_DESCRIPTION2  DS   CL40
SMS_DSECT2_L      EQU  *-SMS_DSECT2

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VTOC_DATA DSECT
          DS     X                    RECORD TYPE
          DS     CL44                 DSN OR FORMAT NAME
          IBMMAC VTOC=1
          ORG    IECSDSL1
          IBMMAC VTOC=3
          ORG    DS1FMTID
          IBMMAC VTOC=4
          ORG    IECSDSL1
          IBMMAC VTOC=5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSVRAW
