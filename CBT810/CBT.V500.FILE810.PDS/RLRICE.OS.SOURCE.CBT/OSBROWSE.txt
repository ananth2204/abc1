* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSBROWSE                                              *
*                                                                     *
*  Build main body                                                    *
*                                                                     *
*  "BROWSE" format.                                                   *
*                                                                     *
*  This is the default function for sequential, PDS(/E) members,      *
*  VSAM, and regular HFS files.                                       *
*                                                                     *
* ------------------------------------------------------------------- *
OSBROWSE CSECT
OSBROWSE AMODE 31
OSBROWSE RMODE ANY
         USING OSCOMM,R12
         USING OSBROWSE,R15
         B     INIT0000
MODID    DC    CL8'OSBROWSE'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(BROWSEEND-OSBROWSE)
INIT0000 DS    0H
         USING OSCOMM,R12                       DEFINE COMMON AREA BASE
         USING SESSION,R11                      DEFINE COMMON AREA BASE
         USING DS1FMTID,SESS_DSCB               DEFINE BASE
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         LA    R5,2048(,R10)
         LA    R5,2048(,R5)
         DROP  R15
         USING OSBROWSE,R10,R5                  DEFINE BASES
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
* ------------------------------------------------------------------- *
*        Determine if this is INITIAL invocation                      *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0040
* ------------------------------------------------------------------- *
*        Initialization                                               *
* ------------------------------------------------------------------- *
         OC    SESS_DXD_ADDR,SESS_DXD_ADDR
         BNZ   ERR0120
         L     R0,DXDSIZE
         ST    R0,SESS_DXD_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_DXD_ADDR
         LR    R2,R1
         LR    R0,R1
         L     R1,DXDSIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         A     R2,DXDSTART
         ST    R13,4(,R2)                        SAVE R13
         ST    R2,8(,R13)                        CHAIN SAVE AREA
         LR    R13,R2                            COPY WORK AREA ADDRESS
         USING DXDBROWS,R13                      DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY1
         XC    DXD_RC,DXD_RC
         LA    R0,DATASPACE_1
         ST    R0,DSPCREQ_DATASPACE
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE
         MVI   LOADREQ_FUNC,$LOADREQ_LOAD
         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS     DATA FROM HFS?
         BO    INIT0010                          YES
         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM    DATA FROM VSAM FILE?
         BO    INIT0020                          YES
         MVC   DXD_PANEL,OS0001                  PANEL FOR NON-VSAM
         B     INIT0030
INIT0010 DS    0H
         MVC   DXD_PANEL,OSHFS                   PANEL FOR HFS(ES)
         B     INIT0030
INIT0020 DS    0H
         MVC   DXD_PANEL,OS0008                  PANEL FOR VSAM
INIT0030 DS    0H
         ITRACE ID=VDATA
         LA    R1,DXD_PANEL                      PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN    SET VDATA FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                           GETMAIN VDATA STORAGE
         ST    R0,DXD_VDATA_LENGTH               SAVE VDATA LENGTH
         ST    R1,DXD_VDATA_ADDR                 SAVE VDATA ADDR
         MVC   DXD_VDEPTH,SPF_VDEPTH             SAVE DEPTH
         L     R0,SPF_VWIDTH
         ST    R0,DXD_VWIDTH
         SH    R0,=Y(MSG_03_L)
         ST    R0,DXD_CCHHR_VWIDTH               WIDTH IF CCHHR DISP
         L     R0,SPF_VWIDTH
         SH    R0,=Y(MSG_04_L)
         ST    R0,DXD_RBA_VWIDTH                 WIDTH IF RBA DISPLAYED
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR INITIALIZE CURSOR
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Re-establish save area and determine function                *
* ------------------------------------------------------------------- *
INIT0040 DS    0H
         ICM   R15,15,SESS_DXD_ADDR
         BZ    ERR0130
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         ITRACE ID=ENTRY2,                                             +
               DATA1=(SESS_FORMAT_FLAGS,1)
         XC    DXD_RC,DXD_RC
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL  PROCESS CONTROL STMT?
         BE    EXIT0000                           YES.. IGNORE
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP  CLEAN UP?
         BE    CLEAN000                           YES
         LA    R0,COMMAND_TABLE                   RESET COMMAND
         ST    R0,COMM_MAIN_COMMAND_TABLE
         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE
* ------------------------------------------------------------------- *
*                                                                     *
*        Format data                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0050 DS    0H
         ITRACE ID=INIT0050,                                           +
               DATA1=(SESS_KEYWORD_FLAGS,1),                           +
               DATA2=(SESS_DATA_TYPE,1)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=MAIN0000,                                           +
               DATA1=DATASPACE_1_NAME,                                 +
               DATA2=(DATASPACE_1_ALET,4)
* ------------------------------------------------------------------- *
*        Determine if any automatic formatting should be used         *
* ------------------------------------------------------------------- *
         XC    DXD_FORMATTER,DXD_FORMATTER      RESET SPECIAL FORMATTER
         L     R15,V_OSASMFMT                   ASSEMBLER FORMATTER
         ITRACE ID=TESTASM,                                            +
               RDATA1=R15                       CALLING OSASMFMT
         SR    R1,R1                            INDICATE REASON
         BALR  R14,R15                          CALL OSASMFMT
         ITRACE ID=ASM_RC,                                             +
               RDATA1=R15
         LTR   R15,R15                          ASSEMBLER LISTING?
         BNZ   MAIN0010                         NO
         MVC   DXD_FORMATTER,V_OSASMFMT         SET FORMATTER ADDRESS
* ------------------------------------------------------------------- *
*        Build display                                                *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         ITRACE ID=1STRECD,                                            +
               DATA1=(DSPCREQ_RECORD_NBR,4)
* ------------------------------------------------------------------- *
*        Initialize the VDATA buffer                                  *
* ------------------------------------------------------------------- *
MAIN0020 DS    0H
         L     R0,DXD_VDATA_ADDR                BUFFER ADDRESS
         L     R1,DXD_VDATA_LENGTH              BUFFER SIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                           INITIALIZE BUFFER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,DXD_VDATA_ADDR                BUFFER ADDRESS
         L     R7,DXD_VDEPTH                    NUMBER OF LINES
         L     R6,SESS_IO_AREA                  I/O AREA ADDRESS
         ST    R6,DSPCREQ_RECORD_ADDR
         ITRACE ID=BUILD,                                              +
               RDATA1=R7,                                              +
               RDATA2=R8
         ST    R8,DXD_SAVED_R8
* ------------------------------------------------------------------- *
*        "Retrieve" the data and build the body of the SPF panel      *
* ------------------------------------------------------------------- *
MAIN0030 DS    0H
         ITRACE ID=GET_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DATASPACE_1_LAST_RECORD,4)
         LA    R1,DSPCREQ                       DATA SPACE PARMS
         L     R15,COMM_OSDSPACE
         BALR  R14,R15                          RETRIEVE DATA
         ITRACE ID=GET_RC,                                             +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    MAIN0130                         NOT STORED
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0010
         ITRACE ID=RECORD,                                             +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         L     R2,DSPCREQ_RECORD_LENGTH
         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN
         BCTR  R1,0                             RELATIVE TO ZERO
         SR    R2,R1                            MINUS LEFT MOST COLUMN
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR
         BO    MAIN0050                         DISPLAY CCHHR
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA
         BO    MAIN0070                         DISPLAY RBA
         C     R2,DXD_VWIDTH                    GREATER THAN WIDTH?
         BNH   MAIN0040                         NO
         L     R2,DXD_VWIDTH                    LIMIT TO SCREEN WIDTH
MAIN0040 DS    0H
         ICM   R15,15,DXD_FORMATTER             ANY SPECIAL FORMATTING?
         BZ    MAIN0090                         NO
         ITRACE ID=CALL_FMT,                                           +
               RDATA1=R15
         LA    R1,DSPCREQ                       PASS DSPCREQ ADDR
         BALR  R14,R15                          CALL FORMATTER
         B     MAIN0110
* ------------------------------------------------------------------- *
*        Format the disk address (CCHHR) non-VSAM only                *
* ------------------------------------------------------------------- *
MAIN0050 DS    0H
         C     R2,DXD_CCHHR_VWIDTH              GREATER THAN WIDTH?
         BNH   MAIN0060                         NO
         L     R2,DXD_CCHHR_VWIDTH              LIMIT TO USABLE WIDTH
MAIN0060 DS    0H
         ITRACE ID=FMTCCHHR,                                           +
               RDATA1=R8,                                              +
               DATA2=(DSPCREQ_CCHHR,5)
         MVC   0(MSG_03_L,R8),MSG_03
M        USING MSG_03,R8
         SR    R0,R0
         ICM   R0,3,DSPCREQ_CCHHR               CYLINDER NUMBER
         CVD   R0,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2
         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4
         MVC   M.MSG_03_CYLINDER,COMM_INFO_01+3 COPY EDITED CYLINDER
         ICM   R0,3,DSPCREQ_CCHHR+2             HEAD NUMBER
         CVD   R0,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2
         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4
         MVC   M.MSG_03_HEAD,COMM_INFO_01+6     COPY EDITED HEAD NBR
         SR    R0,R0
         IC    R0,DSPCREQ_CCHHR+4               RECORD NUMBER
         CVD   R0,COMM_DWORD
         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2
         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4
         MVC   M.MSG_03_RECORD,COMM_INFO_01+5   COPY EDITED RECORD NBR
         IC    R0,DSPCREQ_SEQ+3                 SEQUENCE NBR
         CVD   R0,COMM_DWORD
         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2
         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4
         MVC   M.MSG_03_SEQ,COMM_INFO_01+5      COPY EDITED SEQ NBR
         LA    R8,MSG_03_L(,R8)                 PLUS LENGTH OF CCHHR
         B     MAIN0090
         DROP  M
* ------------------------------------------------------------------- *
*        Format RBA   VSAM only                                       *
* ------------------------------------------------------------------- *
MAIN0070 DS    0H
         C     R2,DXD_CCHHR_VWIDTH              GREATER THAN WIDTH?
         BNH   MAIN0080                         NO
         L     R2,DXD_CCHHR_VWIDTH              LIMIT TO USABLE WIDTH
MAIN0080 DS    0H
         ITRACE ID=FMT_RBA,                                            +
               RDATA1=R8,                                              +
               DATA2=(DSPCREQ_RBA,4)
         MVC   0(MSG_04_L,R8),MSG_04
M        USING MSG_04,R8
         ICM   R0,15,DSPCREQ_RBA
         CVD   R0,COMM_DWORD
         ED    M.MSG_04_RBA,COMM_DWORD+2        EDIT RBA
         LA    R8,MSG_04_L(,R8)                 PLUS LENGTH OF RBA MSG
         DROP  M
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0090 DS    0H
         LTR   R2,R2                            ANY DISPLAYABLE DATA?
         BNH   MAIN0110                         NO
         L     R3,DATASPACE_1_DISPLAY_FIRST_COLUMN
         BCTR  R3,0                             RELATIVE TO ZERO
         AR    R3,R6                            PLUS I/O AREA ADDRESS
         ITRACE ID=TO_BUFF,                                            +
               RDATA1=R8,                                              +
               RDATA2=R2
         BCTR  R2,0
         EX    R2,MVC_01                        COPY DATA
         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII
         BNO   MAIN0100
         EX    R2,TR_01                         TRANSLATE TO EBCDIC
MAIN0100 DS    0H
         EX    R2,TR_02                         TRANSLATE
MAIN0110 DS    0H
         L     R8,DXD_SAVED_R8
         A     R8,DXD_VWIDTH                    NEXT LINE
         ST    R8,DXD_SAVED_R8
         BCT   R7,MAIN0120                      MINUS 1 LINE
         ITRACE ID=FULL
         B     MAIN0150
MAIN0120 DS    0H
         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER
         A     R1,F1                            ADD 1
         C     R1,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?
         BH    MAIN0130                         YES
         ST    R1,DSPCREQ_RECORD_NBR            SAVE NEW RECORD NUMBER
         B     MAIN0030                         GET/PROCESS NEXT RECORD
MAIN0130 DS    0H
         ITRACE ID=END_DATA,                                           +
               RDATA1=R7,                                              +
               RDATA2=R8
         L     R1,DSPCREQ_RECORD_NBR
         CVD   R1,COMM_DWORD
         MVC   DXD_WORK_1,EDIT_WORD_1
         ED    DXD_WORK_1,COMM_DWORD+3
         MVC   SPF_RECORD_TO,DXD_WORK_1+1
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD
         BL    MAIN0150
* ------------------------------------------------------------------- *
*        End of data reached and there is room for the                *
*        "End of data" line                                           *
* ------------------------------------------------------------------- *
         MVC   DXD_WORK_2(EOF_01_L),EOF_01
         L     R1,DATASPACE_1_LAST_RECORD       NUMBER OF RECORDS
         S     R1,DATASPACE_1_FIRST_RECORD      MINUS 1ST RECORD
         LA    R1,1(,R1)                        PLUS 1
         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3
         MVC   DXD_WORK_2+(EOF_01_RECORDS-EOF_01)(L'EOF_01_RECORDS),DXD++
               _WORK_1+1
         L     R1,DATASPACE_1_BYTES             NUMBER OF BYTES
         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3
         MVC   DXD_WORK_2+(EOF_01_BYTES-EOF_01)(L'EOF_01_BYTES),DXD_WOR+
               K_1+1
         LA    R1,EOF_01_L                      LENGTH OF TRAILER LINE
         C     R1,DXD_VWIDTH                    GREATER THAN WIDTH?
         BNH   MAIN0140                         NO
         L     R1,DXD_VWIDTH                    LIMIT TO SCREEN WIDTH
MAIN0140 DS    0H
         BCTR  R1,0                             FOR EXECUTE
         EX    R1,MVC_02                        COPY TRAILER LINE
* ------------------------------------------------------------------- *
*         Build DSCB info                                             *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         MVC   SPF_RECORD_FROM,DATASPACE_1_DISPLAY_FIRST_RECORD
         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR
         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN
         STCM  R1,15,SPF_COLUMN_FROM            SET 'FROM' COLUMN
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR
         BO    MAIN0160                         DISPLAY CCHHR
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA
         BO    MAIN0170                         DISPLAY RBA
         A     R1,SPF_VWIDTH                    PLUS FULL WIDTH
         B     MAIN0180
MAIN0160 DS    0H
         A     R1,DXD_CCHHR_VWIDTH              PLUS WIDTH WHEN CCHHR
         B     MAIN0180
MAIN0170 DS    0H
         A     R1,DXD_RBA_VWIDTH                PLUS WIDTH WHEN RBA
MAIN0180 DS    0H
         BCTR  R1,0
         SR    R0,R0
         ICM   R0,3,DS1LRECL                    RECORD LENGTH
         BNZ   MAIN0190                         USE IF NOT ZERO
         ICM   R0,3,DS1BLKL                     TRY BLOCK SIZE
         BNZ   MAIN0190                         USE IF NOT ZERO
         L     R0,DATASPACE_1_LONGEST_RECORD    USE LONGEST RECORD
MAIN0190 DS    0H
         CR    R1,R0                            GREATER THAN MAX?
         BNH   MAIN0200                         NO
         LR    R1,R0                            LIMIT TO MAX
MAIN0200 DS    0H
         ST    R1,DATASPACE_1_DISPLAY_LAST_COLUMN
         ITRACE ID=OSDSCB
         L     R15,COMM_V_OSDSCB                OSDSCB ENTRY POINT
         BALR  R14,R15                          FORMAT THE DSCB INFO
         L     R1,DATASPACE_1_LAST_RECORD
         CVD   R1,COMM_DWORD
         MVC   DXD_WORK_1,EDIT_WORD_1
         ED    DXD_WORK_1,COMM_DWORD+3
         MVC   SPF_RECORD_OF,DXD_WORK_1+1
* ------------------------------------------------------------------- *
*        If MSG3 and MSG4 are blank, insert "SCALE" lines             *
* ------------------------------------------------------------------- *
         CLC   SPF_MSG_3,COMM_BLANKS            BLANK?
         BNE   MAIN0230                         NO
         CLC   SPF_MSG_4,COMM_BLANKS            BLANK?
         BNE   MAIN0230                         NO
         SR    R0,R0
         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN
*        BCTR  R1,0                             RELATIVE TO ZERO
         D     R0,F100                          DIVIDE BY 100
         LR    R1,R0
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR
         BO    MAIN0210
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA
         BO    MAIN0220
         LA    R2,SCALE1(R1)                    SCALE BASE + OFFSET
         MVC   SPF_MSG_3,0(R2)
         LA    R2,SCALE2(R1)                    SCALE BASE + OFFSET
         MVC   SPF_MSG_4,0(R2)
         B     MAIN0230
MAIN0210 DS    0H
         LA    R2,SCALE1(R1)
         MVC   SPF_MSG_3+MSG_03_L(L'SPF_MSG_3-MSG_03_L),0(R2)
         LA    R2,SCALE2(R1)
         MVC   SPF_MSG_4+MSG_03_L(L'SPF_MSG_4-MSG_03_L),0(R2)
         B     MAIN0230
MAIN0220 DS    0H
         LA    R2,SCALE1(R1)
         MVC   SPF_MSG_3+MSG_04_L(L'SPF_MSG_3-MSG_04_L),0(R2)
         LA    R2,SCALE2(R1)
         MVC   SPF_MSG_4+MSG_04_L(L'SPF_MSG_4-MSG_04_L),0(R2)
* ------------------------------------------------------------------- *
*                                                                     *
*        Position cursor following FIND or RFIND                      *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0230 DS    0H
         TM    SESS_SEARCH_FLAGS,$SESS_SEARCH_NOW (R)FIND PROCESSED?
         BNO   MAIN0240                         NO
         ITRACE ID=CMP_CUR,                                            +
               DATA1=(SESS_SEARCH_RECORD,4),                           +
               DATA2=(DXD_STRING_DISP,4)
         ICM   R1,15,SESS_SEARCH_RECORD         MATCHING RECORD NBR
         S     R1,DATASPACE_1_DISPLAY_FIRST_RECORD
         L     R2,DXD_STRING_DISP               STRING DISPLACEMENT
         C     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         BL    MAIN0240                         YES
         S     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         LA    R2,1(,R2)                        PLUS 1
         CH    R2,DXD_VWIDTH+2                  OFF RIGHT SIDE?
         BH    MAIN0240                         YES
         MH    R1,DXD_VWIDTH+2                  MULTIPLY BY WIDTH
         AR    R1,R2                            COMPUTE CURSOR POSITION
         ST    R1,SESS_DISP_CURSOR
         ITRACE ID=CURSOR,                                             +
               RDATA1=R1
         B     MAIN0250
MAIN0240 DS    0H
         ITRACE ID=ZERO_CSR
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
* ------------------------------------------------------------------- *
*                                                                     *
*        Display the panel                                            *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0250 DS    0H
         ITRACE ID=DISPLAY,                                            +
               DATA1=DXD_PANEL,                                        +
               RDATA2=R15
         MVC   SESS_DISP_PANEL,DXD_PANEL
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW
         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?
         BNE   EXIT0000                         YES
         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?
         BNE   EXIT0000                         YES
         OC    SESS_RC,SESS_RC                  RC=0
         BZ    MAIN0260                         YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Check for command(s)                                         *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0260 DS    0H
         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?
         BE    MAIN0310                         YES
         ITRACE ID=PRI_CMD,                                            +
               DATA1=SPF_ZCMD+00,                                      +
               DATA2=SPF_ZCMD+08
         SR    R3,R3                            CLEAR REGISTER
         ICM   R3,3,COMM_OPERANDS_NBR
         BZ    MAIN0310                         NO OPERANDS
* ------------------------------------------------------------------- *
*        Check for primary command                                    *
* ------------------------------------------------------------------- *
         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH
         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS
         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH
         L     R15,COMM_V_OSCMD                 OSCMD ENTRY POINT
         BALR  R14,R15                          SEARCH COMMAND(S)
         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND
         BOR   R15                              YES
* ------------------------------------------------------------------- *
*                                                                     *
*        No command has been recognized                               *
*        Check for scroll commands                                    *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0310 DS    0H
         MVC   SESS_VERTICAL_SCROLL,SPF_ZSCROLLN
         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'B'                   BOTTOM?
         BE    MAIN0390                         YES
         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?
         BE    MAIN0360                         YES
         CLI   SPF_ZVERB,C'L'                   SCROLL LEFT?
         BE    MAIN0410                         YES
         CLI   SPF_ZVERB,C'R'                   SCROLL RIGHT?
         BE    MAIN0440                         YES
         CLI   SPF_ZVERB,C'T'                   TOP?
         BE    MAIN0380                         YES
         CLI   SPF_ZVERB,C'U'                   SCROLL UP?
         BE    MAIN0330                         YES
         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?
         BE    MAIN0150                         YES
         B     ERR0110
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0330 DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0380                         YES
         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D
         SR    R2,R1                            MINUS SCROLL AMOUNT
         ICM   R1,15,DATASPACE_1_FIRST_RECORD   ANY STARTING RECORD?
         BNZ   MAIN0340                         YES
         LH    R1,H1                            DEFAULT TO 1
MAIN0340 DS    0H
         CR    R2,R1                            LESS THAN MININUM?
         BNL   MAIN0350                         NO
         LR    R2,R1                            DON'T SCROLL PAST 1ST
MAIN0350 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD SET 1ST TO DISPLAY
         B     MAIN0010                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL DOWN                                                  *
* ------------------------------------------------------------------- *
MAIN0360 DS    0H
         ITRACE ID=DOWN
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0390                         YES
         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D
         AR    R2,R1                            PLUS RECORDS TO SCROLL
         C     R2,DATASPACE_1_LAST_RECORD
         BH    MAIN0370                         BEYOND END OF DATA
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD 1ST TO DISPLAY
         B     MAIN0010                         REBUILD EVERYTHING
MAIN0370 DS    0H
         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED
         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD
         C     R2,DXD_VDEPTH                    MORE THAN SCREEN?
         BNH   MAIN0150                         NO.. STAY PUT
         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED
         S     R2,DXD_VDEPTH                    MINUS 1 SCREEN
         A     R2,F2                            PLUS 2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD
         B     MAIN0010                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0380 DS    0H
         ITRACE ID=TOP
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD
         XC    SESS_SEARCH_RECORD,SESS_SEARCH_RECORD
         B     MAIN0010                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        Don't use a "LA   R2,2(,R2)"  here to add 2                  *
*        because "LA" always turns off the high order                 *
*        bit(s) and therefore the sign bit.                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0390 DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD
         BCTR  R2,0
         S     R2,SPF_VDEPTH                    MINUS DEPTH
         A     R2,F2                            PLUS 2
         C     R2,DATASPACE_1_FIRST_RECORD      LOWER THAN FIRST RECORD
         BNL   MAIN0400                         NO
         L     R2,DATASPACE_1_FIRST_RECORD      FORCE TO FIRST RECORD
MAIN0400 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD
         B     MAIN0010                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL LEFT                                                  *
* ------------------------------------------------------------------- *
MAIN0410 DS    0H
         ITRACE ID=LEFT,                                               +
               DATA1=(SESS_HORIZONTAL_SCROLL,4)
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0420                         YES
         L     R1,SESS_HORIZONTAL_SCROLL        COLUMNS TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         SR    R2,R1                            MINUS COLUMNS TO SCROLL
         CH    R2,H1                            AT LEAST 1 COLUMN LEFT?
         BNL   MAIN0430                         NO
MAIN0420 DS    0H
         LH    R2,H1                            STOP AT COLUMN 1
MAIN0430 DS    0H
         ITRACE ID=LEFT_1,                                             +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0010                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL RIGHT                                                 *
* ------------------------------------------------------------------- *
MAIN0440 DS    0H
         ITRACE ID=RIGHT,                                              +
               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,4)
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    MAIN0470                            YES
         L     R1,SESS_HORIZONTAL_SCROLL           COLUMNS TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         AR    R2,R1                               PLUS SCROLL
         SR    R1,R1
         ICM   R1,3,DS1LRECL                       LRECL = ZERO?
         BNZ   MAIN0450                            NO.. USE IT
         ICM   R1,3,DS1BLKL                        BLOCK SIZE ZERO?
         BNZ   MAIN0450                            NO.. USE IT
         L     R1,DATASPACE_1_LONGEST_RECORD       USE LONGEST RECORD
MAIN0450 DS    0H
         CR    R2,R1                               OVER MAX?
         BH    MAIN0010                            YES.. STAY PUT
MAIN0460 DS    0H
         ITRACE ID=RIGHT_1,                                            +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0010                            REBUILD EVERYTHING
MAIN0470 DS    0H
         SR    R2,R2
         ICM   R2,3,DS1LRECL                       RECORD LENGTH
         BNZ   MAIN0480                            NOT ZERO.. USE IT
         ICM   R2,3,DS1BLKL                        BLOCK LENGTH
         BNZ   MAIN0480                            NOT ZERO.. USE IT
         L     R2,DATASPACE_1_LONGEST_RECORD       USE LONGEST RECORD
MAIN0480 DS    0H
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR DISPLAYING CCHHR?
         BO    MAIN0490                            YES
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA   DISPLAYING RBA?
         BO    MAIN0500                            YES
         S     R2,DXD_VWIDTH                       MINUS FULL WIDTH
         B     MAIN0510
MAIN0490 DS    0H
         S     R2,DXD_CCHHR_VWIDTH                 MINUS CCHHR WIDTH
         B     MAIN0510
MAIN0500 DS    0H
         S     R2,DXD_RBA_VWIDTH                   MINUS 'RBA' WIDTH
MAIN0510 DS    0H
         LA    R2,1(,R2)                           PLUS 1
         ITRACE ID=RIGHT_2,                                            +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0010
* ------------------------------------------------------------------- *
*        Submit                                                       *
* ------------------------------------------------------------------- *
MAIN0600 DS    0H
         ITRACE ID=SUBMIT
         TM    DS1RECFM,DS1RECFF                F (OR FB)?
         BNO   ERR0030                          NO
         CLC   DS1LRECL,H80                     RECORD LENGTH = 80?
         BNE   ERR0040                          NO
         MVI   LOADREQ_FUNC,$LOADREQ_LOAD
         MVC   LOADREQ_MODULE,MODULE_OSSUBMIT
         LA    R1,LOADREQ
         L     R15,COMM_V_OSLOAD
         BALR  R14,R15                          LOAD OSSUBMIT
         MVC   SUBREQ_DSN,SESS_DSN              COPY DATASET NAME
         MVC   SUBREQ_MEMBER,SESS_MEMBER
         LA    R1,SUBREQ
         ITRACE ID=CALL_SUB,                                           +
               RDATA1=R1
         ICM   R15,15,LOADREQ_EP                OSSUBMIT ENTRY POINT
         BALR  R14,R15                          CALL OSSUBMIT
         MVC   SPF_ZCMD,COMM_BLANKS
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     MAIN0150
* ------------------------------------------------------------------- *
*        Process ASCII command                                        *
* ------------------------------------------------------------------- *
MAIN0700 DS    0H
         CH    R3,H2                            TOO MANY OPERANDS?
         BH    ERR0010                          YES
         CH    R3,H1                            MORE THAN ONE OPERAND?
         BH    MAIN0710                         YES
         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII
         BO    MAIN0730
         B     MAIN0720                         CLEAR COMMAND
MAIN0710 DS    0H
         ICM   R1,15,OPERAND_02_ADDRESS         2ND OPERAND'S ADDRESS
         CLC   ON(2),0(R1)                      TURN ASCII MODE ON?
         BE    MAIN0720                         YES
         CLC   OFF(3),0(R1)                     TURN ASCII MODE OFF?
         BE    MAIN0730                         YES
         MVI   COMM_MSG_ID+1,3                  SET MESSAGE ID
         B     ERR1000
MAIN0720 DS    0H
         OI    SESS_USER_OPTIONS,$OPTIONS_ASCII
         MVC   SPF_ASCII,ASCII
         B     MAIN0740                         CLEAR COMMAND
MAIN0730 DS    0H
         NI    SESS_USER_OPTIONS,255-$OPTIONS_ASCII
         MVC   SPF_ASCII,COMM_BLANKS
MAIN0740 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR COMMAND
         B     MAIN0010                         REBUILD DATA
* ------------------------------------------------------------------- *
*        Process FIND command                                         *
*                                                                     *
* .. ONE OF THESE DAYS CHANGE THIS TO USE THE OSDSPACE SEARCH         *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0800 DS    0H
         ITRACE ID=FIND
         CH    R3,H2                            TWO OPERANDS?
         BH    ERR0060                          TOO MANY
         BL    ERR0080                          TOO FEW
         OI    SESS_SEARCH_FLAGS,$SESS_SEARCH_ACTIVE
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         SR    R1,R1
         ICM   R1,3,OPERAND_02_LENGTH
         CH    R1,H80                           TOO LONG?
         BNH   MAIN0810                         NO
         LH    R1,H80                           LIMIT LENGTH
MAIN0810 DS    0H
         BCTR  R1,0
         STCM  R1,3,SESS_SEARCH_ARG_LENGTH      SAVE LENGTH
         ICM   R2,15,OPERAND_02_ADDRESS         STRING ADDRESS
         XC    SESS_SEARCH_ARG,SESS_SEARCH_ARG
         EX    R1,FIND_MVC                      SAVE STRING
         ITRACE ID=STRING,                                             +
               DATA1=(SESS_SEARCH_ARG_LENGTH,2),                       +
               DATA2=(SESS_SEARCH_ARG,8)
         B     MAIN0830
MAIN0820 DS    0H
         ITRACE ID=RFIND
         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND
         TM    SESS_SEARCH_FLAGS,$SESS_SEARCH_ACTIVE
         BNO   ERR0170                          NO FIND IS ACTIVE
         ICM   R1,15,SESS_SEARCH_RECORD         RECORD FROM LAST FIND
         LA    R1,1(,R1)                        PLUS 1
         STCM  R1,15,DSPCREQ_RECORD_NBR         STARTING RECORD
MAIN0830 DS    0H
         OI    SESS_SEARCH_FLAGS,$SESS_SEARCH_NOW DOING FIND NOW
MAIN0840 DS    0H
         LA    R1,DSPCREQ                       DATA SPACE PARMS
         L     R15,COMM_OSDSPACE
         BALR  R14,R15                          RETRIEVE DATA
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    MAIN0860                         NOT STORED
         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?
         BNE   MAIN0890                         NO
         ICM   R14,15,DSPCREQ_RECORD_LENGTH     RECORD LENGTH
         SR    R15,R15
         ICM   R15,3,SESS_SEARCH_ARG_LENGTH     STRING LENGTH
         SR    R14,R15                          RECORD LONG ENOUGH?
         BNH   MAIN0860                         RECORD IS TOO SHORT
         ICM   R2,15,DSPCREQ_RECORD_ADDR        RECORD ADDRESS
         LA    R3,1                             INITIALIZE DISP
MAIN0850 DS    0H
         EX    R15,FIND_CLC                     STRING FOUND?
         BE    MAIN0870                         YES
         A     R3,F1                            PLUS 1
         A     R2,F1                            PLUS 1
         BCT   R14,MAIN0850                     LOOP
MAIN0860 DS    0H
         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NBR
         A     R1,F1                            PLUS 1
         C     R1,DATASPACE_1_LAST_RECORD       END OF RECORDS?
         BE    MAIN0890                         YES
         ST    R1,DSPCREQ_RECORD_NBR
         B     MAIN0840
MAIN0870 DS    0H
         ITRACE ID=FOUND,                                              +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               RDATA2=R2
         MVC   SESS_SEARCH_RECORD,DSPCREQ_RECORD_NBR
         ST    R3,DXD_STRING_DISP               DISP WHERE STRING FOUND
         MVC   SPF_MSG_1(MSG_01_L),MSG_01
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR COMMAND
         L     R1,DSPCREQ_RECORD_NBR
         C     R1,DATASPACE_1_DISPLAY_FIRST_RECORD
         BL    MAIN0880                         "ABOVE" DATA ON SCREEN
         S     R1,DATASPACE_1_DISPLAY_FIRST_RECORD
         C     R1,DXD_VDEPTH                    "BELOW" DATA ON SCREEN?
         BL    MAIN0010                         NO
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DSPCREQ_RECORD_NBR
         B     MAIN0010
MAIN0880 DS    0H
         ITRACE ID=WRAP_UP
         STCM  R1,15,DATASPACE_1_DISPLAY_FIRST_RECORD
         B     MAIN0010
MAIN0890 DS    0H
         ITRACE ID=NOTFOUND
         MVC   SPF_MSG_1(MSG_02_L),MSG_02
         XC    SESS_SEARCH_RECORD,SESS_SEARCH_RECORD RESET (WRAP)
         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW
         B     MAIN0150
FIND_MVC MVC   SESS_SEARCH_ARG(0),0(R2)         SAVE SEARCH ARG
FIND_CLC CLC   SESS_SEARCH_ARG(0),0(R2)         TEST SEARCH ARG
* ------------------------------------------------------------------- *
*        Process LINE (L nnnn or LINE nnnn)                           *
* ------------------------------------------------------------------- *
MAIN0900 DS    0H
         ITRACE ID=LINE
         CH    R3,H2                            CORRECT NBR OF OPERANDS
         BL    ERR0080                          TOO FEW
         BH    ERR0060                          TOO MANY
         TM    OPERAND_02_TYPE,$OPERAND_NUMERIC
         BNO   ERR0090                          NO
         SR    R15,R15
         ICM   R15,3,OPERAND_02_LENGTH
         CH    R15,H5
         BH    ERR0070
         ICM   R14,15,OPERAND_02_ADDRESS
         BCTR  R15,0
         EX    R15,LINE_PACK
         CVB   R1,COMM_DWORD                    CONVERT TO DECIMAL
         ITRACE ID=LINE_2,                                             +
               RDATA1=R1
         C     R1,DATASPACE_1_LAST_RECORD       TOO HIGH?
         BH    ERR0100
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR COMMAND
         B     MAIN0010                         REBUILD
LINE_PACK PACK COMM_DWORD,0(0,R14)              PACK LINE NUMBER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=DEBUG
         L     R15,COMM_V_OSDEBUG
         BALR  R14,R15
         MVC   SPF_ZCMD,COMM_BLANKS
         B     MAIN0150
* ------------------------------------------------------------------- *
*                                                                     *
*        Toggle CCHHR (cylinder, head, record) info on display        *
*                                                                     *
*        VSAM data sets have RBA, no CCHHR                            *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1100 DS    0H
         ITRACE ID=CCHHR
         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM
         BO    ERR0140
         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS
         BO    ERR0150
         MVC   SPF_ZCMD,COMM_BLANKS
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR
         BO    MAIN1110
         ITRACE ID=CCHHRON
         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR
         B     MAIN0010
MAIN1110 DS    0H
         ITRACE ID=CCHHROFF
         NI    SESS_KEYWORD_FLAGS_2,255-$KEYWORD_CCHHR
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
*        Toggle RBA (relative byte address) info for VSAM             *
*                                                                     *
*        RBA is only valid for VSAM clusters                          *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1200 DS    0H
         ITRACE ID=RBA
         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM
         BNO   ERR0160
         MVC   SPF_ZCMD,COMM_BLANKS
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA
         BO    MAIN1210
         ITRACE ID=RBA_ON
         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA
         B     MAIN0010
MAIN1210 DS    0H
         ITRACE ID=RBA_OFF
         NI    SESS_KEYWORD_FLAGS_2,255-$KEYWORD_RBA
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
*        Display list of available commands                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1300 DS    0H
         ITRACE ID=DISP_CMD
         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY
         L     R15,COMM_V_OSCMD
         BALR  R14,R15                           DISPLAY COMMANDS
         B     MAIN0250
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=DSPC_ERR
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         LA    R1,DISPLAY
         ST    R1,DXD_SPF_PARM1
         LA    R1,ERROR_PANEL
         ST    R1,DXD_SPF_PARM2
         OI    DXD_SPF_PARM2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,COMM_ISPLINK
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_BLANKS
         MVC   SPF_MSG_2,COMM_BLANKS
         MVC   SPF_MSG_3,COMM_BLANKS
         MVC   SPF_MSG_4,COMM_BLANKS
         MVC   SPF_MSG_5,COMM_BLANKS
         STH   R15,SESS_RC
         MVI   COMM_SESS_FUNC,$SESS_REMOVE
         B     EXIT0000
ERR0030  DS    0H
         ITRACE ID=ERR0030
         MVI   COMM_MSG_ID+1,1
         B     ERR1000
ERR0040  DS    0H
         ITRACE ID=ERR0040
         MVI   COMM_MSG_ID+1,2
         B     ERR1000
ERR0050  DS    0H
         ITRACE ID=ERR0050
         DC    H'5'
         DC    C'DISPLAY FAILED'
ERR0060  DS    0H
         ITRACE ID=ERR0060
         MVI   COMM_MSG_ID+1,6              TOO MANY OPERANDS
         B     ERR1000
ERR0070  DS    0H
         ITRACE ID=ERR0070
         MVI   COMM_MSG_ID+1,7              OPERAND TOO LONG
         B     ERR1000
ERR0080  DS    0H
         ITRACE ID=ERR0080
         MVI   COMM_MSG_ID+1,8              OPERANDS(S) MISSING
         B     ERR1000
ERR0090  DS    0H
         ITRACE ID=ERR0090
         MVI   COMM_MSG_ID+1,9              OPERAND NOT NUMERIC
         B     ERR1000
ERR0100  DS    0H
         ITRACE ID=ERR0100
         MVI   COMM_MSG_ID+1,10             RECORD NUMBER TOO HIGH
         B     ERR1000
ERR0110  DS    0H
         ITRACE ID=ERR0110
         MVI   COMM_MSG_ID+1,11             INVALID PRIMARY COMMAND
         B     ERR1000
ERR0120  DS    0H
         DC    H'0'
ERR0130  DS    0H
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    EXIT0010
         DC    H'0'
ERR0140  DS    0H
         ITRACE ID=ERR0140
         MVI   COMM_MSG_ID+1,12             CCHHR NOT ALLOWED FOR VSAM
         B     ERR1000
ERR0150  DS    0H
         ITRACE ID=ERR0150
         MVI   COMM_MSG_ID+1,13             CCHHR NOT ALLOWED FOR HFS
         B     ERR1000
ERR0160  DS    0H
         ITRACE ID=ERR0160
         MVI   COMM_MSG_ID+1,14             RBA ONLY FOR VSAM
         B     ERR1000
ERR0170  DS    0H
         ITRACE ID=ERR0170
         MVI   COMM_MSG_ID+1,15             NO FIND ACTIVE
ERR1000  DS    0H
         MVC   COMM_MSG_CSECT,MODID
         MVI   COMM_MSG_ID,0
         ITRACE ID=BLD_MSG,                                            +
               DATA1=COMM_MSG_CSECT,                                   +
               DATA2=(COMM_MSG_ID,2)
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     MAIN0250
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP,                                           +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)
         ICM   R1,15,DXD_VDATA_ADDR           VDATA GETMAINED?
         BZ    CLEAN010                       NO
         L     R0,DXD_VDATA_LENGTH            VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        FREE VDATA
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
CLEAN010 DS    0H
         L     R0,DXDSIZE                     WORK AREA SIZE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(,R13)                    RESTORE R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_DXD_ADDR,SESS_DXD_ADDR
         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH
         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE
         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CANCEL00 DS    0H
         ITRACE ID=CANCEL
         MVI   SESS_RC+1,4
         MVC   SPF_ZCMD,COMM_BLANKS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                     RETURN CODE
         L     R13,4(,R13)                    RESTORE R13
EXIT0010 DS    0H
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
MVC_01   MVC   0(0,R8),0(R3)                  COPY DATA TO BUFFER
MVC_02   MVC   0(0,R8),DXD_WORK_2
MVC_03   MVC   0(0,R8),COMM_BLANKS
TR_01    TR    0(0,R8),ASCII_TO_EBCDIC        TRANSLATE ASCII TO EBCDIC
TR_02    TR    0(0,R8),PRINTABLES             TRANSLATE OUT UNPRINTABLE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSIZE         CXD
DXDSTART        DC    Q(DXDBROWS)
V_OSASMFMT      DC    V(OSASMFMT)
F1              DC    F'1'
F2              DC    F'2'
F100            DC    F'100'
H1              DC    H'1'
H2              DC    H'2'
H5              DC    H'5'
H80             DC    H'80'

MSG_01          DC    c'String found'
MSG_01_L        EQU   *-MSG_01
MSG_02          DC    c'Not found'
MSG_02_L        EQU   *-MSG_02

MSG_03          DS    0C
MSG_03_CYLINDER DC    CL5' '
                DC    C'-'
MSG_03_HEAD     DC    CL2' '
                DC    C'-'
MSG_03_RECORD   DC    CL3' '
                DC    C'.'
MSG_03_SEQ      DC    CL3' '
                DC    C' '
MSG_03_L        EQU   *-MSG_03

MSG_04          DS    0C
MSG_04_RBA      DC    X'4020206B2020206B2020206B202120'
                DC    CL2' '
MSG_04_L        EQU   *-MSG_04

MSG_05          DS    0C
                DC    CL5' '
                DC    AL1($SCREEN_ATTR_HIGH)
MSG_05_CMD      DC    CL8' '
                DC    CL2' '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_DESC     DC    CL60' '
MSG_05_L        EQU   *-MSG_05

SCALE1    DC    C'         1    1    2    2    3    3    4    4    5'
          DC    C'    5    6    6    7    7    8    8    9    9   10'
          DC    C'   10   11   11   12   12   13   13   14   14   15'
          DC    C'   15   16   16   17   17   18'
SCALE2    DC    C'....5....0....5....0....5....0....5....0....5....0'
          DC    C'....5....0....5....0....5....0....5....0....5....0'
          DC    C'....5....0....5....0....5....0....5....0....5....0'
          DC    C'....5....0....5....0....5....0'

ASCII           DC    C'ASCII'
CANCEL          DC    C'CANCEL '
CCHHR           DC    C'CCHHR '
DEBUG           DC    C'DEBUG'
DISPLAY         DC    CL8'DISPLAY'
FIND            DC    C'FIND'
ERROR_PANEL     DC    CL8'OSERR'
COMMAND_PANEL   DC    CL8'OSCMD'
OSHFS           DC    CL8'OSHFS'
OS0001          DC    CL8'OS0001'
OS0008          DC    CL8'OS0008'
JOB             DC    C'JOB'
LINE            DC    C'LINE'
MODULE_OSSUBMIT DC    CL8'OSSUBMIT'
OFF             DC    C'OFF'
ON              DC    C'ON'
RBA             DC    C'RBA '
RFIND           DC    C'RFIND'
SUBMIT          DC    CL6'SUBMIT'

ASCII_TO_EBCDIC DS    0C
*                        0 1 2 3 4 5 6 7 8 9 A B C D E F
                DC    X'000102030405060708090A0B0C0D0E0F' 00-0F
                DC    X'101112131415161718191A1B1C1D1E1F' 10-1F
                DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 20-2F
                DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 30-3F
                DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 40-4F
                DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5E6D' 50-5F
                DC    X'79818283848586878889919293949596' 60-6F
                DC    X'979899A2A3A4A5A6A7A8A98B6A9BA17F' 70-7F
                DC    X'808182838485868788898A8B8C8D8E8F' 80-8F
                DC    X'909192939495969798999A9B9C9D9E9F' 90-9F
                DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF' A0-AF
                DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF' B0-BF
                DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF' C0-CF
                DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF' D0-DF
                DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF' E0-EF
                DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF' F0-FF


PRINTABLES      DS    0C
*                        0 1 2 3 4 5 6 7 8 9 A B C D E F
                DC    X'40404040404040404040404040404040' 00-0F
                DC    X'40404040404040404040404040404040' 10-1F
                DC    X'40404040404040404040404040404040' 20-2F
                DC    X'40404040404040404040404040404040' 30-3F
                DC    X'404040404040404040404A4B4C4D4E4F' 40-4F
                DC    X'504040404040404040405A5B5C5D5E5F' 50-5F
                DC    X'60614040404040404040406B6C6D6E6F' 60-6F
                DC    X'404040404040404040407A7B7C7D7E7F' 70-7F
                DC    X'40818283848586878889408B8C8D8E8F' 80-8F
                DC    X'40919293949596979899409B9C9D9E9F' 90-9F
                DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF
                DC    X'4040404040404040404040BBBCBDBEBF' B0-BF
                DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF
                DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF
                DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF
                DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF

EDIT_WORD_1     DC    X'40202020202020202120'
EDIT_WORD_2     DC    X'4021202020202020'

EOF_01          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'---- END OF DATA ------'
EOF_01_RECORDS  DC    CL9' '
                DC    C' RECORDS, '
EOF_01_BYTES    DC    CL9' '
                DC    C' BYTES -------------------'
EOF_01_L        EQU   *-EOF_01

                LTORG

COMMAND_TABLE DS    0C
              CMD   F,MAIN0800,'Find a string'
              CMD   L,MAIN0900,'Scroll to line nbr'
              CMD   FL,0,'List available formats'
              CMD   OS,0,'Start a new On Screen session'
              CMD   CAN,CANCEL00,'Cancel processing (exit)'
              CMD   JOB,MAIN0600,'Submit as a batch job'
              CMD   RBA,MAIN1200,'Turn display of RBA for VSAM on/off'
              CMD   SUB,MAIN0600,'Submit as a batch job'
              CMD   FIND,MAIN0800,'Find a string'
              CMD   LINE,MAIN0900,'Scroll to line nbr'
              CMD   LIST,0,'LIST available formats'
              CMD   SESS,0,'Display list of active On Screen sessions'
              CMD   ABEND,0,'Cause an 0C1 abend for debugging'
              CMD   ASCII,MAIN0700,'Turn ASCII translation on/off'
              CMD   CCHHR,MAIN1100,'Turn display of disk address on/off+
               '
              CMD   DEBUG,MAIN1000,'Display internal data'
              CMD   FLIST,0,'List available formats'
              CMD   RFIND,MAIN0820,'Repeat previous FIND'
              CMD   CANCEL,CANCEL00,'Cancel processing (exit)'
              CMD   FORMAT,0,'Change format or list available formats'
              CMD   ??,MAIN1300,'Display available commands'
              DC    X'FF'

BROWSEEND       EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDBROWS          DSECT
                  COPY     DXDPREF

DXD_PANEL         DS       CL8
DXD_VDATA_ADDR    DS       A
DXD_VDATA_LENGTH  DS       F

DXD_CMD_VDATA_ADDR   DS    A
DXD_CMD_VDATA_LENGTH DS    F

DXD_VWIDTH        DS       F
DXD_CCHHR_VWIDTH  DS       F
DXD_RBA_VWIDTH    DS       F
DXD_VDEPTH        DS       F

DXD_STRING_DISP   DS       F

DXD_SPF_PARMS     DS       0A
DXD_SPF_PARM1     DS       A
DXD_SPF_PARM2     DS       A

DXD_SAVED_R8      DS       A

DXD_FORMATTER     DS       A

DXD_RC            DS       H

SESS_PANEL        DS       CL8

DXD_WORK_1        DS       CL10
DXD_WORK_2        DS       CL80

                  DSPCREQ  DSECT=NO
                  LOADREQ  DSECT=NO
                  SUBREQ   DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FORMAT_1 DSECT
         IBMMAC   VTOC=1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      OSBROWSE
