* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*    This runs as a 'subroutine' of OSLMOD.                           *
*                                                                     *
*    A new SESSION has been created (address is in R2)                *
*                                                                     *
*    Using the DIALOG already active, obtain the ESD info and         *
*    store it in the data space associated with the new session.      *
*    At exit, OSLMOD will inform OSMAIN that there is a new           *
*    session with data type 'other' (basically this means the data    *
*    is already in the data space), and the function set to OSLMOD.   *
*                                                                     *
* ------------------------------------------------------------------- *
LMODESD  CSECT
LMODESD  AMODE 31
LMODESD  RMODE ANY
         USING LMODESD,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'LMODESD'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(ESDEND-LMODESD)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                  SAVE REGISTERS
         LR    R10,R15                          COPY BASE ADDRESS
         LA    R9,2048(,R10)
         LA    R9,2048(,R9)
         DROP  R15
         USING LMODESD,R10,R9
         L     R15,SESS_DXD_ADDR
         A     R15,DXD_START                    PLUS OFFSET
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                          COPY DXD AREA ADDRESS
         USING DXDESD,R13                       DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R5,COMM_NEW_SESSION
NEW      USING SESSION,R5
         XC    COMM_MSG_ID,COMM_MSG_ID
         L     R6,COMM_OSSPFD
         USING OSSPFD,R6
         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I
         MVI   DXD_FLAGS,0
* ------------------------------------------------------------------- *
*        Obtain and initialize ESD buffer                             *
* ------------------------------------------------------------------- *
         ITRACE ID=GET_SECT
         IEWBUFF FUNC=GETBUF,                                          +
               TYPE=ESD
         ST    R8,DXD_ESD_BUFFER
         ITRACE ID=INIT_ESD,                                           +
               RDATA1=R8,                                              +
               RDATA2=R7
         IEWBUFF FUNC=INITBUF,                                         +
               TYPE=ESD
* ------------------------------------------------------------------- *
*        Clear any old data from the data space                       *
* ------------------------------------------------------------------- *
         ITRACE ID=CLEAR
         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR      CLEAR DATA SPACE
         LA    R0,NEW.DATASPACE_1               DATA SPACE CONTROL INFO
         ST    R0,DSPCREQ_DATASPACE             SET ADDR IN PARM LIST
         LA    R1,DSPCREQ                       DATA SPACE PARMS
         L     R15,COMM_OSDSPACE
         BALR  R14,R15                          CLEAR THE DATA SPACE
         ITRACE ID=DSPC_RC,                                            +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?
         BNE   ERR0040                          NO

* ------------------------------------------------------------------- *
*        Store the info for the specified section                     *
* ------------------------------------------------------------------- *
         LA    R1,ESDDATA_DATA
         ST    R1,DSPCREQ_RECORD_ADDR
         LA    R1,ESDDATA_DATA_L
         ST    R1,DSPCREQ_RECORD_LENGTH
         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR
         XC    DXD_ESD_CURSOR,DXD_ESD_CURSOR
* ------------------------------------------------------------------- *
*                                                                     *
*     Store the ESD info                                              *
*                                                                     *
*     R8 IS THE ESD HEADER (ESDH) BASE                                *
*     R7 IS THE ESD ENTRY  (ESD_ENTRY) BASE                           *
*                                                                     *
* ------------------------------------------------------------------- *
ESD0000  DS    0H
         ITRACE ID=GETD_ESD,                                           +
               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +
               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8
         L     R8,DXD_ESD_BUFFER
         LA    R7,ESDH_END
         IEWBIND FUNC=GETD,                                            +
               VERSION=5,                                              +
               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +
               CLASS=B_ESD,                                            +
               SECTION=NEW.SESS_DIALOG_SECTION_LENGTH,                 +
               AREA=IEWBESD,                                           +
               CURSOR=DXD_ESD_CURSOR,                                  +
               COUNT=DXD_ESD_RETURNED,                                 +
               RETCODE=DXD_RETURN_CODE,                                +
               RSNCODE=DXD_REASON_CODE,                                +
               MF=(E,DXD_IEWBIND,COMPLETE)
         ITRACE ID=GETD_RC,                                            +
               DATA1=(DXD_RETURN_CODE,4),                              +
               DATA2=(DXD_REASON_CODE,4)
         CLC   DXD_RETURN_CODE,F8
         BH    ERR0010
         BE    ERR0020                          NO DATA
         CLC   DXD_RETURN_CODE,F4
         BL    ESD0020
         CLC   DXD_REASON_CODE,X_83000800
         BNE   ESD0020
         CLC   DXD_REASON_CODE,X_83000801
         BE    ERR0030
ESD0020  DS    0H
         ICM   R4,15,DXD_ESD_RETURNED
         BZ    ERR0020
         OI    DXD_FLAGS,$FLAGS_DISPLAYED
ESD0030  DS    0H
         ITRACE ID=BLD_SECT,                                           +
               RDATA1=R7,                                              +
               RDATA2=R4
         MVC   ESDDATA_TYPE,ESD_TYPE
         MVC   ESDDATA_QUAL,ESD_TYPE_QUAL
         MVC   ESDDATA_NAME_SPACE,ESD_NAME_SPACE
         MVC   ESDDATA_SCOPE,ESD_SCOPE
         SR    R14,R14
         MVC   ESDDATA_NAME,COMM_BLANKS
         ICM   R14,3,ESD_NAME_CHARS             LENGTH OF NAME
         BZ    ESD0050                          NO NAME?
         CH    R14,H8                           TOO LONG?
         BL    ESD0040                          NO
         LH    R14,H8                           LIMIT LENGTH TO 8
ESD0040  DS    0H
         BCTR  R14,R0
         ICM   R15,15,ESD_NAME_PTR              ADDRESS OF NAME
         EX    R14,NAME_MVC                     COPY NAME
         B     ESD0060
ESD0050  DS    0H
         MVC   ESD_NAME(L'NONE),NONE            NO NAME
ESD0060  DS    0H
         MVC   ESDDATA_SYMBOL_ATTR,ESD_SYMBOL_ATTR
         MVC   ESDDATA_FILL_CHAR,ESD_FILL_CHAR
         MVC   ESDDATA_RESIDENT,COMM_BLANKS
         ICM   R14,3,ESD_RESIDENT_CHARS         LENGTH OF RESIDENT NAME
         BZ    ESD0080                          NO NAME
         CH    R14,=Y(L'ESDDATA_RESIDENT)
         BL    ESD0070
         LH    R14,=Y(L'ESDDATA_RESIDENT)
ESD0070  DS    0H
         BCTR  R14,0
         ICM   R15,15,ESD_RESIDENT_PTR
         EX    R14,RESIDENT_MVC                 COPY RESIDENT NAME
         B     ESD0090
ESD0080  DS    0H
         MVC   ESDDATA_RESIDENT(L'NONE),NONE
ESD0090  DS    0H
         MVC   ESDDATA_LENGTH,ESD_LENG
         MVC   ESDDATA_ALIGN,ESD_ALIGN
         MVC   ESDDATA_USABILITY,ESD_USABILITY
         MVC   ESDDATA_AMODE,ESD_AMODE
         MVC   ESDDATA_RMODE,ESD_RMODE
         MVC   ESDDATA_RECFM,ESD_RECORD_FMT
         MVC   ESDDATA_LOAD_FLAGS,ESD_LOAD_FLAGS
         MVC   ESDDATA_BIND_FLAGS,ESD_BIND_FLAGS
         MVC   ESDDATA_BIND_CNTL,ESD_BIND_CNTL
         MVC   ESDDATA_ATTRIBUTES,ESD_ATTRIBUTES
         MVC   ESDDATA_XATTR_CLASS,COMM_BLANKS
         ICM   R14,3,ESD_XATTR_CLS_CHARS
         BZ    ESD0110
         CH    R14,H8
         BL    ESD0100
         LH    R14,H8
ESD0100  DS    0H
         BCTR  R14,0
         ICM   R15,15,ESD_XATTR_CLS_PTR
         EX    R14,XATTR_MVC
         B     ESD0120
ESD0110  DS    0H
         MVC   ESDDATA_XATTR_CLASS(L'NONE),NONE
ESD0120  DS    0H
         MVC   ESDDATA_XATTR_OFFSET,ESD_XATTR_OFFSET
         MVC   ESDDATA_SEGMENT,ESD_SEGMENT
         MVC   ESDDATA_REGION,ESD_REGION
         MVC   ESDDATA_SIGNATURE,ESD_SIGNATURE
         MVC   ESDDATA_AUTOCALL,ESD_AUTOCALL
         MVC   ESDDATA_STATUS,ESD_STATUS
         MVC   ESDDATA_TARGET,COMM_BLANKS
         ICM   R14,3,ESD_TARGET_CHARS
         BZ    ESD0140
         CH    R14,H8
         BL    ESD0130
         LH    R14,H8
ESD0130  DS    0H
         BCTR  R14,0
         ICM   R15,15,ESD_TARGET_PTR
         EX    R14,TARGET_MVC
         B     ESD0150
ESD0140  DS    0H
         MVC   ESDDATA_TARGET(L'NONE),NONE
ESD0150  DS    0H
         MVC   ESDDATA_RESIDENT_CLASS,COMM_BLANKS
         SR    R14,R14
         ICM   R14,3,ESD_RES_CLASS_CHARS
         BZ    ESD0170
         CH    R14,=Y(L'ESDDATA_RESIDENT_CLASS)
         BL    ESD0160
         LH    R14,=Y(L'ESDDATA_RESIDENT_CLASS)
ESD0160  DS    0H
         BCTR  R14,0
         ICM   R15,15,ESD_RES_CLASS_PTR
         EX    R14,RES_CLASS_MVC
         B     ESD0180
ESD0170  DS    0H
         MVC   ESDDATA_RESIDENT_CLASS(L'NONE),NONE
ESD0180  DS    0H
         MVC   ESDDATA_ELEMENT_OFFSET,ESD_ELEM_OFFSET
         MVC   ESDDATA_CLASS_OFFSET,ESD_CLASS_OFFSET
         MVC   ESDDATA_ADA,COMM_BLANKS
         ICM   R14,3,ESD_ADA_LL
         BZ    ESD0200
         CH    R14,=Y(L'ESDDATA_ADA)
         BL    ESD0190
         LH    R14,=Y(L'ESDDATA_ADA)
ESD0190  DS    0H
         BCTR  R14,0
         ICM   R15,15,ESD_ADA_PTR
         EX    R14,ADA_MVC
         B     ESD0210
ESD0200  DS    0H
         MVC   ESDDATA_ADA(L'NONE),NONE
ESD0210  DS    0H
         MVC   ESDDATA_PRIORITY,ESD_PRIORITY

         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE
         L     R1,DSPCREQ_RECORD_NBR
         LA    R1,1(,R1)
         ST    R1,DSPCREQ_RECORD_NBR
         ITRACE ID=STORE,                                              +
               RDATA1=R1
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15

         CLI   DSPCREQ_RC,$DSPCREQ_FULL
         BE    ESD0220
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0040
         A     R7,ESDH_ENTRY_LENG
         BCT   R4,ESD0030
         CLC   DXD_REASON_CODE,X_83000800
         BNE   ESD0000
         B     ESD0230
ESD0220  DS    0H
         ITRACE ID=FULL
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         L     R1,DSPCREQ_RECORD_NBR
         BCTR  R1,0
         ST    R1,DSPCREQ_RECORD_NBR
ESD0230  DS    0H
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=ERR0010
         MVI   COMM_MSG_ID+1,1
         MVC   COMM_INFO_01(20),INFO_GET_ESD
         MVC   COMM_INFO_02,DXD_RETURN_CODE
         MVC   COMM_INFO_03,DXD_REASON_CODE
         B     ERR0100
ERR0020  DS    0H
         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION
         TM    DXD_FLAGS,$FLAGS_DISPLAYED
         BO    ERR0030
         MVI   COMM_MSG_ID+1,2
         B     ERR0100
ERR0030  DS    0H
         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION
         MVI   COMM_MSG_ID+1,3
         B     ERR0100
ERR0040  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     EXIT0000
ERR0100  DS    0H
         ITRACE ID=CALL_MSG,                                           +
               DATA1=(COMM_MSG_ID,2)
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0000  DS    0H
         ITRACE ID=CALL_MSG,                                           +
               DATA1=(COMM_MSG_ID,2)
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         BR    R2
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NAME_MVC       MVC   ESDDATA_NAME(0),0(R15)
RESIDENT_MVC   MVC   ESDDATA_RESIDENT(0),0(R15)
XATTR_MVC      MVC   ESDDATA_XATTR_CLASS(0),0(R15)
TARGET_MVC     MVC   ESDDATA_TARGET(0),0(R15)
RES_CLASS_MVC  MVC   ESDDATA_RESIDENT_CLASS(0),0(R15)
ADA_MVC        MVC   ESDDATA_ADA(0),0(R15)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(,R13)                      RESTORE R13
         LM    R14,R12,12(R13)                  RESTORE REGISTERS
         sR    R15,R15                          SET RC
         BR    R14                              RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
         IEWBUFF FUNC=MAPBUF,                                          +
               TYPE=ESD,                                               +
               HEADREG=R8,                                             +
               ENTRYREG=R7,                                            +
               SIZE=50,                                                +
               VERSION=5

               IEWBIND MF=(L,IEWBIND_I)
IEWBIND_L      EQU     *-IEWBIND_I
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START      DC   Q(DXDESD)

F1             DC   F'1'
F4             DC   F'4'
F8             DC   F'8'
H8             DC   H'8'
NONE           DC   C'NONE'
B_ESD          DC   H'5',C'B_ESD'
X_83000800     DC   X'83000800'
X_83000801     DC   X'83000801'
INFO_GET_ESD   DC   CL20'GET ESD INFO'


               LTORG

ESDEND         EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDESD                  DSECT
                        COPY  DXDPREF

DXD_IEWBIND             DS    0F,(IEWBIND_L)X

DXD_RETURN_CODE         DS    XL4            RETURN CODE
DXD_REASON_CODE         DS    XL4            REASON CODE

DXD_ESD_BUFFER          DS    A

DXD_ESD_RETURNED        DS    F
DXD_ESD_CURSOR          DS    F

DXD_NUMBER              DS    CL12

DXD_FLAGS               DS    X
$FLAGS_DISPLAYED        EQU   X'80'            SOME DATA DISPLAYED

                        DSPCREQ  DSECT=NO
                        COPY  ESDDATA

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT   DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD     TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY       TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY       REGEQU
         END        LMODESD
