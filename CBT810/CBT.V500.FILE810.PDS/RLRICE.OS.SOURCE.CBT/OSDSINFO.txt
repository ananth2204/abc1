* ------------------------------------------------------------------- *
*                                                                     *
*   Determine data set type for the data set being viewed "On Screen" *
*                                                                     *
*                                                                     *
*   In order for On Screen to know which access method to use for     *
*   reading a data set, On Screen needs to determine the data set's   *
*   DSORG.                                                            *
*                                                                     *
*   If the VOLSER was not given, call catalog service using IGGCSI00. *
*      If the data set is non-VSAM issue OBTAIN to read the FORMAT-1  *
*      using the VOLSER returned by catalog services.                 *
*                                                                     *
*   If the VOLSER was given, issue OBTAIN to read the FORMAT-1 from   *
*      the specified volume.                                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSDSINFO CSECT
OSDSINFO AMODE  31
OSDSINFO RMODE  ANY
         USING  OSDSINFO,R15
         USING  OSCOMM,R12
         USING  SESSION,R11
         B      INIT0000
MODID    DC     CL8'OSDSINFO'
         DC     CL8'&SYSDATE'
         DC     CL8'&SYSTIME'
         DC     A(DSINFOEND-OSDSINFO)
INIT0000 DS     0H
         STM    R14,R12,12(R13)               SAVE REGISTERS
         LR     R10,R15                       COPY BASE ADDRESS
         DROP   R15
         USING  OSDSINFO,R10
         L      R15,COMM_DXD                  DXD AREA BASE ADDRESS
         A      R15,DXD_START                 PLUS OFFSET
         ST     R13,4(,R15)
         ST     R15,8(,R13)
         LR     R13,R15                       COPY DXD AREA ADDRESS
         USING  DXDDSINF,R13                  DEFINE WORK AREA BASE
         MVC    DXD_CSECT,MODID
         ITRACE ID=ENTRY
         LR    R9,R1                          COPY DSINFREQ ADDRESS
         USING DSINFREQ,R9                    DEFINE BASE
         USING  DS1FMTID,DSINFO_DSCB
         MVI   DXD_RC,0
         MVI   DSINFO_DATASET_TYPE,0          ASSUME UNKNOWN
         TM    DSINFO_OPTIONS,$OPTIONS_VOLSER SPECIFIED VOLSER?
         BO    INFO0110                       YES
         ITRACE ID=LOOK_UP,                                            +
               DATA1=DSINFO_DSN+00,                                    +
               DATA2=DSINFO_DSN+08
         ITRACE ID=LOOK_UP+,                                           +
               DATA1=DSINFO_DSN+16,                                    +
               DATA2=DSINFO_DSN+24
         LA    R1,DSINFO_ERROR_INFO
         ST    R1,DXD_CSI_REASON_ADDRESS      SET ADDRESS
         LA    R8,DXD_CSI_SELECTION           CATALOG SEARCH CRITERIA
         ST    R8,DXD_CSI_SELECTION_ADDRESS   SET ADDRESS
         USING CSIFIELD,R8
         LA    R7,DXD_CSI_DATA_AREA           CSI AREA
         ST    R7,DXD_CSI_DATA_ADDRESS        SET ADDRESS
         USING CSIRWORK,R7
         MVC   CSIUSRLN,CSI_DATA_LENGTH
         MVC   DXD_CSI_AREA_LENGTH,CSI_DATA_LENGTH
         MVC   CSIFILTK,DSINFO_DSN            COPY DATA SET NAME
         MVC   CSICATNM,COMM_BLANKS           START WITH MASTER CATALOG
         MVC   CSIRESNM,COMM_BLANKS           NOT RESUMING A SEARCH
         MVC   CSIDTYPD,COMM_BLANKS           RETURN ALL ENTRY TYPES
         MVI   CSICLDI,C'Y'                   RETURN DATA AND INDEX
         MVI   CSIOPTNS,C'F'                  USE 4-BYTE LENGTHS
         MVI   CSIS1CAT,C' '                  SEARCH ALL CATALOGS
         MVI   CSIRESUM,C' '                  THIS IS INITIAL CALL
         MVC   CSINUMEN,H1                    NUMBER OF FIELDS WANTED
         MVC   CSIFLDNM,C_VOLSER              NAME OF FIELD
         LOAD  EP=IGGCSI00                    LOAD THE CSI INTERFACE
         LR    R15,R0                         COPY ENTRY POINT
         LA    R1,DXD_CSI_PARMS               PARAMETER LIST
         ITRACE ID=CALL_CSI,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                        CALL CATALOG SEARCH
         STC   R15,DXD_RC                     SAVE RETURN CODE
         DELETE EP=IGGCSI00                   DELETE IGGCSI00
         ITRACE ID=CSI_RC,                                             +
               DATA1=(DXD_RC,1),                                       +
               DATA2=(DXD_CSI_CATALOG_FLAG,1)
         CLI   DXD_RC,0                       LOOKUP SUCCESSFUL?
         BNE   ERR0010                        NO
         TM    DXD_CSI_CATALOG_FLAG,$NOT_CATALOGED
         BO    INFO0300                       NOT CATALOGED
         ITRACE ID=CSIRWORK,                                           +
               RDATA1=R7
         LA    R7,CSIRWORK_L(,R7)             FIRST COMPONENT
         ITRACE ID=CSICAT,                                             +
               RDATA1=R7
         LA    R7,CSICAT_L(,R7)
         USING CSIINFO,R7
         ITRACE ID=CSIINFO,                                            +
               RDATA1=R7,                                              +
               DATA2=(CSIETYPE,1)
INFO0010 DS    0H
         CLI   CSIETYPE,C'A'                  NONVSAM?
         BE    INFO0060                       YES
         CLI   CSIETYPE,C'C'                  VSAM?
         BE    INFO0020                       YES
         CLI   CSIETYPE,C'D'                  DATA COMPONENT?
         BE    INFO0030                       YES
         CLI   CSIETYPE,C'H'                  GDG MEMBER?
         BE    INFO0040                       YES
         CLI   CSIETYPE,C'I'                  INDEX COMPONENT?
         BE    INFO0050                       YES
         B     EXIT0000                       OTHERWISE I GIVE UP
* ------------------------------------------------------------------- *
*                                                                     *
*        For VSAM do not try to OBTAIN the DSCB.  The DATA, INDEX,    *
*        or other components may not have the same name as the        *
*        CLUSTER.                                                     *
*                                                                     *
*        OSVSAM will issue SHOWCB to determine record length,         *
*        key length, etc and set DS1LRECL, DS1KEYL,...                *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0020 DS    0H
         ITRACE ID=CLUSTER,                                            +
               RDATA1=R7
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM
         LA    R7,CSIINFO_L(,R7)              SKIP CLUSTER ENTRY
         ITRACE ID=DATA,                                               +
               RDATA1=R7,                                              +
               DATA2=(CSIETYPE,1)
         MVC   DSINFO_VOLSER,CSIFDDAT         COPY VOLSER
         B     EXIT0000
INFO0030 DS    0H
         ITRACE ID=VSAMDATA
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_DATA
         B     INFO0070
INFO0040 DS    0H
         ITRACE ID=GDG
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_GDG
         B     INFO0070
INFO0050 DS    0H
         ITRACE ID=VSAMINDX
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_INDEX
         B     INFO0070
INFO0060 DS    0H
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_NONVSAM
* ------------------------------------------------------------------- *
*                                                                     *
*      If the VOLSER is all asterisks (******), change it to          *
*      the SYSRES VOLSER.                                             *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0070 DS    0H
         MVC   DSINFO_VOLSER,CSIFDDAT         COPY VOLSER
         L     R14,CVTPTR                     ADDRESS OF THE CVT
         USING CVT,R14                        DEFINE BASE
         L     R15,CVTSYSAD                   SYSRES UCB'S ADDRESS
         USING UCBOB,R15                      DEFINE BASE
* ------------------------------------------------------------------- *
*                                                                     *
*     Sometime this probably should allow multiple VOLSERs.           *
*                                                                     *
* ------------------------------------------------------------------- *
         CLC   DSINFO_VOLSER,=C'******'
         BNE   INFO0100
         MVC   DSINFO_VOLSER,UCBVOLI
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*     I would much rather use an IBM supplied macro to map the        *
*     CAMLST or even better, see IBM re-code the OBTAIN macro         *
*     with a MF=E/I/L type parameter to allow dynamic specification   *
*     of parameters.  So far I haven't found any such mapping         *
*     macro or member of SYS1.MACLIB or SYS1.MODGEN.                  *
*                                                                     *
*     So.. I'll copy a hard-coded CAMLST and over-store some of       *
*     the data.                                                       *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0100 DS    0H
         TM    DSINFO_DATASET_TYPE,$DATA_TYPE_NONVSAM
         BO    INFO0110
         TM    DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM
         BO    INFO0110
         B     EXIT0000
INFO0110 DS    0H
         TM    DSINFO_OPTIONS,$DSINFO_NO_OBTAIN
         BO    EXIT0000                       DON'T ISSUE OBTAIN
         CLC   DSINFO_VOLSER,C_MIGRAT         MIGRATED?
         BE    EXIT0000                       YES.. CAN'T GET DSCB
         ITRACE ID=GET_DSCB,                                           +
               DATA1=(DSINFO_VOLSER,6)
         MVC   DXD_CAMLST(CAMLST_L),CAMLST_I
         LA    R1,DSINFO_DSN                  DSN
         ST    R1,DXD_CAMLST+4                SET ADDRESS
         LA    R1,DSINFO_VOLSER               VOLSER
         ST    R1,DXD_CAMLST+8                SET ADDRESS
         LA    R1,DSINFO_DSCB                 DSCB
         ST    R1,DXD_CAMLST+12               SET ADDRESS
         LA    R1,DXD_CAMLST                  CAMLST ADDRESS
         ITRACE ID=OBTAIN,                                             +
               RDATA1=R1
         OBTAIN (R1)                          READ DSCB
         ITRACE ID=OBTN_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0020                        NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TM    DS1DSORG+0,DS1DSGPS            SEQUENTIAL?
         BO    INFO0200                       YES
         TM    DS1DSORG+0,DS1DSGDA            DIRECT ACCESS?
         BO    INFO0200                       YES
         TM    DS1DSORG+0,DS1DSGPO            PDS?
         BO    INFO0210                       YES
         TM    DS1DSORG+1,DS1ORGAM            VSAM?
         BO    INFO0230                       YES
         B     EXIT0000
INFO0200 DS    0H
         ITRACE ID=PS
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_SEQUENTIAL
         B     EXIT0000
INFO0210 DS    0H
         ITRACE ID=PO
         CLC   SESS_MEMBER,COMM_BLANKS        MEMBER NAME?
         BE    INFO0220                       NO
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_PDS_MEMBER
         B     EXIT0000
INFO0220 DS    0H
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_PDS_DIR
         B     EXIT0000
INFO0230 DS    0H
         ITRACE ID=VSAM2
*        MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM
         TM    DSINFO_OPTIONS,$OPTIONS_VOLSER SPECIFIED VOLSER?
         BNO   EXIT0000                       NO
         ITRACE ID=WARN
         LA    R3,MSG_01_L
         GETMAIN RU,                                                   +
               LV=(R3),                                                +
               LOC=BELOW
         LR    R2,R1                          COPY ADDRESS
         MVC   0(MSG_01_L,R2),MSG_01          COPY MESSAGE
         TPUT  (R2),(R3),R                    ISSUE MESSAGE
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=(R3)
         LA    R3,MSG_02_L
         GETMAIN RU,                                                   +
               LV=(R3),                                                +
               LOC=BELOW
         LR    R2,R1                          COPY ADDRESS
         MVC   0(MSG_02_L,R2),MSG_02          COPY MESSAGE
         TPUT  (R2),(R3),R                    ISSUE MESSAGE
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=(R3)
         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_SEQUENTIAL
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0300 DS    0H
         ITRACE ID=NOT_CAT
         MVI   COMM_MSG_ID+1,1
         B     ERR0100
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID+1,2
         STH   R15,COMM_INFO_03
         B     ERR0100
ERR0020  DS    0H
         MVI   COMM_MSG_ID+1,3
         STH   R15,COMM_INFO_03
ERR0100  DS    0H
         MVC   COMM_INFO_01(L'DSINFO_DSN),DSINFO_DSN
         MVC   COMM_INFO_02(L'DSINFO_VOLSER),DSINFO_VOLSER
         MVC   COMM_MSG_CSECT,MODID
         MVI   COMM_MSG_ID+0,0
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVI   DXD_RC,8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         SR    R2,R2
         IC    R2,DXD_RC                      SAVE RC
         ITRACE ID=EXIT,                                               +
               RDATA1=R2,                                              +
               DATA2=(DSINFO_DATASET_TYPE,1)
         L     R13,4(,R13)                    RESTORE R13
         L     R14,12(,R13)                   RESTORE R14
         LR    R15,R2                         SET RC
         LM    R0,R12,20(R13)                 RESTORE OTHER REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START            DC    Q(DXDDSINF)
CSI_DATA_LENGTH      DC    A($CSI_DATA_LENGTH)

CAMLST_I             CAMLST SEARCH,*,*,*
CAMLST_L             EQU   *-CAMLST_I

H1                   DC    H'1'
C_VOLSER             DC    CL8'VOLSER'
C_MIGRAT             DC    CL6'MIGRAT'
MSG_01               DC    C'OSDSINFO01W  WARNING.  VOLSER specified fo+
               r a VSAM dataset.'
MSG_01_L             EQU   *-MSG_01
MSG_02               DC    C'OSDSINFO02W  Reading as non-VSAM'
MSG_02_L             EQU   *-MSG_02
                     LTORG
DSINFOEND            EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDDSINF                  DSECT
                          COPY  DXDPREF

DXD_CAMLST                DS    0F,(CAMLST_L)X

DXD_CSI_PARMS             DS    0A
DXD_CSI_REASON_ADDRESS    DS    A
DXD_CSI_SELECTION_ADDRESS DS    A
DXD_CSI_DATA_ADDRESS      DS    A

DXD_CSI_SELECTION         DS    (CSIFIELD_L)X

DXD_RC                    DS    X

* ------------------------------------------------------------------- *
*                                                                     *
DXD_CSI_DATA_AREA         DS    0A,($CSI_DATA_LENGTH)X
                          ORG   DXD_CSI_DATA_AREA
DXD_CSI_AREA_LENGTH       DS    F
DXD_CSI_REQUIRED_LENGTH   DS    F
DXD_CSI_USED_LENGTH       DS    F           LENGTH USED
DXD_CSI_FIELD_NAMES       DS    H           NUMBER OF FIELD NAMES + 1

DXD_CSI_CATALOG_FLAG      DS    X
$NOT_CATALOGED            EQU   X'40'       .. DATA SET NOT CATALOGED

DXD_CSI_CATALOG_TYPE      DS    C           ALWAYS C'0'
DXD_CSI_CATALOG_NAME      DS    CL44        CATALOG NAME
                          DS    CL2         MODULE ID
                          DS    X           REASON CODE
                          DS    X           RETURN CODE

DXD_CSI_ENTRY_FLAG        DS    X
DXD_CSI_ENTRY_TYPE        DS    C
*                               C'A'        .. NONVSAM
*                               C'C'        .. CLUSTER
*                               C'D'        .. DATA COMPONENT
*                               C'H'        .. MEMBER OF A GDG
*                               C'I'        .. INDEX COMPONENT
*                               C'F'        .. HFS
*                               C'T'        .. VTOC
DXD_CSI_ENTRY_NAME        DS    CL44        ENTRY NAME (S/B DSN)
                          DS    CL2         MODULE NAME
                          DS    X           REASON CODE
                          DS    X           RETURN CODE

                          DS    XL2         TOTAL LENTH OF INFO
                          DS    XL2         RESERVED
DXD_CSI_VOLSER_LENGTH     DS    XL4         LENGTH OF FIELD S/B 6
DXD_VOLSERS               DS    16CL6
*                                                                     *
* ------------------------------------------------------------------- *
                          DSINFREQ DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 IBMMAC   CVT=YES,UCB=YES
                 IBMMAC   VTOC=1
                 IBMMAC   CSI=YES
CSIFIELD_L       EQU      *-CSIFIELD

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CSIRWORK         DSECT
CSIUSRLN         DS       F                   LENGTH OF WORK AREA
CSIREQLN         DS       F                   MINIMUM FOR 1 ENTRY
CSIUSDLN         DS       F                   TOTAL LENGTH USED
CSINUMFD         DS       H                   NBR OF FIELD NAMES + 1
CSIRWORK_L       EQU      *-CSIRWORK

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CSICAT           DSECT
CSICFLG          DS       X                   CATALOG FLAG INFO
CSINTCIF         EQU      X'80'               .. NOT SUPPORTED
CSINOENT         EQU      X'40'               .. NOT ENTRY FOUND
CSINTCMP         EQU      X'20'               .. DATA NOT COMPLETE
CSICERR          EQU      X'10'               .. ERROR PROCESSING CATLG
CSICERRP         EQU      X'80'               .. PARTIAL ERROR
CSICTYPE         DS       X                   CATALOG TYPE (X'F0')
CSICNAME         DS       CL44                CATALOG NAME
CSICRETN         DS       0CL4
CSICRETM         DS       CL2                 .. MODULE NAME
CSICRETR         DS       X                   .. REASON CODE
CSICRETC         DS       X                   .. RETURN CODE
CSICAT_L         EQU      *-CSICAT

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CSIINFO          DSECT
CSIEFLAG         DS       X                   ENTRY FLAG INFORMATION
CSIPMENT         EQU      X'80'               .. PRIMARY ENTRY
CSIENTER         EQU      X'40'               .. ERROR FOR THIS ENTRY
CSIEDATA         EQU      X'20'               .. DATA RETURNED
CSIETYPE         DS       C                   ENTRY TYPE
CSIENAME         DS       CL44                ENTRY NAME
CSIRETN          DS       0CL4
CSIERETM         DS       CL2                 MODULE ID
CSIERETR         DS       X                   REASON CODE
CSIERETC         DS       X                   RETURN CODE
CSITOTLN         DS       XL2                 TOTAL LENGTH OF DATA
                 DS       XL2
CSILENFD         DS       XL2                 LENGTH OF FIELDS
CSILENF1         DS       XL2                 FIRST LENGTH
CSIINFO_L        EQU      *-CSIINFO
CSIFDDAT         DS       CL6

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$CSI_DATA_LENGTH EQU      1024
                 COPY     REGEQU
                 END      OSDSINFO
