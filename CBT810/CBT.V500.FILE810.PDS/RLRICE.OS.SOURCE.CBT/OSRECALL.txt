* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSRECALL                                              *
*                                                                     *
*  Manage the RECALL table.                                           *
*                                                                     *
* ------------------------------------------------------------------- *
OSRECALL CSECT
OSRECALL AMODE 31
OSRECALL RMODE ANY
         USING OSRECALL,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'OSRECALL'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(RECALLEND-OSRECALL)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R10,R15                        COPY BASE ADDRESS
         DROP  R15
         USING OSRECALL,R10
         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS
         A     R15,DXD_START                  PLUS OFFSET
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                        COPY DXD AREA ADDRESS
         USING DXDRCALL,R13                   DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         LR    R9,R1                          SAVE PARM BLOCK ADDRESS
         USING RCALLREQ,R9                    DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               RDATA1=R9,                                              +
               DATA2=RCALLREQ_FUNC
         CLI   RCALLREQ_FUNC,$RCALLREQ_INIT
         BE    INIT0010                       YES
         CLI   RCALLREQ_FUNC,$RCALLREQ_RECALL
         BE    RCALL000                       YES
         CLI   RCALLREQ_FUNC,$RCALLREQ_STORE
         BE    STORE000                       YES
         CLI   RCALLREQ_FUNC,$RCALLREQ_TERM
         BE    TERM0000                       YES
         DC    H'0',C'INVALID FUNCTION'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         ITRACE ID=INIT
         GETMAIN RU,                                                   +
               LV=RECALL_L*COMM_RECALL_NBR,                            +
               LOC=ANY
         ST    R1,COMM_RECALL_FIRST
         ST    R1,COMM_RECALL_CURR
         LA    R2,RECALL_L*19(R1)
         ST    R2,COMM_RECALL_LAST
         USING RECALL,R1
         ITRACE ID=INIT_2,                                             +
               RDATA1=R1,                                              +
               RDATA2=R2
         LA    R2,COMM_RECALL_NBR
INIT0020 DS    0H
         MVC   RECALL_CMD,COMM_BLANKS
         XC    RECALL_LENGTH,RECALL_LENGTH
         LA    R1,RECALL_L(,R1)
         BCT   R2,INIT0020
         DROP  R1
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RCALL000 DS    0H
         ITRACE ID=RECALL,                                             +
               DATA1=(DXD_RECALL_CURR,4)
         ICM   R2,15,DXD_RECALL_CURR          CURRENT RECALL ENTRY
         BZ    EXIT0000                       NOTHING STORED
         USING RECALL,R2                      DEFINE BASE
         OC    RECALL_LENGTH,RECALL_LENGTH
         BZ    EXIT0000
RCALL010 DS    0H
         MVC   RCALLREQ_LENGTH,RECALL_LENGTH
         MVC   RCALLREQ_CMD,RECALL_CMD
RCALL020 DS    0H
         C     R2,COMM_RECALL_FIRST           ALREADY AT FIRST?
         BNE   RCALL030                       NO
         L     R2,COMM_RECALL_LAST            'WRAP' TO BOTTOM
         ITRACE ID=WRAP,                                               +
               RDATA1=R2
         B     RCALL040
RCALL030 DS    0H
         SH    R2,=Y(RECALL_L)                BACK UP 1 ENTRY
RCALL040 DS    0H
         C     R2,DXD_RECALL_CURR             SCANNED ENTIRE TABLE?
         BE    RCALL050                       YES
         OC    RECALL_LENGTH,RECALL_LENGTH
         BZ    RCALL020
RCALL050 DS    0H
         ITRACE ID=NEW_CURR,                                           +
               RDATA1=R2
         ST    R2,DXD_RECALL_CURR             SET CURRENT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
STORE000 DS    0H
         ITRACE ID=STORE,                                              +
               DATA1=(COMM_RECALL_CURR,4)
         ICM   R2,15,COMM_RECALL_CURR         CURRENT RECALL ENTRY
         BZ    EXIT0000
         CLC   RCALLREQ_LENGTH,RECALL_LENGTH
         BNE   STORE010                       NOT SAME
         CLC   RCALLREQ_CMD,RECALL_LENGTH
         BE    STORE040                       SAME.. DON'T STORE AGAIN
STORE010 DS    0H
         OC    RECALL_LENGTH,RECALL_LENGTH
         BZ    STORE030
         C     R2,COMM_RECALL_LAST            AT BOTTOM OF TABLE?
         BE    STORE020
         AH    R2,=Y(RECALL_L)                NEXT ENTRY
         B     STORE030
STORE020 DS    0H
         L     R2,COMM_RECALL_FIRST           'WRAP' BACK TO TOP
         ITRACE ID=WRAP,                                               +
               RDATA1=R2
STORE030 DS    0H
         ITRACE ID=NEW_CURR,                                           +
               RDATA1=R2
         ST    R2,COMM_RECALL_CURR            SET 'CURRENT' ADDRESS
         ST    R2,DXD_RECALL_CURR             SAVE FOR RECALL ALSO
         MVC   RECALL_LENGTH,RCALLREQ_LENGTH
         MVC   RECALL_CMD,RCALLREQ_CMD
         B     EXIT0000
STORE040 DS    0H
         ITRACE ID=DUP
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ICM   R1,15,COMM_RECALL_FIRST        RECALL TABLE ADDRESS
         BZ    EXIT0000
         ITRACE ID=TERM,                                               +
               RDATA1=R1
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=RECALL_L*COMM_RECALL_NBR
         XC    COMM_RECALL_FIRST,COMM_RECALL_FIRST
         XC    COMM_RECALL_CURR,COMM_RECALL_CURR
         XC    COMM_RECALL_LAST,COMM_RECALL_LAST
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START       DC     Q(DXDRCALL)
                LTORG
RECALLEND       EQU    *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDRCALL        DSECT
                COPY   DXDPREF
DXD_RECALL_CURR DS     A
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECALL          DSECT
RECALL_LENGTH   DS       H
RECALL_CMD      DS       CL80
RECALL_L        EQU      *-RECALL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                RCALLREQ DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY     REGEQU
                END      OSRECALL
