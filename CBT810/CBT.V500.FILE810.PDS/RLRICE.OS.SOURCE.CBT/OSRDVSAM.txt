* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSRDVSAM                                              *
*                                                                     *
*  Read VSAM datasets                                                 *
*                                                                     *
*  The data set is already allocated.  The DD name is in SESS_DD.     *
*                                                                     *
*  For KSDSes, the FROMKEY and TOKEY keywords are allowed.            *
*                                                                     *
*  In all cases the data is loaded into the data space.               *
*                                                                     *
* ------------------------------------------------------------------- *
OSRDVSAM CSECT
OSRDVSAM AMODE 31
OSRDVSAM RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSRDVSAM,R15
         B     INIT0000
MODID    DC    CL8'OSRDVSAM'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(VSAMEND-OSRDVSAM)
INIT0000 DS    0H
         USING DS1FMTID,SESS_DSCB               DEFINE BASE
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         DROP  R15
         USING OSRDVSAM,R10                     DEFINE BASE
         GETMAIN RU,                                                   +
               LV=OSRDVSAM_WORK_L,                                     +
               LOC=ANY
         ST    R13,4(,R1)                       SAVE R13
         ST    R1,8(,R13)                       CHAIN SAVE AREA
         LR    R13,R1                           COPY WORK AREA ADDRESS
         USING OSRDVSAM_WORK,R13                DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         MVC   SESS_DATA_LOADER,MODID           WHO LOADED DATA
         MVI   WORK_RC,0                        ASSUME RC = 0
         LA    R0,ACB_L
         ST    R0,SESS_DCB_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=BELOW
         LR    R9,R1
         ST    R9,SESS_DCB_ADDR
         MVC   0(ACB_L,R9),ACB
         MVC   WORK_RPL(RPL_L),RPL
         MVC   WORK_EXLST(EXLST_L),EXLST
         MVC   WORK_OPEN(OPEN_L),OPEN
         MVC   WORK_CLOSE(CLOSE_L),CLOSE
         USING IFGACB,R9
         LA    R8,WORK_RPL
         USING IFGRPL,R8
         ST    R8,RPLDACB                       SET ACB ADDRESS
         LA    R7,WORK_EXLST
         USING IFGEXLST,R7
         ST    R7,ACBEXLST                      SET EXLST ADDRESS
         MVC   ACBDDNM,SESS_DD                  SET DDNAME IN ACB
         ST    R9,RPLDACB                       SET ADDRESS IN RPL
         MVC   RPLBUFL,=A($BUFFSIZE)            SET BUFFER SIZE
         LA    R1,EOF0000                       EOF ADDRESS
         STCM  R1,15,EXLEODP                    SET EOF ADDRESS
         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR
         LA    R1,DATASPACE_1                   USE DATA SPACE 1
         ST    R1,DSPCREQ_DATASPACE
         MVC   RPLAREA,SESS_IO_AREA
         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA
         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=OPEN
         OPEN  ((R9),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         ITRACE ID=OPEN_RC,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR0010                          NO
         OI    SESS_DCB_FLAGS,$SESS_ACB_OPEN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TESTCB ACB=(R9),                       KSDS?                  +
               ATRB=KSDS,                                              +
               MF=(G,WORK_TESTCB1,TESTCB1_L)
         BE    MAIN0010                         YES
         TM    SESS_USER_OPTIONS,$OPTIONS_FROMKEY+$OPTIONS_TOKEY
         BNZ   ERR0030                          NOT ALLOWED
         TESTCB ACB=(R9),                       RRDS?                  +
               ATRB=RRDS,                                              +
               MF=(G,WORK_TESTCB2,TESTCB2_L)
         BE    MAIN0030                         YES
         TESTCB ACB=(R9),                       ESDS?                  +
               ATRB=ESDS,                                              +
               MF=(G,WORK_TESTCB3,TESTCB3_L)
         BE    MAIN0040                         YES
         TESTCB ACB=(R9),                       LDS (LINEAR)?          +
               ATRB=LDS,                                               +
               MF=(G,WORK_TESTCB4,TESTCB4_L)
         BE    MAIN0050                         YES
         TESTCB ACB=(R9),                       VRRDS?                 +
               ATRB=VRRDS,                                             +
               MF=(G,WORK_TESTCB5,TESTCB5_L)
         BE    MAIN0060                         YES
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=KSDS
         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM_KSDS
         MVC   WORK_VSAM_TYPE,KSDS              SET VSAM TYPE
         ITRACE ID=SHOW_CB
         LA    R2,SESS_VSAM_LRECL               AREA FOR RETURNED DATA
         SHOWCB ACB=(R9),                                              +
               AREA=(R2),                                              +
               FIELDS=(LRECL,KEYLEN,RKP),                              +
               LENGTH=12,                                              +
               MF=(G,WORK_SHOWCB1,SHOWCB1_L)
         ITRACE ID=SHOWCBRC,                    SHOWCB RC              +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR0020
         MVC   DS1LRECL,SESS_VSAM_LRECL+2       COPY TO FMT1
         MVC   DS1KEYL,SESS_VSAM_KEY_LENGTH+3
         MVC   DS1RKP,SESS_VSAM_RKP+2
         TM    SESS_USER_OPTIONS,$OPTIONS_FROMKEY
         BNO   MAIN0100
         ITRACE ID=MODCB1
         LA    R2,SESS_FROM_KEY
         L     R3,SESS_FROMKEY_LENGTH
         MODCB RPL=(R8),                                               +
               ARG=(R2),                                               +
               KEYLEN=(R3),                                            +
               OPTCD=(KEY,DIR,SYN,NUP,GEN,KGE,MVE),                    +
               MF=(G,WORK_MODCB1,MODCB1_L)
         ITRACE ID=MOD1_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR1010
         MVC   COMM_INFO_03(L'FROM_KEY),FROM_KEY
         ITRACE ID=POINT                        ISSUE POINT
         POINT RPL=(R8)
         ITRACE ID=POINT_RC,                                           +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR1010                          NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0030 DS    0H
         ITRACE ID=RRDS
         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM_RRDS
         MVC   WORK_VSAM_TYPE,RRDS              SET TYPE
         B     MAIN0100
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0040 DS    0H
         ITRACE ID=ESDS
         MVC   WORK_VSAM_TYPE,ESDS              SET TYPE
         ITRACE ID=MODCB2
         MODCB ACB=(R9),                                               +
               MACRF=ADR,                       USE ADR MODE           +
               MF=(G,WORK_MODCB2,MODCB2_L)
         ITRACE ID=ADR_RC,                                             +
               RDATA1=R15
         B     MAIN0100
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0050 DS    0H
         ITRACE ID=MODCB3
         MVC   WORK_VSAM_TYPE,LDS               SET TYPE
         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM_LDS   DATA TYPE
         MODCB RPL=(R8),                        MODIFY RPL             +
               OPTCD=(SEQ,FWD,CNV),                                    +
               MF=(G,WORK_MODCB3,MODCB3_L)
         ITRACE ID=MODCB4
         MODCB RPL=(R9),                        MODIFY ACB             +
               OPTCD=(CNV),                                            +
               MF=(G,WORK_MODCB4,MODCB4_L)
         B     MAIN0130
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=VVDS
         MVC   WORK_VSAM_TYPE,VVDS              SET TYPE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         L     R1,COMM_OSSPFD
         USING OSSPFD,R1
         MVC   SPF_VSAM_TYPE,WORK_VSAM_TYPE
         DROP  R1
         TM    SESS_USER_OPTIONS,$OPTIONS_RBA
         BNO   MAIN0110
         LA    R2,SESS_RBA
         ITRACE ID=MODCB5,                                             +
               RDATA1=R2
         MODCB RPL=(R8),                                               +
               OPTCD=(ADR,RBA),                                        +
               ARG=(R2),                                               +
               MF=(G,WORK_MODCB5,MODCB5_L)
         ITRACE ID=MOD1_RC,                                            +
               RDATA1=R15
         MVC   COMM_INFO_03(L'RBA),RBA
         ITRACE ID=POINT_2
         POINT RPL=(R8)                         ISSUE POINT
         ITRACE ID=RC,                                                 +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR0040                          NO
MAIN0110 DS    0H
         CLC   WORK_VSAM_TYPE,ESDS              ESDS?
         BE    MAIN0120                         YES
         ITRACE ID=MODCB6
         MODCB RPL=(R8),                        MODIFY RPL             +
               OPTCD=(SEQ,FWD,MVE),                                    +
               MF=(G,WORK_MODCB6,MODCB6_L)
         ITRACE ID=MOD2_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR0050                          NO
         B     MAIN0130
MAIN0120 DS    0H
         ITRACE ID=MODCB7
         MODCB RPL=(R8),                        MODIFY RPL             +
               OPTCD=(ADR,SEQ,FWD,MVE),                                +
               MF=(G,WORK_MODCB7,MODCB7_L)
         ITRACE ID=MOD3_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR0050                          NO
MAIN0130 DS    0H
         ITRACE ID=READ,                                               +
               RDATA1=R8
         L     R1,DSPCREQ_RECORD_NBR            RECORD NBR
         LA    R1,1(,R1)                        PLUS 1
         ST    R1,DSPCREQ_RECORD_NBR            UPDATE
         GET   RPL=(R8)                         READ A RECORD
         ITRACE ID=READ_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR1010                          NO
         ITRACE ID=AT_START,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DATASPACE_1_FIRST_RECORD,4)
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD
         BL    MAIN0130                         NO
         L     R1,RPLRLEN                       RECORD LENGTH
         ST    R1,DSPCREQ_RECORD_LENGTH
         LA    R2,WORK_RBA
         SHOWCB RPL=(R8),                                              +
               AREA=(R2),                                              +
               FIELDS=(RBA),                                           +
               LENGTH=4,                                               +
               MF=(G,WORK_SHOWCB2,SHOWCB2_L)
         ITRACE ID=AREA_RBA,                                           +
               DATA1=(RPLAREA,4),                                      +
               DATA2=(WORK_RBA,4)
         LTR   R15,R15
         BNZ   ERR0060
         MVC   DSPCREQ_RBA,WORK_RBA             COPY RBA
         ITRACE ID=STORE,                                              +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         LA    R1,DSPCREQ                       DATA SPACE PARMS
         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT
         BALR  R14,R15                          STORE THIS RECORD
         CLI   DSPCREQ_RC,$DSPCREQ_FULL         DATA SPACE FULL?
         BE    MAIN0170                         YES
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR1010                          BAD NEWS
         OC    SESS_NUMBER,SESS_NUMBER
         BZ    MAIN0140
         L     R1,DATASPACE_1_LAST_RECORD
         S     R1,DATASPACE_1_FIRST_RECORD
         LA    R1,1(,R1)
         C     R1,SESS_NUMBER                   AT RECORD LIMIT?
         BL    MAIN0140                         NO, READ NEXT RECORD
         B     MAIN0160                         FORCE "LOGICAL EOF"
MAIN0140 DS    0H
         TM    SESS_USER_OPTIONS,$OPTIONS_TOKEY
         BNO   MAIN0130                         NO 'TO KEY'
         L     R1,SESS_VSAM_KEY_LENGTH
         CH    R1,H40                           TOO LONG?
         BNH   MAIN0150                         NO
         LH    R1,H40                           LIMIT TO 40
MAIN0150 DS    0H
         BCTR  R1,0                             FOR EXECUTE
         L     R2,SESS_VSAM_RKP                 RELATIVE KEY POSITION
         A     R2,DSPCREQ_RECORD_ADDR
         EX    R1,TOKEY_CLC                     REACHED 'TO KEY'?
         BNH   MAIN0130                         NO
MAIN0160 DS    0H
         ITRACE ID=LOGICEOF,                                           +
               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR
         B     EXIT0000
MAIN0170 DS    0H
         ITRACE ID=FULL
         B      EXIT0000
* ------------------------------------------------------------------- *
*        EOF                                                          *
* ------------------------------------------------------------------- *
EOF0000  DS    0H
         ITRACE ID=EOF,                                                +
               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ST    R15,COMM_DWORD                   SET RC
         LA    R0,1                             SET MESSAGE NUMBER
         B     ERR1000
ERR0020  DS    0H
         ST    R15,COMM_DWORD                   SET RC
         LA    R0,2                             SET MESSAGE NUMBER
         B     ERR1000
ERR0030  DS    0H
         LA    R0,3                             SET MESSAGE NUMBER
         B     ERR1000
ERR0040  DS    0H
         LA    R0,4                             SET MESSAGE NUMBER
         B     ERR1000
ERR0050  DS    0H
         LA    R0,5                             SET MESSAGE NUMBER
         B     ERR1000
ERR0060  DS    0H
         LA    R0,6                             SET MESSAGE NUMBER
         B     ERR1000
ERR1000  DS    0H
         ST    R15,COMM_DWORD
         MVC   COMM_INFO_01(1),RPLFDBK
         MVC   COMM_INFO_02(1),RPLERRCD
         MVC   COMM_MSG_CSECT,MODID             SET OUR CSECT NAME
         STCM  R0,3,COMM_MSG_ID
         L     R15,COMM_V_OSMSG                 OSMSG ENTRY POINT
         BALR  R14,R15                          CONSTRUCT MESSAGE
         ITRACE ID=MSGLINES,                                           +
               DATA1=(COMM_MSG_LINES,2)
         B     EXIT0030                         EXIT
ERR1010  DS    0H
         ITRACE ID=RPLFDBK,                                            +
               DATA1=(RPLFDBK,1),                                      +
               DATA2=(RPLERRCD,1)
         STH   R15,COMM_DWORD
         MVC   COMM_MSG_1(MSG01_L),MSG01
WORK     USING MSG01,COMM_MSG_1
         UNPK  COMM_INFO_01(5),COMM_DWORD(3)    UNPACK RC
         MVC   WORK.MSG01_RC,COMM_INFO_01
         TR    WORK.MSG01_RC,COMM_HEXCHAR
         UNPK  COMM_INFO_01(7),RPLFDBK(4)       UNPACK FEED BACK
         MVC   WORK.MSG01_FDBK,COMM_INFO_01
         TR    WORK.MSG01_FDBK,COMM_HEXCHAR
         MVC   COMM_MSG_LINES,H1
         B     EXIT0030
         DROP  WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?
         BO    EXIT0010                         YES
         MVC   SESS_DEFAULT_FORMAT,BROWSE
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT
         BO    EXIT0040
         MVC   SESS_FORMAT,BROWSE
         B     EXIT0040
EXIT0010 DS    0H
         MVC   SESS_FORMAT,EDIT
         MVC   SESS_DEFAULT_FORMAT,EDIT
         B     EXIT0040
EXIT0030 DS    0H
         MVI   WORK_RC,8
         DC    H'0'
EXIT0040 DS    0H
         TM    SESS_DCB_FLAGS,$SESS_ACB_OPEN    DCB OPEN?
         BNO   EXIT0050                         NO
         ITRACE ID=CLOSE
         CLOSE ((R9)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         L     R0,SESS_DCB_LENGTH
         FREEMAIN RU,                                                  +
               A=(R9),                                                 +
               LV=(0)
         XC    SESS_DCB_ADDR,SESS_DCB_ADDR
         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH
         NI    SESS_DCB_FLAGS,255-$SESS_ACB_OPEN
EXIT0050 DS    0H
         SR    R2,R2
         IC    R2,WORK_RC
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         LR    R1,R13                           COPY WORK AREA ADDRESS
         L     R13,4(,R13)                      RESTORE R13
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=OSRDVSAM_WORK_L
         L     R14,12(,R13)                     RESTORE R14
         LR    R15,R2                           SET RC
         LM    R0,R12,20(R13)                   RESTORE REGISTERS
         BR    R14                              RETURN

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TOKEY_CLC  CLC  0(0,R2),SESS_TO_KEY

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ACB      ACB   AM=VSAM,                                                +
               DDNAME=ANYDD,                                           +
               MACRF=(ADR,DIR,IN,KEY,SEQ,CNV),                         +
               EXLST=*
ACB_L          EQU   *-ACB
RPL      RPL   AM=VSAM
RPL_L    EQU   *-RPL
EXLST    EXLST AM=VSAM,                                                +
               EODAD=(*,A)
EXLST_L  EQU   *-EXLST
OPEN     OPEN  (*,INPUT),                                              +
               MODE=31,                                                +
               MF=L
OPEN_L         EQU   *-OPEN
CLOSE    CLOSE (*),                                                    +
               MODE=31,                                                +
               MF=L
CLOSE_L        EQU   *-CLOSE

F1             DC    F'1'
H1             DC    H'1'
H40            DC    H'40'

MSG01          DS    0C
               DC    C'OSRDVSAM01E '
               DC    C'Error during READ.  R15='
MSG01_RC       DC    CL4' '
               DC    C', RPLFDBK='
MSG01_FDBK     DC    CL6' '
MSG01_L        EQU   *-MSG01

EDIT           DC    CL8'EDIT'
ESDS           DC    CL4'ESDS'
FROM_KEY       DC    C'FROM KEY'
KSDS           DC    CL4'KSDS'
LDS            DC    CL4'LDS '
RBA            DC    C'RBA'
RRDS           DC    CL4'RRDS'
VVDS           DC    CL4'VVDS'

BROWSE         DC    CL8'BROWSE'
NONE           DC    CL8'None'
               LTORG
VSAMEND        EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSRDVSAM_WORK    DSECT
                 COPY  DXDPREF
WORK_RPL         DS    0F,(RPL_L)X
WORK_EXLST       DS    0F,(EXLST_L)X
WORK_OPEN        DS    0F,(OPEN_L)X
WORK_CLOSE       DS    0F,(CLOSE_L)X
WORK_MODCB1      DS    0F,(MODCB1_L)X
WORK_MODCB2      DS    0F,(MODCB2_L)X
WORK_MODCB3      DS    0F,(MODCB3_L)X
WORK_MODCB4      DS    0F,(MODCB4_L)X
WORK_MODCB5      DS    0F,(MODCB5_L)X
WORK_MODCB6      DS    0F,(MODCB6_L)X
WORK_MODCB7      DS    0F,(MODCB7_L)X
WORK_SHOWCB1     DS    0F,(SHOWCB1_L)X
WORK_SHOWCB2     DS    0F,(SHOWCB2_L)X
WORK_TESTCB1     DS    0F,(TESTCB1_L)X
WORK_TESTCB2     DS    0F,(TESTCB2_L)X
WORK_TESTCB3     DS    0F,(TESTCB3_L)X
WORK_TESTCB4     DS    0F,(TESTCB4_L)X
WORK_TESTCB5     DS    0F,(TESTCB5_L)X

WORK_RBA         DS    F                  LAST RECORD'S RBA

WORK_VSAM_TYPE   DS    CL4

                 DSPCREQ DSECT=NO

WORK_RC          DS    X

OSRDVSAM_WORK_L  EQU   *-OSRDVSAM_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IBMMAC ACB=VSAM,                                              +
               EXLST=VSAM,                                             +
               RPL=VSAM,                                               +
               DUMMY=X
FORMAT_1 DSECT
         IBMMAC VTOC=1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY   TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY   REGEQU
$BUFFSIZE EQU   65535
         END    OSRDVSAM
