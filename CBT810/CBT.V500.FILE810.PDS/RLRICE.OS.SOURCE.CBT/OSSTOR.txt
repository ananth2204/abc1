* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSSTOR                                                *
*                                                                     *
*  Display storage                                                    *
*                                                                     *
*    To allow storage to be viewed.                                   *
*                                                                     *
*                                                                     *
*    On entry R1 is address of parm list                              *
*                                                                     *
*     Parm list                                                       *
*            address of storage to be displayed                       *
*            length of storage to be displayed                        *
*            ALET of storage to be displayed                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSSTOR   CSECT
OSSTOR   AMODE 31
OSSTOR   RMODE ANY
         USING OSSTOR,R15
         B     INIT0000
MODID    DC    CL8'OSSTOR'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
MODLEN   DC    A(STOREND-OSSTOR)
INIT0000 DS    0H
         STM   R14,R12,12(R13)
         LR    R10,R15                        COPY BASE
         DROP  R15
         USING OSSTOR,R10
         USING OSCOMM,R12
         USING SESSION,R11
         LR    R8,R1                          COPY PARM LIST ADDRESS
         USING STORPARM,R8
         GETMAIN RU,                                                   +
               LV=DXDSTOR_L,                                           +
               LOC=ANY
         XC    0(DXDSTOR_L,R1),0(R1)
         ST    R1,8(,R13)                     DXD BASE
         ST    R13,4(,R1)
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING DXDSTOR,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R8
         MVC   DXD_START_ADDR,STORE_AREA_ADDR COPY ADDRESS
         MVC   DXD_START_LENGTH,STORE_AREA_LENGTH
         XC    DXD_START_DISP,DXD_START_DISP
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
         MVC   SPF_ZCMD,COMM_BLANKS            RESET COMMAND
         MVC   SPF_AREA,STORE_AREA_NAME        AREA NAME
         UNPK  DXD_DATA2(9),STORE_AREA_ADDR(5) UNPACK ADDRESS
         MVC   SPF_ADDRESS,STORE_AREA_ADDR
         TR    SPF_ADDRESS,COMM_HEXCHAR
         UNPK  DXD_DATA2(9),STORE_AREA_LENGTH(5)
         MVC   SPF_LENGTH,DXD_DATA2
         TR    SPF_LENGTH,COMM_HEXCHAR
         UNPK  DXD_DATA2(9),STORE_AREA_ALET(5)
         MVC   SPF_SPACE_ALET,DXD_DATA2
         TR    SPF_SPACE_ALET,COMM_HEXCHAR
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=VDATA
         LA    R1,PANEL_NAME                  PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        GETMAIN VDATA
         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH
         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS
         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH
         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH
         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        VDEFINE VDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R1,DXD_VWIDTH                  SCREEN WIDTH
         SH    R1,=Y(VDATA_L)                 MINUS DATA LENGTH
         SRL   R1,1                           DIVIDE BY 2
         STH   R1,DXD_CENTER_OFFSET           SAVE CENTERING OFFSET
         ITRACE ID=CENTER,                                             +
               RDATA1=R1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
BLD0000  DS    0H
         L     R0,DXD_VDATA_ADDR
         L     R1,DXD_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                          INITIALIZE VDATA
         MVC   DXD_WORK_ADDR,DXD_START_ADDR
         MVC   DXD_WORK_LENGTH,DXD_START_LENGTH
         MVC   DXD_WORK_DISP,DXD_START_DISP
         L     R4,DXD_WORK_ADDR
         L     R7,DXD_VDATA_ADDR               VDATA ADDRESS
         AH    R7,DXD_CENTER_OFFSET            PLUS CENTERING OFFSET
         L     R6,DXD_VDEPTH                   SCREEN DEPTH
         USING VDATA,R7
         ITRACE ID=BUILD,                                              +
               RDATA1=R7,                                              +
               RDATA2=R6
BLD0010  DS    0H
         L     R1,DXD_WORK_LENGTH              LENGTH REMAINING
         CH    R1,H16                          MORE THAN 32 BYTES LEFT?
         BNH   BLD0020                         NO
         LH    R1,H16                          LIMIT LENGTH
BLD0020  DS    0H
         XC    DXD_DATA1,DXD_DATA1             INITIALIZE WORK AREA
         BCTR  R1,0
         LAM   R4,R4,STORE_AREA_ALET           SET ALET
         SAC   512                             ENTER AR MODE
         EX    R1,MVC_01                       COPY DATA
         SAC   0                               TURN OFF AR MODE
         LAM   R4,R4,F0                        SET ALET
         UNPK  DXD_DATA2+00(9),DXD_DATA1+00(5) UNPACK DATA
         UNPK  DXD_DATA2+08(9),DXD_DATA1+04(5) UNPACK DATA
         UNPK  DXD_DATA2+16(9),DXD_DATA1+08(5) UNPACK DATA
         UNPK  DXD_DATA2+24(9),DXD_DATA1+12(5) UNPACK DATA
         TR    DXD_DATA2,COMM_HEXCHAR
         XC    DXD_DATA3(DXD_DATA3L),DXD_DATA3
         MVC   DXD_DATA3_1,DXD_DATA2+00
         MVC   DXD_DATA3_2,DXD_DATA2+08
         MVC   DXD_DATA3_3,DXD_DATA2+16
         MVC   DXD_DATA3_4,DXD_DATA2+24
         MVI   VDATA_ATTR_1,$SCREEN_ATTR_HIGH
         UNPK  VDATA_ADDRESS(9),DXD_WORK_ADDR(5) UNPACK ADDRESS
         TR    VDATA_ADDRESS,COMM_HEXCHAR
         MVI   VDATA_ATTR_2,$SCREEN_ATTR_INPUT SET ATTRIBUTE
         LA    R1,LENGTH_TABLE(R1)             ADDRESS OF LENGTH
         SR    R2,R2
         IC    R2,0(R1)
         ITRACE ID=X,                                                  +
               RDATA1=R1,                                              +
               RDATA2=R2
         EX    R2,MVC_02                       COPY DATA
         MVI   VDATA_ATTR_3,$SCREEN_ATTR_INPUT SET ATTRIBUTE
         MVI   VDATA_ATTR_4,$SCREEN_ATTR_INPUT SET ATTRIBUTE
         MVI   VDATA_ATTR_5,$SCREEN_ATTR_INPUT SET ATTRIBUTE
         MVI   VDATA_ATTR_6,$SCREEN_ATTR_NORMAL
         MVI   VDATA_ASTERISK_1,C'*'
         TR    DXD_DATA1,PRINTABLE             TRANSLATE UNPRINTABLES
         MVC   VDATA_CHARACTER,DXD_DATA1       COPY CHARACTER
         MVI   VDATA_ASTERISK_2,C'*'
         MVI   VDATA_ATTR_7,$SCREEN_ATTR_HIGH
         UNPK  DXD_DATA2(9),DXD_WORK_DISP(5)   UNPACK DISPLACEMENT
         MVC   VDATA_DISP,DXD_DATA2
         TR    VDATA_DISP,COMM_HEXCHAR         TRANSLATE
         LA    R4,16(,R4)
         ST    R4,DXD_WORK_ADDR                UPDATE ADDRESS
         L     R1,DXD_WORK_DISP
         LA    R1,16(,R1)
         ST    R1,DXD_WORK_DISP                UDATE DISP
         L     R1,DXD_WORK_LENGTH              LENGTH LEFT
         SH    R1,H16                          MINUS 16
         BNH   BLD0030                         ALL DONE.. DISPLAY
         ST    R1,DXD_WORK_LENGTH              UPDATE LENGTH LEFT
         A     R7,DXD_VWIDTH                   NEXT LINE
         BCT   R6,BLD0010                      BUILD NEXT LINE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
BLD0030  DS    0H
         ITRACE ID=DISPLAY,                                            +
               DATA1=(PANEL_NAME,8)
         LA    R1,DISPLAY
         ST    R1,DXD_SPF_1
         LA    R1,PANEL_NAME
         ST    R1,DXD_SPF_2
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,COMM_ISPLINK
         BALR  R14,R15                         DISPLAY
         ITRACE ID=DISP_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                         RC ZERO?
         BNZ   EXIT0000                        NO
         OC    SPF_ZCMD,COMM_BLANKS
         CLC   =C'ABEND ',SPF_ZCMD
         BE    ABEND000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0040 DS    0H
         LA    R1,VGET                         COMMAND
         ST    R1,DXD_SPF_1                    SET ADDRESS
         LA    R1,NAME_LIST                    SYSTEM VARIABLES
         ST    R1,DXD_SPF_2                    SET ADDRESS
         OI    DXD_SPF_2,X'80'                 FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS                SPF PARM LIST
         ITRACE ID=VGET_2,                                             +
               RDATA1=R1
         L     R15,COMM_ISPLINK                SPF INTERFACE
         BALR  R14,R15                         VGET SPF VARIABLE(S)
         ITRACE ID=VGET2_RC,                                           +
               RDATA1=R15
         LTR   R15,R15                         SUCCESSFUL?
         BNZ   DISP0050                        NO
         TM    DXD_FLAGS,$VPUT                 VPUT ALREADY ISSUED?
         BO    DISP0060                        YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0050 DS    0H
         OI    DXD_FLAGS,$VPUT                 SET FLAG
         LA    R1,VPUT                         COMMAND
         ST    R1,DXD_SPF_1                    SET ADDRESS
         LA    R1,NAME_LIST
         ST    R1,DXD_SPF_2
         OI    DXD_SPF_2,X'80'                 SET END-OF-LIST
         LA    R1,DXD_SPF_PARMS                PARM LIST ADDRESS
         L     R15,COMM_ISPLINK                SPF INTERFACE
         BALR  R14,R15                         UPDATE SPF VARIABLE(S)
         ITRACE ID=VPUT2_RC,                                           +
               RDATA1=R15
         B     DISP0040                        DO VGET
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0060 DS    0H
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?
         BE    DOWN0000                       YES
         CLI   SPF_ZVERB,C'U'                 SCROLL UP?
         BE    UP0000                         YES
         B     BLD0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DOWN0000 DS    0H
         ITRACE ID=DOWN,                                               +
               DATA1=(SPF_ZSCROLLA,1),                                 +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    DOWN0010                       YES
         L     R1,SPF_ZSCROLLN                NBR OF LINES TO SCROLL
         MH    R1,H16                         BYTES PER LINE
         LR    R0,R1
         A     R0,DXD_START_DISP              PLUS CURRENT DISP
         C     R0,STORE_AREA_LENGTH           SCROLL BEYOND END?
         BH    DOWN0010                       YES
         L     R0,DXD_START_ADDR              START ADDR
         AR    R0,R1                          PLUS SCROLL
         ST    R0,DXD_START_ADDR              UPDATE ADDRESS
         L     R0,DXD_START_LENGTH            LENGTH REMAINING
         SR    R0,R1                          MINUS SCROLL
         ST    R0,DXD_START_LENGTH            UPDATE LENGTH REMAINING
         L     R0,DXD_START_DISP              DISPLACEMENT
         AR    R0,R1                          PLUS SCROLL
         ST    R0,DXD_START_DISP              UPDATE DISPLACEMENT
         B     BLD0000
DOWN0010 DS    0H
         LH    R1,H16
         L     R0,STORE_AREA_LENGTH           AREA LENGTH


*        ROUND UP TO 16 BYTE BOUNDARY
         AH    R0,H15                         PLUS 15
         SRL   R0,4                           SHIFT OUT LOW BITS
         SLL   R0,4                           ROUND UP

         SR    R0,R1                          MINUS SCROLL
         BNH   DOWN0020                       BEYOND START
         ST    R1,DXD_START_LENGTH            SET LENGTH
         ST    R0,DXD_START_DISP              AND DISP
         A     R0,STORE_AREA_ADDR             AREA ADDRESS
         ST    R0,DXD_START_ADDR              SET STARTING ADDRESS
         B     BLD0000                        RE-BUILD DISPLAY
DOWN0020 DS    0H
         MVC   DXD_START_ADDR,STORE_AREA_ADDR
         MVC   DXD_START_LENGTH,STORE_AREA_LENGTH
         XC    DXD_START_DISP,DXD_START_DISP
         B     BLD0000                        RE-BUILD DISPLAY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
UP0000   DS    0H
         ITRACE ID=UP
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    UP0010                         YES
         L     R1,SPF_ZSCROLLN                NBR OF LINES
         MH    R1,H16                         BYTES PER LINE
         L     R0,DXD_START_DISP              START DISP
         SR    R0,R1                          MINUS SCROLL
         BNH   UP0010                         BEYOND TOP
         ST    R0,DXD_START_DISP              SET STARTING DISP
         L     R0,DXD_START_ADDR              STARTING ADDR
         SR    R0,R1                          MINUS SCROLL
         ST    R0,DXD_START_ADDR              SET STARTING ADDR
         L     R0,DXD_START_LENGTH            LENGTH
         AR    R0,R1                          PLUS SCROLL
         ST    R0,DXD_START_LENGTH            SET STARTING LENGTH
         B     BLD0000
UP0010   DS    0H
         MVC   DXD_START_ADDR,STORE_AREA_ADDR
         MVC   DXD_START_LENGTH,STORE_AREA_LENGTH
         XC    DXD_START_DISP,DXD_START_DISP
         B     BLD0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LAM   R4,R4,F0
         ICM   R1,15,DXD_VDATA_ADDR
         BZ    EXIT0010
         L     R0,DXD_VDATA_LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        FREE VDATA
EXIT0010 DS    0H
         LR    R1,R13
         L     R13,4(,R13)                    RESTORE SAVE AREA
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=DXDSTOR_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MVC_01   MVC   DXD_DATA1(0),0(R4)
MVC_02   MVC   VDATA_HEX_1(0),DXD_DATA3
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PANEL_NAME    DC    CL8'OSSTOR'

F0            DC    F'0'

H15           DC    H'15'
H16           DC    H'16'

DISPLAY       DC    CL8'DISPLAY'
VGET          DC    CL8'VGET'
VPUT          DC    CL8'VPUT'
NAME_LIST     DC    C'(ZSCROLLA ZSCROLLN ZVERB)'





LENGTH_TABLE  DS    0X
              DC    AL1(01)    0  xx
              DC    AL1(03)    1  xxxx
              DC    AL1(05)    2  xxxxxx
              DC    AL1(07)    3  xxxxxxxx

              DC    AL1(10)    4  xxxxxxxx xx
              DC    AL1(12)    5  xxxxxxxx xxxx
              DC    AL1(14)    6  xxxxxxxx xxxxxx
              DC    AL1(16)    7  xxxxxxxx xxxxxxxx

              DC    AL1(19)    8  xxxxxxxx xxxxxxxx xx
              DC    AL1(21)    9  xxxxxxxx xxxxxxxx xxxx
              DC    AL1(23)   10  xxxxxxxx xxxxxxxx xxxxxx
              DC    AL1(25)   11  xxxxxxxx xxxxxxxx xxxxxxxx

              DC    AL1(28)   12  XXXXXXXX XXXXXXXX XXXXXXXX XX
              DC    AL1(30)   13  XXXXXXXX XXXXXXXX XXXXXXXX XXXX
              DC    AL1(32)   14  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXX
              DC    AL1(34)   15  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX





PRINTABLE     DS    0C
*                      0 1 2 3 4 5 6 7 8 9 A B C D E F
              DC    X'40404040404040404040404040404040' 00-0F
              DC    X'40404040404040404040404040404040' 10-1F
              DC    X'40404040404040404040404040404040' 20-2F
              DC    X'40404040404040404040404040404040' 30-3F
              DC    X'404040404040404040404A4B4C4D4E4F' 40-4F
              DC    X'504040404040404040405A5B5C5D5E5F' 50-5F
              DC    X'60614040404040404040406B6C6D6E6F' 60-6F
              DC    X'404040404040404040407A7B7C7D7E7F' 70-7F
              DC    X'40818283848586878889408B8C8D8E8F' 80-8F
              DC    X'40919293949596979899409B9C9D9E9F' 90-9F
              DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF
              DC    X'4040404040404040404040BBBCBDBEBF' B0-BF
              DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF
              DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF
              DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF
              DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF

              LTORG

STOREND       EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTOR           DSECT
                  COPY DXDPREF
DXD_VDATA_ADDR    DS   A
DXD_VDATA_LENGTH  DS   F
DXD_VDEPTH        DS   F
DXD_VWIDTH        DS   F

DXD_START_ADDR    DS   A
DXD_START_LENGTH  DS   F
DXD_START_DISP    DS   A

DXD_WORK_ADDR     DS   A
DXD_WORK_LENGTH   DS   F
DXD_WORK_DISP     DS   A

DXD_SPF_PARMS     DS  0A
DXD_SPF_1         DS   A
DXD_SPF_2         DS   A

DXD_CENTER_OFFSET DS   H

DXD_DATA1         DS   CL16
DXD_DATA2         DS   CL33

DXD_DATA3         DS   0C
DXD_DATA3_1       DS   CL8
                  DS   X
DXD_DATA3_2       DS   CL8
                  DS   X
DXD_DATA3_3       DS   CL8
                  DS   X
DXD_DATA3_4       DS   CL8
DXD_DATA3L        EQU  *-DXD_DATA3

DXD_FLAGS         DS   X
$VPUT             EQU  X'80'
DXDSTOR_L         EQU  *-DXDSTOR
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VDATA             DSECT
VDATA_ATTR_1      DS   X
VDATA_ADDRESS     DS   CL8
VDATA_ATTR_2      DS   X
VDATA_HEX_1       DS   CL8
VDATA_ATTR_3      DS   X
VDATA_HEX_2       DS   CL8
VDATA_ATTR_4      DS   X
VDATA_HEX_3       DS   CL8
VDATA_ATTR_5      DS   X
VDATA_HEX_4       DS   CL8
VDATA_ATTR_6      DS   X
                  DS   XL2
VDATA_ASTERISK_1  DS   X
VDATA_CHARACTER   DS   CL16
VDATA_ASTERISK_2  DS   X
                  DS   X
VDATA_ATTR_7      DS   X
VDATA_DISP        DS   CL8
VDATA_L           EQU  *-VDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         STORPARM DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      OSSTOR
