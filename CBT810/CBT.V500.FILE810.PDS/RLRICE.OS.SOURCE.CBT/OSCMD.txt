* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSCMD                                                 *
*                                                                     *
*  Display or search command table(s)                                 *
*                                                                     *
*  There can be two sets of commands                                  *
*  This allows a main-menu to have commands and sub functions from    *
*  the main menu to also have commands.  If both command table        *
*  addresses are supplied, the sub commands are searched or displayed *
*  first.                                                             *
*                                                                     *
*       COMM_MAIN_COMMAND_TABLE   should be the main menu (or if      *
*                                 there is no "main menu/sub function"*
*                                 type situation, this would be the   *
*                                 address of the only command table.  *
*                                                                     *
*       COMM_SUB_COMMAND_TABLE    should be the sub function commands.*
*                                                                     *
*  Commands are defined using the CMD macro.                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSCMD    CSECT
OSCMD    AMODE 31
OSCMD    RMODE ANY
         USING OSCOMM,R12
         USING OSCMD,R15
         B     INIT0000
MODID    DC    CL8'OSCMD'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(CMDEND-OSCMD)
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         USING SESSION,R11                    DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING OSCMD,R10                      DEFINE BASE
         L     R15,COMM_DXD
         A     R15,DXD_START
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         USING DXDCMD,R13
         MVC   DXD_CSECT,MODID
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
         ITRACE ID=ENTRY,                                              +
               RDATA1=R1
         L     R6,COMM_MAIN_COMMAND_TABLE     <--- for now
         ST    R6,DXD_COMMAND_TABLE           SAVE COMMAND TABLE ADDR
         USING COMMAND_DSECT,R6
         NI    SESS_COMMAND_FLAGS,255-$SESS_COMMAND_FOUND
         XC    DXD_COMMAND_ADDR,DXD_COMMAND_ADDR
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY
         BO    MAIN0000                       YES
         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH
         BO    MAIN1000                       YES
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
*        Display list of available commands                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_ZCMD,COMM_BLANKS
         LA    R1,PANEL_NAME                  PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET VDATA FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        GETMAIN VDATA STORAGE
         ST    R0,DXD_VDATA_LENGTH
         ST    R1,DXD_VDATA_ADDR
MAIN0010 DS    0H
         L     R0,DXD_VDATA_ADDR
         L     R1,DXD_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA

         L     R8,DXD_VDATA_ADDR              VDATA ADDRESS
         L     R7,SPF_VDEPTH                  NUMBER OF LINES
         ST    R6,DXD_FIRST_CMD               SAVE FIRST COMMAND
MAIN0020 DS    0H
         ITRACE ID=CMD,                                                +
               DATA1=COMMAND_CMD,                                      +
               RDATA2=R7
         MVC   0(MSG01_L,R8),MSG01
VDATA    USING MSG01,R8
         MVC   VDATA.MSG01_CMD,COMMAND_CMD    COPY COMMAND
         MVC   VDATA.MSG01_DESC,COMMAND_DESC  COPY DESCRIPTION
         ST    R6,DXD_LAST_CMD                SAVE AS LAST COMMAND
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCT   R7,MAIN0030
         B     MAIN0040                       SCREEN IS FULL
MAIN0030 DS    0H
         LA    R6,COMMAND_DSECT_L(,R6)        NEXT COMMAND
         CLI   0(R6),X'FF'                    END OF COMMAND TABLE?
         BNE   MAIN0020                       NO
MAIN0040 DS    0H
         L     R0,DXD_VDATA_LENGTH            VDATA LENGTH
         L     R1,DXD_VDATA_ADDR              VDATA ADDRESS
         ST    R0,SESS_DISP_VDATA_LENGTH
         ST    R1,SESS_DISP_VDATA_ADDR
         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE SET VDATA FUNCTION
         L     R15,COMM_V_OSVDATA             OSVDATA ENTRY POINT
         BALR  R14,R15                        VDEFINE VDATA STORAGE
         LA    R1,DISPLAY                     SPF CMD
         ST    R1,DXD_SPF1                    SET ADDR
         LA    R1,PANEL_NAME                  PANEL NAME
         ST    R1,DXD_SPF2                    SET ADDR
         OI    DXD_SPF2,X'80'                 SET END-OF-LIST
         LA    R1,DXD_SPF_PARMS               PARM LIST
         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT
         BALR  R14,R15                        DISPLAY LIST OF COMMANDS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0050 DS    0H
         LA    R1,VGET                        COMMAND
         ST    R1,DXD_SPF1                    SET ADDRESS
         LA    R1,NAME_LIST                   SYSTEM VARIABLES
         ST    R1,DXD_SPF2                    SET ADDRESS
         OI    DXD_SPF2,X'80'                 FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS               SPF PARM LIST
         ITRACE ID=VGET_2,                                             +
               RDATA1=R1
         L     R15,COMM_ISPLINK               SPF INTERFACE
         BALR  R14,R15                        VGET SPF VARIABLE(S)
         ITRACE ID=VGET2_RC,                                           +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   MAIN0060                       NO
         TM    SPF_FLAGS,$SPF_VPUT            VPUT ALREADY ISSUED?
         BO    MAIN0070                       YES
* ------------------------------------------------------------------- *
*       UPDATE SPF VARIABLES                                          *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         OI    SPF_FLAGS,$SPF_VPUT            SET FLAG
         LA    R1,VPUT                        COMMAND
         ST    R1,DXD_SPF1                    SET ADDRESS
         LA    R1,NAME_LIST
         ST    R1,DXD_SPF2
         OI    DXD_SPF2,X'80'                 SET END-OF-LIST
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,COMM_ISPLINK               SPF INTERFACE
         BALR  R14,R15                        UPDATE SPF VARIABLE(S)
         ITRACE ID=VPUT2_RC,                                           +
               RDATA1=R15
         B     MAIN0050                       DO VGET
MAIN0070 DS    0H
         CLI   SPF_ZVERB,C'B'                 BOTTOM?
         BE    MAIN0080                       YES
         CLI   SPF_ZVERB,C'D'                 DOWN?
         BE    MAIN0100                       YES
         CLI   SPF_ZVERB,C'T'                 TOP?
         BE    MAIN0120
         CLI   SPF_ZVERB,C'U'                 UP
         BE    MAIN0140
         B     EXIT0000
MAIN0080 DS    0H
         L     R6,DXD_COMMAND_TABLE           COMMAND TABLE ADDR
MAIN0090 DS    0H
         LA    R1,COMMAND_DSECT_L(,R6)        NEXT COMMAND
         CLI   0(R1),X'FF'                    END OF TABLE?
         BE    MAIN0010                       YES
         LR    R6,R1                          COPY ADDR
         B     MAIN0090
MAIN0100 DS    0H
         CLI   SPF_ZSCROLLA,C'M'              MAX (BOTTOM)?
         BE    MAIN0080                       YES
         L     R6,DXD_FIRST_CMD               FIRST CMD ON DISPLAY
         L     R7,SPF_ZSCROLLN                NBR OF LINES TO SCROLL
MAIN0110 DS    0H
         LA    R1,COMMAND_DSECT_L(,R6)        NEXT COMMAND
         CLI   0(R1),X'FF'                    END OF TABLE?
         BE    MAIN0010                       YES
         LR    R6,R1                          COPY ADDRESS
         BCT   R7,MAIN0110                    LOOP
         B     MAIN0010
MAIN0120 DS    0H
         L     R6,DXD_FIRST_CMD               FIRST CMD ON DISPLAY
MAIN0130 DS    0H
         C     R6,DXD_COMMAND_TABLE           AT TOP OF TABLE?
         BE    MAIN0010                       YES
         SH    R6,=Y(COMMAND_DSECT_L)         MINUS 1 ENTRY
         B     MAIN0130
MAIN0140 DS    0H
         CLI   SPF_ZSCROLLA,C'M'              MAX (TOP)?
         BE    MAIN0120                       YES
         L     R6,DXD_FIRST_CMD               FIRST ON DISPLAY
         L     R7,SPF_ZSCROLLN                NBR OF LINES TO SCROLL
MAIN0150 DS    0H
         C     R6,DXD_COMMAND_TABLE           AT TOP OF TABLE?
         BE    MAIN0010                       YES
         SH    R6,=Y(COMMAND_DSECT_L)         MINUS 1 ENTRY
         BCT   R7,MAIN0150                    LOOP
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=SEARCH
         SR    R1,R1                          CLEAR R1
         L     R2,SESS_COMMAND_ADDRESS        COMMAND ADDRESS
         L     R6,DXD_COMMAND_TABLE           COMMAND TABLE ADDRESS
MAIN1010 DS    0H
         CLC   SESS_COMMAND_LENGTH,COMMAND_LENGTH
         BNE   MAIN1020                       NOT SAME LENGTH
         ICM   R1,3,COMMAND_LENGTH            COMMAND LENGTH
         BCTR  R1,0                           FOR EX
         EX    R1,CMD_CLC                     COMMAND LOCATED?
         BE    MAIN1030                       YES
MAIN1020 DS    0H
         LA    R6,COMMAND_DSECT_L(,R6)        NEXT COMMAND
         CLI   0(R6),X'FF'                    END OF TABLE?
         BE    MAIN1040                       YES
         B     MAIN1010
MAIN1030 DS    0H
         ITRACE ID=CMD_FND,                                            +
               DATA1=COMMAND_ADDR
         OI    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND
         MVC   DXD_COMMAND_ADDR,COMMAND_ADDR
         B     EXIT0000
CMD_CLC  CLC   COMMAND_CMD(0),0(R2)           COMPARE COMMAND
MAIN1040 DS    0H
         ITRACE ID=NOT_FND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ICM   R1,15,DXD_VDATA_ADDR
         BZ    EXIT0010
         ST    R0,DXD_VDATA_LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
EXIT0010 DS    0H
         L     R15,DXD_COMMAND_ADDR
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(,R13)
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START       DC    Q(DXDCMD)

MSG01           DS    0C
                DC    CL5' '
                DC    AL1($SCREEN_ATTR_HIGH)
MSG01_CMD       DC    CL8' '
                DC    CL2' '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG01_DESC      DC    CL60' '
MSG01_L         EQU   *-MSG01

DISPLAY         DC    CL8'DISPLAY'
VGET            DC    CL8'VGET'
VPUT            DC    CL8'VPUT'
PANEL_NAME      DC    CL8'OSCMD'
NAME_LIST       DC    C'(ZSCROLLA ZSCROLLN ZVERB)'

                LTORG

CMDEND          EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDCMD            DSECT
                  COPY     DXDPREF

DXD_VDATA_ADDR    DS       A
DXD_VDATA_LENGTH  DS       F

DXD_SPF_PARMS     DS       0A
DXD_SPF1          DS       A
DXD_SPF2          DS       A

DXD_COMMAND_TABLE DS       A
DXD_FIRST_CMD     DS       A
DXD_LAST_CMD      DS       A

DXD_COMMAND_ADDR  DS       A

DXD_RC            DS       H
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     COMMAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      OSCMD
