         MACRO
         FDEF  &NAME,&FORMAT,&LENGTH,&PREFIX=
         GBLC  &GPREF,&GBASE
         AIF   (T'&PREFIX EQ 'O').FDEF030
&GPREF   SETC  '&PREFIX'
         AIF   ('&PREFIX' EQ 'COMM').FDEF010
         AIF   ('&PREFIX' EQ 'SESS').FDEF020
         AIF   ('&PREFIX' EQ 'DATASPACE_1').FDEF020
         MNOTE 12,'INVALID PREFIX'
         MEXIT
.FDEF010 ANOP
&GBASE   SETC  'OSCOMM'
         MEXIT
.FDEF020 ANOP
&GBASE   SETC  'SESSION'
         MEXIT
.FDEF030 ANOP
         DC    CL16'&NAME'                        NAME
         DC    C'&FORMAT'                         FORMAT
         DC    AL2(&LENGTH)                       SOURCE LENGTH
         DC    AL2(&GPREF._&NAME-&GBASE)          DISPLACMENT
         MEND
* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSDEBUG                                               *
*                                                                     *
*  Display internal data for debugging                                *
*                                                                     *
*  This module does not use OSDISP for displaying panels.             *
*  Therefore do not set SESS_DISP_PANEL, SESS_DISP_VDATA_ADDR,        *
*  SESS_DISP_VDATA_LENGTH, or SESS_DISP_CURSOR.                       *
*                                                                     *
* ------------------------------------------------------------------- *
OSDEBUG  CSECT
OSDEBUG  AMODE 31
OSDEBUG  RMODE ANY
         USING OSDEBUG,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'OSDEBUG'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DEBUGEND-OSDEBUG)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                    SAVE REGISTERS
         LR    R10,R15                            COPY BASE ADDRESS
         DROP  R15
         USING OSDEBUG,R10
         L     R15,COMM_DXD                       DXD AREA BASE ADDRESS
         A     R15,DXD_START                      PLUS OFFSET
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                            COPY DXD AREA ADDRESS
         USING DXDDEBUG,R13                       DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9

         LA    R1,PANEL_NAME                      PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                            GETMAIN VDATA
         ST    R0,DXD_VDATA_LENGTH
         ST    R1,DXD_VDATA_ADDR
         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                            VDEFINE VDATA
         ITRACE ID=VDATA,                                              +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)

         MVC   DXD_VDEPTH,SPF_VDEPTH              SAVE DEPTH
         MVC   DXD_VWIDTH,SPF_VWIDTH              SAVE WIDTH

         L     R0,DXD_VDATA_ADDR
         L     R1,DXD_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         ICM   R15,8,COMM_BLANKS
         MVCL  R0,R14                             INITIALIZE VDATA

         L     R8,DXD_VDATA_ADDR
         L     R6,DXD_VDEPTH                      NUMBER OF LINES
         CLC   DEBUG_SESS,SPF_ZCMD                DISPLAY SESSIONS?
         BE    DBUG0400                           YES
         CLC   DEBUG_CHAIN,SPF_ZCMD               DISPLAY SESSIONS?
         BE    DBUG0400                           YES
* ------------------------------------------------------------------- *
*        Process fields in COMMON area                                *
* ------------------------------------------------------------------- *
         MVC   0(L'COMMON_HEADING,R8),COMMON_HEADING
         A     R8,DXD_VWIDTH                      NEXT LINE
         BCTR  R6,0
         ST    R12,DXD_FIELD_BASE                 BASE FOR FIELDS
         ST    R8,DXD_SAVE_R8                     SAVE BUFFER ADDRESS
         LA    R7,COMMON_FIELDS                   COMMON AREA FIELDS
         BAL   R5,DBUG0100
* ------------------------------------------------------------------- *
*        Process fields in SESSION area                               *
* ------------------------------------------------------------------- *
         A     R8,DXD_VWIDTH                      NEXT LINE
         BCTR  R6,0
         MVC   0(L'SESSION_HEADING,R8),SESSION_HEADING
         A     R8,DXD_VWIDTH                      NEXT LINE
         BCTR  R6,0
         MVC   DXD_FIELD_BASE,COMM_ACTIVE_SESSION BASE FOR FIELDS
         LA    R7,SESSION_FIELDS                  SESSION AREA FIELDS
         BAL   R5,DBUG0100
* ------------------------------------------------------------------- *
*        Process COMMAND, DSN, PATH                                   *
* ------------------------------------------------------------------- *
         A     R8,DXD_VWIDTH                      NEXT LINE
         A     R8,DXD_VWIDTH                      NEXT LINE
         BCT   R6,DBUG0000
         B     DBUG1000                           BUFFER FULL
DBUG0000 DS    0H
         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE
         USING MSG_02,R8
         MVC   MSG_02_NAME,=CL8'COMMAND'
         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL
         ICM   R14,15,COMM_COMMAND                INVOKING COMMAND
         BZ    DBUG0020                           NO COMMAND
         SR    R15,R15
         ICM   R15,3,COMM_COMMAND_LENGTH          COMMAND LENGTH
         BZ    DBUG0020                           NO COMMAND
         CH    R15,=Y(L'MSG_02_VALUE)             TOO LONG FOR DISPLAY?
         BNH   DBUG0010                           NO
         LH    R15,=Y(L'MSG_02_VALUE)             LIMIT LENGTH
DBUG0010 DS    0H
         BCTR  R15,0                              FOR EX INSTRUCTION
         EX    R15,MVC_03                         COPY TO DYNAMIC AREA
         DROP  R8
         BCT   R6,DBUG0020                        ACCOUNT FOR LINE
         B     DBUG1000
DBUG0020 DS    0H                                 BUFFER FILLED
         A     R8,DXD_VWIDTH
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH   PATH?
         BO    DBUG0030                           YES
         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE
         USING MSG_02,R8
         MVC   MSG_02_NAME,=CL8'DSN'              IDENTIFY FIELD
         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL  SET ATTRIBUTE
         MVC   MSG_02_VALUE(L'SESS_DSN),SESS_DSN  COPY DATA SET NAME
         DROP  R8
         B     DBUG1000
DBUG0030 DS    0H
         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE
         USING MSG_02,R8
         MVC   MSG_02_NAME,=CL8'PATH'             IDENTIFY FIELD
         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL  SET ATTRIBUTE
         MVC   MSG_02_VALUE,SESS_PATH             COPY PATH
         DROP  R8
         A     R8,DXD_VWIDTH                      NEXT LINE
         BCT   R6,DBUG0040
         B     DBUG1000                           SCREEN FULL
DBUG0040 DS    0H
         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE
         USING MSG_02,R8
         MVC   MSG_02_NAME,=CL8'LENGTH'           IDENTIFY FIELD
         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL  SET ATTRIBUTE
         L     R1,SESS_PATH_LENGTH                PATH LENGTH
         CVD   R1,COMM_DWORD                      CONVERT TO DECIMAL
         MVC   MSG_02_VALUE(L'EDIT_WORD_1),EDIT_WORD_1
         ED    MSG_02_VALUE(L'EDIT_WORD_1),COMM_DWORD+5
         LA    R15,L'EDIT_WORD_1
DBUG0050 DS    0H
         CLI   MSG_02_VALUE,C' '
         BNE   DBUG1000
         MVC   MSG_02_VALUE(L'EDIT_WORD_1-1),MSG_02_VALUE+1
         MVI   MSG_02_VALUE+(L'EDIT_WORD_1-1),C' '
         BCT   R15,DBUG0050
         B     DBUG1000
MVC_03   MVC   MSG_02_VALUE(0),0(R14)
         DROP  R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DBUG0100 DS    0H
         USING FIELD,R7                           DEFINE BASE
         MVI   DXD_SIDE,C'1'                      BUILDING SIDE 1
DBUG0110 DS    0H
         ITRACE ID=BUILD,                                              +
               RDATA1=R7,                                              +
               RDATA2=R8
         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8                          DEFINE BASE
         MVI   MSG_01_ATTR_1,$SCREEN_ATTR_HIGH
         MVI   MSG_01_ATTR_2,$SCREEN_ATTR_NORMAL
         MVC   MSG_01_NAME_1,FIELD_NAME
         SR    R15,R15                            CLEAR REGISTER
         ICM   R15,3,FIELD_DISP                   DISPLACEMENT TO DATA
         A     R15,DXD_FIELD_BASE                 PLUS BASE
         CLI   FIELD_FORMAT,C'A'                  ADDRESS?
         BE    DBUG0120                           YES
         CLI   FIELD_FORMAT,C'C'                  CHARACTER?
         BE    DBUG0130                           YES
         CLI   FIELD_FORMAT,C'F'                  FULLWORD?
         BE    DBUG0150                           YES
         CLI   FIELD_FORMAT,C'H'                  HALFWORD
         BE    DBUG0170                           YES
         CLI   FIELD_FORMAT,C'P'                  PACKED?
         BE    DBUG0190                           YES
         CLI   FIELD_FORMAT,C'X'                  HEX?
         BE    DBUG0210                           YES
         DC    H'0'
* ------------------------------------------------------------------- *
*        Address                                                      *
* ------------------------------------------------------------------- *
DBUG0120 DS    0H
         UNPK  MSG_01_VALUE_1(9),0(5,R15)
         TR    MSG_01_VALUE_1(8),COMM_HEXCHAR
         MVI   MSG_01_VALUE_1+8,C' '
         B     DBUG0230
* ------------------------------------------------------------------- *
*        Character                                                    *
* ------------------------------------------------------------------- *
DBUG0130 DS    0H
         SR    R1,R1
         ICM   R1,3,FIELD_LENGTH
         CH    R1,=Y(L'MSG_01_VALUE_1)            TOO LONG?
         BNH   DBUG0140                           NO
         LH    R1,=Y(L'MSG_01_VALUE_1)            LIMIT LENGTH
DBUG0140 DS    0H
         BCTR  R1,0                               FOR EXECUTE
         EX    R1,MVC_01                          COPY DATA
         B     DBUG0230
MVC_01   MVC   MSG_01_VALUE_1(0),0(R15)           COPY DATA
* ------------------------------------------------------------------- *
*        FULLWORD                                                     *
* ------------------------------------------------------------------- *
DBUG0150 DS    0H
         SR    R1,R1                              CLEAR REGISTER
         ICM   R1,15,0(R15)                       LOAD UP DATA
         CVD   R1,COMM_DWORD                      CONVERT TO DECIMAL
         MVC   MSG_01_VALUE_1(L'EDIT_WORD_2),EDIT_WORD_2
         ED    MSG_01_VALUE_1(L'EDIT_WORD_2),COMM_DWORD+2
         LA    R15,L'EDIT_WORD_2
DBUG0160 DS    0H
         CLI   MSG_01_VALUE_1,C' '
         BNE   DBUG0230
         MVC   MSG_01_VALUE_1(14),MSG_01_VALUE_1+1
         MVI   MSG_01_VALUE_1+(L'EDIT_WORD_2-1),C' '
         BCT   R15,DBUG0160
         B     DBUG0230
* ------------------------------------------------------------------- *
*        HALFWORD                                                     *
* ------------------------------------------------------------------- *
DBUG0170 DS    0H
         SR    R1,R1                              CLEAR REGISTER
         ICM   R1,3,0(R15)                        LOAD UP DATA
         CVD   R1,COMM_DWORD                      CONVERT TO DECIMAL
         MVC   MSG_01_VALUE_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    MSG_01_VALUE_1(L'EDIT_WORD_1),COMM_DWORD+5
         LA    R15,L'EDIT_WORD_2
DBUG0180 DS    0H
         CLI   MSG_01_VALUE_1,C' '
         BNE   DBUG0230
         MVC   MSG_01_VALUE_1(6),MSG_01_VALUE_1+1
         MVI   MSG_01_VALUE_1+(L'EDIT_WORD_1-1),C' '
         BCT   R15,DBUG0180
         B     DBUG0230
* ------------------------------------------------------------------- *
*        Packed decimal                                               *
* ------------------------------------------------------------------- *
DBUG0190 DS    0H
         SR    R1,R1                              CLEAR REGISTER
         ICM   R1,3,FIELD_LENGTH
         BCTR  R1,0
         EX    R1,ZAP_1
         MVC   MSG_01_VALUE_1(L'EDIT_WORD_2),EDIT_WORD_2
         ED    MSG_01_VALUE_1(L'EDIT_WORD_2),COMM_DWORD+2
         LA    R15,L'EDIT_WORD_2
DBUG0200 DS    0H
         CLI   MSG_01_VALUE_1,C' '
         BNE   DBUG0230
         MVC   MSG_01_VALUE_1(14),MSG_01_VALUE_1+1
         MVI   MSG_01_VALUE_1+(L'EDIT_WORD_2-1),C' '
         BCT   R15,DBUG0200
         B     DBUG0230
ZAP_1    ZAP   COMM_DWORD,0(0,R15)
* ------------------------------------------------------------------- *
*        Hex                                                          *
* ------------------------------------------------------------------- *
DBUG0210 DS    0H
         UNPK  DXD_WORK_1(9),0(5,R15)
         TR    DXD_WORK_1(8),COMM_HEXCHAR         TRANSLATE
         SR    R1,R1
         ICM   R1,3,FIELD_LENGTH
         CH    R1,H4                              TOO LONG?
         BNH   DBUG0220                           NO
         LH    R1,H4
DBUG0220 DS    0H
         SLL   R1,1                               MULTIPLY BY TWO
         BCTR  R1,0
         EX    R1,MVC_02
         B     DBUG0230
MVC_02   MVC   MSG_01_VALUE_1(0),DXD_WORK_1
* ------------------------------------------------------------------- *
*        Next field                                                   *
* ------------------------------------------------------------------- *
DBUG0230 DS    0H
         LA    R7,FIELD_L(,R7)                    NEXT FIELD
         CLI   0(R7),X'FF'                        END OF DATA?
         BE    DBUG0250                           YES
         CLI   DXD_SIDE,C'1'                      DOING SIDE 1?
         BE    DBUG0240                           YES

         L     R8,DXD_SAVE_R8                     RESET BUFFER ADDRESS
         A     R8,DXD_VWIDTH                      NEXT LINE
         MVI   DXD_SIDE,C'1'                      SET INDICATOR
         BCT   R6,DBUG0110                        BUILD NEXT LINE
         B     DBUG1000                           SCREEN FULL
DBUG0240 DS    0H
         ST    R8,DXD_SAVE_R8                     SAVE BUFFER ADDRESS
         LA    R8,MSG_01_NAME_2                   SET TO SIDE 2
         MVI   DXD_SIDE,C'2'                      SET INDICATOR
         B     DBUG0110
         DROP  R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DBUG0250 DS    0H
         L     R8,DXD_SAVE_R8                     RESET BUFFER ADDRESS
         A     R8,DXD_VWIDTH                      NEXT LINE
         BCTR  R6,R5                              ACCOUNT FOR LINE
         B     DBUG1000                           BUFFER FULL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DBUG0400 DS    0H
         ITRACE ID=CHAIN
         LTR   R11,R11                            ACTIVE SESSION?
         BZ    EXIT0000                           NO
DBUG0410 DS    0H
         ICM   R2,15,SESS_PREV                    PREVIOUS ON CHAIN?
         BZ    DBUG0420                           NO
         LR    R11,R2                             COPY PREVIOUS ADDR
         B     DBUG0410                           CHECK AGAIN
DBUG0420 DS    0H
         MVC   0(MSG_03_L,R8),MSG_03              INITIALIZE MSG
         USING MSG_03,R8
         C     R11,COMM_ACTIVE_SESSION            IS THIS ACTIVE?
         BNE   DBUG0430                           NO
         MVI   MSG_03_ATTR,$SCREEN_ATTR_HIGH      HIGHLIGHT
DBUG0430 DS    0H
         ST    R11,COMM_DWORD                     SESSION BLOCK ADDR
         UNPK  MSG_03_ADDR(9),COMM_DWORD(5)       UNPACK IT
         TR    MSG_03_ADDR,COMM_HEXCHAR           TRANSLATE IT
         UNPK  MSG_03_PREV(9),SESS_PREV(5)        UNPACK PREVIOUS
         TR    MSG_03_PREV(9),COMM_HEXCHAR        TRANSLATE IT
         MVI   MSG_03_PREV+8,C' '                 RESTORE CLOBBERED
         UNPK  MSG_03_NEXT(9),SESS_NEXT(5)        UNPACK NEXT
         TR    MSG_03_NEXT(9),COMM_HEXCHAR        TRANSLATE IT
         MVI   MSG_03_NEXT+8,C' '                 RESTORE BLANK
         UNPK  MSG_03_IO_AREA(9),SESS_IO_AREA(5)  UNPACK I/O ADDR
         TR    MSG_03_IO_AREA(8),COMM_HEXCHAR     TRANSLATE IT
         MVI   MSG_03_IO_AREA+8,C' '              RESTORE BLANK
         A     R8,SPF_VWIDTH                      NEXT LINE
         BCT   R6,DBUG0440                        ACCOUNT FOR LINE
         B     DBUG1000                           BUFFER FULL
DBUG0440 DS    0H
         ICM   R11,15,SESS_NEXT                   NEXT ON CHAIN
         BNZ   DBUG0420
         DROP  R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DBUG1000 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS
         ITRACE ID=DISPLAY
         LA    R1,DISPLAY                         COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                       SET IN PARM LIST
         LA    R1,PANEL_NAME                      PANEL NAME'S ADDRESS
         ST    R1,DXD_SPF_2                       SET IN PARM LIST
         OI    DXD_SPF_2,X'80'                    FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS                   PARM LIST ADDRESS
         L     R15,COMM_ISPLINK                   SPF ENTRY POINT
         BALR  R14,R15                            DISPLAY THE PANEL
         L     R0,DXD_VDATA_LENGTH
         L     R1,DXD_VDATA_ADDR
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                            FREE VDATA
         MVC   SPF_MSG_1,COMM_BLANKS              RESET MESSAGES
         MVC   SPF_MSG_2,COMM_BLANKS
         MVC   SPF_MSG_3,COMM_BLANKS
         MVC   SPF_MSG_4,COMM_BLANKS
         MVC   SPF_MSG_5,COMM_BLANKS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID+1,1                    SET MESSAGE ID
         B     ERR0100
ERR0020  DS    0H
         MVI   COMM_MSG_ID+1,2                    SET MESSAGE ID
         B     ERR0100
ERR0030  DS    0H
         MVI   COMM_MSG_ID+1,3                    SET MESSAGE ID
         B     ERR0100
ERR0100  DS    0H
         MVC   COMM_MSG_CSECT,MODID               SET MODULE'S NAME
         MVI   COMM_MSG_ID,0                      FORCE ZERO
         L     R15,COMM_V_OSMSG                   OSMSG ENTRY POINT
         BALR  R14,R15                            BUILD MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(,R13)                        RESTORE R13
         LM    R14,R12,12(R13)                    RESTORE REGISTERS
         SR    R15,R15                            SET RC
         BR    R14                                RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START         DC    Q(DXDDEBUG)

H3                DC    H'3'
H4                DC    H'4'

EDIT_WORD_1       DC    X'4020206B202120'
EDIT_WORD_2       DC    X'4020206B2020206B2020206B202120'

CHARFORM          DC    CL8'CHAR'
DEBUG_CHAIN       DC    C'DEBUG CHAIN'
DEBUG_SESS        DC    C'DEBUG SESS'
DISPLAY           DC    CL8'DISPLAY'
PQUERY            DC    CL8'PQUERY'
PANEL_NAME        DC    CL8'OSDEBUG'
VDATA             DC    CL8'VDATA'
VDEPTH            DC    CL8'VDEPTH'
VTYPE             DC    CL8'VTYPE'
VWIDTH            DC    CL8'VWIDTH'
VROW              DC    CL8'VROW'
VCOL              DC    CL8'VCOL'
VDEFINE           DC    CL8'VDEFINE'
VDELETE           DC    CL8'VDELETE'
COMMON_HEADING    DC    C'COMMON AREA FIELDS'
SESSION_HEADING   DC    C'SESSION BLOCK FIELDS'

COMMON_FIELDS     DS    0C
                  FDEF  PREFIX=COMM
                  FDEF  COMMAND,A,4
                  FDEF  COMMAND_LENGTH,H,2
                  FDEF  USER_LENGTH,H,2
                  FDEF  USER,C,8
                  FDEF  ACTIVE_SESSION,A,4
                  FDEF  DD_NUMBER,P,4
                  FDEF  V_OSDAIR,A,4
                  FDEF  V_OSDEBUG,A,4
                  FDEF  V_OSDSINFO,A,4
                  FDEF  OSDSPACE,A,4
                  FDEF  V_OSMSG,A,4
                  FDEF  V_OSOFILE,A,4
                  FDEF  V_OSPARSE,A,4
                  FDEF  V_OSRECALL,A,4
                  FDEF  V_OSVARMGR,A,4
                  FDEF  OSSPFD,A,4
                  FDEF  OSSPFV,A,4
                  FDEF  ISPLINK,A,4
                  FDEF  FORMAT_DCB,A,4
                  FDEF  FORMAT_IO,A,4
                  FDEF  RECALL_FIRST,A,4
                  FDEF  RECALL_LAST,A,4
                  FDEF  RECALL_CURR,A,4
                  FDEF  DXD,A,4
                  DC    X'FF'

SESSION_FIELDS    DS    0C
                  FDEF  PREFIX=SESS
                  FDEF  DXD_ADDR,A,4
                  FDEF  DXD_LENGTH,F,4
                  FDEF  DISP_PANEL,C,8
                  FDEF  DISP_VDATA_ADDR,A,4
                  FDEF  DISP_VDATA_LENGTH,X,4
                  FDEF  DISP_CURSOR,F,4
                  FDEF  VOLSER,C,6
                  FDEF  UCB,A,4
                  FDEF  UCBTYP,X,4
                  FDEF  IO_AREA,A,4
                  FDEF  STATUS,X,1
                  FDEF  NUMBER,F,4
                  FDEF  FORMAT,C,8
                  FDEF  DEFAULT_FORMAT,C,8
                  FDEF  DD,C,8
                  FDEF  DCB_ADDR,A,4
                  FDEF  MEMBER,C,8
                  FDEF  EDIT_FLAGS,X,1
                  FDEF  SORT,X,1
                  FDEF  USER_OPTIONS,X,1
                  FDEF  FROM_KEY,X,8
                  FDEF  TO_KEY,X,8
                  FDEF  VSAM_LRECL,F,4
                  FDEF  VSAM_KEY_LENGTH,F,4
                  FDEF  VSAM_RKP,F,4
                  FDEF  TRACKS,H,2
                  FDEF  PREFIX=DATASPACE_1
                  FDEF  ALET,X,4
                  FDEF  TOKEN,X,8
                  FDEF  NAME,C,8
                  FDEF  FIRST_RECORD,F,4
                  FDEF  LAST_RECORD,F,4
                  FDEF  DISPLAY_FIRST_RECORD,F,4
                  FDEF  DISPLAY_LAST_RECORD,F,4
                  FDEF  DISPLAY_FIRST_COLUMN,F,4
                  FDEF  DISPLAY_LAST_COLUMN,F,4
                  FDEF  LAST_ADDRESS,A,4
                  DC    X'FF'

                  LTORG

MSG_01            DS    0C
MSG_01_ATTR_1     DC    AL01($SCREEN_ATTR_HIGH)
MSG_01_NAME_1     DC    CL16' '
                  DC    CL01' '
MSG_01_ATTR_2     DC    AL01($SCREEN_ATTR_NORMAL)
MSG_01_VALUE_1    DC    CL20' '
                  DC    CL01' '
MSG_01_ATTR_3     DC    AL01($SCREEN_ATTR_HIGH)
MSG_01_NAME_2     DC    CL16' '
                  DC    CL01' '
MSG_01_ATTR_4     DC    AL01($SCREEN_ATTR_NORMAL)
MSG_01_VALUE_2    DC    CL20' '
MSG_01_L          EQU   *-MSG_01

MSG_02            DS    0C
MSG_02_ATTR_1     DC    AL1($SCREEN_ATTR_HIGH)
MSG_02_NAME       DC    CL8' '
MSG_02_ATTR_2     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_VALUE      DC    CL70' '
MSG_02_L          EQU   *-MSG_02

MSG_03            DS    0C
MSG_03_ATTR       DC    AL1($SCREEN_ATTR_NORMAL)
                  DC    C'Address '
MSG_03_ADDR       DC    CL8' '
                  DC    C'    Previous '
MSG_03_PREV       DC    CL8' '
                  DC    C'    Next '
MSG_03_NEXT       DC    CL8' '
                  DC    C'    I/O area '
MSG_03_IO_AREA    DC    CL8' '
                  DC    C' '
MSG_03_L          EQU   *-MSG_03

DEBUGEND          EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDDEBUG            DSECT
                    COPY DXDPREF

DXD_SPF_PARMS       DS   0A
DXD_SPF_1           DS   A
DXD_SPF_2           DS   A

DXD_FIELD_BASE      DS   A

DXD_VDATA_LENGTH    DS   F
DXD_VDATA_ADDR      DS   A

DXD_VDEPTH          DS   F
DXD_VWIDTH          DS   F

DXD_SAVE_R8         DS   A
DXD_SIDE            DS   C

DXD_WORK_1          DS   CL16
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FIELD        DSECT
FIELD_NAME   DS   CL16              NAME
FIELD_FORMAT DS   C                 FORMAT
FIELD_LENGTH DS   AL2               SOURCE LENGTH
FIELD_DISP   DS   AL2               DISP INTO OSCOMM
FIELD_L      EQU  *-FIELD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             COPY ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             COPY TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
             COPY REGEQU
             END  OSDEBUG
