* ------------------------------------------------------------------- *
*                                                                     *
*        Append members to a sequential file                          *
*                                                                     *
*       Each member may be preceded by up to 3 'separator' lines      *
*                                                                     *
*       Each member may be followed by up to 3 'separator' lines      *
*                                                                     *
*                                                                     *
*                                                                     *
*     Variables available for customizing the separator lines:        *
*                                                                     *
*                                                                     *
*      &DSN     data set name                                         *
*      &MEMBER  member name                                           *
*      &DATE1   date in 'Julian'   form (YYDDD)  (five digits)        *
*      &DATE2   date in 'Julian'   form (YY.DDD) (six digits)         *
*      &DATE3   date in MMDDYYYY   form (8 bytes)                     *
*      &DATE4   date in MM/DD/YYYY form (10 bytes)                    *
*      &DATE5   date in DDMMYYYY   form (8 bytes)                     *
*      &DATE6   date in DD/MM/YYYY form (10 bytes)                    *
*      &DATE7   date in YYYYMMDD   form (8 bytes)                     *
*      &DATE8   date in YYYY/MM/DD form (10 bytes)                    *
*      &SEQ     Sequence number (first file is 00001,                 *
*                                second is 00002, etc)                *
*      &TIME1   time in HH:MM:SS        (8 bytes)                     *
*      &TIME2   time in HH:MM:SS:th     (11 bytes)                    *
*      &RECORDS Number of records in last file appended               *
*      &SIZE    Number of bytes in last file appended                 *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSAPPEND CSECT
OSAPPEND AMODE 31
OSAPPEND RMODE 24
         USING OSCOMM,R12
         USING OSAPPEND,R15
         B     INIT0000
MODID    DC    CL8'OSAPPEND'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(APPENDEND-OSAPPEND)
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         USING SESSION,R11                    DEFINE SESSION BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING OSAPPEND,R10                   DEFINE BASE
         LR    R9,R1
         USING APPNDREQ,R9                    DEFINE BASE
         GETMAIN RU,                                                   +
               LV=OSAPPEND_WORK_L,                                     +
               LOC=BELOW
         ST    R13,4(,R1)                     SAVE R13
         ST    R1,8(,R13)                     CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING OSAPPEND_WORK,R13              DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         L     R8,COMM_OSSPFD                 SPF DATA
         USING OSSPFD,R8
         ITRACE ID=ENTRY,                                              +
               RDATA1=R9
         CLI   APPNDREQ_FUNC,$APPNDREQ_OPEN
         BE    OPEN0000                       YES
         CLI   APPNDREQ_FUNC,$APPNDREQ_WRITE
         BE    MAIN0000                       YES
         CLI   APPNDREQ_FUNC,$APPNDREQ_CLOSE
         BE    CLOSE000                       YES
         DC    H'0',C'INVALID FUNCTION'
* ------------------------------------------------------------------- *
*                                                                     *
*        Allocate the output data set                                 *
*                                                                     *
*                                                                     *
*     Note that the difference in OFFLOAD and APPEND is that for      *
*     APPEND the output data set must already exist.                  *
*                                                                     *
* ------------------------------------------------------------------- *
OPEN0000 DS    0H
         ITRACE ID=OPEN
         LA    R1,PANEL_NAME                  PANEL NAME
         L     R15,COMM_V_OSOFILE             OSOFILE ENTRY POINT
         BALR  R14,R15                        PROMPT FOR OUTPUT DATASET
         LTR   R15,R15                        CONTINUE?
         BNZ   ABORT000                       NO
         XC    DAIRREQ(DAIRREQ_L),DAIRREQ
         CLI   SPF_OUTPUT_DSN,X'7D'           QUOTED NAME?
         BE    OPEN0010                       YES
         MVC   DAIR_DSN,COMM_BLANKS           INITIALIZE TO BLANKS
         LH    R2,COMM_USER_LENGTH            USER ID LENGTH
         BCTR  R2,0                           MINUS 1 FOR EXECUTE
         EX    R2,DSN_MVC1                    COPY USER ID
         LA    R3,DAIR_DSN+1(R2)              END OF DSN
         MVI   0(R3),C'.'                     INSERT DELIMITING PERIOD
         LA    R4,L'DAIR_DSN-3                MAXIMUM LENGTH
         SR    R4,R2                          MINUS USER ID LENGTH
         BCTR  R4,0
         EX    R4,DSN_MVC2                    COPY
         B     OPEN0040
OPEN0010 DS    0H
         MVC   DAIR_DSN(L'DAIR_DSN-1),SPF_OUTPUT_DSN+1
         LA    R14,DAIR_DSN+(L'DAIR_DSN-1)
         LA    R15,L'DAIR_DSN                 LOOP LIMITER
OPEN0020 DS    0H
         CLI   0(R14),X'7D'                   ENDING QUOTE?
         BE    OPEN0030                       YES
         BCTR  R14,0
         BCT   R15,OPEN0020
OPEN0030 DS    0H
         MVI   0(R14),C' '                    REMOVE QUOTE
* ------------------------------------------------------------------- *
*        Allocate output data set or member                           *
* ------------------------------------------------------------------- *
OPEN0040 DS    0H
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)
         MVI   DAIR_OPTS,0                    SET OPTIONS
         MVC   DAIR_MEMBER,COMM_BLANKS        COPY MEMBER NAME
         MVC   DAIR_VOLSER,COMM_BLANKS        COPY VOLSER
         MVC   DAIR_UNIT,COMM_BLANKS          COPY UNIT NAME
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         LA    R1,DAIRREQ
         ITRACE ID=ALOC_OUT
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        ALLOCATE OUTPUT
         ITRACE ID=DAIR_RC,                                            +
               DATA1=(DAIR_R15,2),                                     +
               DATA2=DAIR_DD
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0000                        NO
         MVC   APPNDREQ_DDNAME,DAIR_DD        SAVE DD NAME
* ------------------------------------------------------------------- *
*        OPEN the output data set                                     *
* ------------------------------------------------------------------- *
OPEN0050 DS    0H
         GETMAIN RU,                                                   +
               LV=ODCB_L,                                              +
               LOC=BELOW
         LR    R7,R1
         ST    R7,APPNDREQ_DCB                SAVE DCB ADDRESS
         ITRACE ID=OUT_DCB,                                            +
               RDATA1=R7
OUTPUT   USING IHADCB,R7
         MVC   0(ODCB_L,R7),ODCB_I            COPY DCB
         MVC   OUTPUT.DCBDDNAM,DAIR_DD        COPY DD NAME
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         ITRACE ID=OPEN_EXT,                                           +
               RDATA1=R7,                                              +
               DATA2=OUTPUT.DCBDDNAM
         OPEN  ((R7),EXTEND),                 OPEN OUTPUT DCB          +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         GETMAIN RU,                          GETMAIN I/O AREA         +
               LV=32768,                                               +
               LOC=BELOW
         ST    R1,APPNDREQ_IO                 SAVE I/O AREA
         ITRACE ID=IO_AREA,                                            +
               RDATA1=R1
         XC    APPNDREQ_COUNT,APPNDREQ_COUNT
         XC    APPNDREQ_BYTES,APPNDREQ_BYTES
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=MAIN,                                               +
               DATA1=APPNDREQ_MEMBER
         L     R7,APPNDREQ_DCB                DCB ADDRESS
         L     R6,APPNDREQ_IO                 I/O AREA
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)
         MVI   DAIR_OPTS,0                    SET OPTIONS
         MVC   DAIR_DSN,SESS_DSN              COPY DATA SET NAME
         MVC   DAIR_MEMBER,APPNDREQ_MEMBER    COPY MEMBER NAME
         MVC   DAIR_VOLSER,SESS_VOLSER        COPY VOLSER
         MVC   DAIR_UNIT,COMM_BLANKS          COPY UNIT NAME
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         ITRACE ID=ALOC_IN

         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        ALLOCATE SOURCE MEMBER
         ITRACE ID=DAIR_RC,                                            +
               DATA1=(DAIR_R15,2),                                     +
               DATA2=DAIR_DD
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0000                        NO
MAIN0010 DS    0H
         MVC   WORK_DCB(IDCB_L),IDCB_I
         LA    R5,WORK_DCB
INPUT    USING IHADCB,R5
         MVC   INPUT.DCBDDNAM,DAIR_DD
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         ITRACE ID=OPEN_IN,                                            +
               RDATA1=R5,                                              +
               DATA2=INPUT.DCBDDNAM
         OPEN  ((R5),INPUT),                  OPEN INPUT DCB           +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         XC    WORK_RECORDS,WORK_RECORDS      INITIALIZE
         XC    WORK_BYTES,WORK_BYTES          INITIALIZE
         L     R1,APPNDREQ_COUNT              NUMBER APPENDED SO FAR
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,APPNDREQ_COUNT              SAVE TOTAL
         ST    R1,SEPREQ_SEQ                  SERVES AS SEQ NBR ALSO
         LA    R1,SPF_SEPARATOR_1
         ST    R1,SEPREQ_FIRST_SEPARATOR
         LA    R1,3
         ST    R1,SEPREQ_NBR                  NBR OF SEPARATOR LINES
         ST    R7,SEPREQ_DCB                  OUTPUT DCB ADDR
         MVC   SEPREQ_MEMBER,APPNDREQ_MEMBER  SET MEMBER NAME
         LA    R1,SEPREQ                      SEPARATOR PARMS
         L     R15,COMM_V_OSSEP               OSSEP ENTRY POINT
         BALR  R14,R15                        OUTPUT LEADING SEPARATORS
         ITRACE ID=NOTIFY,                                             +
               DATA1=APPNDREQ_MEMBER
         MVC   WORK_MSG(MSG01_L),MSG01
         MVC   WORK_MSG+(MSG01_MEMBER-MSG01)(L'MSG01_MEMBER),APPNDREQ_M+
               EMBER
         LA    R2,WORK_MSG
         LA    R3,MSG01_L
         TPUT  (R2),(R3),R                    ISSUE TPUT
MAIN0020 DS    0H
         ITRACE ID=APPEND
MAIN0030 DS    0H
         GET   (R5),(R6)                      READ
         L     R1,WORK_RECORDS                RECORDS READ
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,WORK_RECORDS                SAVE NUMBER
         L     R1,APPNDREQ_BYTES              BYTES READ
         LA    R1,80(,R1)                     PLUS 80
         ST    R1,APPNDREQ_BYTES              SAVE TOTAL
         L     R1,WORK_BYTES                  BYTES FOR THIS FILE
         LA    R1,80(,R1)                     PLUS 80
         ST    R1,WORK_BYTES
         PUT   (R7),(R6)                      PUT
         B     MAIN0030                       LOOP
MAIN0040 DS    0H
         LA    R1,SPF_SEPARATOR_4             FIRST SEPARATOR
         ST    R1,SEPREQ_FIRST_SEPARATOR
         MVC   SEPREQ_RECORDS,WORK_RECORDS    NBR OF RECORDS
         MVC   SEPREQ_BYTES,WORK_BYTES        NBR OF BYTES
         LA    R1,SEPREQ
         L     R15,COMM_V_OSSEP               OSSEP ENTRY POINT
         BALR  R14,R15                        OUTPUT TRAILING SEPARATOR
         ITRACE ID=EOF,                                                +
               DATA1=(WORK_RECORDS,4),                                 +
               DATA2=(APPNDREQ_BYTES,4)
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         ITRACE ID=CLS_IN,                                             +
               RDATA1=R5
         CLOSE ((R5)),                        CLOSE DCB                +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         FREEPOOL (R5)                        FREE BUFFERS
         ITRACE ID=FREE_DD,                                            +
               DATA1=DAIR_DD
         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION (FREE)
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        FREE DD
         ITRACE ID=DAIR_RC,                                            +
               DATA1=(DAIR_R15,2)
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0000                        NO
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSE000 DS    0H
         L     R7,APPNDREQ_DCB                DCB ADDRESS
         L     R6,APPNDREQ_IO                 I/O AREA ADDRESS
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         ITRACE ID=CLS_OUT,                                            +
               RDATA1=R7
         CLOSE ((R7)),                        CLOSE DCB                +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         ITRACE ID=CLOSE_RC,                                           +
               RDATA1=R15
         FREEPOOL (R7)                        FREE BUFFERS
         ITRACE ID=FREE_DCB,                                           +
               DATA1=(=C'OUTPUT',6),                                   +
               RDATA2=R7
         FREEMAIN RU,                         FREE DCB                 +
               A=(R7),                                                 +
               LV=ODCB_L
         XC    APPNDREQ_DCB,APPNDREQ_DCB      CLEAR DCB ADDRESS
         ITRACE ID=FREE_IO,                                            +
               RDATA1=R6
         FREEMAIN RU,                         FREE I/O AREA            +
               A=(R6),                                                 +
               LV=32768
         XC    APPNDREQ_IO,APPNDREQ_IO        CLEAR I/O AREA ADDRESS
         ITRACE ID=FREE_DD,                                            +
               DATA1=APPNDREQ_DDNAME
         MVC   DAIR_DD,APPNDREQ_DDNAME        COPY DDNAME
         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        FREE DD
         ITRACE ID=DAIR_RC,                                            +
               DATA1=(DAIR_R15,2)
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0000                        NO
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABORT000 DS    0H
         ITRACE ID=ABORT
         MVC   COMM_MSG_CSECT,MODID
         MVI   COMM_MSG_ID+1,1
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         B     EXIT0004
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0000  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     OPEN0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         SR    R2,R2
         B     EXITEXIT
EXIT0004 DS    0H
         LA    R2,4
EXITEXIT DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         LR    R1,R13
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=OSAPPEND_WORK_L
         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)
         LR    R15,R2                         SET RETURN CODE
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DSN_MVC1 MVC   DAIR_DSN(0),COMM_USER          COPY USER ID
DSN_MVC2 MVC   1(0,R3),SPF_OUTPUT_DSN         COPY DATA SET NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
IDCB_I   DCB   DSORG=PS,                                               +
               DDNAME=ANYDD,                                           +
               EODAD=MAIN0040,                                         +
               MACRF=GM
IDCB_L   EQU   *-IDCB_I
ODCB_I   DCB   DSORG=PS,                                               +
               DDNAME=ANYDD,                                           +
               MACRF=PM
ODCB_L   EQU   *-ODCB_I
OPEN_I   OPEN  (*,EXTEND),                                             +
               MODE=31,                                                +
               MF=L
OPEN_L   EQU   *-OPEN_I
CLOSE_I  CLOSE (*),                                                    +
               MODE=31,                                                +
               MF=L
CLOSE_L  EQU   *-CLOSE_I

PANEL_NAME     DC     CL8'OSAPPEND'

MSG01          DS     0C
               DC     C'OSAPPEND01I  Appending member:'
MSG01_MEMBER   DC     CL8' '
MSG01_L        EQU    *-MSG01

               LTORG

APPENDEND      EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSAPPEND_WORK   DSECT
                COPY     DXDPREF
WORK_DCB        DS       0F,(IDCB_L)X
WORK_OPEN       DS       0F,(OPEN_L)X
WORK_CLOSE      DS       0F,(CLOSE_L)X

WORK_RECORDS    DS       F
WORK_BYTES      DS       F

WORK_MSG        DS       CL80

                DAIRREQ  DSECT=NO
                SEPREQ   DSECT=NO
OSAPPEND_WORK_L EQU      *-OSAPPEND_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               APPNDREQ DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               IBMMAC   DCBD=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSAPPEND
