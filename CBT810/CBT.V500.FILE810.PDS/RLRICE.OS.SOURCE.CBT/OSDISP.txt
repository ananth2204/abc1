* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSDISP                                                *
*                                                                     *
*  Centralized SPF PANEL display.                                     *
*                                                                     *
*  Having a centralized panel display reduces the amount of code      *
*  that would be needed for displaying panels.                        *
*                                                                     *
*  All panels that have a dynamic area use "VDATA" for the related    *
*  SPF variable.                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
*  At entry                                                           *
*   SESS_DISPLAY_PANEL will have the panel name                       *
*   SESS_DISP_VDATA_ADDR will have the data for the dynamic area      *
*      on the panel if any.                                           *
*   SESS_DISP_VDATA_LENGTH will have the length of the data for       *
*      the dynamic area on the panel if any.                          *
*   SESS_DISP_CURSOR will have the cursor position within the         *
*      dynamic area or zero.                                          *
*                                                                     *
*  If SESS_DISP_VDATA_ADDR is non-zero, the variable VDATA will be    *
*  VDEFINED using SESS_DISP_VDATA_ADDR as the variable address and    *
*  SESS_DISP_VDATA_LENGTH for the length.                             *
*                                                                     *
*                                                                     *
*                                                                     *
*  After a panel is DISPLAYed                                         *
*    All messages (SPF_MSG_x) are cleared to blanks                   *
*                                                                     *
*    The ZCMD and scrolling variables are "VGET"ed (VGOT?)            *
*                                                                     *
*    If ZCMD is non-blank, it is PARSEd by calling OSPARSE.           *
*                                                                     *
*    If the ZCMD is a RECALL (or ? .. that is a question mark),       *
*      the previous command is RECALLed to the primary command (ZCMD) *
*      and the same panel re-displayed with the RECALLed command.     *
*                                                                     *
*    If the ZCMD is "OS", a "new session" is signalled by setting     *
*      COMM_SESS_FUNC to $SESS_NEW_SESSION and exiting.               *
*                                                                     *
*    If the ZCMD is "DXD", call OSDXD to display the module entry     *
*    points and DXD areas, COMM address, and SESSION block address.   *
*                                                                     *
*    If the ZCMD is ABEND, cause an 0C1 for debugging.                *
*                                                                     *
*    If the ZCMD is DEBUG, display fields from the COMM and SESSION   *
*      control blocks.                                                *
*                                                                     *
*    If the ZCMD is DATASPACE, call OSSTOR to display the data in     *
*      the current dataspace.                                         *
*                                                                     *
*    If the ZCMD is FORMAT, verify the format exists in the           *
*      OSFORMATS library.  If valid, signal a FORMAT change by        *
*      setting COMM_NEW_FORMAT to the name of the new format          *
*      and exiting.                                                   *
*                                                                     *
*    If the command is "SESS", build and display a list of the        *
*      "sessions".                                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSDISP   CSECT
OSDISP   AMODE 31
OSDISP   RMODE ANY
         USING OSDISP,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'OSDISP'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DISPEND-OSDISP)
INIT0000 DS    0H
         STM   R14,R12,12(R13)        SAVE REGISTERS
         LR    R10,R15                COPY BASE ADDRESS
         DROP  R15
         USING OSDISP,R10
         L     R15,COMM_DXD           DXD AREA BASE ADDRESS
         A     R15,DXD_START          PLUS OFFSET TO OUR PORTION
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                COPY DXD AREA ADDRESS
         USING DXDDISP,R13            DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               DATA1=(SESS_DISP_PANEL,8),                              +
               DATA2=(COMM_ACTIVE_SESSION,4)
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
         MVI   COMM_SESS_FUNC,0                  RESET
         CLI   SESS_DISP_PANEL,C' '              BLANK?
         BH    DISP0010                          NO
         DC    H'0'                              TIME TO DEBUG!
* ------------------------------------------------------------------- *
*                                                                     *
*        Display the panel                                            *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0010 DS    0H
         ICM   R1,15,SESS_DISP_VDATA_ADDR        VDATA ADDRESS
         BZ    DISP0020                          NO VDATA ON THIS PANEL
         L     R0,SESS_DISP_VDATA_LENGTH         VDATA LENGTH
         ITRACE ID=VDEFINE,                                            +
               RDATA1=R1,                        VDATA ADDRESS         +
               RDATA2=R0                         VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                           VDEFINE VDATA
DISP0020 DS    0H
         ITRACE ID=DISPLAY,                                            +
               DATA1=(SESS_DISP_PANEL,8),                              +
               DATA2=(SESS_DISP_CURSOR,4)
         LA    R1,DISPLAY
         ST    R1,DXD_SPF_1                      SET ADDRESS
         LA    R1,SESS_DISP_PANEL                PANEL TO DISPLAY
         ST    R1,DXD_SPF_2                      SET ADDRESS
         OI    DXD_SPF_2,X'80'                   FLAG END-OF-LIST
         OC    SESS_DISP_CURSOR,SESS_DISP_CURSOR CURSOR POSITION?
         BZ    DISP0030                          NO CURSOR POSITION
         MVC   SPF_CURSOR_POSITION,SESS_DISP_CURSOR
         NI    DXD_SPF_2,X'7F'                   RESET END-OF-LIST
         XC    DXD_SPF_3,DXD_SPF_3               NO MESSAGE ADDRESS
         LA    R1,VDATA                          FIELD NAME FOR CURSOR
         ST    R1,DXD_SPF_4
         LA    R1,SPF_CURSOR_POSITION            CURSOR POSITION
         ST    R1,DXD_SPF_5
         OI    DXD_SPF_5,X'80'                   END-OF-LIST
DISP0030 DS    0H
         LA    R1,DXD_SPF_PARMS
         L     R15,COMM_ISPLINK                  SPF INTERFACE
         BALR  R14,R15                           LINK TO SPF
         STH   R15,SESS_RC                       SAVE RETURN CODE
         ITRACE ID=DISP_RC,                                            +
               RDATA1=R15
         MVC   SPF_MSG_1,COMM_BLANKS
         MVC   SPF_MSG_2,COMM_BLANKS
         MVC   SPF_MSG_3,COMM_BLANKS
         MVC   SPF_MSG_4,COMM_BLANKS
         MVC   SPF_MSG_5,COMM_BLANKS
         MVC   COMM_MSG_1,COMM_BLANKS
         MVC   COMM_MSG_2,COMM_BLANKS
         MVC   COMM_MSG_3,COMM_BLANKS
         MVC   COMM_MSG_4,COMM_BLANKS
         MVC   COMM_MSG_5,COMM_BLANKS
         CH    R15,H8                            ERROR?
         BH    ERR0010                           YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0040 DS    0H
         LA    R1,VGET                           COMMAND
         ST    R1,DXD_SPF_1                      SET ADDRESS
         LA    R1,VGET_LIST                      SYSTEM VARIABLES
         ST    R1,DXD_SPF_2                      SET ADDRESS
         OI    DXD_SPF_2,X'80'                   FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS                  SPF PARM LIST
         ITRACE ID=VGET_2,                                             +
               RDATA1=R1
         L     R15,COMM_ISPLINK                  SPF INTERFACE
         BALR  R14,R15                           VGET SPF VARIABLE(S)
         ITRACE ID=VGET2_RC,                                           +
               RDATA1=R15,                                             +
               DATA2=(SPF_ZSCREENC,5)
         LTR   R15,R15                           SUCCESSFUL?
         BNZ   DISP0050                          NO
         TM    SPF_FLAGS,$SPF_VPUT               VPUT ALREADY ISSUED?
         BO    DISP0060                          YES
* ------------------------------------------------------------------- *
*       UPDATE SPF VARIABLES                                          *
* ------------------------------------------------------------------- *
DISP0050 DS    0H
         OI    SPF_FLAGS,$SPF_VPUT               SET FLAG
         LA    R1,VPUT                           COMMAND
         ST    R1,DXD_SPF_1                      SET ADDRESS
         LA    R1,VPUT_LIST
         ST    R1,DXD_SPF_2
         OI    DXD_SPF_2,X'80'                   SET END-OF-LIST
         LA    R1,DXD_SPF_PARMS                  PARM LIST ADDRESS
         L     R15,COMM_ISPLINK                  SPF INTERFACE
         BALR  R14,R15                           UPDATE SPF VARIABLE(S)
         ITRACE ID=VPUT2_RC,                                           +
               RDATA1=R15
         B     DISP0040                          DO VGET
* ------------------------------------------------------------------- *
*                                                                     *
*     Rather than having some code duplicated the check for           *
*     ABEND, FORMAT, and RECALL is done here.                         *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0060 DS    0H
         XC    SPF_ROW,SPF_ROW
         XC    SPF_COLUMN,SPF_COLUMN
         PACK  COMM_DWORD,SPF_ZSCREENC           PACK CURSOR POSITION
         CVB   R1,COMM_DWORD                     CONVERT TO BINARY
         SR    R0,R0                             CLEAR R0
         ICM   R2,15,SPF_VWIDTH                  WIDTH VALID?
         BZ    DISP0065                          NO
         D     R0,SPF_VWIDTH                     COMPUTE ROW/COLUMN
         ST    R1,SPF_ROW                        SAVE ROW
         ST    R0,SPF_COLUMN                     SAVE COLUMN
DISP0065 DS    0H
         ITRACE ID=ROW_COL,                                            +
               RDATA1=R1,                                              +
               RDATA2=R0
         MVC   DXD_COMMAND,COMM_BLANKS
         MVC   DXD_TEMP,COMM_BLANKS
         MVC   DXD_COMMAND(L'SPF_ZCMD),SPF_ZCMD
         MVC   DXD_TEMP(L'SPF_ZCMD),SPF_ZCMD
         OC    DXD_TEMP,COMM_BLANKS              FORCE UPPER CASE
         TM    COMM_FLAGS,$COMM_NO_UPPER         NO UPPER CASE ON?
         BO    DISP0070                          YES
         OC    DXD_COMMAND,COMM_BLANKS           FORCE UPPER CASE
DISP0070 DS    0H
         CLC   DXD_COMMAND,COMM_BLANKS           ALL BLANK?
         BE    DISP0450                          YES
         LA    R1,DXD_COMMAND                    ZCMD
         ST    R1,PARSE_COMMAND
         LA    R1,L'SPF_ZCMD                     MAXIMUM LENGTH
         STH   R1,PARSE_LENGTH
         LA    R1,COMM_OPERANDS                  OUTPUT LIST'S ADDRESS
         ST    R1,PARSE_OPERANDS                 SET ADDRESS
         LA    R1,20                             MAX OPERANDS
         STH   R1,PARSE_OPERANDS_NBR
         LA    R1,PARSEREQ                       PARAMETER BLOCK
         L     R15,COMM_V_OSPARSE                PARSER'S ENTRY POINT
         ITRACE ID=PARSE,                                              +
               RDATA1=15,                                              +
               RDATA2=R1
         BALR  R14,R15                           PARSE THE COMMAND
         ITRACE ID=PARSE_RC,                                           +
               RDATA1=R15,                                             +
               DATA2=COMM_OPERANDS_NBR
         LTR   R15,R15                           SUCCESSFUL?
         BNZ   ERR0020                           NO
         SR    R3,R3                             CLEAR REGISTER
         ICM   R3,3,PARSE_OPERANDS_NBR
         STCM  R3,3,COMM_OPERANDS_NBR
         ITRACE ID=OPERANDS,                                           +
               RDATA1=R3
         LTR   R3,R3
         BZ    EXIT0000                          NO OPERANDS
         ITRACE ID=OPERAND1,                                           +
               DATA1=(OPERAND_01_ADDRESS,4),                           +
               DATA2=(OPERAND_01_LENGTH,4)
         ICM   R4,15,OPERAND_01_ADDRESS
         CLC   =C'? ',DXD_TEMP                   RECALL?
         BE    DISP0140                          YES
         CLC   RECALL,DXD_TEMP                   RECALL?
         BE    DISP0140                          YES
         ITRACE ID=STORECMD,                                           +
               RDATA1=R4,                                              +
               DATA2=0(R4)
         MVC   RCALLREQ_LENGTH,OPERAND_01_LENGTH
         MVC   RCALLREQ_CMD,SPF_ZCMD
         MVI   RCALLREQ_FUNC,$RCALLREQ_STORE
         LA    R1,RCALLREQ
         L     R15,COMM_V_OSRECALL
         BALR  R14,R15
         CLC   OPERAND_01_LENGTH,H2              TWO BYTES?
         BL    EXIT0000                          NO
         CLC   BROWSE(2),DXD_TEMP                BR(OWSE)?
         BE    DISP0150                          YES
         CLC   EDIT(2),DXD_TEMP                  ED(IT)?
         BE    DISP0160                          YES
         CLC   OS,DXD_TEMP                       OS?
         BE    DISP0180                          YES
         CLC   FLIST(2),DXD_TEMP                 FL(IST)?
         BE    DISP0420                          YES
         CLC   LF,DXD_TEMP                       LF (LISTF)?
         BE    DISP0420                          YES
         CLC   OPERAND_01_LENGTH,H3              THREE BYTES?
         BL    EXIT0000                          NO
         CLC   DXD_CMD,DXD_TEMP                  DXD?
         BE    DISP0320                          YES
         CLC   HEX(3),DXD_TEMP                   HEX?
         BE    DISP0350                          YES
         CLC   SMF(3),DXD_TEMP                   SMF?
         BE    DISP0170                          YES
         CLC   XTR_CMD,DXD_TEMP                  XTR?
         BE    DISP0380                          YES
         CLC   OPERAND_01_LENGTH,H4              FOUR BYTES?
         BL    EXIT0000                          NO
         CLC   EDIT(4),DXD_TEMP                  EDIT?
         BE    DISP0160                          YES
         CLC   SESS_CMD,DXD_TEMP                 SESS(ION)?
         BE    DISP0200                          YES
         CLC   STAE,DXD_TEMP                     STAE?
         BE    DISP0330                          YES
         CLC   TPUT(4),DXD_TEMP                  TPUT?
         BE    TPUT0000                          YES
         CLC   VDATA(4),DXD_TEMP                 VDATA?
         BE    DISP0370                          YES
         CLC   VHEX(4),DXD_TEMP                  VHEX?
         BE    DISP0360                          YES
         CLC   OPERAND_01_LENGTH,H5              AT LEAST FIVE BYTES?
         BL    EXIT0000                          NO..
         CLC   ABEND,DXD_TEMP                    ABEND?
         BE    ABEND000                          YES
         CLC   DEBUG,DXD_TEMP                    DEBUG?
         BE    DEBUG000                          YES
         CLC   FLIST,DXD_TEMP                    LIST FORMATS?
         BE    DISP0420                          YES
         CLC   OPERAND_01_LENGTH,H6              AT LEAST SIX BYTES?
         BL    EXIT0000                          NO..
         CLC   BROWSE(6),DXD_TEMP                BROWSE?
         BE    DISP0150                          YES
         CLC   FORMAT,DXD_TEMP                   FORMAT?
         BE    DISP0080                          YES
         CLC   NOSTAE,DXD_TEMP                   NOSTAE?
         BE    DISP0340                          YES
         CLC   OPERAND_01_LENGTH,H7              SEVEN BYTES LONG?
         BL    EXIT0000                          NO..
         CLC   SESSION_CMD,DXD_TEMP              SESSION?
         BE    DISP0200                          YES
         CLC   DATASPACE_CMD,DXD_TEMP            DATASPACE?
         BE    DISP0400                          YES
         B     EXIT0000                          OTHERWISE NOT OURS
* ------------------------------------------------------------------- *
*                                                                     *
*        Process FORMAT commands                                      *
*                                                                     *
*    If no operands are given, switch to the default format           *
*                                                                     *
*    If two operands are given                                        *
*      verify second operand is 8 characters or less                  *
*      verify the second parameter is a member in the OSFORMAT        *
*         library                                                     *
*                                                                     *
*    If the format is valid                                           *
*       set COMM_NEW_FORMAT to the new format name                    *
*       exit                                                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0080 DS    0H
         ITRACE ID=FORMAT
         TM    COMM_FLAGS,$COMM_NO_FORMAT        FORMAT ALLOWED?
         BO    DISP0130                          NO
         CH    R3,H2                             TWO OPERANDS?
         BH    ERR0030                           TOO MANY
         BL    DISP0090                          ONE..
         CLC   OPERAND_02_LENGTH,H8              TOO LONG?
         BH    ERR0040                           YES
         ICM   R4,15,OPERAND_02_ADDRESS
         OC    0(8,R4),COMM_BLANKS               FORCE TO UPPER CASE
         ITRACE ID=FMAT_NAME,                                          +
               DATA1=0(R4)
         B     DISP0100
DISP0090 DS    0H
         ITRACE ID=DEFAULT
         LA    R4,SESS_DEFAULT_FORMAT
DISP0100 DS    0H
         CLC   SESS_FORMAT,0(R4)                 SAME FORMAT?
         BE    EXIT0000                          YES
         ITRACE ID=VERIFY,                                             +
               DATA1=0(R4)
         ICM   R15,15,LOADREQ_EP                 OSFORMAT LOADED?
         BNZ   DISP0110                          YES
         MVI   LOADREQ_FUNC,$LOADREQ_LOAD
         MVC   LOADREQ_MODULE,MODULE_OSFORMAT
         LA    R1,LOADREQ
         L     R15,COMM_V_OSLOAD                 LOAD OSFORMAT
         BALR  R14,R15
         ICM   R15,15,LOADREQ_EP                 OSFORMAT ENTRY POINT
DISP0110 DS    0H
         MVI   FMATREQ_FUNC,$FMATREQ_VERIFY
         MVC   FMATREQ_FORMAT,0(R4)
         LA    R1,FMATREQ
         BALR  R14,R15                           VERIFY NEW NAME
         CLI   FMATREQ_RC,$FMATREQ_OK
         BNE   DISP0120
         ITRACE ID=NEW_FMAT,                                           +
               DATA1=0(R4)
         MVC   COMM_NEW_FORMAT,0(R4)             SET NEW FORMAT NAME
         B     EXIT0000                          EXIT
DISP0120 DS    0H
         ITRACE ID=NOTVALID
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     DISP0020
DISP0130 DS    0H
         ITRACE ID=NOTALLOW
         MVI   COMM_MSG_ID+1,1
         B     ERR0100
* ------------------------------------------------------------------- *
*        Process RECALL commands                                      *
* ------------------------------------------------------------------- *
DISP0140 DS    0H
         ITRACE ID=RECALL
         MVI   RCALLREQ_FUNC,$RCALLREQ_RECALL
         LA    R1,RCALLREQ
         L     R15,COMM_V_OSRECALL
         BALR  R14,R15
         MVC   SPF_ZCMD,RCALLREQ_CMD
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0150 DS    0H
         ITRACE ID=BROWSE
         CLC   SESS_FORMAT,BROWSE               FORMAT ALREADY BROWSE?
         BE    EXIT0000                         YES
         MVC   COMM_NEW_FORMAT,BROWSE           SET NEW FORMAT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0160 DS    0H
         ITRACE ID=EDIT
         CLC   SESS_FORMAT,EDIT                 FORMAT ALREADY EDIT?
         BE    EXIT0000                         YES
         MVC   COMM_NEW_FORMAT,EDIT             SET NEW FORMAT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0170 DS    0H
         ITRACE ID=SMF
         CLC   SESS_FORMAT,SMF                  FORMAT ALREADY SMF?
         BE    EXIT0000                         YES
         MVC   COMM_NEW_FORMAT,SMF              SET NEW FORMAT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Process "OS" commands                                        *
*                                                                     *
*   Start a new session by prompting the user for a data set,         *
*   data set and member, or unix path.                                *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0180 DS    0H
         ITRACE ID=NEW_OS
         TM    OPERAND_02_TYPE,$OPERAND_PRESENT
         BO    DISP0190
         MVC   SPF_ZCMD,COMM_BLANKS
         XC    COMM_COMMAND_LENGTH,COMM_COMMAND_LENGTH
DISP0190 DS    0H
         OI    COMM_SESS_FUNC,$SESS_NEW_SESSION SET INDICATOR
         B     EXIT0000                         EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        Process SESSION commands                                     *
*                                                                     *
*   Display a list of 'session's.                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0200 DS    0H
         ITRACE ID=SESSION
         TM    COMM_FLAGS,$COMM_NO_SESSION      SESSION SWITCH ALLOWED?
         BO    DISP0310                         NO
         LA    R1,PANEL_1                       PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN   SET FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                          GETMAIN VDATA STORAGE
         ST    R0,DXD_VDATA_LENGTH              VDATA LENGTH
         ST    R1,DXD_VDATA_ADDR                VDATA ADDRESS
         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                          VDEFINE VDATA
         MVC   DXD_VWIDTH,SPF_VWIDTH            SAVE WIDTH
         MVC   DXD_VDEPTH,SPF_VDEPTH            SAVE DEPTH
         L     R0,DXD_VDATA_ADDR
         L     R1,DXD_VDATA_LENGTH
         SR    R14,R14                          ZERO R14
         SR    R15,R15                          ZERO R15
         MVCL  R0,R14                           INITIALIZE VDATA
         L     R7,DXD_VDATA_ADDR                VDATA ADDRESS
         USING VDATA_SESS,R7
         L     R8,DXD_VDEPTH                    NBR OF LINES
         LR    R6,R11                           COPY CURRENT SESS ADDR
DISP     USING SESSION,R6
DISP0210 DS    0H
         ICM   R1,15,DISP.SESS_PREV             PREVIOUS BLOCK ON CHAIN
         BZ    DISP0220
         LR    R6,R1                            COPY SESSION ADDR
         B     DISP0210                         LOOP
DISP0220 DS    0H
         ITRACE ID=1ST_SESS,                                           +
               RDATA1=R6
         ST    R6,DXD_FIRST_SESS                SAVE 1ST SESSION ADDR
DISP0230 DS    0H
         MVI   VDATA_SESS_ATTR1,$SCREEN_ATTR_INPUT
         MVI   VDATA_SESS_SEL,C' '
         MVI   VDATA_SESS_ATTR2,$SCREEN_ATTR_NORMAL
         MVC   VDATA_SESS_FORMAT,DISP.SESS_FORMAT
         CLC   DISP.SESS_FORMAT,FORMAT_STOR
         BE    DISP0235
         TM    DISP.SESS_KEYWORD_FLAGS_2,$KEYWORD_ACT
         BO    DISP0250
         CLI   DISP.SESS_KEYWORD_FLAGS,$KEYWORD_PATH
         BE    DISP0240
         MVC   VDATA_SESS_DSN,DISP.SESS_DSN     COPY DATA SET NAME
         MVC   VDATA_SESS_MEMBER,DISP.SESS_MEMBER
         MVC   VDATA_SESS_VOLSER,DISP.SESS_VOLSER
         B     DISP0260
DISP0235 DS    0H
         L     R1,DISP.SESS_COMM                STORAGE COMMON AREA
         USING STORCOMM,R1
         MVC   VDATA_SESS_DSN(L'STORCOMM_CB_DESCRIPTION),STORCOMM_CB_DE+
               SCRIPTION
         MVC   VDATA_SESS_MEMBER,STORCOMM_CB_NAME
         B     DISP0260
DISP0240 DS    0H
         MVC   VDATA_SESS_DSN,DISP.SESS_PATH    COPY PATH
         B     DISP0260
DISP0250 DS    0H
         MVC   VDATA_SESS_DSN(L'ACT_MSG),ACT_MSG
DISP0260 DS    0H
         ICM   R6,15,DISP.SESS_NEXT             NEXT SESSION
         BZ    DISP0270
         A     R7,DXD_VWIDTH                    NEXT LINE
         BCT   R8,DISP0230                      LOOP
DISP0270 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS

         LA    R1,DISPLAY
         ST    R1,DXD_SPF_1                     SET ADDRESS
         LA    R1,PANEL_1                       PANEL TO DISPLAY
         ST    R1,DXD_SPF_2                     SET ADDRESS
         OI    DXD_SPF_2,X'80'                  FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS
         L     R15,COMM_ISPLINK                 SPF INTERFACE
         BALR  R14,R15                          LINK TO SPF
         MVC   SPF_MSG_1,COMM_BLANKS
         MVC   SPF_MSG_2,COMM_BLANKS
         MVC   SPF_MSG_3,COMM_BLANKS
         MVC   SPF_MSG_4,COMM_BLANKS
         MVC   SPF_MSG_5,COMM_BLANKS
         LTR   R15,R15                          RC ZERO?
         BNZ   DISP0300                         NO
         L     R6,DXD_FIRST_SESS
         L     R7,DXD_VDATA_ADDR                VDATA ADDRESS
         L     R8,DXD_VDEPTH                    NBR OF LINES
DISP0280 DS    0H
         CLI   VDATA_SESS_DSN,C' '              DATA ON THIS LINE?
         BL    DISP0300                         NO
         OI    VDATA_SESS_SEL,C' '              'TRANSLATE'
         CLI   VDATA_SESS_SEL,C' '              SELECTED?
         BNE   DISP0290                         YES
         ICM   R6,15,DISP.SESS_NEXT             NEXT SESSION
         A     R7,DXD_VWIDTH                    NEXT LINE
         BCT   R8,DISP0280                      LOOP
         B     DISP0270                         DISPLAY AGAIN
DISP0290 DS    0H
         ITRACE ID=SELECTED,                                           +
               RDATA1=R6
         CR    R11,R6                           ACTIVE SESSION?
         BE    DISP0300                         YES.. SAME SESSION
         MVI   COMM_SESS_FUNC,$SESS_SWITCH      INDICATE SWITCH
         ST    R6,COMM_NEW_SESSION              SET NEW SESS BLOCK ADDR
         L     R0,DXD_VDATA_LENGTH
         L     R1,DXD_VDATA_ADDR
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                          FREE VDATA
         B     EXIT0000                         EXIT
DISP0300 DS    0H
         L     R0,DXD_VDATA_LENGTH
         L     R1,DXD_VDATA_ADDR
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                          FREE VDATA
         B     DISP0010                         DISPLAY SESSION DATA
DISP0310 DS    0H
         ITRACE ID=NO_SESS
         MVI   COMM_MSG_ID+1,2                  NOT ALLOWED
         B     ERR0100
* ------------------------------------------------------------------- *
*        DISPLAY DXD AREA(S)                                          *
* ------------------------------------------------------------------- *
DISP0320 DS    0H
         ITRACE ID=DXD
         L     R15,COMM_V_OSDXD
         BALR  R14,R15                          CALL OSDXD
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0330 DS    0H
         ITRACE ID=STAE
         NI    SESS_ABEND_FLAG,255-$ABEND_NO_STAE
         MVC   SPF_ZCMD,COMM_BLANKS
         B     EXIT0000
DISP0340 DS    0H
         ITRACE ID=NOSTAE
         ESTAE 0
         OI    SESS_ABEND_FLAG,$ABEND_NO_STAE
         MVC   SPF_ZCMD,COMM_BLANKS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0350 DS    0H
         ITRACE ID=HEX
         CLC   SESS_FORMAT,EDIT                 IN EDIT MODE?
         BE    EXIT0000                         YES
         CLC   SESS_FORMAT,HEX                  FORMAT ALREADY HEX?
         BE    EXIT0000                         YES
         MVC   COMM_NEW_FORMAT,HEX              SET NEW FORMAT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0360 DS    0H
         ITRACE ID=VHEX
         CLC   SESS_FORMAT,VHEX                 FORMAT ALREADY VHEX?
         BE    EXIT0000                         YES
         MVC   COMM_NEW_FORMAT,VHEX             SET NEW FORMAT
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0370 DS    0H
         ITRACE ID=VDATA
         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND
         MVC   STORE_AREA_NAME,VDATA            DATASPACE NAME
         MVC   STORE_AREA_ADDR,SESS_DISP_VDATA_ADDR
         MVC   STORE_AREA_LENGTH,SESS_DISP_VDATA_LENGTH
         XC    STORE_AREA_ALET,STORE_AREA_ALET
         LA    R1,STORPARM                      PARMS FOR OSSTOR
         L     R15,COMM_V_OSSTOR
         BALR  R14,R15                          CALL OSSTOR
         B     DISP0010                         DISPLAY DATA AGAIN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0380 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND
         MVC   DXD_OPEN(OPEN_L),OPEN_I
         OPEN  (XTR_DCB,OUTPUT),                                       +
               MODE=31,                                                +
               MF=(E,DXD_OPEN)
         OI    COMM_TRACE_FLAG,$XTR_ON          SET FLAG
         ITRACE ID=XTR_ON
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0400 DS    0H
         ITRACE ID=DATA
         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND
         MVC   STORE_AREA_NAME,DATASPACE_1_NAME DATASPACE NAME
         XC    STORE_AREA_ADDR,STORE_AREA_ADDR  START AT ADDR ZERO
         L     R0,DATASPACE_1_BLOCKS            SIZE IN BLOCKS
         SLL   R0,12                            MULTIPLY BY 4096
         ST    R0,STORE_AREA_LENGTH             SET LENGTH
         MVC   STORE_AREA_ALET,DATASPACE_1_ALET SET ALET
         LA    R1,STORPARM                      PARMS FOR OSSTOR
         L     R15,COMM_V_OSSTOR
         BALR  R14,R15                          CALL OSSTOR
         B     DISP0010                         DISPLAY DATA AGAIN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0420 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND
         ITRACE ID=LIST
         L     R15,COMM_V_OSFLIST               OSFLIST ENTRY POINT
         BALR  R14,R15                          LINK TO OSFLIST
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0450 DS    0H
         ITRACE ID=NO_OPERS
         XC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR
         LA    R1,OPERAND_01_ADDRESS
         LA    R2,20                            NBR OF OPERANDS
DISP0460 DS    0H
         XC    0(OPERAND_L,R1),0(R1)            CLEAR ALL INFO
         LA    R1,OPERAND_L(,R1)                NEXT OPERAND
         BCT   R2,DISP0460
         B     EXIT0000                         ALL DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'0'
         DC    C'Internal error, DISPLAY failed'
ERR0020  DS    0H
         DC    H'0'
         DC    C'Internal error, PARSE failed'
ERR0030  DS    0H
         MVI   COMM_MSG_ID+1,3
         B     ERR0100
ERR0040  DS    0H
         MVI   COMM_MSG_ID+1,4
ERR0100  DS    0H
         MVI   COMM_MSG_ID,0
         MVC   COMM_MSG_CSECT,MODID
         ITRACE ID=ERROR,                                              +
               DATA1=COMM_MSG_CSECT,                                   +
               DATA2=(COMM_MSG_ID,2)
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
*        Set the ABENDED flag first so OSESTAE doesn't                *
*        intercept the ABEND and try to recover.                      *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         ITRACE ID=ABEND
         OI    SESS_ABEND_FLAG,$ABENDED
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DEBUG000 DS    0H
         ITRACE ID=DEBUG
         L     R15,COMM_V_OSDEBUG
         BALR  R14,R15
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TPUT0000 DS    0H
         ITRACE ID=TRACE
         MVC   SPF_ZCMD,COMM_BLANKS
         TM    COMM_TRACE_FLAG,$TRACE_TPUT
         BO    TPUT0010
         OI    COMM_TRACE_FLAG,$TRACE_TPUT
         ITRACE ID=TRACE_ON
         B     DISP0010
TPUT0010 DS    0H
         ITRACE ID=TRACEOFF
         NI    COMM_TRACE_FLAG,255-$TRACE_TPUT
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         L     R13,4(,R13)           RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)          RESTORE R14
         LH    R15,SESS_RC           SET RETURN CODE
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START         DC    Q(DXDDISP)
OPEN_I            OPEN  (*,OUTPUT),MODE=31,MF=L
OPEN_L            EQU   *-OPEN_I

VGET_LIST         DC    C'(ZSCROLLA ZSCROLLN ZVERB ZDLVOL ZSCREENC)'
VPUT_LIST         DC    C'(ZSCROLLA ZSCROLLN ZVERB ZDLVOL)'

H2                DC    H'2'
H3                DC    H'3'
H4                DC    H'4'
H5                DC    H'5'
H6                DC    H'6'
H7                DC    H'7'
H8                DC    H'8'
ABEND             DC    CL5'ABEND'
ACT_MSG           DC    CL5'ACTIVE REGIONS'
BROWSE            DC    CL8'BROWSE'
DATASPACE_CMD     DC    C'DATASPACE '
DEBUG             DC    CL5'DEBUG '
DISPLAY           DC    CL8'DISPLAY'
DXD_CMD           DC    CL3'DXD'
EDIT              DC    CL8'EDIT'
FLIST             DC    CL4'FLIST'
OS                DC    C'OS '
FORMAT            DC    CL6'FORMAT'
FORMAT_STOR       DC    CL8'STOR'
HEX               DC    CL8'HEX'
LF                DC    CL4'LF'
MODULE_OSFORMAT   DC    CL8'OSFORMAT'
NOSTAE            DC    CL6'NOSTAE'
PANEL_1           DC    CL8'OSSESS'
RECALL            DC    CL6'RECALL'
SESS_CMD          DC    C'SESS '
SESSION_CMD       DC    C'SESSION '
SMF               DC    CL8'SMF'
STAE              DC    C'STAE'
TPUT              DC    C'TPUT'
VDATA             DC    CL8'VDATA'
VGET              DC    CL8'VGET'
VHEX              DC    CL8'VHEX'
VPUT              DC    CL8'VPUT'
XTR_CMD           DC    CL3'XTR'

                  LTORG

DISPEND           EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDDISP          DSECT
                 COPY DXDPREF
DXD_SPF_PARMS    DS   0A
DXD_SPF_1        DS   A
DXD_SPF_2        DS   A
DXD_SPF_3        DS   A
DXD_SPF_4        DS   A
DXD_SPF_5        DS   A

DXD_FIRST_SESS   DS   A

DXD_VDATA_ADDR   DS   A
DXD_VDATA_LENGTH DS   F

DXD_VWIDTH       DS   F
DXD_VDEPTH       DS   F

DXD_OPEN         DS   0F,(OPEN_L)X

DXD_COMMAND      DS   CL80
DXD_TEMP         DS   CL80

                 FMATREQ  DSECT=NO
                 LOADREQ  DSECT=NO
                 PARSEREQ DSECT=NO
                 RCALLREQ DSECT=NO
                 STORPARM DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VDATA_SESS        DSECT
VDATA_SESS_ATTR1  DS    AL1
VDATA_SESS_SEL    DS    C
VDATA_SESS_ATTR2  DS    AL1
VDATA_SESS_DSN    DS    CL44
                  DS    C
VDATA_SESS_MEMBER DS    CL8
                  DS    C
VDATA_SESS_VOLSER DS    CL6
                  DS    C
VDATA_SESS_FORMAT DS    CL8
VDATA_SESS_L      EQU   *-VDATA_SESS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COMMON
              STORCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY TRENTRY
              COPY ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY REGEQU
              END  OSDISP
