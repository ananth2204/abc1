* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSACT                                                 *
*                                                                     *
*                                                                     *
*  Displays active z/OS regions.                                      *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSACT    CSECT
OSACT    AMODE 31
OSACT    RMODE ANY
         USING OSCOMM,R12
         USING OSACT,R15
         B     INIT0000
MODID    DC    CL8'OSACT'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSACTEND-OSACT)
INIT0000 DS    0H
         USING OSCOMM,R12                       DEFINE COMMON AREA BASE
         USING SESSION,R11                      DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         DROP  R15
         USING OSACT,R10                        DEFINE BASES
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
* ------------------------------------------------------------------- *
*        Determine if this is INITIAL invocation                      *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0010
* ------------------------------------------------------------------- *
*        Initialization                                               *
* ------------------------------------------------------------------- *
         OC    SESS_DXD_ADDR,SESS_DXD_ADDR
         BNZ   ERR0020
         LA    R0,OSACT_DXD_L
         ST    R0,SESS_DXD_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_DXD_ADDR
         LR    R2,R1
         LR    R0,R1
         LA    R1,OSACT_DXD_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         ST    R13,4(,R2)                        SAVE R13
         ST    R2,8(,R13)                        CHAIN SAVE AREA
         LR    R13,R2                            COPY WORK AREA ADDRESS
         USING OSACT_WORK,R13                    DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY1
         XC    DXD_RC,DXD_RC
         MVC   DXD_PANEL,ACT_PANEL               PANEL NAME
         LA    R1,DXD_PANEL                      PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN    SET VDATA FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                           GETMAIN VDATA STORAGE
         ST    R0,DXD_VDATA_LENGTH               SAVE VDATA LENGTH
         ST    R1,DXD_VDATA_ADDR                 SAVE VDATA ADDR
         ITRACE ID=VDATA,                                              +
               RDATA1=R1,                                              +
               RDATA2=R0
         MVC   DXD_VDEPTH,SPF_VDEPTH             SAVE DEPTH
         MVC   DXD_VWIDTH,SPF_VWIDTH             SAVE WIDTH
         XC    DXD_CURSOR,DXD_CURSOR             INITIALIZE CURSOR
         L     R1,CVTPTR                         CVT ADDRESS
         ITRACE ID=CVT,                                                +
               RDATA1=R1
         USING CVT,R1                            DEFINE BASE
         L     R1,CVTASVT                        ASVT ADDRESS
         DROP  R1
         USING ASVT,R1
         ITRACE ID=ASVT,                                               +
               RDATA1=R1
         LA    R2,ASVTFRST                       FIRST ASCB ADDRESS
         ST    R2,DXD_FIRST_ASCB_ADDR            SET FIRST
         ST    R2,DXD_CURR_ASVT
         L     R3,ASVTMAXU                       NBR OF ADDR SPACES
         SLL   R3,2                              MULTIPLY BY 4
         AR    R3,R2                             PLUS ADDR OF FIRST
         ST    R3,DXD_LAST_ASCB_ADDR             SAVE ADDR OF LAST
         ITRACE ID=1ST_LAST,                                           +
               DATA1=(DXD_FIRST_ASCB_ADDR,4),                          +
               DATA2=(DXD_LAST_ASCB_ADDR,4)
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Re-establish save area and determine function                *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         ICM   R15,15,SESS_DXD_ADDR
         BZ    ERR0020
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         ITRACE ID=ENTRY2,                                             +
               DATA1=(SESS_FORMAT_FLAGS,1)
         XC    DXD_RC,DXD_RC
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL  PROCESS CONTROL STMT?
         BE    CNTL0000                           YES
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP  CLEAN UP?
         BE    CLEAN000                           YES
         B     MAIN0000                           OTHERWISE FORMAT
* ------------------------------------------------------------------- *
*                                                                     *
*        PROCESS CONTROL STATEMENTS                                   *
*                                                                     *
* ------------------------------------------------------------------- *
CNTL0000 DS    0H
         ITRACE ID=CNTLSTMT,                                           +
               RDATA1=R1
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Format data                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=FORMAT,                                             +
               DATA1=(DXD_CURR_ASVT,4)
* ------------------------------------------------------------------- *
*         Initialize the VDATA buffer                                 *
* ------------------------------------------------------------------- *
         L     R0,DXD_VDATA_ADDR                BUFFER ADDRESS
         L     R1,DXD_VDATA_LENGTH              BUFFER SIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                           INITIALIZE BUFFER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,DXD_VDATA_ADDR                BUFFER ADDRESS
V        USING MSG01,R8
         L     R7,DXD_VDEPTH                    NUMBER OF LINES
         L     R6,DXD_CURR_ASVT                 FIRST ASCB TO DISPLAY
         ITRACE ID=BUILD,                                              +
               RDATA1=R7,                                              +
               RDATA2=R8
* ------------------------------------------------------------------- *
*                                                                     *
*      Build the data for the dynamic area here.                      *
*                                                                     *
*      R12 is address of OSCOMM                                       *
*      R11 is address of SESSION                                      *
*      R10 is base of this CSECT                                      *
*      R9  is address of SPFDATA                                      *
*      R8  is address of current line in VDATA                        *
*      R7  is number of lines remaining in vdata                      *
*      R6  IS current ASVT slot address                               *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=ASVTASCB,                                           +
               RDATA1=R6,                                              +
               DATA2=(0(R6),4)
         ICM   R5,15,0(R6)                      ASCB ADDRESS
         USING ASCB,R5
         BM    MAIN0120                         NEGATIVE.. NOT IN USE
         L     R2,ASCBOUCB                      OUCB ADDRESS
         USING OUCB,R2
         MVC   V.MSG01_USER,OUCBUSRD            COPY USER ID
         ICM   R4,15,ASCBJBNI                   JOB NAME?
         BZ    MAIN0020                         NO
         MVC   V.MSG01_NAME,0(R4)               COPY JOB NAME
         B     MAIN0080
MAIN0020 DS    0H
         ICM   R4,15,ASCBJBNS                   TRY STC NAME
         BZ    MAIN0120                         VERY STRANGE
         MVC   V.MSG01_NAME,0(R4)               COPY JOB OR STC NAME
         CLI   0(R4),C'*'                       MASTER SCHEDULER?
         BE    MAIN0100                         YES
         S     R4,=A(CHNAME-CSCX)               ADDRESS OF CSCX
         USING CSCX,R4
         L     R3,CHCSCBP                       CSCB ADDRESS
         USING CSCB,R3
         TM    OUCBYFL,OUCBSTT                  STARTED TASK?
         BO    MAIN0040                         YES
         TM    OUCBYFL,OUCBLOG                  TSO USER?
         BO    MAIN0050
         MVI   V.MSG01_TYPE,C'M'                A/S IS A MOUNT
         B     MAIN0060
MAIN0040 DS    0H
         MVI   V.MSG01_TYPE,C'S'                A/S IS AN STC
         B     MAIN0060
MAIN0050 DS    0H
         MVI   V.MSG01_TYPE,C'T'                TSO USER
MAIN0060 DS    0H
         LTR   R3,R3                            CSCB PRESENT?
         BZ    MAIN0100                         NO
MAIN0070 DS    0H
         CLI   CHKEY,C' '                       STEP NAME PRESENT?
         BNH   MAIN0090                         NO
         MVC   V.MSG01_STEP,CHKEY               COPY STEP NAME
         TM    OUCBYFL,OUCBLOG                  TSO USER?
         BNO   MAIN0090                         NO
         CLI   CHCLS,C' '                       PROC NAME PRESENT?
         BNH   MAIN0100                         NO
         MVC   V.MSG01_PROC,CHCLS               COPY PROC NAME
         B     MAIN0100
MAIN0080 DS    0H
         MVI   V.MSG01_TYPE,C'B'                A/S IS A BATCH JOB
         S     R4,=A(CHNAME-CSCX)               ADDRESS OF CSCX
         L     R3,CHCSCBP                       CSCB ADDRESS
         CLI   CHSTEP,C' '                      STEP NAME PRESENT?
         BNH   MAIN0090                         NO
         MVC   V.MSG01_STEP,CHSTEP              COPY STEP NAME
MAIN0090 DS    0H
         CLI   CHPROCSN,C' '                    PROC STEP NAME PRESENT?
         BNH   MAIN0100                         NO
         MVC   V.MSG01_PROC,CHPROCSN            COPY PROC STEP NAME
MAIN0100 DS    0H
         LM    R0,R1,ASCBEJST
         LM    R14,R15,ASCBSRBT
         SRDL  R0,12
         SRDL  R14,12
         AR    R1,R15
         SR    R0,R0                            CLEAR R0
         D     R0,F10000                        COMPUTE 100THS
         SR    R0,R0
         D     R0,F100                          COMPUTE WHOLE SECONDS
         CVD   R0,DXD_DWORD                     CONVERT TO DECIMAL
         MVC   DXD_EDWORD,=X'F0202020'
         ED    DXD_EDWORD,DXD_DWORD+6           EDIT HUNDREDTHS
         MVC   V.MSG01_HUNDREDTHS,DXD_EDWORD+2  COPY HUNDREDTHS
         MVI   V.MSG01_DECIMAL,C'.'             INSERT decimal
         SR    R0,R0                            CLEAR REMAINDER
         D     R0,F60                           COMPUTE MINUTES
         CVD   R0,DXD_DWORD
         MVC   DXD_EDWORD,=X'F0202020'          INITIALIZE
         ED    DXD_EDWORD,DXD_DWORD+6           EDIT SECONDS
         MVC   V.MSG01_SECONDS,DXD_EDWORD+2     COPY MINUTES
         MVI   V.MSG01_COLON2,C':'              INSERT COLON
         SR    R0,R0
         D     R0,F60                           COMPUTE HOURS
         CVD   R0,DXD_DWORD                     CONVERT TO DECIMAL
         MVC   DXD_EDWORD,=X'F0202020'          INITIALIZE
         ED    DXD_EDWORD,DXD_DWORD+6           EDIT MINUTES
         MVC   V.MSG01_MINUTES,DXD_EDWORD+2     COPY MINUTES
         MVI   V.MSG01_COLON1,C':'              INSERT COLON
         CVD   R1,DXD_DWORD                     CONVERT TO DECIMAL
         MVC   DXD_EDWORD,=X'F0202020'          INITIALIZE
         ED    DXD_EDWORD,DXD_DWORD+6           EDIT HOURS
         MVC   V.MSG01_HOURS,DXD_EDWORD+2       COPY HOURS
         L     R1,ASCBIOSC                      NBR OF I/O'S
         CVD   R1,DXD_DWORD                     CONVERT TO DECIMAL
         MVC   V.MSG01_IO,=X'402020206B2020206B202120'
         ED    V.MSG01_IO,DXD_DWORD+3           EDIT I/O'S
         ICM   R1,15,ASCBASSB                   ASSB PRESENT?
         BZ    MAIN0110                         NO
         USING ASSB,R1
         ICM   R1,15,ASSBJSAB                   JSCB PRESENT?
         BZ    MAIN0110
         USING IAZJSAB,R1
         MVC   V.MSG01_JOB_NBR,JSABJBID+2       COPY JOB NUMBER
         DROP  R1
MAIN0110 DS    0H
         A     R8,DXD_VWIDTH                    NEXT LINE
         BCT   R7,MAIN0120
         B     MAIN0200                         DISPLAY FULL
MAIN0120 DS    0H
         C     R6,DXD_LAST_ASCB_ADDR            AT END OF ASVT?
         BE    MAIN0200                         YES
         LA    R6,4(,R6)                        NEXT ASVT SLOT
         B     MAIN0010                         PROCESS NEXT A/S
* ------------------------------------------------------------------- *
*                                                                     *
*        Display the panel                                            *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         ITRACE ID=DISPLAY,                                            +
               DATA1=DXD_PANEL,                                        +
               RDATA2=R15
         MVC   SESS_DISP_PANEL,DXD_PANEL
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         MVC   SESS_DISP_CURSOR,DXD_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?
         BNE   EXIT0000                         YES
         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?
         BNE   EXIT0000                         YES
         OC    SESS_RC,SESS_RC                  RC=0
         BZ    MAIN0300                         YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Check for command(s)                                         *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
* ------------------------------------------------------------------- *
*                                                                     *
*        No command has been recognized                               *
*        Check for scroll commands                                    *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0310 DS    0H
         MVC   SESS_VERTICAL_SCROLL,SPF_ZSCROLLN
         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'B'                   BOTTOM?
         BE    MAIN0390                         YES
         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?
         BE    MAIN0360                         YES
         CLI   SPF_ZVERB,C'T'                   TOP?
         BE    MAIN0355                         YES
         CLI   SPF_ZVERB,C'U'                   SCROLL UP?
         BE    MAIN0330                         YES
         B     MAIN0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0330 DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0355                         YES
         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL
         L     R6,DXD_CURR_ASVT                 CURRENT ASVT
MAIN0340 DS    0H
         C     R6,DXD_FIRST_ASCB_ADDR           AT FIRST ASVT SLOT?
         BE    MAIN0000                         YES.. GOTTA STOP HERE
         TM    0(R6),X'80'                      IN USE?
         BO    MAIN0350                         NO
         SH    R6,H4                            UP 1 IN ASVT
         ST    R6,DXD_CURR_ASVT                 SAVE ADDRESS
         BCT   R1,MAIN0340                      LOOP
         B     MAIN0000                         RE-BUILD DISPLAY
MAIN0350 DS    0H
         SH    R6,H4                            SKIP THIS A/S
         B     MAIN0340
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0355 DS    0H
         ITRACE ID=TOP
         MVC   DXD_CURR_ASVT,DXD_FIRST_ASCB_ADDR
         B     MAIN0000                         RE-BUILD DISPLAY
* ------------------------------------------------------------------- *
*        SCROLL DOWN                                                  *
* ------------------------------------------------------------------- *
MAIN0360 DS    0H
         ITRACE ID=DOWN
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0390                         YES
         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL
         L     R6,DXD_CURR_ASVT                 FIRST A/S DISPLAYED     D
MAIN0370 DS    0H
         ST    R6,DXD_CURR_ASVT                 SET FIRST TO DISPLAY
MAIN0380 DS    0H
         C     R6,DXD_LAST_ASCB_ADDR            AT LAST?
         BE    MAIN0000                         YES.. REBUILD DISPLAY
         AH    R6,H4                            NEXT IN ASVT
         TM    0(R6),X'80'                      A/S IN USE?
         BO    MAIN0380                         NO
         BCT   R1,MAIN0370                      LOOP
         B     MAIN0000                         REBUILD DISPLAY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0390 DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         L     R6,DXD_LAST_ASCB_ADDR            LAST ASCB IN ASVT
         L     R1,DXD_VDEPTH                    SCREEN DEPTH
MAIN0400 DS    0H
         ST    R6,DXD_CURR_ASVT                 SET FIRST TO DISPLAY
MAIN0410 DS    0H
         C     R6,DXD_FIRST_ASCB_ADDR           AT FIRST A/S?
         BE    MAIN0000                         YES.. BUILD DISPLAY
         SH    R6,H4                            PREVIOUS A/S IN ASVT
         TM    0(R6),X'80'                      A/S IN USE?
         BO    MAIN0410                         NO
         BCT   R1,MAIN0400                      LOOP
         B     MAIN0000                         REBUILD DISPLAY
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_SESS_FUNC,$SESS_REMOVE         SIGNAL MAINLINE
         B     EXIT0000
ERR0020  DS    0H
         MVI   COMM_SESS_FUNC,$SESS_REMOVE         SIGNAL MAINLINE
         DC    H'0'                                SHOULD NOT HAPPEN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP,                                           +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)
         ICM   R1,15,DXD_VDATA_ADDR                VDATA GETMAINED?
         BZ    CLEAN010                            NO
         L     R0,DXD_VDATA_LENGTH                 VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                             FREE VDATA
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
CLEAN010 DS    0H
         LA    R0,OSACT_DXD_L                      WORK AREA SIZE
         LR    R1,R13                              COPY ADDRESS
         L     R13,4(,R13)                         RESTORE R13
         FREEMAIN RU,                              FREE WORK AREA      +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_DXD_ADDR,SESS_DXD_ADDR
         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                          RETURN CODE
         L     R13,4(,R13)                         RESTORE R13
EXIT0010 DS    0H
         L     R14,12(,R13)                        RESTORE R14
         LM    R0,R12,20(R13)                      RESTORE REGISTERS
         BR    R14                                 RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 LTORG

F60              DC    F'60'
F100             DC    F'100'
F10000           DC    F'10000'

H4               DC    H'4'

ACT_PANEL        DC    CL8'OSACT'

MSG01            DS    0C
MSG01_ATTR       DC    AL1($SCREEN_ATTR_NORMAL)
MSG01_JOB_NBR    DC    CL6' '
                 DC    C' '
MSG01_NAME       DC    CL8' '
                 DC    C' '
MSG01_STEP       DC    CL8' '
                 DC    C' '
MSG01_PROC       DC    CL8' '
                 DC    C' '
MSG01_PROCSTEP   DC    CL8' '
                 DC    C' '
MSG01_TYPE       DC    C' '
                 DC    C' '
MSG01_USER       DC    CL8' '
                 DC    C' '
MSG01_HOURS      DC    CL2' '
MSG01_COLON1     DC    C' '
MSG01_MINUTES    DC    CL2' '
MSG01_COLON2     DC    C' '
MSG01_SECONDS    DC    CL2' '
MSG01_DECIMAL    DC    C' '
MSG01_HUNDREDTHS DC    CL2' '
                 DC    C' '
MSG01_IO         DC    CL12' '
MSG01_L          EQU   *-MSG01
OSACTEND         EQU   *

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSACT_WORK          DSECT
                    COPY     DXDPREF

DXD_DWORD           DS       D

DXD_PANEL           DS       CL8            PANEL NAME
DXD_VDATA_ADDR      DS       A              VDATA BUFFER ADDRESS
DXD_VDATA_LENGTH    DS       F              VDATA BUFFER LENGTH
DXD_CURSOR          DS       F              CURSOR POSITION

DXD_VWIDTH          DS       F              DYNAMIC AREA WIDTH
DXD_VDEPTH          DS       F              DYNAMIC AREA DEPTH

DXD_FIRST_ASCB_ADDR DS       A              FIRST SLOT IN ASVT
DXD_LAST_ASCB_ADDR  DS       A              LAST SLOT IN ASVT
DXD_CURR_ASVT       DS       A              CURRENT (1ST ON DISPLAY)

DXD_RC              DS       H

DXD_EDWORD          DC       CL4' '
OSACT_DXD_L         EQU      *-OSACT_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DUMMY    DSECT
         IBMMAC   CVT=YES,ASCB=YES
         IHAASVT  DSECT=YES,LIST=NO
         IRAOUCB
         IHAASSB  LIST=NO
         IAZJSAB  DSECT=YES,LIST=NO

CSCB     DSECT
         IEECHAIN INCCSCX=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSACT
