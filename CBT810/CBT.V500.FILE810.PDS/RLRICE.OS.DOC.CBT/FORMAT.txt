One of the primary reasons for developing On Screen was to all data
being viewed to be "formatted" based on the type of data being viewed.
For example a sequential file, the contents would initially be in a
"browse" type format.  PDS(/E) directories would initially be shown
in a member list with a number of line commands or a command line
command available.  The contents of VTOCs are shown as a list data sets
with a line command per data set.  Other custom formatters can be
developed easily.  One custom formatter that comes "stock" is SMF.

The names of formats is determined by members in the FORMATS library.


DEFINING a FORMAT
To define a format, create a member in the FORMATS library.

Control statements are:

         Columns

         1        "*" (asterisk)   Comment.

         1-4      EXIT             Literally 'EXIT'
         9-12     module name      Name of a module whose entry
                                   point will be passed to the
                                   program named on the PROGRAM
                                   statement.


         1-7      PROGRAM          Literally 'PROGRAM'
         9-16     module name      This is the name of the program
                                   called to format the data.

         1-5      PANEL            Literally 'PANEL'
         9-16     SPF panel        Name of panel.  This should be
                                   the name of a member in the
                                   ISPPLIB library.

         other                     Any other data will be passed to
                                   the the module named on the
                                   PROGRAM statement.








When On Screen invokes a format, it calls reads the definition from the
OSFORMAT directory.  The placement of the statements in the definition
is important.  When On Screen reads the PROGRAM statement, it loads the
named program and stores the entry point in SESS_FORMATTER_ADDR.

Processing a format has four "phases".
  1) Initialize
  2) control
  3) format
  4) clean up

The format phase is indicated by SESS_FORMAT_FLAGS.

When the formatter is called with "initialize", it should obtain
is working storage.  It can save the address and length of the
in SESS_FORMATTER_DXD_ADDR and SESS_FORMATTER_DXD_LENGTH.
It can perform any other initialization needed.


If/when a control statement other than EXIT, PANEL, or PROGRAM is
read, On Screen assumes it is a control statement for use by the
formatter program.  On Screen will call the formatterin in "CONTROL"
state with the address of the control statement in register 1.
This is intended to allow the same formatting program to be used
for multiple purposes.  That is, the same program can be used in
multiple FORMAT definitions with differenet control parameters
passed to the formatter for each FORMAT.  The USERFMT formatter
is a formatter that uses control statements to allow the same
program to customize the display.




When all control statements have been processed, On Screen calls
the formatter in "format" phase.  The formatter should now display
the data.


When the user switches to a new format or ends the current format,
the formatter is called in clean-up.  This allows the formatter to
do any clean up necessary like FREEMAINing storage or DEQ'ing
any ENQ'ed resources.


Member OSSKEL of the source library can be used as a starting
point to write your own formatter.






