{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20100210214231000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 4702880, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 4000, "INMRECFM": "FB", "INMDIR": 19, "INMDSNAM": "RLRICE.OS.SOURCE.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 4702880, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 4702880, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.OS.SOURCE.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 4000, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xa0\\x00\\x04j@P'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xa0\\x00\\x04j@P'", "b'X\\xe2p\\x88\\x00\\x00\\x00a\\x00\\x08\\x00f\\x00\\x07\\x00K'", "b'X\\xe2p\\x88\\x00\\x00\\x008\\x00\\x0b\\x009\\x00\\n\\x00\\x0f'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$BINDER": {"ttr": 22, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "For loadlib PDS(/E)s, the \"L\" line command initiates a binder dialog.\n\nThe \"sections\" for the selected member will be displayed with a\nline command for each section.\n\nLine commands available are\n\n E    display ESD info\n B    display Binder IDR info\n M    display section \"map\"\n L    display language processor data\n R    display RLD info\n Z    display ZAP info\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DOC": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00$\\x01\\t!\\x9f\\x01\\t%/\\x15 \\x00L\\x00L\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-08-07T00:00:00", "modifydate": "2009-09-09T15:20:24", "lines": 76, "newlines": 76, "modlines": 0, "user": "RLRICE"}, "text": "OS is a data viewing utility.  It is intended to allow you to view\ndata formatted in multiple ways.\n\nOS dynamically allocates source (data set, HFS path, VTOC, etc).\nIf the data is in a sequential file or PDS(/E) member, OS reads the\ndata using BSAM.  If the user gives the name of a PDS(/E), OS obtains\nthe directory information using DESERV.  If the data set is VSAM,\nOS determines the type (KSDS, ESDS, RRDS, etc) and accesses the data\nwith an ACB with OPTCD's needed for the specific type.  OS also\nallows you to view VTOC's.\n\nUnfortunetly as far as I have been able to tell, commands\nfrom the READY prompt or SPF 6 are translated to upper\ncase before OS \"sees\" them.  So, to view unix type files, you\nusually need to start OS with no DSN or path.  OS will then\nprompt with an SPF panel that allows you to enter a path in a\nfield that does not get \"uppercased\".\n\nIn any case the data is stored a logical record at a time in a\ndata space.  There are multiple reasons for using a data space.\nFor one, once the data has been stored in the data space, it can\nbe viewed forward, backward, sorted, edited, etc.  Any part of the\ndata can be referenced at any time without having to do I/O to the\nsource data set.  Any I/O needed is done by system paging which is\nless overhead than normal data set I/O.  Another reason is that\ndata can come from any source you want.  Once you've got the data,\nthe remainder of OS does not have to be concerned with the data's\nsource.  The data source does not have to be data sets.  One of\nmy long-term plans is to OS storage.  A trade-off is that OS\nnormally reads the entire data set or member before displaying\nanything.  If you know ahead of time that you only need to view\na few records, you can use the START or RECORDS parameters to\nlimit the number of records and therefore I/O's.\n\n\nAs of now OS uses the system default data space size.  IBM's\ndefault is 239 pages.  You can specify a different (and larger)\nsize when starting OS.  As part of processing a data set, OS\nreads the format-1 label record.  My intent is to examine the\nextents and compute the size of the data space.  One of those\n'round to it's.\n\n\nOnce OS has read the data, it is displayed in a default format.\nSequential files, PDS(/E) members and VSAM data sets are displayed\nin character.  PDS(/E) directories with the PDS's RECFM F or V are\ndisplayed with SPF/PDF type data (TTR, version, size, etc).\nDirectories of PDS(/E)'s with RECFM U are assumed to be load libs\nand are shown with TTR, AC, and amode/rmode.  If the user specified\na VTOC, the data is displayed with the data set name, DSORG, number\nof extents (on this volume), and total number of tracks used.\n\n\nOnce the data has been read, it is displayed using the form based\non the source.  You can change the format at any time by entering\n\"FORMAT nnnnnnn\" where nnnnnnnn is the name of a member in the\nOSFORMATS library.  The supplied formats are:\n\n    BROWSE       character form (browse only)\n    DIR          non-loadlib directory\n    DIRECTRY     same as DIR\n    EDIT         character form (invokes the edit function)\n    HEX          browse in hex (two bytes for each byte)\n    HFS          regular file from an HFS\n    HFSDIR       hfs directory\n    LDIR         PDS(/E) \"loadlib\" directory\n    RVTOC        VTOC in \"raw\" form\n    SMF          Displays many of the SMF record types customized\n                    for each sub type.\n    VHEX         displays data in vertical hex.  Three rows per\n                 logical record.  The 1st line is the character,\n                 2nd line is the zone nibble and the 3rd line the\n                 numeric nibble for each byte.\n    VTOC         \"standard\" VTOC display.  Shows DSN, DSORG, number\n                    of extents on this volume, and total tracks.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DSORG": {"ttr": 24, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "OS determines a data set's DSORG and reads the data using\nthe appropriate (I hope) method.  Sequential data sets and\nPDS'es are read with BSAM and BPAM using a DCB.  VSAM data\nsets are read with an ACB.  For VSAM, OS sets the OPTCDs in\nthe RPL's depending on the type of VSAM.  That is KSDS's\nneed different OPTCDs than an ESDS so OS determines the type\nof VSAM data set and sets the OPTCD accordingly.\n\nIf the data set name is a UNIX PATH, OS determines the type\nof file (file, directory, link, ...).  If the path is a link,\nOS determines the real name and determines the type of file\nagain.  If the path (or real name) is a directory, OS displays\nthe files in the directory.  Since UNIX file names can be\nlong, some of the names may be truncated.  If the path is a\nfile, OS displays the contents of the file.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$FORMAT": {"ttr": 26, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "The whole idea in developing On Screen is to allow data to be\n\"custom\" formatted.\n\nMost types of data sets have a default format.  Sequential files,\nPDS members, VSAM files, HFS 'files' default to 'BROWSE'.  PDS or\nPDS/E directories default to a member list.\n\nThe default format can be overridden when starting OS by using the\nFORMAT keyword (or one of it's abbreviations) when starting OS.\n\nAssume you have a sequential file that contains SMF data:\n  OS DSN=SMF.DATA F=SMF\nThe \"F=\" keyword over-rides BROWSE as the default format.\n\n\nYou can switch formats by entering \"FORMAT xxxxxx\" in the primary\ncommand area.  Entering \"FORMAT\" with no format name causes OS\nto switch to the default format.  Assume you find a data set\nand are not sure of the contents.  Also assume it is a seuqential\nfile.  If you enter   OS 'some.unknown.data'\nOS will display the contents using BROWSE.  After browsing the\ndata, you realize the data is SMF data.  You can switch to SMF\nrecord formatting by entering \"FORMAT SMF\" in the command area.\nIf you want to switch back to BROWSE, enter \"FORMAT BROWSE\" or\njust \"FORMAT\".\n\n\nSome formats like BROWSE are used so frequently, I made their names\nprimary commands.  So to switch to BROWSE, you can enter\n\"FORMAT BROWSE\" or just \"BROWSE\" as a primary command.  The FORMATS\nI chose to make primary commands are BROWSE, HEX, VHEX, and SMF.\n\nYou can obtain a list of available formats by entering:\n  FL\n  LIST\n  FLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$HELP": {"ttr": 28, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "I have bee adding \"help\" to On Screen.\n\nIt is not 100% complete.\n\nThere are two kinds of help.  Primary or command line help and\nline command.  For Primary help, enter ?? on the command line\nand press enter.  For line command help, enter a ? on any line\ncommand and press enter.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$NAME": {"ttr": 30, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "I decided to change the name of this utility from FM \"File formatter\"\nto OS (On Screen).  Why the name change?  \"File formatter\" seemed to\nimply that the utility was for formatting or initializing data sets.\nThat is NOT the utility's function.  On Screen's function is to\ndisplay data with customized formatting.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PDS": {"ttr": 32, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PDS(/E) directory display\n\nHow do you get a PDS display?\n  When starting On Screen, specify the name of a PDS:\n     \"OS MY.SOURCE\"\n\n\n  Or if you are already viewing data with On Screen, enter \"OS\" on\n  on the command line.  On Screen will prompt with a panel that lets\n  you enter the name of a library.  Leave the member name blank.\n\n  From a VTOC display.  ('s' or 'b' line command) on a PDS or PDS/E\n\n\n  There are actually two PDS directory displays.  One for\n  loadlibs, one for non-loadlibs.\n\n  For loadlibs, the member name, TTR, size, AC, and amode/rmode\n  are shown.\n\n  For non-loadlibs, the member name and TTR are shown.  If PDS\n  statistics are present, version and modification (VV.MM), size,\n  initial size, date created, date and time last updated, and\n  user that last updated the member are shown.\n\n\nFor non-loadlib type PDSes line commands are:\n   A     Append\n   B     Browse\n   D     Delete\n   E     Edit\n   T     Tag\n   O     Offload\n   R     Rename\n   S     Select   (same as browse)\n   V     View     (same as browse)\n   X     Reset tag\n\n\nCommand line commands are\n   A        append\n   B        browse\n   D        delete\n   E        edit\n   F        find       (same as locate)\n   J        job        (submit)\n   L        locate\n   O        offload\n   R        rename\n   S        select     (same as browse)\n   T        tag\n   X        reset tag\n   BR       browse\n   ED       edit\n   FI       find       (same as locate)\n   FL       flag       (same as tag)\n   SH       Show\n   DEL      delete\n   JOB      submit\n   LOC      locate\n   OFF      offload\n   REN      rename\n   RES      reset tag\n   SEL      select\n   SUB      submit\n   TAG      tag\n   EDIT     edit\n   FIND     find       (same as locate)\n   FLAG     flag       (same as tag)\n   SHOW     show\n   SORT     sort\n   VIEW     view       (same as browse)\n   RESET    reset tag\n   APPEND   append\n   BROWSE   browse\n   DELETE   delete\n   LOCATE   locate\n   RENAME   rename\n   SELECT   select     (same as browse)\n   SUBMIT   submit\n   OFFLOAD  offload\n   REFRESH  refresh\n\n\n\n\n\n\n\n\nFor loadlibs line commands are:\n   B     browse\n   D     delete\n   L     binder info  (see the $BINDER documentation)\n   S     select   (same as browse)\n   T     tag\n   V     view     (same as browse)\n   X     Reset tag\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$TODO": {"ttr": 17925, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00X\\x01\\t%/\\x01\\x10\\x02_\\x16T\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-09-09T00:00:00", "modifydate": "2010-01-25T16:54:58", "lines": 26, "newlines": 26, "modlines": 0, "user": "RLRICE"}, "text": ".  Improve FIND/Locate\n\n.  Add some support for graphics data?\n\n.  Continue improving HELP\n\n.  SCAN or FIND primary command on PDS(/E) member displays to allow\n   users to search all members for a given character or hex string.\n\n.  Add some RACF or other security mechinism to restrict use of\n   certain functions.\n\n.  Allow the directory data for PDSes or PDS/Es to be edited.  This is\n   one of the functions that should be restricted.\n\n\n.  Allow VTOCs to be updated?  (VERY dangerous and should be restricted)\n\n.  Compute size of data set before creating the data space\n   use size of data set to size the data space\n\n.  add a \"?+\" or some other command (@ sign perhaps)\n   This would bring up a list of previous commands as a selection list\n   As is, the command recall (?) is one command at a time.\n   If the command the user needs is 10, 12 or further back,\n   it takes a lot of \"?\" <ENTER> iterations to get back to the command\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$UPDATES": {"ttr": 9481, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x005\\x01\\t%/\\x01\\x10\\x01/\\x16\"\\x00\\x1e\\x00\\x07\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-09-09T00:00:00", "modifydate": "2010-01-12T16:22:35", "lines": 30, "newlines": 7, "modlines": 0, "user": "RLRICE"}, "text": "Jan 2010\n . more fixes (too many to list again)\n . added storage function\n . added disassembler\n\nOct 2009\n . more fixes (again too many to list)\n . added STOR function\n\nSept 2009\n . hundreds (no exaggeration) of fixes and changes\n   ones I remember...\n    - number of records in \"bottom of data\" message in browse\n    - fixed the \"50\" in the ruler on the browse display\n    - OSRDBSAM skipped a sequence number per block storing data\n      in the data space\n    - SMF type 42 now handles multiple data sets on subtype 6\n    - moved temp storage for trace items 1 and 2 from user's work area\n      to common area (saves 16 bytes per save area)\n    - allow VSAM data or index components to be read by OSRDBSAM\n . add support for HFS directories/files\n . nearly total overhaul of the LMOD function(s)\n . added sereral more SMF record types to the SMF formatter\n . most displays allow a \"??\" in the primary command for HELP\n . most \"line commands\" allow a \"?\" for HELP for available line commands\n . add the ACT display.\n   - allow ACT as a primary command\n   - add options to allow selection of JOB, STC, or TSO users\n   - add option to select by JOB or USER name or name prefix\n   - add line command(s) to show more detail info?\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$USE": {"ttr": 35, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "How do you use OS?\n\n  enter \"OS datasetname\"\n\nFor example\n\n   OS SOURCE\n\nSince there were no keywords, OS will assume \"SOURCE\" is a\ndata set name.  Also, since the data set name was not \"quoted\",\nOS will add the user's ID as the first level qualifier and\nwill read/display \"userid.SOURCE\".\n\nAnother example\n\n   OS 'SYS1.PARMLIB'\n\nAgain there were no keyword parameters, so OS assumes \"SYS1.PARMLIB\"\nis a data set name and will read/display a member list of SYS1.PARMLIB.\n\nAnother example\n\n   OS DSN=MY.LIB M=PROGA START=20 RECORDS=50\n\nSince the DSN is not \"quoted\", OS will prefix the DSN with the\nuser's ID.  Because a specific member is requested (the M= parameter),\nOS will display member PROGA.  OS will start displaying the member\nstarting with the 20th record and will stop reading and displaying\nafter reading 50 records or reaching EOF.\n\n\nLet's say you have some data that has been ftp'd from a Windows or\nUnix workstation to your mainframe.\n\n   OS 'SOME.ASCII.FILE'  ASCII\n\nHere the data set name is \"quoted\", so the user's ID will not be\nprefixed.  The 'ASCII' keyword tells OS to translate the characters\nfrom ASCII to EBCDIC before displaying.  If you left off the 'ASCII'\nkeyword when starting OS, you can enter 'ASCII' as a command line\ncommand.  That is you can enter\n   OS 'SOME.ASCII.FILE'\nand then enter 'ASCII' on the command line.\n\n\n\n  OS VOL=vvvvvv VTOC\n     or\n  OS VTOC=vvvvvv\n\nOS will read and display the VTOC of volume 'vvvvvv'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$VTOC": {"ttr": 38, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "VTOCs\n\nOS will read/display VTOC info in two formats.\n\n\"VTOC\" format shows the datasets with a line command.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXITSAMP": {"ttr": 257, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: EXITSAMP                                              *\n*                                                                     *\n*                                                                     *\n*  Sample user exit for formats specifying EXIT.                      *\n*                                                                     *\n*  On entry R1 is the address of the USEREXIT parameter block.        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXITSAMP CSECT\nEXITSAMP AMODE 31\nEXITSAMP RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING EXITSAMP,R15\n         B     INIT0000\nMODID    DC    CL8'EXITSAMP'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING EXITSAMP,R10                   DEFINE BASE\n         DROP  R15\n         LR    R9,R1                          COPY USEREXIT BLOCK ADDR\n         USING USEREXIT,R9                    DEFINE BASE\n         CLI   USEREXIT_FUNC,$USEREXIT_INITIALIZE\n         BE    INIT0010\n         CLI   USEREXIT_FUNC,$USEREXIT_FORMAT\n         BE    FMAT0000\n         CLI   USEREXIT_FUNC,$USEREXIT_CMD\n         BE    CMD0000\n         CLI   USEREXIT_FUNC,$USEREXIT_CLEANUP\n         BE    CLEAN000\n         DC    H'0'                           <-- BAD FUNCTION\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=INIT\n         GETMAIN RU,                                                   +\n               LV=WORKAREA_L,                                          +\n               LOC=ANY                        <-- MAY NEED TO CHANGE\n         ST    R1,USEREXIT_USERWORD           SAVE WORK AREA ADDRESS\n         USING WORKAREA,R1\n         MVC   DXD_CSECT,MODID\n         DROP  R1\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*        FORMATTING                                                   *\n* ------------------------------------------------------------------- *\nFMAT0000 DS    0H\n         L     R1,USEREXIT_USERWORD           WORK AREA\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE WORK AREA BASE\n         ITRACE ID=FORMAT\n         L     R8,USEREXIT_RECORD_ADDR        RECORD ADDRESS\n         L     R7,USEREXIT_VDATA_ADDR         DYNAMIC STORAGE ADDR\n         L     R6,USEREXIT_ROWS               NUMBER OF ROWS AVAILABLE\n\n\n\n*         Add your formatting code here\n*\n*        R12   OSCOMM address\n*        R11   SESSION address\n*        R10   This program's base register\n*        R9    Address of EXITPARM\n*        R8    address of data to be formatted\n*        R7    dynamic area address\n*        R6    number of rows available in dynamic area\n\n\n\n\n\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCMD0000  DS    0H\n         L     R1,USEREXIT_USERWORD           WORK AREA\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE WORK AREA BASE\n         ITRACE ID=CMD,                                                +\n               DATA1=USEREXIT_ZCMD,                                    +\n               DATA2=USEREXIT_ZVERB\n         CLI   USEREXIT_ZVERB,C'B'            BOTTOM?\n         BE    CMD0010                        YES\n         CLI   USEREXIT_ZVERB,C'D'            SCROLL DOWN?\n         BE    CMD0020                        YES\n         CLI   USEREXIT_ZVERB,C'T'            TOP?\n         BE    CMD0030                        YES\n         CLI   USEREXIT_ZVERB,C'U'            SCROLL UP?\n         BE    CMD0040                        YES\n         CLC   USEREXIT_ZCMD,COMM_BLANKS      ALL BLANK?\n         BE    EXIT0000                       YES\n         B     ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCMD0010  DS    0H\n         ITRACE ID=BOTTOM\n         MVC   USEREXIT_ZCMD,COMM_BLANKS                CLEAR CMD\n         MVC   USEREXIT_RECORD_NBR,SESS_LAST_RECORD_1   SET RECORD NBR\n         B     EXIT0000\nCMD0020  DS    0H\n         ITRACE ID=DOWN\n         MVC   USEREXIT_ZCMD,COMM_BLANKS                CLEAR COMMAND\n         CLI   USEREXIT_ZSCROLLA,C'M'                   MAX?\n         BE    CMD0010                                  YES\n         L     R1,USEREXIT_RECORD_NBR                   RECORD NBR\n         A     R1,F1                                    PLUS 1\n         C     R1,USEREXIT_MAX_RECORD_NBR               BEYOND LAST?\n         BH    ERR0020                                  YES\n         ST    R1,USEREXIT_RECORD_NBR                   SET RECORD NBR\n         B     EXIT0000\nCMD0030  DS    0H\n         ITRACE ID=TOP\n         MVC   USEREXIT_ZCMD,COMM_BLANKS                CLEAR COMMAND\n         MVC   USEREXIT_RECORD_NBR,F1                   SET RECORD NBR\n         B     EXIT0000\nCMD0040  DS    0H\n         ITRACE ID=UP\n         MVC   USEREXIT_ZCMD,COMM_BLANKS                CLEAR COMMAND\n         CLI   USEREXIT_ZSCROLLA,C'M'                   MAX?\n         BE    CMD0050                                  YES\n         L     R1,USEREXIT_RECORD_NBR                   CURRENT RECORD\n         BCT   R1,CMD0050                               MINUS 1\n         B     ERR0030                                  NO..\nCMD0050  DS    0H\n         ST    R1,USEREXIT_RECORD_NBR                   SET RECORD NBR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Clean up                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         L     R1,USEREXIT_USERWORD           WORK AREA ADDRESS\n         FREEMAIN RU,                         FREEMAIN IT              +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         XC    USEREXIT_USERWORD,USEREXIT_USERWORD\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   USEREXIT_MSG_1(ERROR_MSG_01_L),ERROR_MSG_01\n         B     EXIT0000\nERR0020  DS    0H\n         MVC   USEREXIT_MSG_1(ERROR_MSG_02_L),ERROR_MSG_02\n         B     EXIT0000\nERR0030  DS    0H\n         MVC   USEREXIT_MSG_1(ERROR_MSG_03_L),ERROR_MSG_03\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT0000\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\nEXIT0010 DS    0H\n         ITRACE ID=EXIT0010\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                   Constants                                         *\n* ------------------------------------------------------------------- *\nF1              DC       F'1'\n\n\nERROR_MSG_01    DC       C'UNRECOGNIZED COMMAND'\nERROR_MSG_01_L  EQU      *-ERROR_MSG_01\n\nERROR_MSG_02    DC       C'AT BOTTOM OF DATA'\nERROR_MSG_02_L  EQU      *-ERROR_MSG_02\n\nERROR_MSG_03    DC       C'AT TOP OF DATA'\nERROR_MSG_03_L  EQU      *-ERROR_MSG_03\n\n                LTORG\n* ------------------------------------------------------------------- *\n*               Work area                                             *\n* ------------------------------------------------------------------- *\nWORKAREA        DSECT\n                COPY     DXDPREF\n                USEREXIT DSECT=NO\nWORKAREA_L      EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*               Common data                                           *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     ATTRS\n* ------------------------------------------------------------------- *\n*               EQUATES                                               *\n* ------------------------------------------------------------------- *\n                COPY     REGEQU\n                END      EXITSAMP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EXIT0001": {"ttr": 11020, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x13\\x01\\t4\\x1f\\x01\\x10\\x01O\\x16\\t\\x01,\\x01,\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2010-01-14T16:09:13", "lines": 300, "newlines": 300, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: EXIT0001                                              *\n*                                                                     *\n*                                                                     *\n*  Sample user exit for formats specifying EXIT.                      *\n*                                                                     *\n*  On entry R1 is the address of the USEREXIT parameter block.        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0001 CSECT\nEXIT0001 AMODE 31\nEXIT0001 RMODE ANY\n         USING OSCOMM,R12\n         USING EXIT0001,R15\n         B     INIT0000\nMODID    DC    CL8'EXIT0001'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(EXITEND-EXIT0001)\nINIT0000 DS    0H\n         USING SESSION,R11                      DEFINE SESSION BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         USING EXIT0001,R10                     DEFINE BASE\n         DROP  R15\n         LR    R9,R1                            COPY ADDR\n         USING USEREXIT,R9                      DEFINE BASE\n         CLI   USEREXIT_FUNC,$USEREXIT_INITIALIZE\n         BE    INIT0010\n         CLI   USEREXIT_FUNC,$USEREXIT_FORMAT\n         BE    FMAT0000\n         CLI   USEREXIT_FUNC,$USEREXIT_CMD\n         BE    CMD0000\n         CLI   USEREXIT_FUNC,$USEREXIT_CLEANUP\n         BE    CLEAN000\n         DC    H'0'                             <-- BAD FUNCTION\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=INIT\n         GETMAIN RU,                                                   +\n               LV=WORKAREA_L,                                          +\n               LOC=ANY                          <-- MAY NEED TO CHANGE\n         ST    R1,USEREXIT_USERWORD             SAVE WORK AREA ADDRESS\n         USING WORKAREA,R1\n         MVC   DXD_CSECT,MODID\n         DROP  R1\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*        Build display                                                *\n* ------------------------------------------------------------------- *\nFMAT0000 DS    0H\n         L     R1,USEREXIT_USERWORD             WORK AREA\n         ST    R13,4(R1)                        SAVE R13\n         ST    R1,8(R13)                        CHAIN SAVE AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING WORKAREA,R13                     DEFINE WORK AREA BASE\n         ITRACE ID=BUILD\n         L     R8,USEREXIT_RECORD_ADDR          RECORD ADDRESS\nSOURCE   USING TR_ENTRY,R8                      DEFINE BASE\n         L     R7,USEREXIT_VDATA_ADDR           DYNAMIC STORAGE ADDR\n         L     R6,USEREXIT_ROWS                 NUMBER OF ROWS\nFMAT0010 DS    0H\n         MVC   0(MSG_01_L,R7),MSG_01            INITIALIZE MESSAGE\n         USING MSG_01,R7\n         MVC   MSG_01_CSECT,SOURCE.TR_CSECT     COPY CSECT\n         DROP  R7\n         A     R7,USEREXIT_COLUMNS\n         BCT   R6,FMAT0020\n         B     EXIT0000\nFMAT0020 DS    0H\n         MVC   0(MSG_02_L,R7),MSG_02            INITIALIZE MESSAGE\n         USING MSG_02,R7\n         MVC   MSG_02_ID,SOURCE.TR_ID           COPY TRACE ID\n         DROP  R7\n         A     R7,USEREXIT_COLUMNS\n         BCT   R6,FMAT0030\n         B     EXIT0000\nFMAT0030 DS    0H\n         MVC   0(MSG_03_L,R7),MSG_03            INITIALIZE MESSAGE\n         USING MSG_03,R7\n         MVC   MSG_03_DATA1,SOURCE.TR_DATA1     COPY DATA 1\n         TR    MSG_03_DATA1,PRINTABLES          TRANSLATE UNPRINTABLES\n         UNPK  MSG_03_HEX1+0(9),SOURCE.TR_DATA1+0(5)\n         UNPK  MSG_03_HEX1+8(9),SOURCE.TR_DATA1+4(5)\n         TR    MSG_03_HEX1,COMM_HEXCHAR\n         MVI   MSG_03_HEX1+16,C' '\n         DROP  R7\n         A     R7,USEREXIT_COLUMNS\n         BCT   R6,FMAT0040\n         B     EXIT0000\nFMAT0040 DS    0H\n         MVC   0(MSG_04_L,R7),MSG_04            INITIALIZE MESSAGE\n         USING MSG_04,R7\n         MVC   MSG_04_DATA2,SOURCE.TR_DATA2     COPY DATA 2\n         TR    MSG_04_DATA2,PRINTABLES          TRANSLATE UNPRINTABLES\n         UNPK  MSG_04_HEX2+0(9),SOURCE.TR_DATA2+0(5)\n         UNPK  MSG_04_HEX2+8(9),SOURCE.TR_DATA2+4(5)\n         TR    MSG_04_HEX2,COMM_HEXCHAR\n         MVI   MSG_04_HEX2+16,C' '\n         DROP  R7\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCMD0000  DS    0H\n         L     R1,USEREXIT_USERWORD             WORK AREA\n         ST    R13,4(R1)                        SAVE R13\n         ST    R1,8(R13)                        CHAIN SAVE AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING WORKAREA,R13                     DEFINE WORK AREA BASE\n         ITRACE ID=CMD,                                                +\n               DATA1=USEREXIT_ZCMD,                                    +\n               DATA2=USEREXIT_ZVERB\n         CLI   USEREXIT_ZVERB,C'B'              BOTTOM?\n         BE    CMD0010                          YES\n         CLI   USEREXIT_ZVERB,C'D'              SCROLL DOWN?\n         BE    CMD0020                          YES\n         CLI   USEREXIT_ZVERB,C'T'              TOP?\n         BE    CMD0030                          YES\n         CLI   USEREXIT_ZVERB,C'U'              SCROLL UP?\n         BE    CMD0040                          YES\n         CLC   USEREXIT_ZCMD,COMM_BLANKS        ALL BLANK?\n         BE    EXIT0000                         YES\n         B     ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCMD0010  DS    0H\n         ITRACE ID=BOTTOM\n         MVC   USEREXIT_ZCMD,COMM_BLANKS        CLEAR CMD\n         MVC   USEREXIT_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         B     EXIT0000\nCMD0020  DS    0H\n         ITRACE ID=DOWN\n         MVC   USEREXIT_ZCMD,COMM_BLANKS        CLEAR COMMAND\n         CLI   USEREXIT_ZSCROLLA,C'M'           MAX?\n         BE    CMD0010                          YES\n         L     R1,USEREXIT_RECORD_NBR           RECORD NBR\n         A     R1,F1                            PLUS 1\n         C     R1,USEREXIT_MAX_RECORD_NBR       BEYOND LAST?\n         BH    ERR0020                          YES\n         ST    R1,USEREXIT_RECORD_NBR           SET RECORD NBR\n         B     EXIT0000\nCMD0030  DS    0H\n         ITRACE ID=TOP\n         MVC   USEREXIT_ZCMD,COMM_BLANKS        CLEAR COMMAND\n         MVC   USEREXIT_RECORD_NBR,F1           SET RECORD NBR\n         B     EXIT0000\nCMD0040  DS    0H\n         ITRACE ID=UP\n         MVC   USEREXIT_ZCMD,COMM_BLANKS        CLEAR COMMAND\n         CLI   USEREXIT_ZSCROLLA,C'M'           MAX?\n         BE    CMD0050                          YES\n         L     R1,USEREXIT_RECORD_NBR           CURRENT RECORD\n         BCT   R1,CMD0050                       MINUS 1\n         B     ERR0030                          NO..\nCMD0050  DS    0H\n         ST    R1,USEREXIT_RECORD_NBR           SET RECORD NBR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   USEREXIT_MSG_1(ERROR_MSG_01_L),ERROR_MSG_01\n         B     EXIT0000\nERR0020  DS    0H\n         MVC   USEREXIT_MSG_1(ERROR_MSG_02_L),ERROR_MSG_02\n         B     EXIT0000\nERR0030  DS    0H\n         MVC   USEREXIT_MSG_1(ERROR_MSG_03_L),ERROR_MSG_03\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         L     R1,USEREXIT_USERWORD             WORK AREA ADDRESS\n         FREEMAIN RU,                           FREEMAIN IT            +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         XC    USEREXIT_USERWORD,USEREXIT_USERWORD\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT0000\n         L     R13,4(R13)                       RESTORE R13\nEXIT0010 DS    0H\n         ITRACE ID=EXIT0010\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                   Constants                                         *\n* ------------------------------------------------------------------- *\nF1              DC       F'1'\n\nPRINTABLES      DS       0C\n                DC       X'40404040404040404040404040404040' 00-0F\n                DC       X'40404040404040404040404040404040' 10-1F\n                DC       X'40404040404040404040404040404040' 20-2F\n                DC       X'40404040404040404040404040404040' 30-3F\n                DC       X'404040404040404040404A4B4C4D4E4F' 40-4F\n                DC       X'504040404040404040405A5B5C5D5E5F' 50-5F\n                DC       X'60614040404040404040406B6C6D6E6F' 60-6F\n                DC       X'404040404040404040407A7B7C7D7E7F' 70-7F\n                DC       X'40818283848586878889408B8C8D8E8F' 80-8F\n                DC       X'40919293949596979899409B9C9D9E9F' 90-9F\n                DC       X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF\n                DC       X'4040404040404040404040BBBCBDBEBF' B0-BF\n                DC       X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n                DC       X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n                DC       X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n                DC       X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\nMSG_01          DS       0C\n                DC       AL1($SCREEN_ATTR_HIGH)\n                DC       C'CSECT   '\n                DC       CL3' '\n                DC       AL1($SCREEN_ATTR_NORMAL)\nMSG_01_CSECT    DC       CL8' '\nMSG_01_L        EQU      *-MSG_01\n\nMSG_02          DS       0C\n                DC       AL1($SCREEN_ATTR_HIGH)\n                DC       CL8'ID    '\n                DC       CL3' '\n                DC       AL1($SCREEN_ATTR_NORMAL)\nMSG_02_ID       DC       CL8' '\nMSG_02_L        EQU      *-MSG_02\n\nMSG_03          DS       0C\n                DC       AL1($SCREEN_ATTR_HIGH)\n                DC       CL8'DATA 1'\n                DC       CL3' '\n                DC       AL1($SCREEN_ATTR_NORMAL)\nMSG_03_DATA1    DC       CL8' '\n                DC       CL4' '\nMSG_03_HEX1     DC       CL16' '\n                DC       C' '\nMSG_03_L        EQU      *-MSG_03\n\nMSG_04          DS       0C\n                DC       AL1($SCREEN_ATTR_HIGH)\n                DC       CL8'DATA 2'\n                DC       CL3' '\n                DC       AL1($SCREEN_ATTR_NORMAL)\nMSG_04_DATA2    DC       CL8' '\n                DC       CL4' '\nMSG_04_HEX2     DC       CL16' '\n                DC       C' '\nMSG_04_L        EQU      *-MSG_04\n\nERROR_MSG_01    DC       C'UNRECOGNIZED COMMAND'\nERROR_MSG_01_L  EQU      *-ERROR_MSG_01\n\nERROR_MSG_02    DC       C'AT BOTTOM OF DATA'\nERROR_MSG_02_L  EQU      *-ERROR_MSG_02\n\nERROR_MSG_03    DC       C'AT TOP OF DATA'\nERROR_MSG_03_L  EQU      *-ERROR_MSG_03\n\n                LTORG\nEXITEND         EQU      *\n* ------------------------------------------------------------------- *\n*               Work area                                             *\n* ------------------------------------------------------------------- *\nWORKAREA        DSECT\n                COPY     DXDPREF\n                USEREXIT DSECT=NO\nWORKAREA_L      EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*               Common data                                           *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     ATTRS\n* ------------------------------------------------------------------- *\n*               EQUATES                                               *\n* ------------------------------------------------------------------- *\n                COPY     REGEQU\n                END      EXIT0001\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMODESD": {"ttr": 11269, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x004\\x01\\t!\\x0f\\x01\\x10\\x01O\\x16\\t\\x01\\xa8\\x01\\xa8\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-14T16:09:34", "lines": 424, "newlines": 424, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*    This runs as a 'subroutine' of OSLMOD.                           *\n*                                                                     *\n*    A new SESSION has been created (address is in R2)                *\n*                                                                     *\n*    Using the DIALOG already active, obtain the ESD info and         *\n*    store it in the data space associated with the new session.      *\n*    At exit, OSLMOD will inform OSMAIN that there is a new           *\n*    session with data type 'other' (basically this means the data    *\n*    is already in the data space), and the function set to OSLMOD.   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMODESD  CSECT\nLMODESD  AMODE 31\nLMODESD  RMODE ANY\n         USING LMODESD,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'LMODESD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(ESDEND-LMODESD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGISTERS\n         LR    R10,R15                          COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING LMODESD,R10,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                    PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                          COPY DXD AREA ADDRESS\n         USING DXDESD,R13                       DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R5,COMM_NEW_SESSION\nNEW      USING SESSION,R5\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         L     R6,COMM_OSSPFD\n         USING OSSPFD,R6\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         MVI   DXD_FLAGS,0\n* ------------------------------------------------------------------- *\n*        Obtain and initialize ESD buffer                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=ESD\n         ST    R8,DXD_ESD_BUFFER\n         ITRACE ID=INIT_ESD,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=ESD\n* ------------------------------------------------------------------- *\n*        Clear any old data from the data space                       *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLEAR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR      CLEAR DATA SPACE\n         LA    R0,NEW.DATASPACE_1               DATA SPACE CONTROL INFO\n         ST    R0,DSPCREQ_DATASPACE             SET ADDR IN PARM LIST\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          CLEAR THE DATA SPACE\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0040                          NO\n\n* ------------------------------------------------------------------- *\n*        Store the info for the specified section                     *\n* ------------------------------------------------------------------- *\n         LA    R1,ESDDATA_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,ESDDATA_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         XC    DXD_ESD_CURSOR,DXD_ESD_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Store the ESD info                                              *\n*                                                                     *\n*     R8 IS THE ESD HEADER (ESDH) BASE                                *\n*     R7 IS THE ESD ENTRY  (ESD_ENTRY) BASE                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESD0000  DS    0H\n         ITRACE ID=GETD_ESD,                                           +\n               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +\n               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8\n         L     R8,DXD_ESD_BUFFER\n         LA    R7,ESDH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +\n               CLASS=B_ESD,                                            +\n               SECTION=NEW.SESS_DIALOG_SECTION_LENGTH,                 +\n               AREA=IEWBESD,                                           +\n               CURSOR=DXD_ESD_CURSOR,                                  +\n               COUNT=DXD_ESD_RETURNED,                                 +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                          NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    ESD0020\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   ESD0020\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nESD0020  DS    0H\n         ICM   R4,15,DXD_ESD_RETURNED\n         BZ    ERR0020\n         OI    DXD_FLAGS,$FLAGS_DISPLAYED\nESD0030  DS    0H\n         ITRACE ID=BLD_SECT,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R4\n         MVC   ESDDATA_TYPE,ESD_TYPE\n         MVC   ESDDATA_QUAL,ESD_TYPE_QUAL\n         MVC   ESDDATA_NAME_SPACE,ESD_NAME_SPACE\n         MVC   ESDDATA_SCOPE,ESD_SCOPE\n         SR    R14,R14\n         MVC   ESDDATA_NAME,COMM_BLANKS\n         ICM   R14,3,ESD_NAME_CHARS             LENGTH OF NAME\n         BZ    ESD0050                          NO NAME?\n         CH    R14,H8                           TOO LONG?\n         BL    ESD0040                          NO\n         LH    R14,H8                           LIMIT LENGTH TO 8\nESD0040  DS    0H\n         BCTR  R14,R0\n         ICM   R15,15,ESD_NAME_PTR              ADDRESS OF NAME\n         EX    R14,NAME_MVC                     COPY NAME\n         B     ESD0060\nESD0050  DS    0H\n         MVC   ESD_NAME(L'NONE),NONE            NO NAME\nESD0060  DS    0H\n         MVC   ESDDATA_SYMBOL_ATTR,ESD_SYMBOL_ATTR\n         MVC   ESDDATA_FILL_CHAR,ESD_FILL_CHAR\n         MVC   ESDDATA_RESIDENT,COMM_BLANKS\n         ICM   R14,3,ESD_RESIDENT_CHARS         LENGTH OF RESIDENT NAME\n         BZ    ESD0080                          NO NAME\n         CH    R14,=Y(L'ESDDATA_RESIDENT)\n         BL    ESD0070\n         LH    R14,=Y(L'ESDDATA_RESIDENT)\nESD0070  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,ESD_RESIDENT_PTR\n         EX    R14,RESIDENT_MVC                 COPY RESIDENT NAME\n         B     ESD0090\nESD0080  DS    0H\n         MVC   ESDDATA_RESIDENT(L'NONE),NONE\nESD0090  DS    0H\n         MVC   ESDDATA_LENGTH,ESD_LENG\n         MVC   ESDDATA_ALIGN,ESD_ALIGN\n         MVC   ESDDATA_USABILITY,ESD_USABILITY\n         MVC   ESDDATA_AMODE,ESD_AMODE\n         MVC   ESDDATA_RMODE,ESD_RMODE\n         MVC   ESDDATA_RECFM,ESD_RECORD_FMT\n         MVC   ESDDATA_LOAD_FLAGS,ESD_LOAD_FLAGS\n         MVC   ESDDATA_BIND_FLAGS,ESD_BIND_FLAGS\n         MVC   ESDDATA_BIND_CNTL,ESD_BIND_CNTL\n         MVC   ESDDATA_ATTRIBUTES,ESD_ATTRIBUTES\n         MVC   ESDDATA_XATTR_CLASS,COMM_BLANKS\n         ICM   R14,3,ESD_XATTR_CLS_CHARS\n         BZ    ESD0110\n         CH    R14,H8\n         BL    ESD0100\n         LH    R14,H8\nESD0100  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,ESD_XATTR_CLS_PTR\n         EX    R14,XATTR_MVC\n         B     ESD0120\nESD0110  DS    0H\n         MVC   ESDDATA_XATTR_CLASS(L'NONE),NONE\nESD0120  DS    0H\n         MVC   ESDDATA_XATTR_OFFSET,ESD_XATTR_OFFSET\n         MVC   ESDDATA_SEGMENT,ESD_SEGMENT\n         MVC   ESDDATA_REGION,ESD_REGION\n         MVC   ESDDATA_SIGNATURE,ESD_SIGNATURE\n         MVC   ESDDATA_AUTOCALL,ESD_AUTOCALL\n         MVC   ESDDATA_STATUS,ESD_STATUS\n         MVC   ESDDATA_TARGET,COMM_BLANKS\n         ICM   R14,3,ESD_TARGET_CHARS\n         BZ    ESD0140\n         CH    R14,H8\n         BL    ESD0130\n         LH    R14,H8\nESD0130  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,ESD_TARGET_PTR\n         EX    R14,TARGET_MVC\n         B     ESD0150\nESD0140  DS    0H\n         MVC   ESDDATA_TARGET(L'NONE),NONE\nESD0150  DS    0H\n         MVC   ESDDATA_RESIDENT_CLASS,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,ESD_RES_CLASS_CHARS\n         BZ    ESD0170\n         CH    R14,=Y(L'ESDDATA_RESIDENT_CLASS)\n         BL    ESD0160\n         LH    R14,=Y(L'ESDDATA_RESIDENT_CLASS)\nESD0160  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,ESD_RES_CLASS_PTR\n         EX    R14,RES_CLASS_MVC\n         B     ESD0180\nESD0170  DS    0H\n         MVC   ESDDATA_RESIDENT_CLASS(L'NONE),NONE\nESD0180  DS    0H\n         MVC   ESDDATA_ELEMENT_OFFSET,ESD_ELEM_OFFSET\n         MVC   ESDDATA_CLASS_OFFSET,ESD_CLASS_OFFSET\n         MVC   ESDDATA_ADA,COMM_BLANKS\n         ICM   R14,3,ESD_ADA_LL\n         BZ    ESD0200\n         CH    R14,=Y(L'ESDDATA_ADA)\n         BL    ESD0190\n         LH    R14,=Y(L'ESDDATA_ADA)\nESD0190  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,ESD_ADA_PTR\n         EX    R14,ADA_MVC\n         B     ESD0210\nESD0200  DS    0H\n         MVC   ESDDATA_ADA(L'NONE),NONE\nESD0210  DS    0H\n         MVC   ESDDATA_PRIORITY,ESD_PRIORITY\n\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         ITRACE ID=STORE,                                              +\n               RDATA1=R1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    ESD0220\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0040\n         A     R7,ESDH_ENTRY_LENG\n         BCT   R4,ESD0030\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   ESD0000\n         B     ESD0230\nESD0220  DS    0H\n         ITRACE ID=FULL\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         L     R1,DSPCREQ_RECORD_NBR\n         BCTR  R1,0\n         ST    R1,DSPCREQ_RECORD_NBR\nESD0230  DS    0H\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(20),INFO_GET_ESD\n         MVC   COMM_INFO_02,DXD_RETURN_CODE\n         MVC   COMM_INFO_03,DXD_REASON_CODE\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         TM    DXD_FLAGS,$FLAGS_DISPLAYED\n         BO    ERR0030\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     EXIT0000\nERR0100  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         BR    R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNAME_MVC       MVC   ESDDATA_NAME(0),0(R15)\nRESIDENT_MVC   MVC   ESDDATA_RESIDENT(0),0(R15)\nXATTR_MVC      MVC   ESDDATA_XATTR_CLASS(0),0(R15)\nTARGET_MVC     MVC   ESDDATA_TARGET(0),0(R15)\nRES_CLASS_MVC  MVC   ESDDATA_RESIDENT_CLASS(0),0(R15)\nADA_MVC        MVC   ESDDATA_ADA(0),0(R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         sR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*        CONSTANTS                                                    *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=ESD,                                               +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n               IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L      EQU     *-IEWBIND_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC   Q(DXDESD)\n\nF1             DC   F'1'\nF4             DC   F'4'\nF8             DC   F'8'\nH8             DC   H'8'\nNONE           DC   C'NONE'\nB_ESD          DC   H'5',C'B_ESD'\nX_83000800     DC   X'83000800'\nX_83000801     DC   X'83000801'\nINFO_GET_ESD   DC   CL20'GET ESD INFO'\n\n\n               LTORG\n\nESDEND         EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDESD                  DSECT\n                        COPY  DXDPREF\n\nDXD_IEWBIND             DS    0F,(IEWBIND_L)X\n\nDXD_RETURN_CODE         DS    XL4            RETURN CODE\nDXD_REASON_CODE         DS    XL4            REASON CODE\n\nDXD_ESD_BUFFER          DS    A\n\nDXD_ESD_RETURNED        DS    F\nDXD_ESD_CURSOR          DS    F\n\nDXD_NUMBER              DS    CL12\n\nDXD_FLAGS               DS    X\n$FLAGS_DISPLAYED        EQU   X'80'            SOME DATA DISPLAYED\n\n                        DSPCREQ  DSECT=NO\n                        COPY  ESDDATA\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT   DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD     TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY       TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY       REGEQU\n         END        LMODESD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMODIDRB": {"ttr": 4356, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x19\\x01\\t!\\x0f\\x01\\t6/\\x15%\\x01$\\x01#\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:25:19", "lines": 292, "newlines": 291, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: LMODIDRB                                              *\n*                                                                     *\n*  Process and store IDRB (Binder identification) data                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMODIDRB CSECT\nLMODIDRB AMODE 31\nLMODIDRB RMODE ANY\n         USING LMODIDRB,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'LMODIDRB'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(IDRBEND-LMODIDRB)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGISTERS\n         LR    R10,R15                          COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING LMODIDRB,R10,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                    PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                          COPY DXD AREA ADDRESS\n         USING DXDIDRB,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R5,COMM_NEW_SESSION\nNEW      USING SESSION,R5\n         MVC   COMM_MSG_CSECT,MODID\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         L     R6,COMM_OSSPFD\n         USING OSSPFD,R6\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         MVI   DXD_FLAGS,0\n         LA    R1,NEW.DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n* ------------------------------------------------------------------- *\n*        Obtain and initialize IDRB buffer                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=IDRB\n         ST    R8,DXD_IDRB_BUFFER\n         ITRACE ID=INITIDRB,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=IDRB\n* ------------------------------------------------------------------- *\n*        Store the info for the specified section                     *\n* ------------------------------------------------------------------- *\n         LA    R1,IDRB_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,IDRB_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         XC    DXD_IDRB_CURSOR,DXD_IDRB_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Store the IDRB info                                             *\n*                                                                     *\n*     R8 IS THE IDRB HEADER (IDBH) BASE                               *\n*     R7 IS THE IDRB ENTRY (IDB_ENTRY) BASE                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIDRB0000 DS    0H\n         ITRACE ID=GETDIDRB,                                           +\n               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +\n               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8\n         L     R8,DXD_IDRB_BUFFER\n         LA    R7,IDBH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +\n               CLASS=B_IDRB,                                           +\n               SECTION=DUMMY_SECTION,                                  +\n               AREA=IEWBIDB,                                           +\n               CURSOR=DXD_IDRB_CURSOR,                                 +\n               COUNT=DXD_IDRB_RETURNED,                                +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                          NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    IDRB0010\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    IDRB0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nIDRB0010 DS    0H\n         ICM   R4,15,DXD_IDRB_RETURNED\n         BZ    ERR0020\n         OI    DXD_FLAGS,$FLAGS_DISPLAYED\nIDRB0020 DS    0H\n         ITRACE ID=BLD_SECT,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R4\n\n* ----------------  Build data -------------------------------------- *\n         MVC   IDRB_BINDER_ID,IDB_BINDER_ID\n         MVC   IDRB_VERSION,IDB_VERSION\n         MVC   IDRB_RELEASE,IDB_RELEASE\n         MVC   IDRB_DATE_BOUND,IDB_DATE_BOUND\n         MVC   IDRB_TIME_BOUND,IDB_TIME_BOUND\n         MVC   IDRB_MODULE_SIZE,IDB_MODULE_SIZE\n         MVC   IDRB_CALLERID,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,IDB_CALLERID_CHARS\n         BZ    IDRB0040\n         CH    R14,=Y(L'IDRB_CALLERID)\n         BL    IDRB0030\n         LH    R14,=Y(L'IDRB_CALLERID)\nIDRB0030 DS    0H\n         BCTR  R14,0\n         EX    R14,CALLERID_MVC\n\n* ----------------  Store record just built ------------------------- *\n\nIDRB0040 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         ITRACE ID=STORE,                                              +\n               RDATA1=R1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    IDRB0050\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0040\n\n* ----------------  Locate next record in buffer -------------------- *\n         A     R7,IDBH_ENTRY_LENG               PLUS LENGTH\n         BCT   R4,IDRB0020                      LOOP\n         CLC   DXD_REASON_CODE,X_83000800       MORE DATA?\n         BNE   IDRB0060                         YES\n         ITRACE ID=DONE\n         B     IDRB0060\nIDRB0050 DS    0H\n         ITRACE ID=FULL\n         L     R1,DSPCREQ_RECORD_NBR\n         BCTR  R1,0\n         ST    R1,DSPCREQ_RECORD_NBR\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\nIDRB0060 DS    0H\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCALLERID_MVC   MVC  IDRB_CALLERID(0),IDB_CALLERID\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(20),INFO_GET_IDRB\n         MVC   COMM_INFO_02,DXD_RETURN_CODE\n         MVC   COMM_INFO_03,DXD_REASON_CODE\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         TM    DXD_FLAGS,$FLAGS_DISPLAYED\n         BO    ERR0030\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     EXIT0000\nERR0100  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R13,4(,R13)                     RESTORE R13\n         L     R14,12(,R13)                    RESTORE R14\n         LR    R15,R2                          SET RC\n         LM    R0,R12,20(R13)                  RESTORE REGISTERS\n         BR    R14                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=IDRB,                                              +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n               IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L      EQU     *-IEWBIND_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC   Q(DXDIDRB)\n\nF1                   DC   F'1'\nF4                   DC   F'4'\nF8                   DC   F'8'\nB_IDRB               DC   H'6',C'B_IDRB'\nDUMMY_SECTION        DC   H'8',X'00000001',CL4' '\nX_83000800           DC   X'83000800'\nX_83000801           DC   X'83000801'\nINFO_GET_IDRB        DC   CL20'GET IDRB info'\n\nIDRBEND              EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDIDRB              DSECT\n                     COPY  DXDPREF\n\nDXD_IEWBIND          DS    0F,(IEWBIND_L)X\n\nDXD_RETURN_CODE      DS    XL4            RETURN CODE\nDXD_REASON_CODE      DS    XL4            REASON CODE\n\nDXD_IDRB_BUFFER      DS    A\n\nDXD_IDRB_RETURNED    DS    F\nDXD_IDRB_CURSOR      DS    F\n\nDXD_FLAGS            DS    X\n$FLAGS_DISPLAYED     EQU   X'80'            SOME DATA DISPLAYED\n\n                     COPY  IDRBDATA\n\n                     DSPCREQ  DSECT=NO\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      REGEQU\n         END       LMODIDRB\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMODIDRL": {"ttr": 4363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00#\\x01\\t!\\x0f\\x01\\t6/\\x15%\\x01#\\x01#\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:25:23", "lines": 291, "newlines": 291, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: LMODIDRL                                              *\n*                                                                     *\n*  Process and display IDRL (Language processor) data                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMODIDRL CSECT\nLMODIDRL AMODE 31\nLMODIDRL RMODE ANY\n         USING LMODIDRL,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'LMODIDRL'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(IDRLEND-LMODIDRL)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGISTERS\n         LR    R10,R15                          COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING LMODIDRL,R10,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                    PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                          COPY DXD AREA ADDRESS\n         USING DXDIDRL,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R5,COMM_NEW_SESSION\nNEW      USING SESSION,R5\n         MVC   COMM_MSG_CSECT,MODID\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         L     R6,COMM_OSSPFD\n         USING OSSPFD,R6\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         MVI   DXD_FLAGS,0\n         LA    R1,NEW.DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n* ------------------------------------------------------------------- *\n*        Obtain and initialize IDRL buffer                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=IDRL\n         ST    R8,DXD_IDRL_BUFFER\n         ITRACE ID=INITIDRL,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=IDRL\n* ------------------------------------------------------------------- *\n*        Store the info for the specified section                     *\n* ------------------------------------------------------------------- *\n         LA    R1,LMOD_IDRL_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,LMOD_IDRL_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         XC    DXD_IDRL_CURSOR,DXD_IDRL_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Store the IDRL info                                             *\n*                                                                     *\n*     R8 IS THE IDRL HEADER (IDLH) BASE                               *\n*     R7 IS THE IDRL ENTRY (IDL_ENTRY) BASE                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIDRL0000 DS    0H\n         ITRACE ID=GETDIDRL,                                           +\n               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +\n               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8\n         L     R8,DXD_IDRL_BUFFER\n         LA    R7,IDLH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +\n               CLASS=B_IDRL,                                           +\n               SECTION=NEW.SESS_DIALOG_SECTION_LENGTH,                 +\n               AREA=IEWBIDL,                                           +\n               CURSOR=DXD_IDRL_CURSOR,                                 +\n               COUNT=DXD_IDRL_RETURNED,                                +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                          NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    IDRL0010\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    IDRL0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nIDRL0010 DS    0H\n         ICM   R4,15,DXD_IDRL_RETURNED\n         BZ    ERR0020\n         OI    DXD_FLAGS,$FLAGS_DISPLAYED\nIDRL0020 DS    0H\n         ITRACE ID=BLD_SECT,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R4\n\n* ----------------  Build data -------------------------------------- *\n\n         MVC   LMOD_IDRL_PID_ID,IDL_PID_ID\n         MVC   LMOD_IDRL_VERSION,IDL_VERSION\n         MVC   LMOD_IDRL_LEVEL,IDL_VERSION\n         MVC   LMOD_IDRL_DATE_PROCESSED,IDL_DATE_PROCESSED\n         MVC   LMOD_IDRL_RESIDENT,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,IDL_RESIDENT_CHARS\n         BZ    IDRL0040\n         CH    R14,=Y(L'LMOD_IDRL_RESIDENT)\n         BL    IDRL0030\n         LH    R14,=Y(L'LMOD_IDRL_RESIDENT)\nIDRL0030 DS    0H\n         BCTR  R14,0\n         ICM   R15,15,IDL_RESIDENT_PTR\n         EX    R14,RESIDENT_MVC\n\n* ----------------  Store record just built ------------------------- *\n\nIDRL0040 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         ITRACE ID=STORE,                                              +\n               RDATA1=R1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    IDRL0050\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0040\n\n* ----------------  Locate next record in buffer -------------------- *\n         A     R7,IDLH_ENTRY_LENG               PLUS LENGTH\n         BCT   R4,IDRL0020                      LOOP\n         CLC   DXD_REASON_CODE,X_83000800       MORE DATA?\n         BNE   IDRL0000                         YES\n         ITRACE ID=DONE\n         B     IDRL0060\nIDRL0050 DS    0H\n         ITRACE ID=FULL\n         L     R1,DSPCREQ_RECORD_NBR\n         BCTR  R1,0\n         ST    R1,DSPCREQ_RECORD_NBR\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\nIDRL0060 DS    0H\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRESIDENT_MVC   MVC  LMOD_IDRL_RESIDENT(0),0(R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(20),INFO_GET_IDRL\n         MVC   COMM_INFO_02,DXD_RETURN_CODE\n         MVC   COMM_INFO_03,DXD_REASON_CODE\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         TM    DXD_FLAGS,$FLAGS_DISPLAYED\n         BO    ERR0030\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\nERR0100  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=IDRL,                                              +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n               IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L      EQU     *-IEWBIND_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC   Q(DXDIDRL)\n\nF1                   DC   F'1'\nF4                   DC   F'4'\nF8                   DC   F'8'\nB_IDRL               DC   H'6',C'B_IDRL'\nX_83000800           DC   X'83000800'\nX_83000801           DC   X'83000801'\nINFO_GET_IDRL        DC   CL20'GET IDRL info'\n\nIDRLEND              EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDIDRL              DSECT\n                     COPY  DXDPREF\n\nDXD_IEWBIND          DS    0F,(IEWBIND_L)X\n\nDXD_RETURN_CODE      DS    XL4            RETURN CODE\nDXD_REASON_CODE      DS    XL4            REASON CODE\n\nDXD_IDRL_BUFFER      DS    A\n\nDXD_IDRL_RETURNED    DS    F\nDXD_IDRL_CURSOR      DS    F\n\nDXD_FLAGS            DS    X\n$FLAGS_DISPLAYED     EQU   X'80'          SOME DATA DISPLAYED\n\n                     DSPCREQ  DSECT=NO\n                     COPY  IDRLDATA\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      LMODIDRL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMODIDRZ": {"ttr": 4612, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00&\\x01\\t!\\x0f\\x01\\t6/\\x15%\\x01 \\x01\\x1f\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:25:26", "lines": 288, "newlines": 287, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: LMODIDRZ                                              *\n*                                                                     *\n*  Process IDRZ (AMASPZAP) data                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMODIDRZ CSECT\nLMODIDRZ AMODE 31\nLMODIDRZ RMODE ANY\n         USING LMODIDRZ,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'LMODIDRZ'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(IDRZEND-LMODIDRZ)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGISTERS\n         LR    R10,R15                          COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         USING LMODIDRZ,R10,R9\n         DROP  R15\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                    PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                          COPY DXD AREA ADDRESS\n         USING DXDIDRZ,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R5,COMM_NEW_SESSION\nNEW      USING SESSION,R5\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         MVI   DXD_FLAGS,0\n         LA    R1,NEW.DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n* ------------------------------------------------------------------- *\n*        Obtain and initialize IDRZ buffer                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=IDRZ\n         ST    R8,DXD_IDRZ_BUFFER\n         ITRACE ID=INITIDRZ,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=IDRZ\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n* ------------------------------------------------------------------- *\n*        Store the info for the specified section                     *\n* ------------------------------------------------------------------- *\n         LA    R1,LMOD_IDRZ_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,LMOD_IDRZ_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         XC    DXD_IDRZ_CURSOR,DXD_IDRZ_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Store the IDRZ info                                             *\n*                                                                     *\n*     R8 IS THE IDRZ HEADER (IDZH) BASE                               *\n*     R7 IS THE IDRZ ENTRY (IDZ_ENTRY) BASE                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIDRZ0000 DS    0H\n         ITRACE ID=GETDIDRZ,                                           +\n               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +\n               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8\n         L     R8,DXD_IDRZ_BUFFER\n         LA    R7,IDZH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +\n               CLASS=B_IDRZ,                                           +\n               SECTION=NEW.SESS_DIALOG_SECTION_LENGTH,                 +\n               AREA=IEWBIDZ,                                           +\n               CURSOR=DXD_IDRZ_CURSOR,                                 +\n               COUNT=DXD_IDRZ_RETURNED,                                +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                          NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    IDRZ0010\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    IDRZ0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nIDRZ0010 DS    0H\n         ICM   R4,15,DXD_IDRZ_RETURNED\n         BZ    ERR0020\n         OI    DXD_FLAGS,$FLAGS_DISPLAYED\nIDRZ0020 DS    0H\n         ITRACE ID=BLD_SECT,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R4\n\n* ----------------  Build data -------------------------------------- *\n\n         MVC   LMOD_IDRZ_DATE,IDZ_DATE\n         MVC   LMOD_IDRZ_ZAP_DATA,IDZ_ZAP_DATA\n         SR    R14,R14\n         ICM   R14,3,IDZ_RESIDENT_CHARS\n         BZ    IDRZ0040\n         CH    R14,=Y(L'LMOD_IDRZ_RESIDENT)\n         BL    IDRZ0030\n         LH    R14,=Y(L'LMOD_IDRZ_RESIDENT)\nIDRZ0030 DS    0H\n         BCTR  R14,0\n         ICM   R15,15,IDZ_RESIDENT_PTR\n         EX    R14,RESIDENT_MVC\n\n* ----------------  Store record just built ------------------------- *\nIDRZ0040 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         ITRACE ID=STORE,                                              +\n               RDATA1=R1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    IDRZ0050\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0040\n\n* ----------------  Locate next record in buffer -------------------- *\n         A     R7,IDZH_ENTRY_LENG               PLUS LENGTH\n         BCT   R4,IDRZ0020                      LOOP\n         CLC   DXD_REASON_CODE,X_83000800       MORE DATA?\n         BNE   IDRZ0000                         YES\n         ITRACE ID=DONE\n         B     IDRZ0060\n\n* ------------------------------------------------------------------- *\nIDRZ0050 DS    0H\n         ITRACE ID=FULL\n         L     R1,DSPCREQ_RECORD_NBR\n         BCTR  R1,0\n         ST    R1,DSPCREQ_RECORD_NBR\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\nIDRZ0060 DS    0H\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRESIDENT_MVC   MVC   LMOD_IDRZ_RESIDENT(0),0(R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(20),INFO_GET_IDRZ\n         MVC   COMM_INFO_02,DXD_RETURN_CODE\n         MVC   COMM_INFO_03,DXD_REASON_CODE\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         TM    DXD_FLAGS,$FLAGS_DISPLAYED\n         BO    ERR0030\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     EXIT0000\nERR0100  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=IDRZ,                                              +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n               IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L      EQU     *-IEWBIND_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC   Q(DXDIDRZ)\n\nF1                   DC   F'1'\nF4                   DC   F'4'\nF8                   DC   F'8'\nB_IDRZ               DC   H'6',C'B_IDRZ'\nX_83000800           DC   X'83000800'\nX_83000801           DC   X'83000801'\nINFO_GET_IDRZ        DC   CL20'GET IDRZ info'\nIDRZEND              EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDIDRZ              DSECT\n                     COPY  DXDPREF\n\nDXD_IEWBIND          DS    0F,(IEWBIND_L)X\n\nDXD_RETURN_CODE      DS    XL4            RETURN CODE\nDXD_REASON_CODE      DS    XL4            REASON CODE\n\nDXD_IDRZ_BUFFER      DS    A\n\nDXD_IDRZ_RETURNED    DS    F\nDXD_IDRZ_CURSOR      DS    F\n\nDXD_FLAGS            DS    X\n$FLAGS_DISPLAYED     EQU   X'80'            SOME DATA DISPLAYED\n\n                     DSPCREQ  DSECT=NO\n                     COPY  IDRZDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      LMODIDRZ\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMODMAP": {"ttr": 4619, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00)\\x01\\t!\\x0f\\x01\\t6/\\x15%\\x01+\\x01(\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:25:29", "lines": 299, "newlines": 296, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: LMODMAP                                               *\n*                                                                     *\n*  Obtain/store data for LMOD MAP (or LMOD MAP detail)                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMODMAP  CSECT\nLMODMAP  AMODE 31\nLMODMAP  RMODE ANY\n         USING LMODMAP,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'LMODMAP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(MAPEND-LMODMAP)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         USING LMODMAP,R10,R9\n         DROP  R15\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDMAP,R13                     DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R5,COMM_NEW_SESSION\nNEW      USING SESSION,R5\n         MVC   COMM_MSG_CSECT,MODID\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         L     R6,COMM_OSSPFD\n         USING OSSPFD,R6\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         MVI   DXD_FLAGS,0\n         LA    R1,NEW.DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n* ------------------------------------------------------------------- *\n*        Obtain and initialize ESD buffer                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_BUF\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=MAP\n         ST    R8,DXD_MAP_BUFFER\n         ITRACE ID=INIT_BUF,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=MAP\n* ------------------------------------------------------------------- *\n*        Store the info for the specified section                     *\n* ------------------------------------------------------------------- *\n         LA    R1,LMOD_MAP_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,LMOD_MAP_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         XC    DXD_MAP_CURSOR,DXD_MAP_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Store the MAP info                                              *\n*                                                                     *\n*     R8 IS THE MAP HEADER (MAPH) BASE                                *\n*     R7 IS THE ESD ENTRY  (MAP_ENTRY) BASE                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAP0000  DS    0H\n         ITRACE ID=GETD_MAP,                                           +\n               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +\n               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8\n         L     R8,DXD_MAP_BUFFER\n         LA    R7,MAPH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +\n               CLASS=B_MAP,                                            +\n               SECTION=DUMMY_SECTION,                                  +\n               AREA=IEWBMAP,                                           +\n               CURSOR=DXD_MAP_CURSOR,                                  +\n               COUNT=DXD_SECTIONS_RETURNED,                            +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010                        SERIOUS PROBLEM\n         BE    ERR0030                        NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    MAP0010\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    MAP0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nMAP0010  DS    0H\n         ICM   R4,15,DXD_SECTIONS_RETURNED\n         BZ    ERR0020\n         OI    DXD_FLAGS,$FLAGS_DISPLAYED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAP0020  DS    0H\n         ITRACE ID=BLD_SECT,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R4\n\n         MVC   LMOD_MAP_NEXT,MAP_NEXT\n         MVC   LMOD_MAP_TYPE,MAP_TYPE\n         MVC   LMOD_MAP_FLAGS,MAP_FLAGS\n         MVC   LMOD_MAP_NAME,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,MAP_NAME_CHARS\n         BZ    MAP0040\n         CH    R14,=Y(L'LMOD_MAP_NAME)\n         BL    MAP0030\n         LH    R14,=Y(L'LMOD_MAP_NAME)\nMAP0030  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,MAP_NAME_PTR\n         EX    R14,NAME_MVC\nMAP0040  DS    0H\n         MVC   LMOD_MAP_OFFSET,MAP_OFFSET\n         MVC   LMOD_MAP_QUANTITY,MAP_QUANTITY\n         MVC   LMOD_MAP_NAME_SPACE,MAP_NAME_SPACE\n         MVC   LMOD_MAP_RECFM,MAP_RECORD_FMT\n\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         ITRACE ID=STORE,                                              +\n               RDATA1=R1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    MAP0050\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0040\n\n         A     R7,MAPH_ENTRY_LENG\n         BCT   R4,MAP0020\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   MAP0000\n         ITRACE ID=DONE\n         B     MAP0060\nMAP0050  DS    0H\n         ITRACE ID=FULL\n         L     R1,DSPCREQ_RECORD_NBR\n         BCTR  R1,0\n         ST    R1,DSPCREQ_RECORD_NBR\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\nMAP0060  DS    0H\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(20),INFO_GET_ESD\n         MVC   COMM_INFO_02,DXD_RETURN_CODE\n         MVC   COMM_INFO_03,DXD_REASON_CODE\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         TM    DXD_FLAGS,$FLAGS_DISPLAYED\n         BNO   ERR0030\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         ITRACE ID=ERR0040\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         DC    H'0'\n         B     EXIT0000\nERR0100  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNAME_MVC       MVC   LMOD_MAP_NAME(0),0(R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE R14\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=MAP,                                               +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n               IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L      EQU     *-IEWBIND_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC   Q(DXDMAP)\n\nF1                   DC   F'1'\nF4                   DC   F'4'\nF8                   DC   F'8'\nB_MAP                DC   H'5',C'B_MAP'\n\nDUMMY_SECTION        DC   H'8',X'00000001',C'    '\n\nX_83000800           DC   X'83000800'\nX_83000801           DC   X'83000801'\nINFO_GET_ESD         DC   CL20'Get MAP info'\n\n                     LTORG\n\nMAPEND               EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMAP                  DSECT\n                        COPY  DXDPREF\n\nDXD_IEWBIND             DS    0F,(IEWBIND_L)X\n\nDXD_RETURN_CODE         DS    XL4            RETURN CODE\nDXD_REASON_CODE         DS    XL4            REASON CODE\n\nDXD_MAP_BUFFER          DS    A\n\nDXD_SECTIONS_RETURNED   DS    F\nDXD_MAP_CURSOR          DS    F\n\nDXD_FLAGS               DS    X\n$FLAGS_DISPLAYED        EQU   X'80'         SOME DATA DISPLAYED\n\n                        COPY  MAPDATA\n                        DSPCREQ  DSECT=NO\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      REGEQU\n         END       LMODMAP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LMODRLD": {"ttr": 4868, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x003\\x01\\t!\\x0f\\x01\\t6/\\x15%\\x01^\\x01X\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:25:33", "lines": 350, "newlines": 344, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: LMODRLD                                               *\n*                                                                     *\n*  Process Relocation dictionary data (RLD)                           *\n*                                                                     *\n*  This program runs as a subroutine of OSLMOD.                       *\n*  It loads RLD (relocation dictionary data) into a data space.       *\n*  OSLMRLD is the complementary 'display'.                            *\n*                                                                     *\n*  At entry OSLMOD already has a binder \"dialog\" active.  The         *\n*  WORKMOD's \"intent\" is \"access\".  The dialog token is in            *\n*  SESS_DIALOG_TOKEN, the WORKMOD is in SESS_DIALOG_WORKMOD.          *\n*  The data space for storing the data has already been created.      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMODRLD  CSECT\nLMODRLD  AMODE 31\nLMODRLD  RMODE ANY\n         USING LMODRLD,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'LMODRLD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(RLDEND-LMODRLD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING LMODRLD,R10,R9\n         L     R6,COMM_OSSPFD\n         USING OSSPFD,R6\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDRLD,R13                     DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R5,COMM_NEW_SESSION\nNEW      USING SESSION,R5\n         OC    NEW.DATASPACE_1_LAST_RECORD,NEW.DATASPACE_1_LAST_RECORD\n         BZ    INIT0010\n         ITRACE ID=NOT_ZERO\n         DC    H'0'\nINIT0010 DS    0H\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         MVI   DXD_FLAGS,0\n         LA    R1,NEW.DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n* ------------------------------------------------------------------- *\n*        Obtain and initialize RLD buffer                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=RLD\n         ST    R8,DXD_RLD_BUFFER\n         ITRACE ID=INIT_RLD,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=RLD\n* ------------------------------------------------------------------- *\n*        Store the info for the specified section                     *\n* ------------------------------------------------------------------- *\n         LA    R1,LMOD_RLD_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,LMOD_RLD_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         XC    DXD_RLD_CURSOR,DXD_RLD_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Store the RLD info                                              *\n*                                                                     *\n*     R8 IS THE RLD HEADER (RLDH) BASE                                *\n*     R7 IS THE RLD ENTRY  (RLD_ENTRY) BASE                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRLD0000  DS    0H\n         ITRACE ID=GETD_RLD,                                           +\n               DATA1=NEW.SESS_DIALOG_SECTION_LENGTH+0,                 +\n               DATA2=NEW.SESS_DIALOG_SECTION_LENGTH+8\n         L     R8,DXD_RLD_BUFFER\n         LA    R7,RLDH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=NEW.SESS_DIALOG_WORKMOD,                        +\n               CLASS=B_RLD,                                            +\n               SECTION=NEW.SESS_DIALOG_SECTION_LENGTH,                 +\n               AREA=IEWBRLD,                                           +\n               CURSOR=DXD_RLD_CURSOR,                                  +\n               COUNT=DXD_RLD_RETURNED,                                 +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                        NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    RLD0020\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    RLD0020\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nRLD0020  DS    0H\n         ICM   R4,15,DXD_RLD_RETURNED\n         BZ    ERR0020\n         OI    DXD_FLAGS,$FLAGS_DISPLAYED\nRLD0030  DS    0H\n         ITRACE ID=BLD_SECT,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R4\n\n         MVC   LMOD_RLD_TYPE,RLD_TYPE\n         MVC   LMOD_RLD_STATUS,RLD_STATUS\n         MVC   LMOD_RLD_RESIDENT,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,RLD_RESIDENT_CHARS\n         BZ    RLD0050\n         CH    R14,=Y(L'LMOD_RLD_RESIDENT)\n         BL    RLD0040\n         LH    R14,=Y(L'LMOD_RLD_RESIDENT)\nRLD0040  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,RLD_RESIDENT_PTR\n         EX    R14,RESIDENT_MVC\nRLD0050  DS    0H\n         MVC   LMOD_RLD_ADCON_LENGTH,RLD_ADCON_LENG\n         MVC   LMOD_RLD_RESIDENT_CLASS,COMM_BLANKS\n         ICM   R14,3,RLD_RES_CLASS_CHARS\n         BZ    RLD0070\n         CH    R14,=Y(L'LMOD_RLD_RESIDENT_CLASS)\n         BL    RLD0060\n         LH    R14,=Y(L'LMOD_RLD_RESIDENT_CLASS)\nRLD0060  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,RLD_RES_CLASS_PTR\n         EX    R14,RES_CLASS_MVC\nRLD0070  DS    0H\n         MVC   LMOD_RLD_RESIDENT_OFFSET,RLD_RES_OFFSET\n         MVC   LMOD_RLD_CLASS_OFFSET,RLD_CLASS_OFFSET\n         MVC   LMOD_RLD_BIND_ATTR,RLD_BIND_ATTR\n         MVC   LMOD_RLD_XATTR_CLASS,COMM_BLANKS\n         ICM   R14,3,RLD_XATTR_CLASS_CHARS\n         BZ    RLD0090\n         CH    R14,=Y(L'LMOD_RLD_XATTR_CLASS)\n         BL    RLD0080\n         LH    R14,=Y(L'LMOD_RLD_XATTR_CLASS)\nRLD0080  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,RLD_XATTR_CLASS_PTR\n         EX    R14,XATTR_CLASS_MVC\nRLD0090  DS    0H\n         MVC   LMOD_RLD_XATTR_OFFSET,RLD_XATTR_OFFSET\n         MVC   LMOD_RLD_TARGET,COMM_BLANKS\n         ICM   R14,3,RLD_TARGET_CHARS\n         BZ    RLD0110\n         CH    R14,=Y(L'LMOD_RLD_TARGET)\n         BL    RLD0100\n         LH    R14,=Y(L'LMOD_RLD_TARGET)\nRLD0100  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,RLD_TARGET_PTR\n         EX    R14,TARGET_MVC\nRLD0110  DS    0H\n         MVC   LMOD_RLD_RESIDENT_PART,COMM_BLANKS\n         ICM   R14,3,RLD_RES_PART_LL\n         BZ    RLD0130\n         CH    R14,=Y(L'LMOD_RLD_RESIDENT_PART)\n         BL    RLD0120\n         LH    R14,=Y(L'LMOD_RLD_RESIDENT_PART)\nRLD0120  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,RLD_RES_PART_PTR\n         EX    R14,RESIDENT_PART_MVC\nRLD0130  DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         ITRACE ID=STORE,                                              +\n               RDATA1=R1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    RLD0140\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0040\n         A     R7,RLDH_ENTRY_LENG\n         BCT   R4,RLD0030\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   RLD0000\n         ITRACE ID=DONE\n         B     RLD0150\nRLD0140  DS    0H\n         ITRACE ID=FULL\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         ICM   R1,15,DSPCREQ_RECORD_NBR\n         BCTR  R1,0\n         STCM  R1,15,DSPCREQ_RECORD_NBR\nRLD0150  DS    0H\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(20),INFO_GET_RLD\n         MVC   COMM_INFO_02,DXD_RETURN_CODE\n         MVC   COMM_INFO_03,DXD_REASON_CODE\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         TM    DXD_FLAGS,$FLAGS_DISPLAYED\n         BO    ERR0030\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,NEW.SESS_DIALOG_SECTION\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\nERR0100  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRESIDENT_MVC          MVC  LMOD_RLD_RESIDENT(0),0(R15)\nRES_CLASS_MVC         MVC  LMOD_RLD_RESIDENT_CLASS(0),0(R15)\nXATTR_CLASS_MVC       MVC  LMOD_RLD_XATTR_CLASS(0),0(R15)\nTARGET_MVC            MVC  LMOD_RLD_TARGET(0),0(R15)\nRESIDENT_PART_MVC     MVC  LMOD_RLD_RESIDENT_PART(0),0(R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=NEW.DATASPACE_1_LAST_RECORD\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         LM    R14,R12,12(R13)                RESTORE R14\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=RLD,                                               +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n               IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L      EQU     *-IEWBIND_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC   Q(DXDRLD)\n\nF1                DC   F'1'\nF4                DC   F'4'\nF8                DC   F'8'\nB_RLD             DC   H'5',C'B_RLD'\nX_83000800        DC   X'83000800'\nX_83000801        DC   X'83000801'\nINFO_GET_RLD      DC   CL20'GET RLD info'\n\nRLDEND            EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDRLD            DSECT\n                  COPY    DXDPREF\n\nDXD_IEWBIND       DS      0F,(IEWBIND_L)X\n\nDXD_RETURN_CODE   DS      XL4            RETURN CODE\nDXD_REASON_CODE   DS      XL4            REASON CODE\n\nDXD_RLD_BUFFER    DS      A\n\nDXD_RLD_RETURNED  DS      F\nDXD_RLD_CURSOR    DS      F\n\nDXD_FLAGS         DS      X\n$FLAGS_DISPLAYED  EQU     X'80'          SOME DATA DISPLAYED\n\n                  COPY    RLDDATA\n                  DSPCREQ DSECT=NO\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      LMODRLD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSABEND": {"ttr": 9733, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x10\\x01\\t!\\x0f\\x01\\x10\\x01?\\x13)\\x01\\x0f\\x01\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-13T13:29:10", "lines": 271, "newlines": 274, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          MACRO\n          ABMSG &S,&U,&R,&M\n          DC    XL2'&S'\n          DC    XL2'&U'\n          DC    XL2'&R'\n          DC    CL80&M\n          MEND\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSABEND                                               *\n*                                                                     *\n*  Interpret ABEND codes                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSABEND  CSECT\nOSABEND  AMODE 31\nOSABEND  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSABEND,R15\n         B     INIT0000\nMODID    DC    CL8'OSABEND'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(ABENDEND-OSABEND)\nINIT0000 DS    0H\n         USING OSCOMM,R12                        DEFINE COMMON BASE\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           COPY ENTRY POINT\n         DROP  R15\n         USING OSABEND,R10                       DEFINE BASE\n         L     R15,COMM_DXD\n         A     R15,DXD_START\n         ST    R13,4(,R15)                       SAVE R13\n         ST    R15,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R15                           COPY WORK AREA ADDRESS\n         USING WKABEND,R13                       DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(SESS_SYSTEM_CODE,6)\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABND0000 DS    0H\n         MVC   COMM_MSG_CSECT,MODID\n         OC    SESS_SYSTEM_CODE,SESS_SYSTEM_CODE  SYSTEM CODE?\n         BZ    ABND0010                         MUST BE USER CODE\n         MVI   COMM_MSG_ID+1,1                  SET MSG ID\n         B     ABND0020\nABND0010 DS    0H\n         MVI   COMM_MSG_ID+1,2                  SET MSG ID\nABND0020 DS    0H\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                          BUILD MESSAGE\n* ------------------------------------------------------------------- *\n*        Find ABEND message                                           *\n* ------------------------------------------------------------------- *\n         LA    R1,ABEND_TABLE\n         USING ABEND_DSECT,R1\nABND0030 DS    0H\n         CLC   ABEND_CODE,SESS_SYSTEM_CODE      ABEND FOUND?\n         BNE   ABND0040                         NO\n         CLC   ABEND_R15,H0                     REASON CODE ALSO?\n         BZ    ABND0050                         NO.. WE'RE GOOD\n         CLC   ABEND_R15,SESS_ABEND_R15         REASONS MATCH?\n         B     ABND0050                         YES\nABND0040 DS    0H\n         CLI   ABEND_CODE,X'FF'                 END OF TABLE?\n         BE    ABND0060\n         LA    R1,ABEND_DSECT_L(,R1)            NEXT CODE\n         B     ABND0030                         LOOP\nABND0050 DS    0H\n         MVC   COMM_MSG_2,ABEND_MSG             COPY MESSAGE\n         DROP  R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABND0060 DS    0H\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN   SET FUNCTION CODE\n         LA    R1,PANEL_NAME\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          OBTAIN VDATA\n         ST    R0,WK_VDATA_LENGTH               SAVE VDATA LENGTH\n         ST    R1,WK_VDATA_ADDR                 SAVE VDATA ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE   SET FUNCTION CODE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          VDEFINE VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display trace entries                                        *\n*                                                                     *\n*        The number of entries displayable can vary from one display  *\n*        device type to another.  The SPF PQUERY service will have    *\n*        returned the number of rows (SPF_VDEPTH) and columns         *\n*        (SPF_VWIDTH) available.  The trace entries shown will be     *\n*        displayed in cronological order with last entry at the       *\n*        bottom of the display.  The trace table is a 'wrap around'   *\n*        type.  Therefore the displayble entries may start near the   *\n*        \"bottom\" of the table and \"wrap\" back to the \"top\".          *\n*                                                                     *\n*        So, the first thing to do is determine which entries can     *\n*        be displayed.                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,WK_VDATA_ADDR                 VDATA STORAGE ADDR\n         A     R8,WK_VDATA_LENGTH               PLUS LENGTH\n         S     R8,SPF_VWIDTH                    ADDR OF LAST LINE\n         L     R7,SPF_VDEPTH\n         L     R2,COMM_TRACE_CURR               CURRENT TRACE\nABND0070 DS    0H\n         ST    R2,0(,R8)\n         C     R2,COMM_TRACE_1ST                AT FIRST ENTRY?\n         BE    ABND0080                         YES\n         SH    R2,=Y(TR_ENTRY_L)                MINUS 1 ENTRY\n         B     ABND0090\nABND0080 DS    0H\n         L     R2,COMM_TRACE_LAST              'WRAP' TO BOTTOM\nABND0090 DS    0H\n         S     R8,SPF_VWIDTH                    PREVIOUS LINE\n         BCT   R7,ABND0070                      LOOP\n* ------------------------------------------------------------------- *\n*        Display the trace entries                                    *\n* ------------------------------------------------------------------- *\n         L     R8,WK_VDATA_ADDR                 VDATA ADDRESS\n         L     R7,SPF_VDEPTH                    LINES AVAILABLE\nABND0100 DS    0H\n         L     R2,0(,R8)                        SAVED ADDRESS\nABNDTR   USING TR_ENTRY,R2\n         MVC   0(MSG_01_L,R8),MSG_01            INITIALIZE MSG\n         USING MSG_01,R8\n         MVC   MSG_01_CSECT,ABNDTR.TR_CSECT     COPY CSECT NAME\n         MVC   MSG_01_ID,ABNDTR.TR_ID           COPY TRACE ID\n         MVC   MSG_01_DATA1,ABNDTR.TR_DATA1     COPY DATA 1\n         MVC   MSG_01_DATA2,ABNDTR.TR_DATA2     COPY DATA 2\n         UNPK  MSG_01_HEX1+0(9),ABNDTR.TR_DATA1+0(5) UNPACK DATA1\n         UNPK  MSG_01_HEX1+8(9),ABNDTR.TR_DATA1+4(5) UNPACK DATA1\n         TR    MSG_01_HEX1,COMM_HEXCHAR\n         MVI   MSG_01_HEX1+16,C' '\n         UNPK  MSG_01_HEX2+0(9),ABNDTR.TR_DATA2+0(5) UNPACK DATA2\n         UNPK  MSG_01_HEX2+8(9),ABNDTR.TR_DATA2+4(5) UNPACK DATA2\n         TR    MSG_01_HEX2,COMM_HEXCHAR\n         MVI   MSG_01_HEX2+16,C' '\n         DROP  R8,ABNDTR\n         A     R8,SPF_VWIDTH                    NEXT LINE\n         BCT   R7,ABND0100                      LOOP\n\n         ITRACE ID=DISPABND\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         LA    R1,DISPLAY\n         ST    R1,WK_SPF_1\n         LA    R1,PANEL_NAME\n         ST    R1,WK_SPF_2\n         OI    WK_SPF_2,X'80'\n         LA    R1,WK_SPF_PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                          DISPLAY DATA\n\n         ITRACE ID=ABEND_99\n         ABEND 99,DUMP,,USER\n\n         L     R0,WK_VDATA_LENGTH\n         L     R1,WK_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN  SET FUNCTION CODE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT0000\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START       DC    Q(WKABEND)\n\nH0              DC    H'0'\n\nDISPLAY         DC    CL8'DISPLAY'\nPANEL_NAME      DC    CL8'OSABEND'\n\nMSG_01          DS    0C\nMSG_01_ATTR     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_CSECT    DC    CL8' '\n                DC    CL2' '\nMSG_01_ID       DC    CL8' '\n                DC    CL2' '\nMSG_01_DATA1    DC    CL8' '\n                DC    CL2' '\nMSG_01_DATA2    DC    CL8' '\n                DC    CL2' '\nMSG_01_HEX1     DC    CL16' '\n                DC    CL2' '\nMSG_01_HEX2     DC    CL16' '\n                DC    C' '\nMSG_01_L        EQU   *-MSG_01\n\n                LTORG\n\nABEND_TABLE     DS    0C\n                ABMSG 0C1,0,0,'OPERATION EXCEPTION'\n                ABMSG 0C4,0,0,'PROTECTION EXCEPTION'\n                ABMSG 0C7,0,0,'DATA EXCEPTION'\n                ABMSG 213,0,30,'Data set is already in use'\n                DC    X'FF'\n\nABENDEND        EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWKABEND            DSECT\n                   COPY     DXDPREF\nWK_SPF_PARMS       DS       0A\nWK_SPF_1           DS       A\nWK_SPF_2           DS       A\nWK_VDATA_ADDR      DS       A\nWK_VDATA_LENGTH    DS       F\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                   COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                   SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                   BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND_DSECT        DSECT\nABEND_CODE         DS      0XL4             ABEND CODE(S)\nABEND_SYSTEM_CODE  DS       XL2             .. SYSTEM CODE\nABEND_USER_CODE    DS       XL2             .. USER CODE\nABEND_R15          DS       XL2             .. R15 AT TIME OF ABEND\nABEND_MSG          DS       CL80\nABEND_DSECT_L      EQU      *-ABEND_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                   OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                   COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                   COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                  EQUATES                                            *\n* ------------------------------------------------------------------- *\n                   COPY     REGEQU\n                   END      OSABEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSACT": {"ttr": 4876, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00T\\x01\\t!\\x0f\\x01\\t6/\\x15%\\x02!\\x02!\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:25:54", "lines": 545, "newlines": 545, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSACT                                                 *\n*                                                                     *\n*                                                                     *\n*  Displays active z/OS regions.                                      *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSACT    CSECT\nOSACT    AMODE 31\nOSACT    RMODE ANY\n         USING OSCOMM,R12\n         USING OSACT,R15\n         B     INIT0000\nMODID    DC    CL8'OSACT'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSACTEND-OSACT)\nINIT0000 DS    0H\n         USING OSCOMM,R12                       DEFINE COMMON AREA BASE\n         USING SESSION,R11                      DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING OSACT,R10                        DEFINE BASES\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*        Determine if this is INITIAL invocation                      *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\n         OC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         BNZ   ERR0020\n         LA    R0,OSACT_DXD_L\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSACT_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         ST    R13,4(,R2)                        SAVE R13\n         ST    R2,8(,R13)                        CHAIN SAVE AREA\n         LR    R13,R2                            COPY WORK AREA ADDRESS\n         USING OSACT_WORK,R13                    DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         XC    DXD_RC,DXD_RC\n         MVC   DXD_PANEL,ACT_PANEL               PANEL NAME\n         LA    R1,DXD_PANEL                      PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN    SET VDATA FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                           GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA_LENGTH               SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA_ADDR                 SAVE VDATA ADDR\n         ITRACE ID=VDATA,                                              +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         MVC   DXD_VDEPTH,SPF_VDEPTH             SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH             SAVE WIDTH\n         XC    DXD_CURSOR,DXD_CURSOR             INITIALIZE CURSOR\n         L     R1,CVTPTR                         CVT ADDRESS\n         ITRACE ID=CVT,                                                +\n               RDATA1=R1\n         USING CVT,R1                            DEFINE BASE\n         L     R1,CVTASVT                        ASVT ADDRESS\n         DROP  R1\n         USING ASVT,R1\n         ITRACE ID=ASVT,                                               +\n               RDATA1=R1\n         LA    R2,ASVTFRST                       FIRST ASCB ADDRESS\n         ST    R2,DXD_FIRST_ASCB_ADDR            SET FIRST\n         ST    R2,DXD_CURR_ASVT\n         L     R3,ASVTMAXU                       NBR OF ADDR SPACES\n         SLL   R3,2                              MULTIPLY BY 4\n         AR    R3,R2                             PLUS ADDR OF FIRST\n         ST    R3,DXD_LAST_ASCB_ADDR             SAVE ADDR OF LAST\n         ITRACE ID=1ST_LAST,                                           +\n               DATA1=(DXD_FIRST_ASCB_ADDR,4),                          +\n               DATA2=(DXD_LAST_ASCB_ADDR,4)\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Re-establish save area and determine function                *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0020\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2,                                             +\n               DATA1=(SESS_FORMAT_FLAGS,1)\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL  PROCESS CONTROL STMT?\n         BE    CNTL0000                           YES\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP  CLEAN UP?\n         BE    CLEAN000                           YES\n         B     MAIN0000                           OTHERWISE FORMAT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        PROCESS CONTROL STATEMENTS                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCNTL0000 DS    0H\n         ITRACE ID=CNTLSTMT,                                           +\n               RDATA1=R1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Format data                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=FORMAT,                                             +\n               DATA1=(DXD_CURR_ASVT,4)\n* ------------------------------------------------------------------- *\n*         Initialize the VDATA buffer                                 *\n* ------------------------------------------------------------------- *\n         L     R0,DXD_VDATA_ADDR                BUFFER ADDRESS\n         L     R1,DXD_VDATA_LENGTH              BUFFER SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_VDATA_ADDR                BUFFER ADDRESS\nV        USING MSG01,R8\n         L     R7,DXD_VDEPTH                    NUMBER OF LINES\n         L     R6,DXD_CURR_ASVT                 FIRST ASCB TO DISPLAY\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Build the data for the dynamic area here.                      *\n*                                                                     *\n*      R12 is address of OSCOMM                                       *\n*      R11 is address of SESSION                                      *\n*      R10 is base of this CSECT                                      *\n*      R9  is address of SPFDATA                                      *\n*      R8  is address of current line in VDATA                        *\n*      R7  is number of lines remaining in vdata                      *\n*      R6  IS current ASVT slot address                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=ASVTASCB,                                           +\n               RDATA1=R6,                                              +\n               DATA2=(0(R6),4)\n         ICM   R5,15,0(R6)                      ASCB ADDRESS\n         USING ASCB,R5\n         BM    MAIN0120                         NEGATIVE.. NOT IN USE\n         L     R2,ASCBOUCB                      OUCB ADDRESS\n         USING OUCB,R2\n         MVC   V.MSG01_USER,OUCBUSRD            COPY USER ID\n         ICM   R4,15,ASCBJBNI                   JOB NAME?\n         BZ    MAIN0020                         NO\n         MVC   V.MSG01_NAME,0(R4)               COPY JOB NAME\n         B     MAIN0080\nMAIN0020 DS    0H\n         ICM   R4,15,ASCBJBNS                   TRY STC NAME\n         BZ    MAIN0120                         VERY STRANGE\n         MVC   V.MSG01_NAME,0(R4)               COPY JOB OR STC NAME\n         CLI   0(R4),C'*'                       MASTER SCHEDULER?\n         BE    MAIN0100                         YES\n         S     R4,=A(CHNAME-CSCX)               ADDRESS OF CSCX\n         USING CSCX,R4\n         L     R3,CHCSCBP                       CSCB ADDRESS\n         USING CSCB,R3\n         TM    OUCBYFL,OUCBSTT                  STARTED TASK?\n         BO    MAIN0040                         YES\n         TM    OUCBYFL,OUCBLOG                  TSO USER?\n         BO    MAIN0050\n         MVI   V.MSG01_TYPE,C'M'                A/S IS A MOUNT\n         B     MAIN0060\nMAIN0040 DS    0H\n         MVI   V.MSG01_TYPE,C'S'                A/S IS AN STC\n         B     MAIN0060\nMAIN0050 DS    0H\n         MVI   V.MSG01_TYPE,C'T'                TSO USER\nMAIN0060 DS    0H\n         LTR   R3,R3                            CSCB PRESENT?\n         BZ    MAIN0100                         NO\nMAIN0070 DS    0H\n         CLI   CHKEY,C' '                       STEP NAME PRESENT?\n         BNH   MAIN0090                         NO\n         MVC   V.MSG01_STEP,CHKEY               COPY STEP NAME\n         TM    OUCBYFL,OUCBLOG                  TSO USER?\n         BNO   MAIN0090                         NO\n         CLI   CHCLS,C' '                       PROC NAME PRESENT?\n         BNH   MAIN0100                         NO\n         MVC   V.MSG01_PROC,CHCLS               COPY PROC NAME\n         B     MAIN0100\nMAIN0080 DS    0H\n         MVI   V.MSG01_TYPE,C'B'                A/S IS A BATCH JOB\n         S     R4,=A(CHNAME-CSCX)               ADDRESS OF CSCX\n         L     R3,CHCSCBP                       CSCB ADDRESS\n         CLI   CHSTEP,C' '                      STEP NAME PRESENT?\n         BNH   MAIN0090                         NO\n         MVC   V.MSG01_STEP,CHSTEP              COPY STEP NAME\nMAIN0090 DS    0H\n         CLI   CHPROCSN,C' '                    PROC STEP NAME PRESENT?\n         BNH   MAIN0100                         NO\n         MVC   V.MSG01_PROC,CHPROCSN            COPY PROC STEP NAME\nMAIN0100 DS    0H\n         LM    R0,R1,ASCBEJST\n         LM    R14,R15,ASCBSRBT\n         SRDL  R0,12\n         SRDL  R14,12\n         AR    R1,R15\n         SR    R0,R0                            CLEAR R0\n         D     R0,F10000                        COMPUTE 100THS\n         SR    R0,R0\n         D     R0,F100                          COMPUTE WHOLE SECONDS\n         CVD   R0,DXD_DWORD                     CONVERT TO DECIMAL\n         MVC   DXD_EDWORD,=X'F0202020'\n         ED    DXD_EDWORD,DXD_DWORD+6           EDIT HUNDREDTHS\n         MVC   V.MSG01_HUNDREDTHS,DXD_EDWORD+2  COPY HUNDREDTHS\n         MVI   V.MSG01_DECIMAL,C'.'             INSERT decimal\n         SR    R0,R0                            CLEAR REMAINDER\n         D     R0,F60                           COMPUTE MINUTES\n         CVD   R0,DXD_DWORD\n         MVC   DXD_EDWORD,=X'F0202020'          INITIALIZE\n         ED    DXD_EDWORD,DXD_DWORD+6           EDIT SECONDS\n         MVC   V.MSG01_SECONDS,DXD_EDWORD+2     COPY MINUTES\n         MVI   V.MSG01_COLON2,C':'              INSERT COLON\n         SR    R0,R0\n         D     R0,F60                           COMPUTE HOURS\n         CVD   R0,DXD_DWORD                     CONVERT TO DECIMAL\n         MVC   DXD_EDWORD,=X'F0202020'          INITIALIZE\n         ED    DXD_EDWORD,DXD_DWORD+6           EDIT MINUTES\n         MVC   V.MSG01_MINUTES,DXD_EDWORD+2     COPY MINUTES\n         MVI   V.MSG01_COLON1,C':'              INSERT COLON\n         CVD   R1,DXD_DWORD                     CONVERT TO DECIMAL\n         MVC   DXD_EDWORD,=X'F0202020'          INITIALIZE\n         ED    DXD_EDWORD,DXD_DWORD+6           EDIT HOURS\n         MVC   V.MSG01_HOURS,DXD_EDWORD+2       COPY HOURS\n         L     R1,ASCBIOSC                      NBR OF I/O'S\n         CVD   R1,DXD_DWORD                     CONVERT TO DECIMAL\n         MVC   V.MSG01_IO,=X'402020206B2020206B202120'\n         ED    V.MSG01_IO,DXD_DWORD+3           EDIT I/O'S\n         ICM   R1,15,ASCBASSB                   ASSB PRESENT?\n         BZ    MAIN0110                         NO\n         USING ASSB,R1\n         ICM   R1,15,ASSBJSAB                   JSCB PRESENT?\n         BZ    MAIN0110\n         USING IAZJSAB,R1\n         MVC   V.MSG01_JOB_NBR,JSABJBID+2       COPY JOB NUMBER\n         DROP  R1\nMAIN0110 DS    0H\n         A     R8,DXD_VWIDTH                    NEXT LINE\n         BCT   R7,MAIN0120\n         B     MAIN0200                         DISPLAY FULL\nMAIN0120 DS    0H\n         C     R6,DXD_LAST_ASCB_ADDR            AT END OF ASVT?\n         BE    MAIN0200                         YES\n         LA    R6,4(,R6)                        NEXT ASVT SLOT\n         B     MAIN0010                         PROCESS NEXT A/S\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display the panel                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               DATA1=DXD_PANEL,                                        +\n               RDATA2=R15\n         MVC   SESS_DISP_PANEL,DXD_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         MVC   SESS_DISP_CURSOR,DXD_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   EXIT0000                         YES\n         OC    SESS_RC,SESS_RC                  RC=0\n         BZ    MAIN0300                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for command(s)                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        No command has been recognized                               *\n*        Check for scroll commands                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         MVC   SESS_VERTICAL_SCROLL,SPF_ZSCROLLN\n         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    MAIN0390                         YES\n         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?\n         BE    MAIN0360                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    MAIN0355                         YES\n         CLI   SPF_ZVERB,C'U'                   SCROLL UP?\n         BE    MAIN0330                         YES\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0355                         YES\n         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL\n         L     R6,DXD_CURR_ASVT                 CURRENT ASVT\nMAIN0340 DS    0H\n         C     R6,DXD_FIRST_ASCB_ADDR           AT FIRST ASVT SLOT?\n         BE    MAIN0000                         YES.. GOTTA STOP HERE\n         TM    0(R6),X'80'                      IN USE?\n         BO    MAIN0350                         NO\n         SH    R6,H4                            UP 1 IN ASVT\n         ST    R6,DXD_CURR_ASVT                 SAVE ADDRESS\n         BCT   R1,MAIN0340                      LOOP\n         B     MAIN0000                         RE-BUILD DISPLAY\nMAIN0350 DS    0H\n         SH    R6,H4                            SKIP THIS A/S\n         B     MAIN0340\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0355 DS    0H\n         ITRACE ID=TOP\n         MVC   DXD_CURR_ASVT,DXD_FIRST_ASCB_ADDR\n         B     MAIN0000                         RE-BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0360 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0390                         YES\n         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL\n         L     R6,DXD_CURR_ASVT                 FIRST A/S DISPLAYED     D\nMAIN0370 DS    0H\n         ST    R6,DXD_CURR_ASVT                 SET FIRST TO DISPLAY\nMAIN0380 DS    0H\n         C     R6,DXD_LAST_ASCB_ADDR            AT LAST?\n         BE    MAIN0000                         YES.. REBUILD DISPLAY\n         AH    R6,H4                            NEXT IN ASVT\n         TM    0(R6),X'80'                      A/S IN USE?\n         BO    MAIN0380                         NO\n         BCT   R1,MAIN0370                      LOOP\n         B     MAIN0000                         REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0390 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         L     R6,DXD_LAST_ASCB_ADDR            LAST ASCB IN ASVT\n         L     R1,DXD_VDEPTH                    SCREEN DEPTH\nMAIN0400 DS    0H\n         ST    R6,DXD_CURR_ASVT                 SET FIRST TO DISPLAY\nMAIN0410 DS    0H\n         C     R6,DXD_FIRST_ASCB_ADDR           AT FIRST A/S?\n         BE    MAIN0000                         YES.. BUILD DISPLAY\n         SH    R6,H4                            PREVIOUS A/S IN ASVT\n         TM    0(R6),X'80'                      A/S IN USE?\n         BO    MAIN0410                         NO\n         BCT   R1,MAIN0400                      LOOP\n         B     MAIN0000                         REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE         SIGNAL MAINLINE\n         B     EXIT0000\nERR0020  DS    0H\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE         SIGNAL MAINLINE\n         DC    H'0'                                SHOULD NOT HAPPEN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR                VDATA GETMAINED?\n         BZ    CLEAN010                            NO\n         L     R0,DXD_VDATA_LENGTH                 VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                             FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSACT_DXD_L                      WORK AREA SIZE\n         LR    R1,R13                              COPY ADDRESS\n         L     R13,4(,R13)                         RESTORE R13\n         FREEMAIN RU,                              FREE WORK AREA      +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                          RETURN CODE\n         L     R13,4(,R13)                         RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                        RESTORE R14\n         LM    R0,R12,20(R13)                      RESTORE REGISTERS\n         BR    R14                                 RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 LTORG\n\nF60              DC    F'60'\nF100             DC    F'100'\nF10000           DC    F'10000'\n\nH4               DC    H'4'\n\nACT_PANEL        DC    CL8'OSACT'\n\nMSG01            DS    0C\nMSG01_ATTR       DC    AL1($SCREEN_ATTR_NORMAL)\nMSG01_JOB_NBR    DC    CL6' '\n                 DC    C' '\nMSG01_NAME       DC    CL8' '\n                 DC    C' '\nMSG01_STEP       DC    CL8' '\n                 DC    C' '\nMSG01_PROC       DC    CL8' '\n                 DC    C' '\nMSG01_PROCSTEP   DC    CL8' '\n                 DC    C' '\nMSG01_TYPE       DC    C' '\n                 DC    C' '\nMSG01_USER       DC    CL8' '\n                 DC    C' '\nMSG01_HOURS      DC    CL2' '\nMSG01_COLON1     DC    C' '\nMSG01_MINUTES    DC    CL2' '\nMSG01_COLON2     DC    C' '\nMSG01_SECONDS    DC    CL2' '\nMSG01_DECIMAL    DC    C' '\nMSG01_HUNDREDTHS DC    CL2' '\n                 DC    C' '\nMSG01_IO         DC    CL12' '\nMSG01_L          EQU   *-MSG01\nOSACTEND         EQU   *\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSACT_WORK          DSECT\n                    COPY     DXDPREF\n\nDXD_DWORD           DS       D\n\nDXD_PANEL           DS       CL8            PANEL NAME\nDXD_VDATA_ADDR      DS       A              VDATA BUFFER ADDRESS\nDXD_VDATA_LENGTH    DS       F              VDATA BUFFER LENGTH\nDXD_CURSOR          DS       F              CURSOR POSITION\n\nDXD_VWIDTH          DS       F              DYNAMIC AREA WIDTH\nDXD_VDEPTH          DS       F              DYNAMIC AREA DEPTH\n\nDXD_FIRST_ASCB_ADDR DS       A              FIRST SLOT IN ASVT\nDXD_LAST_ASCB_ADDR  DS       A              LAST SLOT IN ASVT\nDXD_CURR_ASVT       DS       A              CURRENT (1ST ON DISPLAY)\n\nDXD_RC              DS       H\n\nDXD_EDWORD          DC       CL4' '\nOSACT_DXD_L         EQU      *-OSACT_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY    DSECT\n         IBMMAC   CVT=YES,ASCB=YES\n         IHAASVT  DSECT=YES,LIST=NO\n         IRAOUCB\n         IHAASSB  LIST=NO\n         IAZJSAB  DSECT=YES,LIST=NO\n\nCSCB     DSECT\n         IEECHAIN INCCSCX=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSACT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSAPPEND": {"ttr": 16902, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00#\\x01\\t!\\x0f\\x01\\x10\\x02\\x1f\\x10G\\x01\\xb1\\x01\\x8e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-21T10:47:23", "lines": 433, "newlines": 398, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        Append members to a sequential file                          *\n*                                                                     *\n*       Each member may be preceded by up to 3 'separator' lines      *\n*                                                                     *\n*       Each member may be followed by up to 3 'separator' lines      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*     Variables available for customizing the separator lines:        *\n*                                                                     *\n*                                                                     *\n*      &DSN     data set name                                         *\n*      &MEMBER  member name                                           *\n*      &DATE1   date in 'Julian'   form (YYDDD)  (five digits)        *\n*      &DATE2   date in 'Julian'   form (YY.DDD) (six digits)         *\n*      &DATE3   date in MMDDYYYY   form (8 bytes)                     *\n*      &DATE4   date in MM/DD/YYYY form (10 bytes)                    *\n*      &DATE5   date in DDMMYYYY   form (8 bytes)                     *\n*      &DATE6   date in DD/MM/YYYY form (10 bytes)                    *\n*      &DATE7   date in YYYYMMDD   form (8 bytes)                     *\n*      &DATE8   date in YYYY/MM/DD form (10 bytes)                    *\n*      &SEQ     Sequence number (first file is 00001,                 *\n*                                second is 00002, etc)                *\n*      &TIME1   time in HH:MM:SS        (8 bytes)                     *\n*      &TIME2   time in HH:MM:SS:th     (11 bytes)                    *\n*      &RECORDS Number of records in last file appended               *\n*      &SIZE    Number of bytes in last file appended                 *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSAPPEND CSECT\nOSAPPEND AMODE 31\nOSAPPEND RMODE 24\n         USING OSCOMM,R12\n         USING OSAPPEND,R15\n         B     INIT0000\nMODID    DC    CL8'OSAPPEND'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(APPENDEND-OSAPPEND)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING SESSION,R11                    DEFINE SESSION BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSAPPEND,R10                   DEFINE BASE\n         LR    R9,R1\n         USING APPNDREQ,R9                    DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSAPPEND_WORK_L,                                     +\n               LOC=BELOW\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSAPPEND_WORK,R13              DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         L     R8,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R8\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9\n         CLI   APPNDREQ_FUNC,$APPNDREQ_OPEN\n         BE    OPEN0000                       YES\n         CLI   APPNDREQ_FUNC,$APPNDREQ_WRITE\n         BE    MAIN0000                       YES\n         CLI   APPNDREQ_FUNC,$APPNDREQ_CLOSE\n         BE    CLOSE000                       YES\n         DC    H'0',C'INVALID FUNCTION'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Allocate the output data set                                 *\n*                                                                     *\n*                                                                     *\n*     Note that the difference in OFFLOAD and APPEND is that for      *\n*     APPEND the output data set must already exist.                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPEN0000 DS    0H\n         ITRACE ID=OPEN\n         LA    R1,PANEL_NAME                  PANEL NAME\n         L     R15,COMM_V_OSOFILE             OSOFILE ENTRY POINT\n         BALR  R14,R15                        PROMPT FOR OUTPUT DATASET\n         LTR   R15,R15                        CONTINUE?\n         BNZ   ABORT000                       NO\n         XC    DAIRREQ(DAIRREQ_L),DAIRREQ\n         CLI   SPF_OUTPUT_DSN,X'7D'           QUOTED NAME?\n         BE    OPEN0010                       YES\n         MVC   DAIR_DSN,COMM_BLANKS           INITIALIZE TO BLANKS\n         LH    R2,COMM_USER_LENGTH            USER ID LENGTH\n         BCTR  R2,0                           MINUS 1 FOR EXECUTE\n         EX    R2,DSN_MVC1                    COPY USER ID\n         LA    R3,DAIR_DSN+1(R2)              END OF DSN\n         MVI   0(R3),C'.'                     INSERT DELIMITING PERIOD\n         LA    R4,L'DAIR_DSN-3                MAXIMUM LENGTH\n         SR    R4,R2                          MINUS USER ID LENGTH\n         BCTR  R4,0\n         EX    R4,DSN_MVC2                    COPY\n         B     OPEN0040\nOPEN0010 DS    0H\n         MVC   DAIR_DSN(L'DAIR_DSN-1),SPF_OUTPUT_DSN+1\n         LA    R14,DAIR_DSN+(L'DAIR_DSN-1)\n         LA    R15,L'DAIR_DSN                 LOOP LIMITER\nOPEN0020 DS    0H\n         CLI   0(R14),X'7D'                   ENDING QUOTE?\n         BE    OPEN0030                       YES\n         BCTR  R14,0\n         BCT   R15,OPEN0020\nOPEN0030 DS    0H\n         MVI   0(R14),C' '                    REMOVE QUOTE\n* ------------------------------------------------------------------- *\n*        Allocate output data set or member                           *\n* ------------------------------------------------------------------- *\nOPEN0040 DS    0H\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)\n         MVI   DAIR_OPTS,0                    SET OPTIONS\n         MVC   DAIR_MEMBER,COMM_BLANKS        COPY MEMBER NAME\n         MVC   DAIR_VOLSER,COMM_BLANKS        COPY VOLSER\n         MVC   DAIR_UNIT,COMM_BLANKS          COPY UNIT NAME\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         LA    R1,DAIRREQ\n         ITRACE ID=ALOC_OUT\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        ALLOCATE OUTPUT\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=(DAIR_R15,2),                                     +\n               DATA2=DAIR_DD\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         MVC   APPNDREQ_DDNAME,DAIR_DD        SAVE DD NAME\n* ------------------------------------------------------------------- *\n*        OPEN the output data set                                     *\n* ------------------------------------------------------------------- *\nOPEN0050 DS    0H\n         GETMAIN RU,                                                   +\n               LV=ODCB_L,                                              +\n               LOC=BELOW\n         LR    R7,R1\n         ST    R7,APPNDREQ_DCB                SAVE DCB ADDRESS\n         ITRACE ID=OUT_DCB,                                            +\n               RDATA1=R7\nOUTPUT   USING IHADCB,R7\n         MVC   0(ODCB_L,R7),ODCB_I            COPY DCB\n         MVC   OUTPUT.DCBDDNAM,DAIR_DD        COPY DD NAME\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         ITRACE ID=OPEN_EXT,                                           +\n               RDATA1=R7,                                              +\n               DATA2=OUTPUT.DCBDDNAM\n         OPEN  ((R7),EXTEND),                 OPEN OUTPUT DCB          +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         GETMAIN RU,                          GETMAIN I/O AREA         +\n               LV=32768,                                               +\n               LOC=BELOW\n         ST    R1,APPNDREQ_IO                 SAVE I/O AREA\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n         XC    APPNDREQ_COUNT,APPNDREQ_COUNT\n         XC    APPNDREQ_BYTES,APPNDREQ_BYTES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=MAIN,                                               +\n               DATA1=APPNDREQ_MEMBER\n         L     R7,APPNDREQ_DCB                DCB ADDRESS\n         L     R6,APPNDREQ_IO                 I/O AREA\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)\n         MVI   DAIR_OPTS,0                    SET OPTIONS\n         MVC   DAIR_DSN,SESS_DSN              COPY DATA SET NAME\n         MVC   DAIR_MEMBER,APPNDREQ_MEMBER    COPY MEMBER NAME\n         MVC   DAIR_VOLSER,SESS_VOLSER        COPY VOLSER\n         MVC   DAIR_UNIT,COMM_BLANKS          COPY UNIT NAME\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         ITRACE ID=ALOC_IN\n\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        ALLOCATE SOURCE MEMBER\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=(DAIR_R15,2),                                     +\n               DATA2=DAIR_DD\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\nMAIN0010 DS    0H\n         MVC   WORK_DCB(IDCB_L),IDCB_I\n         LA    R5,WORK_DCB\nINPUT    USING IHADCB,R5\n         MVC   INPUT.DCBDDNAM,DAIR_DD\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         ITRACE ID=OPEN_IN,                                            +\n               RDATA1=R5,                                              +\n               DATA2=INPUT.DCBDDNAM\n         OPEN  ((R5),INPUT),                  OPEN INPUT DCB           +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         XC    WORK_RECORDS,WORK_RECORDS      INITIALIZE\n         XC    WORK_BYTES,WORK_BYTES          INITIALIZE\n         L     R1,APPNDREQ_COUNT              NUMBER APPENDED SO FAR\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,APPNDREQ_COUNT              SAVE TOTAL\n         ST    R1,SEPREQ_SEQ                  SERVES AS SEQ NBR ALSO\n         LA    R1,SPF_SEPARATOR_1\n         ST    R1,SEPREQ_FIRST_SEPARATOR\n         LA    R1,3\n         ST    R1,SEPREQ_NBR                  NBR OF SEPARATOR LINES\n         ST    R7,SEPREQ_DCB                  OUTPUT DCB ADDR\n         MVC   SEPREQ_MEMBER,APPNDREQ_MEMBER  SET MEMBER NAME\n         LA    R1,SEPREQ                      SEPARATOR PARMS\n         L     R15,COMM_V_OSSEP               OSSEP ENTRY POINT\n         BALR  R14,R15                        OUTPUT LEADING SEPARATORS\n         ITRACE ID=NOTIFY,                                             +\n               DATA1=APPNDREQ_MEMBER\n         MVC   WORK_MSG(MSG01_L),MSG01\n         MVC   WORK_MSG+(MSG01_MEMBER-MSG01)(L'MSG01_MEMBER),APPNDREQ_M+\n               EMBER\n         LA    R2,WORK_MSG\n         LA    R3,MSG01_L\n         TPUT  (R2),(R3),R                    ISSUE TPUT\nMAIN0020 DS    0H\n         ITRACE ID=APPEND\nMAIN0030 DS    0H\n         GET   (R5),(R6)                      READ\n         L     R1,WORK_RECORDS                RECORDS READ\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,WORK_RECORDS                SAVE NUMBER\n         L     R1,APPNDREQ_BYTES              BYTES READ\n         LA    R1,80(,R1)                     PLUS 80\n         ST    R1,APPNDREQ_BYTES              SAVE TOTAL\n         L     R1,WORK_BYTES                  BYTES FOR THIS FILE\n         LA    R1,80(,R1)                     PLUS 80\n         ST    R1,WORK_BYTES\n         PUT   (R7),(R6)                      PUT\n         B     MAIN0030                       LOOP\nMAIN0040 DS    0H\n         LA    R1,SPF_SEPARATOR_4             FIRST SEPARATOR\n         ST    R1,SEPREQ_FIRST_SEPARATOR\n         MVC   SEPREQ_RECORDS,WORK_RECORDS    NBR OF RECORDS\n         MVC   SEPREQ_BYTES,WORK_BYTES        NBR OF BYTES\n         LA    R1,SEPREQ\n         L     R15,COMM_V_OSSEP               OSSEP ENTRY POINT\n         BALR  R14,R15                        OUTPUT TRAILING SEPARATOR\n         ITRACE ID=EOF,                                                +\n               DATA1=(WORK_RECORDS,4),                                 +\n               DATA2=(APPNDREQ_BYTES,4)\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLS_IN,                                             +\n               RDATA1=R5\n         CLOSE ((R5)),                        CLOSE DCB                +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL (R5)                        FREE BUFFERS\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=DAIR_DD\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION (FREE)\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        FREE DD\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=(DAIR_R15,2)\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         L     R7,APPNDREQ_DCB                DCB ADDRESS\n         L     R6,APPNDREQ_IO                 I/O AREA ADDRESS\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLS_OUT,                                            +\n               RDATA1=R7\n         CLOSE ((R7)),                        CLOSE DCB                +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         ITRACE ID=CLOSE_RC,                                           +\n               RDATA1=R15\n         FREEPOOL (R7)                        FREE BUFFERS\n         ITRACE ID=FREE_DCB,                                           +\n               DATA1=(=C'OUTPUT',6),                                   +\n               RDATA2=R7\n         FREEMAIN RU,                         FREE DCB                 +\n               A=(R7),                                                 +\n               LV=ODCB_L\n         XC    APPNDREQ_DCB,APPNDREQ_DCB      CLEAR DCB ADDRESS\n         ITRACE ID=FREE_IO,                                            +\n               RDATA1=R6\n         FREEMAIN RU,                         FREE I/O AREA            +\n               A=(R6),                                                 +\n               LV=32768\n         XC    APPNDREQ_IO,APPNDREQ_IO        CLEAR I/O AREA ADDRESS\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=APPNDREQ_DDNAME\n         MVC   DAIR_DD,APPNDREQ_DDNAME        COPY DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        FREE DD\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=(DAIR_R15,2)\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABORT000 DS    0H\n         ITRACE ID=ABORT\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID+1,1\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         B     EXIT0004\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0000  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     OPEN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         LR    R1,R13\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=OSAPPEND_WORK_L\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)\n         LR    R15,R2                         SET RETURN CODE\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSN_MVC1 MVC   DAIR_DSN(0),COMM_USER          COPY USER ID\nDSN_MVC2 MVC   1(0,R3),SPF_OUTPUT_DSN         COPY DATA SET NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIDCB_I   DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               EODAD=MAIN0040,                                         +\n               MACRF=GM\nIDCB_L   EQU   *-IDCB_I\nODCB_I   DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               MACRF=PM\nODCB_L   EQU   *-ODCB_I\nOPEN_I   OPEN  (*,EXTEND),                                             +\n               MODE=31,                                                +\n               MF=L\nOPEN_L   EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L  EQU   *-CLOSE_I\n\nPANEL_NAME     DC     CL8'OSAPPEND'\n\nMSG01          DS     0C\n               DC     C'OSAPPEND01I  Appending member:'\nMSG01_MEMBER   DC     CL8' '\nMSG01_L        EQU    *-MSG01\n\n               LTORG\n\nAPPENDEND      EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSAPPEND_WORK   DSECT\n                COPY     DXDPREF\nWORK_DCB        DS       0F,(IDCB_L)X\nWORK_OPEN       DS       0F,(OPEN_L)X\nWORK_CLOSE      DS       0F,(CLOSE_L)X\n\nWORK_RECORDS    DS       F\nWORK_BYTES      DS       F\n\nWORK_MSG        DS       CL80\n\n                DAIRREQ  DSECT=NO\n                SEPREQ   DSECT=NO\nOSAPPEND_WORK_L EQU      *-OSAPPEND_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               APPNDREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               IBMMAC   DCBD=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSAPPEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSASMFMT": {"ttr": 5130, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x01\\t%\\x9f\\x01\\t6/\\x15&\\x01d\\x01d\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-09-16T00:00:00", "modifydate": "2009-12-28T15:26:03", "lines": 356, "newlines": 356, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSASMFMT                                              *\n*                                                                     *\n*  Perform customized formatting for assembler listings               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSASMFMT CSECT\nOSASMFMT AMODE 31\nOSASMFMT RMODE ANY\n         USING OSCOMM,R12\n         USING OSASMFMT,R15\n         B     INIT0000\nMODID    DC    CL8'OSASMFMT'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(ASMFMTEND-OSASMFMT)\nINIT0000 DS    0H\n         USING OSCOMM,R12                        DEFINE BASE\n         USING SESSION,R11                       DEFINE AREA BASE\n         USING DS1FMTID,SESS_DSCB                DEFINE BASE\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           COPY ENTRY POINT\n         DROP  R15\n         USING OSASMFMT,R10                      DEFINE BASES\n         L     R2,SESS_DXD_ADDR                  WORK AREA BASE\n         A     R2,DXDSTART\n         ST    R13,4(,R2)                        SAVE R13\n         ST    R2,8(,R13)                        CHAIN SAVE AREA\n         LR    R13,R2                            COPY WORK AREA ADDRESS\n         USING DXDASM,R13                        DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVI   DXD_RC,0                          RESET RC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LTR   R1,R1                             DSPCREQ BLOCK PASSED?\n         BNZ   MAIN0100                          YES\n* ------------------------------------------------------------------- *\n*        No DSPCREQ passed                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=RECFM,                                              +\n               DATA1=(DS1RECFM,1)\n         TM    DS1RECFM,DS1RECFU                 RECFM U?\n         BO    MAIN0030                          YES\n         ITRACE ID=LRECL,                                              +\n               DATA1=(DS1LRECL,2)\n         CLC   DS1LRECL,H137                     LRECL > 137?\n         BH    MAIN0030                          YES\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA  SET I/O AREA ADDR\nMAIN0010 DS    0H\n         LA    R1,DSPCREQ                        DSPCREQ ADDR\n         L     R15,COMM_OSDSPACE                 DATA SPACE MANAGER\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            GOT THE RECORD?\n         BNE   MAIN0030                          NO\n         CLC   DSPCREQ_RECORD_LENGTH,F41         MINIMUM LENGTH?\n         BH    MAIN0020                          YES\nMAIN0015 DS    0H\n         LA    R0,1\n         A     R0,DSPCREQ_RECORD_NBR\n         ST    R0,DSPCREQ_RECORD_NBR             NEXT RECORD NBR\n         B     MAIN0010\nMAIN0020 DS    0H\n         L     R8,DSPCREQ_RECORD_ADDR            DATA ADDRESS\n         CLC   OPTIONS_STATEMENT,3(R8)           OPTIONS HEADING?\n         BNE   MAIN0015                          NO\n         LA    R0,1\n         A     R0,DSPCREQ_RECORD_NBR\n         ST    R0,DSPCREQ_RECORD_NBR             NEXT RECORD NBR\n         LA    R1,DSPCREQ                        DSPCREQ ADDR\n         L     R15,COMM_OSDSPACE                 DATA SPACE MANAGER\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            GOT THE RECORD?\n         BNE   ERR0010                           NO\n         CLC   DSPCREQ_RECORD_LENGTH,F41         MINIMUM LENGTH?\n         BL    MAIN0030                          NO\n         L     R8,DSPCREQ_RECORD_ADDR            DATA ADDRESS\n         CLC   ADATA_STATEMENT,5(R8)             ADATA OPTION?\n         BNE   MAIN0030                          NO\n         LA    R0,1\n         A     R0,DSPCREQ_RECORD_NBR\n         ST    R0,DSPCREQ_RECORD_NBR             NEXT RECORD NBR\n         LA    R1,DSPCREQ                        DSPCREQ ADDR\n         L     R15,COMM_OSDSPACE                 DATA SPACE MANAGER\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            GOT THE RECORD?\n         BNE   ERR0010                           NO\n         CLC   DSPCREQ_RECORD_LENGTH,F41         MINIMUM LENGTH?\n         BL    MAIN0030                          NO\n         L     R8,DSPCREQ_RECORD_ADDR            DATA ADDRESS\n         CLC   ALIGN_STATEMENT,5(R8)             ALIGN OPTION?\n         BNE   MAIN0030                          NO\n         ITRACE ID=IS_ASM\n         B     EXIT0000                          I'M SATISFIED\nMAIN0030 DS    0H\n         MVI   DXD_RC,8                          NOT ASSEMBLER LISTING\n         B     EXIT0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         MVC   DSPCREQ(256),0(R1)                COPY PASSED DSPCREQ\n         L     R1,DSPCREQ_RECORD_ADDR            DATA ADDR\n         L     R2,DSPCREQ_RECORD_LENGTH          DATA LENGTH\n         ITRACE ID=FORMAT,                                             +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         BCTR  R2,0\n         XC    COMM_INFO_01,COMM_INFO_01         INITIALIZE WORK AREA\n         EX    R2,MVC_1                          COPY TO WORK AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLC   RELOCATION_STATEMENT,COMM_INFO_01+50\n         BE    MAIN0540\n         TM    DXD_FLAGS,$BYPASS                 BYPASS FLAG ON?\n         BO    MAIN1000                          YES\n         MVI   DXD_ATTR,$SCREEN_ATTR_NORMAL\n         TM    DXD_FLAGS,$HEADINGS               IN PAGE HEADINGS?\n         BO    MAIN0530                          YES\n         CLC   USING_STATEMENT,COMM_INFO_01+3    USING HEADING?\n         BE    MAIN0530                          YES\n         CLI   COMM_INFO_01+40,C'+'              MACRO EXPANSION?\n         BE    MAIN0500                          YES\n         CLI   COMM_INFO_01+40,C'='              COPY?\n         BE    MAIN0510                          YES\n         CLI   COMM_INFO_01+41,C'*'              COMMENT\n         BE    MAIN0520                          YES\n         TM    DXD_FLAGS,$CONTINUED              CONTINUED STATEMENT?\n         BO    MAIN1000                          YES\n         LA    R6,COMM_INFO_01+41                1ST BYTE OF A LABEL\n         L     R5,DSPCREQ_RECORD_LENGTH          RECORD LENGTH\n         S     R5,F41                            LENGTH REMAINING\n         BL    MAIN1000                          NO MORE DATA\n         CLI   COMM_INFO_01+39,C'0'              STATEMENT NUMBER?\n         BL    MAIN1000                          NO\n         CLI   COMM_INFO_01+41,C' '              LABEL PRESENT?\n         BE    MAIN0130                          NO\n         ITRACE ID=LABLATTR\n         MVI   COMM_INFO_01+40,$SCREEN_ATTR_HIGH\nMAIN0120 DS    0H\n         CLI   0(R6),C' '                        END OF LABEL?\n         BE    MAIN0130                          YES\n         LA    R6,1(,R6)                         NEXT\n         BCT   R5,MAIN0120                       LOOP\n         B     MAIN1000\nMAIN0130 DS    0H\n         ITRACE ID=OP_ATTR,                                            +\n               RDATA1=R6,                                              +\n               RDATA2=R8\n         MVI   0(R6),$SCREEN_ATTR_HIGH_GREEN\n         LA    R6,1(,R6)\n         BCT   R5,MAIN0140\n         B     MAIN1000\nMAIN0140 DS    0H\n         CLI   0(R6),C' '                        BLANK?\n         BNE   MAIN0150                          NO\n         LA    R6,1(,R6)                         NEXT\n         BCT   R5,MAIN0140\n         B     MAIN1000\nMAIN0150 DS    0H\n         CLI   0(R6),C' '                        BLANK?\n         BE    MAIN0160\n         LA    R6,1(,R6)                         NEXT\n         BCT   R5,MAIN0150\n         B     MAIN1000\nMAIN0160 DS    0H\n         ITRACE ID=DATAATTR,                                           +\n               RDATA1=R6,                                              +\n               RDATA2=R8\n         MVI   0(R6),$SCREEN_ATTR_HIGH_BLUE\n         B     MAIN1000                          OTHERWISE LEAVE ALONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=MACRO\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_YELLOW\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0510 DS    0H\n         ITRACE ID=COPY\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_GREEN\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0520 DS    0H\n         ITRACE ID=COMMENT\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_TURQUOISE\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0530 DS    0H\n         ITRACE ID=HEADING\n         OI    DXD_FLAGS,$HEADINGS\n         CLC   LOC_STATEMENT,COMM_INFO_01+3      \"LOC  OBJECT\"?\n         BNE   MAIN1000                          NO.. STILL IN HEADING\n         NI    DXD_FLAGS,255-$HEADINGS           TURN OFF HEADING FLAG\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*        Relocation dictionary found, bypass formatting from now on   *\n* ------------------------------------------------------------------- *\nMAIN0540 DS    0H\n         OI    DXD_FLAGS,$BYPASS                 SET BYPASS FLAG\n* ------------------------------------------------------------------- *\n*        All formatting complete.  Copy to VDATA.                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         L     R2,DSPCREQ_RECORD_LENGTH          DATA LENGTH\n         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         BCTR  R1,0                              RELATIVE TO ZERO\n         SR    R2,R1                             COMPUTE LENGTH LEFT\n         BNH   EXIT0000                          NONE TO DISPLAY\n         C     R2,SPF_VWIDTH                     TOO MUCH FOR 1 LINE?\n         BNH   MAIN1010                          NO\n         L     R2,SPF_VWIDTH                     LIMIT LENGTH\nMAIN1010 DS    0H\n         ITRACE ID=SET_ATTR,                                           +\n               DATA1=(DXD_ATTR,1)\n         MVC   COMM_INFO_01(1),DXD_ATTR\n         BCTR  R2,0                              FOR EX\n         LA    R3,COMM_INFO_01                   WORK AREA ADDR\n         AR    R3,R1                             PLUS LEFT MOST COLUMN\n         ITRACE ID=MVC_2,                                              +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         EX    R2,MVC_2                          COPY TO VDATA\n         NI    DXD_FLAGS,255-$CONTINUED          RESET FLAG\n         CLI   COMM_INFO_01+112,C' '             CONTINUED?\n         BNO   EXIT0000                          NO\n         OI    DXD_FLAGS,$CONTINUED              SET INDICATOR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DSPC_ERR,                                           +\n               DATA1=(DSPCREQ_RC,1)\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         SR    R15,R15\n         IC    R15,DXD_RC                        RETURN CODE\n         L     R13,4(,R13)                       RESTORE R13\n         L     R14,12(,R13)                      RESTORE R14\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS\n         BR    R14                               RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC_1    MVC   COMM_INFO_01(0),0(R1)             COPY TO WORK AREA\nMVC_2    MVC   0(0,R8),0(R3)                     COPY TO VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART        DC    Q(DXDASM)\nF41             DC    F'41'\nH137            DC    H'137'\n\nOPTIONS_STATEMENT     DC    C'Options for this Assembly'\nADATA_STATEMENT       DC    C'ADATA'\nALIGN_STATEMENT       DC    C'ALIGN'\nUSING_STATEMENT       DC    C'Active Usings: '\nLOC_STATEMENT         DC    C'Loc  Object Code  '\nRELOCATION_STATEMENT  DC    C'Relocation Dictionary'\n\nPRINTABLES      DS    0C\n*                        0 1 2 3 4 5 6 7 8 9 A B C D E F\n                DC    X'40404040404040404040404040404040' 00-0F\n                DC    X'40404040404040404040404040404040' 10-1F\n                DC    X'40404040404040404040404040404040' 20-2F\n                DC    X'40404040404040404040404040404040' 30-3F\n                DC    X'404040404040404040404A4B4C4D4E4F' 40-4F\n                DC    X'504040404040404040405A5B5C5D5E5F' 50-5F\n                DC    X'60614040404040404040406B6C6D6E6F' 60-6F\n                DC    X'404040404040404040407A7B7C7D7E7F' 70-7F\n                DC    X'40818283848586878889408B8C8D8E8F' 80-8F\n                DC    X'40919293949596979899409B9C9D9E9F' 90-9F\n                DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF\n                DC    X'4040404040404040404040BBBCBDBEBF' B0-BF\n                DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n                DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n                DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n                DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\nASMFMTEND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDASM          DSECT\n                COPY     DXDPREF\n\nDXD_RC          DS       X\nDXD_ATTR        DS       X\nDXD_FLAGS       DS       X\n$CONTINUED      EQU      X'80'\n$HEADINGS       EQU      X'40'\n$BYPASS         EQU      X'20'\n\n                DSPCREQ  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT_1 DSECT\n         IBMMAC   VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSASMFMT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSAUTH": {"ttr": 19207, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00E\\x01\\x10\\x02\\x7f\\x01\\x10\\x02\\x7f\\x10\\x06\\x00r\\x00m\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-01-27T00:00:00", "modifydate": "2010-01-27T10:06:45", "lines": 114, "newlines": 109, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSAUTH                                                *\n*                                                                     *\n*  Dynamic authorization/de-authorization                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSAUTH   CSECT\nOSAUTH   AMODE 31\nOSAUTH   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSAUTH,R15\n         B     INIT0000\nMODID    DC    CL8'OSAUTH'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(AUTHEND-OSAUTH)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSAUTH,R10\n         L     R15,COMM_DXD                   DXD ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDAUTH,R13                    DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Verify user is allowed to use functions that require         *\n*        APF authorization.                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\n*        Add any code needed to verify the user should be allowed\n*        to use functions that require APF authorization.\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    COMM_FLAGS,$COMM_AUTH_ON       TURN AUTH ON?\n         BO    AUTH0010                       YES\n         B     AUTH0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAUTH0010 DS    0H\n         ITRACE ID=AUTH_ON\n\n*        Add code to turn on APF authorization\n\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAUTH0020 DS    0H\n         ITRACE ID=AUTH_OFF\n\n*        Add code to turn off APF authorization\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE SAVE AREA\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC  Q(DXDAUTH)\n\nAUTHEND        EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDAUTH        DSECT\n               COPY  DXDPREF\n\n\n*       add any work area you need here\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY REGEQU\n$BUFFSIZE      EQU  65535\n               END  OSAUTH\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSBROWSE": {"ttr": 11521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00&\\x01\\t!\\x0f\\x01\\x10\\x01O\\x16\\x10\\x05\\x04\\x04\\xe6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-14T16:10:26", "lines": 1284, "newlines": 1254, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSBROWSE                                              *\n*                                                                     *\n*  Build main body                                                    *\n*                                                                     *\n*  \"BROWSE\" format.                                                   *\n*                                                                     *\n*  This is the default function for sequential, PDS(/E) members,      *\n*  VSAM, and regular HFS files.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSBROWSE CSECT\nOSBROWSE AMODE 31\nOSBROWSE RMODE ANY\n         USING OSCOMM,R12\n         USING OSBROWSE,R15\n         B     INIT0000\nMODID    DC    CL8'OSBROWSE'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(BROWSEEND-OSBROWSE)\nINIT0000 DS    0H\n         USING OSCOMM,R12                       DEFINE COMMON AREA BASE\n         USING SESSION,R11                      DEFINE COMMON AREA BASE\n         USING DS1FMTID,SESS_DSCB               DEFINE BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         LA    R5,2048(,R10)\n         LA    R5,2048(,R5)\n         DROP  R15\n         USING OSBROWSE,R10,R5                  DEFINE BASES\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*        Determine if this is INITIAL invocation                      *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0040\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\n         OC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         BNZ   ERR0120\n         L     R0,DXDSIZE\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         L     R1,DXDSIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         A     R2,DXDSTART\n         ST    R13,4(,R2)                        SAVE R13\n         ST    R2,8(,R13)                        CHAIN SAVE AREA\n         LR    R13,R2                            COPY WORK AREA ADDRESS\n         USING DXDBROWS,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         XC    DXD_RC,DXD_RC\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS     DATA FROM HFS?\n         BO    INIT0010                          YES\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM    DATA FROM VSAM FILE?\n         BO    INIT0020                          YES\n         MVC   DXD_PANEL,OS0001                  PANEL FOR NON-VSAM\n         B     INIT0030\nINIT0010 DS    0H\n         MVC   DXD_PANEL,OSHFS                   PANEL FOR HFS(ES)\n         B     INIT0030\nINIT0020 DS    0H\n         MVC   DXD_PANEL,OS0008                  PANEL FOR VSAM\nINIT0030 DS    0H\n         ITRACE ID=VDATA\n         LA    R1,DXD_PANEL                      PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN    SET VDATA FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                           GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA_LENGTH               SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA_ADDR                 SAVE VDATA ADDR\n         MVC   DXD_VDEPTH,SPF_VDEPTH             SAVE DEPTH\n         L     R0,SPF_VWIDTH\n         ST    R0,DXD_VWIDTH\n         SH    R0,=Y(MSG_03_L)\n         ST    R0,DXD_CCHHR_VWIDTH               WIDTH IF CCHHR DISP\n         L     R0,SPF_VWIDTH\n         SH    R0,=Y(MSG_04_L)\n         ST    R0,DXD_RBA_VWIDTH                 WIDTH IF RBA DISPLAYED\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR INITIALIZE CURSOR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Re-establish save area and determine function                *\n* ------------------------------------------------------------------- *\nINIT0040 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0130\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2,                                             +\n               DATA1=(SESS_FORMAT_FLAGS,1)\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL  PROCESS CONTROL STMT?\n         BE    EXIT0000                           YES.. IGNORE\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP  CLEAN UP?\n         BE    CLEAN000                           YES\n         LA    R0,COMMAND_TABLE                   RESET COMMAND\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Format data                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0050 DS    0H\n         ITRACE ID=INIT0050,                                           +\n               DATA1=(SESS_KEYWORD_FLAGS,1),                           +\n               DATA2=(SESS_DATA_TYPE,1)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=MAIN0000,                                           +\n               DATA1=DATASPACE_1_NAME,                                 +\n               DATA2=(DATASPACE_1_ALET,4)\n* ------------------------------------------------------------------- *\n*        Determine if any automatic formatting should be used         *\n* ------------------------------------------------------------------- *\n         XC    DXD_FORMATTER,DXD_FORMATTER      RESET SPECIAL FORMATTER\n         L     R15,V_OSASMFMT                   ASSEMBLER FORMATTER\n         ITRACE ID=TESTASM,                                            +\n               RDATA1=R15                       CALLING OSASMFMT\n         SR    R1,R1                            INDICATE REASON\n         BALR  R14,R15                          CALL OSASMFMT\n         ITRACE ID=ASM_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                          ASSEMBLER LISTING?\n         BNZ   MAIN0010                         NO\n         MVC   DXD_FORMATTER,V_OSASMFMT         SET FORMATTER ADDRESS\n* ------------------------------------------------------------------- *\n*        Build display                                                *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         ITRACE ID=1STRECD,                                            +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n* ------------------------------------------------------------------- *\n*        Initialize the VDATA buffer                                  *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         L     R0,DXD_VDATA_ADDR                BUFFER ADDRESS\n         L     R1,DXD_VDATA_LENGTH              BUFFER SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_VDATA_ADDR                BUFFER ADDRESS\n         L     R7,DXD_VDEPTH                    NUMBER OF LINES\n         L     R6,SESS_IO_AREA                  I/O AREA ADDRESS\n         ST    R6,DSPCREQ_RECORD_ADDR\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         ST    R8,DXD_SAVED_R8\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" the data and build the body of the SPF panel      *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         ITRACE ID=GET_RC,                                             +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    MAIN0130                         NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         L     R2,DSPCREQ_RECORD_LENGTH\n         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         BCTR  R1,0                             RELATIVE TO ZERO\n         SR    R2,R1                            MINUS LEFT MOST COLUMN\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR\n         BO    MAIN0050                         DISPLAY CCHHR\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA\n         BO    MAIN0070                         DISPLAY RBA\n         C     R2,DXD_VWIDTH                    GREATER THAN WIDTH?\n         BNH   MAIN0040                         NO\n         L     R2,DXD_VWIDTH                    LIMIT TO SCREEN WIDTH\nMAIN0040 DS    0H\n         ICM   R15,15,DXD_FORMATTER             ANY SPECIAL FORMATTING?\n         BZ    MAIN0090                         NO\n         ITRACE ID=CALL_FMT,                                           +\n               RDATA1=R15\n         LA    R1,DSPCREQ                       PASS DSPCREQ ADDR\n         BALR  R14,R15                          CALL FORMATTER\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*        Format the disk address (CCHHR) non-VSAM only                *\n* ------------------------------------------------------------------- *\nMAIN0050 DS    0H\n         C     R2,DXD_CCHHR_VWIDTH              GREATER THAN WIDTH?\n         BNH   MAIN0060                         NO\n         L     R2,DXD_CCHHR_VWIDTH              LIMIT TO USABLE WIDTH\nMAIN0060 DS    0H\n         ITRACE ID=FMTCCHHR,                                           +\n               RDATA1=R8,                                              +\n               DATA2=(DSPCREQ_CCHHR,5)\n         MVC   0(MSG_03_L,R8),MSG_03\nM        USING MSG_03,R8\n         SR    R0,R0\n         ICM   R0,3,DSPCREQ_CCHHR               CYLINDER NUMBER\n         CVD   R0,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4\n         MVC   M.MSG_03_CYLINDER,COMM_INFO_01+3 COPY EDITED CYLINDER\n         ICM   R0,3,DSPCREQ_CCHHR+2             HEAD NUMBER\n         CVD   R0,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4\n         MVC   M.MSG_03_HEAD,COMM_INFO_01+6     COPY EDITED HEAD NBR\n         SR    R0,R0\n         IC    R0,DSPCREQ_CCHHR+4               RECORD NUMBER\n         CVD   R0,COMM_DWORD\n         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4\n         MVC   M.MSG_03_RECORD,COMM_INFO_01+5   COPY EDITED RECORD NBR\n         IC    R0,DSPCREQ_SEQ+3                 SEQUENCE NBR\n         CVD   R0,COMM_DWORD\n         MVC   COMM_INFO_01(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_01(L'EDIT_WORD_2),COMM_DWORD+4\n         MVC   M.MSG_03_SEQ,COMM_INFO_01+5      COPY EDITED SEQ NBR\n         LA    R8,MSG_03_L(,R8)                 PLUS LENGTH OF CCHHR\n         B     MAIN0090\n         DROP  M\n* ------------------------------------------------------------------- *\n*        Format RBA   VSAM only                                       *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         C     R2,DXD_CCHHR_VWIDTH              GREATER THAN WIDTH?\n         BNH   MAIN0080                         NO\n         L     R2,DXD_CCHHR_VWIDTH              LIMIT TO USABLE WIDTH\nMAIN0080 DS    0H\n         ITRACE ID=FMT_RBA,                                            +\n               RDATA1=R8,                                              +\n               DATA2=(DSPCREQ_RBA,4)\n         MVC   0(MSG_04_L,R8),MSG_04\nM        USING MSG_04,R8\n         ICM   R0,15,DSPCREQ_RBA\n         CVD   R0,COMM_DWORD\n         ED    M.MSG_04_RBA,COMM_DWORD+2        EDIT RBA\n         LA    R8,MSG_04_L(,R8)                 PLUS LENGTH OF RBA MSG\n         DROP  M\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0090 DS    0H\n         LTR   R2,R2                            ANY DISPLAYABLE DATA?\n         BNH   MAIN0110                         NO\n         L     R3,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         BCTR  R3,0                             RELATIVE TO ZERO\n         AR    R3,R6                            PLUS I/O AREA ADDRESS\n         ITRACE ID=TO_BUFF,                                            +\n               RDATA1=R8,                                              +\n               RDATA2=R2\n         BCTR  R2,0\n         EX    R2,MVC_01                        COPY DATA\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         BNO   MAIN0100\n         EX    R2,TR_01                         TRANSLATE TO EBCDIC\nMAIN0100 DS    0H\n         EX    R2,TR_02                         TRANSLATE\nMAIN0110 DS    0H\n         L     R8,DXD_SAVED_R8\n         A     R8,DXD_VWIDTH                    NEXT LINE\n         ST    R8,DXD_SAVED_R8\n         BCT   R7,MAIN0120                      MINUS 1 LINE\n         ITRACE ID=FULL\n         B     MAIN0150\nMAIN0120 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER\n         A     R1,F1                            ADD 1\n         C     R1,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?\n         BH    MAIN0130                         YES\n         ST    R1,DSPCREQ_RECORD_NBR            SAVE NEW RECORD NUMBER\n         B     MAIN0030                         GET/PROCESS NEXT RECORD\nMAIN0130 DS    0H\n         ITRACE ID=END_DATA,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         L     R1,DSPCREQ_RECORD_NBR\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1,EDIT_WORD_1\n         ED    DXD_WORK_1,COMM_DWORD+3\n         MVC   SPF_RECORD_TO,DXD_WORK_1+1\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BL    MAIN0150\n* ------------------------------------------------------------------- *\n*        End of data reached and there is room for the                *\n*        \"End of data\" line                                           *\n* ------------------------------------------------------------------- *\n         MVC   DXD_WORK_2(EOF_01_L),EOF_01\n         L     R1,DATASPACE_1_LAST_RECORD       NUMBER OF RECORDS\n         S     R1,DATASPACE_1_FIRST_RECORD      MINUS 1ST RECORD\n         LA    R1,1(,R1)                        PLUS 1\n         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   DXD_WORK_2+(EOF_01_RECORDS-EOF_01)(L'EOF_01_RECORDS),DXD++\n               _WORK_1+1\n         L     R1,DATASPACE_1_BYTES             NUMBER OF BYTES\n         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   DXD_WORK_2+(EOF_01_BYTES-EOF_01)(L'EOF_01_BYTES),DXD_WOR+\n               K_1+1\n         LA    R1,EOF_01_L                      LENGTH OF TRAILER LINE\n         C     R1,DXD_VWIDTH                    GREATER THAN WIDTH?\n         BNH   MAIN0140                         NO\n         L     R1,DXD_VWIDTH                    LIMIT TO SCREEN WIDTH\nMAIN0140 DS    0H\n         BCTR  R1,0                             FOR EXECUTE\n         EX    R1,MVC_02                        COPY TRAILER LINE\n* ------------------------------------------------------------------- *\n*         Build DSCB info                                             *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         MVC   SPF_RECORD_FROM,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         STCM  R1,15,SPF_COLUMN_FROM            SET 'FROM' COLUMN\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR\n         BO    MAIN0160                         DISPLAY CCHHR\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA\n         BO    MAIN0170                         DISPLAY RBA\n         A     R1,SPF_VWIDTH                    PLUS FULL WIDTH\n         B     MAIN0180\nMAIN0160 DS    0H\n         A     R1,DXD_CCHHR_VWIDTH              PLUS WIDTH WHEN CCHHR\n         B     MAIN0180\nMAIN0170 DS    0H\n         A     R1,DXD_RBA_VWIDTH                PLUS WIDTH WHEN RBA\nMAIN0180 DS    0H\n         BCTR  R1,0\n         SR    R0,R0\n         ICM   R0,3,DS1LRECL                    RECORD LENGTH\n         BNZ   MAIN0190                         USE IF NOT ZERO\n         ICM   R0,3,DS1BLKL                     TRY BLOCK SIZE\n         BNZ   MAIN0190                         USE IF NOT ZERO\n         L     R0,DATASPACE_1_LONGEST_RECORD    USE LONGEST RECORD\nMAIN0190 DS    0H\n         CR    R1,R0                            GREATER THAN MAX?\n         BNH   MAIN0200                         NO\n         LR    R1,R0                            LIMIT TO MAX\nMAIN0200 DS    0H\n         ST    R1,DATASPACE_1_DISPLAY_LAST_COLUMN\n         ITRACE ID=OSDSCB\n         L     R15,COMM_V_OSDSCB                OSDSCB ENTRY POINT\n         BALR  R14,R15                          FORMAT THE DSCB INFO\n         L     R1,DATASPACE_1_LAST_RECORD\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1,EDIT_WORD_1\n         ED    DXD_WORK_1,COMM_DWORD+3\n         MVC   SPF_RECORD_OF,DXD_WORK_1+1\n* ------------------------------------------------------------------- *\n*        If MSG3 and MSG4 are blank, insert \"SCALE\" lines             *\n* ------------------------------------------------------------------- *\n         CLC   SPF_MSG_3,COMM_BLANKS            BLANK?\n         BNE   MAIN0230                         NO\n         CLC   SPF_MSG_4,COMM_BLANKS            BLANK?\n         BNE   MAIN0230                         NO\n         SR    R0,R0\n         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN\n*        BCTR  R1,0                             RELATIVE TO ZERO\n         D     R0,F100                          DIVIDE BY 100\n         LR    R1,R0\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR\n         BO    MAIN0210\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA\n         BO    MAIN0220\n         LA    R2,SCALE1(R1)                    SCALE BASE + OFFSET\n         MVC   SPF_MSG_3,0(R2)\n         LA    R2,SCALE2(R1)                    SCALE BASE + OFFSET\n         MVC   SPF_MSG_4,0(R2)\n         B     MAIN0230\nMAIN0210 DS    0H\n         LA    R2,SCALE1(R1)\n         MVC   SPF_MSG_3+MSG_03_L(L'SPF_MSG_3-MSG_03_L),0(R2)\n         LA    R2,SCALE2(R1)\n         MVC   SPF_MSG_4+MSG_03_L(L'SPF_MSG_4-MSG_03_L),0(R2)\n         B     MAIN0230\nMAIN0220 DS    0H\n         LA    R2,SCALE1(R1)\n         MVC   SPF_MSG_3+MSG_04_L(L'SPF_MSG_3-MSG_04_L),0(R2)\n         LA    R2,SCALE2(R1)\n         MVC   SPF_MSG_4+MSG_04_L(L'SPF_MSG_4-MSG_04_L),0(R2)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Position cursor following FIND or RFIND                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0230 DS    0H\n         TM    SESS_SEARCH_FLAGS,$SESS_SEARCH_NOW (R)FIND PROCESSED?\n         BNO   MAIN0240                         NO\n         ITRACE ID=CMP_CUR,                                            +\n               DATA1=(SESS_SEARCH_RECORD,4),                           +\n               DATA2=(DXD_STRING_DISP,4)\n         ICM   R1,15,SESS_SEARCH_RECORD         MATCHING RECORD NBR\n         S     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         L     R2,DXD_STRING_DISP               STRING DISPLACEMENT\n         C     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         BL    MAIN0240                         YES\n         S     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         LA    R2,1(,R2)                        PLUS 1\n         CH    R2,DXD_VWIDTH+2                  OFF RIGHT SIDE?\n         BH    MAIN0240                         YES\n         MH    R1,DXD_VWIDTH+2                  MULTIPLY BY WIDTH\n         AR    R1,R2                            COMPUTE CURSOR POSITION\n         ST    R1,SESS_DISP_CURSOR\n         ITRACE ID=CURSOR,                                             +\n               RDATA1=R1\n         B     MAIN0250\nMAIN0240 DS    0H\n         ITRACE ID=ZERO_CSR\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display the panel                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               DATA1=DXD_PANEL,                                        +\n               RDATA2=R15\n         MVC   SESS_DISP_PANEL,DXD_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   EXIT0000                         YES\n         OC    SESS_RC,SESS_RC                  RC=0\n         BZ    MAIN0260                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for command(s)                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0260 DS    0H\n         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?\n         BE    MAIN0310                         YES\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         SR    R3,R3                            CLEAR REGISTER\n         ICM   R3,3,COMM_OPERANDS_NBR\n         BZ    MAIN0310                         NO OPERANDS\n* ------------------------------------------------------------------- *\n*        Check for primary command                                    *\n* ------------------------------------------------------------------- *\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS\n         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH\n         L     R15,COMM_V_OSCMD                 OSCMD ENTRY POINT\n         BALR  R14,R15                          SEARCH COMMAND(S)\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                              YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        No command has been recognized                               *\n*        Check for scroll commands                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         MVC   SESS_VERTICAL_SCROLL,SPF_ZSCROLLN\n         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    MAIN0390                         YES\n         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?\n         BE    MAIN0360                         YES\n         CLI   SPF_ZVERB,C'L'                   SCROLL LEFT?\n         BE    MAIN0410                         YES\n         CLI   SPF_ZVERB,C'R'                   SCROLL RIGHT?\n         BE    MAIN0440                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    MAIN0380                         YES\n         CLI   SPF_ZVERB,C'U'                   SCROLL UP?\n         BE    MAIN0330                         YES\n         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?\n         BE    MAIN0150                         YES\n         B     ERR0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0380                         YES\n         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D\n         SR    R2,R1                            MINUS SCROLL AMOUNT\n         ICM   R1,15,DATASPACE_1_FIRST_RECORD   ANY STARTING RECORD?\n         BNZ   MAIN0340                         YES\n         LH    R1,H1                            DEFAULT TO 1\nMAIN0340 DS    0H\n         CR    R2,R1                            LESS THAN MININUM?\n         BNL   MAIN0350                         NO\n         LR    R2,R1                            DON'T SCROLL PAST 1ST\nMAIN0350 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD SET 1ST TO DISPLAY\n         B     MAIN0010                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0360 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0390                         YES\n         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D\n         AR    R2,R1                            PLUS RECORDS TO SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD\n         BH    MAIN0370                         BEYOND END OF DATA\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD 1ST TO DISPLAY\n         B     MAIN0010                         REBUILD EVERYTHING\nMAIN0370 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD\n         C     R2,DXD_VDEPTH                    MORE THAN SCREEN?\n         BNH   MAIN0150                         NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED\n         S     R2,DXD_VDEPTH                    MINUS 1 SCREEN\n         A     R2,F2                            PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD\n         B     MAIN0010                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0380 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         XC    SESS_SEARCH_RECORD,SESS_SEARCH_RECORD\n         B     MAIN0010                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Don't use a \"LA   R2,2(,R2)\"  here to add 2                  *\n*        because \"LA\" always turns off the high order                 *\n*        bit(s) and therefore the sign bit.                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0390 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD\n         BCTR  R2,0\n         S     R2,SPF_VDEPTH                    MINUS DEPTH\n         A     R2,F2                            PLUS 2\n         C     R2,DATASPACE_1_FIRST_RECORD      LOWER THAN FIRST RECORD\n         BNL   MAIN0400                         NO\n         L     R2,DATASPACE_1_FIRST_RECORD      FORCE TO FIRST RECORD\nMAIN0400 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD\n         B     MAIN0010                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL LEFT                                                  *\n* ------------------------------------------------------------------- *\nMAIN0410 DS    0H\n         ITRACE ID=LEFT,                                               +\n               DATA1=(SESS_HORIZONTAL_SCROLL,4)\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0420                         YES\n         L     R1,SESS_HORIZONTAL_SCROLL        COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         SR    R2,R1                            MINUS COLUMNS TO SCROLL\n         CH    R2,H1                            AT LEAST 1 COLUMN LEFT?\n         BNL   MAIN0430                         NO\nMAIN0420 DS    0H\n         LH    R2,H1                            STOP AT COLUMN 1\nMAIN0430 DS    0H\n         ITRACE ID=LEFT_1,                                             +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0010                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL RIGHT                                                 *\n* ------------------------------------------------------------------- *\nMAIN0440 DS    0H\n         ITRACE ID=RIGHT,                                              +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,4)\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0470                            YES\n         L     R1,SESS_HORIZONTAL_SCROLL           COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         AR    R2,R1                               PLUS SCROLL\n         SR    R1,R1\n         ICM   R1,3,DS1LRECL                       LRECL = ZERO?\n         BNZ   MAIN0450                            NO.. USE IT\n         ICM   R1,3,DS1BLKL                        BLOCK SIZE ZERO?\n         BNZ   MAIN0450                            NO.. USE IT\n         L     R1,DATASPACE_1_LONGEST_RECORD       USE LONGEST RECORD\nMAIN0450 DS    0H\n         CR    R2,R1                               OVER MAX?\n         BH    MAIN0010                            YES.. STAY PUT\nMAIN0460 DS    0H\n         ITRACE ID=RIGHT_1,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0010                            REBUILD EVERYTHING\nMAIN0470 DS    0H\n         SR    R2,R2\n         ICM   R2,3,DS1LRECL                       RECORD LENGTH\n         BNZ   MAIN0480                            NOT ZERO.. USE IT\n         ICM   R2,3,DS1BLKL                        BLOCK LENGTH\n         BNZ   MAIN0480                            NOT ZERO.. USE IT\n         L     R2,DATASPACE_1_LONGEST_RECORD       USE LONGEST RECORD\nMAIN0480 DS    0H\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR DISPLAYING CCHHR?\n         BO    MAIN0490                            YES\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA   DISPLAYING RBA?\n         BO    MAIN0500                            YES\n         S     R2,DXD_VWIDTH                       MINUS FULL WIDTH\n         B     MAIN0510\nMAIN0490 DS    0H\n         S     R2,DXD_CCHHR_VWIDTH                 MINUS CCHHR WIDTH\n         B     MAIN0510\nMAIN0500 DS    0H\n         S     R2,DXD_RBA_VWIDTH                   MINUS 'RBA' WIDTH\nMAIN0510 DS    0H\n         LA    R2,1(,R2)                           PLUS 1\n         ITRACE ID=RIGHT_2,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*        Submit                                                       *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=SUBMIT\n         TM    DS1RECFM,DS1RECFF                F (OR FB)?\n         BNO   ERR0030                          NO\n         CLC   DS1LRECL,H80                     RECORD LENGTH = 80?\n         BNE   ERR0040                          NO\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSSUBMIT\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                          LOAD OSSUBMIT\n         MVC   SUBREQ_DSN,SESS_DSN              COPY DATASET NAME\n         MVC   SUBREQ_MEMBER,SESS_MEMBER\n         LA    R1,SUBREQ\n         ITRACE ID=CALL_SUB,                                           +\n               RDATA1=R1\n         ICM   R15,15,LOADREQ_EP                OSSUBMIT ENTRY POINT\n         BALR  R14,R15                          CALL OSSUBMIT\n         MVC   SPF_ZCMD,COMM_BLANKS\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*        Process ASCII command                                        *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         CH    R3,H2                            TOO MANY OPERANDS?\n         BH    ERR0010                          YES\n         CH    R3,H1                            MORE THAN ONE OPERAND?\n         BH    MAIN0710                         YES\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         BO    MAIN0730\n         B     MAIN0720                         CLEAR COMMAND\nMAIN0710 DS    0H\n         ICM   R1,15,OPERAND_02_ADDRESS         2ND OPERAND'S ADDRESS\n         CLC   ON(2),0(R1)                      TURN ASCII MODE ON?\n         BE    MAIN0720                         YES\n         CLC   OFF(3),0(R1)                     TURN ASCII MODE OFF?\n         BE    MAIN0730                         YES\n         MVI   COMM_MSG_ID+1,3                  SET MESSAGE ID\n         B     ERR1000\nMAIN0720 DS    0H\n         OI    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         MVC   SPF_ASCII,ASCII\n         B     MAIN0740                         CLEAR COMMAND\nMAIN0730 DS    0H\n         NI    SESS_USER_OPTIONS,255-$OPTIONS_ASCII\n         MVC   SPF_ASCII,COMM_BLANKS\nMAIN0740 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR COMMAND\n         B     MAIN0010                         REBUILD DATA\n* ------------------------------------------------------------------- *\n*        Process FIND command                                         *\n*                                                                     *\n* .. ONE OF THESE DAYS CHANGE THIS TO USE THE OSDSPACE SEARCH         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0800 DS    0H\n         ITRACE ID=FIND\n         CH    R3,H2                            TWO OPERANDS?\n         BH    ERR0060                          TOO MANY\n         BL    ERR0080                          TOO FEW\n         OI    SESS_SEARCH_FLAGS,$SESS_SEARCH_ACTIVE\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         SR    R1,R1\n         ICM   R1,3,OPERAND_02_LENGTH\n         CH    R1,H80                           TOO LONG?\n         BNH   MAIN0810                         NO\n         LH    R1,H80                           LIMIT LENGTH\nMAIN0810 DS    0H\n         BCTR  R1,0\n         STCM  R1,3,SESS_SEARCH_ARG_LENGTH      SAVE LENGTH\n         ICM   R2,15,OPERAND_02_ADDRESS         STRING ADDRESS\n         XC    SESS_SEARCH_ARG,SESS_SEARCH_ARG\n         EX    R1,FIND_MVC                      SAVE STRING\n         ITRACE ID=STRING,                                             +\n               DATA1=(SESS_SEARCH_ARG_LENGTH,2),                       +\n               DATA2=(SESS_SEARCH_ARG,8)\n         B     MAIN0830\nMAIN0820 DS    0H\n         ITRACE ID=RFIND\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         TM    SESS_SEARCH_FLAGS,$SESS_SEARCH_ACTIVE\n         BNO   ERR0170                          NO FIND IS ACTIVE\n         ICM   R1,15,SESS_SEARCH_RECORD         RECORD FROM LAST FIND\n         LA    R1,1(,R1)                        PLUS 1\n         STCM  R1,15,DSPCREQ_RECORD_NBR         STARTING RECORD\nMAIN0830 DS    0H\n         OI    SESS_SEARCH_FLAGS,$SESS_SEARCH_NOW DOING FIND NOW\nMAIN0840 DS    0H\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    MAIN0860                         NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   MAIN0890                         NO\n         ICM   R14,15,DSPCREQ_RECORD_LENGTH     RECORD LENGTH\n         SR    R15,R15\n         ICM   R15,3,SESS_SEARCH_ARG_LENGTH     STRING LENGTH\n         SR    R14,R15                          RECORD LONG ENOUGH?\n         BNH   MAIN0860                         RECORD IS TOO SHORT\n         ICM   R2,15,DSPCREQ_RECORD_ADDR        RECORD ADDRESS\n         LA    R3,1                             INITIALIZE DISP\nMAIN0850 DS    0H\n         EX    R15,FIND_CLC                     STRING FOUND?\n         BE    MAIN0870                         YES\n         A     R3,F1                            PLUS 1\n         A     R2,F1                            PLUS 1\n         BCT   R14,MAIN0850                     LOOP\nMAIN0860 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NBR\n         A     R1,F1                            PLUS 1\n         C     R1,DATASPACE_1_LAST_RECORD       END OF RECORDS?\n         BE    MAIN0890                         YES\n         ST    R1,DSPCREQ_RECORD_NBR\n         B     MAIN0840\nMAIN0870 DS    0H\n         ITRACE ID=FOUND,                                              +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               RDATA2=R2\n         MVC   SESS_SEARCH_RECORD,DSPCREQ_RECORD_NBR\n         ST    R3,DXD_STRING_DISP               DISP WHERE STRING FOUND\n         MVC   SPF_MSG_1(MSG_01_L),MSG_01\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR COMMAND\n         L     R1,DSPCREQ_RECORD_NBR\n         C     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         BL    MAIN0880                         \"ABOVE\" DATA ON SCREEN\n         S     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         C     R1,DXD_VDEPTH                    \"BELOW\" DATA ON SCREEN?\n         BL    MAIN0010                         NO\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DSPCREQ_RECORD_NBR\n         B     MAIN0010\nMAIN0880 DS    0H\n         ITRACE ID=WRAP_UP\n         STCM  R1,15,DATASPACE_1_DISPLAY_FIRST_RECORD\n         B     MAIN0010\nMAIN0890 DS    0H\n         ITRACE ID=NOTFOUND\n         MVC   SPF_MSG_1(MSG_02_L),MSG_02\n         XC    SESS_SEARCH_RECORD,SESS_SEARCH_RECORD RESET (WRAP)\n         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW\n         B     MAIN0150\nFIND_MVC MVC   SESS_SEARCH_ARG(0),0(R2)         SAVE SEARCH ARG\nFIND_CLC CLC   SESS_SEARCH_ARG(0),0(R2)         TEST SEARCH ARG\n* ------------------------------------------------------------------- *\n*        Process LINE (L nnnn or LINE nnnn)                           *\n* ------------------------------------------------------------------- *\nMAIN0900 DS    0H\n         ITRACE ID=LINE\n         CH    R3,H2                            CORRECT NBR OF OPERANDS\n         BL    ERR0080                          TOO FEW\n         BH    ERR0060                          TOO MANY\n         TM    OPERAND_02_TYPE,$OPERAND_NUMERIC\n         BNO   ERR0090                          NO\n         SR    R15,R15\n         ICM   R15,3,OPERAND_02_LENGTH\n         CH    R15,H5\n         BH    ERR0070\n         ICM   R14,15,OPERAND_02_ADDRESS\n         BCTR  R15,0\n         EX    R15,LINE_PACK\n         CVB   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         ITRACE ID=LINE_2,                                             +\n               RDATA1=R1\n         C     R1,DATASPACE_1_LAST_RECORD       TOO HIGH?\n         BH    ERR0100\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR COMMAND\n         B     MAIN0010                         REBUILD\nLINE_PACK PACK COMM_DWORD,0(0,R14)              PACK LINE NUMBER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=DEBUG\n         L     R15,COMM_V_OSDEBUG\n         BALR  R14,R15\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Toggle CCHHR (cylinder, head, record) info on display        *\n*                                                                     *\n*        VSAM data sets have RBA, no CCHHR                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1100 DS    0H\n         ITRACE ID=CCHHR\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM\n         BO    ERR0140\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS\n         BO    ERR0150\n         MVC   SPF_ZCMD,COMM_BLANKS\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR\n         BO    MAIN1110\n         ITRACE ID=CCHHRON\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_CCHHR\n         B     MAIN0010\nMAIN1110 DS    0H\n         ITRACE ID=CCHHROFF\n         NI    SESS_KEYWORD_FLAGS_2,255-$KEYWORD_CCHHR\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Toggle RBA (relative byte address) info for VSAM             *\n*                                                                     *\n*        RBA is only valid for VSAM clusters                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1200 DS    0H\n         ITRACE ID=RBA\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM\n         BNO   ERR0160\n         MVC   SPF_ZCMD,COMM_BLANKS\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA\n         BO    MAIN1210\n         ITRACE ID=RBA_ON\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_RBA\n         B     MAIN0010\nMAIN1210 DS    0H\n         ITRACE ID=RBA_OFF\n         NI    SESS_KEYWORD_FLAGS_2,255-$KEYWORD_RBA\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display list of available commands                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1300 DS    0H\n         ITRACE ID=DISP_CMD\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                           DISPLAY COMMANDS\n         B     MAIN0250\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DSPC_ERR\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         LA    R1,DISPLAY\n         ST    R1,DXD_SPF_PARM1\n         LA    R1,ERROR_PANEL\n         ST    R1,DXD_SPF_PARM2\n         OI    DXD_SPF_PARM2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_BLANKS\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         STH   R15,SESS_RC\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=ERR0030\n         MVI   COMM_MSG_ID+1,1\n         B     ERR1000\nERR0040  DS    0H\n         ITRACE ID=ERR0040\n         MVI   COMM_MSG_ID+1,2\n         B     ERR1000\nERR0050  DS    0H\n         ITRACE ID=ERR0050\n         DC    H'5'\n         DC    C'DISPLAY FAILED'\nERR0060  DS    0H\n         ITRACE ID=ERR0060\n         MVI   COMM_MSG_ID+1,6              TOO MANY OPERANDS\n         B     ERR1000\nERR0070  DS    0H\n         ITRACE ID=ERR0070\n         MVI   COMM_MSG_ID+1,7              OPERAND TOO LONG\n         B     ERR1000\nERR0080  DS    0H\n         ITRACE ID=ERR0080\n         MVI   COMM_MSG_ID+1,8              OPERANDS(S) MISSING\n         B     ERR1000\nERR0090  DS    0H\n         ITRACE ID=ERR0090\n         MVI   COMM_MSG_ID+1,9              OPERAND NOT NUMERIC\n         B     ERR1000\nERR0100  DS    0H\n         ITRACE ID=ERR0100\n         MVI   COMM_MSG_ID+1,10             RECORD NUMBER TOO HIGH\n         B     ERR1000\nERR0110  DS    0H\n         ITRACE ID=ERR0110\n         MVI   COMM_MSG_ID+1,11             INVALID PRIMARY COMMAND\n         B     ERR1000\nERR0120  DS    0H\n         DC    H'0'\nERR0130  DS    0H\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0010\n         DC    H'0'\nERR0140  DS    0H\n         ITRACE ID=ERR0140\n         MVI   COMM_MSG_ID+1,12             CCHHR NOT ALLOWED FOR VSAM\n         B     ERR1000\nERR0150  DS    0H\n         ITRACE ID=ERR0150\n         MVI   COMM_MSG_ID+1,13             CCHHR NOT ALLOWED FOR HFS\n         B     ERR1000\nERR0160  DS    0H\n         ITRACE ID=ERR0160\n         MVI   COMM_MSG_ID+1,14             RBA ONLY FOR VSAM\n         B     ERR1000\nERR0170  DS    0H\n         ITRACE ID=ERR0170\n         MVI   COMM_MSG_ID+1,15             NO FIND ACTIVE\nERR1000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID,0\n         ITRACE ID=BLD_MSG,                                            +\n               DATA1=COMM_MSG_CSECT,                                   +\n               DATA2=(COMM_MSG_ID,2)\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0250\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR           VDATA GETMAINED?\n         BZ    CLEAN010                       NO\n         L     R0,DXD_VDATA_LENGTH            VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         L     R0,DXDSIZE                     WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCANCEL00 DS    0H\n         ITRACE ID=CANCEL\n         MVI   SESS_RC+1,4\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                     RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R8),0(R3)                  COPY DATA TO BUFFER\nMVC_02   MVC   0(0,R8),DXD_WORK_2\nMVC_03   MVC   0(0,R8),COMM_BLANKS\nTR_01    TR    0(0,R8),ASCII_TO_EBCDIC        TRANSLATE ASCII TO EBCDIC\nTR_02    TR    0(0,R8),PRINTABLES             TRANSLATE OUT UNPRINTABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSIZE         CXD\nDXDSTART        DC    Q(DXDBROWS)\nV_OSASMFMT      DC    V(OSASMFMT)\nF1              DC    F'1'\nF2              DC    F'2'\nF100            DC    F'100'\nH1              DC    H'1'\nH2              DC    H'2'\nH5              DC    H'5'\nH80             DC    H'80'\n\nMSG_01          DC    c'String found'\nMSG_01_L        EQU   *-MSG_01\nMSG_02          DC    c'Not found'\nMSG_02_L        EQU   *-MSG_02\n\nMSG_03          DS    0C\nMSG_03_CYLINDER DC    CL5' '\n                DC    C'-'\nMSG_03_HEAD     DC    CL2' '\n                DC    C'-'\nMSG_03_RECORD   DC    CL3' '\n                DC    C'.'\nMSG_03_SEQ      DC    CL3' '\n                DC    C' '\nMSG_03_L        EQU   *-MSG_03\n\nMSG_04          DS    0C\nMSG_04_RBA      DC    X'4020206B2020206B2020206B202120'\n                DC    CL2' '\nMSG_04_L        EQU   *-MSG_04\n\nMSG_05          DS    0C\n                DC    CL5' '\n                DC    AL1($SCREEN_ATTR_HIGH)\nMSG_05_CMD      DC    CL8' '\n                DC    CL2' '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_DESC     DC    CL60' '\nMSG_05_L        EQU   *-MSG_05\n\nSCALE1    DC    C'         1    1    2    2    3    3    4    4    5'\n          DC    C'    5    6    6    7    7    8    8    9    9   10'\n          DC    C'   10   11   11   12   12   13   13   14   14   15'\n          DC    C'   15   16   16   17   17   18'\nSCALE2    DC    C'....5....0....5....0....5....0....5....0....5....0'\n          DC    C'....5....0....5....0....5....0....5....0....5....0'\n          DC    C'....5....0....5....0....5....0....5....0....5....0'\n          DC    C'....5....0....5....0....5....0'\n\nASCII           DC    C'ASCII'\nCANCEL          DC    C'CANCEL '\nCCHHR           DC    C'CCHHR '\nDEBUG           DC    C'DEBUG'\nDISPLAY         DC    CL8'DISPLAY'\nFIND            DC    C'FIND'\nERROR_PANEL     DC    CL8'OSERR'\nCOMMAND_PANEL   DC    CL8'OSCMD'\nOSHFS           DC    CL8'OSHFS'\nOS0001          DC    CL8'OS0001'\nOS0008          DC    CL8'OS0008'\nJOB             DC    C'JOB'\nLINE            DC    C'LINE'\nMODULE_OSSUBMIT DC    CL8'OSSUBMIT'\nOFF             DC    C'OFF'\nON              DC    C'ON'\nRBA             DC    C'RBA '\nRFIND           DC    C'RFIND'\nSUBMIT          DC    CL6'SUBMIT'\n\nASCII_TO_EBCDIC DS    0C\n*                        0 1 2 3 4 5 6 7 8 9 A B C D E F\n                DC    X'000102030405060708090A0B0C0D0E0F' 00-0F\n                DC    X'101112131415161718191A1B1C1D1E1F' 10-1F\n                DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 20-2F\n                DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 30-3F\n                DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 40-4F\n                DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5E6D' 50-5F\n                DC    X'79818283848586878889919293949596' 60-6F\n                DC    X'979899A2A3A4A5A6A7A8A98B6A9BA17F' 70-7F\n                DC    X'808182838485868788898A8B8C8D8E8F' 80-8F\n                DC    X'909192939495969798999A9B9C9D9E9F' 90-9F\n                DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF' A0-AF\n                DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF' B0-BF\n                DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF' C0-CF\n                DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF' D0-DF\n                DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF' E0-EF\n                DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF' F0-FF\n\n\nPRINTABLES      DS    0C\n*                        0 1 2 3 4 5 6 7 8 9 A B C D E F\n                DC    X'40404040404040404040404040404040' 00-0F\n                DC    X'40404040404040404040404040404040' 10-1F\n                DC    X'40404040404040404040404040404040' 20-2F\n                DC    X'40404040404040404040404040404040' 30-3F\n                DC    X'404040404040404040404A4B4C4D4E4F' 40-4F\n                DC    X'504040404040404040405A5B5C5D5E5F' 50-5F\n                DC    X'60614040404040404040406B6C6D6E6F' 60-6F\n                DC    X'404040404040404040407A7B7C7D7E7F' 70-7F\n                DC    X'40818283848586878889408B8C8D8E8F' 80-8F\n                DC    X'40919293949596979899409B9C9D9E9F' 90-9F\n                DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF\n                DC    X'4040404040404040404040BBBCBDBEBF' B0-BF\n                DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n                DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n                DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n                DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\nEDIT_WORD_1     DC    X'40202020202020202120'\nEDIT_WORD_2     DC    X'4021202020202020'\n\nEOF_01          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'---- END OF DATA ------'\nEOF_01_RECORDS  DC    CL9' '\n                DC    C' RECORDS, '\nEOF_01_BYTES    DC    CL9' '\n                DC    C' BYTES -------------------'\nEOF_01_L        EQU   *-EOF_01\n\n                LTORG\n\nCOMMAND_TABLE DS    0C\n              CMD   F,MAIN0800,'Find a string'\n              CMD   L,MAIN0900,'Scroll to line nbr'\n              CMD   FL,0,'List available formats'\n              CMD   OS,0,'Start a new On Screen session'\n              CMD   CAN,CANCEL00,'Cancel processing (exit)'\n              CMD   JOB,MAIN0600,'Submit as a batch job'\n              CMD   RBA,MAIN1200,'Turn display of RBA for VSAM on/off'\n              CMD   SUB,MAIN0600,'Submit as a batch job'\n              CMD   FIND,MAIN0800,'Find a string'\n              CMD   LINE,MAIN0900,'Scroll to line nbr'\n              CMD   LIST,0,'LIST available formats'\n              CMD   SESS,0,'Display list of active On Screen sessions'\n              CMD   ABEND,0,'Cause an 0C1 abend for debugging'\n              CMD   ASCII,MAIN0700,'Turn ASCII translation on/off'\n              CMD   CCHHR,MAIN1100,'Turn display of disk address on/off+\n               '\n              CMD   DEBUG,MAIN1000,'Display internal data'\n              CMD   FLIST,0,'List available formats'\n              CMD   RFIND,MAIN0820,'Repeat previous FIND'\n              CMD   CANCEL,CANCEL00,'Cancel processing (exit)'\n              CMD   FORMAT,0,'Change format or list available formats'\n              CMD   ??,MAIN1300,'Display available commands'\n              DC    X'FF'\n\nBROWSEEND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDBROWS          DSECT\n                  COPY     DXDPREF\n\nDXD_PANEL         DS       CL8\nDXD_VDATA_ADDR    DS       A\nDXD_VDATA_LENGTH  DS       F\n\nDXD_CMD_VDATA_ADDR   DS    A\nDXD_CMD_VDATA_LENGTH DS    F\n\nDXD_VWIDTH        DS       F\nDXD_CCHHR_VWIDTH  DS       F\nDXD_RBA_VWIDTH    DS       F\nDXD_VDEPTH        DS       F\n\nDXD_STRING_DISP   DS       F\n\nDXD_SPF_PARMS     DS       0A\nDXD_SPF_PARM1     DS       A\nDXD_SPF_PARM2     DS       A\n\nDXD_SAVED_R8      DS       A\n\nDXD_FORMATTER     DS       A\n\nDXD_RC            DS       H\n\nSESS_PANEL        DS       CL8\n\nDXD_WORK_1        DS       CL10\nDXD_WORK_2        DS       CL80\n\n                  DSPCREQ  DSECT=NO\n                  LOADREQ  DSECT=NO\n                  SUBREQ   DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT_1 DSECT\n         IBMMAC   VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSBROWSE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSCMD": {"ttr": 2054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Y\\x01\\t!o\\x01\\t)/\\x15\\x14\\x01M\\x01=\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-08-04T00:00:00", "modifydate": "2009-10-19T15:14:59", "lines": 333, "newlines": 317, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSCMD                                                 *\n*                                                                     *\n*  Display or search command table(s)                                 *\n*                                                                     *\n*  There can be two sets of commands                                  *\n*  This allows a main-menu to have commands and sub functions from    *\n*  the main menu to also have commands.  If both command table        *\n*  addresses are supplied, the sub commands are searched or displayed *\n*  first.                                                             *\n*                                                                     *\n*       COMM_MAIN_COMMAND_TABLE   should be the main menu (or if      *\n*                                 there is no \"main menu/sub function\"*\n*                                 type situation, this would be the   *\n*                                 address of the only command table.  *\n*                                                                     *\n*       COMM_SUB_COMMAND_TABLE    should be the sub function commands.*\n*                                                                     *\n*  Commands are defined using the CMD macro.                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSCMD    CSECT\nOSCMD    AMODE 31\nOSCMD    RMODE ANY\n         USING OSCOMM,R12\n         USING OSCMD,R15\n         B     INIT0000\nMODID    DC    CL8'OSCMD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(CMDEND-OSCMD)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING SESSION,R11                    DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSCMD,R10                      DEFINE BASE\n         L     R15,COMM_DXD\n         A     R15,DXD_START\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDCMD,R13\n         MVC   DXD_CSECT,MODID\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         L     R6,COMM_MAIN_COMMAND_TABLE     <--- for now\n         ST    R6,DXD_COMMAND_TABLE           SAVE COMMAND TABLE ADDR\n         USING COMMAND_DSECT,R6\n         NI    SESS_COMMAND_FLAGS,255-$SESS_COMMAND_FOUND\n         XC    DXD_COMMAND_ADDR,DXD_COMMAND_ADDR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         BO    MAIN0000                       YES\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         BO    MAIN1000                       YES\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display list of available commands                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_ZCMD,COMM_BLANKS\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET VDATA FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA_LENGTH\n         ST    R1,DXD_VDATA_ADDR\nMAIN0010 DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE VDATA\n\n         L     R8,DXD_VDATA_ADDR              VDATA ADDRESS\n         L     R7,SPF_VDEPTH                  NUMBER OF LINES\n         ST    R6,DXD_FIRST_CMD               SAVE FIRST COMMAND\nMAIN0020 DS    0H\n         ITRACE ID=CMD,                                                +\n               DATA1=COMMAND_CMD,                                      +\n               RDATA2=R7\n         MVC   0(MSG01_L,R8),MSG01\nVDATA    USING MSG01,R8\n         MVC   VDATA.MSG01_CMD,COMMAND_CMD    COPY COMMAND\n         MVC   VDATA.MSG01_DESC,COMMAND_DESC  COPY DESCRIPTION\n         ST    R6,DXD_LAST_CMD                SAVE AS LAST COMMAND\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0030\n         B     MAIN0040                       SCREEN IS FULL\nMAIN0030 DS    0H\n         LA    R6,COMMAND_DSECT_L(,R6)        NEXT COMMAND\n         CLI   0(R6),X'FF'                    END OF COMMAND TABLE?\n         BNE   MAIN0020                       NO\nMAIN0040 DS    0H\n         L     R0,DXD_VDATA_LENGTH            VDATA LENGTH\n         L     R1,DXD_VDATA_ADDR              VDATA ADDRESS\n         ST    R0,SESS_DISP_VDATA_LENGTH\n         ST    R1,SESS_DISP_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE SET VDATA FUNCTION\n         L     R15,COMM_V_OSVDATA             OSVDATA ENTRY POINT\n         BALR  R14,R15                        VDEFINE VDATA STORAGE\n         LA    R1,DISPLAY                     SPF CMD\n         ST    R1,DXD_SPF1                    SET ADDR\n         LA    R1,PANEL_NAME                  PANEL NAME\n         ST    R1,DXD_SPF2                    SET ADDR\n         OI    DXD_SPF2,X'80'                 SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               PARM LIST\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        DISPLAY LIST OF COMMANDS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0050 DS    0H\n         LA    R1,VGET                        COMMAND\n         ST    R1,DXD_SPF1                    SET ADDRESS\n         LA    R1,NAME_LIST                   SYSTEM VARIABLES\n         ST    R1,DXD_SPF2                    SET ADDRESS\n         OI    DXD_SPF2,X'80'                 FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARM LIST\n         ITRACE ID=VGET_2,                                             +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK               SPF INTERFACE\n         BALR  R14,R15                        VGET SPF VARIABLE(S)\n         ITRACE ID=VGET2_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   MAIN0060                       NO\n         TM    SPF_FLAGS,$SPF_VPUT            VPUT ALREADY ISSUED?\n         BO    MAIN0070                       YES\n* ------------------------------------------------------------------- *\n*       UPDATE SPF VARIABLES                                          *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         OI    SPF_FLAGS,$SPF_VPUT            SET FLAG\n         LA    R1,VPUT                        COMMAND\n         ST    R1,DXD_SPF1                    SET ADDRESS\n         LA    R1,NAME_LIST\n         ST    R1,DXD_SPF2\n         OI    DXD_SPF2,X'80'                 SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK               SPF INTERFACE\n         BALR  R14,R15                        UPDATE SPF VARIABLE(S)\n         ITRACE ID=VPUT2_RC,                                           +\n               RDATA1=R15\n         B     MAIN0050                       DO VGET\nMAIN0070 DS    0H\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    MAIN0080                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    MAIN0100                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    MAIN0120\n         CLI   SPF_ZVERB,C'U'                 UP\n         BE    MAIN0140\n         B     EXIT0000\nMAIN0080 DS    0H\n         L     R6,DXD_COMMAND_TABLE           COMMAND TABLE ADDR\nMAIN0090 DS    0H\n         LA    R1,COMMAND_DSECT_L(,R6)        NEXT COMMAND\n         CLI   0(R1),X'FF'                    END OF TABLE?\n         BE    MAIN0010                       YES\n         LR    R6,R1                          COPY ADDR\n         B     MAIN0090\nMAIN0100 DS    0H\n         CLI   SPF_ZSCROLLA,C'M'              MAX (BOTTOM)?\n         BE    MAIN0080                       YES\n         L     R6,DXD_FIRST_CMD               FIRST CMD ON DISPLAY\n         L     R7,SPF_ZSCROLLN                NBR OF LINES TO SCROLL\nMAIN0110 DS    0H\n         LA    R1,COMMAND_DSECT_L(,R6)        NEXT COMMAND\n         CLI   0(R1),X'FF'                    END OF TABLE?\n         BE    MAIN0010                       YES\n         LR    R6,R1                          COPY ADDRESS\n         BCT   R7,MAIN0110                    LOOP\n         B     MAIN0010\nMAIN0120 DS    0H\n         L     R6,DXD_FIRST_CMD               FIRST CMD ON DISPLAY\nMAIN0130 DS    0H\n         C     R6,DXD_COMMAND_TABLE           AT TOP OF TABLE?\n         BE    MAIN0010                       YES\n         SH    R6,=Y(COMMAND_DSECT_L)         MINUS 1 ENTRY\n         B     MAIN0130\nMAIN0140 DS    0H\n         CLI   SPF_ZSCROLLA,C'M'              MAX (TOP)?\n         BE    MAIN0120                       YES\n         L     R6,DXD_FIRST_CMD               FIRST ON DISPLAY\n         L     R7,SPF_ZSCROLLN                NBR OF LINES TO SCROLL\nMAIN0150 DS    0H\n         C     R6,DXD_COMMAND_TABLE           AT TOP OF TABLE?\n         BE    MAIN0010                       YES\n         SH    R6,=Y(COMMAND_DSECT_L)         MINUS 1 ENTRY\n         BCT   R7,MAIN0150                    LOOP\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=SEARCH\n         SR    R1,R1                          CLEAR R1\n         L     R2,SESS_COMMAND_ADDRESS        COMMAND ADDRESS\n         L     R6,DXD_COMMAND_TABLE           COMMAND TABLE ADDRESS\nMAIN1010 DS    0H\n         CLC   SESS_COMMAND_LENGTH,COMMAND_LENGTH\n         BNE   MAIN1020                       NOT SAME LENGTH\n         ICM   R1,3,COMMAND_LENGTH            COMMAND LENGTH\n         BCTR  R1,0                           FOR EX\n         EX    R1,CMD_CLC                     COMMAND LOCATED?\n         BE    MAIN1030                       YES\nMAIN1020 DS    0H\n         LA    R6,COMMAND_DSECT_L(,R6)        NEXT COMMAND\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BE    MAIN1040                       YES\n         B     MAIN1010\nMAIN1030 DS    0H\n         ITRACE ID=CMD_FND,                                            +\n               DATA1=COMMAND_ADDR\n         OI    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         MVC   DXD_COMMAND_ADDR,COMMAND_ADDR\n         B     EXIT0000\nCMD_CLC  CLC   COMMAND_CMD(0),0(R2)           COMPARE COMMAND\nMAIN1040 DS    0H\n         ITRACE ID=NOT_FND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R1,15,DXD_VDATA_ADDR\n         BZ    EXIT0010\n         ST    R0,DXD_VDATA_LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nEXIT0010 DS    0H\n         L     R15,DXD_COMMAND_ADDR\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START       DC    Q(DXDCMD)\n\nMSG01           DS    0C\n                DC    CL5' '\n                DC    AL1($SCREEN_ATTR_HIGH)\nMSG01_CMD       DC    CL8' '\n                DC    CL2' '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG01_DESC      DC    CL60' '\nMSG01_L         EQU   *-MSG01\n\nDISPLAY         DC    CL8'DISPLAY'\nVGET            DC    CL8'VGET'\nVPUT            DC    CL8'VPUT'\nPANEL_NAME      DC    CL8'OSCMD'\nNAME_LIST       DC    C'(ZSCROLLA ZSCROLLN ZVERB)'\n\n                LTORG\n\nCMDEND          EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDCMD            DSECT\n                  COPY     DXDPREF\n\nDXD_VDATA_ADDR    DS       A\nDXD_VDATA_LENGTH  DS       F\n\nDXD_SPF_PARMS     DS       0A\nDXD_SPF1          DS       A\nDXD_SPF2          DS       A\n\nDXD_COMMAND_TABLE DS       A\nDXD_FIRST_CMD     DS       A\nDXD_LAST_CMD      DS       A\n\nDXD_COMMAND_ADDR  DS       A\n\nDXD_RC            DS       H\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     COMMAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSCMD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSCNFRM": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01\\t!\\x0f\\x01\\t(_\\t\"\\x00\\x88\\x00\\x88\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-10-12T09:22:36", "lines": 136, "newlines": 136, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSCNFRM                                               *\n*                                                                     *\n*  Before various functions such as deleting a data set or a PDS      *\n*  member, On Screen prompts the user to confirm their intention.     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSCNFRM  CSECT\nOSCNFRM  AMODE 31\nOSCNFRM  RMODE ANY\n         USING OSCOMM,R12\n         USING OSCNFRM,R15\n         B     INIT0000\nMODID    DC    CL8'OSCNFRM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(CNFRMEND-OSCNFRM)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING SESSION,R11                    DEFINE SESSION BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSCNFRM,R10                    DEFINE BASE\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         L     R1,COMM_DXD\n         A     R1,DXD_START\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING DXDCNFRM,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         MVC   SPF_YES_OR_NO,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=DISPLAY\n         LA    R1,C_DISPLAY                   COMMAND\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SESS_DISP_PANEL             PANEL NAME\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_1\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_BLANKS\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         LTR   R15,R15\n         BNZ   EXIT0000\n         OC    SPF_YES_OR_NO,COMM_BLANKS\n         CLC   YES,SPF_YES_OR_NO\n         BE    EXIT0000\n         CLC   NO,SPF_YES_OR_NO\n         BE    EXIT0000\n         CLC   YE,SPF_YES_OR_NO\n         BE    EXIT0000\n         CLC   Y,SPF_YES_OR_NO\n         BE    EXIT0000\n         CLC   N,SPF_YES_OR_NO\n         BE    EXIT0000\n         CLC   ALL,SPF_YES_OR_NO\n         BE    EXIT0000\n         MVC   SPF_MSG_1(MSG_01_L),MSG_01\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(SPF_YES_OR_NO,3)\n         L     R13,4(,R13)                    RESTORE SAVE AREA\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC    Q(DXDCNFRM)\nC_DISPLAY      DC    CL8'DISPLAY'\nALL            DC    C'ALL'\nN              DC    C'N  '\nNO             DC    C'NO '\nY              DC    C'Y  '\nYE             DC    C'YE '\nYES            DC    C'YES'\n\nMSG_01         DS    0C\n               DC    C'Reply y(es) or n(o)'\nMSG_01_L       EQU   *-MSG_01\n\n               LTORG\n\nCNFRMEND       EQU    *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDCNFRM       DSECT\n               COPY   DXDPREF\nDXD_SPF_1      DS     A\nDXD_SPF_2      DS     A\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY   ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY   TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY   REGEQU\n               END    OSCNFRM\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSCOMM": {"ttr": 9219, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x10\\x00_\\x01\\x10\\x00_\\x10 \\x00\\x18\\x00\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-01-05T00:00:00", "modifydate": "2010-01-05T10:20:07", "lines": 24, "newlines": 24, "modlines": 0, "user": "RLRICE"}, "text": "OSCOMM   CSECT\nOSCOMM   AMODE  24\nOSCOMM   RMODE  24\n         USING  OSCOMM,R12\n         USING  SESSION,R11\n         COMMON TYPE=CSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY  TRENTRY\n* ------------------------------------------------------------------- *\nDUMMY    DSECT\n         COPY  DXDPREF\n* ------------------------------------------------------------------- *\n         COPY  REGEQU\n         END   OSCOMM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OSDAIR": {"ttr": 8708, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x12\\x01\\t!\\x0f\\x01\\t6_\\x14\\x01\\x02\\x06\\x01\\xbe\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-31T14:01:12", "lines": 518, "newlines": 446, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSDAIR                                                *\n*                                                                     *\n*  Interface with the dynamic allocation (DAIR)                       *\n*                                                                     *\n*  The parameters are passed via a DAIRREQ control block.             *\n*                                                                     *\n*  The DYNALLOC (SVC 99) return code (R15), error, and reason         *\n*  codes are passed back in the same DAIRREQ block.                   *\n*                                                                     *\n*  If the return code is non zero, OSMSG will be called to            *\n*  create messages that are in display format.                        *\n*                                                                     *\n*                                                                     *\n*  DAIRREQ is in the MACLIB.                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDAIR   CSECT\nOSDAIR   AMODE  31\nOSDAIR   RMODE  ANY\n         USING  OSDAIR,R15\n         USING  OSCOMM,R12\n         USING  SESSION,R11\n         B      INIT0000\nMODID    DC     CL8'OSDAIR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(DAIREND-OSDAIR)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSDAIR,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDDAIR,R13                    DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         MVC   DXD_UNIT,COMM_BLANKS\n         MVC   DXD_VOLSER,COMM_BLANKS\n* ------------------------------------------------------------------- *\n         LR    R9,R1\n         USING DAIRREQ,R9                     DEFINE BASE\n         USING S99RB,DXD_SVC99_RB\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9,                                              +\n               DATA2=(DAIR_FUNC,1)\n         TM    DXD_FLAGS,$FLAG_INIT           WORK AREA INITIALIZED?\n         BO    DAIR0010                       YES\n         ITRACE ID=INIT\n         MVC   DXD_CSECT,MODID\n         MVC   DXD_TEXT_UNITS(TEXT_UNITS_L),TEXT_UNITS_I\n         XC    DXD_SVC99_RB(S99RBEND-S99RB),DXD_SVC99_RB\n         LA    R1,DXD_SVC99_RB\n         ST    R1,DXD_SVC99_RB_ADDRESS\n         OI    DXD_SVC99_RB_ADDRESS,X'80'\n         MVI   S99RBLN,S99RBEND-S99RB\n         LA    R1,DXD_TEXT_POINTER_1\n         ST    R1,S99TXTPP                    FIRST TEXT UNIT ADDRESS\n         OI    DXD_FLAGS,$FLAG_INIT           SET INIT INDICATOR\nDAIR0010 DS    0H\n         CLI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATE?\n         BE    DAIR0100                       YES\n         CLI   DAIR_FUNC,$DAIR_FREE           FREE?\n         BE    DAIR0300                       YES\n         CLI   DAIR_FUNC,$DAIR_CONCAT         CONCATENATE?\n         BE    DAIR0400                       YES\n         ABEND 1,DUMP,,USER                   BAD NEWS\n* ------------------------------------------------------------------- *\n*        Allocation                                                   *\n* ------------------------------------------------------------------- *\nDAIR0100 DS    0H\n         ITRACE ID=ALLOC\n         MVI   S99VERB,S99VRBAL               SET VERB\n         TM    DAIR_OPTS,$DAIR_SYSOUT         SYSOUT?\n         BO    DAIR0200                       YES\n         TM    DAIR_OPTS,$DAIR_USE_DD\n         BO    DAIR0110\n         AP    COMM_DD_NUMBER,P1              ADD 1\n         MVC   DXD_DD,DD_EDIT_WORD            INITIALIZE WITH EDIT WORD\n         ED    DXD_DD,COMM_DD_NUMBER\n         MVC   DXD_DD(L'OS_DD),OS_DD          SET DD PREFIX\n         MVC   DAIR_DD,DXD_DD                 PASS IT BACK TO CALLER\n         ITRACE ID=NEW_DD,                                             +\n               DATA1=DAIR_DD\n         B     DAIR0120\nDAIR0110 DS    0H\n         ITRACE ID=USE_DD,                                             +\n               DATA1=DAIR_DD\n         MVC   DXD_DD,DAIR_DD                 COPY SPECIFIED DD NAME\nDAIR0120 DS    0H\n         TM    DAIR_OPTS,$DAIR_INTRDR         INTERNAL READER?\n         BO    DAIR0210                       YES\n         TM    DAIR_OPTS,$DAIR_DUMMY          DUMMY?\n         BO    DAIR0220                       YES\n         TM    DAIR_OPTS,$DAIR_VOLUME         ALLOCATE VOLUME?\n         BO    DAIR0230                       YES\n         TM    DAIR_OPTS,$DAIR_TEMP           TEMP?\n         BO    DAIR0240                       YES\n         LA    R2,DXD_TEXT_POINTER_1          FIRST TEXT UNIT POINTER\n         LA    R1,DXD_DD_TEXT_UNITS           DD TEXT UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)\n         MVC   DXD_DSN,DAIR_DSN               COPY DATA SET NAME\n         ITRACE ID=DSN_1,                                              +\n               DATA1=DXD_DSN+00,                                       +\n               DATA2=DXD_DSN+08\n         ITRACE ID=DSN_2,                                              +\n               DATA1=DXD_DSN+16,                                       +\n               DATA2=DXD_DSN+24\n         ITRACE ID=DSN_3,                                              +\n               DATA1=DXD_DSN+32,                                       +\n               DATA2=DXD_DSN+40\n         LA    R1,DXD_DSN_TEXT_UNITS          DSN TEXT UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT ADDRESS\n         MVC   DXD_INIT_DISP,DAIR_DISP\n         LA    R1,DXD_INIT_DISP_TEXT_UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT ADDRESS\n         CLI   DAIR_DISP,$DAIR_DISP_NEW       NEW?\n         BE    DAIR0130                       YES\n         CLC   DAIR_MEMBER,COMM_BLANKS        MEMBER?\n         BE    DAIR0140                       NO\n         MVC   DXD_MEMBER,DAIR_MEMBER         COPY MEMBER NAME\n         ITRACE ID=MEMBER,                                             +\n               DATA1=DXD_MEMBER\n         LA    R1,DXD_MEMBER_TEXT_UNITS       MEMBER TEXT UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT ADDRESS\n         B     DAIR0140                       SKIP CATLG TEXT UNITS\nDAIR0130 DS    0H\n         LA    R1,DXD_NORM_DISP_TEXT_UNITS    DISP (CATLG)\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT ADDRESS\nDAIR0140 DS    0H\n         CLC   DAIR_VOLSER,COMM_BLANKS        VOLSER GIVEN?\n         BE    DAIR0160                       NO\n         MVC   DXD_VOLSER,DAIR_VOLSER         COPY VOLSER\n         LA    R1,DXD_VOLSER_TEXT_UNITS       TEXT UNIT ADDRESS\n         ST    R1,0(,R2)                      SET ADDRESS IN PARM LIST\n         LA    R2,4(,R2)                      NEXT TEXT UNIT POINTER\n         MVC   DXD_UNIT,DAIR_UNIT             COPY UNIT NAME\n         CLC   DXD_UNIT,COMM_BLANKS           UNIT GIVEN?\n         BNE   DAIR0150                       YES\n         MVC   DXD_UNIT,SYSALLDA              SET UNIT TO SYSALLDA\nDAIR0150 DS    0H\n         ITRACE ID=VOLSER,                                             +\n               DATA1=(DXD_VOLSER,6),                                   +\n               DATA2=DXD_UNIT\n         LA    R1,DXD_UNIT_TEXT_UNITS         TEXT UNIT ADDRESS\n         ST    R1,0(,R2)                      SET ADDRESS IN PARM LIST\n         LA    R2,4(,R2)                      NEXT TEXT UNIT POINTER\n         B     DAIR0170\nDAIR0160 DS    0H\n         MVC   DXD_UNIT,DAIR_UNIT             COPY UNIT NAME\n         CLC   DXD_UNIT,COMM_BLANKS           UNIT GIVEN?\n         BE    DAIR0170                       NO\n         ITRACE ID=UNIT,                                               +\n               DATA1=DXD_UNIT\n         MVC   DXD_UNIT,SYSALLDA              SET UNIT NAME\n         LA    R1,DXD_UNIT_TEXT_UNITS         TEXT UNIT ADDRESS\n         ST    R1,0(,R2)                      SET ADDRESS IN PARM LIST\n         LA    R2,4(,R2)                      NEXT TEXT UNIT POINTER\nDAIR0170 DS    0H\n         CLI   DAIR_DISP,$DAIR_DISP_NEW       NEW?\n         BNE   DAIR0180                       NO\n         LA    R1,DXD_SPACE_UNITS_TEXT_UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT TEXT UNIT ADDRESS\n         MVC   DXD_PRI,DAIR_PRI               COPY PRIMARY QTY\n         LA    R1,DXD_PRI_TEXT_UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT TEXT UNIT ADDRESS\n         MVC   DXD_SEC,DAIR_SEC               COPY PRIMARY QTY\n         LA    R1,DXD_SEC_TEXT_UNITS\n         ST    R1,0(,R2)                      SET ADDRESS\n         LA    R2,4(,R2)                      NEXT TEXT UNIT ADDRESS\nDAIR0180 DS    0H\n         SH    R2,H4                          LAST USED 'POINTER'\n         OI    0(R2),X'80'                    FLAG END-OF-LIST\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Allocate SYSOUT (with FREE=CLOSE)                            *\n* ------------------------------------------------------------------- *\nDAIR0200 DS    0H\n         ITRACE ID=SYSOUT,                                             +\n               DATA1=DAIR_DD,                                          +\n               DATA2=(DAIR_SYSOUT,1)\n         MVC   DXD_DD,DAIR_DD\n         MVC   DXD_SYSOUT,DAIR_SYSOUT\n         LA    R1,DXD_DD_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_1\n         LA    R1,DXD_SYSOUT_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_2\n         LA    R1,DXD_FREE_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_3\n         OI    DXD_TEXT_POINTER_3,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Allocate Internal reader (with FREE=CLOSE)                   *\n* ------------------------------------------------------------------- *\nDAIR0210 DS    0H\n         ITRACE ID=INTRDR,                                             +\n               DATA1=DAIR_DD,                                          +\n               DATA2=(DAIR_SYSOUT,1)\n         MVC   DXD_DD,DAIR_DD\n         MVC   DXD_SYSOUT,DAIR_SYSOUT\n         LA    R1,DXD_DD_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_1\n         LA    R1,DXD_SYSOUT_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_2\n         LA    R1,DXD_FREE_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_3\n         LA    R1,DXD_SYSOUT_PROGRAM_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_4\n         OI    DXD_TEXT_POINTER_4,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Allocate DUMMY DD                                            *\n* ------------------------------------------------------------------- *\nDAIR0220 DS    0H\n         ITRACE ID=DUMMY\n         LA    R1,DXD_DD_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_1\n         LA    R1,DXD_DUMMY_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_2\n         OI    DXD_TEXT_POINTER_2,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Allocate a volume                                            *\n* ------------------------------------------------------------------- *\nDAIR0230 DS    0H\n         ITRACE ID=VOLUME\n         MVC   DXD_INIT_DISP,DAIR_DISP\n         MVC   DXD_VOLSER,SESS_VOLSER\n         MVC   DXD_UNIT,SYSALLDA\n         LA    R1,DXD_DD_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_1\n         LA    R1,DXD_UNIT_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_2\n         LA    R1,DXD_VOLSER_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_3\n         LA    R1,DXD_INIT_DISP_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_4\n         OI    DXD_TEXT_POINTER_4,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Allocate a temp data set                                     *\n* ------------------------------------------------------------------- *\nDAIR0240 DS    0H\n         ITRACE ID=TEMP\n         MVC   DXD_DSN,COMM_BLANKS\n         AP    COMM_DD_NUMBER,P1              ADD 1\n         MVC   DXD_DSN(L'DD_EDIT_WORD),DD_EDIT_WORD\n         ED    DXD_DSN(L'DD_EDIT_WORD),COMM_DD_NUMBER\n         MVI   DXD_DSN+0,C'&&'                INSERT AN AMPERSAND\n         MVI   DXD_DSN+1,C'&&'                INSERT SECOND AMPERSAND\n         MVI   DXD_DSN+2,C'T'                 INSERT A 'T'\n         MVI   DXD_INIT_DISP,X'04'            DISP=NEW\n         MVC   DXD_UNIT,SYSDA                 UNIT=SYSDA\n         OC    DAIR_PRI,DAIR_PRI              USER SPECIFIED SPACE?\n         BNZ   DAIR0250                       YES\n         MVC   DXD_PRI,NINETY                 PRIMARY QTY=90\n         MVC   DXD_SEC,NINETY                 SECONDARY QTY=90\n         B     DAIR0260\nDAIR0250 DS    0H\n         MVC   DXD_PRI,DAIR_PRI               USE USER QTY\n         MVC   DXD_SEC,DAIR_SEC\nDAIR0260 DS    0H\n         LA    R1,DXD_DD_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_1\n         LA    R1,DXD_INIT_DISP_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_2\n         LA    R1,DXD_UNIT_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_3\n         LA    R1,DXD_PRI_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_4\n         LA    R1,DXD_SEC_TEXT_UNITS\n         ST    R1,DXD_TEXT_POINTER_5\n         OI    DXD_TEXT_POINTER_5,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Free a DD                                                    *\n* ------------------------------------------------------------------- *\nDAIR0300 DS    0H\n         ITRACE ID=FREE,                                               +\n               DATA1=DAIR_DD\n         MVI   S99VERB,S99VRBUN               SET VERB\n         MVC   DXD_DD,DAIR_DD\n         LA    R1,DXD_DD_TEXT_UNITS           DD TEXT UNITS\n         ST    R1,DXD_TEXT_POINTER_1          SET ADDRESS\n         OI    DXD_TEXT_POINTER_1,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*        Concatenate DDs                                              *\n* ------------------------------------------------------------------- *\nDAIR0400 DS    0H\n         ITRACE ID=CONCAT,                                             +\n               DATA1=DAIR_DD,                 .. 1ST DD                +\n               DATA2=DAIR_DSN                 .. 2ND DD\n         MVI   S99VERB,S99VRBCC               SET VERB\n         MVC   DXD_CONCAT_DD1,DAIR_DD         COPY DD 1\n         MVC   DXD_CONCAT_DD2,DAIR_DSN        COPY DD 2\n         LA    R1,DXD_CONCAT_TEXT_UNITS       CONCAT TEXT UNITS\n         ST    R1,DXD_TEXT_POINTER_1          SET ADDRESS\n         OI    DXD_TEXT_POINTER_1,X'80'\n         B     DAIR0500\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0500 DS    0H\n         LA    R1,DXD_SVC99_RB_ADDRESS\n         ITRACE ID=SVC_99,                                             +\n               RDATA1=R1\n         SVC   99                             ISSUE THE SVC\n         STCM  R15,3,DAIR_R15                 SAVE R15\n         MVC   DAIR_ERROR,S99ERROR            COPY ERROR CODE\n         MVC   DAIR_INFO,S99INFO              COPY INFO CODE\n         ITRACE ID=SVC_99RC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=(DAIR_ERROR,4)\n         LTR   R15,R15                        SUCCESSFUL?\n         BZ    EXIT0000                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    DAIR_OPTS,$DAIR_NO_MSGS        MESSAGES WANTED?\n         BO    EXIT0000                       NO\n         MVC   COMM_MSG_CSECT,MODID           SET CSECT NAME\n         CLI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATING?\n         BNE   ERR0020                        NO\n         MVI   COMM_MSG_ID+1,1                ALLOCATION MESSAGE\n         B     ERR0030\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2                DE-ALLOCATION\nERR0030  DS    0H\n         MVC   COMM_INFO_01(l'DAIR_DD),DAIR_DD\n         MVC   COMM_INFO_02(l'DAIR_DSN),DAIR_DSN\n         MVC   COMM_INFO_03(l'DAIR_MEMBER),DAIR_MEMBER\n         MVC   COMM_DWORD,DAIR_R15            COPY R15, ERROR, AND INFO\n         L     R15,COMM_V_OSMSG               OSMSG ENTRY POINT\n         BALR  R14,R15                        BUILD MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE SAVE AREA\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC    Q(DXDDAIR)\nH4            DC    H'4'\nNINETY        DC    AL3(90)\nP1            DC    P'1'\nOS_DD         DC    C'OS'\nDD_EDIT_WORD  DC    X'F020202020202020'\nSYSALLDA      DC    CL8'SYSALLDA'\nSYSDA         DC    CL8'SYSDA'\n\nTEXT_UNITS_I  DS    0X\n              DC    AL2(DALDDNAM)         DDNAME PARMS\n              DC    AL2(1)\n              DC    AL2(8)\n              DC    CL8' '                DDNAME\n              DC    AL2(DALDSNAM)         DATASET NAME PARMS\n              DC    AL2(1)\n              DC    AL2(44)\n              DC    CL44' '               DATASET NAME\n              DC    AL2(DALMEMBR)         MEMBER NAME PARMS\n              DC    AL2(1)\n              DC    AL2(8)\n              DC    CL8' '                DATASET NAME\n              DC    AL2(DALSTATS)         INITIAL DISPOSITION PARMS\n              DC    AL2(1)\n              DC    AL2(1)\n              DC    X'00'                 INITIAL DISPOSITION\n              DC    AL2(DALNDISP)         NORMAL DISPOSITION PARMS\n              DC    AL2(1)\n              DC    AL2(1)\n              DC    X'02'                 NORMAL DISPOSITION\n              DC    AL2(DALUNIT)          UNIT PARAMETERS\n              DC    AL2(1)\n              DC    AL2(8)\n              DC    CL8' '                UNIT NAME\n              DC    AL2(DALVLSER)         VOLSER PARAMETERS\n              DC    AL2(1)\n              DC    AL2(6)\n              DC    CL6' '\n              DC    AL2(DALTRK)           SPACE UNITS\n              DC    AL2(0)\n              DC    AL2(DALPRIME)         PRIMARY SPACE PARAMETERS\n              DC    AL2(1)\n              DC    AL2(3)\n              DC    XL3'0'                PRIMARY SPACE (IN TRACKS)\n              DC    AL2(DALSECND)         SECONDARY SPACE PARAMETERS\n              DC    AL2(1)\n              DC    AL2(3)\n              DC    XL3'0'                SECONDARY SPACE (IN TRACKS)\n              DC    AL2(DALRLSE)          RELEASE UNUSED SPACE\n              DC    AL2(0)\n              DC    AL2(DALSYSOU)         ALLOCATE SYSOUT\n              DC    AL2(1)\n              DC    AL2(1)\n              DC    C'O'                  SYSOUT CLASS\n              DC    AL2(DALCLOSE)         SAME AS FREE=CLOSE\n              DC    AL2(0)\n              DC    AL2(DALSPGNM)         SYSOUT PROGRAM NAME\n              DC    AL2(1)\n              DC    AL2(6)\n              DC    CL6'INTRDR'\n\n              DC    AL2(DALDUMMY)         DUMMY ALLOCATION\n              DC    AL2(0)\n              DC    AL2(0)\n\n              DC    AL2(DCCDDNAM)         DD NAME'S TO CONCAT\n              DC    AL2(2)\n              DC    AL2(8)\n              DC    CL8' '\n              DC    AL2(8)\n              DC    CL8' '\n\nTEXT_UNITS_L  EQU   *-TEXT_UNITS_I\n              LTORG\n\nDAIREND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDAIR                       DSECT\n                              COPY DXDPREF\n\nDXD_SVC99_RB_ADDRESS          DS   A\nDXD_SVC99_RB                  DS   (S99RBEND-S99RB)X\n\nDXD_TEXT_POINTER_1            DS   A\nDXD_TEXT_POINTER_2            DS   A\nDXD_TEXT_POINTER_3            DS   A\nDXD_TEXT_POINTER_4            DS   A\nDXD_TEXT_POINTER_5            DS   A\nDXD_TEXT_POINTER_6            DS   A\nDXD_TEXT_POINTER_7            DS   A\nDXD_TEXT_POINTER_8            DS   A\nDXD_TEXT_POINTER_9            DS   A\n\nDXD_FLAGS                     DS   X\n$FLAG_INIT                    EQU  X'80'\n\nDXD_TEXT_UNITS                DS   0C\nDXD_DD_TEXT_UNITS             DS   AL2,AL2,AL2\nDXD_DD                        DS   CL8\nDXD_DSN_TEXT_UNITS            DS   AL2,AL2,AL2\nDXD_DSN                       DS   CL44\nDXD_MEMBER_TEXT_UNITS         DS   AL2,AL2,AL2\nDXD_MEMBER                    DS   CL8\nDXD_INIT_DISP_TEXT_UNITS      DS   AL2,AL2,AL2\nDXD_INIT_DISP                 DS   X\nDXD_NORM_DISP_TEXT_UNITS      DS   AL2,AL2,AL2\nDXD_NORM_DISP                 DS   X\nDXD_UNIT_TEXT_UNITS           DS   AL2,AL2,AL2\nDXD_UNIT                      DS   CL8\nDXD_VOLSER_TEXT_UNITS         DS   AL2,AL2,AL2\nDXD_VOLSER                    DS   CL6\nDXD_SPACE_UNITS_TEXT_UNITS    DS   AL2,AL2\nDXD_PRI_TEXT_UNITS            DS   AL2,AL2,AL2\nDXD_PRI                       DS   XL3\nDXD_SEC_TEXT_UNITS            DS   AL2,AL2,AL2\nDXD_SEC                       DS   XL3\nDXD_REL_TEXT_UNITS            DS   AL2,AL2\nDXD_SYSOUT_TEXT_UNITS         DS   AL2,AL2,AL2\nDXD_SYSOUT                    DS   C\nDXD_FREE_TEXT_UNITS           DS   AL2,AL2\nDXD_SYSOUT_PROGRAM_TEXT_UNITS DS   AL2,AL2,AL2\nDXD_SYSOUT_PROGRAM            DS   CL6\n\nDXD_DUMMY_TEXT_UNITS          DS   AL2,AL2,AL2\n\nDXD_CONCAT_TEXT_UNITS         DS   AL2,AL2,AL2\nDXD_CONCAT_DD1                DS   CL8\n                              DS   AL2\nDXD_CONCAT_DD2                DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DAIRREQ  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC   S99=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSDAIR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSDEBUG": {"ttr": 8962, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00%\\x01\\t!\\x0f\\x01\\x10\\x00_\\tH\\x02c\\x02f\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-05T09:48:25", "lines": 611, "newlines": 614, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         FDEF  &NAME,&FORMAT,&LENGTH,&PREFIX=\n         GBLC  &GPREF,&GBASE\n         AIF   (T'&PREFIX EQ 'O').FDEF030\n&GPREF   SETC  '&PREFIX'\n         AIF   ('&PREFIX' EQ 'COMM').FDEF010\n         AIF   ('&PREFIX' EQ 'SESS').FDEF020\n         AIF   ('&PREFIX' EQ 'DATASPACE_1').FDEF020\n         MNOTE 12,'INVALID PREFIX'\n         MEXIT\n.FDEF010 ANOP\n&GBASE   SETC  'OSCOMM'\n         MEXIT\n.FDEF020 ANOP\n&GBASE   SETC  'SESSION'\n         MEXIT\n.FDEF030 ANOP\n         DC    CL16'&NAME'                        NAME\n         DC    C'&FORMAT'                         FORMAT\n         DC    AL2(&LENGTH)                       SOURCE LENGTH\n         DC    AL2(&GPREF._&NAME-&GBASE)          DISPLACMENT\n         MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSDEBUG                                               *\n*                                                                     *\n*  Display internal data for debugging                                *\n*                                                                     *\n*  This module does not use OSDISP for displaying panels.             *\n*  Therefore do not set SESS_DISP_PANEL, SESS_DISP_VDATA_ADDR,        *\n*  SESS_DISP_VDATA_LENGTH, or SESS_DISP_CURSOR.                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDEBUG  CSECT\nOSDEBUG  AMODE 31\nOSDEBUG  RMODE ANY\n         USING OSDEBUG,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSDEBUG'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(DEBUGEND-OSDEBUG)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                    SAVE REGISTERS\n         LR    R10,R15                            COPY BASE ADDRESS\n         DROP  R15\n         USING OSDEBUG,R10\n         L     R15,COMM_DXD                       DXD AREA BASE ADDRESS\n         A     R15,DXD_START                      PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                            COPY DXD AREA ADDRESS\n         USING DXDDEBUG,R13                       DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n\n         LA    R1,PANEL_NAME                      PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH\n         ST    R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            VDEFINE VDATA\n         ITRACE ID=VDATA,                                              +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n\n         MVC   DXD_VDEPTH,SPF_VDEPTH              SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH              SAVE WIDTH\n\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         ICM   R15,8,COMM_BLANKS\n         MVCL  R0,R14                             INITIALIZE VDATA\n\n         L     R8,DXD_VDATA_ADDR\n         L     R6,DXD_VDEPTH                      NUMBER OF LINES\n         CLC   DEBUG_SESS,SPF_ZCMD                DISPLAY SESSIONS?\n         BE    DBUG0400                           YES\n         CLC   DEBUG_CHAIN,SPF_ZCMD               DISPLAY SESSIONS?\n         BE    DBUG0400                           YES\n* ------------------------------------------------------------------- *\n*        Process fields in COMMON area                                *\n* ------------------------------------------------------------------- *\n         MVC   0(L'COMMON_HEADING,R8),COMMON_HEADING\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCTR  R6,0\n         ST    R12,DXD_FIELD_BASE                 BASE FOR FIELDS\n         ST    R8,DXD_SAVE_R8                     SAVE BUFFER ADDRESS\n         LA    R7,COMMON_FIELDS                   COMMON AREA FIELDS\n         BAL   R5,DBUG0100\n* ------------------------------------------------------------------- *\n*        Process fields in SESSION area                               *\n* ------------------------------------------------------------------- *\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCTR  R6,0\n         MVC   0(L'SESSION_HEADING,R8),SESSION_HEADING\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCTR  R6,0\n         MVC   DXD_FIELD_BASE,COMM_ACTIVE_SESSION BASE FOR FIELDS\n         LA    R7,SESSION_FIELDS                  SESSION AREA FIELDS\n         BAL   R5,DBUG0100\n* ------------------------------------------------------------------- *\n*        Process COMMAND, DSN, PATH                                   *\n* ------------------------------------------------------------------- *\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCT   R6,DBUG0000\n         B     DBUG1000                           BUFFER FULL\nDBUG0000 DS    0H\n         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE\n         USING MSG_02,R8\n         MVC   MSG_02_NAME,=CL8'COMMAND'\n         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL\n         ICM   R14,15,COMM_COMMAND                INVOKING COMMAND\n         BZ    DBUG0020                           NO COMMAND\n         SR    R15,R15\n         ICM   R15,3,COMM_COMMAND_LENGTH          COMMAND LENGTH\n         BZ    DBUG0020                           NO COMMAND\n         CH    R15,=Y(L'MSG_02_VALUE)             TOO LONG FOR DISPLAY?\n         BNH   DBUG0010                           NO\n         LH    R15,=Y(L'MSG_02_VALUE)             LIMIT LENGTH\nDBUG0010 DS    0H\n         BCTR  R15,0                              FOR EX INSTRUCTION\n         EX    R15,MVC_03                         COPY TO DYNAMIC AREA\n         DROP  R8\n         BCT   R6,DBUG0020                        ACCOUNT FOR LINE\n         B     DBUG1000\nDBUG0020 DS    0H                                 BUFFER FILLED\n         A     R8,DXD_VWIDTH\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH   PATH?\n         BO    DBUG0030                           YES\n         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE\n         USING MSG_02,R8\n         MVC   MSG_02_NAME,=CL8'DSN'              IDENTIFY FIELD\n         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL  SET ATTRIBUTE\n         MVC   MSG_02_VALUE(L'SESS_DSN),SESS_DSN  COPY DATA SET NAME\n         DROP  R8\n         B     DBUG1000\nDBUG0030 DS    0H\n         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE\n         USING MSG_02,R8\n         MVC   MSG_02_NAME,=CL8'PATH'             IDENTIFY FIELD\n         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL  SET ATTRIBUTE\n         MVC   MSG_02_VALUE,SESS_PATH             COPY PATH\n         DROP  R8\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCT   R6,DBUG0040\n         B     DBUG1000                           SCREEN FULL\nDBUG0040 DS    0H\n         MVC   0(L'MSG_02,R8),MSG_02              COPY MESSAGE\n         USING MSG_02,R8\n         MVC   MSG_02_NAME,=CL8'LENGTH'           IDENTIFY FIELD\n         MVI   MSG_02_ATTR_2,$SCREEN_ATTR_NORMAL  SET ATTRIBUTE\n         L     R1,SESS_PATH_LENGTH                PATH LENGTH\n         CVD   R1,COMM_DWORD                      CONVERT TO DECIMAL\n         MVC   MSG_02_VALUE(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    MSG_02_VALUE(L'EDIT_WORD_1),COMM_DWORD+5\n         LA    R15,L'EDIT_WORD_1\nDBUG0050 DS    0H\n         CLI   MSG_02_VALUE,C' '\n         BNE   DBUG1000\n         MVC   MSG_02_VALUE(L'EDIT_WORD_1-1),MSG_02_VALUE+1\n         MVI   MSG_02_VALUE+(L'EDIT_WORD_1-1),C' '\n         BCT   R15,DBUG0050\n         B     DBUG1000\nMVC_03   MVC   MSG_02_VALUE(0),0(R14)\n         DROP  R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDBUG0100 DS    0H\n         USING FIELD,R7                           DEFINE BASE\n         MVI   DXD_SIDE,C'1'                      BUILDING SIDE 1\nDBUG0110 DS    0H\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8                          DEFINE BASE\n         MVI   MSG_01_ATTR_1,$SCREEN_ATTR_HIGH\n         MVI   MSG_01_ATTR_2,$SCREEN_ATTR_NORMAL\n         MVC   MSG_01_NAME_1,FIELD_NAME\n         SR    R15,R15                            CLEAR REGISTER\n         ICM   R15,3,FIELD_DISP                   DISPLACEMENT TO DATA\n         A     R15,DXD_FIELD_BASE                 PLUS BASE\n         CLI   FIELD_FORMAT,C'A'                  ADDRESS?\n         BE    DBUG0120                           YES\n         CLI   FIELD_FORMAT,C'C'                  CHARACTER?\n         BE    DBUG0130                           YES\n         CLI   FIELD_FORMAT,C'F'                  FULLWORD?\n         BE    DBUG0150                           YES\n         CLI   FIELD_FORMAT,C'H'                  HALFWORD\n         BE    DBUG0170                           YES\n         CLI   FIELD_FORMAT,C'P'                  PACKED?\n         BE    DBUG0190                           YES\n         CLI   FIELD_FORMAT,C'X'                  HEX?\n         BE    DBUG0210                           YES\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*        Address                                                      *\n* ------------------------------------------------------------------- *\nDBUG0120 DS    0H\n         UNPK  MSG_01_VALUE_1(9),0(5,R15)\n         TR    MSG_01_VALUE_1(8),COMM_HEXCHAR\n         MVI   MSG_01_VALUE_1+8,C' '\n         B     DBUG0230\n* ------------------------------------------------------------------- *\n*        Character                                                    *\n* ------------------------------------------------------------------- *\nDBUG0130 DS    0H\n         SR    R1,R1\n         ICM   R1,3,FIELD_LENGTH\n         CH    R1,=Y(L'MSG_01_VALUE_1)            TOO LONG?\n         BNH   DBUG0140                           NO\n         LH    R1,=Y(L'MSG_01_VALUE_1)            LIMIT LENGTH\nDBUG0140 DS    0H\n         BCTR  R1,0                               FOR EXECUTE\n         EX    R1,MVC_01                          COPY DATA\n         B     DBUG0230\nMVC_01   MVC   MSG_01_VALUE_1(0),0(R15)           COPY DATA\n* ------------------------------------------------------------------- *\n*        FULLWORD                                                     *\n* ------------------------------------------------------------------- *\nDBUG0150 DS    0H\n         SR    R1,R1                              CLEAR REGISTER\n         ICM   R1,15,0(R15)                       LOAD UP DATA\n         CVD   R1,COMM_DWORD                      CONVERT TO DECIMAL\n         MVC   MSG_01_VALUE_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    MSG_01_VALUE_1(L'EDIT_WORD_2),COMM_DWORD+2\n         LA    R15,L'EDIT_WORD_2\nDBUG0160 DS    0H\n         CLI   MSG_01_VALUE_1,C' '\n         BNE   DBUG0230\n         MVC   MSG_01_VALUE_1(14),MSG_01_VALUE_1+1\n         MVI   MSG_01_VALUE_1+(L'EDIT_WORD_2-1),C' '\n         BCT   R15,DBUG0160\n         B     DBUG0230\n* ------------------------------------------------------------------- *\n*        HALFWORD                                                     *\n* ------------------------------------------------------------------- *\nDBUG0170 DS    0H\n         SR    R1,R1                              CLEAR REGISTER\n         ICM   R1,3,0(R15)                        LOAD UP DATA\n         CVD   R1,COMM_DWORD                      CONVERT TO DECIMAL\n         MVC   MSG_01_VALUE_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    MSG_01_VALUE_1(L'EDIT_WORD_1),COMM_DWORD+5\n         LA    R15,L'EDIT_WORD_2\nDBUG0180 DS    0H\n         CLI   MSG_01_VALUE_1,C' '\n         BNE   DBUG0230\n         MVC   MSG_01_VALUE_1(6),MSG_01_VALUE_1+1\n         MVI   MSG_01_VALUE_1+(L'EDIT_WORD_1-1),C' '\n         BCT   R15,DBUG0180\n         B     DBUG0230\n* ------------------------------------------------------------------- *\n*        Packed decimal                                               *\n* ------------------------------------------------------------------- *\nDBUG0190 DS    0H\n         SR    R1,R1                              CLEAR REGISTER\n         ICM   R1,3,FIELD_LENGTH\n         BCTR  R1,0\n         EX    R1,ZAP_1\n         MVC   MSG_01_VALUE_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    MSG_01_VALUE_1(L'EDIT_WORD_2),COMM_DWORD+2\n         LA    R15,L'EDIT_WORD_2\nDBUG0200 DS    0H\n         CLI   MSG_01_VALUE_1,C' '\n         BNE   DBUG0230\n         MVC   MSG_01_VALUE_1(14),MSG_01_VALUE_1+1\n         MVI   MSG_01_VALUE_1+(L'EDIT_WORD_2-1),C' '\n         BCT   R15,DBUG0200\n         B     DBUG0230\nZAP_1    ZAP   COMM_DWORD,0(0,R15)\n* ------------------------------------------------------------------- *\n*        Hex                                                          *\n* ------------------------------------------------------------------- *\nDBUG0210 DS    0H\n         UNPK  DXD_WORK_1(9),0(5,R15)\n         TR    DXD_WORK_1(8),COMM_HEXCHAR         TRANSLATE\n         SR    R1,R1\n         ICM   R1,3,FIELD_LENGTH\n         CH    R1,H4                              TOO LONG?\n         BNH   DBUG0220                           NO\n         LH    R1,H4\nDBUG0220 DS    0H\n         SLL   R1,1                               MULTIPLY BY TWO\n         BCTR  R1,0\n         EX    R1,MVC_02\n         B     DBUG0230\nMVC_02   MVC   MSG_01_VALUE_1(0),DXD_WORK_1\n* ------------------------------------------------------------------- *\n*        Next field                                                   *\n* ------------------------------------------------------------------- *\nDBUG0230 DS    0H\n         LA    R7,FIELD_L(,R7)                    NEXT FIELD\n         CLI   0(R7),X'FF'                        END OF DATA?\n         BE    DBUG0250                           YES\n         CLI   DXD_SIDE,C'1'                      DOING SIDE 1?\n         BE    DBUG0240                           YES\n\n         L     R8,DXD_SAVE_R8                     RESET BUFFER ADDRESS\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         MVI   DXD_SIDE,C'1'                      SET INDICATOR\n         BCT   R6,DBUG0110                        BUILD NEXT LINE\n         B     DBUG1000                           SCREEN FULL\nDBUG0240 DS    0H\n         ST    R8,DXD_SAVE_R8                     SAVE BUFFER ADDRESS\n         LA    R8,MSG_01_NAME_2                   SET TO SIDE 2\n         MVI   DXD_SIDE,C'2'                      SET INDICATOR\n         B     DBUG0110\n         DROP  R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDBUG0250 DS    0H\n         L     R8,DXD_SAVE_R8                     RESET BUFFER ADDRESS\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCTR  R6,R5                              ACCOUNT FOR LINE\n         B     DBUG1000                           BUFFER FULL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDBUG0400 DS    0H\n         ITRACE ID=CHAIN\n         LTR   R11,R11                            ACTIVE SESSION?\n         BZ    EXIT0000                           NO\nDBUG0410 DS    0H\n         ICM   R2,15,SESS_PREV                    PREVIOUS ON CHAIN?\n         BZ    DBUG0420                           NO\n         LR    R11,R2                             COPY PREVIOUS ADDR\n         B     DBUG0410                           CHECK AGAIN\nDBUG0420 DS    0H\n         MVC   0(MSG_03_L,R8),MSG_03              INITIALIZE MSG\n         USING MSG_03,R8\n         C     R11,COMM_ACTIVE_SESSION            IS THIS ACTIVE?\n         BNE   DBUG0430                           NO\n         MVI   MSG_03_ATTR,$SCREEN_ATTR_HIGH      HIGHLIGHT\nDBUG0430 DS    0H\n         ST    R11,COMM_DWORD                     SESSION BLOCK ADDR\n         UNPK  MSG_03_ADDR(9),COMM_DWORD(5)       UNPACK IT\n         TR    MSG_03_ADDR,COMM_HEXCHAR           TRANSLATE IT\n         UNPK  MSG_03_PREV(9),SESS_PREV(5)        UNPACK PREVIOUS\n         TR    MSG_03_PREV(9),COMM_HEXCHAR        TRANSLATE IT\n         MVI   MSG_03_PREV+8,C' '                 RESTORE CLOBBERED\n         UNPK  MSG_03_NEXT(9),SESS_NEXT(5)        UNPACK NEXT\n         TR    MSG_03_NEXT(9),COMM_HEXCHAR        TRANSLATE IT\n         MVI   MSG_03_NEXT+8,C' '                 RESTORE BLANK\n         UNPK  MSG_03_IO_AREA(9),SESS_IO_AREA(5)  UNPACK I/O ADDR\n         TR    MSG_03_IO_AREA(8),COMM_HEXCHAR     TRANSLATE IT\n         MVI   MSG_03_IO_AREA+8,C' '              RESTORE BLANK\n         A     R8,SPF_VWIDTH                      NEXT LINE\n         BCT   R6,DBUG0440                        ACCOUNT FOR LINE\n         B     DBUG1000                           BUFFER FULL\nDBUG0440 DS    0H\n         ICM   R11,15,SESS_NEXT                   NEXT ON CHAIN\n         BNZ   DBUG0420\n         DROP  R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDBUG1000 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS\n         ITRACE ID=DISPLAY\n         LA    R1,DISPLAY                         COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                       SET IN PARM LIST\n         LA    R1,PANEL_NAME                      PANEL NAME'S ADDRESS\n         ST    R1,DXD_SPF_2                       SET IN PARM LIST\n         OI    DXD_SPF_2,X'80'                    FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                   PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK                   SPF ENTRY POINT\n         BALR  R14,R15                            DISPLAY THE PANEL\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            FREE VDATA\n         MVC   SPF_MSG_1,COMM_BLANKS              RESET MESSAGES\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                    SET MESSAGE ID\n         B     ERR0100\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2                    SET MESSAGE ID\n         B     ERR0100\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3                    SET MESSAGE ID\n         B     ERR0100\nERR0100  DS    0H\n         MVC   COMM_MSG_CSECT,MODID               SET MODULE'S NAME\n         MVI   COMM_MSG_ID,0                      FORCE ZERO\n         L     R15,COMM_V_OSMSG                   OSMSG ENTRY POINT\n         BALR  R14,R15                            BUILD MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                        RESTORE R13\n         LM    R14,R12,12(R13)                    RESTORE REGISTERS\n         SR    R15,R15                            SET RC\n         BR    R14                                RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC    Q(DXDDEBUG)\n\nH3                DC    H'3'\nH4                DC    H'4'\n\nEDIT_WORD_1       DC    X'4020206B202120'\nEDIT_WORD_2       DC    X'4020206B2020206B2020206B202120'\n\nCHARFORM          DC    CL8'CHAR'\nDEBUG_CHAIN       DC    C'DEBUG CHAIN'\nDEBUG_SESS        DC    C'DEBUG SESS'\nDISPLAY           DC    CL8'DISPLAY'\nPQUERY            DC    CL8'PQUERY'\nPANEL_NAME        DC    CL8'OSDEBUG'\nVDATA             DC    CL8'VDATA'\nVDEPTH            DC    CL8'VDEPTH'\nVTYPE             DC    CL8'VTYPE'\nVWIDTH            DC    CL8'VWIDTH'\nVROW              DC    CL8'VROW'\nVCOL              DC    CL8'VCOL'\nVDEFINE           DC    CL8'VDEFINE'\nVDELETE           DC    CL8'VDELETE'\nCOMMON_HEADING    DC    C'COMMON AREA FIELDS'\nSESSION_HEADING   DC    C'SESSION BLOCK FIELDS'\n\nCOMMON_FIELDS     DS    0C\n                  FDEF  PREFIX=COMM\n                  FDEF  COMMAND,A,4\n                  FDEF  COMMAND_LENGTH,H,2\n                  FDEF  USER_LENGTH,H,2\n                  FDEF  USER,C,8\n                  FDEF  ACTIVE_SESSION,A,4\n                  FDEF  DD_NUMBER,P,4\n                  FDEF  V_OSDAIR,A,4\n                  FDEF  V_OSDEBUG,A,4\n                  FDEF  V_OSDSINFO,A,4\n                  FDEF  OSDSPACE,A,4\n                  FDEF  V_OSMSG,A,4\n                  FDEF  V_OSOFILE,A,4\n                  FDEF  V_OSPARSE,A,4\n                  FDEF  V_OSRECALL,A,4\n                  FDEF  V_OSVARMGR,A,4\n                  FDEF  OSSPFD,A,4\n                  FDEF  OSSPFV,A,4\n                  FDEF  ISPLINK,A,4\n                  FDEF  FORMAT_DCB,A,4\n                  FDEF  FORMAT_IO,A,4\n                  FDEF  RECALL_FIRST,A,4\n                  FDEF  RECALL_LAST,A,4\n                  FDEF  RECALL_CURR,A,4\n                  FDEF  DXD,A,4\n                  DC    X'FF'\n\nSESSION_FIELDS    DS    0C\n                  FDEF  PREFIX=SESS\n                  FDEF  DXD_ADDR,A,4\n                  FDEF  DXD_LENGTH,F,4\n                  FDEF  DISP_PANEL,C,8\n                  FDEF  DISP_VDATA_ADDR,A,4\n                  FDEF  DISP_VDATA_LENGTH,X,4\n                  FDEF  DISP_CURSOR,F,4\n                  FDEF  VOLSER,C,6\n                  FDEF  UCB,A,4\n                  FDEF  UCBTYP,X,4\n                  FDEF  IO_AREA,A,4\n                  FDEF  STATUS,X,1\n                  FDEF  NUMBER,F,4\n                  FDEF  FORMAT,C,8\n                  FDEF  DEFAULT_FORMAT,C,8\n                  FDEF  DD,C,8\n                  FDEF  DCB_ADDR,A,4\n                  FDEF  MEMBER,C,8\n                  FDEF  EDIT_FLAGS,X,1\n                  FDEF  SORT,X,1\n                  FDEF  USER_OPTIONS,X,1\n                  FDEF  FROM_KEY,X,8\n                  FDEF  TO_KEY,X,8\n                  FDEF  VSAM_LRECL,F,4\n                  FDEF  VSAM_KEY_LENGTH,F,4\n                  FDEF  VSAM_RKP,F,4\n                  FDEF  TRACKS,H,2\n                  FDEF  PREFIX=DATASPACE_1\n                  FDEF  ALET,X,4\n                  FDEF  TOKEN,X,8\n                  FDEF  NAME,C,8\n                  FDEF  FIRST_RECORD,F,4\n                  FDEF  LAST_RECORD,F,4\n                  FDEF  DISPLAY_FIRST_RECORD,F,4\n                  FDEF  DISPLAY_LAST_RECORD,F,4\n                  FDEF  DISPLAY_FIRST_COLUMN,F,4\n                  FDEF  DISPLAY_LAST_COLUMN,F,4\n                  FDEF  LAST_ADDRESS,A,4\n                  DC    X'FF'\n\n                  LTORG\n\nMSG_01            DS    0C\nMSG_01_ATTR_1     DC    AL01($SCREEN_ATTR_HIGH)\nMSG_01_NAME_1     DC    CL16' '\n                  DC    CL01' '\nMSG_01_ATTR_2     DC    AL01($SCREEN_ATTR_NORMAL)\nMSG_01_VALUE_1    DC    CL20' '\n                  DC    CL01' '\nMSG_01_ATTR_3     DC    AL01($SCREEN_ATTR_HIGH)\nMSG_01_NAME_2     DC    CL16' '\n                  DC    CL01' '\nMSG_01_ATTR_4     DC    AL01($SCREEN_ATTR_NORMAL)\nMSG_01_VALUE_2    DC    CL20' '\nMSG_01_L          EQU   *-MSG_01\n\nMSG_02            DS    0C\nMSG_02_ATTR_1     DC    AL1($SCREEN_ATTR_HIGH)\nMSG_02_NAME       DC    CL8' '\nMSG_02_ATTR_2     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_VALUE      DC    CL70' '\nMSG_02_L          EQU   *-MSG_02\n\nMSG_03            DS    0C\nMSG_03_ATTR       DC    AL1($SCREEN_ATTR_NORMAL)\n                  DC    C'Address '\nMSG_03_ADDR       DC    CL8' '\n                  DC    C'    Previous '\nMSG_03_PREV       DC    CL8' '\n                  DC    C'    Next '\nMSG_03_NEXT       DC    CL8' '\n                  DC    C'    I/O area '\nMSG_03_IO_AREA    DC    CL8' '\n                  DC    C' '\nMSG_03_L          EQU   *-MSG_03\n\nDEBUGEND          EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDEBUG            DSECT\n                    COPY DXDPREF\n\nDXD_SPF_PARMS       DS   0A\nDXD_SPF_1           DS   A\nDXD_SPF_2           DS   A\n\nDXD_FIELD_BASE      DS   A\n\nDXD_VDATA_LENGTH    DS   F\nDXD_VDATA_ADDR      DS   A\n\nDXD_VDEPTH          DS   F\nDXD_VWIDTH          DS   F\n\nDXD_SAVE_R8         DS   A\nDXD_SIDE            DS   C\n\nDXD_WORK_1          DS   CL16\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFIELD        DSECT\nFIELD_NAME   DS   CL16              NAME\nFIELD_FORMAT DS   C                 FORMAT\nFIELD_LENGTH DS   AL2               SOURCE LENGTH\nFIELD_DISP   DS   AL2               DISP INTO OSCOMM\nFIELD_L      EQU  *-FIELD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY REGEQU\n             END  OSDEBUG\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSDESERV": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\"\\x01\\t \\x9f\\x01\\t3o\\x08\\x08\\x01\\xe2\\x01\\xde\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-28T00:00:00", "modifydate": "2009-12-02T08:08:22", "lines": 482, "newlines": 478, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSDESERV                                              *\n*                                                                     *\n*  Obtain PDS or PDS/E directory information                          *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  I HATE EXCPTIONS...                                                *\n*                                                                     *\n*  For everything except directories, the DD for the data set can     *\n*  be de-allocated as soon as the data is read. BUT...                *\n*  Because the directory display can also allow commands that         *\n*  update the directory itself (like deleting or renaming members),   *\n*  the DD is not de-allocated until the \"session\" for displaying      *\n*  this PDS(/E)'s members ends.                                       *\n*                                                                     *\n*  Just to add to the \"fun\", the DCB for obtaining the directory      *\n*  info is basically BSAM but the STOWs used for updating members     *\n*  requires a DCB with BPAM. So, the same DCB is not used for both    *\n*  the DESERV and STOW functions.  In other words this module has     *\n*  a DCB and the display module(s) have different DCBs.               *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  The DESERV service is called to obtain info for the members        *\n*  of PDSes or PDS/Es.  Data is obtained on a 'member-by-member'      *\n*  basis and stored in a data space.  The first member will be        *\n*  stored in record 1, the second in record 2, and so on.             *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDESERV CSECT\nOSDESERV AMODE 31\nOSDESERV RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSDESERV,R15\n         B     INIT0000\nMODID    DC    CL8'OSDESERV'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(DESERVEND-OSDESERV)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSDESERV,R10                   DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSDESERV_WORK_L,                                     +\n               LOC=BELOW\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSDESERV_WORK,R13              DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         MVC   SESS_DATA_LOADER,MODID         IDENTIFY WHO LOADED DATA\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         USING IHADCB,R9                      DEFINE DCB ADDRESS\n         LA    R0,DCB_L\n         ST    R0,SESS_DCB_LENGTH             SET LENGTH\n         GETMAIN RU,                                                   +\n               LV=DCB_L,                                               +\n               LOC=BELOW\n         LR    R9,R1\n         ST    R9,SESS_DCB_ADDR\n         MVC   0(DCB_L,R9),DCB_I              INITIALIZE DCB\n         MVC   WORK_DESERV(DESERV_L),DESERV_I\n         XC    WORK_ADDR,WORK_ADDR\n         XC    WORK_RECORDS,WORK_RECORDS\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,DIR_RECORD                  DIRECTORY RECORD ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,DIR_RECORD_L                RECORD LENGTH\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         MVC   DATASPACE_1_FIRST_RECORD,F1\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPEN,                                               +\n               DATA1=SESS_DD\n         MVC   DCBDDNAM,SESS_DD               SET DD NAME IN DCB\n         OPEN  ((R9),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         TM    DCBOFLGS,DCBOFOPN              SUCCESFUL?\n         BNO   ERR0010                        NO\n         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN\n* ------------------------------------------------------------------- *\n*        Issue DESERV to obtain directory info for all members        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_ALL\n         DESERV FUNC=GET_ALL,                 ALL DIRECTORY ENTRIES    +\n               AREAPTR=WORK_ADDR,             .. BUFFER FOR DATA       +\n               CONN_INTENT=NONE,              .. NO CONNECTION INTENT  +\n               DCB=(R9),                      .. DCB ADDRESS           +\n               RETCODE=WORK_RETURN_CODE,                               +\n               RSNCODE=WORK_REASON_CODE,                               +\n               MF=(E,WORK_DESERV,COMPLETE)\n         ITRACE ID=DE_RC,                                              +\n               DATA1=(WORK_RETURN_CODE,4),                             +\n               DATA2=(WORK_REASON_CODE,4)\n         OC    WORK_RETURN_CODE,WORK_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*        Process the data returned by DESERV                          *\n* ------------------------------------------------------------------- *\n         L     R8,WORK_ADDR                   ADDRESS OF RETURNED DATA\n         USING DESB,R8                        DEFINE BASE\nDESRV000 DS    0H\n         L     R7,DESB_COUNT                  NUMBER OF SMDES\n         LA    R6,DESB_DATA                   FIRST SMDE\n         USING SMDE,R6                        DEFINE BASE\nDESRV010 DS    0H\n         ITRACE ID=SMDE,                                               +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         XC    DIR_RECORD(DIR_RECORD_L),DIR_RECORD\n         MVC   DIR_NAME,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,SMDE_NAME_OFF            OFFSET TO NAME\n         AR    R14,R6                         PLUS BASE\n         SR    R15,R15\n         ICM   R15,3,0(R14)                   LENGTH OF NAME\n         CH    R15,=Y(L'DIR_NAME)             TOO LONG?\n         BNH   DESRV020                       NO\n         OI    DIR_FLAGS,$DIR_NAME_TRUNC\n         LH    R15,=Y(L'DIR_NAME)             LIMIT LENGTH\nDESRV020 DS    0H\n         BCTR  R15,0                          MINUS 1\n         EX    R15,NAME_MVC                   COPY NAME\n         MVC   DIR_TTR,SMDE_MLT\n         TM    SMDE_FLAG,SMDE_FLAG_LMOD       LOAD MODULE?\n         BO    DESRV030                       YES\n         USING DS1FMTID,SESS_DSCB             DEFINE DSCB BASE\n         TM    DS1RECFM,DS1RECFV              VARIABLE (OR UNDEFINED)?\n         BO    DESRV060                       YES\n         CLC   DS1LRECL,H80                   80-BYTE RECORDS?\n         BNE   DESRV060                       NO\n         CLC   SMDE_USRD_LEN,H30              30 BYTES OF USER DATA?\n         BNE   DESRV060                       NO\n         SR    R15,R15                        CLEAR R15\n         ICM   R15,3,SMDE_USRD_OFF            OFFSET TO USER DATA\n         AR    R15,R6                         PLUS BASE\n         USING SPFSTATS,R15                   DEFINE BASE\n         OI    DIR_FLAGS,$DIR_SPF\n         MVC   DIR_SPF_VERSION,SPF_VERSION\n         MVC   DIR_SPF_LEVEL,SPF_LEVEL\n         MVC   DIR_SPF_C_DATE,SPF_C_DATE\n         MVC   DIR_SPF_M_DATE,SPF_M_DATE\n         MVC   DIR_SPF_M_TIME(2),SPF_M_TIME\n         MVC   DIR_SPF_M_TIME+2(1),SPF_M_SECONDS\n         MVC   DIR_SPF_INIT,SPF_INIT\n         MVC   DIR_SPF_SIZE,SPF_SIZE\n         MVC   DIR_SPF_USER,SPF_USER\n         B     DESRV060\n         DROP  R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDESRV030 DS    0H\n         ITRACE ID=LMOD\n         CLI   SMDE_LIBTYPE,SMDE_LIBTYPE_PDS\n         BE    DESRV040\n         CLI   SMDE_LIBTYPE,SMDE_LIBTYPE_PDSE\n         BE    DESRV050\n         B     DESRV060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDESRV040 DS    0H\n         ITRACE ID=PDS_LMOD\n         SR    R5,R5\n         ICM   R5,3,SMDE_PMAR_OFF             OFFSET TO PMAR\n         AR    R5,R6                          PLUS BASE\n         USING PMAR,R5                        DEFINE BASE\n         OI    DIR_FLAGS,$DIR_PMAR            PMAR DATA IS PRESENT\n         MVC   DIR_PMAR_ATR1,PMAR_ATR1\n         MVC   DIR_PMAR_ATR2,PMAR_ATR2\n         MVC   DIR_PMAR_ATR3,PMAR_ATR3\n         MVC   DIR_PMAR_ATR4,PMAR_ATR4\n         MVC   DIR_PMAR_AC,PMAR_AC\n         MVC   DIR_PMAR_STOR,PMAR_STOR\n         MVC   DIR_PMAR_EPM,PMAR_EPM\n         MVC   DIR_PMAR_EPA,PMAR_EPA\n         MVC   DIR_PMAR_SSI,PMAR_SSI\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,PMAR_SLEN                SECTION LENGTH\n         DROP  R5\n         LA    R5,0(R5,R15)                   ADDRESS OF PMARR SECTION\n         USING PMARR,R5\n         MVC   DIR_PMAR_TTR,PMARR_TTRT        TEXT TTR\n         MVC   DIR_PMAR_TTRN,PMARR_TTRN       NOTELIST TTR\n         MVC   DIR_PMAR_NL,PMARR_NL           ENTRIES IN NOTE LIST\n         MVC   DIR_PMAR_FTBL,PMARR_FTBL       LENGTH OF FIRST TEXT BLK  XT\n         MVC   DIR_PMAR_ORG,PMARR_ORG         MODULE ORIGIN\n         MVC   DIR_PMAR_RLDS,PMARR_RLDS       NBR OF RLD/CTL RECORDS\n         MVC   DIR_PMAR_SLSZ,PMARR_SLSZ       SCATTER LIST LENGTH\n         MVC   DIR_PMAR_TTSZ,PMARR_TTSZ       TRANSLATION TABLE LENGTH\n         MVC   DIR_PMAR_ESDT,PMARR_ESDT       ESDID OF FIRST TEXT BLOCK\n         MVC   DIR_PMAR_ESDC,PMARR_ESDC       ESDID OF EP CTRL SECTION\n         ZAP   DIR_PMAR_DATE,P0               DATE NOT PRESENT\n         XC    DIR_PMAR_TIME,DIR_PMAR_TIME\n         MVC   DIR_PMAR_USER,COMM_BLANKS\n         B     DESRV060\n         DROP  R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDESRV050 DS    0H\n         ITRACE ID=PDSELMOD\n         SR    R5,R5\n         ICM   R5,3,SMDE_PMAR_OFF             OFFSET TO PMAR\n         AR    R5,R6                          PLUS BASE\n         USING PMAR,R5                        DEFINE BASE\n         OI    DIR_FLAGS,$DIR_PMAR            PMAR DATA IS PRESENT\n         MVC   DIR_PMAR_ATR1,PMAR_ATR1\n         MVC   DIR_PMAR_ATR2,PMAR_ATR2\n         MVC   DIR_PMAR_ATR3,PMAR_ATR3\n         MVC   DIR_PMAR_ATR4,PMAR_ATR4\n         MVC   DIR_PMAR_AC,PMAR_AC\n         MVC   DIR_PMAR_STOR,PMAR_STOR\n         MVC   DIR_PMAR_EPM,PMAR_EPM\n         MVC   DIR_PMAR_EPA,PMAR_EPA\n         MVC   DIR_PMAR_SSI,PMAR_SSI\n         ICM   R15,3,PMAR_SLEN                SECTION LENGTH\n         DROP  R5\n         LA    R5,0(R5,R15)                   ADDRESS OF PMARR SECTION\n         USING PMARL,R5\n         XC    DIR_PMAR_TTR,DIR_PMAR_TTR\n         XC    DIR_PMAR_TTRN,DIR_PMAR_TTRN\n         XC    DIR_PMAR_NL,DIR_PMAR_NL\n         XC    DIR_PMAR_FTBL,DIR_PMAR_FTBL                              XT\n         XC    DIR_PMAR_ORG,DIR_PMAR_ORG\n         XC    DIR_PMAR_RLDS,DIR_PMAR_RLDS\n         XC    DIR_PMAR_SLSZ,DIR_PMAR_SLSZ\n         XC    DIR_PMAR_TTSZ,DIR_PMAR_ESDT\n         XC    DIR_PMAR_ESDT,DIR_PMAR_ESDT\n         XC    DIR_PMAR_ESDC,DIR_PMAR_ESDC\n         PDCHECK PMARL_DATE\n         ZAP   DIR_PMAR_DATE,PMARL_DATE\n         MVC   DIR_PMAR_TIME,PMARL_TIME\n         MVC   DIR_PMAR_USER,PMARL_USER\n* ------------------------------------------------------------------- *\n*        'STORE' the record in the data space                         *\n* ------------------------------------------------------------------- *\nDESRV060 DS    0H\n         L     R1,WORK_RECORDS                RECORDS STORED SO FAR\n         A     R1,F1                          PLUS 1\n         ST    R1,WORK_RECORDS                SAVE TOTAL\n         ST    R1,DSPCREQ_RECORD_NBR          SET RECORD NUMBER\n         ITRACE ID=STORE,                                              +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         LA    R1,DSPCREQ                     DSPCREQ BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK         SUCCESSFUL?\n         BNE   ERR0030                        NO\n         ICM   R0,15,SMDE_LEN                 LENGTH OF THIS SMDE\n         AR    R6,R0                          NEXT SMDE\n         BCT   R7,DESRV010                    LOOP\n* ------------------------------------------------------------------- *\n*        All entries in this block processed.                         *\n*        FREEMAIN this block and continue with next block.            *\n* ------------------------------------------------------------------- *\n         ICM   R0,15,DESB_LEN                 DESB LENGTH\n         ICM   R0,8,DESB_SUBPOOL              INSERT SUBPOOL\n         LR    R1,R8                          COPY DESB ADDRESS\n         ICM   R8,15,DESB_NEXT                NEXT DESB\n         ITRACE ID=FREEDESB,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         LTR   R8,R8                          ADDITIONAL DESB'S?\n         BNZ   DESRV000                       YES\n* ------------------------------------------------------------------- *\n*        All data processed.                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R9\n         CLOSE ((R9)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         ITRACE ID=FREEPOOL\n         FREEPOOL (R9)\n         L     R0,SESS_DCB_LENGTH\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R9,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R9),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\n         TM    DS1RECFM,DS1RECFU\n         BO    DESRV070\n         MVC   SESS_DEFAULT_FORMAT,DIR\n         B     DESRV080\nDESRV070 DS    0H\n         MVC   SESS_DEFAULT_FORMAT,LDIR\nDESRV080 DS    0H\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         BO    DESRV090\n         MVC   SESS_FORMAT,SESS_DEFAULT_FORMAT\nDESRV090 DS    0H\n         ITRACE ID=MSG_01\n         L     R1,DSPCREQ_RECORD_NBR          NUMBER OF RECORDS STORED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         mvc   COMM_MSG_2,COMM_BLANKS\n         MVC   COMM_MSG_2(MSG_01_L),MSG_01\n         ED    COMM_MSG_2+(MSG_01_RECORDS-MSG_01)(L'MSG_01_RECORDS),COM+,C+\n               M_DWORD+3\n         SR    R2,R2\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                SET MESSAGE NUMBER\n         ST    R15,COMM_DWORD\n         B     ERR1000\nERR0020  DS    0H\n         ITRACE ID=NO_DATA\n         MVI   SESS_STATUS,$STATUS_NO_DATA\n         MVI   COMM_MSG_ID+1,2                SET MESSAGE NUMBER\n         MVC   COMM_INFO_01(4),WORK_RETURN_CODE\n         MVC   COMM_INFO_02(4),WORK_REASON_CODE\nERR0030  DS    0H\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R9\n         CLOSE ((R9)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         ITRACE ID=FREEPOOL,                                           +\n               RDATA1=R9\n         FREEPOOL (R9)\n         L     R0,SESS_DCB_LENGTH\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R9,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R9),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR    CLEAR DCB ADDRESS\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\nERR1000  DS    0H\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION\n         MVC   DAIR_DD,SESS_DD                SET DD NAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE THE DD\n         MVC   COMM_MSG_CSECT,MODID           SET OUR CSECT'S NAME\n         MVI   COMM_MSG_ID,0                  FORCE 1ST BYTE TO ZERO\n         ITRACE ID=MESSAGE,                                            +\n               DATA1=(COMM_MSG_ID,2)\n         L     R15,COMM_V_OSMSG               OSMSG ENTRY POINT\n         BALR  R14,R15                        CALL OSMSG\n         LA    R2,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSDESERV_WORK_L\n         LR    R15,R2\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNAME_MVC MVC   DIR_NAME(0),2(R14)             COPY NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCB_I    DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               EODAD=1,                                                +\n               MACRF=R\nDCB_L          EQU   *-DCB_I\nOPEN_I   OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU   *-CLOSE_I\nDESERV_I       DESERV FUNC=GET_ALL,                                    +\n               MF=L\nDESERV_L       EQU   *-DESERV_I\nF1             DC    F'1'\nH1             DC    H'1'\nH30            DC    H'30'\nH80            DC    H'80'\n\nP0             DC    P'0'\nDIR            DC    CL8'DIR'\nLDIR           DC    CL8'LDIR'\nNONE           DC    CL8'None'\n\nMSG_01         DS    0C\nMSG_01_RECORDS DC    X'402020206B2020206B202120'\n               DC    C' members'\nMSG_01_L       EQU   *-MSG_01\n               LTORG\n\nDESERVEND      EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDESERV_WORK    DSECT\n                 COPY  DXDPREF\nWORK_OPEN        DS    0F,(OPEN_L)X\nWORK_CLOSE       DS    0F,(CLOSE_L)X\nWORK_DESERV      DS    0F,(DESERV_L)X\n\nWORK_ADDR        DS    A\nWORK_RETURN_CODE DS    F\nWORK_REASON_CODE DS    F\n\nWORK_RECORDS     DS    F                 DIRECTORY RECORDS STORED\n\n                 COPY  DIR\n\n                 DAIRREQ DSECT=NO\n                 DSPCREQ DSECT=NO\nOSDESERV_WORK_L  EQU   *-OSDESERV_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC DCBD=PS,                                               +\n               DES=YES,                                                +\n               PMAR=YES,                                               +\n               SMDE=YES,                                               +\n               DUMMY=X\nFORMAT_1 DSECT\n         IBMMAC VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n*        OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY SPFSTATS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSDESERV\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSDIR": {"ttr": 19211, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00F\\x01\\x10\\x01\\x8f\\x01\\x10\\x04\\x1f\\x11\\x19\\x08\\xf9\\x08\\xa2\\x02]\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2010-01-18T00:00:00", "modifydate": "2010-02-10T11:19:46", "lines": 2297, "newlines": 2210, "modlines": 605, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSDIR                                                 *\n*                                                                     *\n*  Build main body for non-load module PDS or PDSE directories.       *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  Jan 2010                                                           *\n*  This thing has a lot of functions so it is large.                  *\n*  It was using three base registers.                                 *\n*  I decided to change it to use the newer \"relative addressing mode\" *\n*  instructions where possible.  All the code that needs a \"base\"     *\n*  register should be \"below\" label BASED_AREA.                       *\n*                                                                     *\n*                                                                     *\n*  Register usage                                                     *\n*        R12      OSCOMM address                                      *\n*        R11      SESSION address                                     *\n*        R10      BASED area address                                  *\n*        R9       BAL, BRAS, linkage                                  *\n*        R8       DCB address                                         *\n*        R7       Dynamic area (VDATA)                                *\n*        R6       Lines available when building data                  *\n*                 Lines left to process when processing line commands *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDIR    CSECT\nOSDIR    AMODE 31\nOSDIR    RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING VDATA,R7\n         USING IHADCB,R8\n         J     INIT0000\nMODID    DC    CL8'OSDIR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSDIREND-OSDIR)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LARL  R10,BASED_AREA\n         USING BASED_AREA,R10\n         L     R5,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R5                      DEFINE BASE\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         JNE   INIT0010\n* ------------------------------------------------------------------- *\n*        Perform initialization                                       *\n* ------------------------------------------------------------------- *\n         OC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         JNZ   ERR0150\n         LA    R0,OSDIR_DXD_L\n         ST    R0,SESS_DXD_LENGTH\n         BRAS  R9,GETMAIN1\n         ST    R1,SESS_DXD_ADDR               SAVE WORK AREA ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSDIR_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         ST    R13,4(,R2)                     SAVE R13\n         ST    R2,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING OSDIR_WORK,R13                 DEFINE WORK AREA BASE\n         LARL  R1,MODID\n         MVC   DXD_CSECT,0(R1)                COPY MODID\n         ITRACE ID=ENTRY1\n         XC    DXD_RC,DXD_RC                  INITIALIZE RC\n         LA    R1,DIR_RECORD                  I/O AREA ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR\n         ITRACE ID=I_O_AREA,                                           +\n               RDATA1=R1\n         MVC   DXD_OPEN(OPEN_L),OPEN_I        INITIALIZE OPEN\n         MVC   DXD_CLOSE(CLOSE_L),CLOSE_I     INITIALIZE CLOSE\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD     SET OSLOAD FUNCTION\n         LA    R0,DATASPACE_1                 USE DATA SPACE 1\n         ST    R0,DSPCREQ_DATASPACE\n         ITRACE ID=VDATA\n         MVC   SESS_DISP_PANEL,DIR_PANEL      SET PANEL NAME\n         LA    R1,SESS_DISP_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,DXD_VDATA_LENGTH            SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE VDATA ADDR\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         ICM   R8,15,SESS_DCB_ADDR            DCB ALREADY PRESENT?\n         JNZ   EXIT0000                       YES\n         LA    R0,PDSDCB_L                    DCB LENGTH\n         ST    R0,SESS_DCB_LENGTH\n         BRAS  R9,GETMAIN1\n         LR    R8,R1                          SAVE DCB ADDRESS\n         ST    R8,SESS_DCB_ADDR\n         L     R1,=A(PDSDCB_I)\n         MVC   0(PDSDCB_L,R8),0(R1)           INITIALIZE DCB\n         MVC   DCBDDNAM,SESS_DD               SET DD NAME\n         J     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         JZ    ERR0200\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2,                                             +\n               DATA1=(SESS_FORMAT_FLAGS,1),                            +\n               DATA2=(COMM_SESS_FUNC,1)\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         JE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         JE    CLEAN000\n         L     R8,SESS_DCB_ADDR               DCB ADDRESS\n         LARL  R1,RTRY0000                    RETRY ADDRESS\n         ST    R1,SESS_RETRY\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH    SESSION SWITCH?\n         JNE   MAIN0000                       NO\n         TM    DXD_FLAGS,$DXD_INIT            EVER BUILT DATA?\n         JNO   MAIN0000                       NO\n         L     R6,DXD_LINES_REMAINING         LINES REMAINING\n         L     R7,DXD_CURRENT_VDATA           POSITION IN VDATA\n         ITRACE ID=RESUME,                                             +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         LTR   R6,R6                          RESUMING LINE CMDS?\n         JNZ   MAIN0210                       YES\n         J     MAIN0180                       RESUME AFTER PRIMARY CMD\n* ------------------------------------------------------------------- *\n*          (re)build display                                          *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         OI    DXD_FLAGS,$DXD_INIT            SET FLAG\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         XC    DXD_LINES,DXD_LINES            LINES BUILT\n         L     R0,DXD_VDATA_ADDR              VDATA ADDRESS\n         L     R1,DXD_VDATA_LENGTH            VDATA LENGTH\n         SR    R14,R14                        CLEAR R14\n         SR    R15,R15                        CLEAR R15\n         MVCL  R0,R14                         INITIALIZE VDATA BUFFER\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_PDS_DIR DIRECTORY DATA?\n         JNE   ERR0220                        NO\n         L     R6,DXD_VDEPTH                  LINES AVAILABLE\n         L     R7,DXD_VDATA_ADDR              BUFFER ADDRESS\n* ------------------------------------------------------------------- *\n*        Add heading to body                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=HEADING,                                            +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         LA    R2,HEADING_01_L                HEADING LENGTH\n         C     R2,DXD_VWIDTH                  GREATER THAN SCREEN WIDTH\n         JNH   MAIN0030                       NO\n         L     R2,DXD_VWIDTH                  LIMIT TO SCREEN WIDTH\nMAIN0030 DS    0H\n         BCTR  R2,0                           INSTRUCTION LENGTH\n         EX    R2,MVC_01                      COPY HEADING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    DXD_CURSOR_POSITION,DXD_CURSOR_POSITION\n         J     MAIN0160\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" data and build body of SPF panel                  *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         JH    MAIN0180\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DSPCREQ_RECORD_ADDR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   ERR0010\n         TM    SESS_USER_OPTIONS,$OPTIONS_SHOW_TAGGED\n         JO    MAIN0050\n         TM    SESS_USER_OPTIONS,$OPTIONS_SHOW_NOT_TAGGED\n         JO    MAIN0060\n         J     MAIN0070\nMAIN0050 DS    0H\n         TM    DIR_FLAGS,$DIR_TAGGED\n         JNO   MAIN0170\n         J     MAIN0070\nMAIN0060 DS    0H\n         TM    DIR_FLAGS,$DIR_TAGGED\n         JO    MAIN0170\nMAIN0070 DS    0H\n         MVC   VDATA,COMM_BLANKS\n         MVI   VDATA_ATTR_1,$SCREEN_ATTR_INPUT\n         MVC   VDATA_MEMBER,DIR_NAME\n         TM    DIR_FLAGS,$DIR_TAGGED\n         JO    MAIN0080\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_NORMAL\n         J     MAIN0090\nMAIN0080 DS    0H\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\nMAIN0090 DS    0H\n         MVI   VDATA_ATTR_3,$SCREEN_ATTR_NORMAL\n         UNPK  DXD_WORK_1(7),DIR_TTR(4)\n         TR    DXD_WORK_1(6),COMM_HEXCHAR\n         MVC   VDATA_TTR,DXD_WORK_1\n         TM    DIR_FLAGS,$DIR_DELETED\n         JO    MAIN0120\n         TM    DIR_FLAGS,$DIR_RENAMED\n         JO    MAIN0130\n         TM    DIR_FLAGS,$DIR_SPF\n         JNO   MAIN0140\n* ----------       FORMAT SPF STATISTICS            ----------------- *\n         SR    R1,R1\n         IC    R1,DIR_SPF_VERSION\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+4\n         MVC   VDATA_VERSION,DXD_WORK_1+6\n         OI    VDATA_VERSION,C'0'\n         MVI   VDATA_DOT,C'.'\n         IC    R1,DIR_SPF_LEVEL\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+4\n         MVC   VDATA_LEVEL,DXD_WORK_1+6\n         OI    VDATA_LEVEL,C'0'\n         ICM   R1,3,DIR_SPF_SIZE\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+4\n         MVC   VDATA_SIZE,DXD_WORK_1+1\n         ICM   R1,3,DIR_SPF_INIT\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+4\n         MVC   VDATA_INIT,DXD_WORK_1+1\nAP1      AP    DIR_SPF_C_DATE,P1900000\n         MVC   DXD_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_WORK_1(L'EDIT_WORD_2),DIR_SPF_C_DATE\n         MVC   VDATA_CREATE_DATE,DXD_WORK_1+1\nMAIN0100 DS    0H\nAP2      AP    DIR_SPF_M_DATE,P1900000\n         MVC   DXD_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_WORK_1(L'EDIT_WORD_2),DIR_SPF_M_DATE\n         MVC   VDATA_MOD_DATE,DXD_WORK_1+1\nMAIN0110 DS    0H\n         UNPK  DXD_WORK_1(7),DIR_SPF_M_TIME(4)\n         TR    DXD_WORK_1(6),COMM_HEXCHAR\n         MVC   VDATA_MOD_TIME+0(2),DXD_WORK_1+0\n         MVI   VDATA_MOD_TIME+2,C':'\n         MVC   VDATA_MOD_TIME+3(2),DXD_WORK_1+2\n         MVI   VDATA_MOD_TIME+5,C':'\n         MVC   VDATA_MOD_TIME+6(2),DXD_WORK_1+4\n         MVC   VDATA_USER,DIR_SPF_USER\n         J     MAIN0140\nMAIN0120 DS    0H\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH_TURQUOISE\n         MVC   VDATA_STATISTICS(DELETED_MSG_L),DELETED_MSG\n         J     MAIN0140\nMAIN0130 DS    0H\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH_TURQUOISE\n         MVC   VDATA_STATISTICS(RENAMED_MSG_L),RENAMED_MSG\nMAIN0140 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          CURRENT RECORD NUMBER\n         A     R1,F1                          ADD 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE NEW RECORD NUMBER\n         LH    R1,DXD_LINES                   LINES DISPLAYED\n         A     R1,F1                          ADD 1\n         STH   R1,DXD_LINES                   SAVE LINES DISPLAYED\nMAIN0160 DS    0H\n         ITRACE ID=LOOP,                                               +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         A     R7,DXD_VWIDTH                  NEXT LINE\n         BRCT  R6,MAIN0040                    MINUS 1 LINE\n         J     MAIN0180\nMAIN0170 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          CURRENT RECORD NUMBER\n         A     R1,F1                          ADD 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE NEW RECORD NUMBER\n         J     MAIN0040\n* ------------------------------------------------------------------- *\n*        Build the DSCB info and headings                             *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=OSDSCB\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_COLUMN_FROM,H1             INITIALIZE COLUMN\n         L     R15,COMM_V_OSDSCB              OSDSCB ENTRY POINT\n         BALR  R14,R15                        FORMAT THE DSCB INFO\n* ------------------------------------------------------------------- *\n*        Display the panel.                                           *\n* ------------------------------------------------------------------- *\nMAIN0185 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,DIR_PANEL      SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         MVC   SESS_DISP_CURSOR,DXD_CURSOR_POSITION\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT WANTED?\n         JNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         JNE   MAIN0190                       YES\n         OC    SESS_RC,SESS_RC                DISPLAY RC=0?\n         JZ    MAIN0200                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         J     EXIT0000\n* ------------------------------------------------------------------- *\n*        Save VDATA address and lines remaining                       *\n* ------------------------------------------------------------------- *\nMAIN0190 DS    0H\n         ITRACE ID=SAVE_6_7,                                           +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         ST    R6,DXD_LINES_REMAINING         SAVE LIENS REMAINING\n         ST    R7,DXD_CURRENT_VDATA           SAVE ADDR IN VDATA\n         J     EXIT0000\n* ------------------------------------------------------------------- *\n*        Process any line command(s)                                  *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         NI    DXD_FLAGS,255-$LINE_CMD        RESET INDICATOR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         SR    R6,R6\n         ICM   R6,3,DXD_LINES                 LINES OF DISPLAY BUILT\n         JZ    MAIN0250                       NONE\n         L     R7,DXD_VDATA_ADDR              SPF DISPLAY BUFFER ADDR\n         ITRACE ID=CMDS,                                               +\n               RDATA1=R7,                                              +\n               RDATA2=R6\n         A     R7,DXD_VWIDTH                  SKIP HEADING LINE\n         L     R1,DXD_VWIDTH                  SCREEN WIDTH\n         AH    R1,=Y(VDATA_SELECTION-VDATA+1) PLUS DISP TO SELECTION\n         ST    R1,DXD_CURSOR_POSITION         INIT CURSOR POSITION\nMAIN0210 DS    0H\n         ITRACE ID=LINE_CMD,                                           +\n               DATA1=(VDATA_SELECTION,1),                              +\n               DATA2=VDATA_MEMBER\n         OI    VDATA_SELECTION,C' '           'TRANSLATE' TO UPPER CASE\n         CLI   VDATA_SELECTION,C' '           BLANK?\n         JE    MAIN0230                       YES\n         CLC   DELETED_MSG(DELETED_MSG_L),VDATA_STATISTICS\n         JE    ERR0130\n         CLC   RENAMED_MSG(RENAMED_MSG_L),VDATA_STATISTICS\n         JE    ERR0130\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R1,VDATA_SELECTION             COMMAND ADDRESS\n         ST    R1,SESS_COMMAND_ADDRESS        SET ADDRESS\n         MVC   SESS_COMMAND_LENGTH,H1         SET LENGTH\n         LARL  R0,LINE_TABLE                  LIST OF COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE     SET ADDRESS\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD               OSCMD ENTRY POINT\n         BALR  R14,R15                        SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                            YES.. BRANCH\n         MVC   COMM_INFO_01,VDATA_SELECTION\n         MVC   COMM_MSG_ID,H1                 SET MESSAGE ID\n         BRAS  R9,MSG0000\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         J     MAIN0180                       DISPLAY WITH MESSAGE\nMAIN0220 DS    0H\n         OI    DXD_FLAGS,$LINE_CMD            LINE CMD WAS FOUND\n         MVI   VDATA_SELECTION,C' '           RESET CMD\nMAIN0230 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          RECORD NUMBER\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE RECORD NUMBER\nMAIN0240 DS    0H\n         L     R1,DXD_CURSOR_POSITION         CURSOR POSITION\n         A     R1,DXD_VWIDTH                  NEXT LINE\n         ST    R1,DXD_CURSOR_POSITION         UPDATE CURSOR POSITION\n         A     R7,DXD_VWIDTH                  NEXT LINE\n         BRCT  R6,MAIN0210                    LOOP\n         XC    DXD_CURSOR_POSITION,DXD_CURSOR_POSITION\n         TM    DXD_FLAGS,$LINE_CMD            LINE COMMAND FOUND?\n         JO    MAIN0180                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       No line command(s) were found.                                *\n*                                                                     *\n*       Process any primary command.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         CLC   SPF_ZCMD,COMM_BLANKS           ANY PRIMARY COMMAND?\n         JE    MAIN0330                       NO\n         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS\n         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LARL  R0,COMMAND_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                        SEARCH COMMAND\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         JNO   ERR0080                        NOT FOUND\n         LH    R3,COMM_OPERANDS_NBR           NBR OF OPERANDS\n         BR    R15                            PROCESS COMMAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for a scroll command.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ICM   R1,15,SPF_ZSCROLLN             NUMBER OF LINES TO SCROLL\n         JZ    MAIN0340                       ZERO..\n         BCTR  R1,0                           MINUS 1 (HEADING LINE)\nMAIN0340 DS    0H\n         ST    R1,SESS_VERTICAL_SCROLL\n         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         JE    MAIN0400                       YES\n         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?\n         JE    MAIN0370                       YES\n         CLI   SPF_ZVERB,C'L'                 SCROLL LEFT?\n         JE    MAIN0180                       YES\n         CLI   SPF_ZVERB,C'R'                 SCROLL RIGHT?\n         JE    MAIN0180                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         JE    MAIN0390                       YES\n         CLI   SPF_ZVERB,C'U'                 SCROLL UP?\n         JE    MAIN0350                       YES\n         J     MAIN0180                       DISPLAY SAME DATA AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0350 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                    MAX?\n         JE    MAIN0390                             YES\n         L     R1,SESS_VERTICAL_SCROLL              NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  1ST ON DISPLAY\n         SR    R2,R1                                MINUS SCROLL\n         C     R2,DATASPACE_1_FIRST_RECORD          LESS THAN FIRST?\n         JNL   MAIN0360                             NO\n         L     R2,DATASPACE_1_FIRST_RECORD          FORCE TO FIRST\nMAIN0360 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST TO DISPLAY\n         J     MAIN0000                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0370 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                    MAX?\n         JE    MAIN0400                             YES\n         L     R1,SESS_VERTICAL_SCROLL              NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  RECORD DISPLAYED\n         AR    R2,R1                                PLUS SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD\n         JH    MAIN0380                             WOULD GO BEYOND END\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST RECORD NBR\n         J     MAIN0000                             REBUILD EVERYTHING\nMAIN0380 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST DISPLAYED\n         C     R2,DXD_VDEPTH                        MORE THAN ONE SCRN?\n         JNH   MAIN0180                             NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST STORED\n         S     R2,DXD_VDEPTH                        MINUS 1 SCREEN\n         A     R2,F2                                PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST TO DISPLAY\n         J     MAIN0000                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0390 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         XC    SESS_LAST_FOUND,SESS_LAST_FOUND\n         J     MAIN0000                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n         L     R2,DATASPACE_1_LAST_RECORD     HIGHEST RECORD AVAILABLE\n         S     R2,DXD_VDEPTH                  MINUS LINES ON DISPLAY\n         A     R2,F2                          PLUS 2\n         CH    R2,H1                          STILL HAVE AT LEAST 1?\n         JNL   MAIN0410                       YES\n         LH    R2,H1                          FORCE RECORD 1\nMAIN0410 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   FIRST RECORD NBR\n         J     MAIN0000                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        APPEND (add to end of an existing file)                      *\n* ------------------------------------------------------------------- *\nMAIN0420 DS    0H\n         ITRACE ID=APPEND1\n         MVI   VDATA_SELECTION,C' '\n         MVC   LOADREQ_MODULE,MODULE_OSAPPEND\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                        LOAD OSAPPEND\n         MVC   SPF_MEMBER,VDATA_MEMBER        COPY MEMBER NAME\n         MVC   DXD_MEMBER,VDATA_MEMBER        COPY MEMBER NAME\n         MVI   APPNDREQ_FUNC,$APPNDREQ_OPEN\n         LA    R1,APPNDREQ\n         ICM   R15,15,LOADREQ_EP              COPY ENTRY POINT\n         BALR  R14,R15                        LINK TO OSAPPEND\n         ITRACE ID=APPND_RC,                                           +\n               RDATA1=R15\n         MVC   SPF_MEMBER,SESS_MEMBER\n         CH    R15,H4                         PROBLEM?\n         JE    MAIN0440                       YES\n         CH    R15,H8                         EXIT?\n         JE    MAIN0440                       YES\n         MVC   APPNDREQ_MEMBER,DXD_MEMBER\n         MVI   APPNDREQ_FUNC,$APPNDREQ_WRITE\n         ICM   R15,15,LOADREQ_EP              OSAPPEND ENTRY POINT\n         BALR  R14,R15                        LINK TO OSAPPEND\n         MVI   APPNDREQ_FUNC,$APPNDREQ_CLOSE\n         ICM   R15,15,LOADREQ_EP              OSAPPEND ENTRY POINT\n         BALR  R14,R15                        LINK TO OSAPPEND\n         MVC   VDATA_STATISTICS,COMM_BLANKS\n         MVC   VDATA_STATISTICS(APPND_MSG_L),APPND_MSG\n         J     MAIN0220                       PROCESS NEXT SELECTION\nMAIN0440 DS    0H\n         MVI   VDATA_ATTR_3,$SCREEN_ATTR_HIGH\n         MVC   VDATA_STATISTICS(L'COMM_MSG_1),COMM_MSG_1\n         J     MAIN0185\n* ------------------------------------------------------------------- *\n*        LOCATE (make a member the 1st shown on display)              *\n* ------------------------------------------------------------------- *\nMAIN0450 DS    0H\n         ITRACE ID=LOCATE,                                             +\n               RDATA1=R3\n         CH    R3,H2                          TWO PARAMETERS?\n         JL    MAIN0470                       LESS\n         JH    ERR0060                        TOO MANY\n         CLC   OPERAND_02_LENGTH,H8           MEMBER NAME TOO LONG?\n         JH    ERR0070                        YES\n         CLC   SESS_SEARCH_ARG_LENGTH,OPERAND_02_LENGTH\n         JNE   MAIN0460                       DIFFERENT LENGTH\n         CLC   SESS_SEARCH_ARG,0(R2)          SAME STRING?\n         JE    MAIN0470                       YES\nMAIN0460 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   DSPCREQ_MEMBER,0(R2)           COPY MEMBER NAME\n         MVC   SESS_SEARCH_ARG_LENGTH,OPERAND_02_LENGTH\n         MVC   SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   SESS_SEARCH_ARG(8),0(R2)\n         J     MAIN0480\nMAIN0470 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         OC    SESS_SEARCH_ARG_LENGTH,SESS_SEARCH_ARG_LENGTH\n         JZ    ERR0170\n         MVC   DSPCREQ_MEMBER,SESS_SEARCH_ARG\n         ICM   R1,15,SESS_SEARCH_RECORD\n         LA    R1,1(,R1)\n         STCM  R1,15,DSPCREQ_RECORD_NBR\nMAIN0480 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_G\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   MAIN0490                       NOT FOUND\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SESS_SEARCH_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         J     MAIN0000\nMAIN0490 DS    0H\n         OC    SESS_LAST_FOUND,SESS_LAST_FOUND\n         JZ    ERR0020                        NEVER FOUND\n         J     ERR0180                        BOTTOM OF DATA REACHED\n* ------------------------------------------------------------------- *\n*        OFFLOAD member(s) to a sequential file                       *\n* ------------------------------------------------------------------- *\nMAIN0510 DS    0H\n         ITRACE ID=OFFLOAD\n         MVI   VDATA_SELECTION,C' '           RESET THE SELECTION\n         MVC   SPF_MEMBER,VDATA_MEMBER        COPY MEMBER NAME\n         MVC   DXD_MEMBER,VDATA_MEMBER        COPY MEMBER NAME\n         MVC   LOADREQ_MODULE,MODULE_OSOFFLD\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                        LOAD OSOFFLD\n         ITRACE ID=OSOFFLD,                                            +\n               RDATA1=R15\n         MVI   OFFLDREQ_FUNC,$OFFLDREQ_OPEN\n         LA    R1,OFFLDREQ                    PARMS FOR OSOFFLD\n         ICM   R15,15,LOADREQ_EP              COPY ENTRY POINT\n         BALR  R14,R15                        LINK TO OSOFFLD\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         JNZ   MAIN0530                       NO\n         MVC   SPF_MEMBER,SESS_MEMBER\n         CH    R15,H4                         PROBLEM?\n         JE    MAIN0520                       YES\n         CH    R15,H8                         EXIT?\n         JE    MAIN0520                       YES\n         MVC   OFFLDREQ_MEMBER,DXD_MEMBER\n         MVI   OFFLDREQ_FUNC,$OFFLDREQ_WRITE\n         ICM   R15,15,LOADREQ_EP              OSOFFLD ENTRY POINT\n         BALR  R14,R15                        LINK TO OSOFFLD\n         ITRACE ID=WRITERC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         JNZ   MAIN0530                       NO\n         MVI   OFFLDREQ_FUNC,$OFFLDREQ_CLOSE\n         ICM   R15,15,LOADREQ_EP              OSOFFLD ENTRY POINT\n         BALR  R14,R15                        LINK TO OSOFFLD\n         ITRACE ID=CLOSERC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         JNZ   MAIN0530                       NO\n         MVC   VDATA_STATISTICS,COMM_BLANKS\n         MVC   VDATA_STATISTICS(OFFLD_MSG_L),OFFLD_MSG\n         J     MAIN0220                       PROCESS NEXT SELECTION\nMAIN0520 DS    0H\n         MVI   VDATA_ATTR_3,$SCREEN_ATTR_HIGH\n         MVC   VDATA_STATISTICS(L'COMM_MSG_1),COMM_MSG_1\n         J     MAIN0220\nMAIN0530 DS    0H\n         ITRACE ID=MAIN0530,                                           +\n               RDATA1=R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         J     MAIN0180\n* ------------------------------------------------------------------- *\n*        Reset TAG indicator (LINE COMMAND)                           *\n* ------------------------------------------------------------------- *\nMAIN0540 DS    0H\n         ITRACE ID=LINE_RST\n         MVI   VDATA_SELECTION,C' '              RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         TM    DIR_FLAGS,$DIR_TAGGED             MEMBER TAGGED?\n         JNO   MAIN0220                          NO..\n         NI    DIR_FLAGS,255-$DIR_TAGGED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_NORMAL\n         MVC   VDATA_STATISTICS(RESET_MSG_L),RESET_MSG\n         J     MAIN0220                          PROCESS NEXT SELECTION\n* ------------------------------------------------------------------- *\n*        Reset tag indicator (primary command)                        *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=PRIM_RST\n         CH    R3,H2                             PROPER PARAMETERS?\n         JL    ERR0050                           TOO FEW\n         ICM   R2,15,OPERAND_02_ADDRESS          OPERAND 2 ADDRESS\n         CLC   ALL,0(R2)                         RESET ALL MEMBERS?\n         JE    MAIN0560                          YES\n         BRAS  R9,MAIN1600                       VERIFY NAMES\n         MVI   DXD_AND,255-$DIR_TAGGED           FLAGS TO TURN OFF\n         MVI   DXD_OR,0                          FLAGS TO TURN ON\n         BRAS  R9,MAIN1700                       PROCESS COMMAND\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR COMMAND\n         J     MAIN0000                          REBUILD DISPLAY\nMAIN0560 DS    0H\n         ITRACE ID=RESETALL\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         SR    R2,R2                             CLEAR FOR COUNTER\nMAIN0570 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE    SET COMMAND\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           RETRIEVE THE MEMBER\n         TM    DIR_FLAGS,$DIR_TAGGED             MEMBER TAGGED?\n         JNO   MAIN0580                          NO\n         A     R2,F1                             PLUS 1\n         NI    DIR_FLAGS,255-$DIR_TAGGED         RESET FLAG\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE      SET COMMAND\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           UPDATE DATA SPACE\nMAIN0580 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR             CURRENT RECORD NUMBER\n         C     R1,DATASPACE_1_LAST_RECORD        AT LAST RECORD\n         JE    MAIN0590                          YES\n         A     R1,F1                             PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR             SET UPDATED NUMBER\n         J     MAIN0570\nMAIN0590 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR COMMAND\n         ST    R2,COMM_DWORD\n         MVI   COMM_MSG_ID+1,14                  SET MESSAGE NUMBER\n         BRAS  R9,MSG0000                        BUILD MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1              COPY TO SPF AREA\n         J     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0620 DS    0H\n         ITRACE ID=LINE_SEL,                                           +\n               DATA1=VDATA_MEMBER\n         NI    DXD_FLAGS,255-$EMPTY_MEMBER       RESET INDICATOR\n         MVC   DXD_MEMBER,VDATA_MEMBER           COPY MEMBER NAME\n         MVC   DXD_SELECTION,VDATA_SELECTION     COPY LINE CMD\n         J     MAIN0660\nMAIN0630 DS    0H\n         ICM   R2,15,OPERAND_01_ADDRESS\n         ITRACE ID=PRIM_SEL,                                           +\n               DATA1=(0(R2),1)\n         SR    R7,R7                             NOT FROM LINE CMD\n         MVC   DXD_SELECTION,0(R2)               SAVE 1ST CHAR OF CMD\n         CH    R3,H2                             PROPER PARAMETERS?\n         JL    ERR0050                           TOO FEW\n         JH    ERR0060                           TOO MANY\n         CLC   OPERAND_02_LENGTH,H8              MEMBER NAME TOO LONG?\n         JH    ERR0070                           YES\n         MVC   DXD_MEMBER,COMM_BLANKS            INITIALIZE MEMBER NAME\n         SR    R1,R1                             CLEAR R1\n         ICM   R1,3,OPERAND_02_LENGTH            NAME LENGTH\n         BCTR  R1,0                              FOR EX INSTRUCTION\n         ICM   R2,15,OPERAND_02_ADDRESS          MEMBER NAME ADDRESS\n         EX    R1,MVC_02                         COPY MEMBER NAME\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         NI    DXD_FLAGS,255-$EMPTY_MEMBER       RESET INDICATOR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH 1ST MEMBER\n         MVC   DSPCREQ_MEMBER,DXD_MEMBER\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            MEMBER LOCATED?\n         JE    MAIN0640                          YES\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT        EDIT SESSION?\n         JNO   ERR0020                           NO\n         OI    DXD_FLAGS,$EMPTY_MEMBER           NEW MEMBER (EMPTY)\n         J     MAIN0650\nMAIN0640 DS    0H\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130\nMAIN0650 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET THE COMMAND\nMAIN0660 DS    0H\n         ITRACE ID=BLD_NEW\n         LA    R0,SESSION_L\n         BRAS  R9,GETMAIN2\n         LR    R3,R1                            SAVE ADDRESS\nNEW      USING SESSION,R3\n         ST    R3,COMM_NEW_SESSION              SET NEW BLOCK ADDR\n         LR    R0,R3\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         JZ    MAIN0670                         NO\n         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nMAIN0670 DS    0H\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         XC    NEW.DATASPACE_1_ALET,NEW.DATASPACE_1_ALET\n         XC    NEW.DATASPACE_1_TOKEN,NEW.DATASPACE_1_TOKEN\n         MVC   NEW.DATASPACE_1_NAME,COMM_BLANKS\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         XC    SESS_IO_AREA,SESS_IO_AREA\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DEFAULT_FORMAT,COMM_BLANKS\n         MVC   NEW.SESS_FORMAT,COMM_BLANKS\n         MVC   NEW.SESS_FUNCTION_MODULE,COMM_BLANKS\n         MVC   NEW.SESS_DATA_LOADER,COMM_BLANKS\n         MVC   NEW.SESS_EXIT_MODULE,COMM_BLANKS\n         MVC   NEW.SESS_MEMBER,DXD_MEMBER\n         MVC   NEW.SESS_PATH,SESS_PATH\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         MVI   NEW.SESS_KEYWORD_FLAGS,$KEYWORD_DSN+$KEYWORD_MEMBER+$KEY+\n               WORD_VOL\n         TM    DXD_FLAGS,$EMPTY_MEMBER           EMPTY MEMBER?\n         JNO   MAIN0680                          NO\n         OI    NEW.SESS_EDIT_FLAGS,$SESS_EDIT_EMPTY\nMAIN0680 DS    0H\n         L     R0,COMM_IO_SIZE                   I/O AREA SIZE\n         BRAS  R9,GETMAIN1\n         ST    R1,SESS_IO_AREA                   SAVE ADDRESS\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n         ST    R6,DXD_LINES_REMAINING            SAVE LINES REMAINING\n         ST    R7,DXD_CURRENT_VDATA              SAVE VDATA ADDR\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH       SET SWITCH INDICATOR\n         ITRACE ID=SEL_CODE,                                           +\n               DATA1=(DXD_SELECTION,1)\n         CLI   DXD_SELECTION,C'B'                BROWSE?\n         JE    MAIN0690                          YES\n         CLI   DXD_SELECTION,C'S'                SELECT (BROWSE)?\n         JE    MAIN0690                          YES\n         LTR   R7,R7                             LINE COMMAND?\n         JZ    EXIT0000                          NO\n         MVI   VDATA_SELECTION,C' '              RESET THE SELECTION\n         J     EXIT0000                          EXIT\nMAIN0690 DS    0H\n         ITRACE ID=BROWSE,DATA1=(COMM_SESS_FUNC,1)\n         MVI   NEW.SESS_EDIT_FLAGS,0             TURN OFF EDIT MODE\n         MVC   NEW.SESS_DEFAULT_FORMAT,BROWSE\n         MVC   NEW.SESS_FORMAT,BROWSE\n         MVC   NEW.SESS_FUNCTION_MODULE,MODULE_OSBROWSE\n         LTR   R7,R7                             LINE COMMAND?\n         JZ    EXIT0000                          NO\n         MVI   VDATA_SELECTION,C' '              RESET THE SELECTION\n         J     EXIT0000\n         DROP  NEW\n* ------------------------------------------------------------------- *\n*        Tag member (line command)                                    *\n* ------------------------------------------------------------------- *\nMAIN0710 DS    0H\n         ITRACE ID=LINETAG\n         MVI   VDATA_SELECTION,C' '              RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         OI    DIR_FLAGS,$DIR_TAGGED             SET THE TAGGED FLAG\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\n         MVC   VDATA_STATISTICS(TAGGED_MSG_L),TAGGED_MSG\n         J     MAIN0220                          PROCESS NEXT SELECTION\n* ------------------------------------------------------------------- *\n*        Tag member (primary command)                                 *\n* ------------------------------------------------------------------- *\nMAIN0720 DS    0H\n         ITRACE ID=PRIMTAG\n         CH    R3,H2                             PROPER PARAMETERS?\n         JL    ERR0050                           TOO FEW\n         ICM   R2,15,OPERAND_02_ADDRESS          OPERAND 2 ADDRESS\n         BRAS  R9,MAIN1600                       VERIFY NAMES\n         MVI   DXD_AND,X'FF'                     FLAGS TO TURN OFF\n         MVI   DXD_OR,$DIR_TAGGED                FLAGS TO TURN ON\n         BRAS  R9,MAIN1700                       PROCESS COMMAND\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR COMMAND\n         J     MAIN0000                          REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        APPEND members to a sequential file                          *\n* ------------------------------------------------------------------- *\nMAIN0800 DS    0H\n         ITRACE ID=APPEND2\n         CH    R3,H2                             TWO PARAMETERS?\n         JH    ERR0060                           TOO MANY\n         JL    MAIN0810                          ONLY 1\n         CLC   OPERAND_02_LENGTH,H8              MEMBER NAME TOO LONG?\n         JH    ERR0070                           YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   DXD_MEMBER,0(R2)                  COPY MEMBER NAME\n         MVC   APPNDREQ_MEMBER,0(R2)             COPY MEMBER NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH 1ST MEMBER\n         MVC   DSPCREQ_MEMBER,APPNDREQ_MEMBER    MEMBER NAME\n         LA    R1,DSPCREQ                        DATASPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           FIND MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            LOCATED?\n         JNE   ERR0020                           NOT FOUND\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130\nMAIN0810 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         MVC   LOADREQ_MODULE,MODULE_OSAPPEND    MODULE TO LOAD\n         LA    R1,LOADREQ                        OSLOAD PARMS\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSAPPEND\n         ICM   R15,15,LOADREQ_EP                 COPY ENTRY POINT\n         MVI   APPNDREQ_FUNC,$APPNDREQ_OPEN      OSAPPEND FUNCTION\n         LA    R1,APPNDREQ                       OSAPPEND PARMS\n         BALR  R14,R15                           LINK TO OSAPPEND\n         ITRACE ID=APPND_RC,                                           +\n               RDATA1=R15\n         CH    R15,H4                            PROBLEM?\n         JE    MAIN0860                          YES\n         CH    R15,H8                            EXIT?\n         JE    MAIN0180                          YES\n         TM    OPERAND_02_TYPE,$OPERAND_PRESENT  OPERAND 2 PRESENT?\n         JO    MAIN0830                          YES\n         MVC   DSPCREQ_RECORD_NBR,F1             FIND 'TAGGED' MEMBERS\n         LA    R1,DIR_RECORD                     I/O AREA ADDR\n         ST    R1,DSPCREQ_RECORD_ADDR            SET IN DSPC PARMS\nMAIN0820 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         JH    MAIN0850\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE    SET FUNCTION\n         LA    R1,DSPCREQ                        DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           RETRIEVE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED    THIS RECORD STORED?\n         JE    MAIN0840                          NO\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            SUCCESSFUL?\n         JNE   ERR0010                           NO\n         TM    DIR_FLAGS,$DIR_TAGGED             TAGGED?\n         JNO   MAIN0840                          NO\n         MVC   SPF_MEMBER,DIR_NAME               SET MEMBER NAME\n         MVC   APPNDREQ_MEMBER,DIR_NAME          SET MEMBER NAME\nMAIN0830 DS    0H\n         MVI   APPNDREQ_FUNC,$APPNDREQ_WRITE     SET APPEND FUNCTION\n         LA    R1,APPNDREQ                       OSAPPEND PARMS\n         ICM   R15,15,LOADREQ_EP                 COPY ENTRY POINT\n         BALR  R14,R15                           LINK TO OSAPPEND\n         TM    OPERAND_02_TYPE,$OPERAND_PRESENT  OPERAND 2 PRESENT?\n         JO    MAIN0850                          YES\nMAIN0840 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR             CURRENT RECORD NUMBER\n         A     R1,F1                             PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR             SAVE NEW RECORD NUMBER\n         J     MAIN0820                          EXAMINE THIS MEMBER\nMAIN0850 DS    0H\n         MVI   APPNDREQ_FUNC,$APPNDREQ_CLOSE     SET APPEND FUNCTION\n         LA    R1,APPNDREQ                       OSAPPEND PARMS\n         ICM   R15,15,LOADREQ_EP                 COPY ENTRY POINT\n         BALR  R14,R15                           LINK TO OSAPPEND\n         MVC   COMM_INFO_01,APPNDREQ_COUNT       MEMBERS APPENDED\n         MVC   COMM_INFO_02,APPNDREQ_BYTES\n         MVC   COMM_MSG_ID,H3                    SET MESSAGE NUMBER\n         BRAS  R9,MSG0000                        BUILD MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR COMMAND\n         J     MAIN0180                          EXIT WITH RC=0\nMAIN0860 DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         J     MAIN0180                          EXIT WITH RC=0\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        OFFLOAD members to a sequential file                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0900 DS    0H\n         ITRACE ID=OFFLOAD2\n         CH    R3,H2                             TWO PARAMETERS?\n         JH    ERR0060                           TOO MANY\n         JL    MAIN0910                          ONLY 1\n         CLC   OPERAND_02_LENGTH,H8              MEMBER NAME TOO LONG?\n         JH    ERR0070                           YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   OFFLDREQ_MEMBER,0(R2)             COPY MEMBER NAME\n         MVC   SPF_MEMBER,0(R2)                  COPY MEMBER NAME\n         MVC   DXD_MEMBER,0(R2)                  COPY MEMBER NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH 1ST MEMBER\n         MVC   DSPCREQ_MEMBER,DXD_MEMBER         SET MEMBER NAME\n         LA    R1,DSPCREQ                        DATASPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           FIND MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            SUCCESSFUL?\n         JNE   ERR0020                           NO\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130\nMAIN0910 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         MVC   LOADREQ_MODULE,MODULE_OSOFFLD     MODULE TO LOAD\n         LA    R1,LOADREQ                        LOAD PARMS\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSOFFLD\n         ICM   R15,15,LOADREQ_EP                 OSOFFLD ENTRY POINT\n         ITRACE ID=OPEN\n         MVI   OFFLDREQ_FUNC,$OFFLDREQ_OPEN      SET OFFLOAD FUNCTION\n         LA    R1,OFFLDREQ                       OSOFFLD PARMS\n         BALR  R14,R15                           LINK TO OSOFFLD\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15\n         CH    R15,H4                            OPEN SUCCESSFUL?\n         JE    MAIN0960                          NO\n         CH    R15,H8                            EXIT?\n         JE    MAIN0180                          YES\n         TM    OPERAND_02_TYPE,$OPERAND_PRESENT  OPERAND 2 PRESENT?\n         JO    MAIN0930                          YES\n         MVC   DSPCREQ_RECORD_NBR,F1             FIRST RECORD\n         LA    R1,DIR_RECORD                     I/O AREA\n         ST    R1,DSPCREQ_RECORD_ADDR            SET ADDR IN PARMS\nMAIN0920 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         JH    MAIN0950                          END OF MEMBERS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE    SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           RETRIEVE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED    STORED?\n         JE    MAIN0940                          NO\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            SUCCESSFUL?\n         JNE   ERR0010                           NO\n         TM    DIR_FLAGS,$DIR_TAGGED             TAGGED?\n         JNO   MAIN0940                          NO\n         MVC   SPF_MEMBER,DIR_NAME               SET MEMBER NAME\n         MVC   OFFLDREQ_MEMBER,DIR_NAME          SET MEMBER NAME\nMAIN0930 DS    0H\n         ITRACE ID=WRITE,                                              +\n               DATA1=OFFLDREQ_MEMBER\n         MVI   OFFLDREQ_FUNC,$OFFLDREQ_WRITE     SET OFFLOAD FUNCTION\n         LA    R1,OFFLDREQ                       OSOFFLD PARMS\n         ICM   R15,15,LOADREQ_EP                 OSOFFLD ENTRY POINT\n         BALR  R14,R15                           LINK TO OSOFFLD\n         TM    OPERAND_02_TYPE,$OPERAND_PRESENT  OPERAND 2 PRESENT?\n         JO    MAIN0950                          YES\nMAIN0940 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR             CURRENT RECORD NUMBER\n         A     R1,F1                             PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR             SAVE NEW RECORD NUMBER\n         J     MAIN0920                          CHECK THIS MEMBER\nMAIN0950 DS    0H\n         ITRACE ID=CLOSE\n         MVI   OFFLDREQ_FUNC,$OFFLDREQ_CLOSE\n         LA    R1,OFFLDREQ                       OSOFFLD PARMS\n         ICM   R15,15,LOADREQ_EP                 OSOFFLD ENTRY POINT\n         BALR  R14,R15                           LINK TO OSOFFLD\n         MVC   COMM_DWORD,OFFLDREQ_COUNT\n         MVC   COMM_MSG_ID,H4                    SET MESSAGE NUMBER\n         BRAS  R9,MSG0000                        BUILD MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1              COPY MESSAGE\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR COMMAND\n         J     MAIN0180                          EXIT WITH RC=0\nMAIN0960 DS    0H\n         ITRACE ID=OPEN_ERR\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         J     MAIN0180\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=SORT\n         CH    R3,H2                             TWO OPERANDS?\n         JL    MAIN1010                          DEFAULT TO 'BY NAME'\n         JH    ERR0060                           TOO MANY\n         ICM   R2,15,OPERAND_02_ADDRESS          2ND OPERAND'S ADDRESS\n         CLC   NAME,0(R2)                        SORT BY NAME?\n         JE    MAIN1010\n         CLC   TTR,0(R2)                         SORT BY TTR?\n         JE    MAIN1020\n         CLC   CDATE,0(R2)                       SORT BY CDATE?\n         JE    MAIN1030\n         CLC   MDATE,0(R2)                       SORT BY MDATE/TIME?\n         JE    MAIN1040\n         CLC   SIZE,0(R2)                        SORT BY SIZE?\n         JE    MAIN1050\n         CLC   USER,0(R2)                        SORT BY USER?\n         JE    MAIN1060\n         MVI   COMM_MSG_ID+1,5\n         J     ERR1000                           EXIT\nMAIN1010 DS    0H\n         ITRACE ID=BY_NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_NAME\n         J     MAIN1070\nMAIN1020 DS    0H\n         ITRACE ID=BY_TTR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_TTR\n         J     MAIN1070\nMAIN1030 DS    0H\n         ITRACE ID=BY_CDATE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_CDATE\n         J     MAIN1070\nMAIN1040 DS    0H\n         ITRACE ID=BY_MDATE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_MDATE\n         J     MAIN1070\nMAIN1050 DS    0H\n         ITRACE ID=BY_SIZE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_SIZE\n         J     MAIN1070\nMAIN1060 DS    0H\n         ITRACE ID=BY_USER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_USER\nMAIN1070 DS    0H\n         ITRACE ID=SORTDSPC\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           SORT THE DATA SPACE\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR COMMAND\n         J     MAIN0000\n* ------------------------------------------------------------------- *\n*        SUBMIT                                                       *\n* ------------------------------------------------------------------- *\nMAIN1100 DS    0H\n         ITRACE ID=SUBMIT\n         CH    R3,H2                             PROPER NUMBER?\n         JL    ERR0050                           TOO FEW\n         JH    ERR0060                           TOO MANY\n         CLC   OPERAND_02_LENGTH,H8              OPERAND 2 TOO LONG?\n         JH    ERR0070                           YES\n         ICM   R2,15,OPERAND_02_ADDRESS          ADDR OF MEMBER'S NAME\n         MVC   DXD_MEMBER,0(R2)                  COPY MEMBER NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WIT RECORD 1\n         MVC   DSPCREQ_MEMBER,DXD_MEMBER         SET MEMBER NAME\n         LA    R1,DSPCREQ                        DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           LOCATE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            MEMBER FOUND?\n         JNE   ERR0210                           NO\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130                           DELETED OR RENAMED..\n         MVC   LOADREQ_MODULE,MODULE_OSSUBMIT    MODULE TO LOAD\n         LA    R1,LOADREQ                        LOAD PARMS\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSSUBMIT\n         MVC   SUBREQ_DSN,SESS_DSN               COPY DATASET NAME\n         MVC   SUBREQ_MEMBER,0(R2)               COPY MEMBER NAME\n         LA    R1,SUBREQ                         SUBMIT PARMS\n         ITRACE ID=CALL_SUB,                                           +\n               RDATA1=R1\n         ICM   R15,15,LOADREQ_EP                 OSSUBMIT ENTRY POINT\n         BALR  R14,R15                           CALL OSSUBMIT\n         MVC   SPF_ZCMD,COMM_BLANKS\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         J     MAIN0180                          EXIT\nMAIN1110 DS    0H\n         ITRACE ID=SUBMIT\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_MEMBER,VDATA_MEMBER       SET MEMBER NAME\n         LA    R1,DSPCREQ                        DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           LOCATE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            MEMBER FOUND?\n         JNE   ERR0210                           NO\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130                           DELETED OR RENAMED..\n         MVC   LOADREQ_MODULE,MODULE_OSSUBMIT    MODULE TO LOAD\n         LA    R1,LOADREQ                        LOAD PARMS\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSSUBMIT\n         MVC   SUBREQ_DSN,SESS_DSN               COPY DATASET NAME\n         MVC   SUBREQ_MEMBER,VDATA_MEMBER        COPY MEMBER NAME\n         LA    R1,SUBREQ                         SUBMIT PARMS\n         ITRACE ID=CALL_SUB,                                           +\n               RDATA1=R1\n         ICM   R15,15,LOADREQ_EP                 OSSUBMIT ENTRY POINT\n         BALR  R14,R15                           CALL OSSUBMIT\n         MVC   DXD_MSG,COMM_MSG_2\n         LA    R2,DXD_MSG\n         LA    R3,L'DXD_MSG\n         TPUT  (R2),(R3),R\n         J     MAIN0220\n* ------------------------------------------------------------------- *\n*        Delete a member                                              *\n* ------------------------------------------------------------------- *\nMAIN1200 DS    0H\n         ITRACE ID=LINE_DEL,                                           +\n               DATA1=VDATA_MEMBER\n         MVI   VDATA_SELECTION,C' '              RESET THE SELECTION\n         MVC   SPF_MEMBER,VDATA_MEMBER\n         MVC   DXD_MEMBER,VDATA_MEMBER\n         MVC   SESS_DISP_PANEL,OS0006\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                           REQUEST CONFIRMATION\n         CH    R15,H4                            RC = 4?\n         JE    MAIN1250                          YES, ABORT\n         CH    R15,H8                            RC = 4?\n         JE    MAIN1250                          YES, ABORT\n         OC    SPF_YES_OR_NO,COMM_BLANKS\n         CLI   SPF_YES_OR_NO,C'Y'                DELETE CONFIRMED?\n         JE    MAIN1220                          YES\n         CLI   SPF_YES_OR_NO,C'N'                ANSWER 'NO'?\n         JE    MAIN1250                          YES\nMAIN1220 DS    0H\n         BRAS  R9,OPEN0000                       MAKE SURE DCB IS OPEN\n         LA    R3,DXD_MEMBER\n         ITRACE ID=STOW,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R3\n         STOW  (R8),(R3),D                       DELETE THE MEMBER\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0100                           NO\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         OI    DIR_FLAGS,$DIR_DELETED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\n         MVC   VDATA_STATISTICS(DELETED_MSG_L),DELETED_MSG\n         J     MAIN0220                          PROCESS NEXT SELECTION\n* ------------------------------------------------------------------- *\n*        Delete (primary command)                                     *\n* ------------------------------------------------------------------- *\nMAIN1230 DS    0H\n         ITRACE ID=PRIM_DEL\n         CH    R3,H2                             TWO PARAMETERS?\n         JL    MAIN1300                          JUST ONE\n         JH    ERR0060                           TOO MANY\n         CLC   OPERAND_02_LENGTH,H8              MEMBER NAME TOO LONG?\n         JH    ERR0070                           YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   DSPCREQ_MEMBER,0(R2)              COPY MEMBER NAME\n         MVC   DXD_MEMBER,0(R2)                  COPY MEMBER NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         LA    R1,DSPCREQ                        PARM BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           FIND THE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   ERR0020                           NOT FOUND\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130\n         MVC   SPF_MEMBER,DSPCREQ_MEMBER\n         MVC   SPF_ZCMD,COMM_BLANKS\n         MVC   SESS_DISP_PANEL,OS0006\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                           LINK TO SPF\n         CH    R15,H4                            RC = 4?\n         JE    MAIN1250                          YES, ABORT\n         CH    R15,H8                            RC = 4?\n         JE    MAIN1250                          YES, ABORT\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0090                           NO\n         CLI   SPF_YES_OR_NO,C'Y'                DELETE CONFIRMED?\n         JE    MAIN1240                          YES\n         CLI   SPF_YES_OR_NO,C'N'                ANSWER 'NO'?\n         JE    MAIN1250                          YES\nMAIN1240 DS    0H\n         BRAS  R9,OPEN0000                       MAKE SURE DCB IS OPEN\n         LA    R3,DSPCREQ_MEMBER                 MEMBER NAME\n         ITRACE ID=STOW,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R3\n         STOW  (R8),(R3),D                       DELETE THE MEMBER\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0100                           NO\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         OI    DIR_FLAGS,$DIR_DELETED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           UPDATE THE RECORD\n         J     MAIN0000                          REBUILD DISPLAY\nMAIN1250 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR THE COMMAND\n         MVC   SPF_MSG_1(MSG02_L),MSG02\n         J     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1300 DS    0H\n         ITRACE ID=DELFLAGD\n         MVC   DSPCREQ_RECORD_NBR,F1             FIRST RECORD\n         LA    R1,DIR_RECORD\n         ST    R1,DSPCREQ_RECORD_ADDR\nMAIN1310 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         JH    MAIN0000\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ                        DSPCREQ PARMS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         JE    MAIN0000                          NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   ERR0010                           ERROR..\n         TM    DIR_FLAGS,$DIR_DELETED\n         JO    MAIN1340                          MEMBER DELETED\n         TM    DIR_FLAGS,$DIR_TAGGED             TAGGED?\n         JNO   MAIN1340                          NO\nMAIN1320 DS    0H\n         ITRACE ID=MAIN1320,                                           +\n               DATA1=DIR_NAME\n         MVC   SPF_MEMBER,DIR_NAME               COPY MEMBER NAME\n         MVC   SPF_ZCMD,COMM_BLANKS\n         MVC   SESS_DISP_PANEL,OS0006\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                           LINK TO OSCNFRM\n         CH    R15,H4                            RC = 4?\n         JE    MAIN0000                          YES, ABORT\n         CH    R15,H8                            RC = 4?\n         JE    MAIN0000                          YES, ABORT\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0090                           NO\n         CLI   SPF_YES_OR_NO,C'Y'                DELETE CONFIRMED?\n         JE    MAIN1330                          YES\n         CLI   SPF_YES_OR_NO,C'N'                ANSWER 'NO'?\n         JE    MAIN1340                          YES\nMAIN1330 DS    0H\n         BRAS  R9,OPEN0000                       MAKE SURE DCB IS OPEN\n         LA    R3,DIR_NAME                       MEMBER NAME\n         ITRACE ID=DELETE,                                             +\n               RDATA1=R8,                                              +\n               RDATA2=R3\n         STOW  (R8),(R3),D                       DELETE THE MEMBER\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0100                           NO\n         OI    DIR_FLAGS,$DIR_DELETED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           UPDATE INFO\nMAIN1340 DS    0H\n         ITRACE ID=MAIN1340\n         L     R1,DSPCREQ_RECORD_NBR\n         A     R1,F1                             PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR             SAVE RECORD NUMBER\n         J     MAIN1310\n* ------------------------------------------------------------------- *\n*        Rename (primary command)                                     *\n* ------------------------------------------------------------------- *\nMAIN1500 DS    0H\n         ITRACE ID=PRIM_REN\n         CH    R3,H2                             PROPER PARAMETERS?\n         JL    ERR0050                           TOO FEW\n         JH    ERR0060                           TOO MANY\n         CLC   OPERAND_02_LENGTH,H8              MEMBER NAME TOO LONG?\n         JH    ERR0070                           YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   SPF_MEMBER,0(R2)                  COPY MEMBER NAME\n         MVC   DSPCREQ_MEMBER,SPF_MEMBER         COPY MEMBER NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         LA    R1,DSPCREQ                        DSPCREQ PARMS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            MEMBER EXIST?\n         JNE   ERR0120                           NO\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR THE COMMAND\n         MVC   SPF_NEW_MEMBER,COMM_BLANKS\nMAIN1510 DS    0H\n         LA    R1,DISPLAY                        SPF FUNCTION\n         ST    R1,DXD_SPF_1                      SET ADDRESS\n         LA    R1,OS0007                         PANEL NAME\n         ST    R1,DXD_SPF_2                      SET ADDRESS\n         OI    DXD_SPF_2,X'80'                   SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                  PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK                  SPF ENTRY POINT\n         BALR  R14,R15                           LINK TO SPF\n         CH    R15,H4                            RC = 4?\n         JE    MAIN1550                          YES, ABORT\n         CH    R15,H8                            RC = 4?\n         JE    MAIN1550                          YES, ABORT\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0090                           NO\n         OC    SPF_NEW_MEMBER,COMM_BLANKS\n         CLC   SPF_NEW_MEMBER,COMM_BLANKS\n         JE    MAIN1510                          DISPLAY AGAIN\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         MVC   DSPCREQ_MEMBER,SPF_NEW_MEMBER\n         LA    R1,DSPCREQ                        DSPCREQ PARMS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            NAME ALREADY EXIST?\n         JE    ERR0110                           YES\n         MVC   DSPCREQ_MEMBER,SPF_MEMBER\n         LA    R1,DSPCREQ                        DSPCREQ PARMS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            MEMBER FOUND?\n         JNE   ERR0120                           NO\n         MVC   DXD_MEMBER,DIR_NAME               COPY MEMBER NAME\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130\nMAIN1520 DS    0H\n         MVC   DXD_RENAME_OLD,SPF_MEMBER\n         MVC   DXD_RENAME_NEW,SPF_NEW_MEMBER\n         BRAS  R9,OPEN0000                       MAKE SURE DCB IS OPEN\n         LA    R3,DXD_RENAME_OLD\n         ITRACE ID=STOW,                                               +\n               DATA1=0(R3),                                            +\n               DATA2=8(R3)\n         STOW  (R8),(R3),C                       RENAME THE MEMBER\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0140                           NO\n         MVC   DIR_NAME,SPF_NEW_MEMBER           COPY NEW NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         L     R1,DATASPACE_1_LAST_RECORD        HIGHEST RECORD SO FAR\n         A     R1,F1                             PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR             SET RECORD NUMBER\n         LA    R1,DSPCREQ                        OSDSPACE PARMS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           STORE THE NEW RECORD\n         MVC   DSPCREQ_MEMBER,SPF_MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         OI    DIR_FLAGS,$DIR_RENAMED\n         MVC   DIR_DATA(DIR_SPF_L),COMM_BLANKS\n         MVC   DIR_DATA(L'SPF_NEW_MEMBER),SPF_NEW_MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           UPDATE THE RECORD\n         MVI   SESS_SORT,0                       RESET SORT INDICATORS\n         J     MAIN0000                          REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        Rename (line command)                                        *\n* ------------------------------------------------------------------- *\nMAIN1530 DS    0H\n         ITRACE ID=LINE_REN\n         MVI   VDATA_SELECTION,C' '              RESET THE SELECTION\n         MVC   SPF_MEMBER,VDATA_MEMBER           COPY MEMBER\n         MVC   DXD_MEMBER,VDATA_MEMBER           COPY MEMBER\n         MVC   SPF_NEW_MEMBER,COMM_BLANKS\n         LA    R1,DISPLAY                        SPF FUNCTION\n         ST    R1,DXD_SPF_1                      SET ADDRESS\n         LA    R1,OS0007                         PANEL NAME\n         ST    R1,DXD_SPF_2                      SET ADDRESS\n         OI    DXD_SPF_2,X'80'                   SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                  PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK                  SPF ENTRY POINT\n         BALR  R14,R15                           LINK TO SPF\n         CH    R15,H4                            RC = 4?\n         JE    MAIN1550                          YES, ABORT\n         CH    R15,H8                            RC = 8?\n         JE    MAIN1550                          YES, ABORT\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0090                           NO\n         MVC   DSPCREQ_MEMBER,SPF_NEW_MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         ITRACE ID=FIND_NEW,                                           +\n               DATA1=DSPCREQ_MEMBER\n         LA    R1,DSPCREQ                        PARM BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           FIND THE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JE    ERR0110                           MEMBER ALREADY EXISTS\n         MVC   DSPCREQ_MEMBER,SPF_MEMBER\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         ITRACE ID=FIND_OLD,                                           +\n               DATA1=SPF_MEMBER\n         LA    R1,DSPCREQ                        PARM BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           FIND THE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   ERR0120                           MEMBER NOT FOUND\n         MVC   DXD_RENAME_OLD,SPF_MEMBER\n         MVC   DXD_RENAME_NEW,SPF_NEW_MEMBER\n         BRAS  R9,OPEN0000                       MAKE SURE DCB IS OPEN\n         LA    R3,DXD_RENAME_OLD\n         ITRACE ID=STOW,                                               +\n               DATA1=0(R3),                                            +\n               DATA2=8(R3)\n         STOW  (R8),(R3),C                       RENAME THE MEMBER\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         JNZ   ERR0140                           NO\n         MVC   DIR_NAME,SPF_NEW_MEMBER           COPY NEW NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         L     R1,DATASPACE_1_LAST_RECORD        HIGHEST RECORD SO FAR\n         A     R1,F1                             PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR             SET RECORD NUMBER\n         LA    R1,DSPCREQ                        OSDSPACE PARMS\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           STORE THE NEW RECORD\n         MVC   DSPCREQ_MEMBER,SPF_MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH RECORD 1\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           RETRIEVE THE RECORD\n         OI    DIR_FLAGS,$DIR_RENAMED\n         MVC   DIR_DATA(DIR_SPF_L),COMM_BLANKS\n         MVC   DIR_DATA(L'SPF_NEW_MEMBER),SPF_NEW_MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                 OSDSPACE ENTRY POINT\n         BALR  R14,R15                           UPDATE THE RECORD\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\n         MVC   VDATA_STATISTICS(RENAMED_MSG_L),RENAMED_MSG\n         MVI   SESS_SORT,0                       RESET SORT INDICATORS\n         J     MAIN0220                          PROCESS NEXT SELECTION\nMAIN1550 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              CLEAR THE COMMAND\n         MVC   SPF_MSG_1(MSG03_L),MSG03\n         J     MAIN0000                          REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Verify member names in primary command are valid             *\n*                                                                     *\n*        . all member names must be 8 characters or less              *\n*        . member names must be in the directory                      *\n*        . members may not have been renamed or deleted               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1600 DS    0H\n         LA    R3,OPERAND_02_ADDRESS             START WITH OPERAND 2\n         USING OPERAND,R3\n         LH    R4,COMM_OPERANDS_NBR              NBR OF OPERANDS\n         BCTR  R4,0                              MINUS 1 FOR COMMAND\nMAIN1610 DS    0H\n         CLC   OPERAND_LENGTH,H8                 MEMBER NAME TOO LONG?\n         JH    ERR0070                           YES\n         ICM   R2,15,OPERAND_ADDRESS             OPERAND ADDRESS\n         MVC   DXD_MEMBER,COMM_BLANKS            INITIALIZE NAME\n         LH    R1,OPERAND_LENGTH                 NAME LENGTH\n         BCTR  R1,0                              FOR EX\n         EX    R1,MVC_02                         COPY MEMBER NAME\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH 1ST MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_MEMBER,DXD_MEMBER         COPY MEMBER NAME\n         ITRACE ID=SRCH,                                               +\n               DATA1=DSPCREQ_MEMBER\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           LOCATE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            OK?\n         JNE   ERR0020                           NOT FOUND\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         JNZ   ERR0130                           RENAMED OR DELETED\n         LA    R3,OPERAND_L(,R3)                 NEXT OPERAND\n         BRCT  R4,MAIN1610                       CHECK NEXT OPERAND\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Perform operation on list of named members                   *\n*                                                                     *\n*        names have already been verified                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1700 DS    0H\n         LA    R3,OPERAND_02_ADDRESS             START WITH OPERAND 2\n         LH    R4,COMM_OPERANDS_NBR              NBR OF OPERANDS\n         BCTR  R4,0                              MINUS 1 FOR COMMAND\nMAIN1710 DS    0H\n         ICM   R2,15,OPERAND_ADDRESS             OPERAND ADDRESS\n         MVC   DXD_MEMBER,COMM_BLANKS            INITIALIZE NAME\n         LH    R1,OPERAND_LENGTH                 NAME LENGTH\n         BCTR  R1,0                              FOR EX\n         EX    R1,MVC_02                         COPY MEMBER NAME\n         MVC   DSPCREQ_RECORD_NBR,F1             START WITH 1ST MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_MEMBER,DXD_MEMBER         COPY MEMBER NAME\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           LOCATE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            OK?\n         JNE   ERR0020                           NOT FOUND\n         NC    DIR_FLAGS,DXD_AND                 'AND' FLAGS OFF\n         OC    DIR_FLAGS,DXD_OR                  'OR' FLAGS ON\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE      SET COMMAND\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           UPDATE DIRECTORY\n         LA    R3,OPERAND_L(,R3)                 NEXT OPERAND\n         BRCT  R4,MAIN1710                       CHECK NEXT OPERAND\n         BR    R9\n         DROP  R3\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2000 DS    0H\n         ITRACE ID=SHOW\n         SR    R15,R15\n         CLC   COMM_OPERANDS_NBR,H1              ONE OPERAND?\n         JE    MAIN2040                          YES.. SHOW ALL\n         CLC   COMM_OPERANDS_NBR,H3              TOO MANY?\n         JH    ERR0060                           YES\n         JNE   MAIN2010                          OTHERWISE TWO OPERANDS\n         ICM   R1,15,OPERAND_02_ADDRESS\n         CLC   OPERAND_02_LENGTH,H3              LENGTH = 3?\n         JNE   ERR0190                           NO.. CANNOT BE 'NOT'\n         CLC   NOT,0(R1)                         'NOT' KEYWORD?\n         JNE   ERR0190\n         ICM   R1,15,OPERAND_03_ADDRESS\n         ICM   R15,3,OPERAND_03_LENGTH\n         J     MAIN2020\nMAIN2010 DS    0H\n         ICM   R1,15,OPERAND_02_ADDRESS\n         ICM   R15,3,OPERAND_02_LENGTH\n         CLC   ALL,0(R1)                         ALL?\n         JE    MAIN2040                          YES\nMAIN2020 DS    0H\n         BCTR  R15,0\n         EX    R15,SHOW_CLC                      'TAGGED' KEYWORD?\n         JNE   ERR0190\n         CLC   COMM_OPERANDS_NBR,H2              TWO OPERANDS?\n         JNE   MAIN2030\n         ITRACE ID=SHOW_TAG\n         MVC   SPF_TAGGED,TAGGED\n         OI    SESS_USER_OPTIONS,$OPTIONS_SHOW_TAGGED\n         NI    SESS_USER_OPTIONS,255-$OPTIONS_SHOW_NOT_TAGGED\n         J     MAIN2050\nMAIN2030 DS    0H\n         ITRACE ID=SHOW_NOT\n         OI    SESS_USER_OPTIONS,$OPTIONS_SHOW_NOT_TAGGED\n         NI    SESS_USER_OPTIONS,255-$OPTIONS_SHOW_TAGGED\n         MVC   SPF_TAGGED,NOT_TAGGED\n         J     MAIN2050\nMAIN2040 DS    0H\n         ITRACE ID=SHOW_ALL\n         NI    SESS_USER_OPTIONS,255-$OPTIONS_SHOW_TAGGED\n         NI    SESS_USER_OPTIONS,255-$OPTIONS_SHOW_NOT_TAGGED\n         MVC   SPF_TAGGED,COMM_BLANKS\nMAIN2050 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS\n         J     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2100 DS    0H\n         ITRACE ID=REFRESH\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR       DATA SPACE FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           CLEAR DATA SPACE\n         MVC   LOADREQ_MODULE,MODULE_OSDESERV    MODULE NAME\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSDESERV\n         ICM   R15,15,LOADREQ_EP                 OSDESERV ENTRY POINT\n         BALR  R14,R15                           LINK TO OSDESERV\n         ITRACE ID=DESERVRC,                                           +\n               RDATA1=R15\n         CLC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         JNH   MAIN0000                          DISPLAY\n         J     MAIN0400                          GO TO BOTTOM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2200 DS    0H\n         ITRACE ID=LINECMDS\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LARL  R0,LINE_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15\n         J     MAIN0220\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN3000 DS    0H\n         ITRACE ID=DUMP,                                               +\n               DATA1=DATASPACE_1_NAME,                                 +\n               DATA2=SESS_DD\n         MVI   DAIR_FUNC,$DAIR_ALLOC             SET FUNCTION\n         MVC   DAIR_DD,OSDUMP_DD                 COPY DDNAME\n         MVC   DAIR_SYSOUT,COMM_SYSOUT_CLASS\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OC    DAIR_R15,DAIR_R15                 SUCCESSFUL?\n         JNZ   ERR0020                           NO\n         L     R1,=A(DUMP_DCB_I)\n         MVC   DUMP_DCB(DUMP_DCB_L),0(R1)\n         LA    R2,DUMP_DCB                       DCB ADDRESS\n         ST    R2,DSPCREQ_DCB                    PASS IT TO OSDSPACE\n         ITRACE ID=OPENDUMP,                                           +\n               RDATA1=R2\n         OPEN  ((R2),OUTPUT),                    OPEN OUTPUT DCB       +\n               MODE=31,                                                +\n               MF=(E,DXD_OPEN)\n         LA    R1,DUMP_IO_AREA                   I/O AREA ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR            PASS ADDRESS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_DUMP\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=CLS_DUMP,                                           +\n               RDATA1=R2\n         CLOSE ((R2)),                           CLOSE DCB             +\n               MODE=31,                                                +\n               MF=(E,DXD_CLOSE)\n         LR    R1,R2\n         BRAS  R9,FREEPOOL\n         MVC   SPF_MSG_1(MSG01_L),MSG01\n         J     MAIN0180\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN3200 DS    0H\n         ITRACE ID=DISP_CMD\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LARL  R0,COMMAND_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                           DISPLAY COMMANDS\n         J     MAIN0185                          DISPLAY SAME DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPEN0000 DS    0H\n         TM    SESS_DCB_FLAGS,$SESS_DCB_OPEN     DCB OPEN?\n         BOR   R2                                YES\n         ITRACE ID=OPEN,                                               +\n               RDATA1=R8\n         OPEN  ((R8),OUTPUT),                                          +\n               MODE=31,                          OPEN DCB              +\n               MF=(E,DXD_OPEN)\n         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN     REMEMBER DCB IS OPEN\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRTRY0000 DS    0H\n         ITRACE ID=ABEND,                                              +\n               DATA1=(SESS_SYSTEM_CODE,6)\n         CLC   SESS_ABEND_DISP,AP1_DISP          ABEND ON CREATE DATE?\n         JE    RTRY0010                          YES\n         CLC   SESS_ABEND_DISP,AP2_DISP          MODIFICATION DATE?\n         JE    RTRY0020                          YES\n         L     R15,COMM_V_OSABEND\n         BALR  R14,R15                           LINK TO OSABEND\n         NI    SESS_ABEND_FLAG,255-$ABENDED\n         J     EXIT0000\nRTRY0010 DS    0H\n         ITRACE ID=BAD_CREDT                     CREATE DATE NOT VALID\n         MVC   VDATA_CREATE_DATE,=C'--------'\n         J     MAIN0100                          RESUME\nRTRY0020 DS    0H\n         ITRACE ID=BAD_MODDT\n         MVC   VDATA_MOD_DATE,=C'--------'\n         J     MAIN0110                          RESUME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1',C'ERROR FROM OSDSPACE'\nERR0020  DS    0H\n         ITRACE ID=DSPC_ERR\n         MVC   SPF_MSG_1,COMM_MSG_1              COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2              COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3              COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4              COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5              COPY MESSAGE\n         J     MAIN0180                          EXIT\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,6                   TOO FEW OPERANDS\n         J     ERR1000\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,7                   TOO MANY OPERANDS\n         J     ERR1000\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,8                   OPERAND TOO LONG\n         J     ERR1000\nERR0080  DS    0H\n         MVI   COMM_MSG_ID+1,2                   INVALID COMMAND\n         MVC   COMM_INFO_01,SPF_ZCMD             COPY COMMAND\n         J     ERR1000\nERR0090  DS    0H\n         DC    H'9'\n         DC    C'DISPLAY FAILED'\nERR0100  DS    0H\n         ST    R15,COMM_DWORD                    SET RETURN CODE\n         MVI   COMM_MSG_ID+1,9                   STOW (DELETE) FAILED\n         J     ERR1000\nERR0110  DS    0H\n         MVC   COMM_INFO_01,DSPCREQ_MEMBER\n         MVI   COMM_MSG_ID+1,10                  MEMBER ALREADY EXISTS\n         J     ERR1000\nERR0120  DS    0H\n         MVI   COMM_MSG_ID+1,11                  MEMBER NOT FOUND\n         MVC   COMM_INFO_01,SPF_MEMBER\n         J     ERR1000\nERR0130  DS    0H\n         MVI   COMM_MSG_ID+1,12                  DELETED OR RENAMED\n         MVC   COMM_INFO_01,DXD_MEMBER\n         J     ERR1000\nERR0140  DS    0H\n         MVI   COMM_MSG_ID+1,13                  STOW (RENAME) FAILED\n         ST    R15,COMM_DWORD                    SET RETURN CODE\n         J     ERR1000\nERR0150  DS    0H\n         DC    H'0'\nERR0160  DS    0H\n         DC    H'0'\nERR0170  DS    0H\n         MVI   COMM_MSG_ID+1,15                  NO SEARCH ARG\n         J     ERR1000\nERR0180  DS    0H\n         MVI   COMM_MSG_ID+1,16                  BOTTOM OF DATA REACHED\n         J     ERR1000\nERR0190  DS    0H\n         MVI   COMM_MSG_ID+1,17                  INVALID SHOW OPTION\n         J     ERR1000\nERR0200  DS    0H\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         JE    EXIT0000\n         DC    H'0'\nERR0210  DS    0H\n         MVI   COMM_MSG_ID+1,18                  MEMBER NOT FOUND\n         MVC   COMM_INFO_01(L'DXD_MEMBER),DXD_MEMBER MEMBER NAME\n         J     ERR1000\nERR0220  DS    0H\n         MVI   COMM_MSG_ID+1,19\nERR1000  DS    0H\n         BRAS  R9,MSG0000                        BUILD THE MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1              COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2              COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3              COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4              COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5              COPY MESSAGE\n         J     MAIN0180\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVC   COMM_MSG_CSECT,DXD_CSECT          CSECT FOR MESSAGES\n         L     R15,COMM_V_OSMSG                  OSMSG ENTRY POINT\n         BALR  R14,R15                           BUILD THE MESSAGE\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEBUG000 DS    0H\n         ITRACE ID=DEBUG\n         L     R15,COMM_V_OSDEBUG\n         BALR  R14,R15\n         J     MAIN0180\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN   SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                           FREE VDATA\n         TM    SESS_DCB_FLAGS,$SESS_DCB_OPEN     DCB OPEN?\n         JNO   CLEAN010                          NO\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R8\n         CLOSE ((R8)),                           CLOSE DCB             +\n               MODE=31,                                                +\n               MF=(E,DXD_CLOSE)\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN DCB IS CLOSED\nCLEAN010 DS    0H\n         ICM   R8,15,SESS_DCB_ADDR               DCB PRESENT?\n         JZ    CLEAN020                          NO\n         ITRACE ID=FREEPOOL,                                           +\n               RDATA1=R8\n         LR    R1,R8\n         BRAS  R9,FREEPOOL\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R8\n         L     R0,SESS_DCB_LENGTH\n         LR    R1,R8\n         BRAS  R9,FREEMAIN\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\nCLEAN020 DS    0H\n         LA    R0,OSDIR_DXD_L                    WORK AREA SIZE\n         LR    R1,R13                            COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                       RESTORE R13\n         BRAS  R9,FREEMAIN\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         SR    R15,R15\n         J     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LH    R15,DXD_RC                        RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15,                                             +\n               DATA2=(12(R13),4)\n         L     R13,4(,R13)                       RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                      RESTORE RETURN POINT\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS\n         BR    R14                               RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        For the most part, this code is \"base register-less\".        *\n*        It uses the relative mode instructions where possible.       *\n*                                                                     *\n*        The parts of the code that do require a base register        *\n*        are grouped here.                                            *\n*                                                                     *\n*        As of Jan 2010, GETMAIN, FREEMAIN, and FREEPOOL generate     *\n*        B or BAL instructions.  I suspect that in the future, IBM    *\n*        will changed these macros to also use relative mode          *\n*        addressing instructions.  At that time the code could        *\n*        changed so GETAIN, FREEMAIN, and FREEPOOL are in-line.       *\n*                                                                     *\n*        The base register is R10                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBASED_AREA DS  0H\n\nGETMAIN1 DS    0H\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         BR    R9\nGETMAIN2 DS    0H\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         BR    R9\nFREEMAIN DS    0H\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         BR    R9\nFREEPOOL DS    0H\n         FREEPOOL (1)\n         BR    R9\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R7),HEADING_01                COPY HEADING\nMVC_02   MVC   DXD_MEMBER(0),0(R2)               COPY MEMBER NAME\nSHOW_CLC CLC   0(0,R1),TAGGED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1              DC    F'1'\nF2              DC    F'2'\nH1              DC    H'1'\nH2              DC    H'2'\nH3              DC    H'3'\nH4              DC    H'4'\nH8              DC    H'8'\n\nPDSDCB_I DCB   DSORG=PO,                                               +\n               DDNAME=ANYDD,                                           +\n               MACRF=W\nPDSDCB_L       EQU   *-PDSDCB_I\n\nDUMP_DCB_I     DCB DSORG=PS,                                           +\n               DDNAME=OSDUMP,                                          +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               BLKSIZE=13300,                                          +\n               MACRF=PM\nDUMP_DCB_L     EQU      *-DUMP_DCB_I\n\nOPEN_I         OPEN     (*,OUTPUT),                                    +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU      *-OPEN_I\nCLOSE_I        CLOSE    (*),                                           +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU      *-CLOSE_I\n\nAP1_DISP        DC    Y((AP1-OSDIR)+4)\nAP2_DISP        DC    Y((AP2-OSDIR)+4)\n\n\nP1900000        DC    P'1900000'\n\nEDIT_WORD_1     DC    X'4020202020202120'\nEDIT_WORD_2     DC    X'F0212020204B202021'\nEDIT_WORD_3     DC    X'40202020202020202120'\n\nMODULE_OSAPPEND DC    CL8'OSAPPEND'\nMODULE_OSBROWSE DC    CL8'OSBROWSE'\nMODULE_OSDESERV DC    CL8'OSDESERV'\nMODULE_OSOFFLD  DC    CL8'OSOFFLD '\nMODULE_OSSUBMIT DC    CL8'OSSUBMIT'\nALL             DC    C'ALL '\nBROWSE          DC    CL8'BROWSE'\nCDATE           DC    C'CDATE'\nDISPLAY         DC    C'DISPLAY'\nOSABEND         DC    CL8'OSABEND'\nOSDUMP_DD       DC    CL8'OSDUMP'\nDIR_PANEL       DC    CL8'OSDIR'\nOS0006          DC    CL8'OS0006'\nOS0007          DC    CL8'OS0007'\nMDATE           DC    C'MDATE'\nNAME            DC    C'NAME'\nNOT             DC    C'NOT'\nNOT_TAGGED      DC    C'NOT TAGGED'\nSIZE            DC    C'SIZE'\nTAGGED          DC    C'TAGGED    '\nTTR             DC    C'TTR'\nUSER            DC    C'USER'\n\nAPPND_MSG       EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'<-------- Appended '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nAPPND_MSG_L     EQU   *-APPND_MSG\n\nDELETED_MSG     EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'<-------- Deleted  '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nDELETED_MSG_L   EQU   *-DELETED_MSG\n\nRENAMED_MSG     EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'<-------- Renamed  '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nRENAMED_MSG_L   EQU   *-RENAMED_MSG\n\nOFFLD_MSG       EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'<-------- Offloaded'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nOFFLD_MSG_L     EQU   *-OFFLD_MSG\n\nRESET_MSG       EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'<-------- Reset    '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nRESET_MSG_L     EQU   *-RESET_MSG\n\nTAGGED_MSG      EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'<-------- Tagged   '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nTAGGED_MSG_L    EQU   *-TAGGED_MSG\n\nMSG01    DC    C'DATASPACE dump complete'\nMSG01_L  EQU   *-MSG01\nMSG02    DC    C'Member deletion aborted'\nMSG02_L  EQU   *-MSG02\nMSG03    DC    C'Member rename ABORTED'\nMSG03_L  EQU   *-MSG03\n\nHEADING_01      DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH_YELLOW)\n                DC    CL3' '\n                DC    Cl8'Name    '\n                DC    CL3' '\n                DC    CL6' TTR  '\n                DC    CL2' '\n                DC    CL5'VV.MM'\n                DC    CL1' '\n                DC    CL7'   Size'\n                DC    CL1' '\n                DC    CL7'   Init'\n                DC    CL1' '\n                DC    CL8'Created'\n                DC    CL1' '\n                DC    CL17'____Modified_____'\n                DC    CL1' '\n                DC    CL8'User'\nHEADING_01_L    EQU   *-HEADING_01\n\n                LTORG\n\n\nLINE_TABLE      DS    0H\n                CMD   A,MAIN0420,'Append'\n                CMD   B,MAIN0620,'Browse'\n                CMD   D,MAIN1200,'Delete'\n                CMD   J,MAIN1110,'Submit as batch job'\n                CMD   O,MAIN0510,'Offload'\n                CMD   R,MAIN1530,'Rename'\n                CMD   S,MAIN0620,'Select (browse)'\n                CMD   T,MAIN0710,'Tag'\n                CMD   V,MAIN0620,'View (browse)'\n                CMD   X,MAIN0540,'Reset tag'\n                CMD   ?,MAIN2200,'Display available line commands'\n                DC    X'FF'\n\nCOMMAND_TABLE   DS    0H\n                CMD   A,MAIN0800,'Append'\n                CMD   B,MAIN0630,'Browse'\n                CMD   D,MAIN1230,'Delete'\n                CMD   F,MAIN0450,'Find'\n                CMD   J,MAIN1100,'Submit as batch job'\n                CMD   L,MAIN0450,'Locate'\n                CMD   O,MAIN0900,'Offload'\n                CMD   R,MAIN1500,'Rename'\n                CMD   S,MAIN0630,'Select (browse)'\n                CMD   T,MAIN0720,'Tag'\n                CMD   X,MAIN0550,'Reset tag'\n                CMD   BR,MAIN0630,'BRowse'\n                CMD   FI,MAIN0450,'FInd'\n                CMD   FL,0,'List available formats'\n                CMD   SH,MAIN2000,'Set SHOW (tagged or all)'\n                CMD   DEL,MAIN1230,'DELete'\n                CMD   JOB,MAIN1100,'Subit as batch job'\n                CMD   LOC,MAIN0450,'LOCate'\n                CMD   OFF,MAIN0900,'OFFload'\n                CMD   REN,MAIN1500,'REName'\n                CMD   RES,MAIN0550,'RESet tag'\n                CMD   SEL,MAIN0630,'SELect (browse)'\n                CMD   SUB,MAIN1100,'SUBmit as batch job'\n                CMD   TAG,MAIN0720,'TAG'\n                CMD   FIND,MAIN0450,'FIND'\n                CMD   FLAG,MAIN0720,'FLAG (tag)'\n                CMD   LIST,0,'List available formats'\n                CMD   SHOW,MAIN2000,'Set SHOW (tagged or all)'\n                CMD   SORT,MAIN1000,'SORT name/ttr/cdate/mdate/size/use+\n               r'\n                CMD   VIEW,MAIN0630,'VIEW (browse)'\n                CMD   DEBUG,DEBUG000,'Display internal data'\n                CMD   FLIST,0,'List available formats'\n                CMD   RESET,MAIN0550,'RESET tag'\n                CMD   RFIND,MAIN0470,'Repeat previous FIND'\n                CMD   APPEND,MAIN0800,'APPEND'\n                CMD   BROWSE,MAIN0630,'BROWSE'\n                CMD   DELETE,MAIN1230,'DELETE'\n                CMD   LOCATE,MAIN0450,'LOCATE'\n                CMD   RENAME,MAIN1500,'RENAME'\n                CMD   SELECT,MAIN0630,'SELECT'\n                CMD   SUBMIT,MAIN1100,'SUBMIT as batch job'\n                CMD   OFFLOAD,MAIN0900,'OFFLOAD'\n                CMD   REFRESH,MAIN2100,'REFRESH'\n                CMD   DUMPDATA,MAIN3000,'Dump dataspace'\n                CMD   ??,MAIN3200,'Display available commands'\n                DC    X'FF'\n\n\nOSDIREND        EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDIR_WORK       DSECT\n                 COPY   DXDPREF\n\nDXD_OPEN         DS     0F,(OPEN_L)X\nDXD_CLOSE        DS     0F,(CLOSE_L)X\n\nDXD_SPF_PARMS    DS     0F\nDXD_SPF_1        DS     F\nDXD_SPF_2        DS     F\nDXD_SPF_3        DS     F\n\nDXD_VWIDTH       DS     F\nDXD_VDEPTH       DS     F\n\nDXD_VDATA_ADDR      DS  A\nDXD_VDATA_LENGTH    DS  F\nDXD_CURSOR_POSITION DS  F\n\nDXD_LINES_REMAINING DS  F\nDXD_CURRENT_VDATA   DS  A\n\nDXD_RC           DS     H\n\nDXD_LINES        DS     H\n\nDXD_FLAGS        DS     X\n$DXD_INIT        EQU    X'80'\n$LINE_CMD        EQU    X'40'\n$EMPTY_MEMBER    EQU    X'20'\n\nDXD_AND          DS     X\nDXD_OR           DS     X\n\nDXD_WORK_1       DS     CL10\n\nDXD_RENAME_OLD   DS     CL8\nDXD_RENAME_NEW   DS     CL8\n\nDXD_SELECTION    DS     C\nDXD_MEMBER       DS     CL8\n\n                 COPY   DIR\n\nDUMP_CONTROL     DS     0F\nDUMP_DCB         DS     (DUMP_DCB_L)X\nDUMP_IO_AREA     DS     CL133\n\nDXD_MSG          DS     CL80\n\n                 DAIRREQ  DSECT=NO\n                 DSPCREQ  DSECT=NO\n                 APPNDREQ DSECT=NO\n                 LOADREQ  DSECT=NO\n                 OFFLDREQ DSECT=NO\n                 SUBREQ   DSECT=NO\nOSDIR_WORK       DSECT\nOSDIR_DXD_L      EQU      *-OSDIR_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVDATA             DSECT\nVDATA_ATTR_1      DS    X\nVDATA_SELECTION   DS    X\nVDATA_ATTR_2      DS    X\n                  DS    C\nVDATA_MEMBER      DS    CL8\nVDATA_ATTR_3      DS    X\n                  DS    CL2\nVDATA_STATISTICS  DS    0CL65\nVDATA_TTR         DS    CL6\n                  DS    CL2\nVDATA_VERSION     DS    CL2\nVDATA_DOT         DS    C\nVDATA_LEVEL       DS    CL2\n                  DS    C\nVDATA_SIZE        DS    CL7\n                  DS    C\nVDATA_INIT        DS    CL7\n                  DS    C\nVDATA_CREATE_DATE DS    CL8\n                  DS    C\nVDATA_MOD_DATE    DS    CL8\n                  DS    C\nVDATA_MOD_TIME    DS    CL8\n                  DS    C\nVDATA_USER        DS    CL8\nVDATA_L           EQU   *-VDATA\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     COMMAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  OSSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  IBMMAC  DCBD=PO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY    ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY    TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY    REGEQU\n                  END     OSDIR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSDISP": {"ttr": 9221, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x005\\x01\\t!\\x0f\\x01\\x10\\x00\\x7f\\x151\\x03o\\x03.\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-07T15:31:35", "lines": 879, "newlines": 814, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSDISP                                                *\n*                                                                     *\n*  Centralized SPF PANEL display.                                     *\n*                                                                     *\n*  Having a centralized panel display reduces the amount of code      *\n*  that would be needed for displaying panels.                        *\n*                                                                     *\n*  All panels that have a dynamic area use \"VDATA\" for the related    *\n*  SPF variable.                                                      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  At entry                                                           *\n*   SESS_DISPLAY_PANEL will have the panel name                       *\n*   SESS_DISP_VDATA_ADDR will have the data for the dynamic area      *\n*      on the panel if any.                                           *\n*   SESS_DISP_VDATA_LENGTH will have the length of the data for       *\n*      the dynamic area on the panel if any.                          *\n*   SESS_DISP_CURSOR will have the cursor position within the         *\n*      dynamic area or zero.                                          *\n*                                                                     *\n*  If SESS_DISP_VDATA_ADDR is non-zero, the variable VDATA will be    *\n*  VDEFINED using SESS_DISP_VDATA_ADDR as the variable address and    *\n*  SESS_DISP_VDATA_LENGTH for the length.                             *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  After a panel is DISPLAYed                                         *\n*    All messages (SPF_MSG_x) are cleared to blanks                   *\n*                                                                     *\n*    The ZCMD and scrolling variables are \"VGET\"ed (VGOT?)            *\n*                                                                     *\n*    If ZCMD is non-blank, it is PARSEd by calling OSPARSE.           *\n*                                                                     *\n*    If the ZCMD is a RECALL (or ? .. that is a question mark),       *\n*      the previous command is RECALLed to the primary command (ZCMD) *\n*      and the same panel re-displayed with the RECALLed command.     *\n*                                                                     *\n*    If the ZCMD is \"OS\", a \"new session\" is signalled by setting     *\n*      COMM_SESS_FUNC to $SESS_NEW_SESSION and exiting.               *\n*                                                                     *\n*    If the ZCMD is \"DXD\", call OSDXD to display the module entry     *\n*    points and DXD areas, COMM address, and SESSION block address.   *\n*                                                                     *\n*    If the ZCMD is ABEND, cause an 0C1 for debugging.                *\n*                                                                     *\n*    If the ZCMD is DEBUG, display fields from the COMM and SESSION   *\n*      control blocks.                                                *\n*                                                                     *\n*    If the ZCMD is DATASPACE, call OSSTOR to display the data in     *\n*      the current dataspace.                                         *\n*                                                                     *\n*    If the ZCMD is FORMAT, verify the format exists in the           *\n*      OSFORMATS library.  If valid, signal a FORMAT change by        *\n*      setting COMM_NEW_FORMAT to the name of the new format          *\n*      and exiting.                                                   *\n*                                                                     *\n*    If the command is \"SESS\", build and display a list of the        *\n*      \"sessions\".                                                    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDISP   CSECT\nOSDISP   AMODE 31\nOSDISP   RMODE ANY\n         USING OSDISP,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSDISP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(DISPEND-OSDISP)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)        SAVE REGISTERS\n         LR    R10,R15                COPY BASE ADDRESS\n         DROP  R15\n         USING OSDISP,R10\n         L     R15,COMM_DXD           DXD AREA BASE ADDRESS\n         A     R15,DXD_START          PLUS OFFSET TO OUR PORTION\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                COPY DXD AREA ADDRESS\n         USING DXDDISP,R13            DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(SESS_DISP_PANEL,8),                              +\n               DATA2=(COMM_ACTIVE_SESSION,4)\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVI   COMM_SESS_FUNC,0                  RESET\n         CLI   SESS_DISP_PANEL,C' '              BLANK?\n         BH    DISP0010                          NO\n         DC    H'0'                              TIME TO DEBUG!\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display the panel                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         ICM   R1,15,SESS_DISP_VDATA_ADDR        VDATA ADDRESS\n         BZ    DISP0020                          NO VDATA ON THIS PANEL\n         L     R0,SESS_DISP_VDATA_LENGTH         VDATA LENGTH\n         ITRACE ID=VDEFINE,                                            +\n               RDATA1=R1,                        VDATA ADDRESS         +\n               RDATA2=R0                         VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                           VDEFINE VDATA\nDISP0020 DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               DATA1=(SESS_DISP_PANEL,8),                              +\n               DATA2=(SESS_DISP_CURSOR,4)\n         LA    R1,DISPLAY\n         ST    R1,DXD_SPF_1                      SET ADDRESS\n         LA    R1,SESS_DISP_PANEL                PANEL TO DISPLAY\n         ST    R1,DXD_SPF_2                      SET ADDRESS\n         OI    DXD_SPF_2,X'80'                   FLAG END-OF-LIST\n         OC    SESS_DISP_CURSOR,SESS_DISP_CURSOR CURSOR POSITION?\n         BZ    DISP0030                          NO CURSOR POSITION\n         MVC   SPF_CURSOR_POSITION,SESS_DISP_CURSOR\n         NI    DXD_SPF_2,X'7F'                   RESET END-OF-LIST\n         XC    DXD_SPF_3,DXD_SPF_3               NO MESSAGE ADDRESS\n         LA    R1,VDATA                          FIELD NAME FOR CURSOR\n         ST    R1,DXD_SPF_4\n         LA    R1,SPF_CURSOR_POSITION            CURSOR POSITION\n         ST    R1,DXD_SPF_5\n         OI    DXD_SPF_5,X'80'                   END-OF-LIST\nDISP0030 DS    0H\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK                  SPF INTERFACE\n         BALR  R14,R15                           LINK TO SPF\n         STH   R15,SESS_RC                       SAVE RETURN CODE\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         MVC   SPF_MSG_1,COMM_BLANKS\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         MVC   COMM_MSG_1,COMM_BLANKS\n         MVC   COMM_MSG_2,COMM_BLANKS\n         MVC   COMM_MSG_3,COMM_BLANKS\n         MVC   COMM_MSG_4,COMM_BLANKS\n         MVC   COMM_MSG_5,COMM_BLANKS\n         CH    R15,H8                            ERROR?\n         BH    ERR0010                           YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0040 DS    0H\n         LA    R1,VGET                           COMMAND\n         ST    R1,DXD_SPF_1                      SET ADDRESS\n         LA    R1,VGET_LIST                      SYSTEM VARIABLES\n         ST    R1,DXD_SPF_2                      SET ADDRESS\n         OI    DXD_SPF_2,X'80'                   FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                  SPF PARM LIST\n         ITRACE ID=VGET_2,                                             +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK                  SPF INTERFACE\n         BALR  R14,R15                           VGET SPF VARIABLE(S)\n         ITRACE ID=VGET2_RC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=(SPF_ZSCREENC,5)\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   DISP0050                          NO\n         TM    SPF_FLAGS,$SPF_VPUT               VPUT ALREADY ISSUED?\n         BO    DISP0060                          YES\n* ------------------------------------------------------------------- *\n*       UPDATE SPF VARIABLES                                          *\n* ------------------------------------------------------------------- *\nDISP0050 DS    0H\n         OI    SPF_FLAGS,$SPF_VPUT               SET FLAG\n         LA    R1,VPUT                           COMMAND\n         ST    R1,DXD_SPF_1                      SET ADDRESS\n         LA    R1,VPUT_LIST\n         ST    R1,DXD_SPF_2\n         OI    DXD_SPF_2,X'80'                   SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                  PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK                  SPF INTERFACE\n         BALR  R14,R15                           UPDATE SPF VARIABLE(S)\n         ITRACE ID=VPUT2_RC,                                           +\n               RDATA1=R15\n         B     DISP0040                          DO VGET\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Rather than having some code duplicated the check for           *\n*     ABEND, FORMAT, and RECALL is done here.                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0060 DS    0H\n         XC    SPF_ROW,SPF_ROW\n         XC    SPF_COLUMN,SPF_COLUMN\n         PACK  COMM_DWORD,SPF_ZSCREENC           PACK CURSOR POSITION\n         CVB   R1,COMM_DWORD                     CONVERT TO BINARY\n         SR    R0,R0                             CLEAR R0\n         ICM   R2,15,SPF_VWIDTH                  WIDTH VALID?\n         BZ    DISP0065                          NO\n         D     R0,SPF_VWIDTH                     COMPUTE ROW/COLUMN\n         ST    R1,SPF_ROW                        SAVE ROW\n         ST    R0,SPF_COLUMN                     SAVE COLUMN\nDISP0065 DS    0H\n         ITRACE ID=ROW_COL,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         MVC   DXD_COMMAND,COMM_BLANKS\n         MVC   DXD_TEMP,COMM_BLANKS\n         MVC   DXD_COMMAND(L'SPF_ZCMD),SPF_ZCMD\n         MVC   DXD_TEMP(L'SPF_ZCMD),SPF_ZCMD\n         OC    DXD_TEMP,COMM_BLANKS              FORCE UPPER CASE\n         TM    COMM_FLAGS,$COMM_NO_UPPER         NO UPPER CASE ON?\n         BO    DISP0070                          YES\n         OC    DXD_COMMAND,COMM_BLANKS           FORCE UPPER CASE\nDISP0070 DS    0H\n         CLC   DXD_COMMAND,COMM_BLANKS           ALL BLANK?\n         BE    DISP0450                          YES\n         LA    R1,DXD_COMMAND                    ZCMD\n         ST    R1,PARSE_COMMAND\n         LA    R1,L'SPF_ZCMD                     MAXIMUM LENGTH\n         STH   R1,PARSE_LENGTH\n         LA    R1,COMM_OPERANDS                  OUTPUT LIST'S ADDRESS\n         ST    R1,PARSE_OPERANDS                 SET ADDRESS\n         LA    R1,20                             MAX OPERANDS\n         STH   R1,PARSE_OPERANDS_NBR\n         LA    R1,PARSEREQ                       PARAMETER BLOCK\n         L     R15,COMM_V_OSPARSE                PARSER'S ENTRY POINT\n         ITRACE ID=PARSE,                                              +\n               RDATA1=15,                                              +\n               RDATA2=R1\n         BALR  R14,R15                           PARSE THE COMMAND\n         ITRACE ID=PARSE_RC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=COMM_OPERANDS_NBR\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   ERR0020                           NO\n         SR    R3,R3                             CLEAR REGISTER\n         ICM   R3,3,PARSE_OPERANDS_NBR\n         STCM  R3,3,COMM_OPERANDS_NBR\n         ITRACE ID=OPERANDS,                                           +\n               RDATA1=R3\n         LTR   R3,R3\n         BZ    EXIT0000                          NO OPERANDS\n         ITRACE ID=OPERAND1,                                           +\n               DATA1=(OPERAND_01_ADDRESS,4),                           +\n               DATA2=(OPERAND_01_LENGTH,4)\n         ICM   R4,15,OPERAND_01_ADDRESS\n         CLC   =C'? ',DXD_TEMP                   RECALL?\n         BE    DISP0140                          YES\n         CLC   RECALL,DXD_TEMP                   RECALL?\n         BE    DISP0140                          YES\n         ITRACE ID=STORECMD,                                           +\n               RDATA1=R4,                                              +\n               DATA2=0(R4)\n         MVC   RCALLREQ_LENGTH,OPERAND_01_LENGTH\n         MVC   RCALLREQ_CMD,SPF_ZCMD\n         MVI   RCALLREQ_FUNC,$RCALLREQ_STORE\n         LA    R1,RCALLREQ\n         L     R15,COMM_V_OSRECALL\n         BALR  R14,R15\n         CLC   OPERAND_01_LENGTH,H2              TWO BYTES?\n         BL    EXIT0000                          NO\n         CLC   BROWSE(2),DXD_TEMP                BR(OWSE)?\n         BE    DISP0150                          YES\n         CLC   EDIT(2),DXD_TEMP                  ED(IT)?\n         BE    DISP0160                          YES\n         CLC   OS,DXD_TEMP                       OS?\n         BE    DISP0180                          YES\n         CLC   FLIST(2),DXD_TEMP                 FL(IST)?\n         BE    DISP0420                          YES\n         CLC   LF,DXD_TEMP                       LF (LISTF)?\n         BE    DISP0420                          YES\n         CLC   OPERAND_01_LENGTH,H3              THREE BYTES?\n         BL    EXIT0000                          NO\n         CLC   DXD_CMD,DXD_TEMP                  DXD?\n         BE    DISP0320                          YES\n         CLC   HEX(3),DXD_TEMP                   HEX?\n         BE    DISP0350                          YES\n         CLC   SMF(3),DXD_TEMP                   SMF?\n         BE    DISP0170                          YES\n         CLC   XTR_CMD,DXD_TEMP                  XTR?\n         BE    DISP0380                          YES\n         CLC   OPERAND_01_LENGTH,H4              FOUR BYTES?\n         BL    EXIT0000                          NO\n         CLC   EDIT(4),DXD_TEMP                  EDIT?\n         BE    DISP0160                          YES\n         CLC   SESS_CMD,DXD_TEMP                 SESS(ION)?\n         BE    DISP0200                          YES\n         CLC   STAE,DXD_TEMP                     STAE?\n         BE    DISP0330                          YES\n         CLC   TPUT(4),DXD_TEMP                  TPUT?\n         BE    TPUT0000                          YES\n         CLC   VDATA(4),DXD_TEMP                 VDATA?\n         BE    DISP0370                          YES\n         CLC   VHEX(4),DXD_TEMP                  VHEX?\n         BE    DISP0360                          YES\n         CLC   OPERAND_01_LENGTH,H5              AT LEAST FIVE BYTES?\n         BL    EXIT0000                          NO..\n         CLC   ABEND,DXD_TEMP                    ABEND?\n         BE    ABEND000                          YES\n         CLC   DEBUG,DXD_TEMP                    DEBUG?\n         BE    DEBUG000                          YES\n         CLC   FLIST,DXD_TEMP                    LIST FORMATS?\n         BE    DISP0420                          YES\n         CLC   OPERAND_01_LENGTH,H6              AT LEAST SIX BYTES?\n         BL    EXIT0000                          NO..\n         CLC   BROWSE(6),DXD_TEMP                BROWSE?\n         BE    DISP0150                          YES\n         CLC   FORMAT,DXD_TEMP                   FORMAT?\n         BE    DISP0080                          YES\n         CLC   NOSTAE,DXD_TEMP                   NOSTAE?\n         BE    DISP0340                          YES\n         CLC   OPERAND_01_LENGTH,H7              SEVEN BYTES LONG?\n         BL    EXIT0000                          NO..\n         CLC   SESSION_CMD,DXD_TEMP              SESSION?\n         BE    DISP0200                          YES\n         CLC   DATASPACE_CMD,DXD_TEMP            DATASPACE?\n         BE    DISP0400                          YES\n         B     EXIT0000                          OTHERWISE NOT OURS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process FORMAT commands                                      *\n*                                                                     *\n*    If no operands are given, switch to the default format           *\n*                                                                     *\n*    If two operands are given                                        *\n*      verify second operand is 8 characters or less                  *\n*      verify the second parameter is a member in the OSFORMAT        *\n*         library                                                     *\n*                                                                     *\n*    If the format is valid                                           *\n*       set COMM_NEW_FORMAT to the new format name                    *\n*       exit                                                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0080 DS    0H\n         ITRACE ID=FORMAT\n         TM    COMM_FLAGS,$COMM_NO_FORMAT        FORMAT ALLOWED?\n         BO    DISP0130                          NO\n         CH    R3,H2                             TWO OPERANDS?\n         BH    ERR0030                           TOO MANY\n         BL    DISP0090                          ONE..\n         CLC   OPERAND_02_LENGTH,H8              TOO LONG?\n         BH    ERR0040                           YES\n         ICM   R4,15,OPERAND_02_ADDRESS\n         OC    0(8,R4),COMM_BLANKS               FORCE TO UPPER CASE\n         ITRACE ID=FMAT_NAME,                                          +\n               DATA1=0(R4)\n         B     DISP0100\nDISP0090 DS    0H\n         ITRACE ID=DEFAULT\n         LA    R4,SESS_DEFAULT_FORMAT\nDISP0100 DS    0H\n         CLC   SESS_FORMAT,0(R4)                 SAME FORMAT?\n         BE    EXIT0000                          YES\n         ITRACE ID=VERIFY,                                             +\n               DATA1=0(R4)\n         ICM   R15,15,LOADREQ_EP                 OSFORMAT LOADED?\n         BNZ   DISP0110                          YES\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSFORMAT\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD                 LOAD OSFORMAT\n         BALR  R14,R15\n         ICM   R15,15,LOADREQ_EP                 OSFORMAT ENTRY POINT\nDISP0110 DS    0H\n         MVI   FMATREQ_FUNC,$FMATREQ_VERIFY\n         MVC   FMATREQ_FORMAT,0(R4)\n         LA    R1,FMATREQ\n         BALR  R14,R15                           VERIFY NEW NAME\n         CLI   FMATREQ_RC,$FMATREQ_OK\n         BNE   DISP0120\n         ITRACE ID=NEW_FMAT,                                           +\n               DATA1=0(R4)\n         MVC   COMM_NEW_FORMAT,0(R4)             SET NEW FORMAT NAME\n         B     EXIT0000                          EXIT\nDISP0120 DS    0H\n         ITRACE ID=NOTVALID\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     DISP0020\nDISP0130 DS    0H\n         ITRACE ID=NOTALLOW\n         MVI   COMM_MSG_ID+1,1\n         B     ERR0100\n* ------------------------------------------------------------------- *\n*        Process RECALL commands                                      *\n* ------------------------------------------------------------------- *\nDISP0140 DS    0H\n         ITRACE ID=RECALL\n         MVI   RCALLREQ_FUNC,$RCALLREQ_RECALL\n         LA    R1,RCALLREQ\n         L     R15,COMM_V_OSRECALL\n         BALR  R14,R15\n         MVC   SPF_ZCMD,RCALLREQ_CMD\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0150 DS    0H\n         ITRACE ID=BROWSE\n         CLC   SESS_FORMAT,BROWSE               FORMAT ALREADY BROWSE?\n         BE    EXIT0000                         YES\n         MVC   COMM_NEW_FORMAT,BROWSE           SET NEW FORMAT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0160 DS    0H\n         ITRACE ID=EDIT\n         CLC   SESS_FORMAT,EDIT                 FORMAT ALREADY EDIT?\n         BE    EXIT0000                         YES\n         MVC   COMM_NEW_FORMAT,EDIT             SET NEW FORMAT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0170 DS    0H\n         ITRACE ID=SMF\n         CLC   SESS_FORMAT,SMF                  FORMAT ALREADY SMF?\n         BE    EXIT0000                         YES\n         MVC   COMM_NEW_FORMAT,SMF              SET NEW FORMAT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process \"OS\" commands                                        *\n*                                                                     *\n*   Start a new session by prompting the user for a data set,         *\n*   data set and member, or unix path.                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0180 DS    0H\n         ITRACE ID=NEW_OS\n         TM    OPERAND_02_TYPE,$OPERAND_PRESENT\n         BO    DISP0190\n         MVC   SPF_ZCMD,COMM_BLANKS\n         XC    COMM_COMMAND_LENGTH,COMM_COMMAND_LENGTH\nDISP0190 DS    0H\n         OI    COMM_SESS_FUNC,$SESS_NEW_SESSION SET INDICATOR\n         B     EXIT0000                         EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process SESSION commands                                     *\n*                                                                     *\n*   Display a list of 'session's.                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0200 DS    0H\n         ITRACE ID=SESSION\n         TM    COMM_FLAGS,$COMM_NO_SESSION      SESSION SWITCH ALLOWED?\n         BO    DISP0310                         NO\n         LA    R1,PANEL_1                       PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN   SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA_LENGTH              VDATA LENGTH\n         ST    R1,DXD_VDATA_ADDR                VDATA ADDRESS\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          VDEFINE VDATA\n         MVC   DXD_VWIDTH,SPF_VWIDTH            SAVE WIDTH\n         MVC   DXD_VDEPTH,SPF_VDEPTH            SAVE DEPTH\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14                          ZERO R14\n         SR    R15,R15                          ZERO R15\n         MVCL  R0,R14                           INITIALIZE VDATA\n         L     R7,DXD_VDATA_ADDR                VDATA ADDRESS\n         USING VDATA_SESS,R7\n         L     R8,DXD_VDEPTH                    NBR OF LINES\n         LR    R6,R11                           COPY CURRENT SESS ADDR\nDISP     USING SESSION,R6\nDISP0210 DS    0H\n         ICM   R1,15,DISP.SESS_PREV             PREVIOUS BLOCK ON CHAIN\n         BZ    DISP0220\n         LR    R6,R1                            COPY SESSION ADDR\n         B     DISP0210                         LOOP\nDISP0220 DS    0H\n         ITRACE ID=1ST_SESS,                                           +\n               RDATA1=R6\n         ST    R6,DXD_FIRST_SESS                SAVE 1ST SESSION ADDR\nDISP0230 DS    0H\n         MVI   VDATA_SESS_ATTR1,$SCREEN_ATTR_INPUT\n         MVI   VDATA_SESS_SEL,C' '\n         MVI   VDATA_SESS_ATTR2,$SCREEN_ATTR_NORMAL\n         MVC   VDATA_SESS_FORMAT,DISP.SESS_FORMAT\n         CLC   DISP.SESS_FORMAT,FORMAT_STOR\n         BE    DISP0235\n         TM    DISP.SESS_KEYWORD_FLAGS_2,$KEYWORD_ACT\n         BO    DISP0250\n         CLI   DISP.SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         BE    DISP0240\n         MVC   VDATA_SESS_DSN,DISP.SESS_DSN     COPY DATA SET NAME\n         MVC   VDATA_SESS_MEMBER,DISP.SESS_MEMBER\n         MVC   VDATA_SESS_VOLSER,DISP.SESS_VOLSER\n         B     DISP0260\nDISP0235 DS    0H\n         L     R1,DISP.SESS_COMM                STORAGE COMMON AREA\n         USING STORCOMM,R1\n         MVC   VDATA_SESS_DSN(L'STORCOMM_CB_DESCRIPTION),STORCOMM_CB_DE+\n               SCRIPTION\n         MVC   VDATA_SESS_MEMBER,STORCOMM_CB_NAME\n         B     DISP0260\nDISP0240 DS    0H\n         MVC   VDATA_SESS_DSN,DISP.SESS_PATH    COPY PATH\n         B     DISP0260\nDISP0250 DS    0H\n         MVC   VDATA_SESS_DSN(L'ACT_MSG),ACT_MSG\nDISP0260 DS    0H\n         ICM   R6,15,DISP.SESS_NEXT             NEXT SESSION\n         BZ    DISP0270\n         A     R7,DXD_VWIDTH                    NEXT LINE\n         BCT   R8,DISP0230                      LOOP\nDISP0270 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS\n\n         LA    R1,DISPLAY\n         ST    R1,DXD_SPF_1                     SET ADDRESS\n         LA    R1,PANEL_1                       PANEL TO DISPLAY\n         ST    R1,DXD_SPF_2                     SET ADDRESS\n         OI    DXD_SPF_2,X'80'                  FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK                 SPF INTERFACE\n         BALR  R14,R15                          LINK TO SPF\n         MVC   SPF_MSG_1,COMM_BLANKS\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         LTR   R15,R15                          RC ZERO?\n         BNZ   DISP0300                         NO\n         L     R6,DXD_FIRST_SESS\n         L     R7,DXD_VDATA_ADDR                VDATA ADDRESS\n         L     R8,DXD_VDEPTH                    NBR OF LINES\nDISP0280 DS    0H\n         CLI   VDATA_SESS_DSN,C' '              DATA ON THIS LINE?\n         BL    DISP0300                         NO\n         OI    VDATA_SESS_SEL,C' '              'TRANSLATE'\n         CLI   VDATA_SESS_SEL,C' '              SELECTED?\n         BNE   DISP0290                         YES\n         ICM   R6,15,DISP.SESS_NEXT             NEXT SESSION\n         A     R7,DXD_VWIDTH                    NEXT LINE\n         BCT   R8,DISP0280                      LOOP\n         B     DISP0270                         DISPLAY AGAIN\nDISP0290 DS    0H\n         ITRACE ID=SELECTED,                                           +\n               RDATA1=R6\n         CR    R11,R6                           ACTIVE SESSION?\n         BE    DISP0300                         YES.. SAME SESSION\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH      INDICATE SWITCH\n         ST    R6,COMM_NEW_SESSION              SET NEW SESS BLOCK ADDR\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\n         B     EXIT0000                         EXIT\nDISP0300 DS    0H\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\n         B     DISP0010                         DISPLAY SESSION DATA\nDISP0310 DS    0H\n         ITRACE ID=NO_SESS\n         MVI   COMM_MSG_ID+1,2                  NOT ALLOWED\n         B     ERR0100\n* ------------------------------------------------------------------- *\n*        DISPLAY DXD AREA(S)                                          *\n* ------------------------------------------------------------------- *\nDISP0320 DS    0H\n         ITRACE ID=DXD\n         L     R15,COMM_V_OSDXD\n         BALR  R14,R15                          CALL OSDXD\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0330 DS    0H\n         ITRACE ID=STAE\n         NI    SESS_ABEND_FLAG,255-$ABEND_NO_STAE\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     EXIT0000\nDISP0340 DS    0H\n         ITRACE ID=NOSTAE\n         ESTAE 0\n         OI    SESS_ABEND_FLAG,$ABEND_NO_STAE\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0350 DS    0H\n         ITRACE ID=HEX\n         CLC   SESS_FORMAT,EDIT                 IN EDIT MODE?\n         BE    EXIT0000                         YES\n         CLC   SESS_FORMAT,HEX                  FORMAT ALREADY HEX?\n         BE    EXIT0000                         YES\n         MVC   COMM_NEW_FORMAT,HEX              SET NEW FORMAT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0360 DS    0H\n         ITRACE ID=VHEX\n         CLC   SESS_FORMAT,VHEX                 FORMAT ALREADY VHEX?\n         BE    EXIT0000                         YES\n         MVC   COMM_NEW_FORMAT,VHEX             SET NEW FORMAT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0370 DS    0H\n         ITRACE ID=VDATA\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         MVC   STORE_AREA_NAME,VDATA            DATASPACE NAME\n         MVC   STORE_AREA_ADDR,SESS_DISP_VDATA_ADDR\n         MVC   STORE_AREA_LENGTH,SESS_DISP_VDATA_LENGTH\n         XC    STORE_AREA_ALET,STORE_AREA_ALET\n         LA    R1,STORPARM                      PARMS FOR OSSTOR\n         L     R15,COMM_V_OSSTOR\n         BALR  R14,R15                          CALL OSSTOR\n         B     DISP0010                         DISPLAY DATA AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0380 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         MVC   DXD_OPEN(OPEN_L),OPEN_I\n         OPEN  (XTR_DCB,OUTPUT),                                       +\n               MODE=31,                                                +\n               MF=(E,DXD_OPEN)\n         OI    COMM_TRACE_FLAG,$XTR_ON          SET FLAG\n         ITRACE ID=XTR_ON\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0400 DS    0H\n         ITRACE ID=DATA\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         MVC   STORE_AREA_NAME,DATASPACE_1_NAME DATASPACE NAME\n         XC    STORE_AREA_ADDR,STORE_AREA_ADDR  START AT ADDR ZERO\n         L     R0,DATASPACE_1_BLOCKS            SIZE IN BLOCKS\n         SLL   R0,12                            MULTIPLY BY 4096\n         ST    R0,STORE_AREA_LENGTH             SET LENGTH\n         MVC   STORE_AREA_ALET,DATASPACE_1_ALET SET ALET\n         LA    R1,STORPARM                      PARMS FOR OSSTOR\n         L     R15,COMM_V_OSSTOR\n         BALR  R14,R15                          CALL OSSTOR\n         B     DISP0010                         DISPLAY DATA AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0420 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         ITRACE ID=LIST\n         L     R15,COMM_V_OSFLIST               OSFLIST ENTRY POINT\n         BALR  R14,R15                          LINK TO OSFLIST\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0450 DS    0H\n         ITRACE ID=NO_OPERS\n         XC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR\n         LA    R1,OPERAND_01_ADDRESS\n         LA    R2,20                            NBR OF OPERANDS\nDISP0460 DS    0H\n         XC    0(OPERAND_L,R1),0(R1)            CLEAR ALL INFO\n         LA    R1,OPERAND_L(,R1)                NEXT OPERAND\n         BCT   R2,DISP0460\n         B     EXIT0000                         ALL DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\n         DC    C'Internal error, DISPLAY failed'\nERR0020  DS    0H\n         DC    H'0'\n         DC    C'Internal error, PARSE failed'\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4\nERR0100  DS    0H\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID\n         ITRACE ID=ERROR,                                              +\n               DATA1=COMM_MSG_CSECT,                                   +\n               DATA2=(COMM_MSG_ID,2)\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Set the ABENDED flag first so OSESTAE doesn't                *\n*        intercept the ABEND and try to recover.                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         OI    SESS_ABEND_FLAG,$ABENDED\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEBUG000 DS    0H\n         ITRACE ID=DEBUG\n         L     R15,COMM_V_OSDEBUG\n         BALR  R14,R15\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTPUT0000 DS    0H\n         ITRACE ID=TRACE\n         MVC   SPF_ZCMD,COMM_BLANKS\n         TM    COMM_TRACE_FLAG,$TRACE_TPUT\n         BO    TPUT0010\n         OI    COMM_TRACE_FLAG,$TRACE_TPUT\n         ITRACE ID=TRACE_ON\n         B     DISP0010\nTPUT0010 DS    0H\n         ITRACE ID=TRACEOFF\n         NI    COMM_TRACE_FLAG,255-$TRACE_TPUT\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         L     R13,4(,R13)           RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         LH    R15,SESS_RC           SET RETURN CODE\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC    Q(DXDDISP)\nOPEN_I            OPEN  (*,OUTPUT),MODE=31,MF=L\nOPEN_L            EQU   *-OPEN_I\n\nVGET_LIST         DC    C'(ZSCROLLA ZSCROLLN ZVERB ZDLVOL ZSCREENC)'\nVPUT_LIST         DC    C'(ZSCROLLA ZSCROLLN ZVERB ZDLVOL)'\n\nH2                DC    H'2'\nH3                DC    H'3'\nH4                DC    H'4'\nH5                DC    H'5'\nH6                DC    H'6'\nH7                DC    H'7'\nH8                DC    H'8'\nABEND             DC    CL5'ABEND'\nACT_MSG           DC    CL5'ACTIVE REGIONS'\nBROWSE            DC    CL8'BROWSE'\nDATASPACE_CMD     DC    C'DATASPACE '\nDEBUG             DC    CL5'DEBUG '\nDISPLAY           DC    CL8'DISPLAY'\nDXD_CMD           DC    CL3'DXD'\nEDIT              DC    CL8'EDIT'\nFLIST             DC    CL4'FLIST'\nOS                DC    C'OS '\nFORMAT            DC    CL6'FORMAT'\nFORMAT_STOR       DC    CL8'STOR'\nHEX               DC    CL8'HEX'\nLF                DC    CL4'LF'\nMODULE_OSFORMAT   DC    CL8'OSFORMAT'\nNOSTAE            DC    CL6'NOSTAE'\nPANEL_1           DC    CL8'OSSESS'\nRECALL            DC    CL6'RECALL'\nSESS_CMD          DC    C'SESS '\nSESSION_CMD       DC    C'SESSION '\nSMF               DC    CL8'SMF'\nSTAE              DC    C'STAE'\nTPUT              DC    C'TPUT'\nVDATA             DC    CL8'VDATA'\nVGET              DC    CL8'VGET'\nVHEX              DC    CL8'VHEX'\nVPUT              DC    CL8'VPUT'\nXTR_CMD           DC    CL3'XTR'\n\n                  LTORG\n\nDISPEND           EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDISP          DSECT\n                 COPY DXDPREF\nDXD_SPF_PARMS    DS   0A\nDXD_SPF_1        DS   A\nDXD_SPF_2        DS   A\nDXD_SPF_3        DS   A\nDXD_SPF_4        DS   A\nDXD_SPF_5        DS   A\n\nDXD_FIRST_SESS   DS   A\n\nDXD_VDATA_ADDR   DS   A\nDXD_VDATA_LENGTH DS   F\n\nDXD_VWIDTH       DS   F\nDXD_VDEPTH       DS   F\n\nDXD_OPEN         DS   0F,(OPEN_L)X\n\nDXD_COMMAND      DS   CL80\nDXD_TEMP         DS   CL80\n\n                 FMATREQ  DSECT=NO\n                 LOADREQ  DSECT=NO\n                 PARSEREQ DSECT=NO\n                 RCALLREQ DSECT=NO\n                 STORPARM DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVDATA_SESS        DSECT\nVDATA_SESS_ATTR1  DS    AL1\nVDATA_SESS_SEL    DS    C\nVDATA_SESS_ATTR2  DS    AL1\nVDATA_SESS_DSN    DS    CL44\n                  DS    C\nVDATA_SESS_MEMBER DS    CL8\n                  DS    C\nVDATA_SESS_VOLSER DS    CL6\n                  DS    C\nVDATA_SESS_FORMAT DS    CL8\nVDATA_SESS_L      EQU   *-VDATA_SESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n              STORCOMM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY TRENTRY\n              COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY REGEQU\n              END  OSDISP\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSDSCB": {"ttr": 12036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00H\\x01\\t!\\x0f\\x01\\x10\\x01O\\x16\\x10\\x017\\x01'\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-14T16:10:48", "lines": 311, "newlines": 295, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSDSCB                                                *\n*                                                                     *\n*  Many functions display general information about data sets         *\n*  like the RECFM, LRECL, BLKSIZE.                                    *\n*                                                                     *\n*  This module processes this information putting the info into       *\n*  SPF variables:                                                     *\n*                                                                     *\n*                                                                     *\n*      SPF_DD                DD name                                  *\n*      SPF_DSN               Data set name                            *\n*      SPF_MEMBER            PDS or PDS/E member name                 *\n*      SPF_CSECT             CSECT name (LMOD functions)              *\n*      SPF_VOLSER            VOLSER                                   *\n*      SPF_FORMAT            Format name                              *\n*      SPF_PATH              HFS path name                            *\n*      SPF_PATH_LENGTH       Length of path name                      *\n*      SPF_REAL_PATH         Real path name                           *\n*      SPF_REAL_PATH_LENGTH  Length of real path name                 *\n*      SPF_RECORD_FROM       First record on display                  *\n*      SPF_RECORD_TO         Last record on display                   *\n*      SPF_COLUMN_FROM       First column on display                  *\n*      SPF_COLUMN_TO         Last column on display                   *\n*      SPF_DSORG             Data set organization                    *\n*      SPF_RECFM             Record format                            *\n*      SPF_LRECL             Logical record length                    *\n*      SPF_BLKSIZE           Block size                               *\n*      SPF_RKP               Relative key position                    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDSCB   CSECT\nOSDSCB   AMODE 31\nOSDSCB   RMODE ANY\n         USING OSDSCB,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSDSCB'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(DSCBEND-OSDSCB)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSDSCB,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDDSCB,R13                    DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         USING DS1FMTID,SESS_DSCB\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*        Copy/build common panel heading data                         *\n* ------------------------------------------------------------------- *\nDSCB0000 DS    0H\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         BO    DSCB0010\n         MVC   SPF_DD,SESS_DD                 COPY DD NAME\n         MVC   SPF_DSN,SESS_DSN               COPY DSN\n         MVC   SPF_MEMBER,SESS_MEMBER\n         MVC   SPF_CSECT,SESS_DIALOG_SECTION\n         MVC   SPF_FORMAT,SESS_FORMAT\n         MVC   SPF_VOLSER,SESS_VOLSER\n         B     DSCB0020\nDSCB0010 DS    0H\n         MVC   SPF_PATH,SESS_PATH\n         MVC   SPF_REAL_PATH,SESS_REAL_PATH\n         L     R1,SESS_PATH_LENGTH\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_PATH_LENGTH,WORK_WORK_1+1\n         L     R1,SESS_REAL_PATH_LENGTH\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_REAL_PATH_LENGTH,WORK_WORK_1+1\nDSCB0020 DS    0H\n         TM    SESS_USER_OPTIONS,$OPTIONS_SHOW_TAGGED+$OPTIONS_SHOW_NOT+\n               _TAGGED\n         BZ    DSCB0030\n         MVC   SPF_RECORD_FROM,N_A\n         MVC   SPF_RECORD_TO,N_A\n         B     DSCB0050\nDSCB0030 DS    0H\n         ICM   R1,15,DATASPACE_1_DISPLAY_FIRST_RECORD\n         BNZ   DSCB0040\n         LA    R1,1                           START WITH RECORD 1\nDSCB0040 DS    0H\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   SPF_RECORD_FROM,WORK_WORK_1+1\n         L     R1,DATASPACE_1_DISPLAY_LAST_RECORD\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   SPF_RECORD_TO,WORK_WORK_1+1\nDSCB0050 DS    0H\n         TM    DS1SMSFG,DS1PDSEX              HFS?\n         BO    DSCB0070\n         TM    DS1SMSFG,DS1PDSE               PDS/E\n         BO    DSCB0080\n         TM    DS1DSORG+1,DS1ORGAM            VSAM?\n         BO    DSCB0060\n         TM    DS1DSORG,DS1DSGPS              SEQUENTIAL?\n         BO    DSCB0090                       YES\n         TM    DS1DSORG,DS1DSGDA              DIRECT ACCESS?\n         BO    DSCB0100\n         TM    DS1DSORG,DS1DSGPO              PDS\n         BO    DSCB0110\n         MVC   SPF_DSORG,=C'UNKN'             UNKNOWN\n         B     DSCB0120\nDSCB0060 DS    0H\n         MVC   SPF_DSORG,=C'VSAM'\n         B     DSCB0120\nDSCB0070 DS    0H\n         MVC   SPF_DSORG,=C'HFS '\n         B     DSCB0120\nDSCB0080 DS    0H\n         MVC   SPF_DSORG,=C'PDSE'\n         B     DSCB0120\nDSCB0090 DS    0H\n         MVC   SPF_DSORG,=C'PS  '\n         TM    DS1DSORG,DS1DSGU               UNMOVABLE?\n         BNO   DSCB0120                       NO\n         MVI   SPF_DSORG+2,C'U'               SET 'UNMOVABLE'\n         B     DSCB0120\nDSCB0100 DS    0H\n         MVC   SPF_DSORG,=C'DA  '\n         TM    DS1DSORG,DS1DSGU               UNMOVABLE?\n         BNO   DSCB0120                       NO\n         MVI   SPF_DSORG+2,C'U'               SET 'UNMOVABLE'\n         B     DSCB0120\nDSCB0110 DS    0H\n         MVC   SPF_DSORG,=C'PO  '\n         TM    DS1DSORG,DS1DSGU               UNMOVABLE?\n         BNO   DSCB0120                       NO\n         MVI   SPF_DSORG+2,C'U'               SET 'UNMOVABLE'\n         B     DSCB0120\nDSCB0120 DS    0H\n         LA    R8,SPF_RECFM\n         MVC   SPF_RECFM,COMM_BLANKS\n         TM    DS1RECFM,DS1RECFU              UNDEFINED?\n         BO    DSCB0130\n         TM    DS1RECFM,DS1RECFV              VARAIBLE?\n         BO    DSCB0140\n         TM    DS1RECFM,DS1RECFF              FIXED?\n         BO    DSCB0150\n         MVC   SPF_RECFM,=C'???'              UNKNOWN\n         B     DSCB0190\nDSCB0130 DS    0H\n         MVI   0(R8),C'U'\n         LA    R8,1(,R8)\n         B     DSCB0170\nDSCB0140 DS    0H\n         MVI   0(R8),C'V'\n         LA    R8,1(,R8)\n         B     DSCB0160\nDSCB0150 DS    0H\n         MVI   0(R8),C'F'\n         LA    R8,1(,R8)\nDSCB0160 DS    0H\n         TM    DS1RECFM,DS1RECFB              BLOCKED?\n         BNO   DSCB0170                       NO\n         MVI   0(R8),C'B'\n         LA    R8,1(,R8)\nDSCB0170 DS    0H\n         TM    DS1RECFM,DS1RECFA              ASA CONTROL?\n         BO    DSCB0180\n         TM    DS1RECFM,DS1RECMC              MACHINE cONTROL?\n         BNO   DSCB0190\n         MVI   0(R8),C'A'\n         LA    R8,1(,R8)\n         B     DSCB0190\nDSCB0180 DS    0H\n         MVI   0(R8),C'M'\n         LA    R8,1(,R8)\nDSCB0190 DS    0H\n         TM    DS1RECFM,DS1RECFS              SPANNED?\n         BNO   DSCB0200                       NO\n         MVI   0(R8),C'S'\nDSCB0200 DS    0H\n         LH    R1,DS1LRECL                    LRECL\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_LRECL,WORK_WORK_1+1\n         LH    R1,DS1BLKL                     BLOCK SIZE\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_BLOCK_SIZE,WORK_WORK_1+1\n         SR    R1,R1\n         IC    R1,DS1KEYL                     KEY LENGTH\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_KEY_LENGTH,WORK_WORK_1+1\n         L     R1,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_COLUMN_FROM,WORK_WORK_1+1\n         L     R1,DATASPACE_1_DISPLAY_LAST_COLUMN\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_COLUMN_TO,WORK_WORK_1+1\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS  HFS?\n         BNO   DSCB0210                       NO\n         L     R1,DATASPACE_1_LONGEST_RECORD\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_COLUMN_OF,WORK_WORK_1+1\nDSCB0210 DS    0H\n         MVC   SPF_ASCII,COMM_BLANKS\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII ASCII ON?\n         BNO   DSCB0220                         NO\n         MVC   SPF_ASCII,ASCII                  ACSII IS ON\nDSCB0220 DS    0H\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM VSAM?\n         BNO   EXIT0000                       NO\n* ------------------------------------------------------------------- *\n*        EDIT VSAM LRECL, KEY LENGTH, RKP                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VSAM\n         L     R1,SESS_VSAM_LRECL\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_LRECL,WORK_WORK_1+1\n         L     R1,SESS_VSAM_KEY_LENGTH\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_KEY_LENGTH,WORK_WORK_1+1\n         L     R1,SESS_VSAM_RKP\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_WORK_1(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   SPF_RKP,WORK_WORK_1+1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE SAVE ADDRESS\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            ETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC      Q(DXDDSCB)\n\nF1000000          DC      F'1000000'\n\nEDIT_WORD_1       DC      X'40202020202020202120'\nEDIT_WORD_2       DC      X'402020202120'\nASCII             DC      CL5'ASCII'\nN_A               DC      CL9'N/A'\n                  LTORG\nDSCBEND           EQU     *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDSCB           DSECT\n                  COPY    DXDPREF\n\nWORK_WORK_1       DS      XL10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT_1 DSECT\n         IBMMAC   VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSDSCB\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSDSINFO": {"ttr": 15371, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00T\\x01\\t!\\x0f\\x01\\x10\\x02\\x1f\\t0\\x01\\xc7\\x01v\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-21T09:30:54", "lines": 455, "newlines": 374, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*   Determine data set type for the data set being viewed \"On Screen\" *\n*                                                                     *\n*                                                                     *\n*   In order for On Screen to know which access method to use for     *\n*   reading a data set, On Screen needs to determine the data set's   *\n*   DSORG.                                                            *\n*                                                                     *\n*   If the VOLSER was not given, call catalog service using IGGCSI00. *\n*      If the data set is non-VSAM issue OBTAIN to read the FORMAT-1  *\n*      using the VOLSER returned by catalog services.                 *\n*                                                                     *\n*   If the VOLSER was given, issue OBTAIN to read the FORMAT-1 from   *\n*      the specified volume.                                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDSINFO CSECT\nOSDSINFO AMODE  31\nOSDSINFO RMODE  ANY\n         USING  OSDSINFO,R15\n         USING  OSCOMM,R12\n         USING  SESSION,R11\n         B      INIT0000\nMODID    DC     CL8'OSDSINFO'\n         DC     CL8'&SYSDATE'\n         DC     CL8'&SYSTIME'\n         DC     A(DSINFOEND-OSDSINFO)\nINIT0000 DS     0H\n         STM    R14,R12,12(R13)               SAVE REGISTERS\n         LR     R10,R15                       COPY BASE ADDRESS\n         DROP   R15\n         USING  OSDSINFO,R10\n         L      R15,COMM_DXD                  DXD AREA BASE ADDRESS\n         A      R15,DXD_START                 PLUS OFFSET\n         ST     R13,4(,R15)\n         ST     R15,8(,R13)\n         LR     R13,R15                       COPY DXD AREA ADDRESS\n         USING  DXDDSINF,R13                  DEFINE WORK AREA BASE\n         MVC    DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         LR    R9,R1                          COPY DSINFREQ ADDRESS\n         USING DSINFREQ,R9                    DEFINE BASE\n         USING  DS1FMTID,DSINFO_DSCB\n         MVI   DXD_RC,0\n         MVI   DSINFO_DATASET_TYPE,0          ASSUME UNKNOWN\n         TM    DSINFO_OPTIONS,$OPTIONS_VOLSER SPECIFIED VOLSER?\n         BO    INFO0110                       YES\n         ITRACE ID=LOOK_UP,                                            +\n               DATA1=DSINFO_DSN+00,                                    +\n               DATA2=DSINFO_DSN+08\n         ITRACE ID=LOOK_UP+,                                           +\n               DATA1=DSINFO_DSN+16,                                    +\n               DATA2=DSINFO_DSN+24\n         LA    R1,DSINFO_ERROR_INFO\n         ST    R1,DXD_CSI_REASON_ADDRESS      SET ADDRESS\n         LA    R8,DXD_CSI_SELECTION           CATALOG SEARCH CRITERIA\n         ST    R8,DXD_CSI_SELECTION_ADDRESS   SET ADDRESS\n         USING CSIFIELD,R8\n         LA    R7,DXD_CSI_DATA_AREA           CSI AREA\n         ST    R7,DXD_CSI_DATA_ADDRESS        SET ADDRESS\n         USING CSIRWORK,R7\n         MVC   CSIUSRLN,CSI_DATA_LENGTH\n         MVC   DXD_CSI_AREA_LENGTH,CSI_DATA_LENGTH\n         MVC   CSIFILTK,DSINFO_DSN            COPY DATA SET NAME\n         MVC   CSICATNM,COMM_BLANKS           START WITH MASTER CATALOG\n         MVC   CSIRESNM,COMM_BLANKS           NOT RESUMING A SEARCH\n         MVC   CSIDTYPD,COMM_BLANKS           RETURN ALL ENTRY TYPES\n         MVI   CSICLDI,C'Y'                   RETURN DATA AND INDEX\n         MVI   CSIOPTNS,C'F'                  USE 4-BYTE LENGTHS\n         MVI   CSIS1CAT,C' '                  SEARCH ALL CATALOGS\n         MVI   CSIRESUM,C' '                  THIS IS INITIAL CALL\n         MVC   CSINUMEN,H1                    NUMBER OF FIELDS WANTED\n         MVC   CSIFLDNM,C_VOLSER              NAME OF FIELD\n         LOAD  EP=IGGCSI00                    LOAD THE CSI INTERFACE\n         LR    R15,R0                         COPY ENTRY POINT\n         LA    R1,DXD_CSI_PARMS               PARAMETER LIST\n         ITRACE ID=CALL_CSI,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL CATALOG SEARCH\n         STC   R15,DXD_RC                     SAVE RETURN CODE\n         DELETE EP=IGGCSI00                   DELETE IGGCSI00\n         ITRACE ID=CSI_RC,                                             +\n               DATA1=(DXD_RC,1),                                       +\n               DATA2=(DXD_CSI_CATALOG_FLAG,1)\n         CLI   DXD_RC,0                       LOOKUP SUCCESSFUL?\n         BNE   ERR0010                        NO\n         TM    DXD_CSI_CATALOG_FLAG,$NOT_CATALOGED\n         BO    INFO0300                       NOT CATALOGED\n         ITRACE ID=CSIRWORK,                                           +\n               RDATA1=R7\n         LA    R7,CSIRWORK_L(,R7)             FIRST COMPONENT\n         ITRACE ID=CSICAT,                                             +\n               RDATA1=R7\n         LA    R7,CSICAT_L(,R7)\n         USING CSIINFO,R7\n         ITRACE ID=CSIINFO,                                            +\n               RDATA1=R7,                                              +\n               DATA2=(CSIETYPE,1)\nINFO0010 DS    0H\n         CLI   CSIETYPE,C'A'                  NONVSAM?\n         BE    INFO0060                       YES\n         CLI   CSIETYPE,C'C'                  VSAM?\n         BE    INFO0020                       YES\n         CLI   CSIETYPE,C'D'                  DATA COMPONENT?\n         BE    INFO0030                       YES\n         CLI   CSIETYPE,C'H'                  GDG MEMBER?\n         BE    INFO0040                       YES\n         CLI   CSIETYPE,C'I'                  INDEX COMPONENT?\n         BE    INFO0050                       YES\n         B     EXIT0000                       OTHERWISE I GIVE UP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        For VSAM do not try to OBTAIN the DSCB.  The DATA, INDEX,    *\n*        or other components may not have the same name as the        *\n*        CLUSTER.                                                     *\n*                                                                     *\n*        OSVSAM will issue SHOWCB to determine record length,         *\n*        key length, etc and set DS1LRECL, DS1KEYL,...                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0020 DS    0H\n         ITRACE ID=CLUSTER,                                            +\n               RDATA1=R7\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM\n         LA    R7,CSIINFO_L(,R7)              SKIP CLUSTER ENTRY\n         ITRACE ID=DATA,                                               +\n               RDATA1=R7,                                              +\n               DATA2=(CSIETYPE,1)\n         MVC   DSINFO_VOLSER,CSIFDDAT         COPY VOLSER\n         B     EXIT0000\nINFO0030 DS    0H\n         ITRACE ID=VSAMDATA\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_DATA\n         B     INFO0070\nINFO0040 DS    0H\n         ITRACE ID=GDG\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_GDG\n         B     INFO0070\nINFO0050 DS    0H\n         ITRACE ID=VSAMINDX\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_INDEX\n         B     INFO0070\nINFO0060 DS    0H\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_NONVSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      If the VOLSER is all asterisks (******), change it to          *\n*      the SYSRES VOLSER.                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0070 DS    0H\n         MVC   DSINFO_VOLSER,CSIFDDAT         COPY VOLSER\n         L     R14,CVTPTR                     ADDRESS OF THE CVT\n         USING CVT,R14                        DEFINE BASE\n         L     R15,CVTSYSAD                   SYSRES UCB'S ADDRESS\n         USING UCBOB,R15                      DEFINE BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Sometime this probably should allow multiple VOLSERs.           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLC   DSINFO_VOLSER,=C'******'\n         BNE   INFO0100\n         MVC   DSINFO_VOLSER,UCBVOLI\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     I would much rather use an IBM supplied macro to map the        *\n*     CAMLST or even better, see IBM re-code the OBTAIN macro         *\n*     with a MF=E/I/L type parameter to allow dynamic specification   *\n*     of parameters.  So far I haven't found any such mapping         *\n*     macro or member of SYS1.MACLIB or SYS1.MODGEN.                  *\n*                                                                     *\n*     So.. I'll copy a hard-coded CAMLST and over-store some of       *\n*     the data.                                                       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0100 DS    0H\n         TM    DSINFO_DATASET_TYPE,$DATA_TYPE_NONVSAM\n         BO    INFO0110\n         TM    DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM\n         BO    INFO0110\n         B     EXIT0000\nINFO0110 DS    0H\n         TM    DSINFO_OPTIONS,$DSINFO_NO_OBTAIN\n         BO    EXIT0000                       DON'T ISSUE OBTAIN\n         CLC   DSINFO_VOLSER,C_MIGRAT         MIGRATED?\n         BE    EXIT0000                       YES.. CAN'T GET DSCB\n         ITRACE ID=GET_DSCB,                                           +\n               DATA1=(DSINFO_VOLSER,6)\n         MVC   DXD_CAMLST(CAMLST_L),CAMLST_I\n         LA    R1,DSINFO_DSN                  DSN\n         ST    R1,DXD_CAMLST+4                SET ADDRESS\n         LA    R1,DSINFO_VOLSER               VOLSER\n         ST    R1,DXD_CAMLST+8                SET ADDRESS\n         LA    R1,DSINFO_DSCB                 DSCB\n         ST    R1,DXD_CAMLST+12               SET ADDRESS\n         LA    R1,DXD_CAMLST                  CAMLST ADDRESS\n         ITRACE ID=OBTAIN,                                             +\n               RDATA1=R1\n         OBTAIN (R1)                          READ DSCB\n         ITRACE ID=OBTN_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0020                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    DS1DSORG+0,DS1DSGPS            SEQUENTIAL?\n         BO    INFO0200                       YES\n         TM    DS1DSORG+0,DS1DSGDA            DIRECT ACCESS?\n         BO    INFO0200                       YES\n         TM    DS1DSORG+0,DS1DSGPO            PDS?\n         BO    INFO0210                       YES\n         TM    DS1DSORG+1,DS1ORGAM            VSAM?\n         BO    INFO0230                       YES\n         B     EXIT0000\nINFO0200 DS    0H\n         ITRACE ID=PS\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_SEQUENTIAL\n         B     EXIT0000\nINFO0210 DS    0H\n         ITRACE ID=PO\n         CLC   SESS_MEMBER,COMM_BLANKS        MEMBER NAME?\n         BE    INFO0220                       NO\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_PDS_MEMBER\n         B     EXIT0000\nINFO0220 DS    0H\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_PDS_DIR\n         B     EXIT0000\nINFO0230 DS    0H\n         ITRACE ID=VSAM2\n*        MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM\n         TM    DSINFO_OPTIONS,$OPTIONS_VOLSER SPECIFIED VOLSER?\n         BNO   EXIT0000                       NO\n         ITRACE ID=WARN\n         LA    R3,MSG_01_L\n         GETMAIN RU,                                                   +\n               LV=(R3),                                                +\n               LOC=BELOW\n         LR    R2,R1                          COPY ADDRESS\n         MVC   0(MSG_01_L,R2),MSG_01          COPY MESSAGE\n         TPUT  (R2),(R3),R                    ISSUE MESSAGE\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=(R3)\n         LA    R3,MSG_02_L\n         GETMAIN RU,                                                   +\n               LV=(R3),                                                +\n               LOC=BELOW\n         LR    R2,R1                          COPY ADDRESS\n         MVC   0(MSG_02_L,R2),MSG_02          COPY MESSAGE\n         TPUT  (R2),(R3),R                    ISSUE MESSAGE\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=(R3)\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_SEQUENTIAL\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0300 DS    0H\n         ITRACE ID=NOT_CAT\n         MVI   COMM_MSG_ID+1,1\n         B     ERR0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,2\n         STH   R15,COMM_INFO_03\n         B     ERR0100\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,3\n         STH   R15,COMM_INFO_03\nERR0100  DS    0H\n         MVC   COMM_INFO_01(L'DSINFO_DSN),DSINFO_DSN\n         MVC   COMM_INFO_02(L'DSINFO_VOLSER),DSINFO_VOLSER\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID+0,0\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVI   DXD_RC,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R2,R2\n         IC    R2,DXD_RC                      SAVE RC\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2,                                              +\n               DATA2=(DSINFO_DATASET_TYPE,1)\n         L     R13,4(,R13)                    RESTORE R13\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE OTHER REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC    Q(DXDDSINF)\nCSI_DATA_LENGTH      DC    A($CSI_DATA_LENGTH)\n\nCAMLST_I             CAMLST SEARCH,*,*,*\nCAMLST_L             EQU   *-CAMLST_I\n\nH1                   DC    H'1'\nC_VOLSER             DC    CL8'VOLSER'\nC_MIGRAT             DC    CL6'MIGRAT'\nMSG_01               DC    C'OSDSINFO01W  WARNING.  VOLSER specified fo+\n               r a VSAM dataset.'\nMSG_01_L             EQU   *-MSG_01\nMSG_02               DC    C'OSDSINFO02W  Reading as non-VSAM'\nMSG_02_L             EQU   *-MSG_02\n                     LTORG\nDSINFOEND            EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDSINF                  DSECT\n                          COPY  DXDPREF\n\nDXD_CAMLST                DS    0F,(CAMLST_L)X\n\nDXD_CSI_PARMS             DS    0A\nDXD_CSI_REASON_ADDRESS    DS    A\nDXD_CSI_SELECTION_ADDRESS DS    A\nDXD_CSI_DATA_ADDRESS      DS    A\n\nDXD_CSI_SELECTION         DS    (CSIFIELD_L)X\n\nDXD_RC                    DS    X\n\n* ------------------------------------------------------------------- *\n*                                                                     *\nDXD_CSI_DATA_AREA         DS    0A,($CSI_DATA_LENGTH)X\n                          ORG   DXD_CSI_DATA_AREA\nDXD_CSI_AREA_LENGTH       DS    F\nDXD_CSI_REQUIRED_LENGTH   DS    F\nDXD_CSI_USED_LENGTH       DS    F           LENGTH USED\nDXD_CSI_FIELD_NAMES       DS    H           NUMBER OF FIELD NAMES + 1\n\nDXD_CSI_CATALOG_FLAG      DS    X\n$NOT_CATALOGED            EQU   X'40'       .. DATA SET NOT CATALOGED\n\nDXD_CSI_CATALOG_TYPE      DS    C           ALWAYS C'0'\nDXD_CSI_CATALOG_NAME      DS    CL44        CATALOG NAME\n                          DS    CL2         MODULE ID\n                          DS    X           REASON CODE\n                          DS    X           RETURN CODE\n\nDXD_CSI_ENTRY_FLAG        DS    X\nDXD_CSI_ENTRY_TYPE        DS    C\n*                               C'A'        .. NONVSAM\n*                               C'C'        .. CLUSTER\n*                               C'D'        .. DATA COMPONENT\n*                               C'H'        .. MEMBER OF A GDG\n*                               C'I'        .. INDEX COMPONENT\n*                               C'F'        .. HFS\n*                               C'T'        .. VTOC\nDXD_CSI_ENTRY_NAME        DS    CL44        ENTRY NAME (S/B DSN)\n                          DS    CL2         MODULE NAME\n                          DS    X           REASON CODE\n                          DS    X           RETURN CODE\n\n                          DS    XL2         TOTAL LENTH OF INFO\n                          DS    XL2         RESERVED\nDXD_CSI_VOLSER_LENGTH     DS    XL4         LENGTH OF FIELD S/B 6\nDXD_VOLSERS               DS    16CL6\n*                                                                     *\n* ------------------------------------------------------------------- *\n                          DSINFREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 IBMMAC   CVT=YES,UCB=YES\n                 IBMMAC   VTOC=1\n                 IBMMAC   CSI=YES\nCSIFIELD_L       EQU      *-CSIFIELD\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSIRWORK         DSECT\nCSIUSRLN         DS       F                   LENGTH OF WORK AREA\nCSIREQLN         DS       F                   MINIMUM FOR 1 ENTRY\nCSIUSDLN         DS       F                   TOTAL LENGTH USED\nCSINUMFD         DS       H                   NBR OF FIELD NAMES + 1\nCSIRWORK_L       EQU      *-CSIRWORK\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSICAT           DSECT\nCSICFLG          DS       X                   CATALOG FLAG INFO\nCSINTCIF         EQU      X'80'               .. NOT SUPPORTED\nCSINOENT         EQU      X'40'               .. NOT ENTRY FOUND\nCSINTCMP         EQU      X'20'               .. DATA NOT COMPLETE\nCSICERR          EQU      X'10'               .. ERROR PROCESSING CATLG\nCSICERRP         EQU      X'80'               .. PARTIAL ERROR\nCSICTYPE         DS       X                   CATALOG TYPE (X'F0')\nCSICNAME         DS       CL44                CATALOG NAME\nCSICRETN         DS       0CL4\nCSICRETM         DS       CL2                 .. MODULE NAME\nCSICRETR         DS       X                   .. REASON CODE\nCSICRETC         DS       X                   .. RETURN CODE\nCSICAT_L         EQU      *-CSICAT\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSIINFO          DSECT\nCSIEFLAG         DS       X                   ENTRY FLAG INFORMATION\nCSIPMENT         EQU      X'80'               .. PRIMARY ENTRY\nCSIENTER         EQU      X'40'               .. ERROR FOR THIS ENTRY\nCSIEDATA         EQU      X'20'               .. DATA RETURNED\nCSIETYPE         DS       C                   ENTRY TYPE\nCSIENAME         DS       CL44                ENTRY NAME\nCSIRETN          DS       0CL4\nCSIERETM         DS       CL2                 MODULE ID\nCSIERETR         DS       X                   REASON CODE\nCSIERETC         DS       X                   RETURN CODE\nCSITOTLN         DS       XL2                 TOTAL LENGTH OF DATA\n                 DS       XL2\nCSILENFD         DS       XL2                 LENGTH OF FIELDS\nCSILENF1         DS       XL2                 FIRST LENGTH\nCSIINFO_L        EQU      *-CSIINFO\nCSIFDDAT         DS       CL6\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$CSI_DATA_LENGTH EQU      1024\n                 COPY     REGEQU\n                 END      OSDSINFO\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSDXD": {"ttr": 3335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00X\\x01\\t!\\x9f\\x01\\t4\\x1f\\x15V\\x01\\x84\\x01\\x87\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-08-07T00:00:00", "modifydate": "2009-12-07T15:56:58", "lines": 388, "newlines": 391, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         AREA  &CSECT,&DXD\n         DC    CL8'&CSECT'\n         DC    V(&CSECT)\n         AIF   (T'&DXD EQ 'O').LBL0010\n         DC    CL8'&DXD'\n         DC    Q(&DXD)\n         MEXIT\n.LBL0010 ANOP\n         DC    CL8'NONAME'\n         DC    A(-1)\n         MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSDXD                                                 *\n*                                                                     *\n*  Map and display modules and dynamic work area(s)                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSDXD    CSECT\nOSDXD    AMODE 31\nOSDXD    RMODE ANY\n         USING OSDXD,R15\n         B     INIT0000\nMODID    DC    CL8'OSDXD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\nMODLEN   DC    A(DXDEND-OSDXD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)\n         LR    R10,R15                        COPY BASE\n         DROP  R15\n         USING OSDXD,R10\n         USING OSCOMM,R12\n         USING SESSION,R11\n         L     R15,COMM_DXD                   DXD BASE\n         A     R15,DXD_START\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY WORK AREA ADDRESS\n         USING DXDDXD,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVC   SPF_ZCMD,COMM_BLANKS               RESET COMMAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VDATA\n         LA    R1,PANEL_NAME                      PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH                SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR                  SAVE ADDRESS\nBLD0000  DS    0H\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            VDEFINE VDATA\n         MVC   DXD_VDEPTH,SPF_VDEPTH              SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH              SAVE WIDTH\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                             INITIALIZE VDATA\n         LA    R8,DXD_TABLE                       FIRST DXD AREA\n         USING AREA_DSECT,R8\n         L     R7,DXD_VDATA_ADDR                  VDATA ADDRESS\n         L     R6,DXD_VDEPTH                      SCREEN DEPTH\n         USING DETAIL,R7\nBLD0010  DS    0H\n         MVI   DETAIL_ATTR_1,$SCREEN_ATTR_INPUT\n         MVI   DETAIL_EP_SELECT,C' '\n         MVI   DETAIL_ATTR_2,$SCREEN_ATTR_HIGH\n         MVC   DETAIL_NAME,AREA_NAME              COPY NAME\n         MVI   DETAIL_ATTR_3,$SCREEN_ATTR_NORMAL\n         CLC   AREA_NAME,COMMON_NAME              OSCOMM?\n         BE    BLD0020                            YES\n         ICM   R1,15,AREA_EP                      AREA ADDRESS\n         BM    BLD0030                            NO ADDRESS\n         ST    R1,DXD_WORK\n         UNPK  DETAIL_EP(9),DXD_WORK(5)           UNPACK EP\n         TR    DETAIL_EP,COMM_HEXCHAR\n         MVI   DETAIL_EP+8,C' '\n         UNPK  DETAIL_LENGTH(9),MODLEN-OSDXD(5,R1)\n         TR    DETAIL_LENGTH,COMM_HEXCHAR\n         MVI   DETAIL_LENGTH+8,C' '\n         B     BLD0030\nBLD0020  DS    0H\n         ST    R12,DXD_WORK                       OSCOMM ADDRESS\n         UNPK  DETAIL_EP(9),DXD_WORK(5)           UNPACK ADDRESS\n         TR    DETAIL_EP,COMM_HEXCHAR             TRANSLATE\n         MVI   DETAIL_EP+8,C' '\n         UNPK  DETAIL_LENGTH(9),COMMON_LENGTH(5)  UNPACK LENGTH\n         TR    DETAIL_LENGTH,COMM_HEXCHAR\n         MVI   DETAIL_LENGTH+8,C' '\nBLD0030  DS    0H\n         MVI   DETAIL_ATTR_4,$SCREEN_ATTR_INPUT\n         MVI   DETAIL_DXD_SELECT,C' '\n         MVI   DETAIL_ATTR_5,$SCREEN_ATTR_HIGH\n         MVC   DETAIL_DXD_NAME,AREA_DXD_NAME      COPY DXD NAME\n         MVI   DETAIL_ATTR_6,$SCREEN_ATTR_NORMAL\n         CLC   AREA_DXD_NAME,SESSION_NAME         SESSION BLOCK?\n         BE    BLD0060                            YES\n         L     R1,COMM_DXD                        DXD ADDRESS\n         A     R1,AREA_DXD_DISP                   PLUS DISP\n         ST    R1,DXD_WORK\n         UNPK  DETAIL_DXD_ADDR(9),DXD_WORK(5)     UNPACK ADDRESS\n         TR    DETAIL_DXD_ADDR,COMM_HEXCHAR       TRANSLATE ADDRESS\n         MVI   DETAIL_DXD_ADDR+8,C' '\n         LA    R14,AREAL(,R8)                     NEXT ENTRY\nNEXT     USING AREA_DSECT,R14\n         CLI   NEXT.AREA_NAME,X'FF'               END OF TABLE?\n         BE    BLD0040\n         L     R1,NEXT.AREA_DXD_DISP              NEXT DXD'S DISP\n         B     BLD0050\nBLD0040  DS    0H\n         L     R1,COMM_DXD_LENGTH                 USE LENGTH\nBLD0050  DS    0H\n         S     R1,AREA_DXD_DISP                   COMPUTE LENGTH\n         ST    R1,DXD_WORK\n         UNPK  DETAIL_DXD_LENGTH(9),DXD_WORK(5)   UNPACK LENGTH\n         TR    DETAIL_DXD_LENGTH,COMM_HEXCHAR     TRANSLATE LENGTH\n         MVI   DETAIL_DXD_LENGTH+8,C' '\n         B     BLD0070\nBLD0060  DS    0H\n         ST    R11,DXD_WORK\n         UNPK  DETAIL_DXD_ADDR(9),DXD_WORK(5)\n         TR    DETAIL_DXD_ADDR,COMM_HEXCHAR\n         MVI   DETAIL_DXD_ADDR+8,C' '\n         UNPK  DETAIL_DXD_LENGTH(9),SESSION_LENGTH(5)\n         TR    DETAIL_DXD_LENGTH,COMM_HEXCHAR\n         MVI   DETAIL_DXD_LENGTH+8,C' '\nBLD0070  DS    0H\n         A     R7,DXD_VWIDTH                      NEXT LINE\n         BCT   R6,BLD0080\n         B     BLD0090                            SCREEN FULL\nBLD0080  DS    0H\n         LA    R8,AREAL(,R8)                      NEXT\n         CLI   0(R8),X'FF'                        END OF TABLE?\n         BNE   BLD0010                            NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBLD0090  DS    0H\n         ITRACE ID=DISPLAY\n         LA    R1,DISPLAY\n         ST    R1,DXD_PARM_1\n         LA    R1,PANEL_NAME\n         ST    R1,DXD_PARM_2\n         OI    DXD_PARM_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                            DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                            RC = 0?\n         BNZ   EXIT0000                           YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R8,DXD_TABLE                       FIRST DXD AREA\n         L     R7,DXD_VDATA_ADDR                  VDATA ADDRESS\n         L     R6,DXD_VDEPTH                      SCREEN DEPTH\nPROC0000 DS    0H\n         ITRACE ID=SELECT,                                             +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         CLI   DETAIL_EP_SELECT,C' '              ENTRY POINT SELECTED?\n         BNE   PROC0020                           YES\n         CLI   DETAIL_DXD_SELECT,C' '             DXD SELECTED?\n         BNE   PROC0030                           YES\nPROC0010 DS    0H\n         LA    R8,AREAL(,R8)                      NEXT AREA\n         CLI   0(R8),X'FF'                        END OF TABLE?\n         BE    BLD0090                            YES\n         A     R7,DXD_VWIDTH                      NEXT LINE\n         BCT   R6,PROC0000                        LOOP\n         B     BLD0010\nPROC0020 DS    0H\n         ITRACE ID=EP,                                                 +\n               RDATA1=R8,                                              +\n               DATA2=(AREA_EP,4)\n         MVC   STORE_AREA_NAME,AREA_NAME          COPY AREA NAME\n         CLC   AREA_NAME,COMMON_NAME              COMMON AREA?\n         BE    PROC0025                           YES\n         MVC   STORE_AREA_ADDR,AREA_EP            COPY ADDRESS\n         L     R1,AREA_EP\n         MVC   STORE_AREA_LENGTH,MODLEN-OSDXD(R1) COPY LENGTH\n         B     PROC0060\nPROC0025 DS    0H\n         ST    R12,STORE_AREA_ADDR                AREA ADDRESS\n         MVC   STORE_AREA_LENGTH,COMMON_LENGTH    AREA LENGTH\n         B     PROC0060                           DISPLAY COMMON AREA\nPROC0030 DS    0H\n         ITRACE ID=DXD,                                                +\n               RDATA1=R8,                                              +\n               DATA2=(AREA_DXD_DISP,4)\n         MVC   STORE_AREA_NAME,AREA_DXD_NAME      COPY AREA NAME\n         CLC   AREA_DXD_NAME,SESSION_NAME         SESSION?\n         BE    PROC0055                           YES\n         L     R1,COMM_DXD                        DXD ADDRESS\n         A     R1,AREA_DXD_DISP                   PLUS DISP\n         ST    R1,STORE_AREA_ADDR                 SET ADDRESS\n         L     R1,AREA_DXD_DISP                   DISP\n         LA    R14,AREAL(,R8)                     NEXT AREA\n         CLI   NEXT.AREA_DXD_DISP,X'FF'           END OF TABLE?\n         BE    PROC0040                           YES\n         L     R15,NEXT.AREA_DXD_DISP             NEXT DXD AREA DISP\n         B     PROC0050\nPROC0040 DS    0H\n         L     R15,COMM_DXD_LENGTH                TOTAL LENGTH\nPROC0050 DS    0H\n         SR    R15,R1                             COMPUTE LENGTH\n         ST    R15,STORE_AREA_LENGTH              SET LENGTH OF AREA\n         B     PROC0060\nPROC0055 DS    0H\n         ST    R11,STORE_AREA_ADDR                SESSION ADDRESS\n         MVC   STORE_AREA_LENGTH,SESSION_LENGTH   SESSION BLOCK LENGTH\nPROC0060 DS    0H\n         XC    STORE_AREA_ALET,STORE_AREA_ALET    IN OUR ADDRESS SPACE\n         LA    R1,STORPARM\n         L     R15,COMM_V_OSSTOR                  OSSTOR ENTRY POINT\n         ITRACE ID=CALLSTOR,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                            LINK TO OSSTOR\n         ITRACE ID=STOR_X\n         B     BLD0000                            REBUILD STORAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            FREE VDATA\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                        RESTORE SAVE AREA\n         LM    R14,R12,12(R13)                    RESTORE REGISTERS\n         SR    R15,R15                            SET RC\n         BR    R14                                RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC    Q(DXDDXD)\n\nDXD_TABLE      DS    0A\n               AREA  OSCOMM,SESSION\n               AREA  OSMAIN,DXDMAIN\n               AREA  OSVDATA,DXDVMGR\n               AREA  OSRECALL,DXDRCALL\n               AREA  OSPROMPT,DXDPRMPT\n               AREA  OSPARMS,DXDPARMS\n               AREA  OSPARSE,DXDPARSE\n               AREA  OSOFILE,DXDOFILE\n               AREA  OSMSG,DXDMSG\n               AREA  OSESTAE,WKESTAE\n               AREA  OSDXD,DXDDXD\n               AREA  OSDSINFO,DXDDSINF\n               AREA  OSDSCB,DXDDSCB\n               AREA  OSDISP,DXDDISP\n               AREA  OSDEBUG,DXDDEBUG\n               AREA  OSDAIR,DXDDAIR\n               AREA  OSABEND,WKABEND\n               AREA  OSCNFRM,DXDCNFRM\n               DC    X'FF'\n\nPANEL_NAME     DC    CL8'OSDXD'\nDISPLAY        DC    CL8'DISPLAY'\n\nCOMMON_NAME    DC    CL8'OSCOMM'\nCOMMON_LENGTH  DC    A(COMMON_L)\n\nSESSION_NAME   DC    CL8'SESSION'\nSESSION_LENGTH DC    A(SESSION_L)\n\n               LTORG\n\nDXDEND         EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      To keep the assembler happy....                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMAIN           DSECT\nDXDVMGR           DSECT\nDXDTRACE          DSECT\nDXDSESS           DSECT\nDXDRCALL          DSECT\nDXDPRMPT          DSECT\nDXDPARMS          DSECT\nDXDPARSE          DSECT\nDXDOFILE          DSECT\nDXDMSG            DSECT\nWKESTAE           DSECT\nDXDDXD            DSECT\nDXDDSINF          DSECT\nDXDDSCB           DSECT\nDXDDISP           DSECT\nDXDDEBUG          DSECT\nDXDDAIR           DSECT\nWKABEND           DSECT\nDXDCNFRM          DSECT\n* ------------------------------------------------------------------- *\n*        WORK AREA                                                    *\n* ------------------------------------------------------------------- *\nDXDDXD            DSECT\n                  COPY DXDPREF\nDXD_VDEPTH        DS   F\nDXD_VWIDTH        DS   F\nDXD_VDATA_ADDR    DS   A\nDXD_VDATA_LENGTH  DS   F\n\nDXD_SPF_PARMS     DS  0A\nDXD_PARM_1        DS   A\nDXD_PARM_2        DS   A\n\nDXD_WORK          DS   CL10\n\nDXD_SAVE_PANEL    DS   CL8\n\n                  STORPARM DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAREA_DSECT        DSECT\nAREA_NAME         DS   CL8\nAREA_EP           DS   XL4\nAREA_DXD_NAME     DS   CL8\nAREA_DXD_DISP     DS   XL4\nAREAL             EQU  *-AREA_DSECT\n\nDETAIL            DSECT\nDETAIL_ATTR_1     DS   X\nDETAIL_EP_SELECT  DS   C\nDETAIL_ATTR_2     DS   X\nDETAIL_NAME       DS   CL8\nDETAIL_ATTR_3     DS   X\n                  DS   CL3\nDETAIL_EP         DS   CL8\n                  DS   CL3\nDETAIL_LENGTH     DS   CL8\n                  DS   CL3\nDETAIL_ATTR_4     DS   X\nDETAIL_DXD_SELECT DS   C\nDETAIL_ATTR_5     DS   X\nDETAIL_DXD_NAME   DS   CL8\nDETAIL_ATTR_6     DS   X\n                  DS   CL3\nDETAIL_DXD_ADDR   DS   CL8\n                  DS   CL4\nDETAIL_DXD_LENGTH DS   CL8\n                  DS   C\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSDXD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSESTAE": {"ttr": 263, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        ESTAE exit                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSESTAE  CSECT\nOSESTAE  AMODE 31\nOSESTAE  RMODE ANY\n         USING OSESTAE,R15\n         B     STAE0000\nMODID    DC    CL8'OSESTAE'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(ESTAEEND-OSESTAE)\nSTAE0000 DS    0H\n         CH    R0,H12                         SDWA PRESENT?\n         BE    STAE0040                       NO\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSESTAE,R10                    DEFINE BASE\n         SAC   0                              MAKE SURE AR MODE IS OFF\n         LR    R9,R1                          COPY SDWA ADDRESS\n         USING SDWA,R9                        DEFINE BASE\n         L     R12,SDWAPARM                   PARM LIST ADDRESS\n         USING OSCOMM,R12                     DEFINE BASE\n         L     R11,COMM_ACTIVE_SESSION        CURRENTLY ACTIVE SESSION\n         USING SESSION,R11\n         TM    SESS_ABEND_FLAG,$ABEND_NO_STAE\n         BO    STAE0040                       DON'T ATTEMPT RETRY\n         TM    SESS_ABEND_FLAG,$ABENDED       ALREADY ABENDED?\n         BO    STAE0040                       YES\n         L     R15,COMM_DXD                   WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP TO OUR SECTION\n         ST    R13,4(,R15)                    SAVE CALLER'S REG 13\n         ST    R15,8(,R13)                    CHAIN TO CALLER\n         LR    R13,R15\n         USING WKESTAE,R13\n         MVC   DXD_CSECT,MODID\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,SDWACMPC                 SYSTEM COMPLETION CODE\n         SRL   R15,4                          SHIFT OUT USER BIT(S)\n         STH   R15,SESS_SYSTEM_CODE           SAVE SYSTEM CODE\n         MVC   SESS_USER_CODE,SDWACMPC+1      COPY USER CODE\n         NI    SESS_USER_CODE,X'0F'           TURN OFF SYSTEM BIT(S)\n         MVC   SESS_ABEND_R15,SDWAGR15+2      SAVE R15\n         ITRACE ID=ABEND,                     TRACE ABEND              +\n               DATA1=(SESS_SYSTEM_CODE,6),        CAPTURE ABEND CODE(S)+\n               DATA2=SDWAEC1                      .. CAPTURE PSW\n         OI    SESS_ABEND_FLAG,$ABENDED       SET ABEND INDICATOR\n         MVC   SESS_ABEND_CSECT,=C'????????'\n         L     R2,SDWAGR10                    R10 AT TIME OF ABEND\nBOMBBASE USING OSESTAE,R2\n         CLC   =C'OS',BOMBBASE.MODID          FIRST TWO CHARS 'OS'?\n         BNE   STAE0030                       NO\n         CLC   =C'OSDSPACE',BOMBBASE.MODID    OSDSPACE?\n         BE    STAE0040                       YES\n         LA    R3,BOMBBASE.MODID+2\n         LA    R4,L'MODID-2\nSTAE0010 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    STAE0020                       YES\n         CLI   0(R3),C'A'                     LESS THAN C'A'?\n         BL    STAE0030                       YES\n         CLI   0(R3),C'Z'                     C'Z' OR LESS?\n         BL    STAE0020                       YES\n         CLI   0(R3),C'0'                     LESS THAN C'0'\n         BL    STAE0030                       YES\n         CLI   0(R3),C'9'                     GREATER THAN C'9'?\n         BH    STAE0030                       YES\nSTAE0020 DS    0H\n         LA    R3,1(,R3)                      NEXT\n         BCT   R4,STAE0010\n         MVC   SESS_ABEND_CSECT,BOMBBASE.MODID\n         L     R3,SDWANXT1                    INSTRUCTION AT ABEND\n         LA    R2,0(,R2)                      DROP AMODE BIT(S)\n         LA    R3,0(,R3)                      DROP AMODE BIT(S)\n         SR    R3,R2                          COMPUTE DISPLACEMENT\n         STCM  R3,3,SESS_ABEND_DISP           SAVE DISPLACEMENT\n         DROP  BOMBBASE\n         ITRACE ID=MOD+DISP,                                           +\n               DATA1=SESS_ABEND_CSECT,                                 +\n               DATA2=(SESS_ABEND_DISP,2)\n         ITRACE ID=R0_R3,                                              +\n               DATA1=SDWAGR00,                                         +\n               DATA2=SDWAGR02\n         ITRACE ID=R4_R7,                                              +\n               DATA1=SDWAGR04,                                         +\n               DATA2=SDWAGR06\n         ITRACE ID=R8_R11,                                             +\n               DATA1=SDWAGR08,                                         +\n               DATA2=SDWAGR10\n         ITRACE ID=R12_R15,                                            +\n               DATA1=SDWAGR12,                                         +\n               DATA2=SDWAGR14\nSTAE0030 DS    0H\n         L     R2,SESS_RETRY                  RETRY POINT\n         SETRP RETADDR=(R2),                  SET RECOVERY PARAMETERS  +\n               FRESDWA=YES,                   .. DON'T CREATE A DUMP   +\n               DUMP=NO,                       .. FREE THE SDWA         +\n               RC=4                           .. RETRY\n*\n*        This should never be reached\n*\n         L     R13,4(,R13)                    RESTORE R13\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         BR    R14\nSTAE0040 DS    0H\n         SETRP RC=0                           DON'T TRY TO RECOVER\n*\n*        This should never be reached either\n*\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START DC    Q(WKESTAE)\nH12       DC    H'12'\n          LTORG\nESTAEEND  EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY   TRENTRY\n* ------------------------------------------------------------------- *\nWKESTAE  DSECT\n         COPY   DXDPREF\n* ------------------------------------------------------------------- *\n         IBMMAC SDWA=YES\n* ------------------------------------------------------------------- *\n         COPY   REGEQU\n         END    OSESTAE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSFIND": {"ttr": 12044, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x07\\x01\\t3O\\x01\\x10\\x01O\\x16\\x11\\x00\\xd6\\x02\\x8a\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2009-11-30T00:00:00", "modifydate": "2010-01-14T16:11:07", "lines": 214, "newlines": 650, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSFIND                                                *\n*                                                                     *\n*                                                                     *\n*  Process FIND command                                               *\n*                                                                     *\n*                                                                     *\n*  Find is used by multiple functions.                                *\n*  It is not used by all functins. .                                  *\n*  Find strings are unique to each \"session\"                          *\n*  Find needs to allow \"repeated\" (RFIND in SPF terms) finds          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSFIND   CSECT\nOSFIND   AMODE 31\nOSFIND   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSFIND,R15\n         B     INIT0000\nMODID    DC    CL8'OSFIND'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSFIND,R10                     DEFINE BASE\n         L     R15,COMM_DXD                   WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)                    SAVE R13\n         ST    R15,8(,R13)                    CHAIN SAVE AREA\n         LR    R13,R15\n         USING DXDFIND,R13                    DEFINE WORK AREA BASE\n         CLC   DXD_CSECT,MODID                INITIALIZED?\n         BE    INIT0010                       YES\n         MVC   DXD_CSECT,MODID\nINIT0010 DS    0H\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         XC    DXD_RC,DXD_RC                  RESET RC\n         CLC   COMM_OPERANDS_NBR,H2           CORRECT NBR OF OPERANDS?\n         BNE   ERR0010                        NO\n         ICM   R1,15,OPERAND_02_ADDRESS       STRING'S ADDRESS\n         CLC   =C'? ',0(R1)                   WHAT'S THE STING?\n         BE    FIND0020                       YES\n         SR    R2,R2\n         ICM   R2,3,OPERAND_02_LENGTH         OPERAND LENGTH\n         TM    OPERAND_02_TYPE,$OPERAND_HEX   HEX?\n         BO    FIND0010                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Character strings                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_HEX\n         MVC   SESS_SEARCH_ARG,COMM_BLANKS    INITIALIZE SEARCH ARG\n         STCM  R2,3,SESS_SEARCH_ARG_LENGTH    SAVE LENGTH\n         BCTR  R2,0\n         EX    R2,MVC01                       COPY SEARCH ARG\n         ITRACE ID=CHAR,                                               +\n               DATA1=SESS_SEARCH_ARG,                                  +\n               DATA2=(SESS_SEARCH_ARG_LENGTH,2)\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        HEX strings                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFIND0010 DS    0H\n         OI    SESS_SEARCH_FLAGS,$SESS_SEARCH_HEX\n         LR    R3,R2                          COPY LENGTH\n         BCTR  R2,0                           FOR EX\n         MVC   COMM_INFO_01,COMM_BLANKS\n         EX    R2,MVC02                       COPY DATA\n         EX    R2,TR01                        TRANSLATE DATA\n         XC    COMM_INFO_02,COMM_INFO_02      INITIALIZE OUTPUT\n         PACK  COMM_INFO_02+00(5),COMM_INFO_01+00(9)\n         PACK  COMM_INFO_02+04(5),COMM_INFO_01+08(9)\n         PACK  COMM_INFO_02+08(5),COMM_INFO_01+16(9)\n         PACK  COMM_INFO_02+12(5),COMM_INFO_01+24(9)\n         PACK  COMM_INFO_02+16(5),COMM_INFO_01+32(9)\n         SRL   R3,1                           DIVIDE LENGTH BY 2\n         STH   R3,SESS_SEARCH_ARG_LENGTH      SET LENGTH\n         BCTR  R3,0                           MINUS 1 FOR EX\n         EX    R3,MVC03                       COPY SEARCH STRING\n         ITRACE ID=HEX,                                                +\n               DATA1=SESS_SEARCH_ARG,                                  +\n               DATA2=(SESS_SEARCH_ARG_LENGTH,2)\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFIND0020 DS    0H\n         MVI   SPF_ZCMD,C'F'\n         MVI   SPF_ZCMD+1,C' '\n         TM    SESS_SEARCH_FLAGS,$SESS_SEARCH_HEX\n         BO    FIND0030\n         MVC   SPF_ZCMD+2(L'SPF_ZCMD-2),SESS_SEARCH_ARG\n         MVI   DXD_RC+1,4\n         B     EXIT0000\nFIND0030 DS    0H\n         UNPK  COMM_INFO_01+00(9),SESS_SEARCH_ARG+00(5)\n         UNPK  COMM_INFO_01+08(9),SESS_SEARCH_ARG+04(5)\n         UNPK  COMM_INFO_01+16(9),SESS_SEARCH_ARG+08(5)\n         UNPK  COMM_INFO_01+24(9),SESS_SEARCH_ARG+12(5)\n         UNPK  COMM_INFO_01+32(9),SESS_SEARCH_ARG+16(5)\n         UNPK  COMM_INFO_01+40(9),SESS_SEARCH_ARG+20(5)\n         UNPK  COMM_INFO_01+48(9),SESS_SEARCH_ARG+24(5)\n         UNPK  COMM_INFO_01+56(9),SESS_SEARCH_ARG+28(5)\n         UNPK  COMM_INFO_01+64(9),SESS_SEARCH_ARG+32(5)\n         TR    COMM_INFO_01(64),COMM_HEXCHAR\n         MVI   SPF_ZCMD+2,C'X'\n         MVI   SPF_ZCMD+3,X'7D'\n         SR    R2,R2\n         ICM   R2,3,SESS_SEARCH_ARG_LENGTH\n         SLL   R2,1                           MULTIPLY BY 2\n         BCTR  R2,0\n         EX    R2,MVC04\n         LA    R3,SPF_ZCMD+5(R2)\n         MVI   0(R3),X'7D'\n         MVI   DXD_RC+1,4                     SET RC\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE\n         MVI   DXD_RC+1,8                     SET RC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                     RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC01    MVC   SESS_SEARCH_ARG(0),0(R1)\nMVC02    MVC   COMM_INFO_01(0),0(R1)\nTR01     TR    COMM_INFO_01(0),CHARHEX\nMVC03    MVC   SESS_SEARCH_ARG(0),COMM_INFO_02\nMVC04    MVC   SPF_ZCMD+4(0),COMM_INFO_01\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC       Q(DXDFIND)\n\nH2             DC       H'2'\n\nCHARHEX        DC       256C' '\n               ORG      CHARHEX+C'A'\n               DC       X'0A0B0C0D0E0F'\n               ORG      CHARHEX+C'0'\n               DC       X'00010203040506070809'\n               ORG      CHARHEX+256\n\n               LTORG\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDFIND        DSECT\n               COPY   DXDPREF\n\nDXD_RC         DS     H\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      OSFIND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSFLIST": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00!\\x01\\t!\\x0f\\x01\\t(_\\t%\\x01o\\x01o\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-10-12T09:25:21", "lines": 367, "newlines": 367, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSFLIST                                               *\n*                                                                     *\n*  Display a list of available FORMATs                                *\n*                                                                     *\n*  This module does not use OSDISP for displaying panels.             *\n*  Therefore do not set SESS_DISP_PANEL, SESS_DISP_VDATA_ADDR,        *\n*  SESS_DISP_VDATA_LENGTH, or SESS_DISP_CURSOR.                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSFLIST  CSECT\nOSFLIST  AMODE 31\nOSFLIST  RMODE ANY\n         USING OSFLIST,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSFLIST'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(FLISTEND-OSFLIST)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                    SAVE REGISTERS\n         LR    R10,R15                            COPY BASE ADDRESS\n         DROP  R15\n         USING OSFLIST,R10\n         L     R15,COMM_DXD                       DXD AREA BASE ADDRESS\n         A     R15,DXD_START                      PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                            COPY DXD AREA ADDRESS\n         USING DXDFLIST,R13                       DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n\n         MVC   COMM_MSG_CSECT,MODID               SET MODULE'S NAME\n         MVI   COMM_MSG_ID,0                      FORCE ZERO\n\n         MVC   DXD_SAVE_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         MVC   DXD_SAVE_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         MVC   DXD_SAVE_PANEL,SESS_DISP_PANEL\n         MVC   DXD_SAVE_CURSOR,SESS_DISP_CURSOR\n\n         LA    R1,PANEL_NAME                      PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH\n         ST    R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                            VDEFINE VDATA\n         ITRACE ID=VDATA,                                              +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n\n         LA    R1,DISPLAY                         ADDR OF COMMAND\n         ST    R1,DXD_SPF_1                       SET ADDR\n         LA    R1,PANEL_NAME                      ADDR OF PANEL NAME\n         ST    R1,DXD_SPF_2                       SET ADDR\n         OI    DXD_SPF_2,X'80'                    FLAG END-OF-LIST\n\n         MVC   DXD_VDEPTH,SPF_VDEPTH              SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH              SAVE WIDTH\n\n         SR    R0,R0\n         L     R1,DXD_VWIDTH                      SCREEN WIDTH\n         D     R0,=A(MSG01_L+4)                   COMPUTE NBR PER LINE\n         ST    R1,DXD_DATA_COLUMNS                SAVE NBR OF COLUMNS\n         ITRACE ID=DATACOLS,                                           +\n               RDATA1=R0\n\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         ICM   R15,8,COMM_BLANKS\n         MVCL  R0,R14                             INITIALIZE VDATA\n\n         L     R8,DXD_VDATA_ADDR\n         L     R7,DXD_VDEPTH                      NUMBER OF LINES\n         L     R5,DXD_DATA_COLUMNS                NBR OF COLUMNS\n         XC    DXD_COLUMN_DISP,DXD_COLUMN_DISP    INITIALIZE DISP\n\n* ------------------------------------------------------------------- *\n*        ISSUE DESERV TO OBTAIN DIRECTORY INFO FOR ALL MEMBERS        *\n* ------------------------------------------------------------------- *\n         L     R4,COMM_FORMAT_DCB                 FORMATS DCB ADDR\n         MVC   DXD_DESERV(DESERV_L),DESERV_I      INITIALIZE PARM LIST\n         ITRACE ID=GET_ALL\n         DESERV FUNC=GET_ALL,                     ALL  ENTRIES         +\n               AREAPTR=DXD_DATA_ADDR,             .. BUFFER FOR DATA   +\n               CONN_INTENT=NONE,                  .. NO INTENT         +\n               DCB=(R4),                          .. DCB ADDRESS       +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_DESERV,COMPLETE)\n         ITRACE ID=DE_RC,                                              +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R4,DXD_DATA_ADDR                   ADDR OF RETURNED DATA\n         USING DESB,R4\nMAIN0010 DS    0H\n         L     R3,DESB_COUNT                      NBR OF DESB'S\n         LA    R2,DESB_DATA                       FIRST DESB\n         USING SMDE,R2\nMAIN0020 DS    0H\n         MVC   0(MSG01_L,R8),MSG01\nV        USING MSG01,R8\n         SR    R14,R14\n         ICM   R14,3,SMDE_NAME_OFF                OFFSET TO NAME\n         AR    R14,R2                             PLUS BASE\n         SR    R15,R15\n         ICM   R15,3,0(R14)                       LENGTH OF NAME\n         CH    R15,=Y(L'MSG01_NAME)               TOO LONG?\n         BNH   MAIN0030                           NO\n         LH    R15,=Y(L'MSG01_NAME)               LIMIT LENGTH\nMAIN0030 DS    0H\n         BCTR  R15,0                              ADJUST FOR EX\n         EX    R15,NAME_MVC                       COPY NAME\n         CLC   V.MSG01_NAME,SESS_FORMAT           CURRENT FORMAT?\n         BNE   MAIN0040                           NO\n         MVI   V.MSG01_ATTR_2,$SCREEN_ATTR_HIGH   HIGHLIGHT CURRENT\nMAIN0040 DS    0H\n         ICM   R1,15,SMDE_LEN                     LENGTH OF THIS SMDE\n         AR    R2,R1                              PLUS CURRENT\n         BCT   R3,MAIN0050                        PROCESS NEXT SMDE\n\n         ICM   R0,15,DESB_LEN                     LENGTH OF DESB\n         ICM   R0,8,DESB_SUBPOOL                  SUBPOOL NBR\n         LR    R1,R4                              COPY ADDRESS\n         ICM   R4,15,DESB_NEXT                    NEXT DESB\n         ITRACE ID=FREEDESB,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                             FREE CURRENT DESB    +\n               A=(1),                                                  +\n               LV=(0)\n         ITRACE ID=NEXTDESB,                                           +\n               RDATA1=R4\n         LTR   R4,R4                              ANOTHER DESB?\n         BZ    MAIN0070                           NO.. DISPLAY DATA\n         L     R3,DESB_COUNT                      NBR OF DESB'S\n         LA    R2,DESB_DATA                       FIRST DESB\n\nMAIN0050 DS    0H\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCT   R7,MAIN0020                        CONTINUE, W/NEXT LINE\n         L     R8,DXD_COLUMN_DISP                 CURRENT DISP\n         A     R8,=A(MSG01_L+4)                   DISP FOR NEXT COLUMN\n         ST    R8,DXD_COLUMN_DISP                 UPDATE DISP\n         A     R8,DXD_VDATA_ADDR                  PLUS BASE\n         BCT   R5,MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Free any remaining data                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ICM   R0,15,DESB_LEN                     LENGTH OF DESB\n         ICM   R0,8,DESB_SUBPOOL                  SUBPOOL NBR\n         LR    R1,R4                              COPY ADDRESS\n         ICM   R4,15,DESB_NEXT                    NEXT DESB\n         ITRACE ID=FREEDESB,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                             FREE CURRENT DESB    +\n               A=(1),                                                  +\n               LV=(0)\n         ITRACE ID=NEXTDESB,                                           +\n               RDATA1=R4\n         LTR   R4,R4                              ANOTHER DESB?\n         BNZ   MAIN0060                           YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=DISPLAY\n         LA    R1,DXD_SPF_PARMS                   DISPLAY PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                            DISPLAY LIST\n         MVC   SPF_MSG_1,COMM_BLANKS\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                            RC=0?\n         BNZ   EXIT0000                           NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_VDATA_ADDR                  VDATA ADDRESS\n         L     R7,DXD_VDEPTH                      SCREEN DEPTH\n         L     R5,DXD_DATA_COLUMNS                DATA COLUMNS\n         XC    DXD_COLUMN_DISP,DXD_COLUMN_DISP    INIT COLUMN DISP\n         MVC   DXD_SELECTED_FORMAT,COMM_BLANKS\nMAIN0100 DS    0H\n         ITRACE ID=SELECT,                                             +\n               RDATA1=R8,                                              +\n               DATA2=V.MSG01_NAME\n         CLI   V.MSG01_SELECTION,0                SELECTED?\n         BE    MAIN0110                           NO\n         CLI   V.MSG01_SELECTION,C' '             SELECTED?\n         BE    MAIN0110                           NO\n         CLC   DXD_SELECTED_FORMAT,COMM_BLANKS    ANOTHER ALREADY?\n         BNE   MAIN0120                           YES\n         MVC   DXD_SELECTED_FORMAT,V.MSG01_NAME   SAVE SELECTED FORMAT\nMAIN0110 DS    0H\n         A     R8,DXD_VWIDTH                      NEXT LINE\n         BCT   R7,MAIN0100                        LOOP\n         L     R8,DXD_COLUMN_DISP                 CURRENT DISP\n         ITRACE ID=NEXT_COL,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R5\n         A     R8,=A(MSG01_L+4)                   DISP FOR NEXT COLUMN\n         ST    R8,DXD_COLUMN_DISP                 UPDATE DISP\n         A     R8,DXD_VDATA_ADDR                  PLUS BASE\n         L     R7,DXD_VDEPTH                      SCREEN DEPTH\n         BCT   R5,MAIN0100                        LOOP\n         CLC   DXD_SELECTED_FORMAT,COMM_BLANKS    NEW FORMAT?\n         BE    EXIT0000                           NO\n         CLC   DXD_SELECTED_FORMAT,SESS_FORMAT    SAME AS CURRENT?\n         BE    EXIT0000                           YES\n         MVC   COMM_NEW_FORMAT,DXD_SELECTED_FORMAT\n         B     EXIT0000\nMAIN0120 DS    0H\n         MVI   COMM_MSG_ID+1,1                    SET MESSAGE ID\n         L     R15,COMM_V_OSMSG                   OSMSG ENTRY POINT\n         BALR  R14,R15                            BUILD MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0070                           DISPLAY WITH MSG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,2\n         MVC   COMM_INFO_01,DXD_RETURN_CODE       COPY RETURN CODE\n         MVC   COMM_INFO_02,DXD_REASON_CODE       COPY REASON CODE\n         L     R15,COMM_V_OSMSG                   OSMSG ENTRY POINT\n         BALR  R14,R15                            BUILD MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n\n         MVC   SESS_DISP_VDATA_ADDR,DXD_SAVE_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_SAVE_VDATA_LENGTH\n         MVC   SESS_DISP_PANEL,DXD_SAVE_PANEL\n         MVC   SESS_DISP_CURSOR,DXD_SAVE_CURSOR\n\n         L     R13,4(,R13)                        RESTORE R13\n         LM    R14,R12,12(R13)                    RESTORE REGISTERS\n         SR    R15,R15                            SET RC\n         BR    R14                                RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNAME_MVC MVC   V.MSG01_NAME(0),2(R14)             COPY MEMBER NAME\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC    Q(DXDFLIST)\n\nDESERV_I          DESERV FUNC=GET_ALL,MF=L\nDESERV_L          EQU   *-DESERV_I\n\nDISPLAY           DC    CL8'DISPLAY'\nPANEL_NAME        DC    CL8'OSFLIST'\n\n                  LTORG\n\nMSG01             DS    0C\nMSG01_ATTR_1      DC    AL01($SCREEN_ATTR_INPUT)\nMSG01_SELECTION   DC    CL1' '\nMSG01_ATTR_2      DC    AL01($SCREEN_ATTR_NORMAL)\nMSG01_NAME        DC    CL8' '\n                  DC    CL01' '\nMSG01_L           EQU   *-MSG01\n\nFLISTEND          EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDFLIST            DSECT\n                    COPY DXDPREF\n\nDXD_SPF_PARMS       DS   0A\nDXD_SPF_1           DS   A\nDXD_SPF_2           DS   A\n\nDXD_VDATA_LENGTH    DS   F\nDXD_VDATA_ADDR      DS   A\n\nDXD_VDEPTH          DS   F\nDXD_VWIDTH          DS   F\n\nDXD_SAVE_VDATA_ADDR DS   A\nDXD_SAVE_VDATA_LENGTH DS A\nDXD_SAVE_PANEL      DS   CL8\nDXD_SAVE_CURSOR     DS   F\n\nDXD_DATA_COLUMNS    DS   F\nDXD_COLUMN_DISP     DS   F\n\nDXD_RETURN_CODE     DS   F\nDXD_REASON_CODE     DS   F\n\nDXD_DATA_ADDR       DS   A\n\nDXD_DESERV          DS   0F,(DESERV_L)X\n\nDXD_SELECTED_FORMAT DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             IBMMAC   DES=YES,SMDE=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY     REGEQU\n             END      OSFLIST\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSFORMAT": {"ttr": 9992, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x000\\x01\\t!\\x0f\\x01\\x10\\x01O\\x16\\x03\\x01\\xb7\\x01\\xb6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-14T16:03:30", "lines": 439, "newlines": 438, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSFORMAT                                              *\n*                                                                     *\n*  Manage FORMAT data.                                                *\n*                                                                     *\n*  OS's function is to read and then display data.  To display data   *\n*  in a 'user friendly' manner, the same data may be displayed in     *\n*  multiple formats.                                                  *\n*                                                                     *\n*  Formats are defined by members in the library (PDS or PDS/E)       *\n*  allocated to OSFORMAT.                                             *\n*                                                                     *\n*                                                                     *\n*  To allow the same formatting program to perform multiple           *\n*  functions, data specific for the format being defined can          *\n*  be supplied in the FORMAT definition (USERFMT for example).        *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSFORMAT CSECT\nOSFORMAT AMODE 31\nOSFORMAT RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSFORMAT,R15\n         B     INIT0000\nMODID    DC    CL8'OSFORMAT'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(FORMATEND-OSFORMAT)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)               SAVE REGS\n         LR    R10,R15                       COPY ENTRY POINT\n         DROP  R15\n         USING OSFORMAT,R10                  DEFINE BASE\n         LR    R9,R1                         PARAMETER BLOCK ADDRESS\n         USING FMATREQ,R9                    DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSFORMAT_WORK_L,                                     +\n               LOC=BELOW\n         ST    R13,4(,R1)                    SAVE R13\n         ST    R1,8(,R13)                    CHAIN SAVE AREA\n         LR    R13,R1                        COPY WORK AREA ADDRESS\n         USING OSFORMAT_WORK,R13             DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         USING DECB,WORK_DECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(FMATREQ_FUNC,1),                                 +\n               DATA2=FMATREQ_FORMAT\n         ICM   R7,15,COMM_FORMAT_DCB         FORMAT(S) DCB ADDRESS\n         BNZ   INIT0010                      ALREADY HAVE DCB\n         ITRACE ID=INIT\n         GETMAIN RU,                         GETMAIN STORAGE FOR DCB   +\n               LV=DCB_L,                                               +\n               LOC=BELOW\n         LR    R7,R1                         COPY DCB ADDRESS\n         ST    R7,COMM_FORMAT_DCB            SAVE DCB ADDRESS\n         MVC   0(DCB_L,R7),DCB_I             INITIALIZE DCB\n         USING IHADCB,R7\n         ITRACE ID=DCB,                                                +\n               RDATA1=R7,                                              +\n               RDATA2=R1\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         OPEN  ((R7),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         TM    DCBOFLGS,DCBOFOPN             SUCCESSFUL?\n         BNO   ERR0010                       NO\n         SR    R0,R0\n         ICM   R0,3,DCBBLKSI                 BLOCK SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,COMM_FORMAT_IO             SAVE I/O AREA ADDRESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         MVI   FMATREQ_RC,$FMATREQ_OK\n         CLI   FMATREQ_FUNC,$FMATREQ_FREE\n         BE    FMAT0100                      FREE UP A FORMAT\n         CLI   FMATREQ_FUNC,$FMATREQ_CLOSE\n         BE    FMAT0300                      CLOSE UP\n* ------------------------------------------------------------------- *\n*       'FIND' the FORMAT                                             *\n* ------------------------------------------------------------------- *\nFMAT0010 DS    0H\n         ITRACE ID=LOAD_FMT\n         ITRACE ID=FIND,                                               +\n               RDATA1=R7,                                              +\n               DATA2=FMATREQ_FORMAT\n         FIND  (R7),                         ISSUE FIND                +\n               FMATREQ_FORMAT,                                         +\n               D\n         ITRACE ID=FIND_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                       SUCCESSFUL?\n         BNZ   ERR0020                       NO\n         CLI   FMATREQ_FUNC,$FMATREQ_VERIFY  VERIFYING A FORMAT NAME?\n         BE    EXIT0000                      YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        We have a valid new format (at least the name is valid)      *\n*        Free up any existing format info before loading new format.  *\n*                                                                     *\n*        Note that the function module itself is not deleted until    *\n*        final clean up.                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         BZ    FMAT0030                      NO WORK AREA\n         ICM   R15,15,SESS_FUNCTION_EP       FUNCTION ENTRY POINT\n         BZ    FMAT0030                      NO FUNCTION ACTIVE\n         MVI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         ITRACE ID=CLEANUP1,                                           +\n               RDATA1=R15\n         BALR  R14,R15                       ALLOW CLEANUP\n         ITRACE ID=CLEANED1\n         B     FMAT0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        There was no format data, no clean up necessary              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMAT0030 DS    0H\n         ITRACE ID=NOCLEAN1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMAT0040 DS    0H\n         ITRACE ID=RESET\n         XC    SESS_FUNCTION_EP,SESS_FUNCTION_EP\n         MVC   SESS_FORMAT,FMATREQ_FORMAT    COPY NAME TO COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMAT0050 DS    0H\n         XC    WORK_DECB(DECB_L),WORK_DECB\n         L     R8,COMM_FORMAT_IO             I/O AREA ADDRESS\n         USING FORMAT,R8                     DEFINE BASE\n         ITRACE ID=READ,                                               +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         READ  WORK_DECB,                    READ                      +\n               SF,                           .. SEQUENTIALLY FORWARD   +\n               (R7),                         .. DCB                    +\n               (R8),                         .. I/O AREA               +\n               'S',                                                    +\n               MF=E\n         CHECK WORK_DECB                     WAIT FOR THE I/O\n         L     R6,DECIOBPT                   IOB ADDRESS\n         USING IOBSTDRD,R6                   DEFINE IOB BASE\n         LH    R5,DCBBLKSI                   BLOCK SIZE\n         SR    R1,R1                         CLEAR R1\n         ICM   R1,3,IOBSTDRD+14              RESIDUAL LENGTH\n         SR    R5,R1                         LENGTH READ\n         BZ    FMAT0050                      READ NEXT BLOCK\nFMAT0060 DS    0H\n         ITRACE ID=DATAREAD,                                           +\n               DATA1=FORMAT_TYPE,                                      +\n               DATA2=FORMAT_DATA\n         CLI   FORMAT_TYPE,C'*'              COMMENT?\n         BE    FMAT0070                      YES\n         CLC   FORMAT_TYPE,TYPE_EXIT         EXIT STATEMENT?\n         BE    UEXIT000                      YES\n         CLC   FORMAT_TYPE,TYPE_PROGRAM      PROGRAM STATEMENT?\n         BE    PGM0000                       YES\n         CLC   FORMAT_TYPE,TYPE_PANEL        PANEL STATEMENT?\n         BE    PANL0000                      YES\n         ICM   R15,15,SESS_FUNCTION_EP       FUNCTION ENTRY POINT\n         BZ    ERR0030                       NO FUNCTION ACTIVE\n         MVI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         LA    R1,FORMAT                     CONTROL STATEMENT ADDR\n         ITRACE ID=CONTROL,                                            +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                       LINK TO FUNCTION\n         LTR   R15,R15                       SUCCESSFUL?\n         BNZ   FMAT0090                      NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMAT0070 DS    0H\n         AH    R8,DCBLRECL                   NEXT CONTROL RECORD\n         SH    R5,DCBLRECL                   MINUS 1 RECORD'S LENGTH\n         BNZ   FMAT0060                      PROCESS LOGICAL RECORD\n         B     FMAT0050                      READ NEXT PHYSICAL RECORD\nFMAT0080 DS    0H\n         ITRACE ID=EOF                       EOF HAS BEEN REACHED\n         OC    SESS_FUNCTION_EP,SESS_FUNCTION_EP\n         BZ    ERR0030\n         B     EXIT0000\nFMAT0090 DS    0H\n         MVI   FMATREQ_RC,$FMATREQ_ERROR     SET ERROR INDICATOR\n         MVI   COMM_MSG_ID+1,4\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                       BUILD MESSAGE\n         B     FMAT0300                      CLOSE DCB AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Free FMAT blocks                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMAT0100 DS    0H\n         ITRACE ID=FREE\n         ICM   R15,15,SESS_FUNCTION_EP       FUNCTION ADDRESS\n         BZ    EXIT0000                      NO FUNCTION.. EXIT\n         MVI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         ITRACE ID=CLEANUP2,                                           +\n               RDATA1=R15\n         BALR  R14,R15                       ALLOW CLEANUP\n         ITRACE ID=CLEANED2\n         MVC   SESS_FUNCTION_MODULE,COMM_BLANKS\n         XC    SESS_FUNCTION_EP,SESS_FUNCTION_EP\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMAT0300 DS    0H\n         ICM   R7,15,COMM_FORMAT_DCB DCB ADDRESS\n         BZ    EXIT0000\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R7\n         LH    R2,DCBBLKSI                   BLOCK SIZE\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         CLOSE ((R7)),                                                 +\n               MODE=31,                      CLOSE THE DCB             +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL (R7)\n         L     R1,COMM_FORMAT_IO\n         ITRACE ID=FREE_IO,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         FREEMAIN RU,                        FREE THE I/O AREA         +\n               A=(1),                                                  +\n               LV=(2)\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R7\n         FREEMAIN RU,                        FREE DCB STORAGE          +\n               A=(R7),                                                 +\n               LV=DCB_L\n         XC    COMM_FORMAT_DCB,COMM_FORMAT_DCB\n         XC    COMM_FORMAT_IO,COMM_FORMAT_IO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Process PANEL statements                                     *\n* ------------------------------------------------------------------- *\nPANL0000 DS    0H\n         MVC   SESS_DISP_PANEL,FORMAT_PANEL\n         ITRACE ID=PANEL,                                              +\n               DATA1=SESS_DISP_PANEL\n         B     FMAT0070\n* ------------------------------------------------------------------- *\n*        Process PROGRAM statements                                   *\n* ------------------------------------------------------------------- *\nPGM0000  DS    0H\n         MVC   SESS_FUNCTION_MODULE,FORMAT_PROGRAM      COPY PGM NAME\n         ITRACE ID=LOADPGM,                                            +\n               DATA1=SESS_FUNCTION_MODULE\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD               OSLOAD FUNCTION\n         MVC   LOADREQ_MODULE,FORMAT_PROGRAM            COPY PGM NAME\n         LA    R1,LOADREQ                               OSLOAD PARMS\n         L     R15,COMM_V_OSLOAD                        OSLOAD EP\n         BALR  R14,R15                                  LINK TO OSLOAD\n         CLI   LOADREQ_RC,$LOADREQ_OK                   SUCCESSFUL?\n         BNE   ERR0050                                  NO\n         ITRACE ID=LOADED\n         MVI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE     SET FUNCTION\n         ICM   R15,15,LOADREQ_EP                        FUNCTION EP\n         ST    R15,SESS_FUNCTION_EP                     SAVE ADDRESS\n         ITRACE ID=FMATINIT,                                           +\n               DATA1=(SESS_FUNCTION_EP,4)\n         BALR  R14,R15                                  LINK\n         ITRACE ID=INITDONE\n         B     FMAT0070\n* ------------------------------------------------------------------- *\n*        Process exit statements                                      *\n* ------------------------------------------------------------------- *\nUEXIT000 DS    0H\n         MVC   SESS_EXIT_MODULE,FORMAT_EXIT\n         ITRACE ID=LOADEXIT,                                           +\n               DATA1=SESS_EXIT_MODULE\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,FORMAT_PROGRAM\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         MVC   SESS_FUNCTION_EXIT,LOADREQ_EP\n         ITRACE ID=PGM_ADDR,                                           +\n               DATA1=(SESS_FUNCTION_EXIT,4)\n         B     FMAT0070\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         MVC   COMM_INFO_01(10),C_0000000000\nNBR0010  DS    0H\n         CLI   0(R1),C' '            BLANK?\n         BE    NBR0020               YES\n         CLI   0(R1),C','            COMMA?\n         BE    NBR0020               YES\n         CLI   0(R1),C'0'            ZERO?\n         BL    NBR0030               LESS.. BAD\n         CLI   0(R1),C'9'            NINE?\n         BH    NBR0030               HIGHER.. BAD\n         MVC   COMM_INFO_01(9),COMM_INFO_01+1\n         MVC   COMM_INFO_01+9(1),0(R1)\n         LA    R1,1(,R1)             NEXT DIGIT\n         B     NBR0010               LOOP\nNBR0020  DS    0H\n         PACK  COMM_DWORD,COMM_INFO_01(10)\n         CVB   R0,COMM_DWORD         CONVERT TO BINARY\n         BR    R15\nNBR0030  DS    0H\n         ICM   R0,15,MINUS_ONE       INDICATE BAD\n         BR    R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1       SET MESSAGE ID\n         STH   R15,COMM_DWORD        SAVE RETURN CODE\n         B     ERR1000\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2       SET MESSAGE ID\n         MVC   COMM_INFO_01,FMATREQ_FORMAT\n         B     ERR1000\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3       NO FUNCTION\n         B     ERR1000\nERR0040  DS    0H\n         DC    H'0'                  FORMAT DATA, NO FORMAT PROGRAM\nERR0050  DS    0H\n         DC    H'0'                  LOAD FAILED\nERR1000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID,0\n         L     R15,COMM_V_OSMSG      OSMSG ENTRY POINT\n         BALR  R14,R15               BUILD MESSAGE\n         MVI   FMATREQ_RC,$FMATREQ_ERROR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(FMATREQ_RC,1),                                   +\n               RDATA2=R13\n         LR    R1,R13\n         L     R13,4(,R13)           RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSFORMAT_WORK_L\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCB_I    DCB   DSORG=PO,                                               +\n               DDNAME=OSFORMAT,                                        +\n               EODAD=FMAT0080,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=R\nDCB_L    EQU   *-DCB_I\nOPEN_I   OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L   EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L  EQU   *-CLOSE_I\n\nMINUS_ONE       DC   F'-1'\n\nH16             DC   H'16'\nH30             DC   H'30'\n\nC_0000000000    DC   C'0000000000'\nTYPE_EXIT       DC   CL8'EXIT'\nTYPE_PANEL      DC   CL8'PANEL'\nTYPE_PROGRAM    DC   CL8'PROGRAM'\n\n\n                LTORG\n\nFORMATEND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSFORMAT_WORK       DSECT\n                    COPY    DXDPREF\n\nWORK_OPEN           DS      0F,(OPEN_L)X\nWORK_CLOSE          DS      0F,(CLOSE_L)X\nWORK_DECB           DS      0F,(DECB_L)X\n\n                    LOADREQ DSECT=NO\nOSFORMAT_WORK_L     EQU     *-OSFORMAT_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    FMATREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY    FORMAT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC DCBD=PS\n         IBMMAC IOB=YES\n         IBMMAC DECB=YES\nDECB_L   EQU    *-DECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY    TRENTRY\n* ------------------------------------------------------------------- *\n*                   EQUATES                                           *\n* ------------------------------------------------------------------- *\n                    COPY    REGEQU\n                    END     OSFORMAT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSGDDM": {"ttr": 1040, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\t\"o\\x01\\t\"o\\x159\\x04\\x88\\x04\\x88\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-08-14T00:00:00", "modifydate": "2009-08-14T15:39:59", "lines": 1160, "newlines": 1160, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  NOT____NOT___NOT___NOT___NOT___NOT___NOT___NOT___NOT  working!     *\n*                                                                     *\n*                                                                     *\n*         DISPLAY PICTURE IMAGE WITH VECTOR GRAPHICS                  *\n*                                                                     *\n*        The graphics will be rendered and written to the user's      *\n*        display device using GDDM calls.                             *\n*                                                                     *\n*        GDDM will use the whole screen.                              *\n*        \"normal\" REVIEW interaction will resume after                *\n*        this terminates.                                             *\n*                                                                     *\n*        This is called by REVIMAGE after it has been determined      *\n*        to employ vector graphics.                                   *\n*                                                                     *\n*        Currently the byte/pixel array is created by PCXCHECK        *\n*        which can process \".pcx\" single-plane picture files with     *\n*        1-, 4-, or 8-colors.                                         *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSGDDM   CSECT\nOSGDDM   AMODE 31\nOSGDDM   RMODE ANY\n         USING OSGDDM,R15\n         B     INIT0000\n         DC    CL8'OSGDDM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSGDDMEND-OSGDDM)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)     SAVE REGISTERS\n         DROP  R15\n         LR    R12,R15             SET BASE\n         USING OSGDDM,R12\n         USING REVCOMM,R9\n         L     R15,SESS_FORMATTER_DXD_ADDR\n         A     R15,DXD_START\n         ST    R13,4(R15)\n         ST    R15,8(R13)\n         LR    R13,R15\n         USING DXDGDDM,R13\n         ITRACE ID=ENTRY\n         MVC   DXD_DCB(DCBL),DCBI               INITIALIZE DCB\n         LA    R1,DXD_DCB\n         USING IHADCB,R1\n         MVC   DCBDDNAM,MSG+64                  SET DDNAME\n         ICM   R0,15,DXD_ADMASPLT               ADMASPLT LOADED?\n         BNZ   GDDM0010                         YES\n         LOAD  EP=ADMASPLT                      LOAD IT\n         ST    R0,DXD_ADMASPLT                  SAVE ENTRY POINT\nGDDM0010 DS    0H\n         LA    R0,SESS_DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Determine if we know how to render this file as a picture    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      For black and white.. x'00' black, x'01' white                 *\n*                                                                     *\n*      For colors..                                                   *\n*      Each byte contains a color number that corresponds to an       *\n*      entry in a color \"palette\".                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   DSPCREQ_RECORD_NBR,F1            SET RECORD NBR\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE RECORD 1\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSUFUL?\n         BNE   ERR0010                          ERROR\n         CLC   DSPCREQ_RECORD_LENGTH,F80        RECORD LENGTH = 80?\n         BL    ERR0020                          NO\n         L     R7,DSPCREQ_RECORD_ADDR           DATA ADDRESS\n         USING PCXHDR,R7                        DEFINE BASE\n         CLI   PCXMFR,10                        ZSOFT PCX FILE?\n         BNE   ERR0030                          NO\n         CLI   PCXMETHD,1                       KNOWN ENCODING METHOD?\n         BH    ERR0040                          NO\n         CLI   PCXRESV,0                        EXPECTED ZERO BYTE?\n         BNE   ERR0050                          NO\n         CLI   PCXNPLNS,1                       SINGLE COLOR PLANE?\n         BNE   ERR0060                          NO\n         CLI   PCXBITPP,1                       BLACK AND WHITE?\n         BE    GDDM0020                         YES\n         CLI   PCXBITPP,4                       16-COLORS?\n         BE    GDDM0020                         YES\n         CLI   PCXBITPP,8                       256-COLORS?\n         BNE   ERR0070                          NO..\nGDDM0020 DS    0H\n         CLI   PCXBITPP,1                       BLACK AND WHITE\n         SR    R3,R3\n         IC    R3,PCXBITPP                      BITS PER PIXEL\n         ST    R3,DXD_RESOLUTION                SAVE FOR DISPLAY\n         ICM   R3,1,PCXBYTLN\n         ICM   R3,2,PCXBYTLN+1                  UNCOMPRESSED PER LINE\n         LA    R1,7(,R3)                        ROUND ..\n         SRL   R1,3\n         SLL   R1,3                             ..  TO NEXT DOUBLEWORD\n         MVC   PCXHDRWS,PCXHDR                  COPY FILE HEADER\n         STH   R3,PCXBYTLN                      DECODED BYTES PER LINE\n         LA    R3,DXD_EXPANDED_DATA(R3)         COMPUTE ENDING ADDRESS\n         ST    R3,PCXEOSCN                      SAVE FOR COMPARISON\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Decode co-ordinates of the corners of the window.            *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R0,4                             NUMBER TO DECODE\n         LA    R15,PCXWINDW                     FIRST CO-ORDINATE\nGDDM0030 DS    0H\n         ICM   R0,1,0(R15)\n         ICM   R0,2,1(R15)\n         STH   R0,0(R15)\n         LA    R15,2(,R15)                      NEXT CO-ORDINATE\n         BCT   R0,GDDM0030                      LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R2,1\n         AH    R2,PCXXMAX                       PLUS MAXIMUM X IN PELS\n         SH    R2,PCXXMIN                       MINUS MINIMUM\n         ST    R2,X_PELS                        X DIMENSION IN PELS\n         LA    R3,1\n         AH    R3,PCXYMAX                       PLUS MAXIMUM Y IN PELS\n         SH    R3,PCXYMIN                       MINUS MINIMUM\n         ST    R3,Y_PELS                        Y DIMENSION IN PELS\n         ST    R3,LINES2GO                      SAVE LINES TO RENDER\n         MR    R2,R2                            COMPUTE SIZE IN PELS\n         ST    R3,DXD_TOTAL_PELS\n         LA    R0,7(,R3)\n         SRL   R0,3\n         SLL   R0,3                             ROUND TO DOUBLEWORDS\n         ST    R0,DXD_PICTURE_SIZE              SAVE SIZE\n         ITRACE ID=GET_PICT,                                           +\n               RDATA1=R0\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ITRACE ID=PICTURE,                                            +\n               RDATA1=R1\n         ST    R1,DXD_PICTURE_ADDR              SAVE STORAGE ADDRESS\n         MVC   0(8,R1),PICTURE_ID               SET EYECATCHER\n         ST    R1,PEL_LOAD_CURSOR               INITIALIZE PEL CURSOR\n         A     R1,DXD_PICTURE_SIZE              COMPUTE END ADDRESS\n         ST    R1,PIC_END_ADDR                  SAVE FOR DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   PIC_COLOR,X'F7'                  START IN NEUTRAL COLOR\n         MVC   PCXPAL16,PCXCOLMP                COPY 16-COLOR PALETTE\n         MVI   PCXRUNLN,0                       PREPARE FOR USE\n         L     R1,DSPCREQ_RECORD_LENGTH\n         LA    R6,DXD_EXPANDED_DATA             EXPANSION AREA\n         LA    R8,PCXHDR(R1)                    SKIP HEADER\n         LA    R0,PCXHDRL                       HEADER LENGTH\n         AR    R2,R0               PAST HEADER\n         SR    R1,R0               ADJUST REMAINING LENGTH\n         BP    PCX0110             FIRST RECORD HAS HEADER PLUS MORE\nPCX0090  DS    0H\n         LPR   R15,R1              LENGTH OF REST OF HEADER\n         L     R7,DIRNXT(,R7)      SECOND RECORD DETAILS\n         L     R1,DIRLEN(R7)       RECORD LENGTH\n         L     R2,DIRREC(R7)       RECORD ADDRESS\n         LR    R0,R15              REMAINING HEADER LENGTH\n         BCTR  R15,0               DECREMENT FOR EXECUTE\n         LTR   R15,R15             WAS FIRST RECORD JUST COMPLETE HDR?\n         BM    PCX0100             YES, HAVE HDR BUT END OF 1ST RECORD\n         EX    R15,PCXHDRST        COPY REST OF PCX 128-BYTE HEADER\nPCX0100  DS    0H\n         AR    R8,R1               PREPARE FOR (VERY) SHORT 2ND RECORD\n         AR    R2,R0               PAST HEADER\n         SR    R1,R0               ADJUST REMAINING LENGTH\n         BNP   PCX0090             HANDLE EMBEDDED (VERY) SHORT RECORD\n\nPCX0110  DS    0H\n         MVI   PCXRUNLN+1,1        SET RUN-LENGTH COUNT TO ONE\n         TM    0(R2),X'C0'         IS THIS A RUN-LENGTH COUNT?\n         BNO   PCX0130             NO\n         CLI   PCXMETHD,0          FILE COMPRESSED?\n         BE    PCX0130             NO\n         MVC   PCXRUNLN+1(1),0(R2) YES, COPY RUN-LENGTH COUNT\n         NI    PCXRUNLN+1,X'3F'    RESET FLAG BITS TO GET COUNT\n         LA    R2,1(,R2)           NEXT BYTE\n         BCT   R1,PCX0130          ADJUST REMAINING BYTE COUNT\n         B     PCX0170             END OF RECORD REACHED\nPCX0130  DS    0H\n         MVC   0(1,R6),0(R2)       LOAD DATA BYTE\n         LH    R15,PCXRUNLN        RUN-LENGTH\n         LA    R0,2\n         SR    R15,R0              REPETITION AND ALLOW FOR EXECUTE\n         BM    PCX0140             NO REPETITION FOR RUN-LENGTH OF 1\n         EX    R15,PCXREPIT        PROPAGATE DATA BYTE\nPCX0140  DS    0H\n         AR    R15,R0              RESTORE RUN-LENGTH COUNT\n         AR    R6,R15              PAST LOADED DATA\n         C     R6,PCXEOSCN         SCAN LINE FINISHED?\n         BNL   PCX0210             YES, HAVE NOW SCANNED A LINE\nPCX0150  DS    0H\n         LA    R2,1(,R2)           NEXT BYTE\n         BCT   R1,PCX0110          ADJUST REMAINING BYTE COUNT\n         BAL   R14,PCX0170\n         B     PCX0110             GOT THE NEXT RECORD\n\nPCX0170  DS    0H\n         C     R7,HOLDEND          END OF LAST CACHED RECORD?\n         BE    PCX0200             YES, HAVE TO READ FROM FILE\n         L     R7,DIRNXT(,R7)      NO, POINT TO NEXT RECORD\nPCX0180  DS    0H\n         L     R1,DIRLEN(R7)       RECORD LENGTH\n         L     R2,DIRREC(R7)       RECORD ADDRESS\n         LTR   R1,R1               END-OF-FILE?\n         BM    PCX0320             YES, END OF DATA\n         BZ    PCX0170             DISCARD NULL RECORD\n         BR    R14                 RETURN\nPCX0200  DS    0H\n         ST    R14,PCXSAVER        SAVE THE RETURN ADDRESS\n         MVC   DOWNAMT,F1          NEED TO READ ANOTHER RECORD\n         STM   R5,R8,PCXSECSV      SAVE LOCAL STATUS\n         L     R15,COMM_V_DOWNER   DOWNER ENTRY POINT\n         BALR  R14,R15             RETURNS WITH NEW HOLDEND IN R7\n         LM    R5,R6,PCXSECSV      RESTORE LOCAL STATUS\n         L     R8,PCXSECSV+12\n         L     R14,PCXSAVER\n         B     PCX0180\n\nPCX0210  DS    0H\n         STM   R1,R2,PCXSECSV      SAVE RECORD PROCESSING STATUS\n         L     R8,PELLDCSR         PICTURE ARRAY CURSOR\n         LA    R6,DXD_EXPANDED_DATA SCAN LINE EXPANSION AREA\n         L     R0,X_PELS           PIXELS PER SCAN LINE\n         SR    R14,R14             CLEAR FOR DIVIDE\n         LA    R15,32              BITS PER WORD\n         SR    R1,R1               CLEAR FOR INSERT\n         IC    R1,PCXBITPP         BITS PER PEL\n         DR    R14,R1              PELS PER WORD\n         ST    R15,COMM_DWORD      SAVE PELS PER WORD\nPCX0220  DS    0H\n         L     R2,COMM_DWORD       PELS PER WORD\n         L     R15,0(,R6)          SOME PIXEL DATA\n         LA    R6,4(,R6)           NEXT DATA TO LOAD\nPCX0230  DS    0H\n         SR    R14,R14             CLEAR FOR SHIFT\n         SLDL  R14,0(R1)           PIXEL BITS FOR AN ARRAY ELEMENT\n         STC   R14,0(,R8)          SAVE IT INTO THE ARRAY\n         LA    R8,1(,R8)           NEXT ARRAY ELEMENT\n         BCT   R0,PCX0240          DECREMENT REMAINING WIDTH\n         B     PCX0250             PREPARE TO PROCESS NEXT SCAN LINE\nPCX0240  DS    0H\n         BCT   R2,PCX0230          PROCESS NEXT PIXEL BYTE\n         B     PCX0220\nPCX0250  DS    0H\n         ST    R8,PELLDCSR         SAVE PIXEL LOAD CURSOR\n         LA    R6,DXD_EXPANDED_DATA SCAN LINE EXPANSION AREA\n         LM    R1,R2,PCXSECSV      RESTORE RECORD PROCESSING STATUS\n         L     R0,LINES2GO         DECREMENT REMAINING SCAN LINE COUNT\n         BCTR  R0,0\n         ST    R0,LINES2GO\n         LTR   R0,R0               NEED MORE SCAN LINES?\n         BP    PCX0150             YES, EXPAND NEXT SCAN LINE\n         CLI   PCXBITPP,8          256-COLOR PICTURE?\n         BNE   PCX0320             NO, SKIP 256-COLOR PALETTE SEARCH\n\n         LA    R8,PCXPALET         PALETTE HOLD AREA\n         LA    R6,768(,R8)         PAST PALETTE HOLD AREA\nPCX0260  DS    0H\n         LA    R2,1(,R2)           NEXT BYTE\n         BCT   R1,PCX0280          ADJUST REMAINING BYTE COUNT\n         BAL   R14,PCX0170         NEXT RECORD\nPCX0280  DS    0H\n         CLI   0(R2),12            256-COLOR PALETTE FLAG?\n         BNE   PCX0260             NO, BUT KEEP LOOKING FOR IT\nPCX0290  DS    0H\n         LA    R2,1(,R2)           NEXT BYTE\n         BCT   R1,PCX0310          ADJUST REMAINING BYTE COUNT\n         BAL   R14,PCX0170         END OF RECORD REACHED\nPCX0310  DS    0H\n         MVC   0(1,R8),0(R2)       COPY A PALETTE BYTE\n         LA    R8,1(,R8)           INCREMENT HOLD AREA CURSOR\n         CR    R8,R6               PALETTE LOAD NOW COMPLETE?\n         BL    PCX0290             NO, KEEP LOADING COLOR PALETTE\n\nPCX0320  DS    0H\n         CLI   PCXBITPP,1          BLACK-AND-WHITE PICTURE?\n         BE    PCX0340             YES, ASSUME PALETTE NOT NEEDED\n\n         SR    R0,R0               CLEAR BIT ACCUMULATOR\n         LA    R1,3                BYTES PER PALETTE COLOR\n         LA    R6,PCXPALET         COLOR PALETTE\n         L     R7,DXD_TOTAL_PELS   NUMBER OF PIXELS\n         L     R8,HSEACTIV         PIXEL BYTE ARRAY\nPCX0330  DS    0H\n         SR    R15,R15             CLEAR FOR INSERT\n         IC    R15,0(,R8)          PALETTE COLOR INDEX\n         MR    R14,R1              CONVERT TO PALETTE INDEX\n         LA    R15,0(R15,R6)       PALETTE ENTRY\n         IC    R0,1(,R15)          GREEN LEVEL\n         SLL   R0,1                KEEP HIGH BIT\n         IC    R0,0(,R15)          RED LEVEL\n         SLL   R0,1                KEEP HIGH BIT\n         IC    R0,2(,R15)          BLUE LEVEL\n         SRL   R0,7                KEEP HIGH BITS\n         STC   R0,0(,R8)           OVERLAY INDEX WITH 3270 GRB FLAGS\n         LA    R8,1(,R8)           NEXT PIXEL ARRAY ELEMENT\n         BCT   R7,PCX0330          CONTINUE CONVERSION TO 3270 COLOR\n\nPCX0340  DS    0H\n         SR    R0,R0\n         L     R1,X_PELS           LOAD PICTURE HORIZONTAL PEL COUNT\n         LA    R15,9               PELS PER BYTE WIDTH\n         AR    R1,R15\n         BCTR  R1,0                ROUND UP TO NEXT INTEGRAL BYTE\n         DR    R0,R15              PICTURE WIDTH IN BYTES\n         STH   R1,X_BYTES          SAVE IT\n         L     R0,SCRNCOLS         SCREEN COLUMNS\n         SR    R0,R1               COLUMNS UNUSED\n         SRA   R0,1                HALVE IT\n         BNP   PCX0350             LEAVE OFFSET 0 IF PCX NOT NARROWER\n         STH   R0,X_OFFSET         SAVE OFFSET FOR DISPLAY ROUTINE\nPCX0350  DS    0H\n         L     R1,Y_PELS           VERTICAL PEL'S USED\n         LA    R1,15(,R1)          ROUND UP TO NEXT INTEGRAL BYTE\n         SRL   R1,4                PICTURE HEIGHT IN BYTES\n         STH   R1,Y_BYTES          SAVE IT\n         LA    R0,1\n         AH    R0,PAGESIZE         MAXIMUM PICTURE ROWS\n         SR    R0,R1               UNUSED ROWS\n         SRA   R0,1                HALVE IT\n         BNP   PCX0360             LEAVE OFFSET 0 IF PCX NOT SHORTER\n         STH   R0,Y_OFFSET         SAVE OFFSET FOR DISPLAY ROUTINE\nPCX0360  DS    0H\n         LH    R1,X_BYTES\n         MH    R1,Y_BYTES          TOTAL PICTURE SIZE\n         ST    R1,X_Y_SYMS         SAVE NEEDED SYMBOL COUNT\n\nEXIT0000 DS    0H\n         SR    R15,R15\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R15,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R14,12(R13)         RESTORE R14\n         LM    R0,R12,20(R13)      RESTORE REGISTERS\n         BR    R14                 EXIT\n\n* ------------------------------------------------------------------- *\nPCXHDRST MVC   0(0,R8),0(R1)       <<< EXECUTED >>>\nPCXREPIT MVC   1(0,R6),0(R6)       <<< EXECUTED >>>\n\n* ------------------------------------------------------------------- *\nDXD_START  DC    Q(DXDPCX)\n\nF1         DC    F'1'\nH80        DC    H'80'\n\nPICTURE_ID DC  CL8'PICTURE'\n\nMSG02    DC    C'REVPCX02E  Cannot interpret PCX color mode'\nMSG02L   EQU   *-MSG02\n         LTORG\n\nGDDMEND  EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nGDDM0010 DS    0H\n         L     R1,X_PELS           GET PICTURE WIDTH\n         LA    R1,7(,R1)\n         SRL   R1,3                ROUND UP TO BYTE BOUNDARY\n         M     R0,Y_PELS           GET GDDM BITMAP SIZE\n         ST    R1,DXD_BITMAP_LENGTH SAVE IT\n         LA    R0,7(,R1)\n         SRL   R0,3                ROUND UP TO DOUBLEWORD BOUNDARY\n         SLL   R0,3\n         ST    R0,DXD_BUFFER_SIZE  SAVE BITMAP STORAGE SIZE\n         ITRACE ID=GET_BUFF,                                           +\n               RDATA1=R0\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ITRACE ID=BUFFADDR,                                           +\n               RDATA1=R1\n         ST    R1,DXD_BUFFER       SAVE BITMAP STORAGE ADDRESS\n         TM    PICFLAGS,PICSRC     WRITING PICTURE SOURCE?\n         BNO   GDDM0050            NO\n         LA    R1,DXD_DCB\n         ITRACE ID=OPEN,                                               +\n               RDATA1=R1,                                              +\n               DATA2=DCBDDNAM\n         MVC   DXD_OPEN(OPENL),OPENI\n         OPEN  (DXD_DCB,(OUTPUT)),                                     +\n               MODE=31,                                                +\n               MF=(E,DXD_OPEN)\n         MVI   DXD_STATEMENT,C' '  CLEAR OUTPUT RECORD\n         MVC   DXD_STATEMENT+1(79),DXD_STATEMENT\n         MVC   DXD_STATEMENT(30),=C'* REVIEW &REL  BITMAP DATA FOR'\n         LH    R1,$DSNAME\n         BCTR  R1,0\n         EX    R1,LDVECDSN\n         CLI   $MEMBER,C' '        MEMBER NAME TO BE DISPLAYED?\n         BE    GDDM0040            NO\n         LA    R1,DXD_STATEMENT+32(R1)\n         MVI   0(R1),C'('\n         MVC   1(8,R1),$MEMBER\nGDDM0020 DS    0H\n         CLI   8(R1),C' '          TRAILING BLANK?\n         BNE   GDDM0030            NO\n         BCT   R1,GDDM0020\nGDDM0030 DS    0H\n         MVI   9(R1),C')'\nGDDM0040 DS    0H\n         PUT   DXD_DCB,DXD_STATEMENT WRITE HEADING\n\nGDDM0050 DS    0H\n         LA    R1,DXD_ANCHOR\n         ST    R1,DXD_ANCHOR_ADDR\n         LA    R1,FSINIT\n         ST    R1,DXD_GDDM_FUNCTION\n         OI    DXD_GDDM_FUNCTION,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             LINK TO ADMASPLT\n\n         LA    R1,GSMIX\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,GMIXXOR\n         ST    R1,DXD_GDDM_PARM1\n         OI    DXD_GDDM_PARM1,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             LINK TO ADMASPLT\n\n         MVI   DXD_STATEMENT,C' '  CLEAR OUTPUT RECORD\n         MVC   DXD_STATEMENT+1(79),DXD_STATEMENT\n         MVI   DXD_STATEMENT,C'*'  FLAG COMMENT\n         LA    R8,DXD_STATEMENT+5\n         MVC   5(1,R8),DXD_RESOLUTION+3 SHOW COLOR BIT DEPTH\n         OI    5(R8),X'F0'         MAKE NUMERIC CHARACTER\n         MVC   6(10,R8),=CL10'-BIT COLOR'\n         L     R0,X_PELS\n         LA    R15,18(,R8)         POINT TO DISPLAY AREA\n         BAL   R14,GDDM0240        FORMAT NUMBER\n         MVC   7(9,R15),=CL9'PELS WIDE'\n         L     R0,Y_PELS\n         LA    R15,36(,R8)         POINT TO DISPLAY AREA\n         BAL   R14,GDDM0240        FORMAT NUMBER\n         MVC   7(9,R15),=CL9'PELS DEEP'\n         TM    PICFLAGS,PICSRC     WRITING PICTURE SOURCE?\n         BNO   GDDM0060            NO\n         PUT   DXD_DCB,DXD_STATEMENT YES, WRITE STATISTICS\n\nGDDM0060 DS    0H\n         LA    R1,GSCOL\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,GCOLTURQ\n         ST    R1,DXD_GDDM_PARM1\n         OI    DXD_GDDM_PARM1,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             GSCOL\n\n         LA    R1,GSCHAR\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,GPOSMIN\n         ST    R1,DXD_GDDM_PARM1   X\n         ST    R1,DXD_GDDM_PARM2   Y\n         LA    R1,GTXTLEN\n         ST    R1,DXD_GDDM_PARM3\n         LA    R1,DXD_STATEMENT+10\n         ST    R1,DXD_GDDM_PARM4\n         OI    DXD_GDDM_PARM4,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             GSCHAR (FROM BOTTOM LEFT)\n         LA    R1,GSCP\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,GPOSMIN\n         ST    R1,DXD_GDDM_PARM1   X\n         LA    R1,GPOSMAX\n         ST    R1,DXD_GDDM_PARM2   Y\n         OI    DXD_GDDM_PARM2,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             GSCP (TO TOP LEFT)\n         XC    COMM_DWORD,COMM_DWORD SET UP FOR FIRST OR ONLY PLANE\n         MVI   COMM_DWORD+3,X'01'  SET BIT TO TEST IN ARRAY BYTES\nGDDM0070 DS    0H\n         LA    R1,GSCOL\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,COMM_DWORD\n         CLI   DXD_RESOLUTION+3,1  BLACK-AND-WHITE PICTURE?\n         BNH   GDDM0080            YES, GET PICTURE COLOR TO USE\n         L     R0,COMM_DWORD       NO, SAVE COLOR PLANE INDICATOR\n         NC    COMM_DWORD+3(1),PIC_COLOR\n         BNZ   GDDM0090            THIS PLANE IS IN PICTURE COLOR\n         ST    R0,COMM_DWORD       RESTORE COLOR PLANE INDICATOR\n         B     GDDM0210            SKIP THIS COLOR PLANE\nGDDM0080 DS    0H\n         MVC   COMM_DWORD+7(1),PIC_COLOR COPY COLOR TO USE\n         NI    COMM_DWORD+7,X'07'\n         LA    R1,COMM_DWORD+4\nGDDM0090 DS    0H\n         ST    R1,DXD_GDDM_PARM1\n         OI    DXD_GDDM_PARM1,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             GSCOL\n         L     R15,COMM_DWORD      GET PIXEL BYTE MASK\n         L     R1,HSEACTIV         POINT TO PIXEL/BYTE ARRAY\n         L     R2,DXD_BUFFER       POINT TO BITMAP STORAGE\n         L     R3,Y_PELS           GET SCAN LINES IN PICTURE\nGDDM0100 DS   0H\n         L     R4,X_PELS           GET PIXEL WIDTH OF PICTURE\nGDDM0110 DS    0H\n         LA    R0,8                GET BITS PER BYTE\n         SR    R14,R14             CLEAR ACCUMULATOR\nGDDM0120 DS    0H\n         SLL   R14,1               PROMOTE ACCUMULATED BITS\n         LTR   R4,R4               FINISHED LINE'S PIXELS?\n         BNP   GDDM0130            YES, DO NOT TEST BYTE\n         EX    R15,TESTPEL         TEST IF PIXEL BIT IS ON\n         LA    R1,1(,R1)           POINT TO NEXT ARRAY BYTE\n         BCTR  R4,0                DECREMENT PIXELS IN LINE TO GO\n         BZ    GDDM0130            PIXEL BIT IS OFF\n         LA    R14,1(,R14)         PIXEL BIT IS ON\nGDDM0130 DS    0H                  PROCESS NEXT BIT OF BYTE\n         BCT   R0,GDDM0120         PROCESS NEXT BIT OF BYTE\n         STC   R14,0(,R2)          STORE EIGHT BITMAP PIXELS\n         LA    R2,1(,R2)           POINT TO NEXT BITMAP BYTE\n         LTR   R4,R4               FINISHED THIS LINE'S PIXELS?\n         BP    GDDM0110            NO, CONTINUE PACKING THIS SCAN LINE\n         BCT   R3,GDDM0100         YES, COMMENCE PACKING NEXT SCAN LINE\n\n         LA    R1,GSIMG\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,GIMGTYPE\n         ST    R1,DXD_GDDM_PARM1   IMAGE TYPE\n         LA    R1,X_PELS\n         ST    R1,DXD_GDDM_PARM2   IMAGE WIDTH\n         LA    R1,Y_PELS\n         ST    R1,DXD_GDDM_PARM3   IMAGE DEPTH\n         LA    R1,DXD_BITMAP_LENGTH\n         ST    R1,DXD_GDDM_PARM4   IMAGE LENGTH\n         L     R1,DXD_BUFFER\n         ST    R1,DXD_GDDM_PARM5   IMAGE DATA\n         OI    DXD_GDDM_PARM5,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             GSIMG (CURRENT POSITION UNCHANGED)\n\n         TM    PICFLAGS,PICSRC     WRITING PICTURE SOURCE?\n         BNO   GDDM0210            NO\n         CLI   DXD_RESOLUTION+3,1  BLACK-AND-WHITE PICTURE?\n         BNH   GDDM0150            YES, GET ON WITH IT\n         MVI   DXD_STATEMENT,C' '  CLEAR OUTPUT RECORD\n         MVC   DXD_STATEMENT+1(79),DXD_STATEMENT\n         MVC   DXD_STATEMENT(13),=CL13'*  BLUE PLANE'\n         CLI   COMM_DWORD+3,X'01'  CORRECT?\n         BE    GDDM0140            YES\n         MVC   DXD_STATEMENT+3(4),=CL4' RED'\n         CLI   COMM_DWORD+3,X'02'  CORRECT?\n         BE    GDDM0140            YES\n         MVC   DXD_STATEMENT+2(5),=CL5'GREEN'\nGDDM0140 DS    0H\n         PUT   DXD_DCB,DXD_STATEMENT\nGDDM0150 DS    0H\n         L     R2,DXD_BUFFER       INITIALIZE BUFFER POINTER\n         LA    R3,DXD_STATEMENT+17 POINT TO FIRST UNPACK TARGET\n         LA    R4,DXD_STATEMENT+55 POINT TO LAST UNPACK TARGET\n         L     R5,Y_PELS           GET NUMBER OF SCAN LINES\nGDDM0160 DS    0H\n         L     R6,X_PELS           GET PICTURE PIXEL WIDTH\n         LA    R6,7(,R6)\n         SRL   R6,3                GET BYTES PER SCAN LINE\nGDDM0170 DS    0H\n         MVI   DXD_STATEMENT,C' '  CLEAR OUTPUT RECORD\n         MVC   DXD_STATEMENT+1(79),DXD_STATEMENT\n         MVC   DXD_STATEMENT(17),VECCARD COPY TEMPLATE\n         LR    R7,R3               POINT TO FIRST UNPACK TARGET\nGDDM0180 DS    0H\n         UNPK  0(3,R7),0(2,R2)     UNPACK A BITMAP BYTE\n         TR    0(2,R7),VECHEX-C'0'\n         LA    R7,2(,R7)           POINT PAST LATEST HEX\n         MVI   0(R7),QUOTE         PREPARE FOR END OF RECORD'S DATA\n         LA    R2,1(,R2)           POINT TO BITMAP BYTE\n         CR    R7,R4               FILLED CARD IMAGE?\n         BH    GDDM0190            YES, WRITE OUTPUT RECORD\n         BCT   R6,GDDM0180         NO, GO UNPACK ANOTHER BYTE\n         LA    R6,1                END OF LINE SO WRITE RECORD\nGDDM0190 DS    0H\n         PUT   DXD_DCB,DXD_STATEMENT PRODUCE BITMAP DATA RECORD\n         BCT   R6,GDDM0170         GO WRITE ANOTHER CARD IMAGE\n         BCT   R5,GDDM0160         GO PROCESS NEXT SCAN LINE\n         MVI   DXD_STATEMENT,C' '  CLEAR OUTPUT RECORD\n         MVC   DXD_STATEMENT+1(79),DXD_STATEMENT\n         L     R0,DXD_BITMAP_LENGTH SHOW LENGTH OF BITMAP\n         CVD   R0,24(,R13)\n         MVI   DXD_STATEMENT,C'*'  FLAG COMMENT\n         MVC   DXD_STATEMENT+10(8),=X'4020202020202120'\n         ED    DXD_STATEMENT+10(8),28(R13)\n         MVC   DXD_STATEMENT+19(21),=C'BYTES IN IMAGE BITMAP'\n         CLI   DXD_RESOLUTION+3,1  BLACK-AND-WHITE PICTURE?\n         BNH   GDDM0200            YES\n         MVC   DXD_STATEMENT+28(5),=C'PLANE'\nGDDM0200 DS    0H\n         PUT   DXD_DCB,DXD_STATEMENT\n\nGDDM0210 DS    0H\n         CLI   DXD_RESOLUTION+3,1  BLACK-AND-WHITE PICTURE?\n         BNH   GDDM0220            YES, PICTURE NOW RENDERED\n         CLI   COMM_DWORD+3,X'02'  LAST PLANE PROCESSED?\n         BH    GDDM0220            YES, PICTURE NOW RENDERED\n         L     R0,COMM_DWORD       NO, GET COLOR PLANE NUMBER\n         SLL   R0,1                PROMOTE BIT TO NEXT PLANE\n         ST    R0,COMM_DWORD       SAVE NEXT COLOR PLANE NUMBER\n         B     GDDM0070            PROCESS NEXT COLOR PLANE\n\nGDDM0220 DS    0H\n         TM    PICFLAGS,PICSRC     WRITING PICTURE SOURCE?\n         BNO   GDDM0230            NO\n         ITRACE ID=CLOSE\n         MVC   DXD_OPEN(CLOSEL),CLOSEI\n         CLOSE (DXD_DCB),                                              +\n               MODE=31,                                                +\n               MF=(E,DXD_OPEN)\n         FREEPOOL DXD_DCB          FREE BUFFERS\nGDDM0230 DS    0H\n         LM    R0,R1,DXD_BUFFER_SIZE\n         ITRACE ID=FREEBUFF,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         LA    R1,ASREAD\n         ST    R1,DXD_GDDM_FUNCTION\n         LA    R1,ATTTYPE\n         ST    R1,DXD_GDDM_PARM1\n         LA    R1,ATTVALUE\n         ST    R1,DXD_GDDM_PARM2\n         LA    R1,ATTCOUNT\n         ST    R1,DXD_GDDM_PARM3\n         OI    DXD_GDDM_PARM3,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             ASREAD (FINISH SEND, WAIT FOR INPUT)\n\n         LA    R1,FSTERM\n         ST    R1,DXD_GDDM_FUNCTION\n         OI    DXD_GDDM_FUNCTION,X'80' FLAG LAST PARAMETER\n         LA    R1,DXD_GDDM_PARMS   POINT TO GDDM PARAMETER LIST\n         L     R15,DXD_ADMASPLT\n         BALR  R14,R15             FSTERM\n\n         ITRACE ID=EXIT\n         L     R13,4(,R13)         POINT TO PREVIOUS SAVE AREA\n         LM    R14,R12,12(R13)     RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                 RETURN\n\n* ------------------------------------------------------------------- *\nGDDM0240 DS    0H\n         CVD   R0,COMM_DWORD\n         MVC   0(6,R15),=XL6'402020202120'\n         ED    0(6,R15),COMM_DWORD+5\n         BR    R14\n* ------------------------------------------------------------------- *\nLDVECDSN MVC   DXD_STATEMENT+31(0),$DSNAME+2 <<< EXECUTED >>>\nTESTPEL  TM    0(R1),X'00'                   <<< EXECUTED >>>\n\n* ------------------------------------------------------------------- *\nDXD_START DC   Q(DXDGDDM)\nFSINIT   DC    A(QQFSINIT)         INITIALIZE GDDM\nGSMIX    DC    A(QQGSMIX)          SET FOREGROUND COLOR-MIXING MODE\nGSCOL    DC    A(QQGSCOL)          SET GRAPHIC COLOR\nGSCHAR   DC    A(QQGSCHAR)         DRAW A CHARACTER STRING\nGSCP     DC    A(QQGSCP)           SET CURRENT POSITION\nGSIMG    DC    A(QQGSIMG)          DRAW A GRAPHICS IMAGE\nASREAD   DC    A(QQASREAD)         PERFORM A TERMINAL READ\nFSTERM   DC    A(QQFSTERM)         TERMINATE GDDM\nGMIXXOR  DC    F'4'\nGCOLTURQ DC    F'5'\nGTXTLEN  DC    F'47'\nGIMGTYPE DC    F'0'\nGPOSMIN  DC    E'0'\nGPOSMAX  DC    E'100'\nVECHEX   DC    C'0123456789ABCDEF' HEXADECIMAL DIGIT TRANSLATE TABLE\nVECCARD  DC    CL17'         DC    X'''\nOPENI    OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE *,                                                      +\n               MODE=31,                                                +\n               MF=L\nCLOSEL   EQU   *-CLOSEI\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=$,                                               +\n               MACRF=PM,                                               +\n               RECFM=FB,                                               +\n               LRECL=80\nDCBL     EQU   *-DCBI\n\n         LTORG\n* ------------------------------------------------------------------- *\nDXDGDDM            DSECT\n                   COPY  DXDPREF\n*        COPY  PCXWORK\nPCXSECSV DS    4F                            SECONDARY SAVE AREA\nPCXWKLEN DS    F                             SIZE OF THIS AREA\nPELLDCSR DS    F                             PIXEL LOAD CURSOR\nPCXEOSCN DS    F                             END OF DECODED LINE\nLINES2GO DS    F                             SCAN LINES LEFT TO READ\nPCXSAVER DS    F                             RETURN ADDRESS\nPCXRUNLN DS    H                             DATA BYTE RUN-LENGTH\n         DS    0D\nPCXHDRWS DS    CL128                         PCX HEADER HOLD AREA\nPCXPAL16 DS    0XL48                         16-COLOR PALETTE\nPCXPALET DS    XL768                         256-COLOR PALETTE\nDXD_EXPANDED_DATA DS 0D                      SCAN LINE EXPANSION AREA\n-------<> -------- <> ------- <> ------- <> --------------\n      NEED TO DETERMINE HOW MUCH STORAGE IS NEEDED FOR 'SCAN LINE'\n-------<> -------- <> ------- <> ------- <> --------------\n\nDXD_BUFFER_SIZE    DS    F     _____/ BITMAP STORAGE LENGTH\nDXD_BUFFER         DS    F          \\ BITMAP STORAGE ADDRESS\nDXD_ADMASPLT       DS    A            ADMASPLT ENTRY POINT\nDXD_DCB            DS    0F,(DCBL)X   BITMAP SOURCE OUTPUT DCB\nDXD_OPEN           DS    0F,(OPENL)X\nDXD_ANCHOR_ADDR    DS    A            APPLICATION ANCHOR BLOCK\nDXD_STATEMENT      DS    CL80         BITMAP SOURCE OUTPUT RECORD\nDXD_ANCHOR         DS    0F           APPLICATION ANCHOR BLOCK\nDXD_GDDM_FEEDBACK  DS    0F           GDDM FEEDBACK CODE\nDXD_GDDM_SEV_CODE  DS    H            GDDM SEVERITY CODE\nDXD_ERROR_CODE     DS    H            GDDM ERROR CODE\nDXD_GDDM_ANCHOR    DS    A            GDDM ANCHOR POINTER\n                   DS    F            REQUEST CONTROL PARAMETER\nDXD_BITMAP_LENGTH  DS    F            LENGTH OF THE IMAGE BITMAP\n\nDXD_GDDM_PARMS     DS    0F\nDXD_GDDM_FUNCTION  DS    A            REQUEST CONTROL PARAMETERS\nDXD_GDDM_PARM1     DS    A\nDXD_GDDM_PARM2     DS    A\nDXD_GDDM_PARM3     DS    A\nDXD_GDDM_PARM4     DS    A\nDXD_GDDM_PARM5     DS    A\n\nATTTYPE            DS    A\nATTVALUE           DS    A\nATTCOUNT           DS    A\n\n* ------------------------------------------------------------------- *\n*                                COPIED FROM GDDM.SADMSAM(ADMURCPB)\n* GROUP - ADMMCQA\nQQFSTRCE EQU   X'00020000'       TRACE\nQQFSEXIT EQU   X'00030000'       SET ERROR EXIT\nQQFSQERR EQU   X'00040000'       QUERY LAST ERROR\nQQSPINIT EQU   X'00050000'       SPI SPECIAL INIT\nQQFSQSYS EQU   X'00060000'       QUERY SYSTEMS ENVIRONS\nQQESSUDS EQU   X'00070000'       SPECIFY SOURCE UDS\nQQESEUDS EQU   X'00080000'       SPECIFY ENCODED UDS\nQQESACRT EQU   X'000A0000'       CREATE APP GROUP\nQQESADEL EQU   X'000B0000'       DELETE APP GROUP\nQQESAQRY EQU   X'000C0000'       QUERY CURRENT APP GRP\nQQESASEL EQU   X'000D0000'       SELECT APP GROUP\nQQFSTRAN EQU   X'000F0000'       TRANSLATE CHAR STRING\nQQESQCPG EQU   X'00100000'       QUERY CODE PAGE\nQQESSCPG EQU   X'00110000'       SET CODE PAGE\nQQESQEUD EQU   X'00120000'       QUERY ENCODED UDS\nQQESQUNL EQU   X'00130000'       QRY NICKNAME INFO LEN\nQQESQUNS EQU   X'00140000'       QUERY NICKNAME INFO\n* GROUP - ADMMCQEE\nQQESLIB  EQU   X'08142000'       DEFINE LIBRARY\nQQESQOBJ EQU   X'08142400'       QUERY OBJECT EXISTENCE\nQQESPCB  EQU   X'081C1000'       DEFINE PCB\n* GROUP - ADMMCQDS\nQQFSTERM EQU   X'0C000000'       TERMINATION\nQQFSINIT EQU   X'0C000001'       INITIALISATION\nQQFSRNIT EQU   X'0C000002'       RE-INITIALISATION\nQQDSOPEN EQU   X'0C000200'       OPEN DEVICE\nQQDSCLS  EQU   X'0C000201'       CLOSE DEVICE\nQQDSUSE  EQU   X'0C000202'       DEVICE USAGE\nQQDSDROP EQU   X'0C000203'       DROP DEVICE\nQQDSQUID EQU   X'0C000204'       QUERY UNIQUE DEVICE ID\nQQDSQUSE EQU   X'0C000205'       QUERY USAGE\nQQDSQDEV EQU   X'0C000206'       QUERY DEVICE CHRISTCS\nQQDSRNIT EQU   X'0C000207'       RE-INIT DEVICE\n* GROUP - ADMMCQDC\nQQFSPCRT EQU   X'0C040000'       PAGE CREATION\nQQFSPSEL EQU   X'0C040001'       PAGE SELECTION\nQQFSPDEL EQU   X'0C040002'       PAGE DELETION\nQQFSPCLR EQU   X'0C040003'       PAGE CLEAR\nQQFSPQRY EQU   X'0C040004'       QUERY PAGE\nQQFSQCPG EQU   X'0C040005'       QUERY CURRENT PAGE\nQQMSPQRY EQU   X'0C040006'       QUERY MAPPED PAGE\nQQSSQF   EQU   X'0C040100'       QUERY S SETS ON FILE\nQQPSQSS  EQU   X'0C040101'       QUERY DEVICE PS STORES\nQQGSQNSS EQU   X'0C040102'       QUERY NO LOADED GRA SS\nQQGSQSS  EQU   X'0C040103'       QUERY LOADED GRPHCS SS\nQQPSLSS  EQU   X'0C040200'       LOAD DEV PS FROM STOR\nQQPSLSSC EQU   X'0C040201'       COND LOAD DEV PS STORE\nQQPSDSS  EQU   X'0C040202'       LOAD DEV PS FROM PROG\nQQPSRSV  EQU   X'0C040203'       RESERVE DEVICE PS STOR\nQQGSLSS  EQU   X'0C040300'       LOAD GRPH SYMBOL SET\nQQGSDSS  EQU   X'0C040301'       DEFINE GRPH SYMBOL SET\nQQPSRSS  EQU   X'0C040400'       RELEASE SS FROM DEV PS\nQQGSRSS  EQU   X'0C040401'       RELEASE GRPH SYM SET\nQQFSQDEV EQU   X'0C040500'       QUERY DEVICE\nQQFSQURY EQU   X'0C040501'       EXTENDED QUERY DEVICE\nQQFSQUPG EQU   X'0C040900'       QUERY UNIQUE PAGE ID\nQQSSREAD EQU   X'0C040B00'       READ SYMBOL SET\nQQSSWRT  EQU   X'0C040B01'       WRITE SYMBOL SET\nQQFSPWIN EQU   X'0C040C00'       PAGE WINDOW\nQQFSQWIN EQU   X'0C040C01'       PAGE WINDOW QUERY\nQQGSCPG  EQU   X'0C040D00'       SET CURRENT CODE PAGE\nQQGSQCPG EQU   X'0C040D01'       QUERY CODE PAGE\nQQFSENAB EQU   X'0C040E00'       ENABLE DEVICE INPUT\n* GROUP - ADMMCQDA\nQQFSALRM EQU   X'0C080000'       SOUND ALARM\nQQASFCUR EQU   X'0C080100'       MOVE CURSOR\nQQASDFLT EQU   X'0C080200'       SET DEFAULT FLD ATTRS\nQQASDTRN EQU   X'0C080300'       DEFINE XLATE TABLE\nQQASFCLR EQU   X'0C080400'       CLEAR ALPHA FIELDS\nQQASFTYP EQU   X'0C080500'       SET FIELD TYPE\nQQASFINT EQU   X'0C080501'       SET FIELD INTENSITY\nQQASFCOL EQU   X'0C080502'       SET FIELD COLOR\nQQASFPSS EQU   X'0C080503'       SET FIELD PRIMARY SS\nQQASFHLT EQU   X'0C080504'       SET FIELD HILITE\nQQASFEND EQU   X'0C080505'       SET END FLD ATTRIBUTE\nQQASFOUT EQU   X'0C080506'       SET FIELD O/P NULLS\nQQASFIN  EQU   X'0C080507'       SET FIELD I/P BLANKS\nQQASFTRN EQU   X'0C080508'       SET FLD XLATE TABLE\nQQASFTRA EQU   X'0C080509'       SET FIELD TRANSPARENCY\nQQASFSEN EQU   X'0C08050A'       SET SO/SI ENABLEMENT\nQQASFBDY EQU   X'0C08050B'       SET FIELD OUTLINING\nQQASCHLT EQU   X'0C080600'       SET CHARACTER HILITES\nQQASCCOL EQU   X'0C080601'       SET CHARACTER COLORS\nQQASCSS  EQU   X'0C080602'       SET CHAR SYMBOL SETS\nQQASCPUT EQU   X'0C080603'       SET CHARACTER CODES\nQQASDFLD EQU   X'0C080700'       DEFINE ALPHA FIELD\nQQASRFMT EQU   X'0C080800'       REDEFINE ALPHA FIELDS\nQQASDFMT EQU   X'0C080801'       DEFINE ALPHA FIELDS\nQQASRATT EQU   X'0C080802'       REDEFINE FIELD ATTR.S\nQQASQHLT EQU   X'0C080900'       QUERY CHAR HILITES\nQQASQCOL EQU   X'0C080901'       QUERY CHARACTER COLORS\nQQASQSS  EQU   X'0C080902'       QUERY CHAR SYMBOL SETS\nQQASCGET EQU   X'0C080903'       QUERY CHARACTER CODES\nQQASQFLD EQU   X'0C080A00'       QUERY FIELD ATTRIBUTES\nQQASQMOD EQU   X'0C080B00'       QUERY MODIFIED FIELDS\nQQFSREST EQU   X'0C080C00'       RESTORE SCREEN\nQQDSCMF  EQU   X'0C080C01'       USER CONTROL FUNCTION\nQQDSQCMF EQU   X'0C080C02'       QUERY USER CONTROL FTN\nQQASMODE EQU   X'0C080D00'       SET REPLY MODE\nQQASQMAX EQU   X'0C080E00'       QUERY NO. OF FIELDS\nQQASQNMF EQU   X'0C080E01'       QUERY NO. MOD. FIELDS\nQQASQCUR EQU   X'0C080F00'       QUERY CURSOR\nQQASFMOD EQU   X'0C081100'       MODIFY FIELD\nQQASTYPE EQU   X'0C081300'       SET TERMINAL TYPE\nQQASGPUT EQU   X'0C081503'       SET DUAL-CHARACTERS\nQQASGGET EQU   X'0C081603'       QUERY DUAL-CHARACTERS\nQQASQLEN EQU   X'0C081800'       QUERY FIELD LENGTH\n* GROUP - ADMMCQDG\nQQGSFLD  EQU   X'0C0C0000'       GRAPHICS FIELD\nQQGSPS   EQU   X'0C0C0001'       PICTURE SPACE\nQQGSWIN  EQU   X'0C0C0002'       SPECIFY WINDOW\nQQGSVIEW EQU   X'0C0C0003'       SPECIFY VIEWPORT\nQQGSQPS  EQU   X'0C0C0004'       QUERY PICTURE SPACE\nQQGSQVIE EQU   X'0C0C0005'       QUERY VIEWPORT\nQQGSQWIN EQU   X'0C0C0006'       QUERY WINDOW\nQQGSUWIN EQU   X'0C0C0007'       DEFINE UNIFORM WINDOW\nQQGSQFLD EQU   X'0C0C000A'       QUERY GRAPHICS FIELD\nQQGSARCC EQU   X'0C0C000B'       ASPECT RATIO CONTROL\nQQGSBND  EQU   X'0C0C000D'       SPECIFY DATA BOUNDARY\nQQGSQBND EQU   X'0C0C000E'       QUERY DATA BOUNDARY\nQQGSQMAX EQU   X'0C0C0100'       QUERY SEGMENT RANGE\nQQGSQCUR EQU   X'0C0C0101'       QUERY CURSOR\nQQGSQSSD EQU   X'0C0C0102'       QUERY SYMBOL SET DATA\nQQGSQCEL EQU   X'0C0C0202'       QUERY CELL SIZE\nQQGSCLP  EQU   X'0C0C0203'       SPECIFY CLIPPING\nQQGSQCLP EQU   X'0C0C0204'       QUERY CLIPPING\nQQGSSEG  EQU   X'0C0C0300'       CREATE SEGMENT\nQQGSSCLS EQU   X'0C0C0301'       CLOSE SEGMENT\nQQGSSDEL EQU   X'0C0C0302'       DELETE SEGMENT\nQQGSCLR  EQU   X'0C0C0303'       CLEAR GRAPHICS FIELD\nQQGSSATI EQU   X'0C0C0309'       SET INITIAL ATTRIBUTES\nQQGSQATI EQU   X'0C0C030A'       QUERY INITIAL ATTS\nQQGSSATS EQU   X'0C0C030B'       SET SEGMENT ATTRIBUTES\nQQGSQATS EQU   X'0C0C030C'       QUERY SEGMENT ATTS\nQQGSSPOS EQU   X'0C0C030D'       SET SEGMENT POSITION\nQQGSQPOS EQU   X'0C0C030E'       QUERY SEGMENT POSITION\nQQGSSORG EQU   X'0C0C0311'       SET SEGMENT ORIGIN\nQQGSSPRI EQU   X'0C0C0312'       SET SEGMENT PRIORITY\nQQGSQPRI EQU   X'0C0C0313'       QUERY SEGMENT PRIORITY\nQQGSQORG EQU   X'0C0C0316'       QUERY SEGMENT ORIGIN\nQQGSMOVE EQU   X'0C0C0400'       MOVE TO\nQQGSLINE EQU   X'0C0C0401'       LINE TO\nQQGSPLNE EQU   X'0C0C0402'       POLYLINE TO\nQQGSMARK EQU   X'0C0C0406'       MARKER AT\nQQGSMRKS EQU   X'0C0C0407'       POLY MARKER AT\nQQGSAREA EQU   X'0C0C0408'       BEGIN AREA\nQQGSENDA EQU   X'0C0C0409'       END AREA\nQQGSVECM EQU   X'0C0C040A'       VECTOR\nQQGSCHAR EQU   X'0C0C0500'       CHARACTER STRING AT\nQQGSCHAP EQU   X'0C0C0501'       CHARACTER STRING\nQQGSQTB  EQU   X'0C0C0502'       QUERY THE TEXT BOX\nQQGSARC  EQU   X'0C0C0600'       ARC\nQQGSELPS EQU   X'0C0C0601'       ELLIPSE\nQQGSPFLT EQU   X'0C0C0602'       FILLET\nQQGSQCP  EQU   X'0C0C0700'       QUERY CURRENT POSN\nQQGSCOL  EQU   X'0C0C0701'       SET COLOR\nQQGSMIX  EQU   X'0C0C0702'       SET MIX MODE\nQQGSLT   EQU   X'0C0C0703'       SET LINE TYPE\nQQGSLW   EQU   X'0C0C0704'       SET LINE WIDTH\nQQGSCM   EQU   X'0C0C0705'       SET CHARACTER MODE\nQQGSCS   EQU   X'0C0C0706'       SET CHARACTER SET\nQQGSCB   EQU   X'0C0C0707'       SET CHARACTER BOX\nQQGSCA   EQU   X'0C0C0708'       SET CHARACTER ANGLE\nQQGSCD   EQU   X'0C0C0709'       SET CHARACTER DIRCTN\nQQGSPAT  EQU   X'0C0C070A'       SET PATTERN\nQQGSMS   EQU   X'0C0C070B'       SET MARKER SYMBOL\nQQGSCH   EQU   X'0C0C070C'       SET CHARACTER SHEAR\nQQGSFLW  EQU   X'0C0C070E'       SET FRACTIONAL WIDTH\nQQGSQFLW EQU   X'0C0C070F'       QUERY FRACTIONAL WIDTH\nQQGSQCOL EQU   X'0C0C0711'       QUERY COLOR\nQQGSQMIX EQU   X'0C0C0712'       QUERY MIX MODE\nQQGSQLT  EQU   X'0C0C0713'       QUERY LINE TYPE\nQQGSQLW  EQU   X'0C0C0714'       QUERY LINE WIDTH\nQQGSQCM  EQU   X'0C0C0715'       QUERY CHARACTER MODE\nQQGSQCS  EQU   X'0C0C0716'       QUERY CHARACTER SET\nQQGSQCB  EQU   X'0C0C0717'       QUERY CHARACTER BOX\nQQGSQCA  EQU   X'0C0C0718'       QUERY CHARACTER ANG\nQQGSQCD  EQU   X'0C0C0719'       QUERY CHARACTER DIRN\nQQGSQPAT EQU   X'0C0C071A'       QUERY PATTERN\nQQGSQMS  EQU   X'0C0C071B'       QUERY MARKER SYMBOL\nQQGSQCH  EQU   X'0C0C071C'       QUERY CHARACTER SHEAR\nQQGSMSC  EQU   X'0C0C071D'       SET MARKER SCALE\nQQGSQMSC EQU   X'0C0C071E'       QUERY MARKER SCALE\nQQGSPUT  EQU   X'0C0C0900'       INCLUDE GDF\nQQGSIMG  EQU   X'0C0C0A00'       LIMITED IMAGE\nQQGSIMGS EQU   X'0C0C0A04'       LIMITED IMAGE (SCALED)\nQQGSGETS EQU   X'0C0C0B00'       RETRIEVE GDF\nQQGSGETE EQU   X'0C0C0B01'       END GDF RETRIEVAL\nQQGSGET  EQU   X'0C0C0B02'       GET GDF BUFFER\nQQGSILOC EQU   X'0C0C0C00'       INITIALIZE LOCATOR\nQQGSIPIK EQU   X'0C0C0C01'       INITIALIZE PICK DEVICE\nQQGSIDVI EQU   X'0C0C0C04'       INITIALIZE DATA VALUE\nQQGSIDVF EQU   X'0C0C0C05'       INITIALIZE DATA VALUE\nQQGSISTR EQU   X'0C0C0C06'       INIT. STRING DEVICE\nQQGSISTK EQU   X'0C0C0C07'       INIT. STROKE DEVICE\nQQGSQLID EQU   X'0C0C0C09'       QUERY INPUT DEVICE\nQQGSENAB EQU   X'0C0C0D00'       ENABLE INPUT DEVICE\nQQGSFLSH EQU   X'0C0C0E00'       FLUSH INPUT QUEUE\nQQGSQSIM EQU   X'0C0C0E01'       QUERY INPUT QUEUE\nQQGSQCHO EQU   X'0C0C0F00'       QUERY CHOICE DATA\nQQGSQLOC EQU   X'0C0C0F01'       QUERY LOCATOR DATA\nQQGSQPIK EQU   X'0C0C0F02'       QUERY PICK DATA\nQQGSQSTR EQU   X'0C0C0F03'       QUERY STRING DATA\nQQGSQSTK EQU   X'0C0C0F04'       QUERY STROKE DATA\nQQGSQPKS EQU   X'0C0C0F05'       QUERY PICK STRUCTURE\nQQGSTAG  EQU   X'0C0C1000'       SET THE CURRENT TAG\nQQGSQTAG EQU   X'0C0C1001'       QUERY THE CURRENT TAG\nQQGSSAGA EQU   X'0C0C1102'       SET GEOM ATTRIBUTES\nQQGSSTFM EQU   X'0C0C1103'       SET SEGMENT TRANSFORM\nQQGSQAGA EQU   X'0C0C1104'       QUERY GEOM ATTRIBUTES\nQQGSQTFM EQU   X'0C0C1105'       QUERY SEGMENT TRANSFM\nQQGSSCT  EQU   X'0C0C1107'       SET CURRENT TRANSFORM\nQQGSSAVE EQU   X'0C0C1200'       SAVE SEGMENT\nQQGSLOAD EQU   X'0C0C1201'       LOAD SEGMENT\nQQGSMB   EQU   X'0C0C1307'       SET MARKER BOX\nQQGSQMB  EQU   X'0C0C1308'       QUERY MARKER BOX\nQQGSTA   EQU   X'0C0C130D'       SET TEXT ALIGNMENT\nQQGSQTA  EQU   X'0C0C130E'       QUERY TEXT ALIGNMENT\nQQGSCBS  EQU   X'0C0C130F'       SET CHARACTER SPACING\nQQGSQCBS EQU   X'0C0C1310'       QUERY CHARACTER SPACIN\nQQGSAM   EQU   X'0C0C1311'       SET ATTRIBUTE MODE\nQQGSQAM  EQU   X'0C0C1312'       QUERY ATTRIBUTE MODE\nQQGSPOP  EQU   X'0C0C1313'       RESTORE ATTRIBUTES\nQQGSSVL  EQU   X'0C0C1314'       SET SEGMENT VIEW LIMIT\nQQGSQSVL EQU   X'0C0C1315'       QUERY SEG VIEW LIMITS\nQQGSQBMX EQU   X'0C0C1316'       QUERY BACKGROUND MIX\nQQGSBMIX EQU   X'0C0C1317'       SET BACKGROUND MIX\nQQGSCP   EQU   X'0C0C1319'       SET CURRENT POSITION\nQQGSSCPY EQU   X'0C0C1400'       COPY SEGMENT\nQQGSSINC EQU   X'0C0C1401'       INCLUDE SEGMENT\nQQGSCALL EQU   X'0C0C1402'       CALL A SEGMENT\nQQGSCORR EQU   X'0C0C1500'       EXPLICIT CORRELATE\nQQGSCORS EQU   X'0C0C1501'       STRUCTURE CORRELATION\nQQGSDEFS EQU   X'0C0C1900'       START DRAWING DEFAULTS\nQQGSDEFE EQU   X'0C0C1901'       END DRAWING DEFAULTS\nQQFSUPDM EQU   X'0C0C1A00'       SET UPDATE MODE\nQQFSQUPD EQU   X'0C0C1A01'       QUERY UPDATE MODE\nQQGSSEN  EQU   X'0C0C1B00'       SET MIXED STRING MODE\nQQGSQSEN EQU   X'0C0C1B01'       QUERY MIX STRING MODE\nQQCGLOAD EQU   X'0C0C1F00'       LOAD CGM\nQQCGSAVE EQU   X'0C0C2000'       SAVE CGM\n* GROUP - ADMMCQDD\nQQASREAD EQU   X'0C100000'       READ\nQQFSFRCE EQU   X'0C100001'       FORCE OUTPUT\nQQFSCHEK EQU   X'0C100002'       PREPARE PS FOR OUTPUT\nQQGSREAD EQU   X'0C100003'       AWAIT GRAPHICS INPUT\nQQFSSAVE EQU   X'0C100004'       SAVE SCREEN\nQQFSSHOW EQU   X'0C100005'       SHOW SCREEN\nQQFSSHOR EQU   X'0C100007'       SHOW WITH REPLY\nQQWSIO   EQU   X'0C100008'       WINDOWED DEVICE I/O\nQQFSGETS EQU   X'0C100009'       FAM-4 BUFFER START\nQQFSGET  EQU   X'0C10000A'       FAM-4 OUTPUT TO BUFFER\nQQFSGETE EQU   X'0C10000B'       FSGET TERMINATE\nQQDSFRCE EQU   X'0C10000C'       FAM-4 MEMBER TO PDS\n* GROUP - ADMMCQDO\nQQFSOPEN EQU   X'0C180000'       OPEN PRINTER DESTINTN\nQQFSCOPY EQU   X'0C180001'       PAGE COPY\nQQGSCOPY EQU   X'0C180002'       GRAPHICS COPY\nQQFSLOG  EQU   X'0C180003'       LINE-BY-LINE OUTPUT\nQQFSCLS  EQU   X'0C180004'       CLOSE PRINTER DESTINTN\nQQFSLOGC EQU   X'0C180005'       LINE-BY-LINE O/P + CC\nQQDSCOPY EQU   X'0C180008'       DEVICE COPY\n* GROUP - ADMMCQDB\nQQPTSCRT EQU   X'0C200000'       CREATE PTN SET.\nQQPTSQRY EQU   X'0C200001'       QUERY PTN SET.\nQQPTSSEL EQU   X'0C200100'       SELECT PTN SET.\nQQPTSDEL EQU   X'0C200101'       DELETE PTN SET.\nQQPTSQUN EQU   X'0C200102'       Q. UNIQUE PTN SET ID.\nQQPTSSPP EQU   X'0C200300'       SET PARTN. PRIORITIES\nQQPTSQPP EQU   X'0C200301'       QUERY PTN PRIORITIES\nQQPTSQPI EQU   X'0C200400'       QUERY PARTITION IDS\nQQPTSQPN EQU   X'0C200401'       QUERY PARTITION NOS\n* GROUP - ADMMCQDE\nQQPTNCRT EQU   X'0C240000'       CREATE PARTITION.\nQQPTNQRY EQU   X'0C240001'       QUERY PARTITION.\nQQPTNMOD EQU   X'0C240002'       MODIFY PARTITION.\nQQPTNSEL EQU   X'0C240100'       SELECT PARTITION.\nQQPTNDEL EQU   X'0C240101'       DELETE PARTITION.\nQQPTNQUN EQU   X'0C240102'       Q. UNIQUE PTN ID.\n* GROUP - ADMMCQDM\nQQMSREAD EQU   X'0C280000'       READ WITH MAP\nQQMSPCRT EQU   X'0C280100'       CREATE MAPPED PAGE\nQQMSQGRP EQU   X'0C280300'       QUERY ABOUT A GROUP\nQQMSQMAP EQU   X'0C280301'       QUERY ABOUT A MAP\nQQMSQADS EQU   X'0C280302'       QUERY ABOUT AN ADS\nQQMSQFIT EQU   X'0C280303'       QUERY WHETHER MAP FITS\nQQMSQMOD EQU   X'0C280400'       QUERY MODIFIED M-FLDS\nQQMSDFLD EQU   X'0C280500'       DEFINE MAPPED-FIELD\nQQMSPUT  EQU   X'0C280501'       PUT MAPPED-FIELD DATA\nQQMSGET  EQU   X'0C280502'       GET MAPPED-FIELD DATA\nQQMSQFLD EQU   X'0C280503'       QUERY MAPPED-FIELD\nQQMSCPOS EQU   X'0C280600'       SET CURSOR POSITION\nQQMSQPOS EQU   X'0C280601'       QUERY CURSOR POSITION\n* GROUP - ADMMCQDN\nQQWSCRT  EQU   X'0C2C0000'       CREATE OPERATOR WINDOW\nQQWSDEL  EQU   X'0C2C0100'       DELETE OPERATOR WINDOW\nQQWSMOD  EQU   X'0C2C0200'       MODIFY OPERATOR WINDOW\nQQWSQRY  EQU   X'0C2C0300'       QUERY OPERATOR WINDOW\nQQWSQUN  EQU   X'0C2C0400'       QUERY OP WINDOW ID\nQQWSQWI  EQU   X'0C2C0500'       QUERY OP WINDOW IDS\nQQWSQWN  EQU   X'0C2C0600'       QUERY OP WINDOW NOS\nQQWSQWP  EQU   X'0C2C0700'       QUERY WIN PRIORITIES\nQQWSSEL  EQU   X'0C2C0800'       SELECT OPERATOR WINDOW\nQQWSSWP  EQU   X'0C2C0900'       SET WINDOW PRIORITIES\n* GROUP - ADMMCQD3\nQQISFLD  EQU   X'0C300000'       DEFINE IMAGE FIELD\nQQISQFLD EQU   X'0C300001'       QUERY IMAGE FIELD\nQQISCTL  EQU   X'0C300002'       SET IMAGE QUALITY CTRL\nQQISXCTL EQU   X'0C300003'       EXT IMAGE QUALITY CTRL\nQQISESCA EQU   X'0C300B00'       ECHO SCANNER\nQQISLDE  EQU   X'0C300C00'       LOAD EXT. R/O IMAGE\nQQISQSCA EQU   X'0C300D00'       QRY IMAGE SCANNER DEV.\nQQISQRES EQU   X'0C300E00'       QRY SUPPORTED RES\nQQISENAB EQU   X'0C301200'       IMAGE CSR ENAB/DISAB\nQQISQLOC EQU   X'0C301300'       QRY IMAGE LOCATOR CSR\nQQISILOC EQU   X'0C301400'       IMAGE LOC. CSR. INIT\nQQISQBOX EQU   X'0C301500'       IMAGE BOX CSR. QUERY\nQQISIBOX EQU   X'0C301600'       IMAGE BOX CSR. INIT\nQQISQFOR EQU   X'0C301700'       QUERY IMAGE FORMATS\nQQISQCOM EQU   X'0C301800'       QUERY IMAGE COMPRESSNS\n* GROUP - ADMMCQDQ\nQQAPDEF  EQU   X'0C380000'       DEFINE FIELD LIST\nQQAPDEL  EQU   X'0C380100'       DELETE FIELD LIST\nQQAPMOD  EQU   X'0C380200'       MODIFY FIELD LIST\nQQAPQIDS EQU   X'0C380300'       QUERY FIELD LIST IDS\nQQAPQNUM EQU   X'0C380400'       QUERY FIELD LIST NOS\nQQAPQRY  EQU   X'0C380500'       QUERY FIELD LIST\nQQAPQSIZ EQU   X'0C380600'       QUERY FIELD LIST SIZE\nQQAPQUID EQU   X'0C380700'       QUERY UNIQUE FL ID\n* GROUP - ADMMCQB\nQQCHLC   EQU   X'10020307'       LINE COLORS\n* GROUP - ADMMCQIS\nQQISSE   EQU   X'18000000'       INVOKE SYMBOL EDITOR\n* GROUP - ADMMCQ3I\nQQIMACRT EQU   X'3C010001'       CREATE AN IMAGE\nQQIMAGID EQU   X'3C010002'       GET UNIQUE IMAGE ID\nQQIMAQRY EQU   X'3C010004'       QUERY IMAGE ATTRIBUTES\nQQIMARES EQU   X'3C010006'       CONVERT RESOLUTION\nQQIMADEL EQU   X'3C010007'       DELETE SPECIFIED IMAGE\nQQIMACLR EQU   X'3C010008'       CLEAR IMAGE RECTANGLE\nQQIMATRM EQU   X'3C010009'       TRIM IMAGE TO RECTANGL\nQQIMASAV EQU   X'3C01000A'       SAVE IMAGE IN LIBRARY\nQQIMARST EQU   X'3C01000B'       RESTORE IMAGE\nQQIMARF  EQU   X'3C01000C'       CHANGE RESOLUTION FLAG\nQQIMAPTS EQU   X'3C010011'       START DATA ENTRY\nQQIMAPT  EQU   X'3C010012'       ENTER DATA IN IMAGE\nQQIMAPTE EQU   X'3C010013'       END DATA ENTRY\nQQIMAGTS EQU   X'3C010014'       START DATA RETRIEVAL\nQQIMAGT  EQU   X'3C010015'       GET IMAGE DATA\nQQIMAGTE EQU   X'3C010016'       END DATA RETRIEVAL\nQQIMXFER EQU   X'3C010017'       IMAGE DATA TRANSFER\n* GROUP - ADMMCQ3P\nQQIMPGID EQU   X'3C030001'       GET UNIQUE PROJ ID\nQQIMPCRT EQU   X'3C030003'       CREATE A PROJECTION\nQQIMPDEL EQU   X'3C030004'       DELETE SPECIFIED PROJ\nQQIMPSAV EQU   X'3C030005'       SAVE IMAGE PROJECTION\nQQIMPRST EQU   X'3C030006'       RESTORE PROJECTION\nQQIMREX  EQU   X'3C030101'       DEFINE IMAGE RECTANGLE\nQQIMREXR EQU   X'3C030102'       DEFINE IMAGE RECTANGLE\nQQIMRPL  EQU   X'3C030103'       DEFINE PLACE POSITION\nQQIMRSCL EQU   X'3C030105'       SCALE IMAGE RECTANGLE\nQQIMRRAL EQU   X'3C030106'       SET SCALING ALGORITHM\nQQIMRORN EQU   X'3C030107'       ORIENTATE SUB-IMAGE\nQQIMRREF EQU   X'3C030108'       REFLRCT SUB-IMAGE\nQQIMRNEG EQU   X'3C030109'       NEGATE IMAGE PIXELS\nQQIMRCVB EQU   X'3C030201'       BI-LEVEL CONVERSION\nQQIMRBRI EQU   X'3C030202'       BRIGHTNESS CONVERSION\nQQIMRCON EQU   X'3C030203'       CONTRAST CONVERSION\nQQIMRPLR EQU   X'3C030204'       DEFINE PLACE POSITION\n* GROUP - ADMMCQ4\nQQCDPU   EQU   X'40000000'       COMP DOC PRINT UTIL\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY     DSECT\n          GEN  DAPL,SEQDCB,PDSDCB,GM\n* ------------------------------------------------------------------- *\n          COMMON\n          COPY TRENTRY\n          COPY X3270\n          DCBD DSORG=PS\n          COPY REGEQU\n          END  OSGDDM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSHDIR": {"ttr": 20231, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x006\\x01\\t(o\\x01\\x10\\x04\\x1f\\x11\"\\x085\\x084\\x00\\x16\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-02-10T11:22:36", "lines": 2101, "newlines": 2100, "modlines": 22, "user": "RLRICE"}, "text": "         MACRO\n         FDEF  &F,&D,&T\n         DC    AL2(&F-STAT)\n         DC    CL12&D\n         DC    CL1'&T'\n         MEND\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSHDIR                                                *\n*                                                                     *\n*  Build main body for HFS directories                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHDIR   CSECT\nOSHDIR   AMODE 31\nOSHDIR   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSHDIR,R15\n         B     INIT0000\nMODID    DC    CL8'OSHDIR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSHDIREND-OSHDIR)\nINIT0000 DS    0H\n         USING OSCOMM,R12                       COMMON AREA BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         LA    R9,2048(,R10)                    SET 2ND BASE REGISTER\n         LA    R9,2048(,R9)                     ..........\n         LA    R6,2048(,R9)                     SET 3RD BASE REGISTER\n         LA    R6,2048(,R6)                     ..........\n         DROP  R15\n         USING OSHDIR,R10,R9,R6                 DEFINE BASE\n         L     R4,COMM_OSSPFD                   SPF DATA\n         USING OSSPFD,R4                        DEFINE BASE\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         BNZ   ERR0010\n         LA    R0,OSHDIR_DXD_L\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=OSHDIR_DXD_L,                                        +\n               LOC=BELOW\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSHDIR_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         ST    R13,4(,R2)                       SAVE R13\n         ST    R2,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R2                           COPY WORK AREA ADDRESS\n         USING OSHDIR_WORK,R13                  DEFINE WORK AREA BASE\n         USING S_MODE,ST_MODE                   DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         LA    R0,DXD_RECORD\n         ST    R0,DSPCREQ_RECORD_ADDR\n         ITRACE ID=I_O_AREA,                                           +\n               RDATA1=R1\n         MVC   DXD_OPEN(OPEN_L),OPEN_I\n         MVC   DXD_CLOSE(CLOSE_L),CLOSE_I\n         MVC   SESS_DISP_PANEL,HDIR_PANEL       SET PANEL NAME\n         LA    R1,SESS_DISP_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA1_LENGTH             SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA1_ADDR               SAVE VDATA ADDR\n         ITRACE ID=VDATA1,                                             +\n               DATA1=(DXD_VDATA1_ADDR,4),                              +\n               DATA2=(DXD_VDATA1_LENGTH,4)\n         LA    R1,SESS_DISP_PANEL\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA2_LENGTH             SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA2_ADDR               SAVE VDATA ADDR\n         ITRACE ID=VDATA2,                                             +\n               DATA1=(DXD_VDATA2_ADDR,4),                              +\n               DATA2=(DXD_VDATA2_LENGTH,4)\n         MVC   DXD_VWIDTH,SPF_VWIDTH            SAVE WIDTH\n         MVC   DXD_VDEPTH,SPF_VDEPTH            SAVE DEPTH\n         XC    DXD_CURSOR,DXD_CURSOR\n         B     EXIT0000\nINIT0010 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0070\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2,                                             +\n               DATA1=(SESS_FORMAT_FLAGS,1),                            +\n               DATA2=(COMM_SESS_FUNC,1)\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH      SESSION SWITCH?\n         BNE   MAIN0000                         NO\n         TM    DXD_FLAGS,$DXD_INIT              INIT FLAG ON?\n         BNO   MAIN0000                         NO\n         L     R7,DXD_LINES_REMAINING           RESTORE LINES REMAINING\n         L     R8,DXD_CURRENT_VDATA             RESTORE VDATA ADDR\n         ITRACE ID=RESUME,                                             +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         LTR   R7,R7                            RESUMING LINE COMMAND?\n         BZ    MAIN0120                         NO\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*          (re)build display                                          *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         OI    DXD_FLAGS,$DXD_INIT              SET INIT FLAG\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         L     R0,DXD_VDATA1_ADDR\n         L     R1,DXD_VDATA1_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE BUFFER\n         XC    DXD_LINES,DXD_LINES              LINES BUILT\n         L     R7,DXD_VDEPTH                    LINES AVAILABLE\n         L     R8,DXD_VDATA1_ADDR               BUFFER ADDRESS\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" data and build body of SPF panel                  *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BH    MAIN0120                         END OF RECORDS REACHED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DSPCREQ_RECORD_ADDR,4)\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO.. DATASPACE ERROR\n         MVC   0(MSG01_L,R8),MSG01              INITIALIZE MESSAGE\n         USING MSG01,R8\n         CLI   DXD_STAT_STATUS,$STATUS_ERROR    BPXYSTAT INFO GOOD?\n         BE    MAIN0040                         NO\n         TM    DXD_STAT_STATUS,$STATUS_DELETED  DELETED?\n         BO    MAIN0030                         YES\n         BAL   R5,MODE0000                      PROCESS MODE\n         MVC   MSG01_ATTR2,DXD_ATTR             COPY ATTRIBUTE\n         MVC   MSG01_MODE,DXD_MODE              COPY MODE INFO\n         LA    R2,ST_UID                        ADDRESS OF UID\n         BAL   R5,UID0000                       PROCESS UID\n         MVC   MSG01_USER,DXD_UID+11            COPY CONVERTED UID\n         LA    R2,ST_GID                        ADDRESS OF GID\n         BAL   R5,GID0000                       PROCESS GID\n         MVC   MSG01_GROUP,DXD_GID+11           COPY CONVERTED GID\n         B     MAIN0050\nMAIN0030 DS    0H\n         MVC   MSG01_MODE,DELETED               FILE/DIRECTORY DELETED\n         MVI   MSG01_ATTR1,$SCREEN_ATTR_NORMAL  DON'T ALLOW SELECT\n         B     MAIN0050\nMAIN0040 DS    0H\n         MVI   MSG01_ATTR1,$SCREEN_ATTR_NORMAL  DON'T ALLOW SELECT\n         MVC   MSG01_MODE,UNKNOWN               INFO NOT AVAILABLE\nMAIN0050 DS    0H\n         MVI   MSG01_ATTR3,$SCREEN_ATTR_NORMAL  DEFAULT TO NORMAL\n         TM    DXD_STAT_STATUS,$STATUS_TAGGED   TAGGED MEMBER?\n         BNO   MAIN0060                         NO\n         MVI   MSG01_ATTR3,$SCREEN_ATTR_HIGH    SET ATTRIBUTE\nMAIN0060 DS    0H\n         L     R1,ST_SIZE_L                     LOWER WORD OF LENGTH\n         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         ED    MSG01_NAME_LENGTH,COMM_DWORD+3   EDIT LENGTH\n         LH    R1,DXD_NAME_LENGTH               NAME LENGTH\n         CH    R1,=Y(L'MSG01_NAME)              TOO LONG?\n         BNH   MAIN0070                         NO\n         LH    R1,=Y(L'MSG01_NAME)              LIMIT LENGTH\nMAIN0070 DS    0H\n         BCTR  R1,0                             FOR EXECUTE\n         EX    R1,NAME_MVC1                     COPY NAME\n         CLC   DXD_NAME+(L'MSG01_NAME)(L'DXD_NAME-L'MSG01_NAME),COMM_BL+\n               ANKS\n         BE    MAIN0080                         ALL BLANK\n         MVI   MSG01_NAME+(L'MSG01_NAME-1),C'+'\nMAIN0080 DS    0H\n         LTR   R1,R1                            LENGTH ZERO (1 REALLY)?\n         BNZ   MAIN0090                         NO\n         CLI   DXD_NAME,C'.'                    CURRENT DIRECTORY?\n         BNE   MAIN0100                         NO\n         MVI   MSG01_ATTR1,$SCREEN_ATTR_NORMAL SET ATTRIBUTE\n         B     MAIN0100\nMAIN0090 DS    0H\n         CH    R1,H1                            LENGTH 1 (TWO REALLY)?\n         BH    MAIN0100                         NO\n         CLC   DOT_DOT,DXD_NAME                 PARENT DIRECTORY?\n         BNE   MAIN0100                         NO\n         MVI   MSG01_ATTR1,$SCREEN_ATTR_NORMAL SET ATTRIBUTE\nMAIN0100 DS    0H\n         LH    R1,DXD_LINES                     LINES BUILT\n         LA    R1,1(,R1)                        PLUS 1\n         STH   R1,DXD_LINES                     SAVE TOTAL\n         A     R8,SPF_VWIDTH                    NEXT LINE\n         BCT   R7,MAIN0110\n         B     MAIN0120                         SCREEN FULL\nMAIN0110 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER\n         LA    R1,1(,R1)                        PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR            UPDATE RECORD NUMBER\n         B     MAIN0020\n         USING MSG01,R8\nNAME_MVC1 MVC   MSG01_NAME(0),DXD_NAME\n         DROP  R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Detail info has been built.                                  *\n*        Build DSCB info                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         ITRACE ID=OSDSCB\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         L     R15,COMM_V_OSDSCB                OSDSCB ENTRY POINT\n         BALR  R14,R15                          FORMAT THE DSCB INFO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Data has been built.                                         *\n*        Display the panel.                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=DISPLAY1\n         MVC   SESS_DISP_PANEL,HDIR_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA1_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA1_LENGTH\n         MVC   SESS_DISP_CURSOR,DXD_CURSOR\n         OI    COMM_FLAGS,$COMM_NO_UPPER        DON'T TRANSLATE\n         NI    DXD_FLAGS,255-$CONFIRM_ALL       RESET CONFIRM ALL\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                          LINK TO OSDISP\n         NI    COMM_FLAGS,255-$COMM_NO_UPPER    RESET INDICATOR\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(COMM_SESS_FUNC,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   SESS0000                         YES\n         OC    SESS_RC,SESS_RC                  RC ZERO?\n         BZ    MAIN0140                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Process any line command(s)                                  *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         NI    DXD_FLAGS,255-$LINE_CMD          RESET INDICATOR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LH    R7,DXD_LINES                     LINES OF DISPLAY BUILT\n         L     R8,DXD_VDATA1_ADDR               SPF DISPLAY BUFFER\n         ITRACE ID=CMDS,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         LA    R1,MSG01_SELECTION-MSG01+1\n         ST    R1,DXD_CURSOR\nMAIN0150 DS    0H\n         USING MSG01,R8\n         OI    MSG01_SELECTION,C' '             'TRANSLATE'\n         CLI   MSG01_SELECTION,C' '             BLANK?\n         BE    MAIN0170                         YES\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R1,MSG01_SELECTION               COMMAND ADDRESS\n         ST    R1,SESS_COMMAND_ADDRESS          SET ADDRESS\n         MVC   SESS_COMMAND_LENGTH,H1           SET LENGTH\n         LA    R0,LINE_COMMANDS                 LIST OF COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD                 OSCMD ENTRY POINT\n         BALR  R14,R15                          SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                              BRANCH TO COMMAND\n         DROP  R8\n         MVC   COMM_INFO_01(1),MSG01_SELECTION\n         MVI   COMM_MSG_ID+1,1                  SET MESSAGE ID\n         B     ERR1000\nMAIN0160 DS    0H\n         OI    DXD_FLAGS,$LINE_CMD              LINE CMD WAS FOUND\nMAIN0170 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            RECORD NUMBER\n         A     R1,F1                            PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR            SAVE RECORD NUMBER\nMAIN0180 DS    0H\n         L     R1,DXD_CURSOR                    CURRENT CURSOR POSITION\n         A     R1,DXD_VWIDTH                    PLUS WIDTH\n         ST    R1,DXD_CURSOR                    UPDATE CURSOR POSITION\n         A     R8,DXD_VWIDTH                    NEXT LINE\n         BCT   R7,MAIN0150                      LOOP\n         XC    DXD_CURSOR,DXD_CURSOR            CLEAR CURSOR POSITION\n         TM    DXD_FLAGS,$LINE_CMD              LINE COMMAND FOUND?\n         BO    MAIN0000                         YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       No line command(s) were found.                                *\n*                                                                     *\n*       Process any primary command.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?\n         BE    MAIN0210                         YES\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         SR    R3,R3\n         ICM   R3,3,COMM_OPERANDS_NBR\n         BZ    MAIN0210                         NO OPERANDS\n         CH    R3,H1                            MORE THAN ONE OPERAND?\n         BH    MAIN0190                         YES.. NOT A NEW PATH\n         CLI   SPF_ZCMD,C'/'                    A NEW PATH?\n         BE    MAIN1200                         YES\nMAIN0190 DS    0H\n         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS\n         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R0,PRIMARY_COMMANDS              COMMAND TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD                 OSCMD ENTRY POINT\n         BALR  R14,R15                          SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15\n         B     ERR0030                          COMMAND NOT FOUND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=REFRESH\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR       DATA SPACE FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           CLEAR DATA SPACE\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSHFSDIR    MODULE NAME\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSHFSDIR\n         ICM   R15,15,LOADREQ_EP                 OSHFSDIR ENTRY POINT\n         BALR  R14,R15                           LINK TO OSHFSDIR\n         ITRACE ID=HFSDIRRC,                                           +\n               RDATA1=R15\n         CLC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         BNH   MAIN0000                          DISPLAY\n         B     MAIN0280                          GO TO BOTTOM\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        We have not processed any command.                           *\n*        Check for a scroll command.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0210 DS    0H\n         ICM   R1,15,SPF_ZSCROLLN               LINES TO SCROLL\n         BZ    MAIN0220                         ZERO..\n         BCTR  R1,0                             MINUS 1 (HEADING LINE)\nMAIN0220 DS    0H\n         ST    R1,SESS_VERTICAL_SCROLL\n         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    MAIN0280                         YES\n         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?\n         BE    MAIN0250                         YES\n         CLI   SPF_ZVERB,C'L'                   SCROLL LEFT?\n         BE    MAIN0130                         YES\n         CLI   SPF_ZVERB,C'R'                   SCROLL RIGHT?\n         BE    MAIN0130                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    MAIN0270                         YES\n         CLI   SPF_ZVERB,C'U'                   SCROLL UP?\n         BE    MAIN0230                         YES\n         B     MAIN0130                         DISPLAY SAME DATA AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0230 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0270                         YES\n         L     R1,SESS_VERTICAL_SCROLL          RECORDS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST DISPLAYED\n         SR    R2,R1                            MINUS SCROLL AMOUNT\n         C     R2,DATASPACE_1_FIRST_RECORD      LESS THAN FIRST RECORD?\n         BNL   MAIN0240                         NO\n         L     R2,DATASPACE_1_FIRST_RECORD      LIMIT TO 1ST RECD\nMAIN0240 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0280                         YES\n         L     R1,SESS_VERTICAL_SCROLL          RECORDS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST RCD DISPLAYED\n         AR    R2,R1                            PLUS RECORDS TO SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD       BEYOND END OF DATA?\n         BH    MAIN0260                         YES\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE FIRST RECORD\n         B     MAIN0000                         REBUILD EVERYTHING\nMAIN0260 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   MINUS 1ST ON DISP\n         C     R2,DXD_VDEPTH                    MORE THAN ONE SCREEN?\n         BNH   MAIN0130                         NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED\n         S     R2,DXD_VDEPTH                    MINUS 1 SCREEN\n         A     R2,F2                            PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   SET FIRST TO DISP\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0270 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         XC    SESS_LAST_FOUND,SESS_LAST_FOUND\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0280 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD\n         S     R2,DXD_VDEPTH                    MINUS LINES ON DISPLAY\n         A     R2,F2                            PLUS 2\n         CH    R2,H1                            STILL HAVE AT LEAST 1?\n         BNL   MAIN0290                         YES\n         LH    R2,H1                            FORCE RECORD 1\nMAIN0290 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE FIRST RECORD\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=PRIM_SEL\n         CH    R3,H2                            TWO OPERANDS?\n         BH    ERR0050                          TOO MANY\n         NI    DXD_FLAGS,255-$NEW_FILE          RESET NEW FILE FLAG\n         MVC   DSPCREQ_FILE,COMM_BLANKS\n         ICM   R14,15,OPERAND_02_ADDRESS\n         SR    R15,R15\n         ICM   R15,3,OPERAND_02_LENGTH\n         BCTR  R15,0\n         EX    R15,PATH_MVC1                    COPY FILE NAME\n         ITRACE ID=LOOKUP,                                             +\n               DATA1=(DSPCREQ_FILE+0,8),                               +\n               DATA2=(DSPCREQ_FILE+8,8)\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_FILE_S\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BE    MAIN0310                         YES\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?\n         BNO   ERR0060                          NO.. NOT FOUND\n         OI    DXD_FLAGS,$NEW_FILE              SET FLAG\nMAIN0310 DS    0H\n         ITRACE ID=BLD_NEW\n         GETMAIN RU,                                                   +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         LR    R3,R1                            SAVE ADDRESS\nNEW      USING SESSION,R3\n         ST    R3,COMM_NEW_SESSION\n         LR    R0,R3\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         BZ    MAIN0320                         NO\n         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nMAIN0320 DS    0H\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DSN,COMM_BLANKS\n         MVC   NEW.SESS_MEMBER,COMM_BLANKS\n         MVC   NEW.SESS_PATH,SESS_PATH\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         XC    NEW.DATASPACE_1_ALET,NEW.DATASPACE_1_ALET\n         XC    NEW.DATASPACE_1_TOKEN,NEW.DATASPACE_1_TOKEN\n         MVC   NEW.DATASPACE_1_NAME,COMM_BLANKS\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         L     R0,COMM_IO_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         TM    DXD_FLAGS,$NEW_FILE              NEW FILE?\n         BNO   MAIN0330                         NO\n         OI    NEW.SESS_EDIT_FLAGS,$SESS_EDIT_EMPTY\n         MVC   NEW.SESS_FORMAT,EDIT\n         MVC   NEW.SESS_DEFAULT_FORMAT,EDIT\nMAIN0330 DS    0H\n         LA    R1,NEW.SESS_PATH                 NEW PATH\n         L     R2,SESS_PATH_LENGTH              LENGTH SO FAR\n         ITRACE ID=OLD_PATH,                                           +\n               DATA1=0(R1),                                            +\n               RDATA2=R2\n         AR    R1,R2                            COMPUTE ADDRESS\n         BCTR  R1,0                             .. OF END OF NAME\n         CLI   0(R1),C'/'                       END WITH A SLASH?\n         BE    MAIN0340                         YES\n         LA    R1,1(,R1)                        ACCOUNT FOR SLASH\n         LA    R2,1(,R2)                        ADD 1 TO PREFIX LENGTH\n         MVI   0(R1),C'/'                       INSERT DELIMITING SLASH\nMAIN0340 DS    0H\n         LA    R1,1(,R1)\n         LA    R14,L'NEW.SESS_PATH              LENGTH OF FIELD\n         SR    R14,R2                           MINUS LENGTH OF PREFIX\n         BCTR  R14,0                            MINUS LENGTH OF SLASH\n         CLM   R14,3,OPERAND_02_LENGTH\n         BL    MAIN0350\n         ICM   R14,3,OPERAND_02_LENGTH\nMAIN0350 DS    0H\n         BCTR  R14,0                            FOR EXECUTE\n         ICM   R15,15,OPERAND_02_ADDRESS\n         EX    R14,PATH_MVC2                    COPY NEW\nMAIN0360 DS    0H\n         CLI   0(R1),C' '                       BLANK?\n         BE    MAIN0370\n         LA    R1,1(,R1)\n         LA    R2,1(,R2)\n         B     MAIN0360\nMAIN0370 DS    0H\n         ST    R2,NEW.SESS_PATH_LENGTH\n         ITRACE ID=NEW_PATH,                                           +\n               DATA1=NEW.SESS_PATH,                                    +\n               RDATA2=R2\n         MVI   NEW.SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH\n         B     EXIT0000                         EXIT\nPATH_MVC1  MVC DSPCREQ_FILE(0),0(R14)\nPATH_MVC2  MVC 0(0,R1),0(R15)\n         DROP  NEW\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         USING MSG01,R8\n         ITRACE ID=LINE_SEL,                                           +\n               DATA1=MSG01_NAME+0,                                     +\n               DATA2=MSG01_NAME+8\n         MVC   DXD_SELECTION,MSG01_SELECTION    SAVE SELECTION\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         ITRACE ID=BLD_NEW\n         GETMAIN RU,                                                   +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         LR    R3,R1                            SAVE ADDRESS\nNEW      USING SESSION,R3\n         ST    R3,COMM_NEW_SESSION\n         LR    R0,R3\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         BZ    MAIN0410                         NO\n         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nMAIN0410 DS    0H\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DEFAULT_FORMAT,COMM_BLANKS\n         MVC   NEW.SESS_FORMAT,COMM_BLANKS\n         MVC   NEW.SESS_DATA_LOADER,COMM_BLANKS\n         MVC   NEW.SESS_FUNCTION_MODULE,COMM_BLANKS\n         MVC   NEW.SESS_EXIT_MODULE,COMM_BLANKS\n         MVC   NEW.SESS_DSN,COMM_BLANKS\n         MVC   NEW.SESS_MEMBER,COMM_BLANKS\n         MVC   NEW.SESS_PATH,SESS_PATH\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_ADDR\n         MVC   NEW.SESS_PATH,SESS_PATH\n         MVC   NEW.SESS_PATH_LENGTH,SESS_PATH_LENGTH\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         XC    NEW.DATASPACE_1_ALET,NEW.DATASPACE_1_ALET\n         XC    NEW.DATASPACE_1_TOKEN,NEW.DATASPACE_1_TOKEN\n         MVC   NEW.DATASPACE_1_NAME,COMM_BLANKS\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         CLI   DXD_SELECTION,C'E'               EDIT?\n         BNE   MAIN0420                         NO\n         OI    NEW.SESS_EDIT_FLAGS,$SESS_EDIT   INDICATE EDIT SESSION\nMAIN0420 DS    0H\n         CLI   DXD_SELECTION,C'A'               BROWSE IN ASCII MODE?\n         BNE   MAIN0430                         NO\n         ITRACE ID=ASCII\n         OI    NEW.SESS_USER_OPTIONS,$OPTIONS_ASCII\nMAIN0430 DS    0H\n         L     R0,COMM_IO_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,NEW.SESS_IO_AREA\n         BAL   R5,PATH0100                      BUILD PATH\n         MVC   NEW.SESS_PATH,DXD_NEW_PATH\n         MVC   NEW.SESS_PATH_LENGTH,DXD_NEW_PATH_LENGTH\n         ITRACE ID=NEW_PATH,                                           +\n               DATA1=NEW.SESS_PATH+0,                                  +\n               DATA2=NEW.SESS_PATH+8\n         MVI   NEW.SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH\n         ST    R7,DXD_LINES_REMAINING           SAVE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA             SAVE POSITION IN VDATA\n         B     EXIT0000                         EXIT\nPATH_MVC3 MVC   0(0,R1),MSG01_NAME\n         DROP  R8,NEW\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0450 DS    0H\n         ITRACE ID=FILE\n         ST    R7,DXD_LINES_REMAINING\n         ST    R8,DXD_CURRENT_VDATA\n         USING MSG01,R8\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         DROP  R8\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n* ------------------------------------------------------------------- *\n*        Create pipes                                                 *\n* ------------------------------------------------------------------- *\n         ITRACE ID=PIPE1\n         CALL  BPX1PIP,                         CREATE PIPE 1          +\n               (DXD_PIPE1_READ,                                        +\n               DXD_PIPE1_WRITE,                                        +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=RC,                                                 +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_RETURN_CODE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0080                          NO\n         ITRACE ID=PIPE2\n         CALL  BPX1PIP,                         CREATE PIPE 2          +\n               (DXD_PIPE2_READ,                                        +\n               DXD_PIPE2_WRITE,                                        +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=RC,                                                 +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_RETURN_CODE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0090                          NO\n* ------------------------------------------------------------------- *\n*        Spawn \"file\" command                                         *\n* ------------------------------------------------------------------- *\n         LA    R0,FILE_COMMAND\n         ST    R0,DXD_ARG_1_ADDR\n         LA    R0,L'FILE_COMMAND\n         ST    R0,DXD_ARG_1_LENGTH\n         LA    R0,DXD_ARG_1_LENGTH\n         ST    R0,DXD_ARG_1_LENGTH_ADDR\n\n         BAL   R5,PATH0100                      CONSTRUCT PATH NAME\n         LA    R0,DXD_NEW_PATH\n         ST    R0,DXD_ARG_2_ADDR\n         MVC   DXD_ARG_2_LENGTH,DXD_NEW_PATH_LENGTH\n         LA    R0,DXD_ARG_2_LENGTH\n         ST    R0,DXD_ARG_2_LENGTH_ADDR\n\n         MVC   DXD_DESCRIPTOR_0,DXD_PIPE1_READ  SET DESCRIPTOR 0\n         MVC   DXD_DESCRIPTOR_1,DXD_PIPE2_WRITE SET DESCRIPTOR 1\n         MVC   DXD_DESCRIPTOR_2,DXD_PIPE2_WRITE SET DESCRIPTOR 2\n         ITRACE ID=SPAWN\n         CALL  BPX1SPN,                                                +\n               (DXD_ARG_1_LENGTH,               .. COMMAND PATH LENGTH +\n               FILE_COMMAND,                    .. COMMAND PATH        +\n               F2,                              .. ARGUEMENT COUNT     +\n               DXD_LENGTH_VECTOR,               .. ARGUEMENT LENGTH VEC+\n               DXD_ARGS_VECTOR,                 .. ARGUEMENT VECTOR    +\n               F0,                              .. ENVIRONMENT COUNT   +\n               F0,                              .. ENVIRONMENT LENGTH  +\n               F0,                              .. ENVIRONMENT LIST    +\n               F3,                              .. NBR OF DESCRIPTORS  +\n               DXD_FILE_DESCRIPTORS,            .. FILE DESCRIPTORS    +\n               F0,                              .. INHERIT AREA LENGTH +\n               F0,                              .. INHERIT AREA        +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=RC,                                                 +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_REASON_CODE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0100                          NO\n         MVC   DXD_CHILD_PID,DXD_RETURN_VALUE   SAVE PID\n         ITRACE ID=CHILDPID,                                           +\n               DATA1=DXD_CHILD_PID\n* ------------------------------------------------------------------- *\n*        Close pipe 1 read                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLS1READ,                                           +\n               DATA1=(DXD_PIPE1_READ,4)\n         CALL  BPX1CLO,                                                +\n               (DXD_PIPE1_READ,                                        +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_REASON_CODE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0130                          NO\n* ------------------------------------------------------------------- *\n*        Close pipe 2 write                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLS2WRT,                                            +\n               DATA1=(DXD_PIPE2_WRITE,4)\n         CALL  BPX1CLO,                                                +\n               (DXD_PIPE2_WRITE,                                       +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(DXD_RETURN_VALUE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0130                          NO\n*        ITRACE ID=DUMMY\n*        XC    DXD_DUMMY_ECB,DXD_DUMMY_ECB\n*        WAIT  ECB=DXD_DUMMY_ECB\n* ------------------------------------------------------------------- *\n*        Close pipe 1 write                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLS1WRT,                                            +\n               DATA1=(DXD_PIPE1_WRITE,4)\n         CALL  BPX1CLO,                                                +\n               (DXD_PIPE1_WRITE,                                       +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_REASON_CODE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0130                          NO\n* ------------------------------------------------------------------- *\n*        WAIT for child process                                       *\n* ------------------------------------------------------------------- *\n         ITRACE ID=WAIT,                                               +\n               DATA1=(DXD_CHILD_PID,4)\n         CALL  BPX1WAT,                                                +\n               (DXD_CHILD_PID,                  .. PID                 +\n               F0,                              .. OPTIONS (NONE)      +\n               DXD_WAIT_STATUS,                 .. RETURNED STATUS     +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=RC,                                                 +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_REASON_CODE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        Clear VDATA                                                  *\n* ------------------------------------------------------------------- *\n         L     R0,DXD_VDATA2_ADDR\n         L     R1,DXD_VDATA2_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R2,DXD_VDATA2_ADDR\n         L     R3,DXD_VDATA2_LENGTH\n* ------------------------------------------------------------------- *\n*        Read STDOUT from \"file\" command                              *\n* ------------------------------------------------------------------- *\nMAIN0470 DS    0H\n         ITRACE ID=READ_2,                                             +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         ST    R2,DXD_PIPE_DATA\n         ST    R3,DXD_PIPE_LENGTH\n         CALL  BPX1RED,                                                +\n               (DXD_PIPE2_READ,                 .. FILE DESCRIPTOR     +\n               DXD_PIPE_DATA,                   .. BUFFER              +\n               F0,                              .. ALET                +\n               DXD_PIPE_LENGTH,                 .. LENGTH              +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=READ_RC,                                            +\n               DATA1=(DXD_RETURN_VALUE,4),                             +\n               DATA2=(DXD_REASON_CODE,4)\n         ICM   R1,15,DXD_RETURN_VALUE\n         BM    ERR0120                          ERROR\n         BZ    MAIN0480                         ZERO.. NO MORE DATA\n         AR    R2,R1                            UPDATE BUFFER ADDRESS\n         SR    R3,R1                            LENGTH LEFT\n         B     MAIN0470\n* ------------------------------------------------------------------- *\n*        Close pipe 2 read                                            *\n* ------------------------------------------------------------------- *\nMAIN0480 DS    0H\n         ITRACE ID=CLOSE2,                                             +\n               DATA1=(DXD_PIPE2_READ,4)\n         CALL  BPX1CLO,                                                +\n               (DXD_PIPE2_READ,                                        +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(DXD_RETURN_VALUE,4)\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    ERR0130                          NO\n         B     MAIN0640                         DISPLAY FILE INFO\nNAME_MVC MVC   COMM_INFO_02(0),DXD_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Build \"long\" form info for selected file                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ST    R7,DXD_LINES_REMAINING\n         ST    R8,DXD_CURRENT_VDATA\n         USING MSG01,R8\n         ITRACE ID=LONGINFO,                                           +\n               DATA1=MSG01_NAME+0,                                     +\n               DATA2=MSG01_NAME+8\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         DROP  R8\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         L     R0,DXD_VDATA2_ADDR               2NDARY VDATA ADDR\n         L     R1,DXD_VDATA2_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE VDATA\n         L     R8,DXD_VDATA2_ADDR\n         L     R7,SPF_VDEPTH\n         MVC   COMM_INFO_01,COMM_BLANKS\n         MVC   COMM_INFO_02,COMM_BLANKS\n         MVI   0(R8),$SCREEN_ATTR_HIGH\n         LH    R1,DXD_NAME_LENGTH               NAME LENGTH\n         BCTR  R1,0                             FOR EXECUTE\n         EX    R1,NAME_MVC2                     COPY NAME\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n         LA    R3,FIELD_TABLE                   FIRST FIELD\n         USING FDEF_DSECT,R3                    DEFINE BASE\nMAIN0510 DS    0H\n         ITRACE ID=FIELD,                                              +\n               DATA1=(FDEF_DESC,8),                                    +\n               DATA2=(FDEF_TYPE,1)\n         MVC   0(MSG_02_L,R8),MSG_02           INITIALIZE\n         USING MSG_02,R8\n         MVC   MSG_02_FIELD,FDEF_DESC          COPY FIELD DESCRIPTION\n         SR    R2,R2                           CLEAR REGISTER\n         ICM   R2,3,FDEF_DISP                  DISP TO DATA\n         LA    R2,STAT(R2)                     COMPUTE ADDRESS OF DATA\n         CLI   FDEF_TYPE,$FDEF_CHARACTER\n         BE    MAIN0520\n         CLI   FDEF_TYPE,$FDEF_DEV             DEVICE?\n         BE    MAIN0530\n         CLI   FDEF_TYPE,$FDEF_HEX_FOUR        FOUR BYTE HEX?\n         BE    MAIN0540\n         CLI   FDEF_TYPE,$FDEF_FULLWORD        FULLWORD?\n         BE    MAIN0550\n         CLI   FDEF_TYPE,$FDEF_GID             GROUP ID?\n         BE    MAIN0560\n         CLI   FDEF_TYPE,$FDEF_MODE            FILE MODE?\n         BE    MAIN0570\n         CLI   FDEF_TYPE,$FDEF_HEX_ONE         ONE BYTE HEX?\n         BE    MAIN0580\n         CLI   FDEF_TYPE,$FDEF_PATH            PATH?\n         BE    MAIN0590\n         CLI   FDEF_TYPE,$FDEF_TIME            TIME?\n         BE    MAIN0600\n         CLI   FDEF_TYPE,$FDEF_UID             USER ID?\n         BE    MAIN0610\n         ITRACE ID=BADTYPE,                                            +\n               DATA1=(FDEF_TYPE,1)\n         DC    H'0'\nMAIN0520 DS    0H\n         MVC   MSG_02_VALUE(8),0(R2)\n         B     MAIN0620                        NEXT FIELD\nMAIN0530 DS    0H\n         BAL   R5,DEV0000\n         MVC   MSG_02_VALUE(13),COMM_INFO_01\n         B     MAIN0620\nMAIN0540 DS    0H\n         UNPK  COMM_INFO_01(9),0(5,R2)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   MSG_02_VALUE(8),COMM_INFO_01\n         B     MAIN0620\nMAIN0550 DS    0H\n         BAL   R5,FULL0000\n         MVC   MSG_02_VALUE(L'EDIT_WORD_1),COMM_INFO_01\n         B     MAIN0620\nMAIN0560 DS    0H\n         BAL   R5,GID0000\n         MVC   MSG_02_VALUE(L'DXD_GROUP),DXD_GROUP\n         B     MAIN0620\nMAIN0570 DS    0H\n         BAL   R5,MODE0000\n         MVC   MSG_02_VALUE(L'EDIT_WORD_1),DXD_MODE\n         B     MAIN0620\nMAIN0580 DS    0H\n         UNPK  COMM_INFO_01(3),0(2,R2)\n         TR    COMM_INFO_01(2),COMM_HEXCHAR\n         MVC   MSG_02_VALUE(2),COMM_INFO_01\n         B     MAIN0620\nMAIN0590 DS    0H\n         MVC   MSG_02_VALUE,SESS_PATH\n         CLI   S_MODE,FT_SYMLINK                SYMBOLIC LINK?\n         BNE   MAIN0620                         NO\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n         MVC   0(MSG_02_L,R8),MSG_02\n         MVC   MSG_02_FIELD,=CL12'REAL PATH'\n         MVC   MSG_02_VALUE,SESS_REAL_PATH\n         B     MAIN0620\nMAIN0600 DS    0H\n         BAL   R5,TIME0000\n         MVC   MSG_02_VALUE,COMM_INFO_01\n         B     MAIN0620\nMAIN0610 DS    0H\n         BAL   R5,UID0000\n         MVC   MSG_02_VALUE(L'DXD_USER),DXD_USER\nMAIN0620 DS    0H\n         A     R8,SPF_VWIDTH                    NEXT LINE\n         BCT   R7,MAIN0630                      ACCOUNT FOR LINE USED\n         B     MAIN0640                         SCREEN FULL\nMAIN0630 DS    0H\n         ITRACE ID=NEXTFDEF\n         MVC   COMM_INFO_01,COMM_BLANKS\n         MVC   COMM_INFO_02,COMM_BLANKS\n         LA    R3,FDEF_L(,R3)\n         CLI   0(R3),X'FF'                      END OF TABLE?\n         BNE   MAIN0510                         NO\nMAIN0640 DS    0H\n         ITRACE ID=DISPLAY2\n         MVC   SESS_DISP_PANEL,HDIR_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA2_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA2_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                          LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         L     R7,DXD_LINES_REMAINING           RESTORE LINES REMAINING\n         L     R8,DXD_CURRENT_VDATA             RESTORE ADDR IN VDATA1\n         B     MAIN0160                         CONTINUE LINE COMMANDS\nNAME_MVC2 MVC  1(0,R8),DXD_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         USING MSG01,R8\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         DROP  R8\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         BAL   R5,PATH0100                      CONSTRUCT NAME\n         ITRACE ID=DELETE,                                             +\n               DATA1=DXD_NEW_PATH+00,                                  +\n               DATA2=DXD_NEW_PATH+08\n         ITRACE ID=DELETE+,                                            +\n               DATA1=DXD_NEW_PATH+16,                                  +\n               DATA2=DXD_NEW_PATH+24\n         TM    DXD_FLAGS,$CONFIRM_ALL           CONFIRMED FOR ALL?\n         BO    MAIN0710                         YES\n         MVC   SESS_DISP_PANEL,OS0010           SET PANEL NAME\n         MVC   SPF_PATH,DXD_NEW_PATH            SET PATH\n         ITRACE ID=CONFIRM\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                          CONFIRM DELETE\n         LTR   R15,R15                          RC=0?\n         BNZ   MAIN0740                         NO\n         CLI   SPF_YES_OR_NO,C'N'               USER REPLAY 'NO'\n         BE    MAIN0740                         YES, THEY DID, BYPASS\n         CLC   SPF_YES_OR_NO,ALL                YES TO ALL?\n         BNE   MAIN0710                         NO\n         OI    DXD_FLAGS,$CONFIRM_ALL           SET CONFIRMED FOR ALL\nMAIN0710 DS    0H\n         ITRACE ID=CONFIRMD\n         LA    R2,DXD_NEW_PATH                  NEW PATH\n         LA    R3,DXD_NEW_PATH_LENGTH           PATH LENGTH\n         CLI   S_MODE,FT_DIR                    DIRECTORY?\n         BE    MAIN0720                         YES\n         CALL  BPX1UNL,                         DELETE (UNLINK)        +\n               ((R3),                                                  +\n               (R2),                                                   +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         B     MAIN0730\nMAIN0720 DS    0H\n         ITRACE ID=DEL_DIR\n         CALL  BPX1RMD,                         DELETE DIRECTORY       +\n               ((R3),                                                  +\n               (R2),                                                   +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\nMAIN0730 DS    0H\n         TM    DXD_RETURN_VALUE,X'80'           SUCCESSFUL?\n         BO    MAIN0750                         NO\n         OI    DXD_STAT_STATUS,$STATUS_DELETED  STATUS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO.. DATASPACE ERROR\n         GETMAIN RU,                                                   +\n               LV=DELETE_MSG_L,                                        +\n               LOC=BELOW\n         LR    R2,R1\n         MVC   0(DELETE_MSG_L,R2),DELETE_MSG    COPY MESSAGE\n         MVC   DELETE_MSG_NAME-DELETE_MSG(L'DELETE_MSG_NAME,R2),DXD_NAM+\n               E\n         LA    R3,DELETE_MSG_L\n         TPUT  (R2),(R3),R\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=DELETE_MSG_L\n         B     MAIN0160                         CONTINUE\nMAIN0740 DS    0H\n         MVC   SPF_MSG_1(ABORT_MSG_L),ABORT_MSG\n         MVC   SPF_MSG_2,DXD_NEW_PATH\n         B     MAIN0160\nMAIN0750 DS    0H\n         ITRACE ID=DEL_FAIL,                                           +\n               DATA1=DXD_RETURN_CODE,                                  +\n               DATA2=DXD_REASON_CODE\n         CLI   DXD_RETURN_CODE+3,X'88'          DIRECTORY NOT EMPTY?\n         BE    MAIN0760                         YES\n         DC    H'0'\nMAIN0760 DS    0H\n         MVC   SPF_MSG_1(EMPTY_MSG_L),EMPTY_MSG\n         B     MAIN0130\n* ------------------------------------------------------------------- *\n*        SET TAG FLAG(S)                                              *\n* ------------------------------------------------------------------- *\nMAIN0800 DS    0H\n         ITRACE ID=TAG\n         USING MSG01,R8\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         DROP  R8\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         OI    DXD_STAT_STATUS,$STATUS_TAGGED   SET TAGGED FLAG\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE     SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          UPDATE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*        RESET TAG FLAG(S)                                            *\n* ------------------------------------------------------------------- *\nMAIN0810 DS    0H\n         ITRACE ID=RESET\n         USING MSG01,R8\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         DROP  R8\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         NI    DXD_STAT_STATUS,255-$STATUS_TAGGED   RESET TAGGED FLAG\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE     SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          UPDATE DATA\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0020                          NO\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=DSP_PRIM\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,PRIMARY_COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15\n         B     MAIN0130\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1010 DS    0H\n         ITRACE ID=DSP_LINE\n         USING MSG01,R8\n         MVI   MSG01_SELECTION,C' '             RESET THE SELECTION\n         DROP  R8\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,LINE_COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15\n         B     MAIN0130\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1200 DS    0H\n         ITRACE ID=NEW_PATH,                                           +\n               DATA1=(SPF_ZCMD+0,8),                                   +\n               DATA2=(SPF_ZCMD+8,8)\n         GETMAIN RU,                                                   +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         LR    R3,R1                            SAVE ADDRESS\nNEW      USING SESSION,R3\n         ST    R3,COMM_NEW_SESSION\n         LR    R0,R3\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         BZ    MAIN1210                         NO\n         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nMAIN1210 DS    0H\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DSN,COMM_BLANKS\n         MVC   NEW.SESS_MEMBER,COMM_BLANKS\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_ADDR\n         MVC   NEW.SESS_PATH,SPF_ZCMD\n         XC    NEW.SESS_PATH_LENGTH(2),NEW.SESS_PATH_LENGTH\n         MVC   NEW.SESS_PATH_LENGTH+2(2),OPERAND_01_LENGTH\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         XC    NEW.DATASPACE_1_ALET,NEW.DATASPACE_1_ALET\n         XC    NEW.DATASPACE_1_TOKEN,NEW.DATASPACE_1_TOKEN\n         MVC   NEW.DATASPACE_1_NAME,COMM_BLANKS\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         L     R0,COMM_IO_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         MVI   NEW.SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH\n         ST    R7,DXD_LINES_REMAINING           SAVE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA             SAVE POSITION IN VDATA\n         B     EXIT0000                         EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Append selected file/directory path to current                    *\n*                                                                     *\n*    At entry                                                         *\n*       SESS_PATH               current path                          *\n*       SESS_PATH_LENGTH        length of current path name           *\n*       DXD_NAME                selected file/dir path name           *\n*       DXD_NAME_LENGTH         length of selected file/dir path name *\n*                                                                     *\n*    on exit                                                          *\n*       DXD_NEW_PATH            full path name of selected file/dir   *\n*       DXD_NEW_PATH_LENGTH     length of full path                   *\n*                                                                     *\n*    R1, R14, R15 work registers                                      *\n*                                                                     *\n*    R5 return address                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPATH0100 DS    0H\n         MVC   DXD_NEW_PATH(256),SESS_PATH      START WITH CURRENT\n         MVC   DXD_NEW_PATH+256(256),COMM_BLANKS\n         L     R1,SESS_PATH_LENGTH              PATH NAME LENGTH\n         LA    R15,DXD_NEW_PATH(R1)\n         BCTR  R15,0\n         CLI   0(R15),C'/'                      END WITH A SLASH?\n         BE    PATH0110                         YES\n         LA    R1,1(,R1)                        ADD 1 TO LENGTH\n         LA    R15,1(,R15)                      ADD 1 TO ADDRESS\n         MVI   0(R15),C'/'                      INSERT SLASH\nPATH0110 DS    0H\n         MVC   1(256,R15),DXD_NAME              COPY SELECTED FILE/DIR\n         AH    R1,DXD_NAME_LENGTH               PLUS NEW LENGTH\n         CH    R1,H256                          MORE THAN 256?\n         BNH   PATH0120                         NO\n         LH    R1,H256                          LIMIT TO 256\nPATH0120 DS    0H\n         ST    R1,DXD_NEW_PATH_LENGTH           SAVE TOTAL LENGTH\n         BR    R5\n* ------------------------------------------------------------------- *\n*        Left justify numbers in COMM_INFO_01                         *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         LA    R15,L'COMM_INFO_01               MAXIMUM NBR OF LOOPS\nNBR0010  DS    0H\n         CLI   COMM_INFO_01,C' '                BLANK?\n         BNER  R14                     NO\n         MVC   COMM_INFO_01(L'COMM_INFO_01-1),COMM_INFO_01+1\n         MVI   COMM_INFO_01+(L'COMM_INFO_01-1),C' '\n         BCT   R15,NBR0010                      LOOP\n         BR    R14                              SHOULD NOT HAPPEN...\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMP0000 DS    0H\n         ITRACE ID=DUMPDATA\n         MVC   DAIR_DD,OSDUMP_DD                SET DD NAME\n         MVC   DAIR_SYSOUT,COMM_SYSOUT_CLASS    SET SYSOUT CLASS\n         MVI   DAIR_FUNC,$DAIR_ALLOC            SET DAIR FUNCTION\n         MVI   DAIR_OPTS,$DAIR_SYSOUT           TYPE OF DATA SET\n         LA    R1,DAIRREQ                       OSDAIR PARM LIST\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          LINK TO OSDAIR\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0020                          NO\n         GETMAIN RU,                                                   +\n               LV=DUMP_CONTROL_L,                                      +\n               LOC=BELOW\n         ITRACE ID=DUMPCNTL,                                           +\n               RDATA1=R1\n         LR    R8,R1\n         USING DUMP_CONTROL,R8                  DEFINE BASE\n         MVC   DUMP_DCB(DUMP_DCB_L),DUMP_DCB_I\n         LA    R2,DUMP_DCB                      DCB ADDRESS\n         ST    R2,DSPCREQ_DCB                   PASS IT TO OSDSPACE\n         ITRACE ID=OPENDUMP,                                           +\n               RDATA1=R2\n         OPEN  ((R2),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,DXD_OPEN)\n         LA    R1,DUMP_IO_AREA                  I/O AREA ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR           PASS ADDRESS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_DUMP\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DUMP,                                               +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                          DUMP THE DATA SPACE\n         ITRACE ID=CLS_DUMP,                                           +\n               RDATA1=R2\n         CLOSE ((R2)),                                                 +\n               MODE=31,                                                +\n               MF=(E,DXD_CLOSE)\n         FREEPOOL (R2)\n         MVI   DAIR_FUNC,$DAIR_FREE\n         LA    R1,DAIRREQ                       OSDAIR PARM LIST\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          LINK TO OSDAIR\n         ITRACE ID=FREE_DMP,                                           +\n               RDATA1=R8\n         FREEMAIN RU,                                                  +\n               A=(R8),                                                 +\n               LV=DUMP_CONTROL_L\n         MVC   SPF_MSG_1(DUMP_MSG_L),DUMP_MSG\n         B     MAIN0130\n\n\nDUMP_MSG        DC    C'DATASPACE dump complete'\nDUMP_MSG_L      EQU   *-DUMP_MSG\nABORT_MSG       DC    C'Member deletion aborted'\nABORT_MSG_L     EQU   *-ABORT_MSG\nDELETE_MSG      DC    C'Deleted '\nDELETE_MSG_NAME DC    CL50' '\nDELETE_MSG_L    EQU   *-DELETE_MSG\nEMPTY_MSG       DC    C'Directory not empty'\nEMPTY_MSG_L     EQU   *-EMPTY_MSG\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEV0000  DS    0H\n         ITRACE ID=DEV\n         SR    R1,R1                             CLEAR REGISTER\n         ICM   R1,3,0(R2)                        MAJOR NUMBER\n         CVD   R1,COMM_DWORD                     CONVERT TO DECIMAL\n         MVC   COMM_INFO_02(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_02(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   COMM_INFO_01+0(5),COMM_INFO_02+1\n         ICM   R1,3,2(R2)                        MINOR NUMBER\n         CVD   R1,COMM_DWORD                     CONVERT TO DECIMAL\n         MVC   COMM_INFO_02(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_02(L'EDIT_WORD_2),COMM_DWORD+5\n         MVC   COMM_INFO_01+11(5),COMM_INFO_02+1\n         BAL   R14,NBR0000\n         BR    R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFULL0000 DS    0H\n         ITRACE ID=FULL\n         ICM   R1,15,0(R2)                      NUMBER IN BINARY\n         CVD   R1,COMM_DWORD\n         MVC   COMM_INFO_01(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    COMM_INFO_01(L'EDIT_WORD_1),COMM_DWORD+2\n         BAL   R14,NBR0000\n         BR    R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGID0000  DS    0H\n         ITRACE ID=GID,                                                +\n               RDATA1=R2,                                              +\n               DATA2=(0(R2),4)\n         ICM   R1,15,0(R2)                      NUMBER IN BINARY\n         CVD   R1,COMM_DWORD\n         MVC   COMM_INFO_02(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    COMM_INFO_02(L'EDIT_WORD_1),COMM_DWORD+2\n         MVC   COMM_INFO_01(L'EDIT_WORD_1+2),COMM_INFO_02+2\n         BAL   R14,NBR0000                      LEFT JUSTIFY\n         MVC   DXD_GID,COMM_INFO_01\n         ITRACE ID=GET_GRP,                                            +\n               DATA1=(0(R2),4)\n         CALL  BPX1GGI,                         LOOK UP GROUP NAME     +\n               (0(R2),                                                 +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ICM   R1,15,DXD_RETURN_VALUE           RETURNED DATA\n         BZ    GID0020                          ZERO.. ERROR\n         USING GIDS,R1                          DEFINE BASE\n         MVC   DXD_GROUP_NAME,COMM_BLANKS       INITIALIZE NAME\n         L     R14,GIDS_G_LEN                   LENGTH OF GROUP ID\n         CH    R14,=Y(L'DXD_GROUP_NAME)         TOO LONG?\n         BNH   GID0010                          NO\n         LH    R14,=Y(L'DXD_GROUP_NAME)         LIMIT LENGTH\nGID0010  DS    0H\n         BCTR  R14,0\n         EX    R14,GROUP_MVC                    COPY GROUP NAME\n         BR    R5\nGID0020  DS    0H\n         MVC   DXD_GROUP_NAME,COMM_INFO_01\n         BR    R5\n\nGROUP_MVC  MVC  DXD_GROUP_NAME(0),GIDS_G_NAME\n\n         DROP  R1\n\n         BR    R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMODE0000 DS    0H\n         ITRACE ID=MODE\n         MVI   DXD_ATTR,$SCREEN_ATTR_NORMAL     DEFAULT ATTRIBUTE\n         CLI   S_MODE,FT_DIR                    DIRECTORY?\n         BE    MODE0010                         YES\n         CLI   S_MODE,FT_CHARSPEC               CHARACTER SPECIAL?\n         BE    MODE0020                         YES\n         CLI   S_MODE,FT_REGFILE                REGULAR FILE?\n         BE    MODE0030                         YES\n         CLI   S_MODE,FT_FIFO                   NAMED PIPE (FIFO)?\n         BE    MODE0040                         YES\n         CLI   S_MODE,FT_SYMLINK                SYMBOLIC LINK?\n         BE    MODE0050                         YES\n         CLI   S_MODE,FT_SOCKET                 SOCKET?\n         BE    MODE0060                         YES\n         MVI   DXD_TYPE,C'?'                    UNKNOWN TYPE\n         B     MODE0070\nMODE0010 DS    0H\n         MVI   DXD_TYPE,C'd'                    DIRECTORY\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_GREEN ATTRIBUTE\n         B     MODE0070\nMODE0020 DS    0H\n         MVI   DXD_TYPE,C'c'                    CHARACTER SPECIAL\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_TURQUOISE\n         B     MODE0070\nMODE0030 DS    0H\n         MVI   DXD_TYPE,C'-'                    REGULAR FILE\n         B     MODE0070\nMODE0040 DS    0H\n         MVI   DXD_TYPE,C'p'                    NAMED FIFO PIPE\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_TURQUOISE\n         B     MODE0070\nMODE0050 DS    0H\n         MVI   DXD_TYPE,C'l'                    SYMBOLIC LINK\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_YELLOW\n         B     MODE0070\nMODE0060 DS    0H\n         MVI   DXD_TYPE,C's'                    SOCKET\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_TURQUOISE\nMODE0070 DS    0H\n         MVC   DXD_O_PERMISSION,=C'---'\n         MVC   DXD_G_PERMISSION,=C'---'\n         MVC   DXD_W_PERMISSION,=C'---'\n         TM    S_MODE2,S_IRUSR                  OWNER READ?\n         BNO   MODE0080                         NO\n         MVI   DXD_O_PERMISSION+0,C'r'\nMODE0080 DS    0H\n         TM    S_MODE3,S_IWUSR                  OWNER WRITE?\n         BNO   MODE0090                         NO\n         MVI   DXD_O_PERMISSION+1,C'w'\nMODE0090 DS    0H\n         TM    S_MODE3,S_IXUSR                  OWNER EXECUTE?\n         BNO   MODE0100                         NO\n         MVI   DXD_O_PERMISSION+2,C'x'\nMODE0100 DS    0H\n         TM    S_MODE3,S_IRGRP                  GROUP READ?\n         BNO   MODE0110                         NO\n         MVI   DXD_G_PERMISSION+0,C'r'\nMODE0110 DS    0H\n         TM    S_MODE3,S_IWGRP                  GROUP WRITE?\n         BNO   MODE0120                         NO\n         MVI   DXD_G_PERMISSION+1,C'w'\nMODE0120 DS    0H\n         TM    S_MODE3,S_IXGRP                  GROUP EXECUTE?\n         BNO   MODE0130                         NO\n         MVI   DXD_G_PERMISSION+2,C'x'\nMODE0130 DS    0H\n         TM    S_MODE3,S_IROTH                  OTHER (WORLD) READ?\n         BNO   MODE0140                         NO\n         MVI   DXD_W_PERMISSION+0,C'r'\nMODE0140 DS    0H\n         TM    S_MODE3,S_IWOTH                  OTHER (WORLD) WRITE?\n         BNO   MODE0150                         NO\n         MVI   DXD_W_PERMISSION+1,C'w'\n         MVI   DXD_ATTR,$SCREEN_ATTR_HIGH_RED\nMODE0150 DS    0H\n         TM    S_MODE3,S_IXOTH                  OTHER (WORLD) EXECUTE\n         BNO   MODE0160                         NO\n         MVI   DXD_W_PERMISSION+2,C'x'\nMODE0160 DS    0H\n         TM    S_MODE2,S_ISUID                  SET UID?\n         BNO   MODE0170                         NO\n         MVI   DXD_O_PERMISSION+2,C's'\n         B     MODE0180\nMODE0170 DS    0H\n         TM    S_MODE2,S_ISGID                  SET GID?\n         BNO   MODE0180                         NO\n         MVI   DXD_G_PERMISSION+2,C's'\nMODE0180 DS    0H\n         BR    R5\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTIME0000 DS    0H\n         ITRACE ID=TIME,                                               +\n               RDATA1=R2,                                              +\n               DATA2=(0(R2),4)\n         MVC   COMM_INFO_01,COMM_BLANKS\n         SR    R14,R14\n         ICM   R15,15,0(R2)                     TIME SINCE  JAN 1, 1970\n         BZ    TIME0040                         ALL ZERO\n         M     R14,F1000000                     CONVERT TO MICROSECONDS\n         AL    R15,X_1970+4                     MIRCOSECONDS TO 1970\n         BC    12,TIME0010\n         AL    R14,F1                           PLUS 1 (OVERFLOW)\nTIME0010 DS    0H\n         AL    R14,X_1970\n         SLDL  R14,12                           CONVERT TO STCK FORMAT\n         L     R1,CVTPTR                        CVT\n         L     R1,CVTEXT2-CVT(,R1)              OS/VS2 COMMON EXTENSION\n         USING CVTXTNT2,R1\n         AL    R15,CVTLDTOR                     DATE OFFSET RIGHT WORD\n         BC    12,TIME0020\n         AL    R14,F1                           PLUS 1 (OVERFLOW)\nTIME0020 DS    0H\n         AL    R14,CVTLDTOL                     DATE OFFSET LEFT WORD\n         SL    R15,CVTLSOL                      MINUS LOW WORD\n         BC    3,TIME0030\n         BCTR  R14,0                            MINUS 1 (OVERFLOW)\nTIME0030 DS    0H\n         SL    R14,CVTLSOH                      MINUS HIGH WORD\n         DROP  R1\n         STM   R14,R15,COMM_DWORD               SAVE AS STCK\n         STCKCONV TIMETYPE=DEC,                 CONVERT TIME           +\n               DATETYPE=YYYYMMDD,                                      +\n               STCKVAL=COMM_DWORD,                                     +\n               CONVVAL=DXD_DATE_TIME,                                  +\n               MF=(E,DXD_STCKCONV)\n         UNPK  COMM_INFO_01+00(3),DXD_DATE_TIME+10(2)  MONTH\n         MVI   COMM_INFO_01+02,C'/'\n         UNPK  COMM_INFO_01+03(3),DXD_DATE_TIME+11(2)  DAY\n         MVI   COMM_INFO_01+05,C'/'\n         UNPK  COMM_INFO_01+06(3),DXD_DATE_TIME+09(2)  YEAR\n         MVI   COMM_INFO_01+08,C' '\n         UNPK  COMM_INFO_01+11(3),DXD_DATE_TIME+00(2)  HOUR\n         MVI   COMM_INFO_01+13,C':'\n         UNPK  COMM_INFO_01+14(3),DXD_DATE_TIME+01(2)  MINUTE\n         MVI   COMM_INFO_01+16,C' '\n         BR    R5\nTIME0040 DS    0H\n         MVC   COMM_INFO_01(L'ZERO),ZERO\n         BR    R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUID0000  DS    0H\n         ITRACE ID=UID,                                                +\n               RDATA1=R2,                                              +\n               DATA2=(0(R2),4)\n         ICM   R1,15,0(R2)                      NUMBER IN BINARY\n         CVD   R1,COMM_DWORD\n         MVC   COMM_INFO_02(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    COMM_INFO_02(L'EDIT_WORD_1),COMM_DWORD+2\n         MVC   COMM_INFO_01(L'EDIT_WORD_1+2),COMM_INFO_02+2\n         BAL   R14,NBR0000                      LEFT JUSTIFY\n         MVC   DXD_UID,COMM_INFO_01\n         ITRACE ID=GET_USER,                                           +\n               DATA1=(0(R2),4)\n         CALL  BPX1GPU,                                                +\n               (0(R2),                                                 +\n               DXD_RETURN_VALUE,                                       +\n               DXD_RETURN_CODE,                                        +\n               DXD_REASON_CODE),                                       +\n               VL,                                                     +\n               MF=(E,DXD_CALL_PARMS)\n         ICM   R1,15,DXD_RETURN_VALUE           RETURNED DATA\n         ITRACE ID=RC,                                                 +\n               RDATA1=R1\n         LTR   R1,R1\n         BZ    UID0020                          ZERO.. ERROR\n         USING GIDN,R1                          DEFINE BASE\n         MVC   DXD_USER_NAME,COMM_BLANKS\n         L     R14,GIDN_U_LEN                   LENGTH OF USER ID\n         CH    R14,=Y(L'DXD_USER_NAME)          TOO LONG?\n         BNH   UID0010                          NO\n         LH    R14,=Y(L'DXD_USER_NAME)          LIMIT LENGTH\nUID0010  DS    0H\n         BCTR  R14,0\n         EX    R14,USER_MVC                     COPY USER NAME\n         BR    R5\nUID0020  DS    0H\n         MVC   DXD_USER_NAME,COMM_INFO_01\n         BR    R5\nUSER_MVC MVC   DXD_USER_NAME(0),GIDN_U_NAME\n         DROP  R1\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\n         DC    C'INTERNAL ERROR, DXD AREA EXISTS'\nERR0020  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1             COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2             COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3             COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4             COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5             COPY MESSAGE\n         B     MAIN0130                         DISPLAY WITH MESSAGE\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,2                  INVALID PRIMARY COMMAND\n         B     ERR1000\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,4                  TOO MANY OPERANDS\n         B     ERR1000\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,5                  NOT IN THIS DIRECTORY\n         B     ERR1000\nERR0070  DS    0H\n         DC    H'0'\nERR0080  DS    0H\n         DC    H'0'\nERR0090  DS    0H\n         DC    H'0'\nERR0100  DS    0H\n         DC    H'0'\nERR0110  DS    0H\n         DC    H'0'\nERR0120  DS    0H\n         DC    H'0'\nERR0130  DS    0H\n         DC    H'0'\nERR1000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID             CSECT FOR MESSAGES\n         MVI   COMM_MSG_ID+0,0\n         L     R15,COMM_V_OSMSG                 OSMSG ENTRY POINT\n         BALR  R14,R15                          BUILD THE MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1             COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2             COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3             COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4             COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5             COPY MESSAGE\n         B     MAIN0130                         EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS0000 DS    0H\n         ITRACE ID=SESS,                                               +\n               RDATA1=R7,                                              +\n               RDATA2=R9\n         ST    R7,DXD_LINES_REMAINING           RESTORE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA             RESTORE VDATA ADDR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEBUG000 DS    0H\n         ITRACE ID=DEBUG\n         L     R15,COMM_V_OSDEBUG\n         BALR  R14,R15\n         B     MAIN0130\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R0,DXD_VDATA1_LENGTH\n         L     R1,DXD_VDATA1_ADDR\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA 1\n         L     R0,DXD_VDATA2_LENGTH\n         L     R1,DXD_VDATA2_ADDR\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA 2\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         LA    R0,OSHDIR_DXD_L                  WORK AREA SIZE\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                           FREE WORK AREA         +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------\n*\n* ------------------------------------------------------------------\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                       RETURN CODE\n         L     R13,4(,R13)                      RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                     RESTORE R14\n         LM    R0,R12,20(R13)                   RESTORE REGISTERS\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\n*\n*       Time in micro seconds since Jan 1, 1970\n*\n*       (70*365.25)*24*3600*1000000\n*\nX_1970         DS    0D\n               DC    FL8'2208988800E6'\n\nDUMP_DCB_I     DCB DSORG=PS,                                           +\n               DDNAME=OSDUMP,                                          +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               BLKSIZE=13300,                                          +\n               MACRF=PM\nDUMP_DCB_L     EQU      *-DUMP_DCB_I\nOPEN_I         OPEN     (*,OUTPUT),                                    +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU      *-OPEN_I\nCLOSE_I        CLOSE    (*),                                           +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU      *-CLOSE_I\n\nFILE_CLOSE     DC    A(F_CLOSFD)\n\nF0             DC    F'0'\nF1             DC    F'1'\nF2             DC    F'2'\nF3             DC    F'3'\nF1000000       DC    F'1000000'\nH1             DC    H'1'\nH2             DC    H'2'\nH3             DC    H'3'\nH4             DC    H'4'\nH8             DC    H'8'\nH256           DC    H'256'\n\nEDIT_WORD_1     DC    X'402020202020202020202120'\nEDIT_WORD_2     DC    X'402020202120'\n\nALL             DC    C'ALL'\nDISPLAY         DC    C'DISPLAY'\nDELETED         DC    CL10'DELETED'\nDOT_DOT         DC    C'..'\nEDIT            DC    CL8'EDIT'\nFILE_COMMAND    DC    C'/bin/file'\nOSDUMP_DD       DC    CL8'OSDUMP'\nHDIR_PANEL      DC    CL8'OSHDIR'\nMODULE_OSHFSDIR DC    CL8'OSHFSDIR'\nOS0010          DC    CL8'OS0010'\nUNKNOWN         DC    CL10'UNKNOWN'\nZERO            DC    C'-zero-'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     To allow for file names to be lower case, the parser does       *\n*     not translate anything to upper case.  Therefore, the commands  *\n*     may be lower or upper case.  I suppose I should allow for all   *\n*     combinations of upper/lower case.  Well, you can't please       *\n*     everyone...                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRIMARY_COMMANDS DS   0X\n                CMD   /xxxx,MAIN1200,'Display file or directory xxx'\n                CMD   r,MAIN0200,'Refresh info'\n                CMD   R,MAIN0200,'Refresh info'\n                CMD   s,MAIN0300,'select (browse)'\n                CMD   S,MAIN0300,'Select (browse)'\n                CMD   FL,0,'List available formats'\n                CMD   ref,MAIN0200,'refresh info'\n                CMD   REF,MAIN0200,'REFresh info'\n                CMD   sel,MAIN0300,'select (browse)'\n                CMD   SEL,MAIN0300,'SELect (browse)'\n                CMD   LIST,0,'List available formats'\n                CMD   FLIST,0,'List available formats'\n                CMD   select,MAIN0300,'select (browse)'\n                CMD   SELECT,MAIN0300,'SELECT (browse)'\n                CMD   refresh,MAIN0200,'refresh info'\n                CMD   REFRESH,MAIN0200,'REFRESH info'\n                CMD   ??,MAIN1000,'Display list of available commands'\n                DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLINE_COMMANDS   DS    0C\n                CMD   A,MAIN0400,'Browse in ASCII mode'\n                CMD   B,MAIN0400,'Browse'\n                CMD   D,MAIN0700,'Delete'\n                CMD   F,MAIN0450,'Issue \"file\" command'\n                CMD   I,MAIN0500,'Long info'\n                CMD   L,MAIN0500,'Long info'\n                CMD   S,MAIN0400,'Select (browse)'\n                CMD   T,MAIN0800,'Tag'\n                CMD   V,MAIN0400,'View (browse)'\n                CMD   X,MAIN0810,'Reset tag'\n                CMD   ?,MAIN1010,'Display list of line commands'\n                DC    X'FF'\n\nFIELD_TABLE     DS    0X\n                FDEF  ST_MODE,'MODE',M\n                FDEF  ST_INO,'INODE',F\n                FDEF  ST_DEV,'DEVICE',D\n                FDEF  ST_NLINK,'LINKS',F\n                FDEF  ST_UID,'UID',U\n                FDEF  ST_GID,'GID',G\n                FDEF  ST_SIZE+4,'SIZE',F\n                FDEF  ST_ATIME,'ATIME',T\n                FDEF  ST_MTIME,'MTIME',T\n                FDEF  ST_CTIME,'CTIME',T\n                FDEF  ST_REFTIME,'RTIME',T\n                FDEF  ST_BLKSIZE,'Block size',F\n                FDEF  FT_CCSID,'CC ID',4\n                FDEF  FT_FLAGS,'FLAGS',4\n                FDEF  ST_BLOCKS,'Blks alloc',F\n                FDEF  ST_GENVALUE,'Gen ATTRs',4\n                FDEF  ST_FILEFMT,'File format',1\n                FDEF  ST_FSPFLAG2,'ACL flags',1\n                FDEF  ST_SECLABEL,'SEC label',C\n                DC    X'FF'\n\n                LTORG\n\n*\n*  Due to base register use, keep this below the LTORG\n*\n\nMSG01                DS    0C\nMSG01_ATTR1          DC    AL1($SCREEN_ATTR_INPUT)\nMSG01_SELECTION      DC    CL1' '\nMSG01_ATTR2          DC    AL1($SCREEN_ATTR_NORMAL)\nMSG01_MODE           DC    CL10' '\n                     DC    C' '\nMSG01_USER           DC    CL10' '\n                     DC    C' '\nMSG01_GROUP          DC    CL10' '\n                     DC    C' '\nMSG01_NAME_LENGTH    DC    X'40202020202020202120'\nMSG01_ATTR3          DC    AL1($SCREEN_ATTR_NORMAL)\nMSG01_NAME           DC    CL33' '\nMSG01_L              EQU   *-MSG01\n\nMSG_02               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\nMSG_02_FIELD         DC    CL12' '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_VALUE         DC    CL65' '\nMSG_02_L             EQU   *-MSG_02\n\nOSHDIREND            EQU   *-OSHDIR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHDIR_WORK          DSECT\n                     COPY     DXDPREF\n\nDXD_OPEN             DS       0F,(OPEN_L)X\nDXD_CLOSE            DS       0F,(CLOSE_L)X\n\nDXD_DUMMY_ECB        DS       F\n\nDXD_SPF_PARMS        DS       0F\nDXD_SPF_1            DS       F\nDXD_SPF_2            DS       F\nDXD_SPF_3            DS       F\n\nDXD_CURRENT_VDATA    DS       A\nDXD_LINES_REMAINING  DS       F\n\nDXD_VDATA1_ADDR      DS       A\nDXD_VDATA1_LENGTH    DS       F\nDXD_VDATA2_ADDR      DS       A\nDXD_VDATA2_LENGTH    DS       F\nDXD_CURSOR           DS       F\n\nDXD_VWIDTH           DS       F\nDXD_VDEPTH           DS       F\n\nDXD_RETURN_VALUE     DS       F\nDXD_RETURN_CODE      DS       F\nDXD_REASON_CODE      DS       F\nDXD_CALL_PARMS       DS       20F\n\nDXD_PIPE1_READ       DS       F\nDXD_PIPE1_WRITE      DS       F\nDXD_PIPE2_READ       DS       F\nDXD_PIPE2_WRITE      DS       F\n\nDXD_ARG_LENGTHS      DS       0F\nDXD_ARG_1_LENGTH     DS       F\nDXD_ARG_2_LENGTH     DS       F\n\nDXD_LENGTH_VECTOR     DS      0A\nDXD_ARG_1_LENGTH_ADDR DS      A\nDXD_ARG_2_LENGTH_ADDR DS      A\n\nDXD_ARGS_VECTOR      DS       0A\nDXD_ARG_1_ADDR       DS       A\nDXD_ARG_2_ADDR       DS       A\n\nDXD_PIPE_DATA        DS       A\nDXD_PIPE_LENGTH      DS       F\n\nDXD_FILE_DESCRIPTORS DS      0F\nDXD_DESCRIPTOR_0     DS       F\nDXD_DESCRIPTOR_1     DS       F\nDXD_DESCRIPTOR_2     DS       F\n\nDXD_CHILD_PID        DS       F\n\nDXD_WAIT_STATUS      DS       F\n\nDXD_DATE_TIME        DS       4F\nDXD_STCKCONV         STCKCONV MF=L\n\nDXD_RC               DS       H\nDXD_LINES            DS       H\n\nDXD_SELECTION        DS       X\n\nDXD_ATTR             DS       X\n\nDXD_FLAGS            DS       X\n$DXD_INIT            EQU      X'80'\n$LINE_CMD            EQU      X'40'\n$NEW_FILE            EQU      X'20'\n$CONFIRM_ALL         EQU      X'10'            ACTION CONFIRMED FOR ALL\n\nDXD_EDIT_WORK        DS       XL12\n\nDXD_USER             DS       0CL61\nDXD_UID              DS       CL10\n                     DS       C\nDXD_USER_NAME        DS       CL50\n\nDXD_GROUP            DS       0CL61\nDXD_GID              DS       CL10\n                     DS       C\nDXD_GROUP_NAME       DS       CL50\n\nDXD_MODE             DS       0CL10\nDXD_TYPE             DS       C\nDXD_O_PERMISSION     DS       CL3\nDXD_G_PERMISSION     DS       CL3\nDXD_W_PERMISSION     DS       CL3\n\nDXD_RECORD           DS       0D\nDXD_NAME_LENGTH      DS       H\nDXD_NAME             DS       CL256\nDXD_STAT_STATUS      DS       X\n$STATUS_OK           EQU      X'00'\n$STATUS_DELETED      EQU      X'80'\n$STATUS_TAGGED       EQU      X'40'\n$STATUS_ERROR        EQU      X'FF'\n                     BPXYSTAT DSECT=NO,LIST=YES\nDXD_RECORD_L         EQU      *-DXD_RECORD\n\nDXD_REAL_PATH        DS       CL256\n\nDXD_NEW_PATH_LENGTH  DS       F\nDXD_NEW_PATH         DS       CL512\n\n                     DAIRREQ  DSECT=NO\n                     DSPCREQ  DSECT=NO\n                     LOADREQ  DSECT=NO\n\nOSHDIR_WORK          DSECT\nOSHDIR_DXD_L         EQU      *-OSHDIR_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMMAND_DSECT     DSECT\nCOMMAND_LENGTH    DS       X\nCOMMAND_COMMAND   DS       CL8\nCOMMAND_ADDRESS   DS       AL4\nCOMMAND_L         EQU      *-COMMAND_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFDEF_DSECT        DSECT\nFDEF_DISP         DS       AL2          DISP TO DATA\nFDEF_DESC         DS       CL12         FIELD DESCRIPTION\nFDEF_TYPE         DS       C            FIELD TYPE\n$FDEF_CHARACTER   EQU      C'C'         .. CHARACTER\n$FDEF_DEV         EQU      C'D'         .. DEVICE\n$FDEF_HEX_FOUR    EQU      C'4'         .. 4 BYTE HEX\n$FDEF_FULLWORD    EQU      C'F'         .. FULLWORD\n$FDEF_GID         EQU      C'G'         .. GROUP ID\n$FDEF_MODE        EQU      C'M'         .. MODE\n$FDEF_HEX_ONE     EQU      C'1'         .. 1 BYTE HEX\n$FDEF_PATH        EQU      C'P'         .. PATH NAME\n$FDEF_TIME        EQU      C'T'         .. TIME\n$FDEF_UID         EQU      C'U'         .. USER ID\nFDEF_L            EQU      *-FDEF_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMP_CONTROL      DSECT\nDUMP_DCB          DS       0F,(DUMP_DCB_L)X\nDUMP_IO_AREA      DS       CL133\nDUMP_CONTROL_L    EQU      *-DUMP_CONTROL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC  CVT=YES\n         IBMMAC  DCBD=PO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYMODE  DSECT=YES,LIST=YES\n         BPXYFCTL  DSECT=NO,LIST=YES\n         BPXYFTYP  LIST=YES\n         BPXYGIDN  DSECT=YES,LIST=YES\n         BPXYGIDS  DSECT=YES,LIST=YES\n         BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSHDIR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSHEX": {"ttr": 5382, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x01\\x01\\t!\\x0f\\x01\\t6/\\x15)\\x02\\x08\\x02\\x0b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:29:01", "lines": 520, "newlines": 523, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSHEX                                                 *\n*                                                                     *\n*  Build main body for HEX                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHEX    CSECT\nOSHEX    AMODE 31\nOSHEX    RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSHEX,R15\n         B     INIT0000\nMODID    DC    CL8'OSHEX'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(HEXEND-OSHEX)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING DS1FMTID,SESS_DSCB             DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSHEX,R10                      DEFINE BASE\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0020\n         ICM   R2,15,SESS_DXD_ADDR\n         BNZ   ERR0030\n         LA    R0,OSHEX_DXD_L\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSHEX_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         ST    R13,4(,R2)                     SAVE R13\n         ST    R2,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING OSHEX_DXD,R13                  DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         OI    SESS_STATUS,$STATUS_HEX\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         MVC   DXD_PANEL,OS0001               NON VSAM PANEL\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM\n         BNO   INIT0010\n         MVC   DXD_PANEL,OS0008               VSAM PANEL\nINIT0010 DS    0H\n         LA    R1,DXD_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,DXD_VDATA_LENGTH            SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE VDATA ADDR\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0040\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA\nMAIN0050 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*        Clear VDATA                                                  *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         L     R0,DXD_VDATA_ADDR              BUFFER ADDRESS\n         L     R1,DXD_VDATA_LENGTH            BUFFER LENGTH\n         SR    R14,R14                        CLEAR R14\n         SR    R15,R15                        CLEAR R15\n         MVCL  R0,R14                         INITIALIZE VDATA BUFFER\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" the data and build the body of the SPF panel      *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_VDATA_ADDR              BUFFER ADDRESS\n         L     R7,DXD_VDEPTH                  NUMBER OF LINES\nMAIN0090 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BH    MAIN0140                       END OF RECORDS REACHED\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    MAIN0110                       NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         L     R3,DSPCREQ_RECORD_ADDR\n         L     R4,DSPCREQ_RECORD_LENGTH\n         CR    R4,R2                          BEYOND END OF RECORD?\n         BL    MAIN0110                       YES, NO DATA TO DISPLAY\n         BCTR  R2,0                           ADJUST FOR RELATIVE\n         AR    R3,R2                          1ST BYTE TO DISPLAY\n         SR    R4,R2                          LENGTH DISPLAYABLE\n         L     R14,DXD_VWIDTH                 COLUMNS AVAILABLE\n         LR    R15,R4                         COPY LENGTH OF DATA\n         SLL   R15,1                          DOUBLE IT\n         CR    R15,R14                        CAN IT BE DISPLAYED?\n         BNH   MAIN0100                       NO\n         LR    R15,R14                        LIMIT TO WIDTH\nMAIN0100 DS    0H\n         BCTR  R15,0                          FOR EXECUTE\n         UNPK  DXD_WORK_2+00(9),00(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+08(9),04(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+16(9),08(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+24(9),12(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+32(9),16(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+40(9),20(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+48(9),24(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+56(9),28(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+64(9),32(5,R3)      UNPACK\n         UNPK  DXD_WORK_2+72(9),36(5,R3)      UNPACK\n         TR    DXD_WORK_2,COMM_HEXCHAR        TRANSLATE\n         EX    R15,MVC_01                     COPY DATA\nMAIN0110 DS    0H\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0120                    MINUS 1 LINE\n         L     R1,DSPCREQ_RECORD_NBR\n         CVD   R1,COMM_DWORD\n         MVC   DXD_WORK_1,EDIT_WORD_1\n         ED    DXD_WORK_1,COMM_DWORD+3\n         MVC   SPF_RECORD_TO,DXD_WORK_1+1\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         B     MAIN0140\nMAIN0120 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          CURRENT RECORD NUMBER\nMAIN0130 DS    0H\n         A     R1,F1                          ADD 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE NEW RECORD NUMBER\n         B     MAIN0090                       GET/PROCESS NEXT RECORD\nMAIN0140 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BL    MAIN0200\n* ------------------------------------------------------------------- *\n*        End of data reached and there is room for the                *\n*        \"End of data\" line                                           *\n* ------------------------------------------------------------------- *\n         MVC   DXD_WORK_2(EOF_01_L),EOF_01\n         L     R1,DATASPACE_1_LAST_RECORD     NUMBER OF RECORDS READ\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   DXD_WORK_2+(EOF_01_RECORDS-EOF_01)(L'EOF_01_RECORDS),DXD++\n               _WORK_1+1\n         L     R1,DATASPACE_1_BYTES           NUMBER OF BYTES STORED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   DXD_WORK_2+(EOF_01_BYTES-EOF_01)(L'EOF_01_BYTES),DXD_WOR+\n               K_1+1\n         LA    R1,EOF_01_L                    LENGTH OF TRAILER LINE\n         C     R1,DXD_VWIDTH                  GREATER THAN WIDTH?\n         BNH   MAIN0150                       NO\n         L     R1,DXD_VWIDTH                  LIMIT TO SCREEN WIDTH\nMAIN0150 DS    0H\n         BCTR  R1,0                           FOR EXECUTE\n         EX    R1,MVC_01                      COPY TRAILER LINE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         L     R15,COMM_V_OSDSCB\n         BALR  R14,R15                        BUILD DSCB DATA\n         ITRACE ID=DISPLAY\n         MVC   DXD_PANEL,OS0001               NON VSAM PANEL\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM\n         BNO   MAIN0210\n         MVC   DXD_PANEL,OS0008               VSAM PANEL\nMAIN0210 DS    0H\n         MVC   SESS_DISP_PANEL,DXD_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT WANTED?\n         BNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   EXIT0000                       YES\n         OC    SESS_RC,SESS_RC                RC=0\n         BZ    MAIN0500                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for commands                                           *\n*                                                                     *\n*      NOTE:  Horizontal scrolling is 50% of the screen width         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=CMDS,                                               +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         L     R1,SPF_ZSCROLLN\n         ST    R1,SESS_VERTICAL_SCROLL\n         SRL   R1,1\n         ST    R1,SESS_HORIZONTAL_SCROLL\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    MAIN0510                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    MAIN0530                       YES\n         CLI   SPF_ZVERB,C'L'                 LEFT?\n         BE    MAIN0550                       YES\n         CLI   SPF_ZVERB,C'R'                 RIGHT?\n         BE    MAIN0580                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    MAIN0620                       YES\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    MAIN0630                       YES\n         OC    SPF_ZCMD,COMM_BLANKS           'TRANSLATE' TO UPPER CASE\n         CLC   SPF_ZCMD,COMM_BLANKS           ANY COMMAND?\n         BE    MAIN0070                       NO\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,COMM_OPERANDS_NBR         NUMBER OF OPERANDS\n         BZ    MAIN0200                       NO OPERANDS\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID,0\n         MVI   COMM_MSG_ID+1,1\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0510 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n         L     R2,DATASPACE_1_LAST_RECORD     HIGHEST RECORD AVAILABLE\n         S     R2,DXD_VDEPTH                  MINUS LINES ON DISPLAY\n         A     R2,F2                          PLUS 2\n         C     R2,F1                          STILL HAVE AT LEAST 1?\n         BNL   MAIN0520                       YES\n         L     R2,F1                          FORCE RECORD 1\nMAIN0520 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR\n         B     MAIN0050                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0530 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                    MAX?\n         BE    MAIN0510                             YES\n         L     R1,SESS_VERTICAL_SCROLL              NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST DISPLAYED     D\n         AR    R2,R1                                PLUS SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD           BEYOND END OF DATA?\n         BH    MAIN0540                             YES\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE FIRST RECORD BR\n         B     MAIN0050                             REBUILD EVERYTHING\nMAIN0540 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  MINUS FIRST         AYED\n         C     R2,DXD_VDEPTH                        MORE THAN ONE SCRN?\n         BNH   MAIN0070                             NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST STORED\n         S     R2,DXD_VDEPTH                        MINUS 1 SCREEN\n         A     R2,F2                                PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  SET FIRST\n         B     MAIN0050                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL LEFT                                                  *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=LEFT,                                               +\n               DATA1=(SESS_HORIZONTAL_SCROLL,2)\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    MAIN0560                       YES\n         L     R1,SESS_HORIZONTAL_SCROLL      COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         SR    R2,R1                          MINUS COLUMNS TO SCROLL\n         C     R2,F1                          AT LEAST 1 COLUMN LEFT?\n         BNL   MAIN0570                       NO\nMAIN0560 DS    0H\n         L     R2,F1                          STOP AT COLUMN 1\nMAIN0570 DS    0H\n         ITRACE ID=LEFT_1,                                             +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0050                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL RIGHT                                                 *\n* ------------------------------------------------------------------- *\nMAIN0580 DS    0H\n         ITRACE ID=RIGHT,                                              +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,4),             +\n               DATA2=(SESS_HORIZONTAL_SCROLL,4)\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    MAIN0610                       YES\n         L     R1,SESS_HORIZONTAL_SCROLL      COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         AR    R2,R1                          PLUS COLUMNS TO SCROLL\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS  HFS?\n         BO    MAIN0600                       YES.. ALLOW ANYTHING\n         OC    DS1LRECL,DS1LRECL              LRECL = ZERO?\n         BZ    MAIN0590                       USE BLOCK SIZE FOR LIMIT\n         CH    R2,DS1LRECL                    MORE THAN RECORD SIZE?\n         BH    MAIN0050                       YES.. STAY PUT\n         B     MAIN0600\nMAIN0590 DS    0H\n         CH    R2,DS1BLKL                     MORE THAN BLOCK SIZE?\n         BH    MAIN0050                       YES.. STAY PUT\nMAIN0600 DS    0H\n         ITRACE ID=RIGHT_1,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0050                       REBUILD EVERYTHING\nMAIN0610 DS    0H\n         LH    R2,DS1LRECL                    RECORD LENGTH\n         S     R1,DXD_VWIDTH                  MINUS 1 SCREEN WIDTH\n         A     R1,F1                          PLUS 1\n         ITRACE ID=RIGHT_2,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0050                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0620 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         B     MAIN0050                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0630 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0620                            YES\n         L     R1,SESS_VERTICAL_SCROLL             RECORDS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST DISPLAYED      D\n         SR    R2,R1                               MINUS SCROLL AMOUNT\n         C     R2,DATASPACE_1_FIRST_RECORD         LESS THAN FIRST?\n         BNL   MAIN0640                            NO\n         L     R2,DATASPACE_1_FIRST_RECORD         LIMIT TO FIRST RECD\nMAIN0640 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR\n         B     MAIN0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\nERR0020  DS    0H\n         DC    H'0'\nERR0030  DS    0H\n         DC    H'0'\nERR0040  DS    0H\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0000\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         ICM   R1,15,DXD_VDATA_ADDR           VDATA ADDRESS\n         BZ    CLEAN010                       NOT GETMAINED\n         L     R0,DXD_VDATA_LENGTH            VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\nCLEAN010 DS    0H\n         LA    R0,OSHEX_DXD_L                 WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                     RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R8),DXD_WORK_2             COPY DATA TO BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1              DC    F'1'\nF2              DC    F'2'\n\nOS0001          DC    CL8'OS0001'\nOS0008          DC    CL8'OS0008'\n\nEDIT_WORD_1     DC    X'40202020202020202120'\nEOF_01          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'---- END OF DATA ----'\nEOF_01_RECORDS  DC    CL9' '\n                DC    C' RECORDS, '\nEOF_01_BYTES    DC    CL9' '\n                DC    C' BYTES ------------------'\nEOF_01_L        EQU   *-EOF_01\n                LTORG\n\nHEXEND          EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHEX_DXD       DSECT\n                COPY     DXDPREF\n\nDXD_VDATA_ADDR   DS      A\nDXD_VDATA_LENGTH DS      F\n\nDXD_VWIDTH      DS       F\nDXD_VDEPTH      DS       F\n\nDXD_RC          DS       H\n\nDXD_PANEL       DS       CL8\n\nDXD_WORK_1      DS       CL10\nDXD_WORK_2      DS       CL100\n                DSPCREQ  DSECT=NO\nOSHEX_DXD       DSECT\nOSHEX_DXD_L     EQU      *-OSHEX_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY           DSECT\n                IBMMAC VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY REGEQU\n                END  OSHEX\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSHFSDIR": {"ttr": 3087, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00H\\x01\\t!\\x0f\\x01\\t3o\\x08\\x13\\x01\\x1e\\x01\\x1d\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-02T08:13:48", "lines": 286, "newlines": 285, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSHFSDIR                                              *\n*                                                                     *\n*  Read HFS directories                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHFSDIR CSECT\nOSHFSDIR AMODE 31\nOSHFSDIR RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSHFSDIR,R15\n         B     INIT0000\nMODID    DC    CL8'OSHFSDIR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSHFSDIREND-OSHFSDIR)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSHFSDIR,R10                   DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSHFSDIR_WORK_L,                                     +\n               LOC=ANY\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSHFSDIR_WORK,R13              DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID                COPY CSECT NAME\n         ITRACE ID=ENTRY\n         MVC   SESS_DATA_LOADER,MODID         IDENTIFY WHO LOADED DATA\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         MVC   DSPCREQ_RECORD_NBR,F1\n         LA    R1,WORK_RECORD\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,WORK_RECORD_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         MVC   SESS_FORMAT,HFSDIR\n         MVC   SESS_DEFAULT_FORMAT,HFSDIR\n* ------------------------------------------------------------------- *\n*        OPEN the directory                                           *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=OPEN_DIR,                                           +\n               DATA1=(SESS_PATH_LENGTH,4),                             +\n               DATA2=(SESS_PATH,8)\n         CALL  BPX1OPD,                                                +\n               (SESS_PATH_LENGTH,                                      +\n               SESS_PATH,                                              +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=OPEN_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         ICM   R1,15,WORK_RETURN_VALUE\n         BM    ERR0010                        ERROR\n         ST    R1,WORK_FILE_DESCRIPTOR\n         ITRACE ID=FILEDESC,                                           +\n               RDATA1=R1\n         LA    R0,SESS_PATH                   PATH USER ENTERED\n         LA    R1,SESS_PATH_LENGTH            LENGTH OF PATH ENTERED\n         LA    R14,WORK_PATH                  WORK AREA FOR PATH\n         LA    R15,L'WORK_PATH                LENGTH OF WORK AREA\n         ICM   R15,8,COMM_BLANKS              PAD CHARACTER\n         MVCL  R14,R0                         COPY BASE DIRECTORY PATH\n         LA    R14,WORK_PATH                  PATH WORK AREA\n         L     R15,SESS_PATH_LENGTH           LENGTH USER ENTERED\n         AR    R14,R15                        COMPUTE ADDRESS\n         BCTR  R14,0                          .. FOR LAST CHARACTER\n         CLI   0(R14),C'/'                    ENDING SLASH?\n         BE    INIT0020                       YES\n         LA    R14,1(,R14)\n         MVI   0(R14),C'/'                    INSERT SLASH\n         LA    R15,1(,R15)                    ADD 1 TO LENGTH\nINIT0020 DS    0H\n         LA    R14,1(,R14)                    PLUS 1\n         ST    R14,WORK_PATH_X                SAVE ADDRESS\n         ST    R15,WORK_PREFIX_LENGTH         SAVE PREFIX LENGTH\n         ITRACE ID=PREFIX,                                             +\n               RDATA1=R14,                                             +\n               RDATA2=R15\n* ------------------------------------------------------------------- *\n*        READ a directory block                                       *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=READ,                                               +\n               DATA1=(WORK_FILE_DESCRIPTOR,4),                         +\n               DATA2=(SESS_IO_AREA,4)\n         CALL  BPX1RDD,                       READ DIRECTORY           +\n               (WORK_FILE_DESCRIPTOR,         .. FILE DESCRIPTOR       +\n               SESS_IO_AREA,                  .. BUFFER ADDRESS        +\n               F0,                            .. ALET (HOME space)     +\n               COMM_IO_SIZE,                  .. BUFFER SIZE           +\n               WORK_RETURN_VALUE,             ..                       +\n               WORK_RETURN_CODE,              ..                       +\n               WORK_REASON_CODE),             ..                       +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=READ_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         ICM   R9,15,WORK_RETURN_VALUE\n         BM    ERR0020                        NEGATIVE.. ERROR\n         BZ    MAIN0050                       ZERO.. END OF DIRECTORY\n         L     R8,SESS_IO_AREA                FIRST ENTRY IN BUFFER\nMAIN0020 DS    0H\n         CLC   X_00040000,0(R8)               END OF DIRECTORY?\n         BE    MAIN0050                       YES\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         BL    MAIN0030                       READ UNTIL START REACHED\n         LH    R1,2(R8)                       LENGTH OF NAME\n         CH    R1,H256                        TOO LONG?\n         BH    ERR0030                        YES\n         STH   R1,WORK_NAME_LENGTH            SET LENGTH\n         BCTR  R1,0\n         MVC   WORK_NAME,COMM_BLANKS          INITIALIZE NAME\n         EX    R1,NAME_MVC                    COPY PATH NAME\n         L     R1,WORK_PATH_X\n         MVC   0(L'WORK_NAME,R1),WORK_NAME\n         L     R1,WORK_PREFIX_LENGTH          PATH PREFIX LENGTH\n         AH    R1,WORK_NAME_LENGTH            PLUS NAME LENGTH\n         ST    R1,WORK_PATH_LENGTH            TOTAL LENGTH\n         MVI   WORK_STAT_STATUS,$WORK_STATUS_OK\n         ITRACE ID=GET_STAT,                                           +\n               DATA1=WORK_PATH,                                        +\n               DATA2=(WORK_PATH_LENGTH,4)\n         CALL  BPX1LST,                                                +\n               (WORK_PATH_LENGTH,                                      +\n               WORK_PATH,                                              +\n               STAT_LENGTH,                                            +\n               STAT,                                                   +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=STAT_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         TM    WORK_RETURN_VALUE,X'80'        SUCCESSFUL?\n         BNO   MAIN0030                       YES\n         OI    WORK_STAT_STATUS,$WORK_STATUS_ERROR\nMAIN0030 DS    0H\n         LA    R1,DSPCREQ                     OSDSPACE PARMS\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        STORE THIS RECORD\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_RECORDS\n         BNO   MAIN0040                       DON'T CHECK\n         CLC   DSPCREQ_RECORD_NBR,SESS_NUMBER\n         BNL   MAIN0050                       TIME TO STOP\nMAIN0040 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          RECORD NUMBER\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE RECORD NUMBER\n         AH    R8,0(R8)                       NEXT ENTRY\n         BCT   R9,MAIN0020                    PROCESS NEXT ENTRY\n         B     MAIN0010                       READ NEXT BLOCK\nMAIN0050 DS    0H\n         ITRACE ID=CLOSE\n         CALL  BPX1CLD,                       CLOSE DIRECTORY          +\n               (WORK_FILE_DESCRIPTOR,         .. FILE DESCRIPTOR       +\n               WORK_RETURN_VALUE,             ..                       +\n               WORK_RETURN_CODE,              ..                       +\n               WORK_REASON_CODE),             ..                       +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         ICM   R9,15,WORK_RETURN_VALUE\n         BM    ERR0040                        NEGATIVE.. ERROR\n         SR    R3,R3                          SET RC TO ZERO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         LA    R3,1\n         B     ERR1000\nERR0020  DS    0H\n         LA    R3,2\n         B     ERR1000\nERR0030  DS    0H\n         LA    R3,3\n         MVC   COMM_INFO_01(2),2(R8)\n         MVC   COMM_INFO_02,4(R8)\n         B     ERR1010\nERR0040  DS    0H\n         LA    R3,5\nERR1000  DS    0H\n         MVC   COMM_INFO_01(L'WORK_RETURN_VALUE),WORK_RETURN_VALUE\n         MVC   COMM_INFO_02(L'WORK_RETURN_CODE),WORK_RETURN_CODE\n         MVC   COMM_INFO_03(L'WORK_REASON_CODE),WORK_REASON_CODE\nERR1010  DS    0H\n         STCM  R3,3,COMM_MSG_ID\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         LA    R3,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSHFSDIR_WORK_L\n         L     R14,12(,R13)\n         LR    R15,R3                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\nNAME_MVC MVC   WORK_NAME(0),4(R8)\nPATH_MVC MVC   COMM_INFO_01+8(0),WORK_PATH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF0                   DC      F'0'\nF1                   DC      F'1'\nSTAT_LENGTH          DC      A(STAT#LENGTH)\nH64                  DC      H'64'\nH256                 DC      H'256'\nHFSDIR               DC      CL8'HFSDIR'\nX_00040000           DC      X'00040000'\n                     LTORG\n\nOSHFSDIREND          EQU     *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHFSDIR_WORK        DSECT\n                     COPY    DXDPREF\nWORK_FILE_DESCRIPTOR DS      F\nWORK_RETURN_VALUE    DS      F\nWORK_RETURN_CODE     DS      F\nWORK_REASON_CODE     DS      F\nWORK_PREFIX_LENGTH   DS      F\nWORK_PATH_LENGTH     DS      F\nWORK_PATH_X          DS      A\nWORK_HFS_PARMLIST    DS      10F\n\n                     DSPCREQ DSECT=NO\n\nWORK_RECORD          DS      0D\nWORK_NAME_LENGTH     DS      H\nWORK_NAME            DS      CL256\nWORK_STAT_STATUS     DS      X           STATUS OF BYXYSTAT INFO\n$WORK_STATUS_OK      EQU     X'00'       .. BPXYSTAT INFO IS VALID\n$WORK_STATUS_ERROR   EQU     X'FF'       .. ERROR DURING LSTAT CALL\n                     BPXYSTAT DSECT=NO,LIST=YES\nWORK_RECORD_L        EQU     *-WORK_RECORD\n\nWORK_PATH            DS      CL512\n\nOSHFSDIR_WORK_L      EQU     *-OSHFSDIR_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY REGEQU\n$BUFFSIZE     EQU  65535\n              END  OSHFSDIR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSHFSSEQ": {"ttr": 3080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x001\\x01\\t!\\x0f\\x01\\t3o\\x08\\x12\\x01\\x14\\x01\\x13\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-02T08:12:31", "lines": 276, "newlines": 275, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSHFSSEQ                                              *\n*                                                                     *\n*  Read HFS files                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHFSSEQ CSECT\nOSHFSSEQ AMODE 31\nOSHFSSEQ RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSHFSSEQ,R15\n         B     INIT0000\nMODID    DC    CL8'OSHFSSEQ'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSHFSSEQEND-OSHFSSEQ)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING OSHFSSEQ,R10                     DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSHFSSEQ_WORK_L,                                     +\n               LOC=ANY\n         ST    R13,4(,R1)                       SAVE R13\n         ST    R1,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING OSHFSSEQ_WORK,R13                DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID                  COPY CSECT NAME\n         ITRACE ID=ENTRY\n         MVC   SESS_DATA_LOADER,MODID           WHO LOADED DATA\nINIT0010 DS    0H\n         LA    R1,DATASPACE_1                   USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?\n         BO    INIT0020                         YES\n         MVC   SESS_FORMAT,HFS\n         MVC   SESS_DEFAULT_FORMAT,HFS\n         B     INIT0030\nINIT0020 DS    0H\n         MVC   SESS_FORMAT,EDIT\n         MVC   SESS_DEFAULT_FORMAT,EDIT\nINIT0030 DS    0H\n         LA    R2,SESS_PATH\n         LA    R3,SESS_PATH_LENGTH\n         LA    R4,SESS_STAT\n         USING STAT,(R4)\n         USING S_MODE,ST_MODE\n         CLI   S_TYPE,FT_SYMLINK                SYMLINK?\n         BNE   INIT0040                         NO\n         LA    R2,SESS_REAL_PATH\n         LA    R3,SESS_REAL_PATH_LENGTH\n         LA    R4,SESS_REAL_STAT\n* ------------------------------------------------------------------- *\n*        OPEN the file                                                *\n* ------------------------------------------------------------------- *\nINIT0040 DS    0H\n         ITRACE ID=OPEN,                                               +\n               RDATA1=R2,                                              +\n               RDATA2=R4\n         XC    O_FLAGS,O_FLAGS                  INITIALIZE ALL FLAGS\n         MVI   O_FLAGS4,O_RDONLY\n         CALL  BPX1OPN,                                                +\n               ((R3),                                                  +\n               (R2),                                                   +\n               O_FLAGS,                                                +\n               F0,                                                     +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=OPEN_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         TM    WORK_RETURN_VALUE,X'80'          SUCCESSFUL?\n         BO    ERR0010                          NO\n         MVC   WORK_FILE_DESCRIPTOR,WORK_RETURN_VALUE\n         ITRACE ID=FILEDESC,                                           +\n               DATA1=(WORK_FILE_DESCRIPTOR,4)\n* ------------------------------------------------------------------- *\n*        READ                                                         *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=READ,                                               +\n               DATA1=(WORK_FILE_DESCRIPTOR,4),                         +\n               DATA2=(SESS_IO_AREA,4)\n         CALL  BPX1RED,                         READ                   +\n               (WORK_FILE_DESCRIPTOR,                                  +\n               SESS_IO_AREA,                                           +\n               F0,                                                     +\n               COMM_IO_SIZE,                                           +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=READ_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         ICM   R9,15,WORK_RETURN_VALUE\n         BM    ERR0020                          NEGATIVE.. ERROR\n         BZ    MAIN0090                         ZERO..\n         L     R8,SESS_IO_AREA                  I/O AREA ADDRESS\n         CLC   FT_CCSID,=AL2(FT_BINARYTAG)\n         BE    MAIN0050                         BINARY\nMAIN0020 DS    0H\n         ITRACE ID=FIND_NL,                     SEARCH FOR NEW LINE    +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         LR    R14,R8                           STARTING POINT\n         LR    R15,R9                           MAXIMUM LENGTH\nMAIN0030 DS    0H\n         CLI   0(R14),NEW_LINE                  NEW LINE?\n         BE    MAIN0040                         YES\n         LA    R14,1(,R14)                      NEXT\n         BCT   R15,MAIN0030                     LOOP\nMAIN0040 DS    0H\n         LR    R0,R9                            STARTING LENGTH\n         SR    R0,R15                           LENGTH LEFT\n         ST    R0,DSPCREQ_RECORD_LENGTH\n         B     MAIN0060\nMAIN0050 DS    0H\n         ST    R9,DSPCREQ_RECORD_LENGTH\nMAIN0060 DS    0H\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         ST    R8,DSPCREQ_RECORD_ADDR           RECORD ADDRESS\n         L     R1,DSPCREQ_RECORD_NBR            RECORD NUMBER\n         LA    R1,1(,R1)                        PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR            SAVE RECORD NUMBER\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         BL    MAIN0080                         SKIP UNTIL START\n         LA    R1,DSPCREQ                       OSDSPACE PARMS\n         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT\n         BALR  R14,R15                          STORE THIS RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   MAIN0100                         NO\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_RECORDS\n         BNO   MAIN0070                         NO LIMIT..\n         CLC   DSPCREQ_RECORD_NBR,SESS_NUMBER\n         BNL   MAIN0110                         TIME TO STOP\nMAIN0070 DS    0H\n         L     R1,DSPCREQ_RECORD_LENGTH\n         CLC   FT_CCSID,=AL2(FT_BINARYTAG)\n         BE    MAIN0080                         BINARY\n         LA    R1,1(,R1)                        PLUS LENGTH OF LF\nMAIN0080 DS    0H\n         ITRACE ID=NEXTRECD,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         AR    R8,R1                            UPDATE BUFFER ADDRESS\n         SR    R9,R1                            UPDATE LENGTH REMAINING\n         BH    MAIN0020                         NEXT RECORD\n         B     MAIN0010                         READ ANOTHER BUFFER\nMAIN0090 DS    0H\n         ITRACE ID=ZERO\n         B     MAIN0110\nMAIN0100 DS    0H\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL\n         BE    MAIN0110                         YES\n         ITRACE ID=DSPC_ERR,                                           +\n               DATA1=(DSPCREQ_RC,1)\n         DC    H'0'\nMAIN0110 DS    0H\n         ITRACE ID=CLOSE\n         CALL  BPX1CLO,                                                +\n               (WORK_FILE_DESCRIPTOR,                                  +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         ICM   R9,15,WORK_RETURN_VALUE\n         BM    ERR0050                          NEGATIVE.. ERROR\n         SR    R3,R3                            SET RC TO ZERO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         LA    R3,1\n         B     ERR1000\nERR0020  DS    0H\n         LA    R3,2\n         B     ERR1000\nERR0030  DS    0H\n         LA    R3,3\n         MVC   COMM_INFO_01(2),2(R8)\n         MVC   COMM_INFO_02,4(R8)\n         B     ERR1010\nERR0040  DS    0H\n         LA    R3,4\n         B     ERR1000\nERR0050  DS    0H\n         LA    R3,5\nERR1000  DS    0H\n         MVC   COMM_INFO_01,WORK_RETURN_VALUE\n         MVC   COMM_INFO_02,WORK_RETURN_CODE\n         MVC   COMM_INFO_03,WORK_REASON_CODE\nERR1010  DS    0H\n         STCM  R3,3,COMM_MSG_ID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         LA    R3,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(,R13)            RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSHFSSEQ_WORK_L\n         L     R14,12(,R13)\n         LR    R15,R3                  SET RC\n         LM    R0,R12,20(R13)          RESTORE REMAINING REGISTERS\n         BR    R14                     RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF0                   DC      F'0'\nEDIT                 DC      CL8'EDIT'\nHFS                  DC      CL8'HFS'\n                     LTORG\n\nOSHFSSEQEND          EQU     *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHFSSEQ_WORK        DSECT\n                     COPY    DXDPREF\nWORK_FILE_DESCRIPTOR DS      F\nWORK_RETURN_VALUE    DS      F\nWORK_RETURN_CODE     DS      F\nWORK_REASON_CODE     DS      F\nWORK_HFS_PARMLIST    DS      10F\n\n                     BPXYOPNF DSECT=NO,LIST=YES\n                     DSPCREQ  DSECT=NO\n\nOSHFSSEQ_WORK_L      EQU     *-OSHFSSEQ_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          BPXYSTAT DSECT=YES,LIST=YES\n          BPXYMODE DSECT=YES,LIST=YES\n          BPXYFTYP LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          COPY     REGEQU\nNEW_LINE  EQU      X'15'\n$BUFFSIZE EQU      65535\n          END      OSHFSSEQ\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSHFSTYP": {"ttr": 14345, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00F\\x01\\t!\\x0f\\x01\\x10\\x01\\x9f\\x16C\\x00\\xd7\\x00\\xd2\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-19T16:43:46", "lines": 215, "newlines": 210, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSHFSTYP                                              *\n*                                                                     *\n*  Determine HFS file type                                            *\n*                                                                     *\n*                                                                     *\n*  The area returned by the STAT call is mapped by BPXYSTAT.          *\n*  The MODE (file type and permissions) is mapped by BPXYMODE.        *\n*  File types are defined in BPXYFTYP.                                *\n*                                                                     *\n*  To indicate a new (empty) file, the file type is set to X'FF'.     *\n*  As of 11/28/06 X'FF' is not a valid file type and should not       *\n*  conflict with a valid type.                                        *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHFSTYP CSECT\nOSHFSTYP AMODE 31\nOSHFSTYP RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSHFSTYP,R15\n         B     INIT0000\nMODID    DC    CL8'OSHFSTYP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSHFSTYPEND-OSHFSTYP)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING OSHFSTYP,R10                     DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSHFSTYP_WORK_L,                                     +\n               LOC=ANY\n         ST    R13,4(,R1)                       SAVE R13\n         ST    R1,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING OSHFSTYP_WORK,R13                DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID                  COPY CSECT NAME\n         ITRACE ID=ENTRY\n         MVC   COMM_MSG_CSECT,MODID\n* ------------------------------------------------------------------- *\n*        Determine type for path user entered                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=STAT,                                               +\n               DATA1=(SESS_PATH_LENGTH,4),                             +\n               DATA2=SESS_PATH\n         CALL  BPX1LST,                         CALL STAT              +\n               (SESS_PATH_LENGTH,                                      +\n               SESS_PATH,                                              +\n               STAT_LENGTH,                                            +\n               SESS_STAT,                                              +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=STAT_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         TM    WORK_RETURN_VALUE,X'80'          SUCCESSFUL?\n         BO    MAIN0100                         NO\nPATH     USING STAT,SESS_STAT\n         ITRACE ID=PATHTYPE,                                           +\n               DATA1=(PATH.ST_MODE,4)\n         USING S_MODE,PATH.ST_MODE\n         CLI   S_TYPE,FT_SYMLINK                SYMBOLIC LINK?\n         BNE   MAIN0010                         NO\n* ------------------------------------------------------------------- *\n*        Path is a symbolic link, read real path name                 *\n* ------------------------------------------------------------------- *\n         LA    R1,SESS_REAL_PATH                BUFFER FOR REAL PATH\n         ST    R1,WORK_REAL_PATH_ADDR\n         ITRACE ID=READLINK,                                           +\n               DATA1=(SESS_PATH_LENGTH,4),                             +\n               DATA2=SESS_PATH\n         CALL  BPX1RDL,                         READ LINK              +\n               (SESS_PATH_LENGTH,                                      +\n               SESS_PATH,                                              +\n               F256,                                                   +\n               WORK_REAL_PATH_ADDR,                                    +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=LINK_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,4)\n         TM    WORK_RETURN_VALUE,X'80'          SUCCESSFUL?\n         BO    ERR0020                          NO\n         MVC   SESS_REAL_PATH_LENGTH,WORK_RETURN_VALUE\n* ------------------------------------------------------------------- *\n*        Determine file type for real path                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=REALSTAT,                                           +\n               DATA1=(SESS_REAL_PATH_LENGTH,4),                        +\n               DATA2=SESS_REAL_PATH+00\n         ITRACE ID=+,                                                  +\n               DATA1=SESS_REAL_PATH+08,                                +\n               DATA2=SESS_REAL_PATH+16\n         CALL  BPX1LST,                         CALL STAT              +\n               (SESS_REAL_PATH_LENGTH,                                 +\n               SESS_REAL_PATH,                                         +\n               STAT_LENGTH,                                            +\n               SESS_REAL_STAT,                                         +\n               WORK_RETURN_VALUE,                                      +\n               WORK_RETURN_CODE,                                       +\n               WORK_REASON_CODE),                                      +\n               VL,                                                     +\n               MF=(E,WORK_HFS_PARMLIST)\n         ITRACE ID=STAT_RC,                                            +\n               DATA1=(WORK_RETURN_VALUE,4),                            +\n               DATA2=(WORK_RETURN_CODE,8)\n         TM    WORK_RETURN_VALUE,X'80'          SUCCESSFUL?\n         BO    ERR0010                          NO\nREALPATH USING STAT,SESS_REAL_STAT\n         ITRACE ID=REALTYPE,                                           +\n               DATA1=(REALPATH.ST_MODE,4)\nMAIN0010 DS    0H\n         SR    R3,R3                            SET RC TO ZERO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         CLC   WORK_RETURN_CODE,ENOENT_CODE     NO SUCH FILE?\n         BNE   ERR0010                          NO.. OTHER ERROR\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?\n         BNO   ERR0010                          NO.. DOES NOT EXIST\n         ITRACE ID=SET_XFF\n         MVI   PATH.ST_MODE,X'FF'               SET FILE TYPE TO X'FF'\n         SR    R3,R3                            SET RC TO ZERO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         LA    R3,1\n         B     ERR1000\nERR0020  DS    0H\n         LA    R3,2\nERR1000  DS    0H\n         MVC   COMM_INFO_01,WORK_RETURN_VALUE\n         MVC   COMM_INFO_02,WORK_RETURN_CODE\n         MVC   COMM_INFO_03,WORK_REASON_CODE\nERR1010  DS    0H\n         STCM  R3,3,COMM_MSG_ID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         LA    R3,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSHFSTYP_WORK_L\n         L     R14,12(,R13)\n         LR    R15,R3                           SET RC\n         LM    R0,R12,20(R13)                   RESTORE REGISTERS\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSTAT_LENGTH          DC      A(STAT#LENGTH)\nF256                 DC      F'256'\n*\n*\n*\n*   FOLLOW CODE IS IN SYS1.MACLIB(BPXYERNO)\nENOENT_CODE          DC      A(ENOENT)          NO SUCH FILE\n                     LTORG\n\nOSHFSTYPEND          EQU     *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSHFSTYP_WORK        DSECT\n                     COPY    DXDPREF\nWORK_REAL_PATH_ADDR  DS      A\nWORK_RETURN_VALUE    DS      F\nWORK_RETURN_CODE     DS      F\nWORK_REASON_CODE     DS      F\nWORK_HFS_PARMLIST    DS      10F\nOSHFSTYP_WORK_L      EQU     *-OSHFSTYP_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n         BPXYMODE DSECT=YES,LIST=YES\n         BPXYFTYP LIST=YES\n         BPXYERNO LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSHFSTYP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLANG": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\t!\\x0f\\x01\\t!\\x8f\\x168\\x00\\xd4\\x00\\xd4\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-08-06T16:38:14", "lines": 212, "newlines": 212, "modlines": 0, "user": "RLRICE"}, "text": "* --------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: OSLANG                                                *\n*                                                                     *\n*  To allow On Screen to be about as independant of national          *\n*  languages, few messages are hard-coded.  The messages for each     *\n*  national language can be interpreted/customized for that national  *\n*  language.                                                          *\n*                                                                     *\n*  Since the DCB and some other I/O related stuff needs to be below   *\n*  the 24-bit line, it was more straight-forward to link this         *\n*  separately and LOAD/DELETE it at run time.                         *\n*                                                                     *\n*                                                                     *\n*  At run-time, On Screen can allow the users to select the national  *\n*  language they want. The name of the national language needs to     *\n*  be associated with the name of the load module with the messages   *\n*  for that national lanuguage.  For example US english messages      *\n*  are in load module OSMSGUS.                                        *\n*                                                                     *\n*  This program has two functions.                                    *\n*     Return the name(s) of the \"known\" national languages            *\n*     Return the load module name for a requested national language.  *\n*                                                                     *\n*                                                                     *\n*  \"Known\" languages are defined in the On Screen options data set.   *\n*                                                                     *\n*                                                                     *\n*  The format of a \"language\" defintion is:                           *\n*                                                                     *\n*       columns                                                       *\n*         1- 8       Literal \"LANGUAGE\"                               *\n*         9-16       Name of the national language                    *\n*        17-24       Name of load module                              *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLANG   CSECT\nOSLANG   AMODE 31\nOSLANG   RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSLANG,R15\n         B     INIT0000\nMODID    DC    CL8'OSLANG'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLANGEND-OSLANG)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                 SAVE REGS\n         LR    R10,R15                         COPY ENTRY POINT ADDR\n         DROP  R15\n         USING OSLANG,R10                      DEFINE BASE\n         LR    R9,R1                           SAVE PARM BLOCK ADDRESS\n         USING LANGREQ,R9                      DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSLANG_WORK_L,                                       +\n               LOC=BELOW\n         ST    R13,4(,R1)                      SAVE R13\n         ST    R1,8(,R13)                      CHAIN SAVE AREA\n         LR    R13,R1                          COPY WORK AREA ADDRESS\n         USING OSLANG_WORK,R13\n         MVC   DXD_CSECT,MODID\n         USING IHADCB,WORK_DCB\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9,                                              +\n               DATA2=LANG_NAME\n         MVC   WORK_DCB(READDCB_L),READDCB\n         MVC   WORK_DCBE(DCBE_L),DCBE_I\n         LA    R1,WORK_DCBE\n         STCM  R1,7,DCBDCBE\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         OPEN  WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         CLI   LANG_FUNC,$LANG_NBR            NBR OF DEFINED LANGUAGES?\n         BE    LANG0100                       YES\n         CLI   LANG_FUNC,$LANG_LIST           RETURN LIST OF LANGUAGES\n         BE    LANG0120                       YES\n         CLI   LANG_FUNC,$LANG_LOOKUP\n         BE    LANG0140                       YES\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        Return number of languages                                   *\n* ------------------------------------------------------------------- *\nLANG0100 DS    0H\n         ITRACE ID=NBR\n         SR    R2,R2                          CLEAR FOR COUNTER\nLANG0110 DS    0H\n         GET   WORK_DCB,WORK_IO_AREA          READ A RECORD\n         CLC   WORK_TYPE,TYPE_LANGUAGE        LANGUAGE DEFINITION?\n         BNE   LANG0110                       NO\n         LA    R2,1(,R2)                      PLUS 1\n         B     LANG0110\n* ------------------------------------------------------------------- *\n*        Return list of languages                                     *\n* ------------------------------------------------------------------- *\nLANG0120 DS    0H\n         ITRACE ID=LIST\n         SR    R2,R2                          CLEAR FOR COUNTER\n         L     R3,LANG_LIST                   AREA FOR RETURNED LIST\nLANG0130 DS    0H\n         GET   WORK_DCB,WORK_IO_AREA          READ A RECORD\n         CLC   WORK_TYPE,TYPE_LANGUAGE        LANGUAGE DEFINITION?\n         BNE   LANG0110                       NO\n         LA    R2,1(,R2)                      PLUS 1\n         MVC   0(8,R3),WORK_DATA              COPY NAME\n         LA    R3,8(,R3)                      NEXT\n         B     LANG0130                       READ AGAIN\nLANG0140 DS    0H\n         ITRACE ID=LOOK_UP\n         MVI   LANG_RC,$LANG_UNKNOWN          ASSUME THE WORST\n         GET   WORK_DCB,WORK_IO_AREA          READ A RECORD\n         CLC   LANG_NAME,WORK_DATA            IS THIS THE LANGUAGE?\n         BNE   LANG0140                       NO, TRY AGAIN\n         MVC   LANG_MODULE,WORK_DATA+8        COPY THE MODULE NAME\n         ITRACE ID=FOUND,                                              +\n               DATA1=LANG_NAME,                                        +\n               DATA2=LANG_MODULE\n         MVI   LANG_RC,$LANG_OK               LANGUAGE FOUND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLANG0150 DS    0H\n         ITRACE ID=LANG_EOF\n         ST    R2,LANG_NBR\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         CLOSE WORK_DCB,                      CLOSE THE OPTIONS FILE   +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL WORK_DCB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSLANG_WORK_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREADDCB  DCB   DSORG=PS,                                               +\n               DDNAME=OSOPTS,                                          +\n               DCBE=*,                                                 +\n               EODAD=LANG0150,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=GM\nREADDCB_L      EQU   *-READDCB\nDCBE_I   DCBE  RMODE31=BUFF\nDCBE_L   EQU   *-DCBE_I\nOPEN_I   OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU   *-CLOSE_I\nTYPE_LANGUAGE  DC    CL8'LANGUAGE'\n               LTORG\nOSLANGEND      EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLANG_WORK      DSECT\n                 COPY  DXDPREF\nWORK_DCB         DS    0F,(READDCB_L)X\nWORK_DCBE        DS    0F,(DCBE_L)X\nWORK_OPEN        DS    0F,(OPEN_L)X\nWORK_CLOSE       DS    0F,(CLOSE_L)X\n\nWORK_IO_AREA     DS    0C\nWORK_TYPE        DS    CL8             I/O AREA\nWORK_DATA        DS    CL72\n\nOSLANG_WORK_L    EQU  *-OSLANG_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC   DCBD=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LANGREQ  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSLANG\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSLDMAP": {"ttr": 5637, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00 \\x01\\t!\\x0f\\x01\\t6/\\x15)\\x02=\\x02@\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:29:20", "lines": 573, "newlines": 576, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLDMAP                                               *\n*                                                                     *\n*  Display LMOD MAP detail info                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLDMAP  CSECT\nOSLDMAP  AMODE 31\nOSLDMAP  RMODE ANY\n         USING OSLDMAP,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLDMAP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(MAPEND-OSLDMAP)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         USING OSLDMAP,R10,R9\n         DROP  R15\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLDMAP_DXD_L               WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR               SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLDMAP_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                         SET WORK AREA ADDRESS\n         USING OSLDMAP_DXD,R13                DEFINE BASE\n         MVC   DXD_CSECT,MODID                SET MODULE ID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,LMOD_MAP_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR               WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAP0000  DS    0H\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nMAP0010  DS    0H\n         MVC   0(80,R4),COMM_BLANKS\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0010\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\n         BCTR  R3,0                 <--- RESERVE LINE FOR TOTAL MSG\n         BCTR  R3,0                 <--- RESERVE LINE FOR TOTAL MSG\nMAP0020  DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n\n         MVC   0(MSG_01_L,R4),MSG_01\n         USING MSG_01,R4\n         ICM   R1,15,LMOD_MAP_NEXT\n         BAL   R14,NBR0000\n         MVC   MSG_01_NEXT,DXD_NUMBER\n         BCT   R3,MAP0030\n         DROP  R4\n         B     MAP0250                        SCREEN FULL\n\nMAP0030  DS    0H\n         MVC   0(MSG_02_L,R4),MSG_02\n         USING MSG_02,R4\n         MVC   MSG_02_TYPE,LMOD_MAP_TYPE\n         CLI   LMOD_MAP_TYPE,C'M'             MODULE?\n         BE    MAP0040\n         CLI   LMOD_MAP_TYPE,C'C'             CLASS?\n         BE    MAP0050\n         CLI   LMOD_MAP_TYPE,C'O'             OVERLAY?\n         BE    MAP0060\n         CLI   LMOD_MAP_TYPE,C'S'             SECTION WITHIN CLASS?\n         BE    MAP0070\n         CLI   LMOD_MAP_TYPE,C'P'             PART WITHIN CLASS?\n         BE    MAP0080\n         CLI   LMOD_MAP_TYPE,C'L'             LABEL WITHIN SECTION?\n         BE    MAP0090\n         CLI   LMOD_MAP_TYPE,C'X'             TEXT EXTENT?\n         BE    MAP0100\n         CLI   LMOD_MAP_TYPE,C'E'             END OF MODULE?\n         BE    MAP0110\n         B     MAP0120\nMAP0040  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_MODULE\n         B     MAP0120\nMAP0050  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_CLASS\n         B     MAP0120\nMAP0060  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_OVERLAY\n         B     MAP0120\nMAP0070  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_SECTION\n         B     MAP0120\nMAP0080  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_PART\n         B     MAP0120\nMAP0090  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_LABEL\n         B     MAP0120\nMAP0100  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_TEXT\n         B     MAP0120\nMAP0110  DS    0H\n         MVC   MSG_02_DESC,TYPE_DESC_END\nMAP0120  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0130\n         DROP  R4\n         B     MAP0250\n\nMAP0130  DS    0H\n         MVC   0(MSG_03_L,R4),MSG_03\n         USING MSG_03,R4\n         UNPK  MSG_03_FLAGS(3),LMOD_MAP_FLAGS(2)\n         TR    MSG_03_FLAGS,COMM_HEXCHAR\n         MVI   MSG_03_FLAGS+2,C' '\n         LA    R14,MSG_03_DESC\n         TM    LMOD_MAP_FLAGS,X'80'           SINGLE EXTENT?\n         BNO   MAP0140\n         MVC   0(L'FLAG_DESC_SINGLE,R14),FLAG_DESC_SINGLE\n         LA    R14,L'FLAG_DESC_SINGLE+2(,R14)\nMAP0140  DS    0H\n         TM    LMOD_MAP_FLAGS,X'40'           LOADABLE TEXT?\n         BNO   MAP0150\n         MVC   0(L'FLAG_DESC_LOADABLE,R14),FLAG_DESC_LOADABLE\n         LA    R14,L'FLAG_DESC_LOADABLE+2(,R14)\nMAP0150  DS    0H\n         TM    LMOD_MAP_FLAGS,X'20'           EXECUTABLE TEXT?\n         BNO   MAP0160\n         MVC   0(L'FLAG_DESC_EXECUTABLE,R14),FLAG_DESC_EXECUTABLE\nMAP0160  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0170\n         DROP  R4\n         B     MAP0250\n\nMAP0170  DS    0H\n         MVC   0(MSG_04_L,R4),MSG_04\n         USING MSG_04,R4\n         MVC   MSG_04_NAME,LMOD_MAP_NAME\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0180\n         DROP  R4\n         B     MAP0250\n\nMAP0180  DS    0H\n         MVC   0(MSG_05_L,R4),MSG_05\n         USING MSG_05,R4\n         ICM   R1,15,LMOD_MAP_OFFSET\n         BAL   R14,NBR0000\n         MVC   MSG_05_OFFSET,DXD_NUMBER\n         UNPK  MSG_05_HEX(9),LMOD_MAP_OFFSET(5)\n         TR    MSG_05_HEX,COMM_HEXCHAR\n         MVI   MSG_05_HEX+8,C' '\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0190\n         DROP  R4\n         B     MAP0250\n\nMAP0190  DS    0H\n         MVC   0(MSG_06_L,R4),MSG_06\n         USING MSG_06,R4\n         ICM   R1,15,LMOD_MAP_QUANTITY\n         BAL   R14,NBR0000\n         MVC   MSG_06_QUANTITY,DXD_NUMBER\n         UNPK  MSG_06_HEX(9),LMOD_MAP_QUANTITY(5)\n         TR    MSG_06_HEX,COMM_HEXCHAR\n         MVI   MSG_06_HEX+8,C' '\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0200\n         DROP  R4\n         B     MAP0250\n\nMAP0200  DS    0H\n         MVC   0(MSG_07_L,R4),MSG_07\n         USING MSG_07,R4\n         UNPK  MSG_07_NAME_SPACE(3),LMOD_MAP_NAME_SPACE(2)\n         TR    MSG_07_NAME_SPACE,COMM_HEXCHAR\n         MVI   MSG_07_NAME_SPACE+2,C' '\n         CLI   LMOD_MAP_NAME_SPACE,X'01'      EXTERNAL LABELS(L)?\n         BE    MAP0210\n         CLI   LMOD_MAP_NAME_SPACE,X'02'      PSEUDOREGISTERS(P)?\n         BE    MAP0220\n         B     MAP0230\nMAP0210  DS    0H\n         MVC   MSG_07_DESC,SPACE_DESC_LABELS\n         B     MAP0230\nMAP0220  DS    0H\n         MVC   MSG_07_DESC,SPACE_DESC_PSEUDO\nMAP0230  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,MAP0240\n         DROP  R4\n         B     MAP0250\n\nMAP0240  DS    0H\n         MVC   0(MSG_08_L,R4),MSG_08\n         USING MSG_08,R4\n         SR    R1,R1\n         ICM   R1,3,LMOD_MAP_RECFM\n         BAL   R14,NBR0000\n         MVC   MSG_08_RECFM,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         DROP  R4\n\nMAP0250 DS     0H\n         A     R4,DXD_VWIDTH\n         A     R4,DXD_VWIDTH\n         MVC   0(TOTAL_MSG_L,R4),TOTAL_MSG\n         USING TOTAL_MSG,R4\n         L     R1,DSPCREQ_RECORD_NBR\n         CVD   R1,COMM_DWORD\n         ED    TOTAL_MSG_CURRENT,COMM_DWORD+5\n         L     R1,DATASPACE_1_LAST_RECORD\n         CVD   R1,COMM_DWORD\n         ED    TOTAL_MSG_TOTAL,COMM_DWORD+5\n         DROP  R4\n\n         B     DISP0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         CVD   R1,COMM_DWORD\n         MVC   DXD_NUMBER,EDIT_WORD\n         ED    DXD_NUMBER,COMM_DWORD+3\n         LA    R15,L'DXD_NUMBER\nNBR0010  DS    0H\n         CLI   DXD_NUMBER,C' '\n         BNER  R14\n         MVC   DXD_NUMBER(L'DXD_NUMBER),DXD_NUMBER+1\n         MVI   DXD_NUMBER+(L'DXD_NUMBER-1),C' '\n         BCT   R15,NBR0010\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT SELECTED?\n         BNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   EXIT0000                       YES\n         OC    SESS_RC,SESS_RC                RC=0?\n         BZ    DISP0005                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0005 DS    0H\n         CLI   SPF_ZSCROLLA,C'C'              CSR?\n         BNE   DISP0010                       NO\n         MVC   SPF_ZSCROLLN,F1                CSR SCROLLING IS 1 LINE\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    DISP0100                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    DISP0200                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    DISP0300                       YES\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    DISP0400                       YES\n         B     DISP0000\n\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     MAP0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     NUMBER TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     MAP0000                             GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     MAP0000\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     MAP0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR           VDATA GETMAINED?\n         BZ    CLEAN010                       NO\n         L     R0,DXD_VDATA_LENGTH            VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLDMAP_DXD_L               WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                   DC   F'1'\nPANEL_NAME           DC   CL8'OSLDMAP'\nEDIT_WORD            DC   X'402020206B2020206B202120'\n\nTYPE_DESC_MODULE     DC   CL20'Module'\nTYPE_DESC_CLASS      DC   CL20'Class'\nTYPE_DESC_OVERLAY    DC   CL20'Overlay segment'\nTYPE_DESC_SECTION    DC   CL20'Section within class'\nTYPE_DESC_PART       DC   CL20'Part within class'\nTYPE_DESC_LABEL      DC   CL20'Label within class'\nTYPE_DESC_TEXT       DC   CL20'Text'\nTYPE_DESC_END        DC   CL20'End of module'\n\nFLAG_DESC_SINGLE     DC   C'Single extent'\nFLAG_DESC_LOADABLE   DC   C'Loadable text'\nFLAG_DESC_EXECUTABLE DC   C'Executable'\n\n\nSPACE_DESC_LABELS    DC   CL20'External labels'\nSPACE_DESC_PSEUDO    DC   CL20'Pseudo registers'\n\n                     LTORG\n\nMSG_01               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Next           '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_01_NEXT          DC   CL12' '\nMSG_01_L             EQU  *-MSG_01\n\nMSG_02               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Type           '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TYPE          DC   C' '\n                     DC   C'    '\nMSG_02_DESC          DC   CL20' '\nMSG_02_L             EQU  *-MSG_02\n\nMSG_03               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Flags          '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_03_FLAGS         DC   CL2' '\n                     DC   C'   '\nMSG_03_DESC          DC   CL60' '\nMSG_03_L             EQU  *-MSG_03\n\nMSG_04               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Name           '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_04_NAME          DC   CL60' '\nMSG_04_L             EQU  *-MSG_04\n\nMSG_05               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Offset         '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_05_OFFSET        DC   CL12' '\n                     DC   C'   ('\nMSG_05_HEX           DC   CL8' '\n                     DC   C' HEX)'\nMSG_05_L             EQU  *-MSG_05\n\nMSG_06               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Length/quantity'\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_06_QUANTITY      DC   CL12' '\n                     DC   C'   ('\nMSG_06_HEX           DC   CL8' '\n                     DC   C' HEX)'\nMSG_06_L             EQU  *-MSG_06\n\nMSG_07               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Name space     '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_07_NAME_SPACE    DC   CL2' '\n                     DC   C'      '\nMSG_07_DESC          DC   CL20' '\nMSG_07_L             EQU  *-MSG_07\n\nMSG_08               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Record format  '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_08_RECFM         DC   CL5' '\nMSG_08_L             EQU  *-MSG_08\n\nTOTAL_MSG            DS   0C\n                     DC   AL1($SCREEN_ATTR_NORMAL)\n                     DC   C'Displaying item '\n                     DC   AL1($SCREEN_ATTR_HIGH)\nTOTAL_MSG_CURRENT    DC   X'402020202120'\n                     DC   AL1($SCREEN_ATTR_NORMAL)\n                     DC   C' of'\n                     DC   AL1($SCREEN_ATTR_HIGH)\nTOTAL_MSG_TOTAL      DC   X'402020202120'\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nTOTAL_MSG_L          EQU  *-TOTAL_MSG\n\nMAPEND               EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLDMAP_DXD          DSECT\n                     COPY  DXDPREF\n\nDXD_VDATA_ADDR       DS    A\nDXD_VDATA_LENGTH     DS    F\n\nDXD_VDEPTH           DS    F\nDXD_VWIDTH           DS    F\n\nDXD_MAP_BUFFER       DS    A\n\nDXD_NUMBER           DS    CL12\n\n                     COPY  MAPDATA\n\n                     DSPCREQ  DSECT=NO\nOSLDMAP_DXD_L        EQU   *-OSLDMAP_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSLDMAP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMDIR": {"ttr": 12807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00V\\x01\\t(o\\x01\\x10\\x01O\\x164\\x05\\x8a\\x05r\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-14T16:34:56", "lines": 1418, "newlines": 1394, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMDIR                                               *\n*                                                                     *\n*  Build main body for load module PDS directories.                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMDIR  CSECT\nOSLMDIR  AMODE 31\nOSLMDIR  RMODE ANY\n         USING OSCOMM,R12\n         USING OSLMDIR,R15\n         B     INIT0000\nMODID    DC    CL8'OSLMDIR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLMDIREND-OSLMDIR)\nINIT0000 DS    0H\n         USING SESSION,R11                    DEFINE SESSION BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         LA    R9,2048(,R10)                  SET 2ND BASE REGISTER\n         LA    R9,2048(,R9)                     ..........\n         DROP  R15\n         USING OSLMDIR,R10,R9                 DEFINE BASE\n         L     R5,COMM_OSSPFD                 SPF DATA AREA\n         USING OSSPFD,R5                      DEFINE BASE\n         USING VDATA,R8\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Perform initialization                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R0,15,SESS_DXD_ADDR\n         BNZ   ERR0110\n         L     R0,DXD_SIZE\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                          GETMAIN WORK AREA        +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         L     R1,DXD_SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         A     R2,DXD_START\n         ST    R13,4(,R2)                     SAVE R13\n         ST    R2,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXD006,R13                     DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         MVC   DXD_SAVED_RETRY,SESS_RETRY\n         LA    R15,RTRY0000                   ABEND RETRY POINT\n         ST    R15,SESS_RETRY                 SET IN COMMON AREA\n         MVC   DXD_OPEN(OPEN_L),OPEN_I\n         MVC   DXD_CLOSE(CLOSE_L),CLOSE_I\n         LA    R1,DIR_RECORD\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         ICM   R4,15,SESS_DCB_ADDR            HAVE A DCB?\n         BNZ   EXIT0000                       YES\n         LA    R0,PDSDCB_L\n         ST    R0,SESS_DCB_LENGTH\n         GETMAIN RU,                          GETMAIN STORAGE FOR DCB  +\n               LV=(0),                                                 +\n               LOC=BELOW\n         LR    R4,R1                          COPY ADDRESS\n         ST    R4,SESS_DCB_ADDR               SAVE ADDRESS\n         MVC   0(PDSDCB_L,R4),PDSDCB_I\n         USING IHADCB,R4                      DEFINE BASE\n         MVC   DCBDDNAM,SESS_DD               COPY DD NAME\n         OPEN  ((R4),OUTPUT),                 OPEN DCB                 +\n               MODE=31,                                                +\n               MF=(E,DXD_OPEN)\n         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN  INDICATE DCB IS OPEN\n         LA    R1,PANEL_OS0012                PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          COPY DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          COPY WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R4,SESS_DCB_ADDR\n         ICM   R15,15,SESS_DXD_ADDR           WORK AREA ADDRESS\n         BZ    ERR0130                        ERROR IF ZERO\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH    SESSION SWITCH?\n         BNE   MAIN0000                       NO\n         TM    DXD_FLAGS,$DXD_INIT            EVER BUILT DATA?\n         BNO   MAIN0000                       NO\n         L     R7,DXD_LINES_REMAINING         RESTORE LINES REMAINING\n         L     R8,DXD_CURRENT_VDATA           RESTORE VDATA POSITION\n         ITRACE ID=RESUME,                                             +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         LTR   R7,R7                          RESUMING A LINE CMD?\n         BZ    MAIN0160                       NO\n         B     MAIN0230                       RESUME LINE CMDS\n* ------------------------------------------------------------------- *\n*          (Re)build display                                          *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         OI    DXD_FLAGS,$DXD_INIT\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVC   SPF_ZCMD,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*            Clear the VDATA buffer                                   *\n* ------------------------------------------------------------------- *\n         XC    DXD_LINES_BUILT,DXD_LINES_BUILT\n         L     R0,DXD_VDATA_ADDR              VDATA BUFFER ADDRESS\n         L     R1,DXD_VDATA_LENGTH            VDATA BUFFER LENGTH\n         SR    R14,R14                        CLEAR R14\n         SR    R15,R15                        CLEAR R15\n         MVCL  R0,R14                         INITIALIZE VDATA BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    DXD_CURSOR_POSITION,DXD_CURSOR_POSITION\n* ------------------------------------------------------------------- *\n*        Add heading to body                                          *\n* ------------------------------------------------------------------- *\n         L     R7,DXD_VDEPTH                  LINES AVAILABLE\n         L     R8,DXD_VDATA_ADDR              BUFFER ADDRESS\n         LA    R2,HEADING_01_L                HEADING LENGTH\n         BCTR  R2,0                           CONVERT LENGTH\n         EX    R2,MVC_01                      COPY HEADING\n         B     MAIN0140\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" data and build body of SPF panel                  *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BH    MAIN0150                       END OF RECORDS REACHED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DSPCREQ_RECORD_ADDR,4)\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0020\n         MVC   VDATA(VDATA_L),COMM_BLANKS\n         MVI   VDATA_ATTR_1,$SCREEN_ATTR_INPUT\n         MVC   VDATA_NAME,DIR_NAME\n         TM    DIR_FLAGS,$DIR_TAGGED\n         BO    MAIN0020\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH_TURQUOISE\n         B     MAIN0030\nMAIN0020 DS    0H\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\nMAIN0030 DS    0H\n         MVI   VDATA_ATTR_3,$SCREEN_ATTR_NORMAL\n         UNPK  COMM_INFO_01(7),DIR_TTR(4)\n         TR    COMM_INFO_01(6),COMM_HEXCHAR\n         MVC   VDATA_TTR,COMM_INFO_01\n         TM    DIR_FLAGS,$DIR_PMAR\n         BNO   MAIN0090\n* ------------------------------------------------------------------- *\n*                  Format PMAR data                                   *\n* ------------------------------------------------------------------- *\n         ICM   R1,15,DIR_PMAR_STOR            VIRTUAL STORAGE REQUIRED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   VDATA_SIZE,EDIT_WORD_1\n         ED    VDATA_SIZE,COMM_DWORD+4\n         UNPK  VDATA_SIZE_HEX(9),DIR_PMAR_STOR(5)\n         TR    VDATA_SIZE_HEX,COMM_HEXCHAR    TRANSLATE\n         MVI   VDATA_DELIM1,C'('              INSERT DELIMITER\n         MVI   VDATA_DELIM2,C')'              INSERT DELIMITER\n         MVC   VDATA_AC,DIR_PMAR_AC           COPY AUTH CODE\n         OI    VDATA_AC,X'F0'                 'TRANSLATE' TO EBCDIC\n         TM    DIR_PMAR_ATR4,X'03'            AMODE ANY?\n         BO    MAIN0040                       YES\n         TM    DIR_PMAR_ATR4,X'01'            AMODE 64?\n         BO    MAIN0050                       YES\n         TM    DIR_PMAR_ATR4,X'10'            AMODE 31?\n         BO    MAIN0060                       YES\n         MVC   VDATA_AM,AM_24                 AMODE IS 24\n         B     MAIN0070\nMAIN0040 DS    0H\n         MVC   VDATA_AM,AM_ANY                AMODE IS ANY\n         B     MAIN0070\nMAIN0050 DS    0H\n         MVC   VDATA_AM,AM_64                 AMODE IS 64\n         B     MAIN0070\nMAIN0060 DS    0H\n         MVC   VDATA_AM,AM_31                 AMODE IS 31\nMAIN0070 DS    0H\n         MVI   VDATA_SLASH,C'/'               INSERT THE SLASH\n         TM    DIR_PMAR_ATR4,X'10'            RMODE 31?\n         BO    MAIN0080                       YES\n         MVC   VDATA_RM,RM_24                 SET RMODE 24\n         B     MAIN0090\nMAIN0080 DS    0H\n         MVC   VDATA_RM,RM_31                 SET RMODE 31\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0090 DS    0H\n         TM    DIR_FLAGS,$DIR_DELETED\n         BO    MAIN0100\n         TM    DIR_FLAGS,$DIR_RENAMED\n         BO    MAIN0110\n         B     MAIN0130\nMAIN0100 DS    0H\n         MVC   VDATA_OVERLAY(DELETED_MSG_L),DELETED_MSG\n         B     MAIN0120\nMAIN0110 DS    0H\n         MVC   VDATA_OVERLAY(RENAMED_MSG_L),RENAMED_MSG\nMAIN0120 DS    0H\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH_TURQUOISE\nMAIN0130 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          CURRENT RECORD NUMBER\n         A     R1,F1                          ADD 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE NEW RECORD NUMBER\n         LH    R1,DXD_LINES_BUILT             LINES DISPLAYED\n         A     R1,F1                          ADD 1\n         STH   R1,DXD_LINES_BUILT             SAVE LINES DISPLAYED\nMAIN0140 DS    0H\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0010                    MINUS 1 LINE\n* ------------------------------------------------------------------- *\n*            Build DSCB info                                          *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=OSDSCB\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_COLUMN_FROM,H1             LEFT/RIGHT NOT USED\n         L     R15,COMM_V_OSDSCB              OSDSCB ENTRY POINT\n         BALR  R14,R15                        FORMAT THE DSCB INFO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_OS0012   SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         MVC   SESS_DISP_CURSOR,DXD_CURSOR_POSITION\n         L     R15,COMM_V_OSDISP              OSDISP ENTRY POINT\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT?\n         BNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   SESS0100                       YES\n         OC    SESS_RC,SESS_RC                RC=0?\n         BZ    MAIN0200                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process commands                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         NI    DXD_FLAGS,255-$LINE_CMD        RESET INDICATOR\n         MVC   SPF_MSG_1,COMM_BLANKS          CLEAR MESSAGE\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LH    R7,DXD_LINES_BUILT             LINES OF DISPLAY BUILT\n         L     R8,DXD_VDATA_ADDR              SPF DISPLAY BUFFER ADDR\n         A     R8,DXD_VWIDTH                  SKIP HEADING LINE\n         L     R1,DXD_VWIDTH                  SCREEN WIDTH\n         AH    R1,=Y(VDATA_SELECTION-VDATA+1) PLUS DISP TO SELECTION\n         ST    R1,DXD_CURSOR_POSITION         INITIALIZE CURSOR\n         ITRACE ID=CMDS,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R7\nMAIN0210 DS    0H\n         ITRACE ID=LINE_CMD,                                           +\n               DATA1=(VDATA_SELECTION,1),                              +\n               DATA2=VDATA_NAME\n         OI    VDATA_SELECTION,C' '           'TRANSLATE' TO UPPER CASE\n         CLI   VDATA_SELECTION,C' '           BLANK?\n         BE    MAIN0240                       YES\n         LA    R1,VDATA_SELECTION             COMMAND ADDRESS\n         ST    R1,SESS_COMMAND_ADDRESS        SET ADDRESS\n         MVC   SESS_COMMAND_LENGTH,H1         SET LENGTH\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R0,LINE_COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD               OSCMD ENTRY POINT\n         BALR  R14,R15                        SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                            COMMAND FOUND\n         MVC   COMM_INFO_01,VDATA_SELECTION\n         MVC   COMM_MSG_ID,H1                 SET MESSAGE ID\n         BAL   R2,MSG0000\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE\n         B     MAIN0150\nMAIN0230 DS    0H\n         OI    DXD_FLAGS,$LINE_CMD            LINE CMD WAS FOUND\nMAIN0240 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          RECORD NUMBER\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE RECORD NUMBER\nMAIN0250 DS    0H\n         L     R1,DXD_CURSOR_POSITION         CURSOR POSITION\n         A     R1,DXD_VWIDTH                  NEXT LINE\n         ST    R1,DXD_CURSOR_POSITION         UPDATE CURSOR POSITION\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0210                    LOOP\n         XC    DXD_CURSOR_POSITION,DXD_CURSOR_POSITION\n         TM    DXD_FLAGS,$LINE_CMD            LINE COMMAND FOUND?\n         BO    MAIN0000                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       No line command(s) were found.                                *\n*                                                                     *\n*       Process any primary command.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLC   SPF_ZCMD,COMM_BLANKS           ALL BLANK?\n         BE    MAIN0290                       YES\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,COMM_OPERANDS_NBR\n         BZ    MAIN0290                       NO OPERANDS\n         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS\n         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R0,COMMAND_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD               OSCMD ENTRY POINT\n         BALR  R14,R15                        SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                            COMMAND FOUND\n         B     ERR0080                        NOT FOUND\n* ------------------------------------------------------------------- *\n*       No commands so check for scroll                               *\n* ------------------------------------------------------------------- *\nMAIN0290 DS    0H\n         L     R1,SPF_ZSCROLLN\n         ST    R1,SESS_HORIZONTAL_SCROLL\n         BCTR  R1,0\n         ST    R1,SESS_VERTICAL_SCROLL\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    MAIN0350                       YES\n         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?\n         BE    MAIN0320                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    MAIN0340                       YES\n         CLI   SPF_ZVERB,C'U'                 SCROLL UP?\n         BE    MAIN0300                       YES\n         B     MAIN0150                       RE-DISPLAY AS IS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                    MAX?\n         BE    MAIN0340                             YES\n         L     R1,SESS_VERTICAL_SCROLL              NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  1ST DISPLAYED       D\n         SR    R2,R1                                MINUS SCROLL\n         CH    R2,H1                                LESS THAN 1?\n         BNL   MAIN0310                             NO\n         LH    R2,H1                                SET TO 1ST RECORD\nMAIN0310 DS    0H                                   YES\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE 1ST RCD NBR\n         B     MAIN0000                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                    MAX?\n         BE    MAIN0350                             YES\n         L     R1,SESS_VERTICAL_SCROLL              NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  FIRST DISPLAYED\n         AR    R2,R1                                PLUS SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD\n         BH    MAIN0330                             BEYOND END OF DATA\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE 1ST RCD NBR\n         B     MAIN0000                             REBUILD EVERYTHING\nMAIN0330 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST RECD STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD  MINUS 1ST DISPLAYED\n         C     R2,DXD_VDEPTH                        MORE THAN DEPTH?\n         BNH   MAIN0000                             NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST STORED\n         S     R2,DXD_VDEPTH                        MINUS 1 SCREEN\n         A     R2,F2                                PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  SET 1ST TO DISPLAY\n         B     MAIN0000                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0340 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1  SET TO RECORD 1\n         XC    SESS_LAST_FOUND,SESS_LAST_FOUND\n         B     MAIN0000                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0350 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         L     R2,DATASPACE_1_LAST_RECORD           HIGHEST RECORD\n         S     R2,DXD_VDEPTH                        MINUS DEPTH\n         A     R2,F2                                PLUS 2\n         CH    R2,H1                                STILL HAVE 1?\n         BNL   MAIN0360                             YES\n         LH    R2,H1                                FORCE RECORD 1\nMAIN0360 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE 1ST RCD      BR\n         B     MAIN0000                             REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        LMOD info                                                    *\n*                                                                     *\n*          Create a new 'session'                                     *\n*          set data type, function name, panel name                   *\n*          set 'new session' indicator                                *\n*          save vdata buffer postion info                             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0370 DS    0H\n         MVI   VDATA_SELECTION,C' '\n         MVC   SPF_ZCMD,COMM_BLANKS\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         BNZ   ERR0100\n         BAL   R6,SESS0000                    CREATE NEW SESSION\nNEW      USING SESSION,R3\n         MVC   NEW.SESS_MEMBER,VDATA_NAME     SET MEMBER NAME\n         MVI   NEW.SESS_DATA_TYPE,$DATA_TYPE_OTHER\n         MVC   NEW.SESS_FORMAT,FORMAT_LMOD\n         MVC   NEW.SESS_DEFAULT_FORMAT,FORMAT_LMOD\n         MVC   NEW.SESS_DISP_PANEL,PANEL_LMOD\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH\n         B     SESS0100\n         DROP  NEW\n* ------------------------------------------------------------------- *\n*        LOCATE (make a member the 1st shown on display)              *\n* ------------------------------------------------------------------- *\nMAIN0380 DS    0H\n         ITRACE ID=LOCATE\n         CH    R3,H2                          PROPER NUMBER OF PARMS?\n         BL    ERR0050                        TOO FEW\n         BH    ERR0060                        TOO MANY\n         CLC   OPERAND_02_LENGTH,H8           MEMBER NAME TOO LONG?\n         BH    ERR0070                        YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   SESS_SEARCH_ARG_LENGTH,OPERAND_02_LENGTH\n         MVC   SESS_SEARCH_ARG(8),0(R2)\n         MVC   DSPCREQ_MEMBER,0(R2)           COPY MEMBER NAME\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         B     MAIN0400\nMAIN0390 DS    0H\n         ITRACE ID=RFIND\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         OC    SESS_SEARCH_ARG_LENGTH,SESS_SEARCH_ARG_LENGTH\n         BZ    ERR0140\n         MVC   DSPCREQ_MEMBER,SESS_SEARCH_ARG\n         ICM   R1,15,SESS_SEARCH_RECORD\n         LA    R1,1(,R1)\n         STCM  R1,15,DSPCREQ_RECORD_NBR\n         MVC   DSPCREQ_MEMBER,SESS_SEARCH_ARG\nMAIN0400 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_G\n         LA    R1,DSPCREQ                     PARM BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        FIND THE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0020                        NOT FOUND\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SESS_SEARCH_RECORD,DSPCREQ_RECORD_NBR\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        Reset tag indicator (line command)                           *\n* ------------------------------------------------------------------- *\nMAIN0410 DS    0H\n         ITRACE ID=LINE_RST\n         MVI   VDATA_SELECTION,C' '           RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        RETRIEVE THE RECORD\n         NI    DIR_FLAGS,255-$DIR_TAGGED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        UPDATE THE RECORD\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_NORMAL\n         MVC   VDATA_OVERLAY(RESET_MSG_L),RESET_MSG\n         B     MAIN0230                       PROCESS NEXT SELECTION\n* ------------------------------------------------------------------- *\n*        Reset tag indicator (primary command)                        *\n* ------------------------------------------------------------------- *\nMAIN0420 DS    0H\n         ITRACE ID=PRIM_RST\n         BAL   R6,MAIN0660                    VERIFY THE MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        RETRIEVE THE RECORD\n         NI    DIR_FLAGS,255-$DIR_TAGGED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        UPDATE THE RECORD\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        Reset tag indicator (ALL)                                    *\n* ------------------------------------------------------------------- *\nMAIN0430 DS    0H\n         ITRACE ID=RESETALL\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         SR    R2,R2                          CLEAR FOR COUNTER\nMAIN0440 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         TM    DIR_FLAGS,$DIR_TAGGED          MEMBER TAGGED?\n         BNO   MAIN0450                       NO\n         A     R2,F1                          PLUS 1\n         NI    DIR_FLAGS,255-$DIR_TAGGED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\nMAIN0450 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          CURRENT RECORD NUMBER\n         C     R1,DATASPACE_1_LAST_RECORD     AT LAST RECORD\n         BE    MAIN0460                       YES\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SET UPDATED NUMBER\n         B     MAIN0440\nMAIN0460 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND\n         ST    R2,COMM_DWORD\n         MVI   COMM_MSG_ID+1,12               SET MESSAGE NUMBER\n         BAL   R2,MSG0000                     BUILD MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0470 DS    0H\n         ITRACE ID=LINE_SEL\n         MVI   VDATA_SELECTION,C' '           RESET THE SELECTION\n         B     MAIN0490\nMAIN0480 DS    0H\n         ITRACE ID=ZCMD_SEL\n         CH    R3,H2                          PROPER NUMBER OF PARMS?\n         BL    ERR0050                        TOO FEW\n         BH    ERR0060                        TOO MANY\n         CLC   OPERAND_02_LENGTH,H8           MEMBER NAME TOO LONG?\n         BH    ERR0070                        YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   DSPCREQ_MEMBER,0(R2)           COPY MEMBER NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         LA    R1,DSPCREQ                     PARM BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        FIND THE MEMBER\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0020                        NOT FOUND\n         MVC   VDATA_NAME,0(R2)\n         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND\nMAIN0490 DS    0H\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         BNZ   ERR0100\n         ST    R7,DXD_LINES_REMAINING         SAVE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA           SAVE VDATA ADDRESS\n         BAL   R6,SESS0000                    CREATE NEW SESSION\nNEW      USING SESSION,R3\n         MVC   NEW.SESS_MEMBER,VDATA_NAME     SET MEMBER NAME\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH    SET SESSION FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=EDIT\n         MVI   VDATA_SELECTION,C' '           RESET THE SELECTION\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         BNZ   ERR0100\n         ST    R7,DXD_LINES_REMAINING         SAVE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA           SAVE VDATA ADDRESS\n         BAL   R6,SESS0000                    CREATE NEW SESSION\nNEW      USING SESSION,R3\n         MVC   NEW.SESS_MEMBER,VDATA_NAME     SET MEMBER NAME\n         MVI   NEW.SESS_EDIT_FLAGS,$SESS_EDIT INDICATE EDIT SESSION\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH    SET SESSION FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Tag member (line command)                                    *\n* ------------------------------------------------------------------- *\nMAIN0510 DS    0H\n         ITRACE ID=LINE_TAG\n         MVI   VDATA_SELECTION,C' '           RESET THE SELECTION\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        RETRIEVE THE RECORD\n         OI    DIR_FLAGS,$DIR_TAGGED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        UPDATE THE RECORD\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\n         MVC   VDATA_OVERLAY(TAGGED_MSG_L),TAGGED_MSG\n         B     MAIN0230                       PROCESS NEXT SELECTION\n* ------------------------------------------------------------------- *\n*        Tag member (primary command)                                 *\n* ------------------------------------------------------------------- *\nMAIN0520 DS    0H\n         ITRACE ID=PRIMTAG\n         BAL   R6,MAIN0660                    VERIFY MEMBER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        RETRIEVE THE RECORD\n         OI    DIR_FLAGS,$DIR_TAGGED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        UPDATE THE RECORD\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         B     MAIN0150                       DISPLAY AGAIN\n* ------------------------------------------------------------------- *\n*        Delete (line command)                                        *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=LINE_DEL,                                           +\n               DATA1=VDATA_NAME\n         MVC   SESS_MEMBER,VDATA_NAME         COPY MEMBER NAME\n         MVC   SPF_MEMBER,VDATA_NAME          COPY TO SPF VARIABLE ALSO\n         MVC   DXD_MEMBER,VDATA_NAME          COPY TO 24-BIT STORAGE\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND\n         MVI   VDATA_SELECTION,C' '           CLEAR LINE COMMAND\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         BNZ   ERR0100\n         MVC   SESS_DISP_PANEL,PANEL_OS0006   SET PANEL ID\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                        CONFIRM DELETION\n         LTR   R15,R15                        ABORTED?\n         BNZ   MAIN0610                       YES\n         CLI   SPF_YES_OR_NO,C'N'             ABORTED?\n         BE    MAIN0610                       YES\n         LA    R3,DXD_MEMBER\n         ITRACE ID=STOW,                                               +\n               RDATA1=R4,                                              +\n               RDATA2=R3\n         STOW  (R4),(R3),D                    DELETE THE MEMBER\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0090                        NO\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0020\n         OI    DIR_FLAGS,$DIR_DELETED\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        UPDATE THE RECORD\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_HIGH\n         MVC   VDATA_OVERLAY(DELETED_MSG_L),DELETED_MSG\n         B     MAIN0230\nMAIN0610 DS    0H\n         ITRACE ID=ABORT\n         MVC   SPF_MSG_1(MSG_01_L),MSG_01\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*        Delete (Primary command)                                     *\n* ------------------------------------------------------------------- *\nMAIN0620 DS    0H\n         ITRACE ID=PRIM_DEL\n         BAL   R6,MAIN0660                    VERIFY MEMBER\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND\n         MVC   SESS_DISP_PANEL,PANEL_OS0006   SET PANEL NAME\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                        CONFIRM DELETE\n         LTR   R15,R15                        ABORT\n         BNZ   MAIN0610                       YES\n         CLI   SPF_YES_OR_NO,C'N'             ABORT\n         BE    MAIN0610                       YES\n         LA    R3,DXD_MEMBER\n         ITRACE ID=DELETE,                                             +\n               DATA1=0(R4),                                            +\n               DATA2=0(R3)\n         STOW  (R4),(R3),D                    ISSUE STOW\n         LTR   R15,R15\n         BNZ   ERR0090\n         OI    DIR_FLAGS,$DIR_DELETED\n         LA    R1,DSPCREQ\n         MVI   DSPCREQ_FUNC,$DSPCREQ_UPDATE\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        UPDATE THE RECORD\n         MVC   SPF_MSG_1(MSG_02_L),MSG_02\n         MVC   SPF_MSG_1+(MSG_02_MEMBER-MSG_02)(8),DXD_MEMBER\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        Disassemble (line command)                                   *\n* ------------------------------------------------------------------- *\nMAIN0630 DS    0H\n         ITRACE ID=DISASM\n         MVI   VDATA_SELECTION,C' '           RESET THE SELECTION\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         BNZ   ERR0100\n         ST    R7,DXD_LINES_REMAINING         SAVE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA           SAVE VDATA ADDRESS\n         MVC   DXD_MEMBER,VDATA_NAME\n         B     MAIN0650\n* ------------------------------------------------------------------- *\n*        Disassemble (primary command)                                *\n* ------------------------------------------------------------------- *\nMAIN0640 DS    0H\n         ITRACE ID=PRIM_ASM\n         BAL   R6,MAIN0660                    VERIFY MEMBER\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND\nMAIN0650 DS    0H\n         BAL   R6,SESS0000                    CREATE NEW SESSION\nNEW      USING SESSION,R3\n         MVC   NEW.SESS_MEMBER,DXD_MEMBER     SET MEMBER NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,DISASM SET DEFAULT FORMAT\n         MVC   NEW.SESS_FORMAT,DISASM         SET FORMAT\n         MVC   NEW.SESS_DATA_LOADER,MODULE_OSDISASM\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH    SET SESSION FUNCTION\n         GETMAIN RU,                                                   +\n               LV=DIR_RECORD_L,                                        +\n               LOC=ANY\n         ST    R1,NEW.SESS_FUNCTION_DATA      PASS ADDR TO FUNCTION\n         MVC   0(DIR_RECORD_L,R1),DIR_RECORD  COPY DATA\n         B     EXIT0000\n         DROP  NEW\n* ------------------------------------------------------------------- *\n*        Verify a member is valid and not renamed or deleted          *\n* ------------------------------------------------------------------- *\nMAIN0660 DS    0H\n         ITRACE ID=PRIM_ASM\n         CH    R3,H2                          CORRECT NUMBER OF PARMS?\n         BL    ERR0050                        TOO FEW\n         BH    ERR0060                        TOO MANY\n         CLC   OPERAND_02_LENGTH,H8           OPERAND TOO LONG?\n         BH    ERR0070                        YES\n         ICM   R3,15,OPERAND_02_ADDRESS       MEMBER NAME ADDRESS\n         MVC   SESS_MEMBER,0(R3)              COPY MEMBER NAME\n         MVC   SPF_MEMBER,0(R3)\n         MVC   DXD_MEMBER,0(R3)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_MEMBER_S\n         MVC   DSPCREQ_MEMBER,DXD_MEMBER\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK         SUCCESSFUL?\n         BNE   ERR0020                        NO\n         TM    DIR_FLAGS,$DIR_DELETED+$DIR_RENAMED\n         BNZ   ERR0100\n         BR    R6\n* ------------------------------------------------------------------- *\n*        Display available commands                                   *\n* ------------------------------------------------------------------- *\nMAIN0690 DS    0H\n         ITRACE ID=LISTCMDS\n         MVI   VDATA_SELECTION,C' '           RESET COMMAND\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,LINE_COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                        DISPLAY COMMANDS\n         B     MAIN0230\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         ITRACE ID=REFRESH\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR    CLEAR THE DATA SPACE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                        'CLEAR' THE DATA SPACE\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSDESERV\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         ICM   R15,15,LOADREQ_EP               OSDESERV ENTRY POINT\n         BALR  R14,R15                         LINK TO OSDESERV\n         ITRACE ID=DESERVRC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                         SUCCESSFUL?\n         BNZ   ERR0150                         NO\n         OC    DATASPACE_1_LAST_RECORD,DATASPACE_1_LAST_RECORD\n         BZ    ERR0160                         NO DATA NOW\n         CLC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         BL    MAIN0000\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     MAIN0000                        BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2200 DS    0H\n         ITRACE ID=SORT\n         CH    R3,H2                           CORRECT NUMBER OF PARMS?\n         BL    ERR0050                         TOO FEW\n         BH    ERR0060                         TOO MANY\n         ICM   R2,15,OPERAND_02_ADDRESS        2ND OPERAND'S ADDRESS\n         CLC   NAME,0(R2)                      SORT BY NAME?\n         BE    MAIN2210\n         CLC   TTR,0(R2)                       SORT BY TTR?\n         BE    MAIN2220\n         MVI   COMM_MSG_ID+1,5\n         B     ERR1000                         EXIT\nMAIN2210 DS    0H\n         ITRACE ID=BY_NAME\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_NAME\n         B     MAIN2270\nMAIN2220 DS    0H\n         ITRACE ID=BY_TTR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_TTR\n         B     MAIN2270\nMAIN2270 DS    0H\n         ITRACE ID=SORTDSPC\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                         SORT THE DATA SPACE\n         MVC   SPF_ZCMD,COMM_BLANKS            CLEAR COMMAND\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2300 DS    0H\n         ITRACE ID=DSP_CMDS\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,COMMAND_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                         DISPLAY COMMANDS\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN9000 DS    0H\n         ITRACE ID=DUMPDATA\n         MVC   DAIR_DD,OSDUMP_DD               SET DD NAME\n         MVC   DAIR_SYSOUT,COMM_SYSOUT_CLASS   SET SYSOUT CLASS\n         MVI   DAIR_FUNC,$DAIR_ALLOC           SET DAIR FUNCTION\n         MVI   DAIR_OPTS,$DAIR_SYSOUT          TYPE OF DATA SET\n         LA    R1,DAIRREQ                      OSDAIR PARM LIST\n         L     R15,COMM_V_OSDAIR               OSDAIR ENTRY POINT\n         BALR  R14,R15                         LINK TO OSDAIR\n         OC    DAIR_R15,DAIR_R15               SUCCESSFUL?\n         BNZ   ERR0020                         NO\n         GETMAIN RU,                                                   +\n               LV=DUMP_CONTROL_L,                                      +\n               LOC=BELOW\n         ITRACE ID=DUMPCNTL,                                           +\n               RDATA1=R1\n         LR    R6,R1\n         USING DUMP_CONTROL,R6                 DEFINE BASE\n         MVC   DUMP_DCB(DUMP_DCB_L),DUMP_DCB_I\n         MVC   DUMP_OPEN(OPEN_L),OPEN_I\n         MVC   DUMP_CLOSE(CLOSE_L),CLOSE_I\n         LA    R2,DUMP_DCB                     DCB ADDRESS\n         ST    R2,DSPCREQ_DCB                  PASS IT TO OSDSPACE\n         ITRACE ID=OPENDUMP,                                           +\n               RDATA1=R2\n         OPEN  ((R2),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,DUMP_OPEN)\n         LA    R1,DUMP_IO_AREA                 I/O AREA ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR          PASS ADDRESS TO OSDSPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_DUMP\n         LA    R1,DSPCREQ                      OSDSPACE PARMS\n         L     R15,COMM_OSDSPACE               OSDSPACE ENTRY POINT\n         ITRACE ID=DUMP,                                               +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                         DUMP THE DATA SPACE\n         ITRACE ID=CLS_DUMP,                                           +\n               RDATA1=R2\n         CLOSE ((R2)),                                                 +\n               MODE=31,                                                +\n               MF=(E,DUMP_CLOSE)\n         FREEPOOL (R2)\n         MVI   DAIR_FUNC,$DAIR_FREE\n         LA    R1,DAIRREQ                      OSDAIR PARM LIST\n         L     R15,COMM_V_OSDAIR               OSDAIR ENTRY POINT\n         BALR  R14,R15                         LINK TO OSDAIR\n         ITRACE ID=FREE_DMP,                                           +\n               RDATA1=R6\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=DUMP_CONTROL_L\n         MVI   COMM_MSG_ID+1,11                SET MESSAGE NUMBER\n         BAL   R2,MSG0000                      LINK TO OSMSG\n         MVC   SPF_MSG_1,COMM_MSG_1            COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2            COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3            COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4            COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5            COPY MESSAGE\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1',C'ERROR FROM OSDSPACE'\nERR0020  DS    0H\n         ITRACE ID=DSPC_ERR\n         MVC   SPF_MSG_1,COMM_MSG_1            COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2            COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3            COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4            COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5            COPY MESSAGE\n         B     MAIN0150                        DISPLAY WITH MESSAGE\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,5\n         B     ERR1000\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6\n         B     ERR1000\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,7\n         B     ERR1000\nERR0080  DS    0H\n         MVI   COMM_MSG_ID+1,8\n         B     ERR1000\nERR0090  DS    0H\n         MVI   COMM_MSG_ID+1,9\n         ST    R15,COMM_DWORD\n         B     ERR1000\nERR0100  DS    0H\n         MVI   COMM_MSG_ID+1,10\n         B     ERR1000\nERR0110  DS    0H\n         DC    H'0'\nERR0120  DS    0H\n         DC    H'0'\nERR0130  DS    0H\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0000\n         DC    H'0'\nERR0140  DS    0H\n         MVI   COMM_MSG_ID+1,13\n         B     ERR1000\nERR0150  DS    0H\n         MVI   COMM_MSG_ID+1,14\n         B     ERR1000\nERR0160  DS    0H\n         MVI   COMM_MSG_ID+1,15\nERR1000  DS    0H\n         BAL   R2,MSG0000                     BUILD THE MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE\n         B     MAIN0150                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID           IDENTIFY CSECT\n         MVI   COMM_MSG_ID,0                  FORCE 1ST BYTE TO ZERO\n         L     R15,COMM_V_OSMSG               OSMSG ENTRY POINT\n         BALR  R14,R15                        BUILD THE MESSAGE\n         BR    R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRTRY0000 DS    0H\n         ITRACE ID=ABEND,                                              +\n               DATA1=(SESS_SYSTEM_CODE,6)\n         L     R15,COMM_V_OSABEND\n         BALR  R14,R15                        LINK TO OSABEND\n         NI    SESS_ABEND_FLAG,255-$ABENDED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         ICM   R1,15,DXD_VDATA_ADDR\n         BZ    CLEAN010\n         L     R0,DXD_VDATA_LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\nCLEAN010 DS    0H\n         ICM   R4,15,SESS_DCB_ADDR            DCB PRESENT?\n         BZ    CLEAN020                       NO\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R4,                                              +\n               DATA2=SESS_DD\n         CLOSE ((R4)),                        CLOSE DCB                +\n               MODE=31,                                                +\n               MF=(E,DXD_CLOSE)\n         ITRACE ID=FREEPOOL,                                           +\n               RDATA1=R4\n         FREEPOOL (R4)                        FREE BUFFERS\n         L     R0,SESS_DCB_LENGTH\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R4,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R4),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\nCLEAN020 DS    0H\n         MVC   SESS_RETRY,DXD_SAVED_RETRY\n         L     R0,DXD_SIZE                    WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS0000 DS    0H\n         ITRACE ID=BLD_NEW\n         GETMAIN RU,                                                   +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         LR    R3,R1                            SAVE ADDRESS\nNEW      USING SESSION,R3\n         ST    R3,COMM_NEW_SESSION\n         LR    R0,R3\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         BZ    SESS0010                         NO\n         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nSESS0010 DS    0H\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DEFAULT_FORMAT,COMM_BLANKS\n         MVC   NEW.SESS_FORMAT,COMM_BLANKS\n         MVC   NEW.SESS_DATA_LOADER,COMM_BLANKS\n         MVC   NEW.SESS_FUNCTION_MODULE,COMM_BLANKS\n         MVC   NEW.SESS_EXIT_MODULE,COMM_BLANKS\n         MVC   NEW.SESS_DSN,SESS_DSN\n         MVC   NEW.SESS_PATH,SESS_PATH\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         MVC   NEW.SESS_DIALOG_SECTION_LENGTH,H8\n\n         MVI   NEW.SESS_KEYWORD_FLAGS,$KEYWORD_DSN+$KEYWORD_MEMBER+$KEY+\n               WORD_VOL\n         L     R0,COMM_IO_SIZE                  I/O AREA SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,NEW.SESS_IO_AREA                  SAVE ADDRESS\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         XC    NEW.DATASPACE_1_ALET,NEW.DATASPACE_1_ALET\n         XC    NEW.DATASPACE_1_TOKEN,NEW.DATASPACE_1_TOKEN\n         MVC   NEW.DATASPACE_1_NAME,COMM_BLANKS\n         DROP  NEW\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS0100 DS    0H\n         ITRACE ID=NEWSESS,                                            +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         ST    R7,DXD_LINES_REMAINING         SAVE LINES REMAINING\n         ST    R8,DXD_CURRENT_VDATA           SAVE VDATA POSITION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                     RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R8),HEADING_01             COPY HEADING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_SIZE       CXD\nDXD_START      DC    Q(DXD006)\nF1             DC    F'1'\nF2             DC    F'2'\nH1             DC    H'1'\nH2             DC    H'2'\nH6             DC    H'6'\nH8             DC    H'8'\n\nPDSDCB_I DCB   DSORG=PO,                                               +\n               DDNAME=ANYDD,                                           +\n               MACRF=W\nPDSDCB_L       EQU   *-PDSDCB_I\nDUMP_DCB_I     DCB DSORG=PS,                                           +\n               DDNAME=OSDUMP,                                          +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               BLKSIZE=13300,                                          +\n               MACRF=PM\nDUMP_DCB_L     EQU      *-DUMP_DCB_I\nOPEN_I         OPEN     (*,OUTPUT),                                    +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU      *-OPEN_I\nCLOSE_I        CLOSE    (*),                                           +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU      *-CLOSE_I\n\nP1900000        DC    P'1900000'\n\nEDIT_WORD_1     DC    X'4020202020202120'\nEDIT_WORD_2     DC    X'F0212020204B202021'\nEDIT_WORD_3     DC    X'40202020202020202120'\n\nALL             DC    C'ALL '\nAM_ANY          DC    C'ANY'\nAM_24           DC    C' 24'\nAM_31           DC    C' 31'\nAM_64           DC    C' 64'\nRM_24           DC    C'24'\nRM_31           DC    C'31'\nDISASM          DC    C'DISASM  '\nDUMPDATA        DC    C'DUMPDATA'\nPANEL_OS0012    DC    CL8'OS0012'\nPANEL_OS0006    DC    CL8'OS0006'\nPANEL_LMOD      DC    CL8'OSLMOD'\nFORMAT_LMOD     DC    CL8'LMOD'\nMODULE_OSDESERV DC    CL8'OSDESERV'\nMODULE_OSDISASM DC    CL8'OSDISASM'\nNAME            DC    C'NAME'\nRESET           DC    C'RESET'\nOSDUMP_DD       DC    CL8'OSDUMP'\nSIZE            DC    C'SIZE'\nSORT            DC    C'SORT'\nTTR             DC    C'TTR'\nUSER            DC    C'USER'\n\nRESET_MSG       EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    CL26'<-------- Reset'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nRESET_MSG_L     EQU   *-RESET_MSG\n\nDELETED_MSG     EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    CL26'<-------- Deleted'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nDELETED_MSG_L   EQU   *-DELETED_MSG\n\nRENAMED_MSG     EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    CL26'<-------- Renamed'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nRENAMED_MSG_L   EQU   *-RENAMED_MSG\n\nTAGGED_MSG      EQU   *\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    CL26'<-------- Tagged'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nTAGGED_MSG_L    EQU   *-TAGGED_MSG\n\nMSG_01          DC    C'Delete aborted'\nMSG_01_L        EQU   *-MSG_01\n\nMSG_02          DC    C'Member '\nMSG_02_MEMBER   DC    CL8' '\n                DC    C' deleted'\nMSG_02_L        EQU   *-MSG_02\n\nHEADING_01      DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH_YELLOW)\n                DC    CL18' '\n                DC    C'Name____'\n                DC    C' '\n                DC    C'_TTR__'\n                DC    C' '\n                DC    C'______Size________'\n                DC    C' '\n                DC    C'AC'\n                DC    C' '\n                DC    C'AM'\n                DC    C' '\n                DC    C'RM'\n                DC    C' '\nHEADING_01_L    EQU   *-HEADING_01\n\n                LTORG\n\nLINE_COMMANDS   DS    0C\n                CMD   B,MAIN0470,'Browse'\n                CMD   D,MAIN0600,'Delete'\n                CMD   E,MAIN0500,'Edit'\n                CMD   L,MAIN0370,'Display LMOD data'\n                CMD   S,MAIN0470,'Select (browse)'\n                CMD   T,MAIN0510,'Tag'\n                CMD   V,MAIN0470,'View (browse)'\n                CMD   X,MAIN0410,'Reset tag'\n                CMD   Z,MAIN0630,'Disassemble'\n                CMD   ?,MAIN0690,'Display available commands'\n                DC    X'FF'\n\nCOMMAND_TABLE   DS    0C\n                CMD   B,MAIN0480,'Browse member'\n                CMD   D,MAIN0620,'Delete member'\n                CMD   F,MAIN0380,'Find member'\n                CMD   L,MAIN0380,'Locate member'\n                CMD   S,MAIN0480,'Select (browse) member'\n                CMD   T,MAIN0520,'Tag member'\n                CMD   V,MAIN0480,'View (browse) member'\n                CMD   X,MAIN0420,'Reset tag for member'\n                CMD   Z,MAIN0640,'Disassemble a member'\n                CMD   FI,MAIN0380,'Find member'\n                CMD   FL,MAIN0520,'List available formats'\n                CMD   DEL,MAIN0620,'DELete member'\n                CMD   LOC,MAIN0380,'Locate member'\n                CMD   REF,MAIN0000,'Refresh member list'\n                CMD   TAG,MAIN0520,'Tag member'\n                CMD   FIND,MAIN0380,'Find member'\n                CMD   FLAG,MAIN0520,'Flag (tag) member'\n                CMD   LIST,MAIN0520,'List available formats'\n                CMD   VIEW,MAIN0480,'View (browse) member'\n                CMD   FLIST,MAIN0520,'List available formats'\n                CMD   RESET,MAIN0420,'Reset tag for member'\n                CMD   RFIND,MAIN0390,'Repeat find'\n                CMD   BROWSE,MAIN0480,'Browse member'\n                CMD   DELETE,MAIN0620,'Delete member'\n                CMD   DISASM,MAIN0640,'Disassemble a member'\n                CMD   DUMPDATA,MAIN9000,'Dump data space'\n                CMD   LOCATE,MAIN0380,'Locate member'\n                CMD   REFRESH,MAIN0700,'Refresh member list'\n                CMD   ??,MAIN2300,'Display list of available commands'\n                DC    X'FF'\n\nOSLMDIREND      EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD006              DSECT\n                    COPY   DXDPREF\n\nDXD_OPEN            DS     0F,(OPEN_L)X\nDXD_CLOSE           DS     0F,(CLOSE_L)X\nDXD_DCB             DS     0F,(PDSDCB_L)X\n\nDXD_VDATA_ADDR      DS     A\nDXD_VDATA_LENGTH    DS     F\n\nDXD_CURRENT_VDATA   DS     A\nDXD_LINES_REMAINING DS     F\nDXD_CURSOR_POSITION DS     F\n\nDXD_VWIDTH          DS     F                   DYNAMIC AREA WIDTH\nDXD_VDEPTH          DS     F                   DYNAMIC AREA DEPTH\n\nDXD_SAVED_RETRY     DS     A                   CALLERS RETRY POINT\n\nDXD_RC              DS     H                   RETURN CODE\nDXD_LINES_BUILT     DS     H                   LINES BUILT\n\nDXD_MEMBER          DS     CL8                 SELECTED MEMBER\n\nDXD_FLAGS           DS     X                   FLAGS/INDICATORS\n$DXD_INIT           EQU    X'80'               .. DATA HAS BEEN BUILT\n$LINE_CMD           EQU    X'40'               .. A MEMBER WAS SELECTED\n\n                    COPY   DIR\n\n                    DAIRREQ  DSECT=NO\n                    DSPCREQ  DSECT=NO\n                    LOADREQ  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                    *\n* ------------------------------------------------------------------- *\nVDATA            DSECT\n                 DS     XL15\nVDATA_ATTR_1     DS     X\nVDATA_SELECTION  DS     X\nVDATA_ATTR_2     DS     X\n                 DS     C\nVDATA_NAME       DS     CL8\nVDATA_ATTR_3     DS     X\nVDATA_TTR        DS     XL6\nVDATA_OVERLAY    DS    0CL(VDATA_OVERLAY_L)\nVDATA_SIZE       DS     XL8\n                 DS     C\nVDATA_DELIM1     DS     C\nVDATA_SIZE_HEX   DS     CL8\nVDATA_DELIM2     DS     C\n                 DS     X\nVDATA_AC         DS     C\n                 DS     X\nVDATA_AM         DS     CL3\nVDATA_SLASH      DS     X\nVDATA_RM         DS     CL2\nVDATA_OVERLAY_L  EQU    *-VDATA_SIZE\nVDATA_L          EQU    *-VDATA\n* ------------------------------------------------------------------- *\n*                                                                    *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMP_CONTROL     DSECT\nDUMP_DCB         DS       0F,(DUMP_DCB_L)X\nDUMP_OPEN        DS       0F,(OPEN_L)X\nDUMP_CLOSE       DS       0F,(CLOSE_L)X\nDUMP_IO_AREA     DS       CL133\nDUMP_CONTROL_L   EQU      *-DUMP_CONTROL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMMAND_DSECT    DSECT\nCOMMAND_LENGTH   DS       X\nCOMMAND_COMMAND  DS       CL8\nCOMMAND_ADDRESS  DS       AL4\nCOMMAND_L        EQU      *-COMMAND_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 IBMMAC   DCBD=PO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                EQUATES                                              *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                 END      OSLMDIR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSLMESD": {"ttr": 5893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00I\\x01\\t!\\x8f\\x01\\t6/\\x150\\x01j\\x01l\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-08-06T00:00:00", "modifydate": "2009-12-28T15:30:49", "lines": 362, "newlines": 364, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMESD                                               *\n*                                                                     *\n*  Display ESD info                                                   *\n*                                                                     *\n*  The ESD info has already been stored in the data space.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMESD  CSECT\nOSLMESD  AMODE 31\nOSLMESD  RMODE ANY\n         USING OSLMESD,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMESD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLMESDEND-OSLMESD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(R10)\n         LA    R9,2048(R9)\n         DROP  R15\n         USING OSLMESD,R10,R9\n         L     R5,COMM_OSSPFD                 SPF DATA ADDRESS\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLMESD_DXD_L               WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR               SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMESD_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                         SET WORK AREA ADDRESS\n         USING OSLMESD_DXD,R13                DEFINE BASE\n         MVC   DXD_CSECT,MODID                SET MODULE ID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,ESDDATA_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR               WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESD0000  DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         NI    DXD_FLAGS,255-$HEADING\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nESD0010  DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         TM    DXD_FLAGS,$HEADING\n         BO    ESD0020\n         OI    DXD_FLAGS,$HEADING\n         MVC   0(HEADING_L,R4),HEADING\n         A     R4,DXD_VWIDTH\n         BCTR  R3,0\nESD0020  DS    0H\n         MVC   0(MSG1_L,R4),MSG1\n         USING MSG1,R4\n         MVC   MSG1_NAME,ESDDATA_NAME\n         MVC   MSG1_TYPE,ESDDATA_TYPE\n         MVC   MSG1_QUAL,ESDDATA_QUAL\n         UNPK  MSG1_LENGTH(9),ESDDATA_LENGTH(5)\n         TR    MSG1_LENGTH,COMM_HEXCHAR\n         MVI   MSG1_LENGTH+8,C' '\n         UNPK  MSG1_ELEMENT_OFFSET(9),ESDDATA_ELEMENT_OFFSET(5)\n         TR    MSG1_ELEMENT_OFFSET,COMM_HEXCHAR\n         MVI   MSG1_ELEMENT_OFFSET+8,C' '\n         UNPK  MSG1_CLASS_OFFSET(9),ESDDATA_CLASS_OFFSET(5)\n         TR    MSG1_CLASS_OFFSET,COMM_HEXCHAR\n         MVI   MSG1_CLASS_OFFSET+8,C' '\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0030\n         DROP  R4\n         B     DISP0000                    SCREEN FULL\nESD0030  DS    0H\n         LA    R0,1                        CONSTANT 1\n         A     R0,DSPCREQ_RECORD_NBR       PLUS CURRENT RECORD NBR\n         C     R0,DATASPACE_1_LAST_RECORD  BEYOND LAST RECORD?\n         BH    DISP0000                    YES\n         ST    R0,DSPCREQ_RECORD_NBR       UPDATE RECORD NBR\n         B     ESD0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT SELECTED?\n         BNE   EXIT0000                    YES\n         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?\n         BNE   EXIT0000                    YES\n         OC    SESS_RC,SESS_RC             RC=0?\n         BZ    DISP0010                    YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'              BOTTOM?\n         BE    DISP0100                    YES\n         CLI   SPF_ZVERB,C'D'              DOWN?\n         BE    DISP0200                    YES\n         CLI   SPF_ZVERB,C'T'              TOP?\n         BE    DISP0300                    YES\n         CLI   SPF_ZVERB,C'U'              UP?\n         BE    DISP0400                    YES\n         B     DISP0000\n\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     ESD0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     LINES TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     ESD0000                             GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     ESD0000\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     ESD0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         BR    R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?\n         BZ    CLEAN010                     NO\n         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                      FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMESD_DXD_L             WORK AREA SIZE\n         LR    R1,R13                       COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                  RESTORE R13\n         FREEMAIN RU,                       FREE WORK AREA             +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                  RESTORE SAVE AREA ADDRESS\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)              RESTORE REMAINING REGISTERS\n         SR    R15,R15                      SET RC\n         BR    R14                          RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                   DC   F'1'\nF4                   DC   F'4'\nH1                   DC   H'1'\nPANEL_NAME           DC   CL8'OSLMESD'\n\nHEADING              DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n                     DC   C'Name      ty  ql   length   elem off  '\n                     DC   C'Class off'\nHEADING_L            EQU  *-HEADING\n\nMSG1                 DS   0C\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG1_NAME            DC   CL8' '\n                     DC   CL2' '\nMSG1_TYPE            DC   CL2' '\n                     DC   CL2' '\nMSG1_QUAL            DC   CL2' '\n                     DC   CL2' '\nMSG1_LENGTH          DC   CL8' '\n                     DC   CL2' '\nMSG1_ELEMENT_OFFSET  DC   CL8' '\n                     DC   CL2' '\nMSG1_CLASS_OFFSET    DC   CL8' '\n                     DC   CL2' '\nMSG1_L               EQU  *-MSG1\n\n\nOSLMESDEND           EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMESD_DXD          DSECT\n                     COPY  DXDPREF\n\nDXD_VDATA_ADDR       DS    A\nDXD_VDATA_LENGTH     DS    F\n\nDXD_VWIDTH           DS    F\nDXD_VDEPTH           DS    F\n\nDXD_FLAGS            DS    X\n$HEADING             EQU   X'80'            HEADING DISPLAYED\n\n                     DSPCREQ  DSECT=NO\n\n                     COPY  ESDDATA\nOSLMESD_DXD_L        EQU   *-OSLMESD_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=ESD,                                               +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT    DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD      TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY        ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY        TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY        REGEQU\n         END         OSLMESD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMESDD": {"ttr": 5902, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x01\\x01\\t!\\x8f\\x01\\t6/\\x151\\x05\\x0b\\x05\\x0e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-08-06T00:00:00", "modifydate": "2009-12-28T15:31:01", "lines": 1291, "newlines": 1294, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMESDD                                              *\n*                                                                     *\n*  Display ESD info detail                                            *\n*                                                                     *\n*  The ESD info has already been stored in the data space.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMESDD CSECT\nOSLMESDD AMODE 31\nOSLMESDD RMODE ANY\n         USING OSLMESDD,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMESDD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLMESDDEND-OSLMESDD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(R10)\n         LA    R9,2048(R9)\n         DROP  R15\n         USING OSLMESDD,R10,R9\n         L     R5,COMM_OSSPFD                 SPF DATA ADDRESS\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLMESDD_DXD_L              WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR               SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMESDD_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                         SET WORK AREA ADDRESS\n         USING OSLMESDD_DXD,R13               DEFINE BASE\n         MVC   DXD_CSECT,MODID                SET MODULE ID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,ESDDATA_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR               WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESD0000  DS    0H\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nESD0010  DS    0H\n         MVC   0(80,R4),COMM_BLANKS\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0010\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\n         BCTR  R3,0\n         BCTR  R3,0                   < -- RESERVE ROOM FOR TOTAL MSG\nESD0020  DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n\n         MVC   0(MSG_01_L,R4),MSG_01\n         USING MSG_01,R4\n         MVC   MSG_01_NAME,ESDDATA_NAME\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0030\n         DROP  R4\n         B     ESD5000                   SCREEN FULL\n\nESD0030  DS    0H\n         MVC   0(MSG_02_L,R4),MSG_02\n         USING MSG_02,R4\n         MVC   MSG_02_TYPE,ESDDATA_TYPE\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0040\n         DROP  R4\n         B     ESD5000                   SCREEN FULL\n\nESD0040  DS    0H\n         MVC   0(MSG_03_L,R4),MSG_03\n         USING MSG_03,R4\n         MVC   MSG_03_QUAL,ESDDATA_QUAL\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0060\n         DROP  R4\n         B     ESD5000\n\nESD0060  DS    0H\n         MVC   0(MSG_04_L,R4),MSG_04\n         USING MSG_04,R4\n         UNPK  MSG_04_NAME_SPACE(3),ESDDATA_NAME_SPACE(2)\n         TR    MSG_04_NAME_SPACE,COMM_HEXCHAR\n         MVI   MSG_04_NAME_SPACE+2,C' '\n         SR    R14,R14\n         IC    R14,ESDDATA_NAME_SPACE\n         C     R14,F4\n         BH    ESD0070\n         MH    R14,=Y(L'MSG_04_DESC)\n         LA    R14,NAME_SPACE_DESC(R14)\n         MVC   MSG_04_DESC,0(R14)\nESD0070  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0080\n         DROP  R4\n         B     ESD5000\n\nESD0080  DS    0H\n         MVC   0(MSG_05_L,R4),MSG_05\n         USING MSG_05,R4\n         MVC   MSG_05_SCOPE,ESDDATA_SCOPE\n         CLI   ESDDATA_SCOPE,C'S'\n         BE    ESD0090\n         CLI   ESDDATA_SCOPE,C'M'\n         BE    ESD0100\n         CLI   ESDDATA_SCOPE,C'L'\n         BE    ESD0110\n         CLI   ESDDATA_SCOPE,C'X'\n         BE    ESD0120\n         B     ESD0130\nESD0090  DS    0H\n         MVC   MSG_05_DESC,SCOPE_DESC_S\n         B     ESD0130\nESD0100  DS    0H\n         MVC   MSG_05_DESC,SCOPE_DESC_M\n         B     ESD0130\nESD0110  DS    0H\n         MVC   MSG_05_DESC,SCOPE_DESC_L\n         B     ESD0130\nESD0120  DS    0H\n         MVC   MSG_05_DESC,SCOPE_DESC_X\nESD0130  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0140\n         DROP  R4\n         B     ESD5000\n\nESD0140  DS    0H\n         MVC   0(MSG_06_L,R4),MSG_06\n         USING MSG_06,R4\n         UNPK  MSG_06_SYMBOL_ATTR(3),ESDDATA_SYMBOL_ATTR(2)\n         TR    MSG_06_SYMBOL_ATTR,COMM_HEXCHAR\n         MVI   MSG_06_SYMBOL_ATTR+2,C' '\n         LA    R14,MSG_06_DESC\n         TM    ESDDATA_SYMBOL_ATTR,ESD_STRONG\n         BNO   ESD0150\n         MVC   0(L'DESC_STRONG,R14),DESC_STRONG\n         LA    R14,L'DESC_STRONG+2(,R14)\nESD0150  DS    0H\n         TM    ESDDATA_SYMBOL_ATTR,ESD_RENAMEABLE\n         BNO   ESD0160\n         MVC   0(L'DESC_RENAMEABLE,R14),DESC_RENAMEABLE\n         LA    R14,L'DESC_RENAMEABLE+2(,R14)\nESD0160  DS    0H\n         TM    ESDDATA_SYMBOL_ATTR,ESD_DESCRIPTOR\n         BNO   ESD0170\n         MVC   0(L'DESC_DESCRIPTOR,R14),DESC_DESCRIPTOR\n         LA    R14,L'DESC_DESCRIPTOR+2(,R14)\nESD0170  DS    0H\n         TM    ESDDATA_SYMBOL_ATTR,ESD_MANGLED\n         BNO   ESD0180\n         MVC   0(L'DESC_MANGLED,R14),DESC_MANGLED\n         LA    R14,L'DESC_MANGLED+2(,R14)\nESD0180  DS    0H\n         TM    ESDDATA_SYMBOL_ATTR,ESD_XPLINK\n         BNO   ESD0190\n         MVC   0(L'DESC_XPLINK,R14),DESC_XPLINK\n         LA    R14,L'DESC_XPLINK+2(,R14)\nESD0190  DS    0H\n         TM    ESDDATA_SYMBOL_ATTR,ESD_ADA_EXISTS\n         BNO   ESD0200\n         MVC   0(L'DESC_ADA,R14),DESC_ADA\n         LA    R14,L'DESC_XPLINK+2(,R14)\nESD0200  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0210\n         DROP  R4\n         B     ESD5000\n\nESD0210  DS    0H\n         MVC   0(MSG_07_L,R4),MSG_07\n         USING MSG_07,R4\n         MVC   MSG_07_RESIDENT,ESDDATA_RESIDENT\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0220\n         B     ESD5000\n         DROP  R4\n\nESD0220  DS    0H\n         MVC   0(MSG_08_L,R4),MSG_08\n         USING MSG_08,R4\n         ICM   R1,15,ESDDATA_LENGTH\n         BAL   R14,NBR0000\n         MVC   MSG_08_LENGTH,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0230\n         B     ESD5000\n         DROP  R4\n\nESD0230  DS    0H\n         MVC   0(MSG_09_L,R4),MSG_09\n         USING MSG_09,R4\n         UNPK  MSG_09_ALIGN(3),ESDDATA_ALIGN(2)\n         TR    MSG_09_ALIGN,COMM_HEXCHAR\n         MVI   MSG_09_ALIGN+2,C' '\n         CLI   ESDDATA_ALIGN,X'01'         HALFWORD ALIGNED?\n         BE    ESD0240\n         CLI   ESDDATA_ALIGN,X'02'         FULLWORD ALIGNED?\n         BE    ESD0250\n         CLI   ESDDATA_ALIGN,X'03'         DOUBLE WORD ALIGNED?\n         BE    ESD0260\n         CLI   ESDDATA_ALIGN,X'0C'         4K PAGE ALIGNED?\n         BE    ESD0270\n         B     ESD0280\nESD0240  DS    0H\n         MVC   MSG_09_DESC,ALIGN_DESC_HALFWORD\n         B     ESD0280\nESD0250  DS    0H\n         MVC   MSG_09_DESC,ALIGN_DESC_FULLWORD\n         B     ESD0280\nESD0260  DS    0H\n         MVC   MSG_09_DESC,ALIGN_DESC_DWORD\n         B     ESD0280\nESD0270  DS    0H\n         MVC   MSG_09_DESC,ALIGN_DESC_PAGE\n         B     ESD0280\nESD0280  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0290\n         B     ESD5000\n         DROP  R4\n\nESD0290  DS    0H\n         MVC   0(MSG_10_L,R4),MSG_10\n         USING MSG_10,R4\n         UNPK  MSG_10_USABILITY(3),ESDDATA_USABILITY(2)\n         TR    MSG_10_USABILITY,COMM_HEXCHAR\n         MVI   MSG_10_USABILITY+2,C' '\n         CLI   ESDDATA_USABILITY,X'01'         NOT REUSABLE?\n         BE    ESD0300\n         CLI   ESDDATA_USABILITY,X'02'         REUSABLE?\n         BE    ESD0310\n         CLI   ESDDATA_USABILITY,X'03'         REENTRANT?\n         BE    ESD0320\n         CLI   ESDDATA_USABILITY,X'04'         REFRESHABLE?\n         BE    ESD0330\n         B     ESD0340\nESD0300  DS    0H\n         MVC   MSG_10_DESC(L'NONE),NONE\n         B     ESD0340\nESD0310  DS    0H\n         MVC   MSG_10_DESC,USABILITY_DESC_REUSABLE\n         B     ESD0340\nESD0320  DS    0H\n         MVC   MSG_10_DESC,USABILITY_DESC_REENTRANT\n         B     ESD0340\nESD0330  DS    0H\n         MVC   MSG_10_DESC,USABILITY_DESC_REFRESH\nESD0340  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0350\n         B     ESD5000\n         DROP  R4\n\nESD0350  DS    0H\n         MVC   0(MSG_11_L,R4),MSG_11\n         USING MSG_11,R4\n         UNPK  MSG_11_AMODE(3),ESDDATA_AMODE(2)\n         TR    MSG_11_AMODE,COMM_HEXCHAR\n         MVI   MSG_11_AMODE+2,C' '\n         CLI   ESDDATA_AMODE,X'01'       AMODE 24?\n         BE    ESD0360\n         CLI   ESDDATA_AMODE,X'02'       AMODE 31?\n         BE    ESD0370\n         CLI   ESDDATA_AMODE,X'03'       AMODE ANY?\n         BE    ESD0380\n         CLI   ESDDATA_AMODE,X'04'       AMODE MIN?? (WHAT'S THAT?)\n         BE    ESD0390\n         CLI   ESDDATA_AMODE,X'06'       AMODE 64?\n         BE    ESD0400\n         B     ESD0410\nESD0360  DS    0H\n         MVC   MSG_11_DESC,AMODE_DESC_24\n         B     ESD0410\nESD0370  DS    0H\n         MVC   MSG_11_DESC,AMODE_DESC_31\n         B     ESD0410\nESD0380  DS    0H\n         MVC   MSG_11_DESC,AMODE_DESC_ANY\n         B     ESD0410\nESD0390  DS    0H\n         MVC   MSG_11_DESC,AMODE_DESC_MIN\n         B     ESD0410\nESD0400  DS    0H\n         MVC   MSG_11_DESC,AMODE_DESC_64\nESD0410  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0420\n         B     ESD5000\n         DROP  R4\n\nESD0420  DS    0H\n         MVC   0(MSG_12_L,R4),MSG_12\n         USING MSG_12,R4\n         UNPK  MSG_12_RMODE(3),ESDDATA_RMODE(2)\n         TR    MSG_12_RMODE,COMM_HEXCHAR\n         MVI   MSG_12_RMODE+2,C' '\n         CLI   ESDDATA_RMODE,X'01'            RMODE 24?\n         BE    ESD0430\n         CLI   ESDDATA_RMODE,X'03'            RMODE 31 OR ANY?\n         BE    ESD0440\n         B     ESD0450\nESD0430  DS    0H\n         MVC   MSG_12_DESC,AMODE_DESC_24      (USE AMODE DESC)\n         B     ESD0450\nESD0440  DS    0H\n         MVC   MSG_12_DESC,AMODE_DESC_ANY     (USE AMODE DESC)\nESD0450  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0460\n         B     ESD5000\n         DROP  R4\n\nESD0460  DS    0H\n         MVC   0(MSG_13_L,R4),MSG_13\n         USING MSG_13,R4\n         UNPK  MSG_13_RECFM(5),ESDDATA_RECFM(3)\n         TR    MSG_13_RECFM,COMM_HEXCHAR\n         MVI   MSG_13_RECFM+4,C' '\n         CLC   ESDDATA_RECFM,H1\n         BH    ESD0470\n         BNE   ESD0480\n         MVC   MSG_13_DESC,RECFM_DESC_BYTESTREAM\n         B     ESD0480\nESD0470  DS    0H\n         MVC   MSG_13_DESC,RECFM_DESC_FIXED\nESD0480  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0490\n         B     ESD5000\n         DROP  R4\n\nESD0490  DS    0H\n         MVC   0(MSG_14_L,R4),MSG_14\n         USING MSG_14,R4\n         UNPK  MSG_14_LOAD_FLAGS(3),ESDDATA_LOAD_FLAGS(2)\n         TR    MSG_14_LOAD_FLAGS,COMM_HEXCHAR\n         MVI   MSG_14_LOAD_FLAGS+2,C' '\n         LA    R14,MSG_14_DESC\n         TM    ESDDATA_LOAD_FLAGS,X'80'        READ ONLY\n         BNO   ESD0500\n         MVC   0(L'LOAD_DESC_READONLY,R14),LOAD_DESC_READONLY\n         LA    R14,L'LOAD_DESC_READONLY+2(,R14)\nESD0500  DS    0H\n         TM    ESDDATA_LOAD_FLAGS,X'40'        DO NOT LOAD?\n         BNO   ESD0510\n         MVC   0(L'LOAD_DESC_NOLOAD,R14),LOAD_DESC_NOLOAD\n         LA    R14,L'LOAD_DESC_NOLOAD+2(,R14)\nESD0510  DS    0H\n         TM    ESDDATA_LOAD_FLAGS,X'20'        MOVEABLE\n         BNO   ESD0520\n         MVC   0(L'LOAD_DESC_MOVEABLE,R14),LOAD_DESC_MOVEABLE\n         LA    R14,L'LOAD_DESC_MOVEABLE+2(,R14)\nESD0520  DS    0H\n         TM    ESDDATA_LOAD_FLAGS,X'10'        SHAREABLE\n         BNO   ESD0530\n         MVC   0(L'LOAD_DESC_SHAREABLE,R14),LOAD_DESC_SHAREABLE\n         LA    R14,L'LOAD_DESC_SHAREABLE+2(,R14)\nESD0530  DS    0H\n         TM    ESDDATA_LOAD_FLAGS,X'08'        DEFERRED\n         BNO   ESD0540\n         MVC   0(L'LOAD_DESC_DEFERRED,R14),LOAD_DESC_DEFERRED\n         LA    R14,L'LOAD_DESC_DEFERRED+2(,R14)\nESD0540  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0550\n         B     ESD5000\n         DROP  R4\n\nESD0550  DS    0H\n         MVC   0(MSG_15_L,R4),MSG_15\n         USING MSG_15,R4\n         UNPK  MSG_15_BIND_FLAGS(3),ESDDATA_BIND_FLAGS(2)\n         TR    MSG_15_BIND_FLAGS,COMM_HEXCHAR\n         MVI   MSG_15_BIND_FLAGS+2,C' '\n         LA    R14,MSG_15_BIND_DESC\n         TM    ESDDATA_BIND_FLAGS,X'80'     BINDER GENERATED SD, ETC?\n         BNO   ESD0560\n         MVC   0(L'BIND_DESC_GENNED,R14),BIND_DESC_GENNED\n         LA    R14,L'BIND_DESC_GENNED+2(,R14)\nESD0560  DS    0H\n         TM    ESDDATA_BIND_FLAGS,X'40'     NO CLASS DATA?\n         BNO   ESD0570\n         MVC   0(L'BIND_DESC_NOCLASS,R14),BIND_DESC_NOCLASS\n         LA    R14,L'BIND_DESC_NOCLASS+2(,R14)\nESD0570  DS    0H\n         TM    ESDDATA_BIND_FLAGS,X'20'     VARIABLE LENGTH RECORDS?\n         BNO   ESD0580\n         MVC   0(L'BIND_DESC_VARIABLE,R14),BIND_DESC_VARIABLE\n         LA    R14,L'BIND_DESC_VARIABLE+2(,R14)\nESD0580  DS    0H\n         TM    ESDDATA_BIND_FLAGS,X'10'     DESCRIPTIVE DATA?\n         BNO   ESD0590\n         MVC   0(L'BIND_DESC_DESCRIPTIVE,R14),BIND_DESC_DESCRIPTIVE\n         LA    R14,L'BIND_DESC_DESCRIPTIVE+2(,R14)\nESD0590  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0600\n         B     ESD5000\nESD0600  DS    0H\n         TM    ESDDATA_BIND_FLAGS,X'0F'\n         BNO   ESD0630\n         LA    R14,MSG_15_BIND_DESC\n         TM    ESDDATA_BIND_FLAGS,X'08'     PART INITIALIZERS?\n         BNO   ESD0610\n         MVC   0(L'BIND_DESC_INITIALIZERS,R14),BIND_DESC_INITIALIZERs\n         LA    R14,L'BIND_DESC_INITIALIZERS+2(,R14)\nESD0610  DS    0H\n         TM    ESDDATA_BIND_FLAGS,X'04'     FILL CHARACTER SPECIFIED?\n         BNO   ESD0620\n         MVC   0(L'BIND_DESC_FILL,R14),BIND_DESC_FILL\n         LA    R14,L'BIND_DESC_FILL+2(,R14)\nESD0620  DS    0H\n         TM    ESDDATA_BIND_FLAGS,X'02'     PADDING?\n         BNO   ESD0630\n         MVC   0(L'BIND_DESC_PADDING,R14),BIND_DESC_PADDING\n         LA    R14,L'BIND_DESC_PADDING+2(,R14)\nESD0630  DS    0H\n         CLC   0(80,R4),COMM_BLANKS\n         BE    ESD0640\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0640\n         B     ESD5000\n         DROP  R4\n\nESD0640  DS    0H\n         MVC   0(MSG_16_L,R4),MSG_16\n         USING MSG_16,R4\n         UNPK  MSG_16_BIND_CNTL(3),ESDDATA_BIND_CNTL(2)\n         TR    MSG_16_BIND_CNTL,COMM_HEXCHAR\n         MVI   MSG_16_BIND_CNTL+2,C' '\n         LA    R14,MSG_16_DESC\n         TM    ESDDATA_BIND_CNTL,X'30'     CATENATED TEXT?\n         BNZ   ESD0650\n         MVC   0(L'BIND_DESC_CATENATED,R14),BIND_DESC_CATENATED\n         LA    R14,L'BIND_DESC_CATENATED+2(,R14)\n         B     ESD0660\nESD0650  DS    0H\n         TM    ESDDATA_BIND_CNTL,X'10'     MERGED TEXT?\n         BNO   ESD0660\n         MVC   0(L'BIND_DESC_MERGED,R14),BIND_DESC_MERGED\n         LA    R14,L'BIND_DESC_MERGED+2(,R14)\nESD0660  DS    0H\n         TM    ESDDATA_BIND_CNTL,X'02'     INSTRUCTIONS?\n         BNO   ESD0670\n         MVC   0(L'BIND_DESC_INSTRUCTIONS,R14),BIND_DESC_INSTRUCTIONS\n         LA    R14,L'BIND_DESC_INSTRUCTIONS+2(,R14)\nESD0670  DS    0H\n         TM    ESDDATA_BIND_CNTL,X'01'     DATA?\n         BNO   ESD0680\n         MVC   0(L'BIND_DESC_DATA,R14),BIND_DESC_DATA\n         LA    R14,L'BIND_DESC_DATA+2(,R14)\nESD0680  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0690\n         B     ESD5000\n         DROP  R4\n\nESD0690  DS    0H\n         MVC   0(MSG_17_L,R4),MSG_17\n         USING MSG_17,R4\n         UNPK  MSG_17_ATTR(3),ESDDATA_ATTRIBUTES(2)\n         TR    MSG_17_ATTR,COMM_HEXCHAR\n         MVI   MSG_17_ATTR+2,C' '\n         LA    R14,MSG_17_DESC\n         TM    ESDDATA_ATTRIBUTES,X'80'    SYSTEM LE?\n         BNO   ESD0700\n         MVC   0(L'ATTR_DESC_SYSTEMLE,R14),ATTR_DESC_SYSTEMLE\n         LA    R14,L'ATTR_DESC_SYSTEMLE+2(,R14)\nESD0700  DS    0H\n         TM    ESDDATA_ATTRIBUTES,X'40'    LIGHTWEIGHT LE?\n         BNO   ESD0710\n         MVC   0(L'ATTR_DESC_LIGHTLE,R14),ATTR_DESC_LIGHTLE\n         LA    R14,L'ATTR_DESC_LIGHTLE+2(,R14)\nESD0710  DS    0H\n         TM    ESDDATA_ATTRIBUTES,X'0C'    I LEVEL ERRORS?\n         BNZ   ESD0720\n         MVC   0(L'ATTR_DESC_ILEVEL,R14),ATTR_DESC_ILEVEL\n         LA    R14,L'ATTR_DESC_ILEVEL+2(,R14)\nESD0720  DS    0H\n         TM    ESDDATA_ATTRIBUTES,X'0C'    S LEVEL ERRORS?\n         BNO   ESD0730\n         MVC   0(L'ATTR_DESC_SLEVEL,R14),ATTR_DESC_SLEVEL\n         LA    R14,L'ATTR_DESC_SLEVEL+2(,R14)\nESD0730  DS    0H\n         TM    ESDDATA_ATTRIBUTES,X'08'    E LEVEL ERRORS?\n         BNO   ESD0740\n         MVC   0(L'ATTR_DESC_ELEVEL,R14),ATTR_DESC_ELEVEL\n         LA    R14,L'ATTR_DESC_ELEVEL+2(,R14)\nESD0740  DS    0H\n         TM    ESDDATA_ATTRIBUTES,X'04'    W LEVEL ERRORS?\n         BNO   ESD0750\n         MVC   0(L'ATTR_DESC_WLEVEL,R14),ATTR_DESC_WLEVEL\n         LA    R14,L'ATTR_DESC_WLEVEL+2(,R14)\nESD0750  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0760\n         B     ESD5000\n         DROP  R4\n\nESD0760  DS    0H\n         MVC   0(MSG_18_L,R4),MSG_18\n         USING MSG_18,R4\n         MVC   MSG_18_XATTR_CLASS,ESDDATA_XATTR_CLASS\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0770\n         B     ESD5000\n         DROP  R4\n\nESD0770  DS    0H\n         MVC   0(MSG_19_L,R4),MSG_19\n         USING MSG_19,R4\n         ICM   R1,15,ESDDATA_XATTR_OFFSET\n         BAL   R14,NBR0000\n         MVC   MSG_19_XATTR_OFFSET,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0780\n         B     ESD5000\n         DROP  R4\n\nESD0780  DS    0H\n         MVC   0(MSG_20_L,R4),MSG_20\n         USING MSG_20,R4\n         SR    R1,R1\n         ICM   R1,3,ESDDATA_SEGMENT\n         BAL   R14,NBR0000\n         MVC   MSG_20_SEGMENT,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0790\n         B     ESD5000\n         DROP  R4\n\nESD0790  DS    0H\n         MVC   0(MSG_21_L,R4),MSG_21\n         USING MSG_21,R4\n         SR    R1,R1\n         ICM   R1,3,ESDDATA_REGION\n         BAL   R14,NBR0000\n         MVC   MSG_21_REGION,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0800\n         B     ESD5000\n         DROP  R4\n\nESD0800  DS    0H\n         MVC   0(MSG_22_L,R4),MSG_22\n         USING MSG_22,R4\n         MVC   MSG_22_SIGNATURE,ESDDATA_SIGNATURE\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0810\n         B     ESD5000\n         DROP  R4\n\nESD0810  DS    0H\n         MVC   0(MSG_23_L,R4),MSG_23\n         USING MSG_23,R4\n         UNPK  MSG_23_AUTOCALL(3),ESDDATA_AUTOCALL(2)\n         TR    MSG_23_AUTOCALL,COMM_HEXCHAR\n         MVI   MSG_23_AUTOCALL+2,C' '\n         TM    ESDDATA_AUTOCALL,X'40'\n         BNO   ESD0820\n         MVC   MSG_23_DESC(L'AUTOCALL_DESC_ALIAS),AUTOCALL_DESC_ALIAS\nESD0820  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0830\n         B     ESD5000\n         DROP  R4\n\nESD0830  DS    0H\n         MVC   0(MSG_24_L,R4),MSG_24\n         USING MSG_24,R4\n         UNPK  MSG_24_STATUS(3),ESDDATA_STATUS(2)\n         TR    MSG_24_STATUS,COMM_HEXCHAR\n         MVI   MSG_24_STATUS+2,C' '\n         LA    R14,MSG_24_DESC\n         TM    ESDDATA_STATUS,ESD_RESOLVED\n         BNO   ESD0840\n         MVC   0(L'DESC_RESOLVED,R14),DESC_RESOLVED\n         LA    R14,L'DESC_RESOLVED+2(,R14)\nESD0840  DS    0H\n         TM    ESDDATA_STATUS,ESD_AC_PROC\n         BNO   ESD0850\n         MVC   0(L'DESC_AC_PROC,R14),DESC_AC_PROC\n         LA    R14,L'DESC_AC_PROC+2(,R14)\nESD0850  DS    0H\n         TM    ESDDATA_STATUS,ESD_INCLUDE\n         BNO   ESD0860\n         MVC   0(L'DESC_INCLUDE,R14),DESC_INCLUDE\n         LA    R14,L'DESC_INCLUDE+2(,R14)\nESD0860  DS    0H\n         TM    ESDDATA_STATUS,ESD_NOT_FOUND\n         BNO   ESD0870\n         MVC   0(L'DESC_NOT_FOUND,R14),DESC_NOT_FOUND\n         LA    R14,L'DESC_NOT_FOUND+2(,R14)\nESD0870  DS    0H\n         TM    ESDDATA_STATUS,ESD_EXTERNAL\n         BNO   ESD0880\n         MVC   0(L'DESC_EXTERNAL,R14),DESC_EXTERNAL\n         LA    R14,L'DESC_EXTERNAL+2(,R14)\nESD0880  DS    0H\n         TM    ESDDATA_STATUS,ESD_NOCALL\n         BNO   ESD0890\n         MVC   0(L'DESC_NO_CALL,R14),DESC_NO_CALL\n         LA    R14,L'DESC_NO_CALL+2(,R14)\nESD0890  DS    0H\n         TM    ESDDATA_STATUS,ESD_NO_REFS\n         BNO   ESD0900\n         MVC   0(L'DESC_NO_REFS,R14),DESC_NO_REFS\n         LA    R14,L'DESC_NO_REFS+2(,R14)\nESD0900  DS    0H\n         TM    ESDDATA_STATUS,ESD_LIBRARY\n         BNO   ESD0910\n         MVC   0(L'DESC_LIBRARY,R14),DESC_LIBRARY\n         LA    R14,L'DESC_LIBRARY+2(,R14)\nESD0910  DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0920\n         B     ESD5000\n         DROP  R4\n\nESD0920  DS    0H\n         MVC   0(MSG_25_L,R4),MSG_25\n         USING MSG_25,R4\n         MVC   MSG_25_TARGET,ESDDATA_TARGET\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0930\n         B     ESD5000\n         DROP  R4\n\nESD0930  DS    0H\n         MVC   0(MSG_26_L,R4),MSG_26\n         USING MSG_26,R4\n         MVC   MSG_26_RESIDENT_CLASS,ESDDATA_RESIDENT_CLASS\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0940\n         B     ESD5000\n         DROP  R4\n\nESD0940  DS    0H\n         MVC   0(MSG_27_L,R4),MSG_27\n         USING MSG_27,R4\n         ICM   R1,15,ESDDATA_ELEMENT_OFFSET\n         BAL   R14,NBR0000\n         MVC   MSG_27_ELEMENT_OFFSET,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0950\n         B     ESD5000\n         DROP  R4\n\nESD0950  DS    0H\n         MVC   0(MSG_28_L,R4),MSG_28\n         USING MSG_28,R4\n         A     R4,DXD_VWIDTH\n         BCT   R3,ESD0960\n         B     ESD5000\n         MVC   MSG_28_ADA,ESDDATA_ADA\n         DROP  R4\n\nESD0960  DS    0H\n         MVC   0(MSG_29_L,R4),MSG_29\n         USING MSG_29,R4\n         ICM   R1,15,ESDDATA_PRIORITY\n         BAL   R14,NBR0000\n         MVC   MSG_29_PRIORITY,DXD_NUMBER\n         A     R4,DXD_VWIDTH\n         DROP  R4\n\nESD5000  DS     0H\n         A     R4,DXD_VWIDTH\n         A     R4,DXD_VWIDTH\n         MVC   0(TOTAL_MSG_L,R4),TOTAL_MSG\n         USING TOTAL_MSG,R4\n         L     R1,DSPCREQ_RECORD_NBR\n         CVD   R1,COMM_DWORD\n         ED    TOTAL_MSG_CURRENT,COMM_DWORD+5\n         L     R1,DATASPACE_1_LAST_RECORD\n         CVD   R1,COMM_DWORD\n         ED    TOTAL_MSG_TOTAL,COMM_DWORD+5\n         DROP  R4\n\n         B     DISP0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         CVD   R1,COMM_DWORD\n         MVC   DXD_NUMBER,EDIT_WORD\n         ED    DXD_NUMBER,COMM_DWORD+3\n         LA    R15,L'DXD_NUMBER\nNBR0010  DS    0H\n         CLI   DXD_NUMBER,C' '\n         BNER  R14\n         MVC   DXD_NUMBER(L'DXD_NUMBER),DXD_NUMBER+1\n         MVI   DXD_NUMBER+(L'DXD_NUMBER-1),C' '\n         BCT   R15,NBR0010\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT SELECTED?\n         BNE   EXIT0000                    YES\n         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?\n         BNE   EXIT0000                    YES\n         OC    SESS_RC,SESS_RC             RC=0?\n         BZ    DISP0005                    YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0005 DS    0H\n         CLI   SPF_ZSCROLLA,C'C'           CSR?\n         BNE   DISP0010                    NO\n         MVC   SPF_ZSCROLLN,F1             CSR SCROLLING IS 1 LINE\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'              BOTTOM?\n         BE    DISP0100                    YES\n         CLI   SPF_ZVERB,C'D'              DOWN?\n         BE    DISP0200                    YES\n         CLI   SPF_ZVERB,C'T'              TOP?\n         BE    DISP0300                    YES\n         CLI   SPF_ZVERB,C'U'              UP?\n         BE    DISP0400                    YES\n         B     DISP0000\n\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     ESD0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     LINES TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     ESD0000                             GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     ESD0000\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     ESD0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         BR    R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?\n         BZ    CLEAN010                     NO\n         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                      FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMESDD_DXD_L            WORK AREA SIZE\n         LR    R1,R13                       COPY WORK AREA ADDRESS\n         L     R13,4(R13)                   RESTORE R13\n         FREEMAIN RU,                       FREE WORK AREA             +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         SR    R15,R15               SET RC\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                   DC   F'1'\nF4                   DC   F'4'\nH1                   DC   H'1'\nNONE                 DC   C'NONE'\nPANEL_NAME           DC   CL8'OSLMESDD'\nEDIT_WORD            DC   X'402020206B2020206B202120'\n\nDESC_AC_PROC         DC   C'Processed by AUTOCALL'\nDESC_ADA             DC   C'Associated data'\nDESC_DESCRIPTOR      DC   C'Descriptor'\nDESC_EXTERNAL        DC   C'Resolved outside module'\nDESC_INCLUDE         DC   C'INCLUDE attempted'\nDESC_LIBRARY         DC   C'Call library requested'\nDESC_MANGLED         DC   C'Mangled'\nDESC_MINOR           DC   C'Minor (autocalled from LPA)'\nDESC_NEVERCALL       DC   C'Nevercall'\nDESC_NO_CALL         DC   C'NOCALL/NEVERCALL'\nDESC_NO_REFS         DC   C'No references'\nDESC_NOT_FOUND       DC   C'Not found'\nDESC_RENAMEABLE      DC   C'Renameable'\nDESC_RESOLVED        DC   C'Resolved'\nDESC_STRONG          DC   C'Strong'\nDESC_XPLINK          DC   C'XPLINK'\n\nNAME_SPACE_DESC      DS   0C\n                     DC   CL50'Class and section names (SD, ED)'\n                     DC   CL50'Labels and references (LD, ER)'\n                     DC   CL50'Pseudoregisters (PR, PD)'\n                     DC   CL50'Parts (PR, PD) in writeable static'\n                     DC   CL50'Reserved'\n\n\nSCOPE_DESC_L         DC   CL50'Library (ER/strong)'\nSCOPE_DESC_M         DC   CL50'Module (SD/CSECT, LD, ER/weak, CM, PR, D+\n               S, PD)'\nSCOPE_DESC_S         DC   CL50'Section (SD/PRIVATE, ST, ET)'\nSCOPE_DESC_X         DC   CL50'Symbol can be imported or exported'\n\nALIGN_DESC_HALFWORD  DC   CL10'Halfword'\nALIGN_DESC_FULLWORD  DC   CL15'Fullword'\nALIGN_DESC_DWORD     DC   CL15'Double word'\nALIGN_DESC_PAGE      DC   CL15'4k Page'\n\nUSABILITY_DESC_REUSABLE  DC  CL12'Reusable'\nUSABILITY_DESC_REENTRANT DC  CL12'Reentrant'\nUSABILITY_DESC_REFRESH   DC  CL12'Refreshable'\n\nAMODE_DESC_24          DC   CL3'24'\nAMODE_DESC_31          DC   CL3'31'\nAMODE_DESC_ANY         DC   CL3'ANY'\nAMODE_DESC_MIN         DC   CL3'MIN'\nAMODE_DESC_64          DC   CL3'64'\n\nRECFM_DESC_BYTESTREAM  DC  CL12'Byte stream'\nRECFM_DESC_FIXED       DC  CL12'Fixed length'\n\nLOAD_DESC_READONLY     DC  C'Read only'\nLOAD_DESC_NOLOAD       DC  C'Do not load'\nLOAD_DESC_MOVEABLE     DC  C'Moveable'\nLOAD_DESC_SHAREABLE    DC  C'Shareable'\nLOAD_DESC_DEFERRED     DC  C'Deferred'\n\nBIND_DESC_GENNED       DC  C'Binder generated SD, ED, LD'\nBIND_DESC_NOCLASS      DC  C'No class data'\nBIND_DESC_VARIABLE     DC  C'Variable length records'\nBIND_DESC_DESCRIPTIVE  DC  C'Descriptive data'\nBIND_DESC_INITIALIZERS DC  C'Contains initializers'\nBIND_DESC_FILL         DC  C'Fill specified'\nBIND_DESC_PADDING      DC  C'Class padding'\nBIND_DESC_CATENATED    DC  C'Catenated text'\nBIND_DESC_MERGED       DC  C'Merged text'\nBIND_DESC_INSTRUCTIONS DC  C'Instructions'\nBIND_DESC_DATA         DC  C'Data'\n\nATTR_DESC_SYSTEMLE     DC  C'System LE'\nATTR_DESC_LIGHTLE      DC  C'Lightweight LE'\nATTR_DESC_ELEVEL       DC  C'E-level errors'\nATTR_DESC_ILEVEL       DC  C'I-level errors'\nATTR_DESC_SLEVEL       DC  C'S-level errors'\nATTR_DESC_WLEVEL       DC  C'W-level errors'\n\nAUTOCALL_DESC_ALIAS    DC  CL5'ALIAS'\n\n                       LTORG\n\n\nTOTAL_MSG            DS   0C\n                     DC   AL1($SCREEN_ATTR_NORMAL)\n                     DC   C'Displaying item '\n                     DC   AL1($SCREEN_ATTR_HIGH)\nTOTAL_MSG_CURRENT    DC   X'402020202120'\n                     DC   AL1($SCREEN_ATTR_NORMAL)\n                     DC   C' of'\n                     DC   AL1($SCREEN_ATTR_HIGH)\nTOTAL_MSG_TOTAL      DC   X'402020202120'\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nTOTAL_MSG_L          EQU  *-TOTAL_MSG\n\nMSG_01               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Name           '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_01_NAME          DC   CL8' '\nMSG_01_L             EQU  *-MSG_01\n\nMSG_02               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Type           '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TYPE          DC   CL2' '\n                     DC   C'         '\nMSG_02_DESC          DC   CL60' '\nMSG_02_L             EQU  *-MSG_02\n\nMSG_03               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Qualifier      '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_03_QUAL          DC   CL2' '\n                     DC   C'         '\nMSG_03_DESC          DC   CL60' '\nMSG_03_L             EQU  *-MSG_03\n\nMSG_04               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Name space     '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_04_NAME_SPACE    DC   C' '\n                     DC   C'         '\nMSG_04_DESC          DC   CL50' '\nMSG_04_L             EQU  *-MSG_04\n\nMSG_05               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Scope          '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_05_SCOPE         DC   C' '\n                     DC   C'         '\nMSG_05_DESC          DC   CL50' '\nMSG_05_L             EQU  *-MSG_05\n\nMSG_06               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'SYMBOL attr    '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_06_SYMBOL_ATTR   DC   CL2' '\n                     DC   C'        '\nMSG_06_DESC          DC   CL50' '\nMSG_06_L             EQU  *-MSG_06\n\nMSG_07               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'RES section    '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_07_RESIDENT      DC   CL8' '\nMSG_07_L             EQU  *-MSG_07\n\nMSG_08               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Length         '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_08_LENGTH        DC   X'402020206B2020206B202120'\nMSG_08_L             EQU  *-MSG_08\n\nMSG_09               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Alignment      '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_09_ALIGN         DC   CL2' '\n                     DC   C'        '\nMSG_09_DESC          DC   CL15' '\nMSG_09_L             EQU  *-MSG_09\n\nMSG_10               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Usability      '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_10_USABILITY     DC   CL2' '\n                     DC   C'        '\nMSG_10_DESC          DC   CL12' '\nMSG_10_L             EQU  *-MSG_10\n\nMSG_11               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'AMODE          '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_11_AMODE         DC   CL2' '\n                     DC   C'        '\nMSG_11_DESC          DC   CL3' '\nMSG_11_L             EQU  *-MSG_11\n\nMSG_12               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'RMODE          '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_12_RMODE         DC   CL2' '\n                     DC   C'        '\nMSG_12_DESC          DC   CL3' '\nMSG_12_L             EQU  *-MSG_12\n\nMSG_13               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Record format  '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_13_RECFM         DC   CL4' '\n                     DC   C'      '\nMSG_13_DESC          DC   CL12' '\nMSG_13_L             EQU  *-MSG_13\n\nMSG_14               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'LOAD flags     '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_14_LOAD_FLAGS    DC   CL2' '\n                     DC   C'        '\nMSG_14_DESC          DC   CL50' '\nMSG_14_L             EQU  *-MSG_14\n\nMSG_15               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'BIND flags     '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_15_BIND_FLAGS    DC   CL2' '\n                     DC   C'        '\nMSG_15_BIND_DESC     DC   CL50' '\nMSG_15_L             EQU  *-MSG_15\n\nMSG_16               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'BIND CNTL      '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_16_BIND_CNTL     DC   CL2' '\n                     DC   C'        '\nMSG_16_DESC          DC   CL50' '\nMSG_16_L             EQU  *-MSG_16\n\nMSG_17               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Attributes     '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_17_ATTR          DC   CL2' '\n                     DC   C'        '\nMSG_17_DESC          DC   CL50' '\nMSG_17_L             EQU  *-MSG_17\n\nMSG_18               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'XATTR class    '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_18_XATTR_CLASS   DC   CL8' '\nMSG_18_L             EQU  *-MSG_18\n\nMSG_19               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'XATTR offset   '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_19_XATTR_OFFSET  DC   CL12' '\nMSG_19_L             EQU  *-MSG_19\n\nMSG_20               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Segment        '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_20_SEGMENT       DC   CL12' '\nMSG_20_L             EQU  *-MSG_20\n\nMSG_21               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Region         '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_21_REGION        DC   CL12' '\nMSG_21_L             EQU  *-MSG_21\n\nMSG_22               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Signature      '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_22_SIGNATURE     DC   CL8' '\nMSG_22_L             EQU  *-MSG_22\n\nMSG_23               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Autocall       '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_23_AUTOCALL      DC   CL2' '\n                     DC   C'      '\nMSG_23_DESC          DC   CL5' '\nMSG_23_L             EQU  *-MSG_23\n\nMSG_24               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Status         '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_24_STATUS        DC   CL2' '\n                     DC   C'        '\nMSG_24_DESC          DC   CL50' '\nMSG_24_L             EQU  *-MSG_24\n\nMSG_25               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Target         '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_25_TARGET        DC   CL8' '\nMSG_25_L             EQU  *-MSG_25\n\nMSG_26               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'RESIDENT class '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_26_RESIDENT_CLASS DC  CL50' '\nMSG_26_L             EQU  *-MSG_26\n\nMSG_27               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Element offset '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_27_ELEMENT_OFFSET DC  CL12' '\nMSG_27_L             EQU  *-MSG_27\n\nMSG_28               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Associated data'\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_28_ADA           DC   CL50' '\nMSG_28_L             EQU  *-MSG_28\n\nMSG_29               DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH)\n                     DC   C'Priority       '\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG_29_PRIORITY      DC   CL12' '\nMSG_29_L             EQU  *-MSG_29\n\n\nOSLMESDDEND          EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMESDD_DXD         DSECT\n                     COPY  DXDPREF\n\nDXD_VDATA_ADDR       DS    A\nDXD_VDATA_LENGTH     DS    F\n\nDXD_VWIDTH           DS    F\nDXD_VDEPTH           DS    F\n\nDXD_NUMBER           DS    CL12\n\nDXD_FLAGS            DS    X\n$FLAGS_DISPLAYED     EQU   X'80'            SOME DATA DISPLAYED\n\n                     DSPCREQ  DSECT=NO\n\n                     COPY  ESDDATA\nOSLMESDD_DXD_L       EQU   *-OSLMESDD_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=ESD,                                               +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT    DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD      TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY        ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY        TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY        REGEQU\n         END         OSLMESDD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMIDRB": {"ttr": 6657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x10\\x01\\t!\\x7f\\x01\\t6/\\x151\\x01P\\x01\\xc6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2009-08-05T00:00:00", "modifydate": "2009-12-28T15:31:10", "lines": 336, "newlines": 454, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMIDRB                                              *\n*                                                                     *\n*  Display IDRB (Binder identification) data                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMIDRB CSECT\nOSLMIDRB AMODE 31\nOSLMIDRB RMODE ANY\n         USING OSLMIDRB,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMIDRB'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(IDRBEND-OSLMIDRB)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15\n         DROP  R15\n         USING OSLMIDRB,R10\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLMIDRB_DXD_L              WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR               SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMIDRB_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                         SET WORK AREA ADDRESS\n         USING OSLMIDRB_DXD,R13               DEFINE BASE\n         MVC   DXD_CSECT,MODID                SET MODULE ID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,IDRB_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR               WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                   DATA STORED, DISPLAY IT                           *\n* ------------------------------------------------------------------- *\nIDRB0000 DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         NI    DXD_FLAGS,255-$HEADING\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nIDRB0020 DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         TM    DXD_FLAGS,$HEADING          HEADING ISSUED?\n         BO    IDRB0030                    YES\n         OI    DXD_FLAGS,$HEADING          SET FLAG\n         MVC   0(HEADING_L,R4),HEADING     COPY HEADING\n         A     R4,DXD_VWIDTH               NEXT LINE\n         BCTR  R3,0                        ACCOUNT FOR LINE USED\nIDRB0030 DS    0H\n         MVC   0(MSG01_L,R4),MSG01\n         USING MSG01,R4\n         MVC   MSG01_BINDER_ID+0(4),IDRB_BINDER_ID+0\n         MVI   MSG01_BINDER_ID+4,C'-'\n         MVC   MSG01_BINDER_ID+5(3),IDRB_BINDER_ID+4\n         MVC   MSG01_BINDER_ID+9(3),IDRB_BINDER_ID+7\n         MVC   MSG01_VERSION,IDRB_VERSION\n         MVC   MSG01_RELEASE,IDRB_RELEASE\n         MVC   MSG01_DATE_BOUND+0(4),IDRB_DATE_BOUND+0\n         MVI   MSG01_DATE_BOUND+4,C'.'\n         MVC   MSG01_DATE_BOUND+5(3),IDRB_DATE_BOUND+4\n         MVC   MSG01_TIME_BOUND+0(2),IDRB_TIME_BOUND+0\n         MVI   MSG01_TIME_BOUND+2,C':'\n         MVC   MSG01_TIME_BOUND+3(2),IDRB_TIME_BOUND+2\n         MVI   MSG01_TIME_BOUND+5,C':'\n         MVC   MSG01_TIME_BOUND+6(2),IDRB_TIME_BOUND+4\n         UNPK  MSG01_SIZE(9),IDRB_MODULE_SIZE(5)\n         TR    MSG01_SIZE,COMM_HEXCHAR\n         MVI   MSG01_SIZE+8,C' '\n         MVC   MSG01_CALLERID,IDRB_CALLERID\n         A     R4,DXD_VWIDTH\n         BCT   R3,IDRB0040\n         B     DISP0000\nIDRB0040 DS    0H\n         LA    R0,1                        CONSTANT 1\n         A     R0,DSPCREQ_RECORD_NBR       PLUS CURRENT RECORD NBR\n         C     R0,DATASPACE_1_LAST_RECORD  BEYOND HIGH RECORD?\n         BH    DISP0000                    YES\n         ST    R0,DSPCREQ_RECORD_NBR       UPDATE RECORD NBR\n         B     IDRB0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP           ISPLINK ENTRY POINT\n         BALR  R14,R15                     DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT WANTED?\n         BNE   EXIT0000                    YES\n         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?\n         BNE   EXIT0000                    YES\n         OC    SESS_RC,SESS_RC             RC=0?\n         BZ    DISP0010                    YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION\n         B     EXIT0000                    EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'              BOTTOM?\n         BE    DISP0100                    YES\n         CLI   SPF_ZVERB,C'D'              DOWN?\n         BE    DISP0200                    YES\n         CLI   SPF_ZVERB,C'T'              TOP?\n         BE    DISP0300                    YES\n         CLI   SPF_ZVERB,C'U'              UP?\n         BE    DISP0400                    YES\n         B     DISP0000\n\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     IDRB0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     LINES TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     IDRB0000                            GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     IDRB0000\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     IDRB0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?\n         BZ    CLEAN010                     NO\n         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                      FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMIDRB_DXD_L            WORK AREA SIZE\n         LR    R1,R13                       COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                  RESTORE R13\n         FREEMAIN RU,                       FREE WORK AREA             +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)           RESTORE SAVE AREA ADDRESS\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         SR    R15,R15\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                DC   F'1'\n\nPANEL_NAME        DC   CL8'OSLMIDRB'\n\n                  LTORG\n\nHEADING           DS   0C\n                  DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n                  DC   C'Binder ID    Ver  Rel   Date     Time'\n                  DC   C'     Size   Caller ID'\nHEADING_L         EQU  *-HEADING\n\nMSG01             DS   0C\n                  DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_BINDER_ID   DC   CL12' '\n                  DC   C' '\nMSG01_VERSION     DC   CL2' '\n                  DC   C'   '\nMSG01_RELEASE     DC   CL2' '\n                  DC   C'  '\nMSG01_DATE_BOUND  DC   CL8' '\n                  DC   C' '\nMSG01_TIME_BOUND  DC   CL8' '\n                  DC   C' '\nMSG01_SIZE        DC   CL8' '\n                  DC   C' '\nMSG01_CALLERID    DC   CL30' '\nMSG01_L           EQU  *-MSG01\n\nIDRBEND           EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMIDRB_DXD      DSECT\n                  COPY  DXDPREF\n\nDXD_VDATA_ADDR    DS    A\nDXD_VDATA_LENGTH  DS    F\n\nDXD_VDEPTH        DS    F\nDXD_VWIDTH        DS    F\n\nDXD_FLAGS         DS    X\n$HEADING          EQU   X'80'\n\n                  DSPCREQ  DSECT=NO\n                  COPY  IDRBDATA\nOSLMIDRB_DXD_L    EQU   *-OSLMIDRB_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      REGEQU\n         END       OSLMIDRB\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMIDRL": {"ttr": 6665, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x17\\x01\\t!\\x0f\\x01\\t6/\\x151\\x01<\\x01~\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:31:17", "lines": 316, "newlines": 382, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMIDRL                                              *\n*                                                                     *\n*  Display IDRL (Language processor) data                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMIDRL CSECT\nOSLMIDRL AMODE 31\nOSLMIDRL RMODE ANY\n         USING OSLMIDRL,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMIDRL'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(IDRLEND-OSLMIDRL)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING OSLMIDRL,R10,R9\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLMIDRL_DXD_L              WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR                 SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMIDRL_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                           SET WORK AREA ADDRESS\n         USING OSLMIDRL_DXD,R13                 DEFINE BASE\n         MVC   DXD_CSECT,MODID                  SET MODULE ID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,LMOD_IDRL_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                    PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN   SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH              SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR                SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH            SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH            SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR                 WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIDRL0000 DS    0H\n\nIDRL0010 DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDEPTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE VDATA\n         NI    DXD_FLAGS,255-$HEADING\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\nIDRL0020 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         TM    DXD_FLAGS,$HEADING\n         BO    IDRL0030\n         OI    DXD_FLAGS,$HEADING\n         MVC   0(HEADING_L,R4),HEADING\n         A     R4,DXD_VWIDTH\n         BCTR  R3,0\nIDRL0030 DS    0H\n         MVC   0(MSG01_L,R4),MSG01\n         USING MSG01,R4\n         MVC   MSG01_PID_ID+0(4),LMOD_IDRL_PID_ID+0\n         MVI   MSG01_PID_ID+4,C'-'\n         MVC   MSG01_PID_ID+5(3),LMOD_IDRL_PID_ID+4\n         MVC   MSG01_PID_ID+9(3),LMOD_IDRL_PID_ID+7\n         MVC   MSG01_VERSION,LMOD_IDRL_VERSION\n         MVC   MSG01_LEVEL,LMOD_IDRL_LEVEL\n         MVC   MSG01_DATE_PROCESSED+0(4),LMOD_IDRL_DATE_PROCESSED+0\n         MVI   MSG01_DATE_PROCESSED+4,C'.'\n         MVC   MSG01_DATE_PROCESSED+5(3),LMOD_IDRL_DATE_PROCESSED+4\n         MVC   MSG01_RESIDENT,LMOD_IDRL_RESIDENT\n         DROP  R4\n         A     R4,DXD_VWIDTH\n         BCT   R3,IDRL0040\n         B     DISP0000\nIDRL0040 DS    0H\n         LA    R0,1\n         A     R0,DSPCREQ_RECORD_NBR\n         C     R0,DATASPACE_1_LAST_RECORD\n         BH    DISP0000\n         ST    R0,DSPCREQ_RECORD_NBR\n         B     IDRL0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT SELECTED?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   EXIT0000                         YES\n         OC    SESS_RC,SESS_RC                  RC=0?\n         BZ    DISP0010                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    DISP0100                         YES\n         CLI   SPF_ZVERB,C'D'                   DOWN?\n         BE    DISP0200                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    DISP0300                         YES\n         CLI   SPF_ZVERB,C'U'                   UP?\n         BE    DISP0400                         YES\n         B     DISP0000\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     IDRL0010\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     LINES TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     IDRL0010                            GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     IDRL0010\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     IDRL0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR             VDATA GETMAINED?\n         BZ    CLEAN010                         NO\n         L     R0,DXD_VDATA_LENGTH              VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMIDRL_DXD_L                WORK AREA SIZE\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                           FREE WORK AREA         +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nF1                   DC   F'1'\nPANEL_NAME           DC   CL8'OSLMIDRL'\n\n                     LTORG\n\nHEADING              DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n                     DC   C'Processor id  Ver Lvl   Date    Resident'\nHEADING_L            EQU  *-HEADING\n\nMSG01                DS   0C\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_PID_ID         DC   CL12' '\n                     DC   CL2' '\nMSG01_VERSION        DC   CL2' '\n                     DC   CL2' '\nMSG01_LEVEL          DC   CL2' '\n                     DC   CL2' '\nMSG01_DATE_PROCESSED DC   CL8' '\n                     DC   CL2' '\nMSG01_RESIDENT       DC   CL45' '\nMSG01_L              EQU  *-MSG01\n\nIDRLEND              EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMIDRL_DXD         DSECT\n                     COPY  DXDPREF\n\nDXD_VDATA_ADDR       DS    A\nDXD_VDATA_LENGTH     DS    F\n\nDXD_VDEPTH           DS    F\nDXD_VWIDTH           DS    F\n\nDXD_FLAGS            DS    X\n$HEADING             EQU   X'80'\n\n                     DSPCREQ  DSECT=NO\n                     COPY  IDRLDATA\nOSLMIDRL_DXD_L       EQU   *-OSLMIDRL_DXD\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSLMIDRL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMIDRZ": {"ttr": 6916, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00%\\x01\\t!\\x0f\\x01\\t6/\\x151\\x017\\x01Z\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:31:25", "lines": 311, "newlines": 346, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMIDRZ                                              *\n*                                                                     *\n*  Display IDRZ (AMASPZAP) data                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMIDRZ CSECT\nOSLMIDRZ AMODE 31\nOSLMIDRZ RMODE ANY\n         USING OSLMIDRZ,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMIDRZ'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(IDRZEND-OSLMIDRZ)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGISTERS\n         LR    R10,R15                          COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         USING OSLMIDRZ,R10,R9\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n         DROP  R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                         NO\n         LA    R0,OSLMIDRZ_DXD_L                WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH               SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR                 SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMIDRZ_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                           SET WORK AREA ADDRESS\n         USING OSLMIDRZ_DXD,R13                 DEFINE BASE\n         MVC   DXD_CSECT,MODID                  SET MODULE ID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,LMOD_IDRZ_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                    PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN   SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH              SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR                SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH            SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH            SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR                 WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*        Data storeed, display it                                     *\n* ------------------------------------------------------------------- *\nIDRZ0000 DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n\n         NI    DXD_FLAGS,255-$HEADING\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nIDRZ0010 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\nIDRZ0030 DS    0H\n         TM    DXD_FLAGS,$HEADING               HEAD BUILT?\n         BO    IDRZ0040                         YES\n         OI    DXD_FLAGS,$HEADING               SET FLAG\n         MVC   0(HEADING_L,R4),HEADING          COPY HEADING\n         A     R4,DXD_VWIDTH                    NEXT LINE\n         BCTR  R3,0\nIDRZ0040 DS    0H\n         MVC   0(MSG01_L,R4),MSG01\n         USING MSG01,R4\n         MVC   MSG01_DATE+0(4),LMOD_IDRZ_DATE+0\n         MVI   MSG01_DATE+4,C'.'\n         MVC   MSG01_DATE+5(3),LMOD_IDRZ_DATE+4\n         MVC   MSG01_ZAP_DATA,LMOD_IDRZ_ZAP_DATA\n         MVC   MSG01_RESIDENT,LMOD_IDRZ_RESIDENT\n         DROP  R4\n         A     R4,DXD_VWIDTH\n         BCT   R3,IDRZ0050\n         B     DISP0000                         SCREEN IS FULL\nIDRZ0050 DS    0H\n         LA    R0,1                             CONSTANT 1\n         A     R0,DSPCREQ_RECORD_NBR            PLUS CURRENT RECORD NBR\n         C     R0,DATASPACE_1_LAST_RECORD       BEYOND LAST RECORD?\n         BH    DISP0000                         YES\n         ST    R0,DSPCREQ_RECORD_NBR            UPDATE RECORD NBR\n         B     IDRZ0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT SELECTED?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   EXIT0000                         YES\n         OC    SESS_RC,SESS_RC                  RC=0?\n         BZ    DISP0010                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    DISP0100                         YES\n         CLI   SPF_ZVERB,C'D'                   DOWN?\n         BE    DISP0200                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    DISP0300                         YES\n         CLI   SPF_ZVERB,C'U'                   UP?\n         BE    DISP0400                         YES\n         B     DISP0000\n\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     IDRZ0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     NUMBER TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RCD NBR\n         B     IDRZ0000                            GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     IDRZ0000\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     IDRZ0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR             VDATA GETMAINED?\n         BZ    CLEAN010                         NO\n         L     R0,DXD_VDATA_LENGTH              VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMIDRZ_DXD_L                WORK AREA SIZE\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                           FREE WORK AREA         +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                   DC   F'1'\nPANEL_NAME           DC   CL8'OSLMIDRZ'\n\n                     LTORG\nHEADING              DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n                     DC   C' Date    data    Resident'\nHEADING_L            EQU  *-HEADING\n\nMSG01                DS   0C\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_DATE           DC   CL7' '\n                     DC   CL2' '\nMSG01_ZAP_DATA       DC   CL8' '\n                     DC   CL2' '\nMSG01_RESIDENT       DC   CL60' '\nMSG01_L              EQU  *-MSG01\n\nIDRZEND              EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMIDRZ_DXD         DSECT\n                     COPY  DXDPREF\n\nDXD_VDATA_ADDR       DS    A\nDXD_VDATA_LENGTH     DS    F\n\nDXD_VDEPTH           DS    F\nDXD_VWIDTH           DS    F\n\nDXD_NUMBER           DS    CL12\n\nDXD_FLAGS            DS    X\n$HEADING             EQU   X'80'\n\n                     COPY  IDRZDATA\n                     DSPCREQ  DSECT=NO\nOSLMIDRZ_DXD_L       EQU   *-OSLMIDRZ_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC   VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSLMIDRZ\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMLMAP": {"ttr": 6924, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x002\\x01\\t!\\x0f\\x01\\t6/\\x151\\x01Z\\x01G\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:31:32", "lines": 346, "newlines": 327, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMLMAP                                              *\n*                                                                     *\n*  Display LMOD map                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMLMAP CSECT\nOSLMLMAP AMODE 31\nOSLMLMAP RMODE ANY\n         USING OSLMLMAP,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMLMAP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLMLMAPEND-OSLMLMAP)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         USING OSLMLMAP,R10,R9\n         DROP  R15\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLMLMAP_DXD_L              WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR               SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMLMAP_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                         SET WORK AREA ADDRESS\n         USING OSLMLMAP_DXD,R13               DEFINE BASE\n         MVC   DXD_CSECT,MODID                SET MODULE ID\n         ITRACE ID=ENTRY1\n         MVI   DXD_FLAGS,0\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,LMOD_MAP_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR               WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAP0000  DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         NI    DXD_FLAGS,255-$HEADING\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R4,                                              +\n               RDATA2=R3\nMAP0020  DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         CLI   LMOD_MAP_TYPE,C'S'             SECTION WITHIN CLASS?\n         BNE   MAP0040                        NO\n         CLI   LMOD_MAP_NAME_SPACE,X'64'      SPACE X'64'?\n         BNE   MAP0040                        NO\n         CLC   LMOD_MAP_RECFM,X0001           RECORD FORMAT 1?\n         BNE   MAP0040                        NO\n         TM    DXD_FLAGS,$HEADING             HEADING DONE?\n         BO    MAP0025                        YES\n         OI    DXD_FLAGS,$HEADING             SET FLAG\n         MVC   0(HEADING_L,R4),HEADING\n         A     R4,DXD_VWIDTH                  NEXT LINE\n         BCTR  R3,0                           MINUS 1 AVAILABLE\nMAP0025  DS    0H\n         MVC   0(MSG01_L,R4),MSG01\n         USING MSG01,R4\n         MVC   MSG01_NAME,LMOD_MAP_NAME       COPY NAME\n         UNPK  MSG01_OFFSET(9),LMOD_MAP_OFFSET(5)\n         TR    MSG01_OFFSET,COMM_HEXCHAR\n         MVI   MSG01_OFFSET+8,C' '            RESTORE BLANK\n         UNPK  MSG01_LENGTH(9),LMOD_MAP_QUANTITY(5)\n         TR    MSG01_LENGTH,COMM_HEXCHAR\n         MVI   MSG01_LENGTH+8,C' '            RESTORE BLANK\nMAP0030  DS    0H\n         DROP  R4\n         A     R4,DXD_VWIDTH                  NEXT LINE\n         BCT   R3,MAP0040\n         B     DISP0000                       SCREEN FULL\nMAP0040  DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD     AT HIGH RECORD?\n         BE    DISP0000                       YES\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          UPDATE RECORD NBR\n         B     MAP0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT SELECTED?\n         BNE   EXIT0000                    YES\n         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?\n         BNE   EXIT0000                    YES\n         OC    SESS_RC,SESS_RC             RC=0?\n         BZ    DISP0010                    YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         CLI   SPF_ZSCROLLA,C'C'           CSR?\n         BNE   DISP0020                    NO\nDISP0020 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'              BOTTOM?\n         BE    DISP0100                    YES\n         CLI   SPF_ZVERB,C'D'              DOWN?\n         BE    DISP0200                    YES\n         CLI   SPF_ZVERB,C'T'              TOP?\n         BE    DISP0300                    YES\n         CLI   SPF_ZVERB,C'U'              UP?\n         BE    DISP0400                    YES\n         B     DISP0000\n\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         B     MAP0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     NUMBER TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     MAP0000                             GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     MAP0000\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER\n         B     MAP0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR                VDATA GETMAINED?\n         BZ    CLEAN010                            NO\n         L     R0,DXD_VDATA_LENGTH                 VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                             FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMLMAP_DXD_L                   WORK AREA SIZE\n         LR    R1,R13                              COPY ADDRESS\n         L     R13,4(,R13)                         RESTORE R13\n         FREEMAIN RU,                              FREE WORK AREA      +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                         RESTORE R13\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)                     RESTORE REGISTERS\n         SR    R15,R15                             SET RC\n         BR    R14                                 RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                DC   F'1'\nX0001             DC   X'0001'\nPANEL_NAME        DC   CL8'OSLMAP'\n\n                  LTORG\n\nHEADING           DS   0C\n                  DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n                  DC   CL8'NAME'\n                  DC   CL4' '\n                  DC   CL8' OFFSET '\n                  DC   CL4' '\n                  DC   CL8' LENGTH '\nHEADING_L         EQU  *-HEADING\n\nMSG01             DS   0C\n                  DC   AL1($SCREEN_ATTR_HIGH)\nMSG01_NAME        DC   CL8' '\n                  DC   AL1($SCREEN_ATTR_NORMAL)\n                  DC   CL3' '\nMSG01_OFFSET      DC   CL8' '\n                  DC   CL4' '\nMSG01_LENGTH      DC   CL8' '\n                  DC   C' '\nMSG01_L                EQU  *-MSG01\n\n\nOSLMLMAPEND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMLMAP_DXD      DSECT\n                  COPY  DXDPREF\n\nDXD_VDATA_ADDR    DS    A\nDXD_VDATA_LENGTH  DS    F\n\nDXD_VDEPTH        DS    F\nDXD_VWIDTH        DS    F\n\nDXD_FLAGS         DS    X\n$HEADING          EQU   X'80'\n\n                  COPY  MAPDATA\n\n                  DSPCREQ  DSECT=NO\nOSLMLMAP_DXD_L    EQU   *-OSLMLMAP_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY      REGEQU\n         END       OSLMLMAP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLMOD": {"ttr": 12291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x11\\x01\\t(o\\x01\\x10\\x01O\\x16\\x12\\x04\\x02\\x04\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-14T16:12:11", "lines": 1026, "newlines": 1030, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMOD                                                *\n*                                                                     *\n*  Report information about LMODs using a BINDER dialog               *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  As of 05/01/08 the LMOD info is a \"SESSION\" rather than a          *\n*  sub-function of the load module directory display.                 *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMOD   CSECT\nOSLMOD   AMODE 31\nOSLMOD   RMODE ANY\n         USING OSLMOD,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\nNEW      USING SESSION,R2\n         B     INIT0000\nMODID    DC    CL8'OSLMOD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLMODEND-OSLMOD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING OSLMOD,R10,R9\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   LMOD0000                       NO\n         L     R0,DXDSIZE\n         ST    R0,SESS_DXD_LENGTH             SET WORK AREA LENGTH\n         GETMAIN RU,                          SOME FUNCTIONS STILL     +\n               LV=(0),                          REQUIRE 24-BIT         +\n               LOC=BELOW                        STORAGE\n         ST    R1,SESS_DXD_ADDR               SAVE WORK AREA ADDRESS\n         LR    R0,R1                          COPY ADDRESS\n         L     R1,DXDSIZE                     WORK AREA SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         CLEAR WORK AREA\n         L     R1,SESS_DXD_ADDR               WORK AREA BASE\n         A     R1,DXD_START                   PLUS OFFSET\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1                         COPY DXD AREA ADDRESS\n         USING DXDLMOD,R13                    DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         MVC   COMM_MSG_CSECT,MODID\n         XC    COMM_MSG_ID,COMM_MSG_ID\n         ITRACE ID=ENTRY1,                                             +\n               RDATA1=R13\n         MVC   DXD_IEWBIND(IEWBIND_L),IEWBIND_I\n         XC    DXD_NAMES_RETURNED,DXD_NAMES_RETURNED\n         XC    DXD_TOTAL_NAMES,DXD_TOTAL_NAMES\n         XC    DXD_NAME_CURSOR,DXD_NAME_CURSOR\n         LA    R1,PANEL_NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,DXD_VDATA_LENGTH\n         ST    R1,DXD_VDATA_ADDR\n         ST    R1,DXD_CURRENT_VDATA\n         MVC   DXD_VDEPTH,SPF_VDEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         MVI   DAIR_OPTS,0\n         MVC   DAIR_DD,COMM_BLANKS\n         MVC   DAIR_DSN,SESS_DSN\n         MVC   DAIR_MEMBER,COMM_BLANKS\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                     ALLOCATE THE LIBRARY\n         OC    DAIR_R15,DAIR_R15           SUCCESSFUL?\n         BNZ   ERR0070\n         MVC   SESS_DD,DAIR_DD             SAVE DDNAME\n* ------------------------------------------------------------------- *\n*        Start the dialog                                             *\n* ------------------------------------------------------------------- *\n         NI    DXD_FLAGS,255-$FLAG_ENDD_BYPASS\n         ITRACE ID=STARTD\n         IEWBIND FUNC=STARTD,                                          +\n               VERSION=5,                                              +\n               DIALOG=SESS_DIALOG_TOKEN,                               +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=STARTDRC,                                           +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0010\n* ------------------------------------------------------------------- *\n*        Create a workmod                                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CREATEW\n         IEWBIND FUNC=CREATEW,                                         +\n               VERSION=5,                                              +\n               DIALOG=SESS_DIALOG_TOKEN,                               +\n               WORKMOD=SESS_DIALOG_WORKMOD,                            +\n               INTENT=ACCESS,                                          +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=CREATWRC,                                           +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*        Set list options to ALL                                      *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SET_ALL\n         IEWBIND FUNC=SETO,                                            +\n               VERSION=5,                                              +\n               WORKMOD=SESS_DIALOG_WORKMOD,                            +\n               OPTION=LIST,                                            +\n               OPTVAL=ALL,                                             +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=SET_RC,                                             +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0030\n* ------------------------------------------------------------------- *\n*        INCLUDE the member                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=INCLUDE,                                            +\n               DATA1=SESS_MEMBER,                                      +\n               DATA2=SESS_DD\n         MVC   DXD_DDNAME_LENGTH,H8\n         MVC   DXD_DDNAME,SESS_DD\n         MVC   DXD_MEMBER_NAME_LENGTH,H8\n         MVC   DXD_MEMBER_NAME,SESS_MEMBER\n         IEWBIND FUNC=INCLUDE,                                         +\n               VERSION=5,                                              +\n               WORKMOD=SESS_DIALOG_WORKMOD,                            +\n               INTYPE=NAME,                                            +\n               DDNAME=DXD_DDNAME_LENGTH,                               +\n               MEMBER=DXD_MEMBER_NAME_LENGTH,                          +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=INCL_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_REASON_CODE,DXD_REASON_CODE\n         BNZ   ERR0040\n* ------------------------------------------------------------------- *\n*        Obtain and initialize NAME buffer                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=NAMEBUFF\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=NAME\n         ST    R8,DXD_NAME_BUFFER\n         ITRACE ID=INIT_NAME,                                          +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=NAME\n* ------------------------------------------------------------------- *\n*        Create or clear the data space                               *\n* ------------------------------------------------------------------- *\nINIT0040 DS    0H\n         OC    DATASPACE_1_ALET,DATASPACE_1_ALET\n         BNZ   INIT0050\n         ITRACE ID=CREATE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CREATE\n         B     INIT0060\nINIT0050 DS    0H\n         ITRACE ID=CLEAR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR\nINIT0060 DS    0H\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC1,                                           +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0110\n         MVC   DATASPACE_1_FIRST_RECORD,F1\n* ------------------------------------------------------------------- *\n*        Store the section names in the data space                    *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         LA    R1,DXD_NAME_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LA    R1,DXD_NAME_DATA_L\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         MVC   DSPCREQ_RECORD_NBR,F1\n         XC    DXD_NAME_CURSOR,DXD_NAME_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     R8 is the NAMES HEADER (BNLH) base                              *\n*     R7 is the NAMES ENTRY  (BNL_ENTRY) base                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0080 DS    0H\n         ITRACE ID=GET_NAME,                                           +\n               DATA1=DXD_NAME_CURSOR\n         L     R8,DXD_NAME_BUFFER\n         LA    R7,BNLH_END\n         IEWBIND FUNC=GETN,                                            +\n               VERSION=5,                                              +\n               WORKMOD=SESS_DIALOG_WORKMOD,                            +\n               AREA=IEWBBNL,                                           +\n               CURSOR=DXD_NAME_CURSOR,                                 +\n               COUNT=DXD_NAMES_RETURNED,                               +\n               TCOUNT=DXD_TOTAL_NAMES,                                 +\n               NTYPE=S,                                                +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=NAMES_RC,                                           +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         C     R15,F4\n         BH    ERR0010\n         BL    INIT0090\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   ERR0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0030\nINIT0090 DS    0H\n         ICM   R4,15,DXD_NAMES_RETURNED\n         ITRACE ID=NAMES,                                              +\n               RDATA1=R6,                                              +\n               DATA2=DXD_TOTAL_NAMES\n         LTR   R4,R4\n         BZ    ERR0020\nINIT0100 DS    0H\n         ITRACE ID=STORE,                                              +\n               RDATA1=R7\n         SR    R14,R14\n         MVC   DXD_NAME,COMM_BLANKS\n         ICM   R14,3,BNL_NAME_CHARS\n         BZ    INIT0120\n         CH    R14,H8\n         BL    INIT0110\n         LH    R14,H8\nINIT0110 DS    0H\n         BCTR  R14,0\n         ICM   R15,15,BNL_NAME_PTR\n         EX    R14,NAME_MVC\n         B     INIT0130\nINIT0120 DS    0H\n         MVC   DXD_NAME(L'NO_NAME),NO_NAME\nINIT0130 DS    0H\n         MVC   DXD_NAME_CLASS_LENGTH,BNL_CLS_LENGTH\n         MVC   DXD_NAME_BIND_FLAGS,BNL_BIND_FLAGS\n         MVC   DXD_NAME_LOAD_FLAGS,BNL_LOAD_FLAGS\n         MVC   DXD_NAME_ELEMENTS,BNL_ELEM_COUNT\n         MVC   DXD_NAME_SEGMENT_ID,BNL_SEGM_ID\n         MVC   DXD_NAME_SEGMENT_OFFSET,BNL_SEGM_OFF\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         L     R1,DSPCREQ_RECORD_NBR\n         C     R1,DXD_TOTAL_NAMES\n         BE    INIT0140\n         A     R1,F1\n         ST    R1,DSPCREQ_RECORD_NBR\n         A     R7,BNLH_ENTRY_LENG\n         BCT   R4,INIT0100\n         B     INIT0080\nNAME_MVC MVC   DXD_NAME(0),0(R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        All section names stored in data space                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0140 DS    0H\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display the names as a scrollable selection list             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLMOD0000 DS    0H\n         L     R1,SESS_DXD_ADDR\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2,                                             +\n               RDATA1=R13\n         L     R5,COMM_OSSPFD\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n         TM    DXD_FLAGS,$INIT                   EVER INITIALIZED?\n         BNO   LMOD0010                          NO\n         OI    DXD_FLAGS,$INIT                   SET FLAG\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH       SESSION SWITCH?\n         BNE   LMOD0010                          NO\n         L     R4,DXD_CURRENT_VDATA              RESTORE POSITION\n         L     R3,DXD_LINES_REMAINING            LINES REMAINING\n         B     DISP0020\nLMOD0010 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         ITRACE ID=DISPLIST,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         ITRACE ID=INITVDATA\n         L     R0,DXD_VDATA_ADDR                 INITIALIZE VDATA\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R4,                                              +\n               RDATA2=R3\n         L     R8,DXD_NAME_BUFFER\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\nLMOD0020 DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC2,                                           +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,0\n         BNE   ERR0110\n         MVC   0(NAME_MSG_L,R4),NAME_MSG\nM        USING NAME_MSG,R4\n         MVC   M.NAME_MSG_NAME,DXD_NAME\n         UNPK  M.NAME_MSG_BIND_FLAGS(3),DXD_NAME_BIND_FLAGS(2)\n         TR    M.NAME_MSG_BIND_FLAGS,COMM_HEXCHAR\n         MVI   M.NAME_MSG_BIND_FLAGS+2,C' '\n         UNPK  M.NAME_MSG_LOAD_FLAGS(3),DXD_NAME_LOAD_FLAGS(2)\n         TR    M.NAME_MSG_LOAD_FLAGS,COMM_HEXCHAR\n         MVI   M.NAME_MSG_LOAD_FLAGS+2,C' '\n         L     R1,DXD_NAME_ELEMENTS\n         CVD   R1,COMM_DWORD\n         ED    M.NAME_MSG_ELEMENTS,COMM_DWORD+5\n         LH    R1,DXD_NAME_SEGMENT_ID\n         CVD   R1,COMM_DWORD\n         ED    M.NAME_MSG_SEGMENT_ID,COMM_DWORD+5\n         LH    R1,DXD_NAME_SEGMENT_OFFSET\n         CVD   R1,COMM_DWORD\n         ED    M.NAME_MSG_SEGMENT_OFFSET,COMM_DWORD+5\n         A     R4,DXD_VWIDTH\n         BCT   R3,LMOD0030\n         B     DISP0000\nLMOD0030 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         C     R1,DXD_TOTAL_NAMES\n         BE    DISP0000\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         B     LMOD0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         L     R15,COMM_V_OSDSCB              REBUILD DSCB INFO\n         BALR  R14,R15\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT?\n         BNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   EXIT0000                       YES\n         OC    SESS_RC,SESS_RC                RC = 0?\n         BZ    DISP0010                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000                       EXIT\nDISP0010 DS    0H\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    DISP0040                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    DISP0040                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    DISP0040                       YES\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    DISP0080                       YES\n* ------------------------------------------------------------------- *\n*        No scroll command, check for line command(s)                 *\n* ------------------------------------------------------------------- *\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nDISP0020 DS    0H\n         OI    M.NAME_MSG_SELECT,C' '\n         MVI   M.NAME_MSG_ATTR,$SCREEN_ATTR_NORMAL\n         ITRACE ID=LINE_CMD,                                           +\n               DATA1=(M.NAME_MSG_SELECT,1),                            +\n               RDATA2=R4\n         CLI   M.NAME_MSG_SELECT,C' '              ANY COMMAND?\n         BE    DISP0030                            NO\n         LA    R1,M.NAME_MSG_SELECT\n         ST    R1,SESS_COMMAND_ADDRESS\n         MVC   SESS_COMMAND_LENGTH,H1              SET LENGTH\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R0,LINE_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                             SEARCH FOR COMMAND\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                                 BRANCH TO COMMAND\n         ITRACE ID=BAD_CMD,                                            +\n               DATA1=(M.NAME_MSG_SELECT,1),                            +\n               RDATA2=R4\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID+1,3\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   M.NAME_MSG_ATTR,$SCREEN_ATTR_HIGH\n         B     DISP0000                            DISPLAY WITH MESSAGE\nDISP0030 DS    0H\n         A     R4,DXD_VWIDTH\n         BCT   R3,DISP0020\n         B     DISP0000\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nDISP0040 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0060                            YES\n         L     R1,SPF_ZSCROLLN                     NUMBER TO SCROLL\n         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST DISPLAYED      D\n         C     R1,DXD_TOTAL_NAMES                  TOO MANY?\n         BH    DISP0050                            YES\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE 1ST RCD NBR\n         B     LMOD0000                            REBUILD EVERYTHING\nDISP0050 DS    0H\n         L     R1,DXD_TOTAL_NAMES                  HIGHEST RECORD\n         S     R1,DATASPACE_1_DISPLAY_FIRST_RECORD MINUS 1ST DISPLAYED\n         C     R1,DXD_VDEPTH                       MORE THAN 1?\n         BNH   DISP0000                            NO.. STAY PUT\n         L     R1,DXD_TOTAL_NAMES                  HIGHEST RECORD\n         S     R1,DXD_VDEPTH                       MINUS 1 SCREEN\n         A     R1,F2                               PLUS 2\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD SET 1ST TO DISPLAY\n         B     LMOD0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0060 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         L     R2,DXD_TOTAL_NAMES                  HIGHEST RECORD\n         S     R2,DXD_VDEPTH                       MINUS DEPTH\n         A     R2,F2                               PLUS 2\n         C     R2,F1                               STILL HAVE 1?\n         BNL   DISP0070                            YES\n         L     R2,F1                               FORCE RECORD 1\nDISP0070 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE 1ST RCD NBR\n         B     LMOD0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0080 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0090                            YES\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD 1ST RCD DISPLAYED\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         BM    DISP0090                            NEGATIVE, FORCE TOP\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE 1ST RCD NBR\n         B     LMOD0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0090 DS    0H\n         ITRACE ID=TOP\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1 FORCE RECORD 1\n         B     LMOD0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0100 DS    0H\n         ITRACE ID=ESD\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,ESD                 SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,ESD         SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMESD    SET FUNCTION NAME\n         L     R15,V_LMODESD                       ESD INFO OBTAINER\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0110 DS    0H\n         ITRACE ID=ESDD\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,ESDD                SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,ESDD        SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMESDD   SET FUNCTION NAME\n         L     R15,V_LMODESD                       ESD INFO OBTAINER\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0120 DS    0H\n         ITRACE ID=IDRB\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,IDRB                SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,IDRB        SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMIDRB   SET FUNCTION NAME\n         L     R15,V_LMODIDRB\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0130 DS    0H\n         ITRACE ID=DMAP\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,DMAP                SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,DMAP        SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMLMAP   SET FUNCTION NAME\n         L     R15,V_LMODMAP\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0140 DS    0H\n         ITRACE ID=LMAP\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,LMAP                SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,LMAP        SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMLMAP   SET FUNCTION NAME\n         L     R15,V_LMODMAP\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0150 DS    0H\n         ITRACE ID=IDRL\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,IDRL                SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,IDRL        SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMIDRL   SET FUNCTION NAME\n         L     R15,V_LMODIDRL\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0160 DS    0H\n         ITRACE ID=RLD\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,RLD                 SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,RLD         SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMRLD    SET FUNCTION NAME\n         L     R15,V_LMODRLD\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0170 DS    0H\n         ITRACE ID=IDRZ\n         ST    R3,DXD_LINES_REMAINING\n         ST    R4,DXD_CURRENT_VDATA\n         BAL   R3,SESS0000                         CREATE NEW SESSION\n         MVC   NEW.SESS_FORMAT,IDRZ                SET FORMAT NAME\n         MVC   NEW.SESS_DEFAULT_FORMAT,IDRZ        SET FORMAT NAME\n         MVC   NEW.SESS_FUNCTION_MODULE,OSLMIDRZ   SET FUNCTION NAME\n         L     R15,V_LMODIDRZ\n         B     DISP0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0180 DS    0H\n         ITRACE ID=LINECMDS\n         MVI   M.NAME_MSG_SELECT,C' '           RESET SELECTION\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,LINE_TABLE\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15\n         B     DISP0030\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Get the requested info for the new function                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0200 DS    0H\n         ITRACE ID=GET_INFO,                                           +\n               RDATA1=R15,                                             +\n               DATA2=M.NAME_MSG_NAME\n         ST    R2,COMM_NEW_SESSION              SET NEW SESSION ADDR\n         MVC   NEW.SESS_DIALOG_SECTION,M.NAME_MSG_NAME   SET CSECT NAME\n         MVC   SPF_CSECT,M.NAME_MSG_NAME        SET CSECT NAME\n         MVI   M.NAME_MSG_SELECT,C' '           RESET SELECTION\n         BALR  R14,R15                          OBTAIN INFO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Request session switch to new session                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH      INDICATE SWITCH\n         B     EXIT0000                         EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Create a new \"SESSION\"                                       *\n*          GETMAIN the SESSION block                                  *\n*          Chain the new SESSION into the existing SESSIONs           *\n*          GETMAIN the I/O area                                       *\n*          Create the data space                                      *\n*                                                                     *\n*       R3 is return address                                          *\n*                                                                     *\n*       At exit R2 is address of new SESSION block                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS0000 DS    0H\n         ITRACE ID=BLD_NEW\n         GETMAIN RU,                                                   +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         LR    R2,R1                            SAVE ADDRESS\n         ST    R2,COMM_NEW_SESSION\n         LR    R0,R2\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R2,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         BZ    SESS0010                         NO\n         ST    R2,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nSESS0010 DS    0H\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DSN,SESS_DSN\n         MVC   NEW.SESS_PATH,SESS_PATH\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         MVI   NEW.SESS_KEYWORD_FLAGS,$KEYWORD_DSN+$KEYWORD_MEMBER+$KEY+\n               WORD_VOL\n         L     R0,COMM_IO_SIZE                  I/O AREA SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,NEW.SESS_IO_AREA              SAVE ADDRESS\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n         ITRACE ID=CRE_DSPC                     CREATING A DATA SPACE\n         LA    R0,NEW.DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CREATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          CREATE DATASPACE\n         ITRACE ID=DSPC_RC3,                                           +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0080\n         LA    R0,DATASPACE_1                   OUR DATASPACE INFO\n         ST    R0,DSPCREQ_DATASPACE             RESET ADDRESS\n         DROP  NEW\n         BR    R3\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVC   COMM_INFO_01(20),INFO_START_DIALOG\n         B     ERR0100\nERR0020  DS    0H\n         ITRACE ID=ERR0020\n         MVC   COMM_INFO_01(20),INFO_CREATE_WORKMOD\n         B     ERR0100\nERR0030  DS    0H\n         ITRACE ID=ERR0030\n         MVC   COMM_INFO_01(20),INFO_SET_OPTIONS\n         B     ERR0100\nERR0040  DS    0H\n         ITRACE ID=ERR0040\n         MVC   COMM_INFO_01(20),INFO_INCLUDE\n         B     ERR0100\nERR0050  DS    0H\n         ITRACE ID=ERR0050\n         OI    DXD_FLAGS,$FLAG_ENDD_BYPASS\n         MVC   COMM_INFO_01(20),INFO_DELETEW\n         B     ERR0100\nERR0060  DS    0H\n         ITRACE ID=ERR0060\n         OI    DXD_FLAGS,$FLAG_ENDD_BYPASS\n         MVC   COMM_INFO_01(20),INFO_ENDD\n         B     ERR0100\nERR0070  DS    0H\n         ITRACE ID=DAIR_ERR,                                           +\n               DATA1=(DAIR_R15,6)\n         MVI   COMM_MSG_ID+1,4\n         MVC   COMM_INFO_01(6),DAIR_R15\n         B     MSG0000\nERR0080  DS    0H\n         ITRACE ID=DSPC_ERR\n         MVI   COMM_MSG_ID+1,5\n         B     MSG0000\nERR0100  DS    0H\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_02(4),DXD_RETURN_CODE\n         MVC   COMM_INFO_03(4),DXD_REASON_CODE\n         B     MSG0000\nERR0110  DS    0H\n         ITRACE ID=DSPCFAIL\n         B     DISP0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         ITRACE ID=CALL_MSG,                                           +\n               DATA1=COMM_MSG_ID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     DISP0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Clean up                                                     *\n*                                                                     *\n*         end the dialog                                              *\n*         free the DD                                                 *\n*         FREEMAIN VDATA                                              *\n*         FREEMAIN work area                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEANUP\n         TM    DXD_FLAGS,$FLAG_ENDD_BYPASS\n         BO    CLEAN010\n* ------------------------------------------------------------------- *\n*        End the dialog                                               *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DELETEW,                                            +\n               DATA1=SESS_DIALOG_WORKMOD\n         IEWBIND FUNC=DELETEW,                                         +\n               VERSION=5,                                              +\n               WORKMOD=SESS_DIALOG_WORKMOD,                            +\n               PROTECT=NO,                                             +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=DELW_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0050\n         IEWBIND FUNC=ENDD,                                            +\n               VERSION=5,                                              +\n               DIALOG=SESS_DIALOG_TOKEN,                               +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=ENDD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0060\nCLEAN010 DS    0H\n         L     R0,DXD_VDATA_LENGTH             VDATA LENGTH\n         L     R1,DXD_VDATA_ADDR               VDATA ADDRESS\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                         FREE VDATA\n         L     R0,SESS_DXD_LENGTH\n         L     R1,SESS_DXD_ADDR\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSIZE    CXD\nDXD_START  DC   Q(DXDLMOD)\n\nV_LMODESD  DC   V(LMODESD)\nV_LMODIDRB DC   V(LMODIDRB)\nV_LMODIDRL DC   V(LMODIDRL)\nV_LMODIDRZ DC   V(LMODIDRZ)\nV_LMODMAP  DC   V(LMODMAP)\nV_LMODRLD  DC   V(LMODRLD)\n\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=NAME,                                              +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n          IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L EQU     *-IEWBIND_I\n\nF1                   DC   F'1'\nF2                   DC   F'2'\nF4                   DC   F'4'\nH1                   DC   H'1'\nH8                   DC   H'8'\nLIST                 DC   H'4',C'LIST'\nALL                  DC   H'3',C'ALL'\nESD                  DC   CL8'ESD'\nESDD                 DC   CL8'ESDD'\nIDRB                 DC   CL8'IDRB'\nIDRL                 DC   CL8'IDRL'\nIDRZ                 DC   CL8'IDRZ'\nDMAP                 DC   CL8'DMAP'\nLMAP                 DC   CL8'LMAP'\nOSLMESD              DC   CL8'OSLMESD'\nOSLMESDD             DC   CL8'OSLMESDD'\nOSLMIDRB             DC   CL8'OSLMIDRB'\nOSLMIDRL             DC   CL8'OSLMIDRL'\nOSLMIDRZ             DC   CL8'OSLMIDRZ'\nOSLMDMAP             DC   CL8'OSLMDMAP'\nOSLMLMAP             DC   CL8'OSLMLMAP'\nOSLMRLD              DC   CL8'OSLMRLD'\nPANEL_NAME           DC   CL8'OSLMOD'\nRLD                  DC   CL8'RLD'\nX_83000800           DC   X'83000800'\nX_83000801           DC   X'83000801'\n\nINFO_START_DIALOG    DC   CL20'Start dialog'\nINFO_CREATE_WORKMOD  DC   CL20'Create workmod'\nINFO_SET_OPTIONS     DC   CL20'Set options (all)'\nINFO_INCLUDE         DC   CL20'Include'\nINFO_DELETEW         DC   CL20'Deletew'\nINFO_ENDD            DC   CL20'End dialog'\n\nNO_NAME              DC   C'<NO NAME>'\n\n                     LTORG\n\nNAME_MSG             DS   0C\n                     DC   AL1($SCREEN_ATTR_INPUT)\nNAME_MSG_SELECT      DC   C' '\n                     DC   AL1($SCREEN_ATTR_HIGH)\nNAME_MSG_NAME        DC   CL8' '\nNAME_MSG_ATTR        DC   AL1($SCREEN_ATTR_NORMAL)\n                     DC   CL5' '\nNAME_MSG_BIND_FLAGS  DC   CL2' '\n                     DC   CL12' '\nNAME_MSG_LOAD_FLAGS  DC   CL2' '\n                     DC   CL8' '\nNAME_MSG_ELEMENTS    DC   X'402020202120'\n                     DC   CL7' '\nNAME_MSG_SEGMENT_ID  DC   X'402020202120'\n                     DC   CL7' '\nNAME_MSG_SEGMENT_OFFSET   DC   X'402020202120'\nNAME_MSG_L           EQU  *-NAME_MSG\n\nLINE_TABLE           DS   0C\n                     CMD  B,DISP0120,'Display BINDER data'\n                     CMD  D,DISP0130,'Display map detail'\n                     CMD  E,DISP0100,'Display ESD data'\n                     CMD  X,DISP0110,'Display ESD data detail'\n                     CMD  M,DISP0140,'Display map data'\n                     CMD  L,DISP0150,'Display language data'\n                     CMD  R,DISP0160,'Display RLD data'\n                     CMD  Z,DISP0170,'Display ZAP data'\n                     CMD  ?,DISP0180,'Display available line commands'\n                     DC   X'FF'\n\nOSLMODEND            EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDLMOD                 DSECT\n                        COPY  DXDPREF\nDXD_IEWBIND             DS    0F,(IEWBIND_L)X\n\nDXD_NAMES_RETURNED      DS    F\nDXD_TOTAL_NAMES         DS    F\nDXD_NAME_CURSOR         DS    F\nDXD_NAME_BUFFER         DS    A\n\nDXD_VDATA_ADDR          DS    A\nDXD_VDATA_LENGTH        DS    F\nDXD_VWIDTH              DS    F\nDXD_VDEPTH              DS    F\n\nDXD_CURRENT_VDATA       DS    A\nDXD_LINES_REMAINING     DS    F\n\nDXD_RETURN_CODE         DS    XL4            RETURN CODE\nDXD_REASON_CODE         DS    XL4            REASON CODE\n\nDXD_DDNAME_LENGTH       DS    H\nDXD_DDNAME              DS    CL44\n\nDXD_MEMBER_NAME_LENGTH  DS    H\nDXD_MEMBER_NAME         DS    CL8\n\nDXD_FLAGS               DS    X\n$INIT                   EQU   X'80'\n$FLAG_ENDD_BYPASS       EQU   X'40'\n\nDXD_NAME_DATA           DS    0C\nDXD_NAME                DS    CL8\nDXD_NAME_CLASS_LENGTH   DS    F\nDXD_NAME_ELEMENTS       DS    F\nDXD_NAME_SEGMENT_OFFSET DS    F\nDXD_NAME_SEGMENT_ID     DS    H\nDXD_NAME_BIND_FLAGS     DS    X\nDXD_NAME_LOAD_FLAGS     DS    X\nDXD_NAME_DATA_L         EQU   *-DXD_NAME_DATA\n\n                        DAIRREQ  DSECT=NO\n                        DSPCREQ  DSECT=NO\nDXDLMOD_L               EQU   *-DXDLMOD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC DCBD=PO,                                               +\n               VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSLMOD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSLMRLD": {"ttr": 7173, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x10\\x01\\t(o\\x01\\t6/\\x152\\x01\\x8f\\x01\\x92\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2009-12-28T15:32:10", "lines": 399, "newlines": 402, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLMRLD                                               *\n*                                                                     *\n*  Display RLD (Relocation directory) info                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMRLD  CSECT\nOSLMRLD  AMODE 31\nOSLMRLD  RMODE ANY\n         USING OSLMRLD,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSLMRLD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSLMRLDEND-OSLMRLD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)        SAVE REGISTERS\n         LR    R10,R15                COPY BASE ADDRESS\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING OSLMRLD,R10,R9\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010                       NO\n         LA    R0,OSLMRLD_DXD_L               WORK AREA LENGTH\n         ST    R0,SESS_DXD_LENGTH             SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR               SAVE ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSLMRLD_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2                         SET WORK AREA ADDRESS\n         USING OSLMRLD_DXD,R13                DEFINE BASE\n         MVC   DXD_CSECT,MODID                SET MODULE ID\n         ITRACE ID=ENTRY1,                                             +\n               RDATA1=R13\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,LMOD_RLD_DATA\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R1,SESS_DXD_ADDR               WORK AREA ADDRESS\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         ITRACE ID=ENTRY2,                                             +\n               RDATA1=R13\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n         MVC   DXD_FIRST_DISPLAYED,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRLD0000  DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         NI    DXD_FLAGS,255-$HEADING\n         MVC   DSPCREQ_RECORD_NBR,DXD_FIRST_DISPLAYED\n         L     R4,DXD_VDATA_ADDR\n         L     R3,DXD_VDEPTH\nRLD0020  DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         MVC   DXD_LAST_DISPLAYED,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    DISP0000\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         TM    DXD_FLAGS,$HEADING\n         BO    RLD0030\n         OI    DXD_FLAGS,$HEADING\n         MVC   0(HEADING_L,R4),HEADING\n         A     R4,DXD_VWIDTH\n         BCTR  R3,0\nRLD0030  DS    0H\n         MVC   0(MSG01_L,R4),MSG01\n         USING MSG01,R4\n         UNPK  MSG01_TYPE(3),LMOD_RLD_TYPE(2)\n         TR    MSG01_TYPE,COMM_HEXCHAR\n         MVI   MSG01_TYPE+2,C' '\n         UNPK  MSG01_STATUS(3),LMOD_RLD_STATUS(2)\n         TR    MSG01_STATUS,COMM_HEXCHAR\n         MVI   MSG01_STATUS+2,C' '\n         MVC   MSG01_RESIDENT,LMOD_RLD_RESIDENT\n         MVC   MSG01_ADCON_LENGTH(1),LMOD_RLD_ADCON_LENGTH+1\n         OI    MSG01_ADCON_LENGTH,X'F0'\n         MVC   MSG01_RESIDENT_CLASS,LMOD_RLD_RESIDENT_CLASS\n         UNPK  MSG01_RESIDENT_OFFSET(9),LMOD_RLD_RESIDENT_OFFSET(5)\n         TR    MSG01_RESIDENT_OFFSET,COMM_HEXCHAR\n         MVI   MSG01_RESIDENT_OFFSET+8,C' '\n         UNPK  MSG01_CLASS_OFFSET(9),LMOD_RLD_CLASS_OFFSET(5)\n         TR    MSG01_CLASS_OFFSET,COMM_HEXCHAR\n         MVI   MSG01_CLASS_OFFSET+8,C' '\n         MVC   MSG01_TARGET,LMOD_RLD_TARGET\n         UNPK  MSG01_BIND_ATTR(3),LMOD_RLD_BIND_ATTR(2)\n         TR    MSG01_BIND_ATTR,COMM_HEXCHAR\n         MVI   MSG01_BIND_ATTR+2,C' '\n         TM    LMOD_RLD_BIND_ATTR,RLD_DIRECTION\n         BO    RLD0100\n         MVI   MSG01_DIRECTION,C'+'\n         B     RLD0110\nRLD0100  DS    0H\n         MVI   MSG01_DIRECTION,C'-'\nRLD0110  DS    0H\n         TM    LMOD_RLD_BIND_ATTR,RLD_HOBSET\n         BNO   RLD0130\n         MVI   MSG01_SET_AMODE,C'Y'\nRLD0130  DS    0H\n         TM    LMOD_RLD_BIND_ATTR,RLD_INT_EXT\n         BO    RLD0140\n         MVI   MSG01_INTERNAL,C'I'\n         B     RLD0150\nRLD0140  DS    0H\n         MVI   MSG01_INTERNAL,C'E'\nRLD0150  DS    0H\n         TM    LMOD_RLD_BIND_ATTR,RLD_HOBCHG\n         BNO   RLD0170\n         MVI   MSG01_CHANGED,C'Y'\nRLD0170  DS    0H\n         DROP  R4\n         A     R4,DXD_VWIDTH\n         BCT   R3,RLD0180\n         ITRACE ID=FULL\n         B     DISP0000\nRLD0180  DS    0H\n         LA    R0,1                             CONSTANT 1\n         A     R0,DSPCREQ_RECORD_NBR            PLUS CURRENT RECORD NBR\n         C     R0,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?\n         BH    DISP0000                         YES\n         ST    R0,DSPCREQ_RECORD_NBR            UPDATE RECORD NBR\n         B     RLD0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT SELECTED?\n         BNE   EXIT0000                    YES\n         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?\n         BNE   EXIT0000                    YES\n         OC    SESS_RC,SESS_RC             RC=0?\n         BZ    DISP0010                    YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for scroll command(s)                                  *\n*                                                                     *\n*        Note that 'up', 'down', 'top', and 'bottom' are the only     *\n*        valid scroll commands.                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0010 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'              BOTTOM?\n         BE    DISP0100                    YES\n         CLI   SPF_ZVERB,C'D'              DOWN?\n         BE    DISP0200                    YES\n         CLI   SPF_ZVERB,C'T'              TOP?\n         BE    DISP0300                    YES\n         CLI   SPF_ZVERB,C'U'              UP?\n         BE    DISP0400                    YES\n         B     DISP0000\nDISP0100 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   DXD_FIRST_DISPLAYED,DATASPACE_1_LAST_RECORD\n         B     RLD0000\nDISP0200 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0100                            YES.. SAME AS BOTTOM\n         L     R1,SPF_ZSCROLLN                     NUMBER TO SCROLL\n         A     R1,DXD_LAST_DISPLAYED               PLUS LAST ON DISPLAY\n         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?\n         BH    DISP0100                            YES.. GO TO BOTTOM\n         ST    R1,DXD_FIRST_DISPLAYED              UPDATE RECORD NUMBER\n         B     RLD0000                             GO BUILD DATA\nDISP0300 DS    0H\n         ITRACE ID=TOP\n         MVC   DXD_FIRST_DISPLAYED,F1              SET TO RECORD 1\n         B     RLD0000                             BUILD DISPLAY\nDISP0400 DS    0H\n         ITRACE ID=UP,                                                 +\n               DATA1=SPF_ZSCROLLA,                                     +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    DISP0300                            YES.. GO TO TOP\n         L     R1,DXD_FIRST_DISPLAYED              1ST ON DISPLAY\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL\n         C     R1,F1                               BELOW 1?\n         BL    DISP0300                            YES, GO TO TOP\n         ST    R1,DXD_FIRST_DISPLAYED              UPDATE RECORD NUMBER\n         B     RLD0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?\n         BZ    CLEAN010                     NO\n         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                      FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSLMRLD_DXD_L             WORK AREA SIZE\n         LR    R1,R13                       COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                  RESTORE R13\n         FREEMAIN RU,                       FREE WORK AREA             +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)           RESTORE SAVE AREA ADDRESS\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         SR    R15,R15               SET RC\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1                   DC   F'1'\nPANEL_NAME           DC   CL8'OSLMRLD'\n\n                     LTORG\n\nHEADING              DS   0C\n                     DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n                     DC   C'Ty ST Resident Len Class    Res off  '\n                     DC   C'Class off Target   Attr Dir AM I/E Chg'\nHEADING_L            EQU  *-HEADING\n\nMSG01                DS   0C\n                     DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_TYPE           DC   CL2' '\n                     DC   C' '\nMSG01_STATUS         DS   CL2' '\n                     DC   C' '\nMSG01_RESIDENT       DC   CL8' '\n                     DC   C'  '\nMSG01_ADCON_LENGTH   DC   C' '\n                     DC   C'  '\nMSG01_RESIDENT_CLASS DC   CL8' '\n                     DC   C' '\nMSG01_RESIDENT_OFFSET DC  CL8' '\n                     DC   C' '\nMSG01_CLASS_OFFSET   DC   CL8' '\n                     DC   C'  '\nMSG01_TARGET         DC   CL8' '\n                     DC   C'  '\nMSG01_BIND_ATTR      DC   CL2' '\n                     DC   C'   '\nMSG01_DIRECTION      DC   C' '\n                     DC   C'  '\nMSG01_SET_AMODE      DC   C' '\n                     DC   C'   '\nMSG01_INTERNAL       DC   C' '\n                     DC   C'   '\nMSG01_CHANGED        DC   C' '\nMSG01_L              EQU  *-MSG01\n\nOSLMRLDEND           EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLMRLD_DXD          DSECT\n                     COPY  DXDPREF\n\nDXD_VDATA_ADDR       DS    A\nDXD_VDATA_LENGTH     DS    F\n\nDXD_VWIDTH           DS    F\nDXD_VDEPTH           DS    F\n\nDXD_FIRST_DISPLAYED  DS    F\nDXD_LAST_DISPLAYED   DS    F\n\nDXD_FLAGS            DS    X\n$HEADING             EQU   X'80'\n\n                     COPY  RLDDATA\n\n                     DSPCREQ  DSECT=NO\nOSLMRLD_DXD_L        EQU   *-OSLMRLD_DXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=RLD,                                               +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSLMRLD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSLOAD": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00U\\x01\\t!\\x0f\\x01\\t(_\\t\\x06\\x00\\xd3\\x00\\xd1\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-10-12T09:06:55", "lines": 211, "newlines": 209, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSLOAD                                                *\n*                                                                     *\n*  Load On Screen modules.                                            *\n*                                                                     *\n*  Due to On Screen's multiple 'sessions' and session switching,      *\n*  use counts on modules could get confusing.  This allows a given    *\n*  module to be loaded once and used by multiple sessions.  Once      *\n*  a module is loaded, it is not deleted until the last session       *\n*  ends.                                                              *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLOAD   CSECT\nOSLOAD   AMODE 31\nOSLOAD   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSLOAD,R15\n         B     INIT0000\nMODID    DC    CL8'OSLOAD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(LOADEND-OSLOAD)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           COPY ENTRY POINT\n         DROP  R15\n         USING OSLOAD,R10                        DEFINE BASE\n         LR    R9,R1                             COPY PARM ADDRESS\n         USING LOADREQ,R9                        DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSLOAD_WORK_L,                                       +\n               LOC=ANY\n         ST    R13,4(,R1)                        SAVE R13\n         ST    R1,8(,R13)                        CHAIN SAVE AREA\n         LR    R13,R1                            COPY WORK AREA ADDRESS\n         USING OSLOAD_WORK,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(LOADREQ_FUNC,1),                                 +\n               DATA2=LOADREQ_MODULE\n         MVC   DXD_SAVED_RETRY,SESS_RETRY        SAVE CALLER'S RETRY\n         LTR   R11,R11                           SESSION ACTIVE YET?\n         BZ    LOAD0010                          NO\n         LA    R1,RTRY0000                       OUR RETRY ADDRESS\n         ST    R1,SESS_RETRY\nLOAD0010 DS    0H\n         MVI   LOADREQ_RC,$LOADREQ_OK\n         CLI   LOADREQ_FUNC,$LOADREQ_LOAD\n         BE    LOAD0100\n         CLI   LOADREQ_FUNC,$LOADREQ_DELETE\n         BE    LOAD0200\n         CLI   LOADREQ_FUNC,$LOADREQ_CLEANUP\n         BE    LOAD0300\n         ITRACE ID=BAD_FUNC\n         DC    H'0'\nLOAD0100 DS    0H\n         ITRACE ID=LOAD,                                               +\n               DATA1=LOADREQ_MODULE\n         LA    R2,COMM_LOAD_CHAIN                ADDRESS OF 1ST BLOCK\nLOAD0110 DS    0H\n         ICM   R3,15,0(R2)                       END OF CHAIN?\n         BZ    LOAD0130                          YES\n         USING LOAD_BLOCK,R3                     DEFINE BASE\n         ITRACE ID=CHECK1,                                             +\n               RDATA1=R3,                                              +\n               DATA2=LOAD_BLOCK_MODULE\n         CLC   LOADREQ_MODULE,LOAD_BLOCK_MODULE  MODULE LOADED?\n         BE    LOAD0120                          YES\n         LR    R2,R3\n         B     LOAD0110                          CHECK AGAIN\nLOAD0120 DS    0H\n         ITRACE ID=ONCHAIN1,                                           +\n               DATA1=(LOAD_BLOCK_EP,4)\n         MVC   LOADREQ_EP,LOAD_BLOCK_EP          COPY ENTRY POINT\n         B     EXIT0000\nLOAD0130 DS    0H\n         ITRACE ID=NOT_FND1\n         GETMAIN RU,                             GETMAIN NEW LOAD BLOCK+\n               LV=LOAD_BLOCK_L,                                        +\n               LOC=ANY\n         LR    R3,R1                             COPY ADDRESS\n         ST    R3,0(,R2)                         ADD TO CHAIN\n         XC    LOAD_BLOCK_NEXT,LOAD_BLOCK_NEXT   CLEAR 'NEXT' ADDRESS\n         MVC   LOAD_BLOCK_MODULE,LOADREQ_MODULE  COPY MODULE NAME\n         ITRACE ID=LOAD,                                               +\n               DATA1=LOADREQ_MODULE\n         LOAD  EPLOC=LOADREQ_MODULE              LOAD THE MODULE\n         STCM  R0,R15,LOAD_BLOCK_EP              SAVE THE ADDRES\n         STCM  R0,R15,LOADREQ_EP                 GIVE IT TO CALLER TOO\n         ITRACE ID=LOADED,                                             +\n               RDATA1=R0,                                              +\n               RDATA2=R3\n         B     EXIT0000\n\nLOAD0200 DS    0H\n         ITRACE ID=DELETE\n         LA    R2,COMM_LOAD_CHAIN                ADDRESS OF 1ST BLOCK\nLOAD0210 DS    0H\n         ICM   R3,15,0(R2)                       END OF CHAIN?\n         BZ    EXIT0000                          YES, NOT LOADED\n         ITRACE ID=CHECK2,                                             +\n               RDATA1=R3,                                              +\n               DATA2=LOAD_BLOCK_MODULE\n         CLC   LOADREQ_MODULE,LOAD_BLOCK_MODULE  MODULE LOADED?\n         BE    LOAD0220                          YES\n         LR    R2,R3\n         B     LOAD0210                          CHECK AGAIN\nLOAD0220 DS    0H\n         ITRACE ID=ONCHAIN2,                                           +\n               DATA1=(LOAD_BLOCK_EP,4)\n         MVC   0(4,R2),LOAD_BLOCK_NEXT           REMOVE FROM CHAIN\n         DELETE EPLOC=LOADREQ_MODULE             DELETE THE MODULE\n         ITRACE ID=FREE1,                                              +\n               RDATA1=R3\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=LOAD_BLOCK_L\n         BZ    EXIT0000\n\nLOAD0300 DS    0H\n         ITRACE ID=CLEAN_UP\n         ICM   R3,15,COMM_LOAD_CHAIN             ADDRESS OF 1ST BLOCK\n         BZ    EXIT0000\nLOAD0310 DS     0H\n         ITRACE ID=DELETE3,                                            +\n               RDATA1=R3,                                              +\n               DATA2=LOAD_BLOCK_MODULE\n         DELETE EP=LOAD_BLOCK_MODULE\n         L     R2,LOAD_BLOCK_NEXT\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=LOAD_BLOCK_L\n         LTR   R3,R2                             ANOTHER BLOCK?\n         BNZ   LOAD0310                          YES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRTRY0000 DS    0H\n         ITRACE ID=ABEND,                                              +\n               DATA1=(SESS_SYSTEM_CODE,6)\n         L     R15,COMM_V_OSABEND\n         BALR  R14,R15                           LINK TO OSABEND\n         NI    SESS_ABEND_FLAG,255-$ABENDED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LTR   R11,R11                           SESSION ACTIVE?\n         BZ    EXIT0010                          NO\n         MVC   SESS_RETRY,DXD_SAVED_RETRY        RESTORE CALLER'S RETRY\nEXIT0010 DS    0H\n         LR    R1,R13                            COPY WORK AREA ADDR\n         L     R13,4(,R13)                       AREA ADDRESS\n         FREEMAIN RU,                            RESTORE R13           +\n               A=(1),                            FREE WORK AREA        +\n               LV=OSLOAD_WORK_L\n         LM    R14,R12,12(R13)                   RESTORE REGISTERS\n         SR    R15,R15                           SET RETURN CODE\n         BR    R14                               RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    LTORG\n\nLOADEND             EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSLOAD_WORK         DSECT\n                    COPY  DXDPREF\nDXD_SAVED_RETRY     DS    A\nOSLOAD_WORK_L       EQU   *-OSLOAD_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    LOADREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLOAD_BLOCK          DSECT\nLOAD_BLOCK_NEXT     DS   A\nLOAD_BLOCK_MODULE   DS   CL8\nLOAD_BLOCK_EP       DS   A\nLOAD_BLOCK_L        EQU  *-LOAD_BLOCK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY REGEQU\n                    END  OSLOAD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSMAIN": {"ttr": 18443, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18\\x00X\\x01\\t(o\\x01\\x10\\x02o\\x16\\x04\\x06\\x17\\x05\\xe2\\x00d\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.24", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-26T16:04:58", "lines": 1559, "newlines": 1506, "modlines": 100, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSMAIN   CSECT\nOSMAIN   AMODE 31\nOSMAIN   RMODE ANY\n         USING OSMAIN,R15                       DEFINE BASE\n         B     INIT0000                         BRANCH\nMODID    DC    CL8'OSMAIN'                      MODULE NAME\n         DC    CL8'&SYSDATE'                    DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                    TIME OF ASSEMBLY\n         DC    A(MAINEND-OSMAIN)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE ENTRY REGISTERS\n         LR    R10,R15                          COPY BASE\n         LA    R9,2048(,R10)                    INITIALIZE 2ND BASE\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING OSMAIN,R10,R9                    DEFINE PROGRAM BASE\n         SR    R12,R12                          COMMON AREA NOT LOADED\n         SR    R11,R11                          NO SESSION YET\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LTR   R8,R1                            COPY PARM ADDRESS\n* ------------------------------------------------------------------- *\n*        Acquire storage for work areas                               *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R3,DXDSIZE                       WORK AREA SIZE\n         GETMAIN RU,                            GETMAIN WORK AREA      +\n               LV=(R3),                                                +\n               LOC=ANY\n         LR    R4,R1                            COPY STORAGE ADDRESS\n         LR    R5,R1                            COPY STORAGE ADDRESS\n         LR    R2,R1                            COPY WORK AREA ADDRESS\n         SR    R1,R1                            CLEAR REGISTER\n         MVCL  R2,R0                            CLEAR WORK AREA\n         A     R5,DXDSTART                      PLUS DISPLACEMENT\n         ST    R13,4(,R5)                       CHAINn AREA TO OURS\n         ST    R5,8(,R13)                       chain AREA TO CALLER'S\n         LR    R13,R5                           SET SAVE AREA ADDRESS\n         USING DXDMAIN,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID                  IDENTIFY AREA OWNER\n* ------------------------------------------------------------------- *\n*        Determine if On Screen is already active                     *\n* ------------------------------------------------------------------- *\n         MVC   DXD_ENQ(ENQ_L),ENQ_I             INITIALIZE ENQ\n         ENQ   (MODID,                          ENQ 'OSMAIN'           +\n               MODID,                                                  +\n               E,                                                      +\n               8,                                                      +\n               STEP),                                                  +\n               RET=USE,                                                +\n               MF=(E,DXD_ENQ)\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR3000                          NO\n* ------------------------------------------------------------------- *\n*        LOAD COMMON DATA MODULE                                      *\n* ------------------------------------------------------------------- *\n         LOAD  EP=OSCOMM                        LOAD COMMON DATA MODULE\n         LR    R12,R0                           COPY TO PERMANENT BASE\n         LA    R12,0(R12)                       TURN OFF AMODE BIT(S)\n         USING OSCOMM,R12                       DEFINE COMMON AREA BASE\n         ST    R5,COMM_DXD                      SAVE WORK AREA BASE\n         MVC   COMM_DXD_LENGTH,DXDSIZE\n         MVC   COMM_MSG_CSECT,MODID\n* ------------------------------------------------------------------- *\n*        Initialize addresses of statically linked modules            *\n* ------------------------------------------------------------------- *\n         LA    R0,VCONI                         V CONSTANTS\n         LA    R1,VCONL                         V CONSTANTS LENGTH\n         LA    R14,COMM_VCONS                   AREA IN OSCOMM\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R14,R0                           COPY V CONSTANTS\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR TRACE TABLE                              *\n* ------------------------------------------------------------------- *\n         L     R3,TRACE_TABLE_SIZE              TRACE TABLE SIZE\n         GETMAIN RU,                            GETMAIN TRACE TABLE    +\n               LV=(R3),                                                +\n               LOC=BELOW\n         ST    R1,COMM_TRACE                    SAVE ADDRESS\n         SR    R0,R0                            ASSUME ON BOUNDARY\n         TM    COMM_TRACE,X'07'                 ALREADY ON BOUNDARY?\n         BNO   INIT0020                         YES\n         SRL   R1,5                             SHIFT OUT LOW BITS ..\n         SLL   R1,5                             .. TO ROUND\n         LA    R1,32(,R1)                       PLUS 32\n         LA    R0,TR_ENTRY_L                    1 LESS\nINIT0020 DS    0H\n         ST    R1,COMM_TRACE_1ST                FIRST TRACE ENTRY\n         ST    R1,COMM_TRACE_CURR               CURRENT TRACE ENTRY\n         A     R1,TRACE_TABLE_SIZE              LAST ENTRY IN TABLE\n         SH    R1,=Y(TR_ENTRY_L)                MINUS 1 ENTRY\n         SR    R1,R0                            MINUS BOUNDARY\n         ST    R1,COMM_TRACE_LAST               LAST TRACE ENTRY\n         ITRACE ID=OSCOMM,                                             +\n               RDATA1=R12,                      .. COMMON AREA         +\n               DATA2=(COMM_DXD,4)               .. DXD AREA ADDRESS\n* ------------------------------------------------------------------- *\n*        Set trap entry point                                         *\n* ------------------------------------------------------------------- *\n         MVC   COMM_TRAP,COMM_V_OSTRAP\n* ------------------------------------------------------------------- *\n*        Establish ESTAE exit                                         *\n* ------------------------------------------------------------------- *\n         MVC   DXD_ESTAE(ESTAE_L),ESTAE_I\n         L     R2,COMM_V_OSESTAE\n         AGO   .NOSTAE\n         ESTAE (R2),               SET ESTAE                           +\n               CT,                 .. CREATING NEW ESTAE               +\n               PARAM=(R12),        .. ESTAE WILL NEED COMM AREA ADDRESS+\n               PURGE=NONE,         .. TRY NOT TO PURGE I/O REQUESTS    +\n               ASYNCH=YES,         .. ALLOW ASYNCHRONOUS EVENTS        +\n               TERM=NO,            .. DO NOT INTERCEPT X22 ABEND       +\n               MF=(E,DXD_ESTAE)    ..\n.NOSTAE  ANOP\n* ------------------------------------------------------------------- *\n*        Load 24-bit stuff                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LOAD_24\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSFORMAT\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         MVC   DXD_OSFORMAT,LOADREQ_EP          SAVE OSFORMAT EP\n* ------------------------------------------------------------------- *\n*        Initialize RECALL                                            *\n* ------------------------------------------------------------------- *\n         MVI   RCALLREQ_FUNC,$RCALLREQ_INIT\n         LA    R1,RCALLREQ\n         L     R15,COMM_V_OSRECALL\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Load data space manager                                      *\n* ------------------------------------------------------------------- *\n         LOAD  EP=OSDSPACE\n         ST    R0,COMM_OSDSPACE                 SPACE MANAGER\n* ------------------------------------------------------------------- *\n*        LOAD SPF interface                                           *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         ITRACE ID=LOADSPF\n         MVC   LOADREQ_MODULE,MODULE_ISPLINK\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         MVC   COMM_ISPLINK,LOADREQ_EP\n* ------------------------------------------------------------------- *\n*        LOAD SPF variable definitions                                *\n* ------------------------------------------------------------------- *\nINIT0080 DS    0H\n         ITRACE ID=LOADSPFV\n         MVC   LOADREQ_MODULE,MODULE_OSSPFV\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         MVC   COMM_OSSPFV,LOADREQ_EP\n         NI    COMM_OSSPFV,X'7F'                TURN OFF AMODE BIT\n* ------------------------------------------------------------------- *\n*        LOAD SPF data                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LOADSPFD\n         MVC   LOADREQ_MODULE,MODULE_OSSPFD\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         MVC   COMM_OSSPFD,LOADREQ_EP\n         NI    COMM_OSSPFD,X'7F'\n* ------------------------------------------------------------------- *\n*        Define SPF variables                                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VDEFINE\n         MVI   VAR_COMMAND,$VAR_DEFINE\n         MVC   VAR_TABLE,COMM_OSSPFV\n         MVC   VAR_AREA,COMM_OSSPFD\n         LA    R1,VARREQ                        INDICATE 'DEFINE'\n         L     R15,COMM_V_OSVARMGR              SPF VARIABLE MANAGER\n         BALR  R14,R15                          DEFINE SPF VARIABLES\n* ------------------------------------------------------------------- *\n*        Read the user's profile                                      *\n* ------------------------------------------------------------------- *\n         ITRACE ID=READPROF\n         LOAD  EP=OSPROF\n         LR    R15,R0\n         MVI   PROF_FUNC,$PROF_READ\n         LA    R1,PROFREQ\n         BALR  R14,R15                          LINK TO OSPROF\n         DELETE EP=OSPROF\n         ITRACE ID=PROF_RC,                                            +\n               DATA1=(PROF_RC,1)\n         CLI   PROF_RC,$PROF_OK                 SUCCESSFUL?\n         BNE   ERR0020                          NO\n* ------------------------------------------------------------------- *\n*        Verify message table is present                              *\n* ------------------------------------------------------------------- *\n         OC    COMM_MESSAGE_TABLE,COMM_MESSAGE_TABLE\n         BNZ   INIT0090\n         MVC   COMM_NATIONAL_LANGUAGE,LANGUAGE_US\n         MVC   COMM_LANGUAGE_MODULE,MODULE_OSMSGUS\n         LOAD  EPLOC=COMM_LANGUAGE_MODULE\n         ST    R0,COMM_MESSAGE_TABLE\n* ------------------------------------------------------------------- *\n*        Determine if OSOPTS DD is present                            *\n* ------------------------------------------------------------------- *\nINIT0090 DS    0H\n         ITRACE ID=SCANTIOT\n         USING PSA,R0                           DEFINE BASE\n         L     R1,PSATNEW                       OUR TCB ADDRESS\n         USING TCB,R1                           DEFINE TCB BASE\n         L     R2,TCBTIO                        TIOT ADDRESS\n         USING TIOT1,R2                         DEFINE TIOT BASE\n         LA    R3,TIOENTRY                      FIRST TIOT ENTRY\n         DROP  R2\n         USING TIOENTRY,R3                      DEFINE TIOT ENTRY BASE\nINIT0100 DS    0H\n         SR    R4,R4                            CLEAR FOR LENGTHS\n         ICM   R4,1,TIOELNGH                    LENGTH OF THIS ENTRY\n         BZ    INIT0130                         END OF TABLE\n         CLC   TIOEDDNM,OSOPTS_DD               OSOPTS DD PRESENT?\n         BE    INIT0120                         YES\nINIT0110 DS    0H\n         AR    R3,R4                            NEXT ENTRY\n         B     INIT0100                         LOOP\nINIT0120 DS    0H\n         OI    DXD_FLAGS,$OSOPTS_DD             SET INDICATOR\n         DROP  R3\n* ------------------------------------------------------------------- *\n*        Determine user's user id                                     *\n* ------------------------------------------------------------------- *\nINIT0130 DS    0H\n         USING PSA,R0                           DEFINE BASE\n         L     R1,PSAAOLD                       OUR ASCB'S ADDRESS\n         USING ASCB,R1                          DEFINE BASE\n         L     R14,ASCBASXB                     ASXB ADDRESS\n         USING ASXB,R14                         DEFINE ASCB BASE\n         L     R15,ASXBSENV                     ACEE'S ADDRESS\n         USING ACEE,R15                         DEFINE ACEE BASE\n         SR    R1,R1                            CLEAR REGISTER\n         IC    R1,ACEEUSRL                      USER ID LENGTH\n         STH   R1,COMM_USER_LENGTH              SET USER ID LENGTH\n         BCTR  R1,0                             MINUS 1\n         MVC   COMM_USER,COMM_BLANKS            INITIALIZE USERID\n         EX    R1,UIDMVC                        COPY USER ID\n         ITRACE ID=USER,                                               +\n               DATA1=COMM_USER,                                        +\n               DATA2=COMM_USER_LENGTH\n* ------------------------------------------------------------------- *\n*        Determine invoking command's address and length              *\n* ------------------------------------------------------------------- *\n         LTR   R8,R8                            PARM PRESENT?\n         BZ    INIT0170                         NO\n         ITRACE ID=CMD_ADDR,                                           +\n               RDATA1=R8,                                              +\n               DATA2=(0(R8),4)\n         ICM   R14,15,0(R8)                     PARM PRESENT?\n         BZ    INIT0170                         NO\n         LH    R15,0(R14)                       COMMAND'S LENGTH\n         SH    R15,H4                           MINUS PREFIX LENGTH\n         LA    R1,4(,R14)\nINIT0140 DS    0H\n         CLI   0(R1),C' '                       BLANK?\n         BE    INIT0150                         YES\n         LA    R1,1(,R1)                        NEXT\n         BCT   R15,INIT0140\n         B     INIT0160\nINIT0150 DS    0H\n         CLI   0(R1),C' '                       BLANK\n         BNE   INIT0160                         NO\n         LA    R1,1(,R1)                        NEXT\n         BCT   R15,INIT0150\nINIT0160 DS    0H\n         STH   R15,COMM_COMMAND_LENGTH\n         ST    R1,COMM_COMMAND\nINIT0170 DS    0H\n         ITRACE ID=INIT_CMD,                                           +\n               DATA1=(COMM_COMMAND,4),                                 +\n               DATA2=(COMM_COMMAND_LENGTH,4)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Create 1st SESSION                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                            GETMAIN SESSION BLOCK  +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         LR    R11,R1                           SAVE ADDRESS\n         USING SESSION,R11\n         ST    R11,COMM_ACTIVE_SESSION          SET ACTIVE SESSION ADDR\n         LR    R0,R1                            COPY ADDRESS\n         LA    R1,SESSION_L                     SESSION BLOCK LENGTH\n         SR    R14,R14                          ZERO R14\n         SR    R15,R15                          ZERO R15\n         MVCL  R0,R14                           INITIALIZE SESSION\n         ITRACE ID=1ST_SESS,                                           +\n               RDATA1=R11,                                             +\n               DATA2=(SESS_KEYWORD_FLAGS_2,1)\n         MVC   SESS_EYE,SESSION_ID\n         MVC   SESS_DEFAULT_FORMAT,COMM_BLANKS\n         MVC   SESS_FORMAT,COMM_BLANKS\n         MVC   SESS_FUNCTION_MODULE,COMM_BLANKS\n         MVC   SESS_DATA_LOADER,COMM_BLANKS\n         MVC   SESS_EXIT_MODULE,COMM_BLANKS\n         MVC   SESS_DD,COMM_BLANKS\n         MVC   SESS_DSN,COMM_BLANKS\n         MVC   SESS_PATH,COMM_BLANKS\n         MVC   SESS_REAL_PATH,COMM_BLANKS\n         MVC   SESS_MEMBER,COMM_BLANKS\n         MVC   SESS_VOLSER,COMM_BLANKS\n         MVC   SESS_FROM_KEY,COMM_BLANKS\n         MVC   SESS_TO_KEY,COMM_BLANKS\n         MVC   SESS_SEARCH_ARG,COMM_BLANKS\n         USING DS1FMTID,SESS_DSCB               DEFINE DSCB BASE\n* ------------------------------------------------------------------- *\n*        GETMAIN I/O area                                             *\n* ------------------------------------------------------------------- *\n         L     R0,COMM_IO_SIZE                  I/O AREA SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,SESS_IO_AREA                  SAVE ADDRESS\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n* ------------------------------------------------------------------- *\n*        If On Screen was started with no parms, prompt the user      *\n* ------------------------------------------------------------------- *\n         OC    COMM_COMMAND_LENGTH,COMM_COMMAND_LENGTH\n         BNZ   INIT0210\nINIT0190 DS    0H\n         OI    DXD_FLAGS,$PROMPT\nINIT0200 DS    0H\n         ITRACE ID=PROMPT\n         NI    SESS_STATUS,255-$STATUS_NO_MEMBER\n         L     R15,COMM_V_OSPROMPT\n         BALR  R14,R15\n         ITRACE ID=PROMPTRC,                                           +\n               DATA1=SESS_RC\n         OC    SESS_RC,SESS_RC\n         BNZ   INIT0220\n         L     R2,COMM_OSSPFD\n         USING OSSPFD,R2\n         CLC   SPF_ZCMD,COMM_BLANKS\n         BE    INIT0230\n* ------------------------------------------------------------------- *\n*        Process operands on invoking command                         *\n* ------------------------------------------------------------------- *\nINIT0210 DS    0H\n         ITRACE ID=PARMS\n         L     R2,COMM_OSSPFD\n         LA    R1,PARMSREQ\n         L     R15,COMM_V_OSPARMS               OSPARMS ENTRY POINT\n         BALR  R14,R15                          PROCESS PARMS\n         LTR   R15,R15                          PARMS OK?\n         BZ    INIT0230                         YES\n         TM    DXD_FLAGS,$PROMPT                FOLLOWING A PROMPT?\n         BNO   ERR0030                          NO\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     INIT0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0220 DS    0H\n         ITRACE ID=BAIL_OUT\n         NI    DXD_FLAGS,255-$PROMPT\n         B     MAIN0540\n* ------------------------------------------------------------------- *\n*        Determine if required operands are present                   *\n* ------------------------------------------------------------------- *\nINIT0230 DS    0H\n         ITRACE ID=INIT0230,                                           +\n               DATA1=(SESS_KEYWORD_FLAGS,1),                           +\n               DATA2=(SESS_KEYWORD_FLAGS_2,1)\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_ACT\n         BO    MAIN0400                         YES\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_VTOC\n         BO    MAIN0180                         YES\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_STOR\n         BO    MAIN0250                         YES\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RAWVTOC\n         BO    MAIN0180                         YES\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH UNIX PATH?\n         BO    MAIN0190                         YES\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DSN  DATASET NAME?\n         BO    MAIN0000                         YES\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DD   DD NAME?\n         BO    MAIN0020                         YES\n         B     ERR0040                          OTHERWISE...\n\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=MAIN0000,                                           +\n               DATA1=(SESS_DATA_TYPE,1),                               +\n               DATA2=(SESS_DATASET_FLAGS,1)\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_OTHER  'OTHER'?\n         BE    MAIN0400                         YES\n         CLI   SESS_DATA_TYPE,0                 DATA TYPE KNOWN?\n         BE    MAIN0010                         NO\n         TM    SESS_DATASET_FLAGS,$SESS_DATASET_NO_DCB\n         BO    MAIN0190                         YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Allocate the data set if necessary                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=ALOC_DSN\n         MVI   DAIR_FUNC,$DAIR_ALLOC            SET DAIR FUNCTION\n         MVI   DAIR_OPTS,X'00'                  CLEAR THE OPTIONS\n         MVC   DAIR_DSN,SESS_DSN                COPY DATA SET NAME\n         MVC   DAIR_MEMBER,SESS_MEMBER          COPY MEMBER NAME\n         MVC   DAIR_VOLSER,SESS_VOLSER          COPY VOLSER\n         MVC   DAIR_UNIT,COMM_BLANKS            SET UNIT TO BLANKS\n         MVI   DAIR_DISP,$DAIR_DISP_SHR         DISP=SHR\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          CALL OSDAIR\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0050                          NO\n         OI    SESS_DATASET_FLAGS,$SESS_DATASET_ALLOCATED\n         MVC   SESS_DD,DAIR_DD                  COPY RETURNED DD NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Either the user specified a DD name or the data set has      *\n*        been dynamically allocated.                                  *\n*                                                                     *\n*        Locate the UCB                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         CLI   SESS_DATA_TYPE,0                 DATA TYPE KNOWN?\n         BE    MAIN0030                         NO\n         TM    SESS_DATASET_FLAGS,$SESS_DATASET_NO_DCB\n         BO    MAIN0190                         NO DCB/ACB, UCB, DSORG\nMAIN0030 DS    0H\n         ITRACE ID=FIND_DD,                                            +\n               DATA1=SESS_DD\n         USING PSA,R0                           DEFINE BASE\n         L     R1,PSATNEW                       TCB ADDRESS FROM PSA\n         USING TCB,R1                           DEFINE TCB BASE\n         L     R2,TCBTIO                        TIOT ADDRESS\n         USING TIOT1,R2                         DEFINE TIOT BASE\n         LA    R3,TIOENTRY                      FIRST TIOT ENTRY\n         DROP  R2\n         USING TIOENTRY,R3                      DEFINE TIOT ENTRY BASE\nMAIN0040 DS    0H\n         SR    R4,R4                            CLEAR FOR LENGTHS\n         ICM   R4,1,TIOELNGH                    LENGTH OF THIS ENTRY\n         BZ    ERR0060                          END OF TABLE\n         CLC   TIOEDDNM,SESS_DD                 SPECIFIED DD FOUND?\n         BE    MAIN0050                         YES\n         AR    R3,R4                            NEXT ENTRY\n         B     MAIN0040                         LOOP\nMAIN0050 DS    0H\n         ITRACE ID=DD_FND\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DSN\n         BO    MAIN0060                         YES\n         LA    R5,DXD_EPA\n         ST    R5,DXD_SWEPAPTR\n         USING ZB505,R5\n         XC    SWAEPAX,SWAEPAX\n         MVC   SWVA,TIOEJFCB\n         ITRACE ID=SWAREQ\n         SWAREQ FCODE=RL,                                              +\n               EPA=DXD_SWEPAPTR,                                       +\n               UNAUTH=YES,                                             +\n               MF=(E,DXD_SWAPARMS)\n         L     R1,SWBLKPTR\n         USING JFCB,R1                          DEFINE BASE\n         MVC   SESS_DSN,JFCBDSNM                COPY DATA SET NAME\nMAIN0060 DS    0H\n         MVC   SESS_UCB+1(3),TIOEFSRT           COPY UCB ADDRESS\n         DROP  R3\n* ------------------------------------------------------------------- *\n*        Determine data set's DSORG, etc                              *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=OSDSINFO                     CALLING OSDSINFO\n         MVI   DSINFO_OPTIONS,0                 RESET OPTIONS\n         MVC   DSINFO_DSN,SESS_DSN              SET DATA SET NAME\n         MVC   DSINFO_VOLSER,COMM_BLANKS\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_VOL  VOLSER SPECIFIED?\n         BNO   MAIN0080                         NO\n         OI    DSINFO_OPTIONS,$DSINFO_VOLSER    SPECIFIC VOLSER\n         MVC   DSINFO_VOLSER,SESS_VOLSER        VOLSER\nMAIN0080 DS    0H\n         LA    R1,DSINFREQ                      REQUEST BLOCK ADDRESS\n         L     R15,COMM_V_OSDSINFO              OSDSINFO ENTRY POINT\n         BALR  R14,R15\n         OC    DSINFO_ERROR_INFO,DSINFO_ERROR_INFO\n         BNZ   ERR0070\n         MVC   SESS_DATA_TYPE,DSINFO_DATASET_TYPE\n         MVC   SESS_VOLSER,DSINFO_VOLSER\n         MVC   SESS_DSCB,DSINFO_DSCB\n         ITRACE ID=DS_TYPE,                                            +\n               DATA1=(SESS_DATA_TYPE,1)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LOADER,                                             +\n               DATA1=SESS_DATA_LOADER\n         CLC   SESS_DATA_LOADER,COMM_BLANKS     DATA ALREADY LOADED?\n         BH    MAIN0230                         YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_PDS_DIR\n         BE    MAIN0100                         YES\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_PDS_MEMBER\n         BE    MAIN0110                         YES\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_SEQUENTIAL\n         BE    MAIN0120                         YES\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_DATA   DATA COMPONENT?\n         BE    MAIN0130                         YES\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_INDEX  INDEX COMPONENT?\n         BE    MAIN0140                         YES\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM   VSAM?\n         BO    MAIN0160                         YES\n         ITRACE ID=BAD_TYPE\n         MVI   COMM_MSG_ID+1,2                  UNKNOWN DATA SET TYPE\n         B     ERR1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        PDS/E directory                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         CLC   SESS_MEMBER,COMM_BLANKS          MEMBER NAME GIVEN?\n         BNE   MAIN0110                         YES..\n         ITRACE ID=PDS_E\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_PDS_DIR   DATA TYPE\n         BAL   R8,DSPC0000                      CREATE DATASPACE\n         MVC   LOADREQ_MODULE,MODULE_OSDESERV\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         ICM   R15,15,LOADREQ_EP                OSDESERV ENTRY POINT\n         BALR  R14,R15                          LINK TO OSDESERV\n         ITRACE ID=DESERVRC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   MAIN0510                         NO\n         B     MAIN0230                         DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        PDS/E member                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=PDSMEMBR\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_PDS_MEMBER\n         BAL   R8,DSPC0000                      CREATE DATASPACE\n         MVC   LOADREQ_MODULE,MODULE_OSRDBSAM\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         ICM   R15,15,LOADREQ_EP                OSRDBSAM ENTRY POINT\n         BALR  R14,R15                          LINK TO OSRDBSAM\n         ITRACE ID=BSAM_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   MAIN0510                         NO\n         B     MAIN0230                         DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Sequential data set                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         ITRACE ID=SEQ\n         L     R1,SESS_UCB                      UCB\n         USING UCBOB,R1                         DEFINE BASE\n         TM    UCBTBYT3,UCB3DACC                DASD DEVICE?\n         BNO   ERR0110                          NO..\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_SEQUENTIAL\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        VSAM DATA component                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=VSAMDATA\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        VSAM INDEX component                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         ITRACE ID=VSAMINDX\n* ------------------------------------------------------------------- *\n*        Load OSRDBSAM                                                *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         BAL   R8,DSPC0000                      CREATE DATASPACE\n         ITRACE ID=LOADREAD,                                           +\n               DATA1=MODULE_OSRDBSAM\n         MVC   LOADREQ_MODULE,MODULE_OSRDBSAM\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Link to OSRDBSAM to read data                                *\n* ------------------------------------------------------------------- *\n         ICM   R15,15,LOADREQ_EP                OSRDBSAM ENTRY POINT\n         ITRACE ID=CALLBSAM,                                           +\n               RDATA1=R15\n         BALR  R14,R15                          LINK TO OSRDBSAM\n         B     MAIN0170                         FREE THE DD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        VSAM                                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=VSAM\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM   SOME SORT OF VSAM\n         BAL   R8,DSPC0000                      CREATE DATASPACE\n         MVC   LOADREQ_MODULE,MODULE_OSRDVSAM\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                          LOAD OSRDVSAM\n         ICM   R15,15,LOADREQ_EP\n         ITRACE ID=CALLVSAM,                                           +\n               RDATA1=R15\n         BALR  R14,R15                          LINK TO OSRDVSAM\n         ITRACE ID=VSAM_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=(SESS_DATA_TYPE,1)\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR1010                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0170 DS    0H\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=SESS_DD\n         MVI   DAIR_FUNC,$DAIR_FREE\n         MVC   DAIR_DD,SESS_DD\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          CALL OSDAIR\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0050                          NO\n         TM    SESS_STATUS,$STATUS_NO_MEMBER\n         BO    ERR1010                          MEMBER WAS NOT FOUND\n         B     MAIN0230\n* ------------------------------------------------------------------- *\n*       Read data from VTOC                                           *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=VTOC\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_VTOC\n         OI    SESS_DATASET_FLAGS,$SESS_DATASET_NO_DCB\n         MVI   SESS_DD,C'V'\n         MVC   SESS_DD+1(6),SESS_VOLSER\n         MVI   SESS_DD+7,C' '\n         BAL   R8,DSPC0000                      CREATE DATASPACE\n         MVC   LOADREQ_MODULE,MODULE_OSRDVTOC\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                          LOAD OSRDVTOC\n         ITRACE ID=READVTOC,                                           +\n               RDATA1=R15\n         ICM   R15,15,LOADREQ_EP\n         BALR  R14,R15                          LINK TO OSRDVTOC\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR1010                          NO\n         B     MAIN0230\n* ------------------------------------------------------------------- *\n*        Determine HFS file type                                      *\n* ------------------------------------------------------------------- *\nMAIN0190 DS    0H\n         ITRACE ID=MAIN0190,                                           +\n               DATA1=(SESS_DATA_TYPE,1)\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS    HFS?\n         BNO   MAIN0230                         NO\n         ITRACE ID=STAT,                                               +\n               DATA1=(SESS_PATH_LENGTH,4),                             +\n               DATA2=SESS_PATH\n         MVC   LOADREQ_MODULE,MODULE_OSHFSTYP   MODULE TO LOAD\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                          LOAD OSHFSTYP\n         ICM   R15,15,LOADREQ_EP\n         BALR  R14,R15                          LINK TO OSHFSTYP\n         ITRACE ID=STAT_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR0090                          NO\n         OI    SESS_DATASET_FLAGS,$SESS_DATASET_NO_DCB\n         LA    R2,SESS_STAT                     STAT FOR PATH ENTERED\n         USING STAT,R2\n         ITRACE ID=PATHTYPE,                                           +\n               DATA1=(ST_MODE,4)\n         CLI   ST_MODE,X'FF'                    STATUS X'FF'?\n         BE    MAIN0230                         YES.. DID NOT EXIST\n         CLI   ST_MODE,FT_SYMLINK               SYMLINK?\n         BNE   MAIN0200                         NO\n         LA    R2,SESS_REAL_STAT                STAT FOR REAL PATH\nMAIN0200 DS    0H\n         CLI   ST_MODE,FT_DIR                   DIRECTORY?\n         BE    MAIN0210                         YES\n         ITRACE ID=HFSSEQ\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_HFS_FILE\n         MVC   LOADREQ_MODULE,MODULE_OSHFSSEQ   'NORMAL' FILE READER\n         B     MAIN0220\nMAIN0210 DS    0H\n         ITRACE ID=HFSDIR\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_HFS_DIR\n         MVC   LOADREQ_MODULE,MODULE_OSHFSDIR   DIRECTORY READER\nMAIN0220 DS    0H\n         BAL   R8,DSPC0000                      CREATE DATASPACE\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                          LOAD HFS READER\n         ICM   R15,15,LOADREQ_EP\n         BALR  R14,R15                          LINK\n         ITRACE ID=HFS_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR1010                          NO\n* ------------------------------------------------------------------- *\n*       Data has been read and loaded into the DATASPACE              *\n* ------------------------------------------------------------------- *\nMAIN0230 DS    0H\n         ITRACE ID=LOADED\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         L     R2,COMM_OSSPFD\n         USING OSSPFD,R2\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVC   COMM_MSG_1,COMM_BLANKS\n         MVC   COMM_MSG_2,COMM_BLANKS\n         MVC   COMM_MSG_3,COMM_BLANKS\n         MVC   COMM_MSG_4,COMM_BLANKS\n         MVC   COMM_MSG_5,COMM_BLANKS\n         DROP  R2\n         TM    SESS_USER_OPTIONS,$OPTIONS_DUMPDATA\n         BNO   MAIN0400\n         ITRACE ID=DUMPDATA\n         MVI   DAIR_OPTS,$DAIR_SYSOUT           TYPE OF DATA SET\n         MVI   DAIR_FUNC,$DAIR_ALLOC            SET FUNCTION (ALLOCATE)\n         MVC   DAIR_DD,OSDUMP_DD                COPY DDNAME\n         MVC   DAIR_SYSOUT,COMM_SYSOUT_CLASS\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0050                          NO\n         MVC   DUMP_DCB(DUMP_DCB_L),DUMP_DCB_I\n         MVC   DUMP_OPEN(OPEN_L),OPEN_I\n         MVC   DUMP_CLOSE(CLOSE_L),CLOSE_I\n         LA    R2,DUMP_DCB                      DCB ADDRESS\n         ST    R2,DSPCREQ_DCB                   PASS IT TO OSDSPACE\n         ITRACE ID=OPENDUMP,                                           +\n               RDATA1=R2\n         OPEN  ((R2),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,DUMP_OPEN)\n         LA    R1,DUMP_IO_AREA                  I/O AREA ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR           PASS ADDRESS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_DUMP\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=CLS_DUMP,                                           +\n               RDATA1=R2\n         CLOSE ((R2)),                          CLOSE DCB              +\n               MODE=31,                                                +\n               MF=(E,DUMP_CLOSE)\n         FREEPOOL (R2)\n         MVI   DAIR_FUNC,$DAIR_FREE\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         B     MAIN0400\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=STOR\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_STOR\n         OI    SESS_DATASET_FLAGS,$SESS_DATASET_NO_DCB\n         MVC   SESS_FORMAT,FORMAT_STOR\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Load and initialize the function                             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=LOADFMAT,                                           +\n               DATA1=SESS_FORMAT\n         MVI   FMATREQ_FUNC,$FMATREQ_FORMAT\n         MVC   FMATREQ_FORMAT,SESS_FORMAT\n         LA    R1,FMATREQ\n         L     R15,DXD_OSFORMAT                 OSFORMAT EP\n         BALR  R14,R15                          LOAD FUNCTION\n         ITRACE ID=FMAT_RC,                                            +\n               DATA1=(FMATREQ_RC,1)\n         CLI   FMATREQ_RC,$FMATREQ_OK           SUCCESSFUL?\n         BNE   ERR0100                          NO\n* ------------------------------------------------------------------- *\n*        Clear ZCMD                                                   *\n* ------------------------------------------------------------------- *\n         L     R2,COMM_OSSPFD\n         USING OSSPFD,R2\n         MVC   SPF_ZCMD,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        Display the data                                             *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=DISPLAY\n         NI    DXD_FLAGS,255-$PROMPT            RESET FLAG\n         TM    SESS_STATUS,$STATUS_NO_DATA      ANY DATA TO DISPLAY?\n         BO    MAIN0510                         NO\n         MVI   SESS_STATUS,0                    CLEAR STATUS\n         MVI   SESS_FORMAT_FLAGS,$FORMAT_FORMAT SET FUNCTION\n         L     R2,COMM_OSSPFD\n         MVC   SPF_FORMAT,SESS_FORMAT           COPY FORMAT NAME\n         L     R15,SESS_FUNCTION_EP             FUNCTION ENTRY POINT\n         ITRACE ID=FORMAT,                                             +\n               RDATA1=R15,                                             +\n               DATA2=SESS_FORMAT\n         BALR  R14,R15                          LINK TO FUNCTION\n         ITRACE ID=SESSFUNC,                                           +\n               DATA1=(COMM_SESS_FUNC,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT?\n         BNE   FMT0000                          YES\n         CLI   COMM_SESS_FUNC,0                 ANY SESSION FUNCTION?\n         BE    MAIN0500                         NO..\n         CLI   COMM_SESS_FUNC,$SESS_REMOVE      REMOVE CURRENT SESSION?\n         BE    MAIN0550                         YES\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH      SWITCH SESSIONS?\n         BE    SESS0000                         YES\n         CLI   COMM_SESS_FUNC,$SESS_NEW_SESSION NEW SESSION?\n         BE    SESS0100                         YES\n         DC    H'0'\nMAIN0510 DS    0H\n         ITRACE ID=NO_DATA\n         MVC   SESS_DISP_PANEL,OSNODATA         NO DATA TO DISPLAY\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Check for any keywords                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0520 DS    0H\n         L     R2,COMM_OSSPFD\n         OC    SPF_ZCMD,COMM_BLANKS\n         CLC   SPF_ZCMD,COMM_BLANKS\n         BE    MAIN0530\n         MVI   COMM_MSG_ID+1,4                  INVALID COMMAND\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0500\n         DROP  R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0530 DS    0H\n         CLI   SESS_RC+1,0                      RC ZERO?\n         BE    MAIN0500                         YES.. RE-DISPLAY\nMAIN0540 DS    0H\n         ITRACE ID=MAIN0540\n         TM    DXD_FLAGS,$PROMPT\n         BO    INIT0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       A session has ended                                           *\n*                                                                     *\n*       Delete the data space                                         *\n*       Free the FORMAT info                                          *\n*       If the DCB is open                                            *\n*          close the DCB                                              *\n*          FREEMAIN the DCB storage                                   *\n*          deallocate the DD                                          *\n*       FREEMAIN the I/O area                                         *\n*       FREEMAIN VDATA if present                                     *\n*       Determine if there are other sessions                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=ENDED,                                              +\n               DATA1=SESS_DD,                                          +\n               DATA2=DATASPACE_1_NAME\n         TM    SESS_STATUS,$STATUS_NO_DATA\n         BO    MAIN0560                         NO DATA\n         ITRACE ID=FREEFMT1,                                           +\n               DATA1=SESS_FORMAT\n         MVI   FMATREQ_FUNC,$FMATREQ_FREE\n         MVC   FMATREQ_FORMAT,SESS_FORMAT\n         LA    R1,FMATREQ                       FORMAT REQUEST BLOCK\n         L     R15,DXD_OSFORMAT                 OSFORMAT ENTRY POINT\n         BALR  R14,R15                          FREE THE FORMAT\n         ITRACE ID=FREED_1,                                            +\n               DATA1=(FMATREQ_RC,1)\n         CLI   FMATREQ_RC,$FMATREQ_OK           SUCCESSFUL?\n         BNE   ERR0100                          NO\nMAIN0560 DS    0H\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_STOR\n         BO    MAIN0580                         NO DCB, NO DD ALLOCATED\n         ICM   R2,15,SESS_DCB_ADDR              DCB ADDRESS\n         BZ    MAIN0570                         NO DCB\n         TM    SESS_DCB_FLAGS,$SESS_DCB_OPEN    DCB OPEN?\n         BNO   MAIN0565                         NO\n         MVC   DXD_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R2,                                              +\n               DATA2=SESS_DD\n         CLOSE ((R2)),                          CLOSE DCB              +\n               MODE=31,                                                +\n               MF=(E,DXD_CLOSE)\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\nMAIN0565 DS    0H\n         L     R0,SESS_DCB_LENGTH               DCB LENGTH\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R2,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                           FREEMAIN DCB           +\n               A=(R2),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR      RESET ADDRESS\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH  RESET LENGTH\nMAIN0570 DS    0H\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=SESS_DD\n         MVI   DAIR_FUNC,$DAIR_FREE             SET DAIR FUNCTION\n         MVC   DAIR_DD,SESS_DD                  SET DD NAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          FREE THE DD\n         ITRACE ID=DD_FREED\nMAIN0580 DS    0H\n         ICM   R1,15,SESS_IO_AREA               I/O AREA ADDRESS\n         BZ    MAIN0590                         NOT GETMAINED\n         ITRACE ID=FREE_IO,                                            +\n               RDATA1=R1\n         L     R0,COMM_IO_SIZE                  I/O AREA SIZE\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\nMAIN0590 DS    0H\n         OC    DATASPACE_1_ALET,DATASPACE_1_ALET DATASPACE PRESENT?\n         BZ    MAIN0600                          NO\n         ITRACE ID=D_SPACE,                                            +\n               DATA1=(DATASPACE_1_NAME,8),                             +\n               DATA2=(DATASPACE_1_ALET,4)\n         LA    R1,DATASPACE_1                    DATA SPACE FOR SESSION\n         ST    R1,DSPCREQ_DATASPACE              SET ADDRESS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_DELETE      SET COMMAND\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           DELETE DATASPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_OK            SUCCESSFUL?\n         BNE   ERR0080\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Remove the active session block                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=REM_SESS,                                           +\n               DATA1=(COMM_ACTIVE_SESSION,4)\n         ICM   R1,15,SESS_NEXT                  NEXT ON CHAIN PRESENT?\n         BZ    MAIN0610                         NO\nNEXT     USING SESSION,R1\n         MVC   NEXT.SESS_PREV,SESS_PREV         UNCHAIN CURRENT BLOCK\n         DROP  NEXT\nMAIN0610 DS    0H\n         ICM   R1,15,SESS_PREV                  PREV ON CHAIN PRESENT?\n         BZ    MAIN0620                         NO\nPREV     USING SESSION,R1\n         MVC   PREV.SESS_NEXT,SESS_NEXT         UNCHAIN CURRENT BLOCK\n         DROP  PREV\nMAIN0620 DS    0H\n         LR    R1,R11                           COPY SESSION BLOCK ADDR\n         ICM   R2,15,SESS_NEXT                  NEXT SESSION BLOCK\n         BNZ   MAIN0630\n         ICM   R2,15,SESS_PREV                  PREVIOUS SESSION BLOCK\nMAIN0630 DS    0H\n         LA    R0,SESSION_L\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=(0)\n         LTR   R11,R2                           SESSION TO RESUME\n         BZ    EXIT0000                         NO SESSIONS.. ALL DONE\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH      SWITCHING BACK\n         B     MAIN0500                         DISPLAY SESSION'S INFO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Process new format(s)                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT0000  DS    0H\n         ITRACE ID=NEW_FMAT,                                           +\n               DATA1=SESS_FORMAT,                                      +\n               DATA2=COMM_NEW_FORMAT\n         MVI   FMATREQ_FUNC,$FMATREQ_FREE       SET CMD (FREE FORMAT)\n         MVC   FMATREQ_FORMAT,SESS_FORMAT       FORMAT BEING FREED\n         LA    R1,FMATREQ\n         L     R15,DXD_OSFORMAT                 OSFORMAT ENTRY POINT\n         BALR  R14,R15                          FREE CURRENT FORMAT\n         MVC   SESS_FORMAT,COMM_NEW_FORMAT      CHANGE FORMAT NAME\n         MVC   COMM_NEW_FORMAT,COMM_BLANKS      RESET NEW NAME\n         B     MAIN0400                         LOAD NEW FUNCTION\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Process new sessions or session switches                        *\n*                                                                     *\n*     This occurs when                                                *\n*          a data set is selected on a VTOC display                   *\n*          a member is selected on a PDS(/E) directory display        *\n*          a file or path is selected on an HFS directory display     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS0000 DS    0H\n         ITRACE ID=SESS0000,                                           +\n               DATA1=(SESS_FORMAT_FLAGS,1)\n         L     R11,COMM_NEW_SESSION             NEW SESSION ADDR\n         ST    R11,COMM_ACTIVE_SESSION          NEW IS NOW CURRENT\n         XC    COMM_NEW_SESSION,COMM_NEW_SESSION\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_FORMAT IN FORMAT STATE?\n         BE    SESS0010                         YES\n         ITRACE ID=NEW_SESS,                    NEW SESSION            +\n               RDATA1=R11\n         B     MAIN0000                         PROCESS NEW SESSION\nSESS0010 DS    0H\n         ITRACE ID=RESUME,                      RESUMING A SESSION     +\n               RDATA1=R11\n         B     MAIN0500                         DISPLAY DATA AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS0100 DS    0H\n         GETMAIN RU,                                                   +\n               LV=SESSION_L,                                           +\n               LOC=ANY\n         ITRACE ID=NEW_OS,                                             +\n               RDATA1=R1\n         LR    R2,R1                            SAVE NEW SESSION ADDR\nNEW      USING SESSION,R2\n         LR    R0,R1                            COPY ADDRESS\n         L     R1,=A(SESSION_L)                 LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE STORAGE\n         MVC   NEW.SESS_EYE,SESSION_ID          IDENTIFY BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREVIOUS BLOCK\n         ICM   R1,15,SESS_NEXT                  NEXT SESS BLOCK\n         BZ    SESS0110\nNEXT     USING SESSION,R1\n         ST    R2,NEXT.SESS_PREV                SET PREVIOUS\nSESS0110 DS    0H\n         ST    R1,NEW.SESS_NEXT                 NEXT IS NEW'S NEXT\n         ST    R2,SESS_NEXT                     NEW IS NEXT TO CURRENT\n         LR    R11,R2                           NEW IS NOW CURRENT\n         ST    R11,COMM_ACTIVE_SESSION          SET ACTIVE SESSION\n         DROP  NEW,NEXT\n         L     R0,COMM_IO_SIZE                  I/O AREA SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,SESS_IO_AREA                  SET I/O AREA ADDRESS\n         LA    R1,DATASPACE_1                   DATA SPACE 1 INFO\n         ST    R1,DSPCREQ_DATASPACE             SET IN PARMS\n         MVC   SESS_DSN,COMM_BLANKS\n         MVC   SESS_MEMBER,COMM_BLANKS\n         MVC   SESS_VOLSER,COMM_BLANKS\n         MVC   DATASPACE_1_FIRST_RECORD,F1\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         B     INIT0190                         PROMPT USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSPC0000 DS    0H\n         ITRACE ID=CRE_DSPC                     CREATING A DATA SPACE\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CREATE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          CREATE DATASPACE\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0080\n         ITRACE ID=XREF,                                               +\n               DATA1=SESS_DD,                                          +\n               DATA2=DATASPACE_1_NAME\n         MVC   DATASPACE_1_FIRST_RECORD,F1\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1\n         MVC   DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NO_SPFQRY\n         STH   R15,COMM_DWORD\n         MVI   COMM_MSG_ID+1,5                  SPFQRY FAILED\n         B     ERR1000\nERR0020  DS    0H\n         ITRACE ID=PROFFAIL\n         B     ERR1010\nERR0030  DS    0H\n         ITRACE ID=PARM_ERR\n         B     ERR1010\nERR0040  DS    0H\n         ITRACE ID=REQUIRED\n         MVI   COMM_MSG_ID+1,6                  REQUIRED PARM MISSING\n         B     ERR1000\nERR0050  DS    0H\n         ITRACE ID=DAIRFAIL\n         B     ERR1010\nERR0060  DS    0H\n         ITRACE ID=NO_TIOT\n         MVI   COMM_MSG_ID+1,7                  NO TIOT ENTRY FOUND\n         B     ERR1000\nERR0070  DS    0H\n         ITRACE ID=DSINFO_RC,                                          +\n               DATA1=DSINFO_ERROR_INFO\n         MVC   COMM_DWORD,DSINFO_ERROR_INFO\n         MVI   COMM_MSG_ID+1,8                  DSINFO FAILED\n         B     ERR1000\nERR0080  DS    0H\n         ITRACE ID=BAD_DSPC\n         B     ERR1010\nERR0090  DS    0H\n         ITRACE ID=HFS_ERR\n         B     ERR1010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      This should probably be changed to display the message         *\n*      rather than ABENDing.                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0100  DS    0H\n         DC    H'0'\n         DC    C'Format not found'\nERR0110  DS    0H\n         ITRACE ID=NOTDASD\n         MVI   COMM_MSG_ID+1,9                  DATA NOT ON DASD\nERR1000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID             SET CSECT NAME\n         MVI   COMM_MSG_ID,0                    SET BYTE 1 TO ZERO\n         L     R15,COMM_V_OSMSG                 OSMSG ENTRY POINT\n         BALR  R14,R15                          LOOKUP/CONSTRUCT MSG\n         ITRACE ID=MSG_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BZ    ERR1010                          YES\n         ABEND 1,DUMP,,USER\nERR1010  DS    0H\n         LA    R2,COMM_MSG_1                    FIRST LINE OF MESSAGE\n         LH    R4,COMM_MSG_LINES                NUMBER OF LINES\n         ITRACE ID=MSGS,                                               +\n               RDATA1=R2,                                              +\n               RDATA2=R4\nERR1020  DS    0H\n         LA    R3,80                            LENGTH FOR TPUT\n         BAL   R8,ERR2000\n         LA    R2,L'COMM_MSG_1(,R2)\n         BCT   R4,ERR1020\n         MVC   COMM_MSG_1,COMM_BLANKS\n         MVC   COMM_MSG_2,COMM_BLANKS\n         MVC   COMM_MSG_3,COMM_BLANKS\n         MVC   COMM_MSG_4,COMM_BLANKS\n         MVC   COMM_MSG_5,COMM_BLANKS\n         B     MAIN0540                         SESSION ENDED\nERR2000  DS    0H\n         ITRACE ID=TPUT,                                               +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         GETMAIN RU,                                                   +\n               LV=(R3),                                                +\n               LOC=BELOW\n         LR    R5,R1\n         BCTR  R3,0\n         EX    R3,TPUT_MVC\n         LA    R3,1(,R3)\n         TPUT  (R5),(R3),R\n         FREEMAIN RU,                                                  +\n               A=(R5),                                                 +\n               LV=(R3)\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR3000  DS    0H\n         LA    R3,MSG_01_L\n         GETMAIN RU,                                                   +\n               LV=(R3),                                                +\n               LOC=BELOW\n         LR    R2,R1\n         MVC   0(MSG_01_L,R2),MSG_01\n         TPUT  (R2),(R3),R\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=(R3)\n         LR    R2,R13\n         LA    R3,8\n         B     EXIT0090\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXITING\n         TM    COMM_FLAGS,$COMM_ABEND           ABEND REQUESTED?\n         BNO   EXIT0010                         NO\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*        Update the user's profile                                    *\n* ------------------------------------------------------------------- *\nEXIT0010 DS    0H\n         ITRACE ID=UPDTPROF\n         LOAD  EP=OSPROF\n         LR    R15,R0\n         MVI   PROF_FUNC,$PROF_WRITE\n         LA    R1,PROFREQ\n         BALR  R14,R15                          LINK TO OSPROF\n         DELETE EP=OSPROF\n         ITRACE ID=PROF_RC,                                            +\n               DATA1=(PROF_RC,1)\n         CLI   PROF_RC,$PROF_OK                 SUCCESSFUL?\n         BNE   ERR0020                          NO\n* ------------------------------------------------------------------- *\n*        Delete SPF variables                                         *\n* ------------------------------------------------------------------- *\n         ICM   R1,15,COMM_ISPLINK\n         BZ    EXIT0030\n         OC    COMM_OSSPFD,COMM_OSSPFD\n         BZ    EXIT0030\n         MVI   VAR_COMMAND,$VAR_DELETE\n         MVC   VAR_TABLE,COMM_OSSPFV\n         MVC   VAR_AREA,COMM_OSSPFD\n         LA    R1,VARREQ\n         L     R15,COMM_V_OSVARMGR\n         BALR  R14,R15\n         DELETE EP=OSSPFV\n         XC    COMM_OSSPFV,COMM_OSSPFV\n         DELETE EP=OSSPFD\n         XC    COMM_OSSPFD,COMM_OSSPFD\n         DELETE EP=ISPLINK\n         XC    COMM_ISPLINK,COMM_ISPLINK\n* ------------------------------------------------------------------- *\n*        Free up FORMAT info                                          *\n* ------------------------------------------------------------------- *\nEXIT0030 DS    0H\n         LTR   R11,R11                          SESSION TO CLEAN UP?\n         BZ    EXIT0050                         NO\n         ITRACE ID=FREEFMT2\n         MVI   FMATREQ_FUNC,$FMATREQ_FREE       FORMAT FUNCTION\n         MVC   FMATREQ_FORMAT,SESS_FORMAT       FORMAT TO FREE\n         LA    R1,FMATREQ                       FORMAT PARMS\n         L     R15,DXD_OSFORMAT                 OSFORMAT EP\n         BALR  R14,R15                          FREE FORMAT\n* ------------------------------------------------------------------- *\n*        Close format(s) DCB                                          *\n* ------------------------------------------------------------------- *\nEXIT0050 DS    0H\n         ITRACE ID=CLSEFMAT\n         MVI   FMATREQ_FUNC,$FMATREQ_CLOSE      FORMAT FUNCTION\n         LA    R1,FMATREQ                       FORMAT PARMS\n         L     R15,DXD_OSFORMAT                 OSFORMAT EP\n         BALR  R14,R15                          CLOSE FORMAT(S) DCB\n* ------------------------------------------------------------------- *\n*        Delete messages                                              *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DEL_MSGS\n         DELETE EPLOC=COMM_LANGUAGE_MODULE\n* ------------------------------------------------------------------- *\n*        FREE the recall command table                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=FREERCAL\n         MVI   RCALLREQ_FUNC,$RCALLREQ_TERM\n         LA    R1,RCALLREQ\n         L     R15,COMM_V_OSRECALL\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Delete any loaded modules                                    *\n* ------------------------------------------------------------------- *\nEXIT0060 DS    0H\n         ITRACE ID=CLEAN_UP\n         MVI   LOADREQ_FUNC,$LOADREQ_CLEANUP\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Delete the data space manager                                *\n* ------------------------------------------------------------------- *\n         OC    COMM_OSDSPACE,COMM_OSDSPACE\n         BZ    EXIT0070\n         DELETE EP=OSDSPACE\n         XC    COMM_OSDSPACE,COMM_OSDSPACE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        FREEMAIN the trace table                                     *\n*                                                                     *\n*        No ITRACE after this point!                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0070 DS    0H\n         L     R1,COMM_TRACE\n         L     R0,TRACE_TABLE_SIZE\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n* ------------------------------------------------------------------- *\n*        Cancel ESTAE exit                                            *\n* ------------------------------------------------------------------- *\n         ESTAE 0\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    COMM_TRACE_FLAG,$XTR_ON          EXTERNAL TRACE ACTIVE?\n         BNO   EXIT0080                         NO\n         CLOSE XTR_DCB,                         CLOSE EXTERNAL TRACE   +\n               MODE=31,                                                +\n               MF=(E,DXD_CLOSE)\n* ------------------------------------------------------------------- *\n*        Delete OSCOMM                                                *\n* ------------------------------------------------------------------- *\nEXIT0080 DS    0H\n         L     R2,COMM_DXD\n         LH    R3,SESS_RC\n         DELETE EP=OSCOMM                       DELETE COMMON\n* ------------------------------------------------------------------- *\n*        DEQ On Screen                                                *\n* ------------------------------------------------------------------- *\n         MVC   DXD_ENQ(DEQ_L),DEQ_I\n         DEQ   MF=(E,DXD_ENQ)\n* ------------------------------------------------------------------- *\n*        FREEMAIN the work area                                       *\n* ------------------------------------------------------------------- *\nEXIT0090 DS    0H\n         L     R13,4(,R13)                      RESTORE ADDRESS\n         LTR   R2,R2\n         BZ    EXIT0100\n         L     R0,DXDSIZE                       WORK AREA STORAGE SIZE\n         FREEMAIN RU,                           FREEMAIN WORK AREA     +\n               A=(R2),                                                 +\n               LV=(0)\n* ------------------------------------------------------------------- *\n*        Set RC and exit                                              *\n* ------------------------------------------------------------------- *\nEXIT0100 DS    0H\n         L     R14,12(R13)                      RESTORE R14\n         LR    R15,R3                           SET RETURN CODE\n         LM    R0,R12,20(R13)                   RESTORE REGISTERS\n         BR    R14                              EXIT\n* ------------------------------------------------------------------- *\n            USING ACEE,R15\nUIDMVC      MVC   COMM_USER(0),ACEEUSRI\nTPUT_MVC    MVC   0(0,R5),0(R2)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART          DC   Q(DXDMAIN)               DISP TO WORK AREA\nDXDSIZE           CXD                           WORK AREA TOTAL SIZE\nTRACE_TABLE_SIZE  DC   A(TR_ENTRY_L*10000)\n\nDUMP_DCB_I     DCB DSORG=PS,                                           +\n               DDNAME=OSDUMP,                                          +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               BLKSIZE=13300,                                          +\n               MACRF=PM\nDUMP_DCB_L     EQU      *-DUMP_DCB_I\nOPEN_I         OPEN     (*,OUTPUT),                                    +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU      *-OPEN_I\nCLOSE_I        CLOSE    (*),                                           +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU      *-CLOSE_I\n\nESTAE_I        ESTAE  *,CT,MF=L\nESTAE_L        EQU    *-ESTAE_I\nDEQ_I          ENQ    (MODID,MODID,E,,STEP),MF=L\nDEQ_L          EQU    *-DEQ_I\nENQ_I          ENQ    *,MF=L\nENQ_L          EQU    *-ENQ_I\n\nSWAPARMS_I     SWAREQ MF=L\nSWAPARMS_L     EQU    *-SWAPARMS_I\n\nVCONI          DS     0F\n               VCONS\nVCONL          EQU    *-VCONI\n\nV_OSESTAE      DC     V(OSESTAE)\n\nH1               DC   H'1'\nH2               DC   H'2'\nH3               DC   H'3'\nH4               DC   H'4'\nH5               DC   H'5'\nH6               DC   H'6'\nH7               DC   H'7'\nH8               DC   H'8'\nH9               DC   H'9'\nH40              DC   H'40'\nH44              DC   H'44'\n\nF1               DC   F'1'\nSTAT_LENGTH      DC   A(STAT#LENGTH)\n\nFORMAT_STOR      DC   CL8'STOR'\nOSNODATA         DC   CL8'OSNODATA'\nOSDUMP_DD        DC   CL8'OSDUMP'\nOSOPTS_DD        DC   CL8'OSOPTS'\nMODULE_OSRDBSAM  DC   CL8'OSRDBSAM'\nMODULE_OSDESERV  DC   CL8'OSDESERV'\nMODULE_OSHFSDIR  DC   CL8'OSHFSDIR'\nMODULE_OSHFSSEQ  DC   CL8'OSHFSSEQ'\nMODULE_OSHFSTYP  DC   CL8'OSHFSTYP'\nMODULE_OSFORMAT  DC   CL8'OSFORMAT'\nMODULE_OSSPFD    DC   CL8'OSSPFD'\nMODULE_OSSPFV    DC   CL8'OSSPFV'\nMODULE_OSRDVSAM  DC   CL8'OSRDVSAM'\nMODULE_OSRDVTOC  DC   CL8'OSRDVTOC'\nMODULE_ISPLINK   DC   CL8'ISPLINK'\nMODULE_OSMSGUS   DC   CL8'OSMSGUS'\nLANGUAGE_US      DC   CL8'US'\nSESSION_ID       DC   CL8'SESSION'\nINIT             DC   CL8'INIT'\n\nMSG_01           DS   0C\n                 DC   C'OSMAIN99E On Screen is already active.'\nMSG_01_L         EQU  *-MSG_01\n\n                 LTORG\n\nMAINEND          EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMAIN           DSECT\n                  COPY     DXDPREF\nDXD_SPF_PARMS     DS       0A\nDXD_SPF_1         DS       A\nDXD_SPF_2         DS       A\n\nDXD_CLOSE         DS       0F,(CLOSE_L)X\nDXD_ENQ           DS       0F,(ENQ_L)X\nDXD_ESTAE         DS       0F,(ESTAE_L)X\nDXD_SWAPARMS      DS       0F,(SWAPARMS_L)X\n\nDXD_SWEPAPTR      DS       A\nDXD_EPA           DS       CL28\n\nDXD_OSFORMAT      DS       A\n\nDXD_FLAGS         DS       X\n$OSOPTS_DD        EQU      X'80'\n$PROMPT           EQU      X'40'\n\nDXD_PACK          DS       CL42\n\n                  DSINFREQ DSECT=NO\n                  DAIRREQ  DSECT=NO\n                  DSPCREQ  DSECT=NO\n                  FMATREQ  DSECT=NO\n                  LOADREQ  DSECT=NO\n                  PARMSREQ DSECT=NO\n                  PROFREQ  DSECT=NO\n                  RCALLREQ DSECT=NO\n                  VARREQ   DSECT=NO\n\nDUMP_CONTROL      DS       0F\nDUMP_DCB          DS       0F,(DUMP_DCB_L)X\nDUMP_OPEN         DS       0F,(OPEN_L)X\nDUMP_CLOSE        DS       0F,(CLOSE_L)X\nDUMP_IO_AREA      DS       CL133\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC ACEE=YES,                                              +\n               ASCB=YES,                                               +\n               ASXB=YES,                                               +\n               CDE=YES,                                                +\n               CVT=YES,                                                +\n               JFCB=YES,                                               +\n               PSA=YES,                                                +\n               RB=YES,                                                 +\n               TCB=YES,                                                +\n               TIOT=YES,                                               +\n               UCB=YES,                                                +\n               DUMMY=DUMMY\n\n               IEFJESCT\n               IEFZB505     LOCEPAX=YES\n\nVTOC_FORMAT_1  DSECT\n         IBMMAC  VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n         COPY    TRENTRY\n* ------------------------------------------------------------------- *\n         BPXYFTYP LIST=YES\n         BPXYMODE DSECT=YES,LIST=YES\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY  REGEQU\n         END   OSMAIN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSMSG": {"ttr": 14351, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00!\\x01\\t4\\x1f\\x01\\x10\\x02\\x0f\\x17\\x00\\x01\\x96\\x01\\x87\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2010-01-20T17:00:21", "lines": 406, "newlines": 391, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*         Construct messages                                          *\n*                                                                     *\n*                                                                     *\n*  This just gets messy.  There's gotta be a better way...            *\n*  I'm trying not to have many hard-coded messages.                   *\n*  This is supposed to:                                               *\n*     1) allow for multiple languages                                 *\n*     2) allow text to be built from fixed and/or variable data       *\n*                                                                     *\n*                                                                     *\n*  At start-up time, the PROFILE information can contain the name     *\n*  of the message definitions.  US english is OSMSGUS.   OSPROF       *\n*  will load the message definitions and put the address in a field   *\n*  called COMM_MESSAGE_TABLE.                                         *\n*                                                                     *\n*                                                                     *\n*  Functions can have their own message tables.                       *\n*                                                                     *\n*  Functions should set SESS_MESSAGES.                                *\n*                                                                     *\n*                                                                     *\n*  When OSMSG searches for a message, it searches the function's      *\n*  messages if present, then the main messages.                       *\n*                                                                     *\n*                                                                     *\n*      The message table's format is                                  *\n*                                                                     *\n*         8 byte       Name of CSECT the following messages are       *\n*                        associated with                              *\n*         4 byte       binary length of all data for this CSECT       *\n*                                                                     *\n*         2 byte       message id                                     *\n*         4 byte       binary length of all data for this message     *\n*                                                                     *\n*         2 byte       number of lines of returned message            *\n*                                                                     *\n*         2 byte       Length of all data for this descriptor         *\n*         1 byte       Component descriptor                           *\n*         2 byte       Length of component in message                 *\n*         2 byte       Displacement to data (COMM type components)    *\n*         1 byte       Message line number                            *\n*         1-80 bytes   Present for constant type components           *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USING MSG,R8\n         USING MSG_CSECT_MSG,R7\nOSMSG    CSECT\nOSMSG    AMODE 31\nOSMSG    RMODE ANY\n         USING OSMSG,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSMSG'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(MSGEND-OSMSG)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSMSG,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(R15)\n         ST    R15,8(R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDMSG,R13                     DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=COMM_MSG_CSECT,                                   +\n               DATA2=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_1,COMM_BLANKS\n         MVC   COMM_MSG_2,COMM_BLANKS\n         MVC   COMM_MSG_3,COMM_BLANKS\n         MVC   COMM_MSG_4,COMM_BLANKS\n         MVC   COMM_MSG_5,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check function specific messages                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R8,15,SESS_MESSAGES\n         BZ    MSG0010\n         ITRACE ID=FUNCMSGS,                                           +\n               RDATA1=R8,                                              +\n               DATA2=COMM_MSG_CSECT\n         BAL   R9,MSG1000                     LOCATE MESSAGE\n         LTR   R7,R7                          LOCATED?\n         BNZ   MSG0050                        YES\n         MVC   COMM_MSG_1,COMM_BLANKS         RESET MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check OS main messages                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0010  DS    0H\n         ICM   R8,15,COMM_MESSAGE_TABLE       MESSAGE TABLE\n         BZ    ERR0010\n         ITRACE ID=MAINMSGS,                                           +\n               RDATA1=R8,                                              +\n               DATA2=COMM_MSG_CSECT\n         BAL   R9,MSG1000                     LOCATE MESSAGE\n         LTR   R7,R7                          LOCATED?\n         BZ    EXIT0000                       NO\n* ------------------------------------------------------------------- *\n*        Message located                                              *\n* ------------------------------------------------------------------- *\nMSG0050  DS    0H\n         XC    DXD_LINE_DISPS(DXD_LINE_DISPS_L),DXD_LINE_DISPS\n         MVC   COMM_MSG_LINES,MSG_LINES\n         LA    R6,MSG_COMPONENTS              FIRST COMPONENT\n         USING MSG_COMPONENT,R6               DEFINE BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process each component                                       *\n*                                                                     *\n*                                                                     *\n*     R1   Address of source data in OSCOMM                           *\n*     R2   Output address                                             *\n*     R3   Address of displacment on output line                      *\n*     R4   Output length                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0060  DS    0H\n         SR    R1,R1\n         ICM   R1,3,MSG_COMPONENT_DISP\n         CLI   MSG_COMPONENT_AREA,C'S'        IN SESSION BLOCK?\n         BE    MSG0070                        YES\n         LA    R1,0(R1,R12)                   ADDR OF DATA COMMON AREA\n         B     MSG0080\nMSG0070  DS    0H\n         LA    R1,0(R1,R11)                   ADDR of DATA IN SESSION\nMSG0080  DS    0H\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,MSG_COMPONENT_LINE          LINE NUMBER\n         LR    R3,R2                          COPY LINE NUMBER\n         BCTR  R2,0                           CONVERT TO RELATIVE LINE\n         MH    R2,=Y(L'COMM_MSG_1)            DISPLACEMENT TO THIS LINE\n         LA    R2,COMM_MSG_1(R2)              OUTPUT LINE\n         BCTR  R3,0\n         MH    R3,=Y(L'DXD_LINE_DISP_1)\n         LA    R3,DXD_LINE_DISPS(R3)          ADDR OF DISP FOR LINE\n         LH    R0,0(R3)                       DISP FOR THIS LINE\n         AR    R2,R0                          OUTPUT ADDRESS\n         SR    R4,R4                          CLEAR REGISTER\n         ICM   R4,3,MSG_COMPONENT_OUTPUT_LENGTH\n         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_ADDRESS\n         BE    MSG0100\n         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_CHAR\n         BE    MSG0200\n         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_CONSTANT\n         BE    MSG0300\n         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_HALFWORD\n         BE    MSG0400\n         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_FULLWORD\n         BE    MSG0500\n         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_HEX\n         BE    MSG0600\n         B     ERR0020\nMSG0090  DS    0H\n         SR    R1,R1\n         ICM   R1,3,MSG_COMPONENT_LENGTH\n         AR    R6,R1                          NEXT COMPONENT\n         CLI   0(R6),X'FF'                    END OF COMPONENTS?\n         BE    EXIT0000                       YES\n         B     MSG0060                        PROCESS NEXT COMPONENT\n* ------------------------------------------------------------------- *\n*        ADDRESS components                                           *\n* ------------------------------------------------------------------- *\nMSG0100  DS    0H\n         ITRACE ID=ADDRESS\n         MVC   DXD_WORK_IN(4),0(R1)           COPY ADDRESS\n         UNPK  DXD_WORK_OUT(9),DXD_WORK_IN(5)\n         TR    DXD_WORK_OUT(8),COMM_HEXCHAR\n         LA    R1,DXD_WORK_OUT+8\n         SR    R1,R4                          SOURCE ADDRESS\n         BCTR  R4,0\n         EX    R4,ADDR_MVC\n         B     MSG0700\nADDR_MVC MVC   0(0,R2),0(R1)                  COPY TO MESSAGE\n* ------------------------------------------------------------------- *\n*        Character components                                         *\n* ------------------------------------------------------------------- *\nMSG0200  DS    0H\n         ITRACE ID=CHAR,                                               +\n               RDATA1=R1,                                              +\n               DATA2=(0(R1),8)\n         BCTR  R4,0                           FOR EXECUTE\n         EX    R4,CHAR_MVC\n         B     MSG0700\nCHAR_MVC MVC   0(0,R2),0(R1)                  COPY TO MESSAGE\n* ------------------------------------------------------------------- *\n*        Text components                                              *\n* ------------------------------------------------------------------- *\nMSG0300  DS    0H\n         ITRACE ID=CONSTANT,                                           +\n               RDATA1=R4,                                              +\n               DATA2=MSG_COMPONENT_CONSTANT\n         BCTR  R4,0                           FOR EXECUTE\n         EX    R4,CONSTANT_MVC\n         B     MSG0700\nCONSTANT_MVC   MVC  0(0,R2),MSG_COMPONENT_CONSTANT\n* ------------------------------------------------------------------- *\n*        Halfword components                                          *\n* ------------------------------------------------------------------- *\nMSG0400  DS    0H\n         ITRACE ID=HALFWORD\n         SR    R0,R0\n         ICM   R0,3,0(R1)\n         CVD   R0,COMM_DWORD\n         MVC   DXD_WORK_OUT(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_OUT(L'EDIT_WORD_1),COMM_DWORD+5\n         LA    R1,DXD_WORK_OUT+L'EDIT_WORD_1\n         SR    R1,R4                          OUTPUT ADDRESS\n         BCTR  R4,0\n         EX    R4,CHAR_MVC\n         B     MSG0700\n* ------------------------------------------------------------------- *\n*        Fullword components                                          *\n* ------------------------------------------------------------------- *\nMSG0500  DS    0H\n         ICM   R0,15,0(R1)\n         ITRACE ID=FULLWORD,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         CVD   R0,COMM_DWORD\n         MVC   DXD_WORK_OUT(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_WORK_OUT(L'EDIT_WORD_2),COMM_DWORD+3\n         LA    R1,DXD_WORK_OUT+L'EDIT_WORD_2\n         SR    R1,R4                          OUTPUT ADDRESS\n         BCTR  R4,0\n         EX    R4,CHAR_MVC\n         B     MSG0700\n* ------------------------------------------------------------------- *\n*        Hex components      (up to 4 bytes)                          *\n* ------------------------------------------------------------------- *\nMSG0600  DS    0H\n         ITRACE ID=HEX,                                                +\n               DATA1=(0(R1),8)\n         MVC   DXD_WORK_IN(4),0(R1)           COPY DATA\n         UNPK  DXD_WORK_OUT(9),DXD_WORK_IN(5)\n         TR    DXD_WORK_OUT(8),COMM_HEXCHAR\n         BCTR  R4,0\n         EX    R4,HEX_MVC\n         B     MSG0700\nHEX_MVC  MVC   0(0,R2),DXD_WORK_OUT           COPY TO MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0700  DS    0H\n         LA    R4,2(R4)                       RESTORE LENGTH + 1\n         AH    R4,0(R3)\n         STH   R4,0(R3)\n         B     MSG0090\n         DROP  R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Search for CSECT                                             *\n*                                                                     *\n*        Table address is in R8                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG1000  DS    0H\n         CLC   COMM_MSG_CSECT,MSG_CSECT       LOCATED THE MESSAGES?\n         BE    MSG1010                        YES\n         A     R8,MSG_CSECT_LENGTH            LENGTH OF MESSAGES\n         CLI   0(R8),X'FF'                    END OF TABLE?\n         BE    MSG1040                        YES\n         B     MSG1000                        TRY NEXT CSECT\n* ------------------------------------------------------------------- *\n*        CSECT's message located, find specific message               *\n* ------------------------------------------------------------------- *\nMSG1010  DS    0H\n         ITRACE ID=FIND_MSG,                                           +\n               DATA1=(COMM_MSG_ID,2)\n         LA    R7,MSG_CSECT_MSG               FIRST MESSAGE FOR CSECT\n         USING MSG_CSECT_MSG,R7\nMSG1020  DS    0H\n         CLC   COMM_MSG_ID,MSG_ID             LOCATED THE MESSAGE?\n         BE    MSG1030                        YES\n         SR    R0,R0\n         ICM   R0,15,MSG_LENGTH\n         AR    R7,R0                          NEXT MESSAGE\n         CLI   0(R7),X'FF'                    END FOR THIS CSECT?\n         BE    MSG1050                        YES\n         B     MSG1020                        TRY NEXT MESSAGE\nMSG1030  DS    0H\n         ITRACE ID=LOCATED,                                            +\n               RDATA1=R7\n         MVI   DXD_RC,0                       MESSAGE LOCATED\n         BR    R9\nMSG1040  DS    0H\n         ITRACE ID=NOT_FND1,                                           +\n               DATA1=COMM_MSG_CSECT\n         MVC   COMM_MSG_1(MSG_01_L),MSG_01\n         MVC   COMM_MSG_1+(MSG_01_CSECT-MSG_01)(L'MSG_01_CSECT),COMM_MS+\n               G_CSECT\n         MVI   DXD_RC,4                       CSECT NOT FOUND\n         SR    R7,R7                          MSG NOT FOUND\n         BR    R9\nMSG1050  DS    0H\n         ITRACE ID=NOT_FND2,                                           +\n               DATA1=(COMM_MSG_1,2)\n         MVC   COMM_MSG_1(MSG_02_L),MSG_02\n         SR    R1,R1\n         ICM   R1,3,COMM_MSG_ID\n         CVD   R1,COMM_DWORD\n         ED    COMM_MSG_1+(MSG_02_ID-MSG_02)(L'MSG_02_ID),COMM_DWORD+5\n         MVC   COMM_MSG_1+(MSG_02_CSECT-MSG_02)(L'MSG_02_CSECT),COMM_MS+\n               G_CSECT\n         MVI   DXD_RC,8                       MSG NOT FOUND FOR CSECT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NO_MSGS\n         MVI   DXD_RC,12\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=BAD_TYPE\n         MVI   DXD_RC,16\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(DXD_RC,1),                                       +\n               DATA2=(COMM_MSG_LINES,2)\n         SR    R15,R15\n         IC    R15,DXD_RC\n         L     R13,4(R13)\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC    Q(DXDMSG)\n\nEDIT_WORD_1          DC    X'402020202120'\nEDIT_WORD_2          DC    X'40202020202020202120'\n\nMSG_01               DS    0C\n                     DC    C'OSMSG01E '\n                     DC    C'Messages not found for CSECT '\nMSG_01_CSECT         DC    CL8' '\nMSG_01_L             EQU   *-MSG_01\n\nMSG_02               DS    0C\n                     DC    C'OSMSG02E '\n                     DC    C'Message number '\nMSG_02_ID            DC    X'402020202120'\n                     DC    C' not found for CSECT '\nMSG_02_CSECT         DC    CL8' '\nMSG_02_L             EQU   *-MSG_02\n\n                     LTORG\n\nMSGEND               EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMSG               DSECT\n                     COPY  DXDPREF\n\nDXD_LINE_DISPS       DS    0H\nDXD_LINE_DISP_1      DS    H\nDXD_LINE_DISP_2      DS    H\nDXD_LINE_DISP_3      DS    H\nDXD_LINE_DISP_4      DS    H\nDXD_LINE_DISP_5      DS    H\nDXD_LINE_DISPS_L     EQU   *-DXD_LINE_DISPS\n\nDXD_RC               DS    X\nDXD_WORK_IN          DS    CL16\nDXD_WORK_OUT         DS    CL16\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     MSG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     REGEQU\n                END      OSMSG\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSMSGEN": {"ttr": 267, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*    I tried to keep the text displayed in messages (and other        *\n*    places) as free of being hard-coded as possible.  This was to    *\n*    allow the text for messages, etc to be customized/translated for *\n*    different national languages.                                    *\n*                                                                     *\n*    This is the British (King's) English message table.              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSMSGEN   CSECT\nOSMSGEN   AMODE  31\nOSMSGEN   RMODE  ANY\n          USING  OSCOMM,R12\n          USING  SESSION,R11\n\n* ------------------------------------------------------------------- *\n*         Messages for OSDAIR                                         *\n* ------------------------------------------------------------------- *\nDAIRSTART EQU     *\n          DC      CL8'OSDAIR'\n          DC      AL4(DAIREND-DAIRSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSDAIR01E  '\n          MSGCOMP 1,CONSTANT,,'Allocation failed R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' ERROR='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,' INFO='\n          MSGCOMP 1,HEX,4,COMM_DWORD+4\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDAIR02E  '\n          MSGCOMP 1,CONSTANT,,'DE-allocation failed R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' ERROR='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,' INFO='\n          MSGCOMP 1,HEX,4,COMM_DWORD+4\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSDAIR\nDAIREND   EQU     *\n\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSMAIN                                         *\n* ------------------------------------------------------------------- *\nMAINSTART EQU     *\n          DC      CL8'OSMAIN'\n          DC      AL4(MAINEND-MAINSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSMAIN01E  '\n          MSGCOMP 1,CONSTANT,,'Could not load ISPQRY'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSMAIN02E  '\n          MSGCOMP 1,CONSTANT,,'ISPF service not available'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSMAIN03E  '\n          MSGCOMP 1,CONSTANT,,'Could not load SPFVARS'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSMAIN04E  '\n          MSGCOMP 1,CONSTANT,,'Could not load SPFDATA'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSMAIN05E  '\n          MSGCOMP 1,CONSTANT,,'No parm address (R1 is zero)'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSMAIN06E  '\n          MSGCOMP 1,CONSTANT,,'No parm (address at R1 is zero)'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSMAIN08E  '\n          MSGCOMP 1,CONSTANT,,'Unknown keyword found'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSMAIN09E  '\n          MSGCOMP 1,CONSTANT,,'Duplicated member name keyword'\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSMAIN10E  '\n          MSGCOMP 1,CONSTANT,,'Member name omitted'\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSMAIN11E  '\n          MSGCOMP 1,CONSTANT,,'Member name too long (8 max)'\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSMAIN12E  '\n          MSGCOMP 1,CONSTANT,,'DD and DSN are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSMAIN13E  '\n          MSGCOMP 1,CONSTANT,,'Duplicated DD operand'\n          MSGDEF  END\n\n          MSGDEF  14\n          MSGCOMP 1,CONSTANT,,'OSMAIN14E  '\n          MSGCOMP 1,CONSTANT,,'DD name omitted'\n          MSGDEF  END\n\n          MSGDEF  15\n          MSGCOMP 1,CONSTANT,,'OSMAIN15E  '\n          MSGCOMP 1,CONSTANT,,'DD name too long (8 max)'\n          MSGDEF  END\n\n          MSGDEF  16\n          MSGCOMP 1,CONSTANT,,'OSMAIN16E  '\n          MSGCOMP 1,CONSTANT,,'Duplicated DSN operand'\n          MSGDEF  END\n\n          MSGDEF  17\n          MSGCOMP 1,CONSTANT,,'OSMAIN17E  '\n          MSGCOMP 1,CONSTANT,,'DSN omitted'\n          MSGDEF  END\n\n          MSGDEF  18\n          MSGCOMP 1,CONSTANT,,'OSMAIN18E  '\n          MSGCOMP 1,CONSTANT,,'DSN too long (44 max)'\n          MSGDEF  END\n\n          MSGDEF  19\n          MSGCOMP 1,CONSTANT,,'OSMAIN19E  '\n          MSGCOMP 1,CONSTANT,,'Duplicated records operand'\n          MSGDEF  END\n\n          MSGDEF  20\n          MSGCOMP 1,CONSTANT,,'OSMAIN20E  '\n          MSGCOMP 1,CONSTANT,,'Number of records omitted'\n          MSGDEF  END\n\n          MSGDEF  21\n          MSGCOMP 1,CONSTANT,,'OSMAIN21E  '\n          MSGCOMP 1,CONSTANT,,'Too many digits on records operand'\n          MSGDEF  END\n\n          MSGDEF  22\n          MSGCOMP 1,CONSTANT,,'OSMAIN22E  '\n          MSGCOMP 1,CONSTANT,,'Duplicated start operand'\n          MSGDEF  END\n\n          MSGDEF  23\n          MSGCOMP 1,CONSTANT,,'OSMAIN23E  '\n          MSGCOMP 1,CONSTANT,,'Starting record number omitted'\n          MSGDEF  END\n\n          MSGDEF  24\n          MSGCOMP 1,CONSTANT,,'OSMAIN24E  '\n          MSGCOMP 1,CONSTANT,,'Too many digits on start operand'\n          MSGDEF  END\n\n          MSGDEF  25\n          MSGCOMP 1,CONSTANT,,'OSMAIN25E  '\n          MSGCOMP 1,CONSTANT,,'Duplicate VOL operand'\n          MSGDEF  END\n\n          MSGDEF  26\n          MSGCOMP 1,CONSTANT,,'OSMAIN26E  '\n          MSGCOMP 1,CONSTANT,,'VOLSER omitted'\n          MSGDEF  END\n\n          MSGDEF  27\n          MSGCOMP 1,CONSTANT,,'OSMAIN27E  '\n          MSGCOMP 1,CONSTANT,,'VOLSER operand not six characters'\n          MSGDEF  END\n\n          MSGDEF  28\n          MSGCOMP 1,CONSTANT,,'OSMAIN28E  '\n          MSGCOMP 1,CONSTANT,,'Number of records not numeric'\n          MSGDEF  END\n\n          MSGDEF  29\n          MSGCOMP 1,CONSTANT,,'OSMAIN29E  '\n          MSGCOMP 1,CONSTANT,,'DD or DSN parameter is required'\n          MSGDEF  END\n\n          MSGDEF  30\n          MSGCOMP 1,CONSTANT,,'OSMAIN30E  '\n          MSGCOMP 1,CONSTANT,,'Catalog search failed, error info='\n          MSGCOMP 1,HEX,8,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  31\n          MSGCOMP 1,CONSTANT,,'OSMAIN31E  '\n          MSGCOMP 1,CONSTANT,,'Data set type not supported'\n          MSGDEF  END\n\n          MSGDEF  32\n          MSGCOMP 1,CONSTANT,,'OSMAIN32E  '\n          MSGCOMP 1,CONSTANT,,'Data set DSORG not supported'\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for OSMAIN\nMAINEND   EQU    *\n\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSPARSE                                        *\n* ------------------------------------------------------------------- *\nPARSSTART EQU     *\n          DC      CL8'OSPARSE'\n          DC      AL4(PARSEND-PARSSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSPARSE01E '\n          MSGCOMP 1,CONSTANT,,'No ending quote on hex parameter'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSPARSE02E '\n          MSGCOMP 1,CONSTANT,,'Hex string has odd number of digits'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSPARSE03E '\n          MSGCOMP 1,CONSTANT,,'Hex string has no digits'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSPARSE04E '\n          MSGCOMP 1,CONSTANT,,'Hex string has non-hex digit(s)'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSPARSE05E '\n          MSGCOMP 1,CONSTANT,,'No ending quote'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSPARSE06E '\n          MSGCOMP 1,CONSTANT,,'Quoted string with zero length found'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSPARSE07E'\n          MSGCOMP 1,CONSTANT,,'Two consecutive equal signs (=) found'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSPARSE08E'\n          MSGCOMP 1,CONSTANT,,'Leading equal sign not allowed'\n          MSGDEF  END\n\nPARSEND   EQU     *\n          DC     X'FF'                   END OF MESSAGES FOR PRSEEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*         The follow constant marks the end of the CSECT              *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          DC     X'FF'                   End of all messages\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY1    DSECT\n          COPY   DXDPREF\n\nDUMMY2    DSECT\n          COPY   MSG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          COPY   TRENTRY\n          COPY   REGEQU\n          END    OSMSGEN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSMSGUS": {"ttr": 14602, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x17\\x01\\t!\\x8f\\x01\\x10\\x02\\x1f\\t0\\x07$\\x06\\xfd\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-08-06T00:00:00", "modifydate": "2010-01-21T09:30:17", "lines": 1828, "newlines": 1789, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*    I tried to keep the text displayed in messages (and other        *\n*    places) as free of being hard-coded as possible.  This was to    *\n*    allow the text for messages, etc to be customized/translated for *\n*    different national languages.                                    *\n*                                                                     *\n*    This is the United States English message table.                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSMSGUS   CSECT\nOSMSGUS   AMODE  31\nOSMSGUS   RMODE  ANY\n          USING  OSCOMM,R12\n          USING  SESSION,R11\n\n* ------------------------------------------------------------------- *\n*         Messages for OSABEND                                        *\n* ------------------------------------------------------------------- *\nOSABEND_START     EQU *\n          DC      CL8'OSABEND'\n          DC      AL4(OSABEND_END-OSABEND_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSABEND01I  '\n          MSGCOMP 1,CONSTANT,,' ABEND in '\n          MSGCOMP 1,CHAR,8,SESS_ABEND_CSECT\n          MSGCOMP 1,CONSTANT,,'+'\n          MSGCOMP 1,HEX,4,SESS_ABEND_DISP\n          MSGCOMP 1,CONSTANT,,'   System code '\n          MSGCOMP 1,HEX,4,SESS_SYSTEM_CODE\n          MSGCOMP 1,CONSTANT,,'-'\n          MSGCOMP 1,HEX,2,SESS_ABEND_R15+1\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSABEND02I  '\n          MSGCOMP 1,CONSTANT,,' ABEND in '\n          MSGCOMP 1,CHAR,8,SESS_ABEND_CSECT\n          MSGCOMP 1,CONSTANT,,'+'\n          MSGCOMP 1,HEX,4,SESS_ABEND_DISP\n          MSGCOMP 1,CONSTANT,,'   User code '\n          MSGCOMP 1,HEX,4,SESS_USER_CODE\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR OSABEND\nOSABEND_END       EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSDSINFO                                       *\n* ------------------------------------------------------------------- *\nOSDSINFO_START    EQU *\n          DC      CL8'OSDSINFO'\n          DC      AL4(OSDSINFO_END-OSDSINFO_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSDSINFO01I  '\n          MSGCOMP 1,CONSTANT,,'Data not cataloged'\n          MSGCOMP 2,CONSTANT,,'DSN=   '\n          MSGCOMP 2,CHAR,44,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'VOLSER='\n          MSGCOMP 3,CHAR,6,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDSINFO02E  '\n          MSGCOMP 1,CONSTANT,,'Catalog service (CSI) error.  R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_03\n          MSGCOMP 2,CONSTANT,,'DSN=   '\n          MSGCOMP 2,CHAR,44,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'VOLSER='\n          MSGCOMP 3,CHAR,6,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSDSINFO03E  '\n          MSGCOMP 1,CONSTANT,,'OBTAIN error, R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_03\n          MSGCOMP 2,CONSTANT,,'DSN=   '\n          MSGCOMP 2,CHAR,44,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'VOLSER='\n          MSGCOMP 3,CHAR,6,COMM_INFO_02\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR OSDSINFO\nOSDSINFO_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSFLIST                                        *\n* ------------------------------------------------------------------- *\nOSFLIST_START     EQU *\n          DC      CL8'OSFLIST'\n          DC      AL4(OSFLIST_END-OSFLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSFLIST01E  '\n          MSGCOMP 1,CONSTANT,,' Select one FORMAT'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSFLIST02E  '\n          MSGCOMP 1,CONSTANT,,' Format library DESERV failed'\n          MSGCOMP 2,CONSTANT,,'Error code  '\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code '\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR OSFLIST\nOSFLIST_END       EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSHDIR                                         *\n* ------------------------------------------------------------------- *\nOSHDIR_START      EQU *\n          DC      CL8'OSHDIR'\n          DC      AL4(OSHDIR_END-OSHDIR_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSHDIR01E '\n          MSGCOMP 1,CONSTANT,,'Invalid line command '\n          MSGCOMP 1,CHAR,1,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSHDIR02E '\n          MSGCOMP 1,CONSTANT,,'Invalid primary command'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSHDIR03E '\n          MSGCOMP 1,CONSTANT,,'getpwid failed'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSHDIR04E '\n          MSGCOMP 1,CONSTANT,,'Too many operands'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSHDIR05E '\n          MSGCOMP 1,CONSTANT,,'Requested path not in this directory'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR OSHDIR\nOSHDIR_END EQU  *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSVRAW                                         *\n* ------------------------------------------------------------------- *\nOSVRAW_START      EQU *\n          DC      CL8'OSVRAW'\n          DC      AL4(OSVRAW_END-OSVRAW_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSVRAW01E '\n          MSGCOMP 1,CONSTANT,,'Invalid SORT field name'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSVRAW02E '\n          MSGCOMP 1,CONSTANT,,'Too many parameters for SORT command'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR OSVRAW\nOSVRAW_END EQU    *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSVTOC                                         *\n* ------------------------------------------------------------------- *\nOSVTOC_START      EQU *\n          DC      CL8'OSVTOC'\n          DC      AL4(OSVTOC_END-OSVTOC_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSVTOC01E '\n          MSGCOMP 1,CONSTANT,,'Invalid line command'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSVTOC02E '\n          MSGCOMP 1,CONSTANT,,'Invalid command line command'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSVTOC03E '\n          MSGCOMP 1,CONSTANT,,'Incorrect number of operands'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSVTOC04E '\n          MSGCOMP 1,CONSTANT,,'DSN operand too long (44 chars max)'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSVTOC05E '\n          MSGCOMP 1,CONSTANT,,'UCBSCAN failed, R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'CATALOG RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'UNCATALOG RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'RENAME RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'DELETE RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'COMPRESS RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSVTOC11E '\n          MSGCOMP 1,CONSTANT,,'ERROR FROM OSDSINFO, MODULE ID='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,'return code='\n          MSGCOMP 1,HEX,2,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,'reason code='\n          MSGCOMP 1,HEX,2,COMM_DWORD+3\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSVTOC12E '\n          MSGCOMP 1,CONSTANT,,'Data is not VTOC info'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSVTOC13E '\n          MSGCOMP 1,CONSTANT,,'Not allowed for HFS(es)'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSVTOC\nOSVTOC_END EQU    *\n\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSBROWSE                                       *\n* ------------------------------------------------------------------- *\nBROWSESTART EQU   *\n          DC      CL8'OSBROWSE'\n          DC      AL4(BROWSEEND-BROWSESTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSBROWSE01E  '\n          MSGCOMP 1,CONSTANT,,'SUBMIT not allowed (RECFM not F or FB)'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSBROWSE02E  '\n          MSGCOMP 1,CONSTANT,,'SUBMIT not allowed unless LRECL=80'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSBROWSE03E  '\n          MSGCOMP 1,CONSTANT,,'Invalid ASCII operand (ON or OFF)'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSBROWSE06E  '\n          MSGCOMP 1,CONSTANT,,'Too many operands'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSBROWSE07E  '\n          MSGCOMP 1,CONSTANT,,'Operand too long'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSBROWSE08E  '\n          MSGCOMP 1,CONSTANT,,'Operand(s) missing'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSBROWSE09E  '\n          MSGCOMP 1,CONSTANT,,'Operand not numeric'\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSBROWSE10E  '\n          MSGCOMP 1,CONSTANT,,'Line number beyond end of file'\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSBROWSE11E  '\n          MSGCOMP 1,CONSTANT,,'Unrecognized command'\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSBROWSE12E  '\n          MSGCOMP 1,CONSTANT,,'CCHHR not available for VSAM dataset'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSBROWSE13E  '\n          MSGCOMP 1,CONSTANT,,'CCHHR not available for HFS files/direct+\n               ories'\n          MSGDEF  END\n\n          MSGDEF  14\n          MSGCOMP 1,CONSTANT,,'OSBROWSE14E  '\n          MSGCOMP 1,CONSTANT,,'RBA is valid only for VSAM datasets'\n          MSGDEF  END\n\n          MSGDEF  15\n          MSGCOMP 1,CONSTANT,,'OSBROWSE15E  '\n          MSGCOMP 1,CONSTANT,,'No FIND active at this time'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSBROWSE\nBROWSEEND EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSDIR                                          *\n* ------------------------------------------------------------------- *\nOSDIRSTART EQU    *\n          DC      CL8'OSDIR'\n          DC      AL4(OSDIREND-OSDIRSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSDIR01E  '\n          MSGCOMP 1,CONSTANT,,'Invalid line command ==>'\n          MSGCOMP 1,CHAR,1,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDIR02E  '\n          MSGCOMP 1,CONSTANT,,'Invalid primary command:'\n          MSGCOMP 1,CHAR,40,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSDIR03I  '\n          MSGCOMP 1,FULLWORD,5,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' members, '\n          MSGCOMP 1,FULLWORD,5,COMM_INFO_02\n          MSGCOMP 1,CONSTANT,,' bytes, APPENDed'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSDIR04I  '\n          MSGCOMP 1,FULLWORD,5,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' members OFFLOADed'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSDIR05E  '\n          MSGCOMP 1,CONSTANT,,'Invalid SORT field'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSDIR06E  '\n          MSGCOMP 1,CONSTANT,,'Too few operands'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSDIR07E  '\n          MSGCOMP 1,CONSTANT,,'Too many operands'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSDIR08E  '\n          MSGCOMP 1,CONSTANT,,'Member name too long'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSDIR09E  '\n          MSGCOMP 1,CONSTANT,,'STOW (DELETE) failed, RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSDIR10E  '\n          MSGCOMP 1,CONSTANT,,'New member name ('\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,') already exists'\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSDIR11E  '\n          MSGCOMP 1,CONSTANT,,'Member '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' not found.  Internal error.'\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSDIR12E  '\n          MSGCOMP 1,CONSTANT,,'Member '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' previously deleted or renamed'\n          MSGCOMP 2,CONSTANT,,'OSDIR12E+ '\n          MSGCOMP 2,CONSTANT,,'No further operations allowed'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSDIR13E  '\n          MSGCOMP 1,CONSTANT,,'STOW (RENAME) failed, RC='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGDEF  END\n\n          MSGDEF  14\n          MSGCOMP 1,CONSTANT,,'OSDIR14E  '\n          MSGCOMP 1,FULLWORD,5,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' members reset'\n          MSGDEF  END\n\n          MSGDEF  15\n          MSGCOMP 1,CONSTANT,,'OSDIR15E  '\n          MSGCOMP 1,CONSTANT,,' No search arguement'\n          MSGDEF  END\n\n          MSGDEF  16\n          MSGCOMP 1,CONSTANT,,'OSDIR16I  '\n          MSGCOMP 1,CONSTANT,,' Bottom of data reached'\n          MSGDEF  END\n\n          MSGDEF  17\n          MSGCOMP 1,CONSTANT,,'OSDIR17E  '\n          MSGCOMP 1,CONSTANT,,' Invalid SHOW option'\n          MSGDEF  END\n\n          MSGDEF  18\n          MSGCOMP 1,CONSTANT,,'OSDIR18E  '\n          MSGCOMP 1,CONSTANT,,'Member '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' not found.'\n          MSGDEF  END\n\n          MSGDEF  19\n          MSGCOMP 1,CONSTANT,,'OSDIR19E  '\n          MSGCOMP 1,CONSTANT,,' Data is not PDS(/E) directory info'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSDIR\nOSDIREND  EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSHEX                                          *\n* ------------------------------------------------------------------- *\nHEXSTART  EQU     *\n          DC      CL8'OSHEX'\n          DC      AL4(HEXEND-HEXSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSHEX01E  '\n          MSGCOMP 1,CONSTANT,,' Invalid primary command'\n          MSGDEF  END\n\n\n          DC      X'FF'                   End of messages for OSHEX\nHEXEND    EQU     *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSVHEX                                         *\n* ------------------------------------------------------------------- *\nVHEXSTART EQU     *\n          DC      CL8'OSVHEX'\n          DC      AL4(VHEXEND-VHEXSTART)\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSVHEX03E  '\n          MSGCOMP 1,CONSTANT,,'Too many operands'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSVHEX04E  '\n          MSGCOMP 1,CONSTANT,,'Operand too long'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSVHEX05E  '\n          MSGCOMP 1,CONSTANT,,'Invalid ASCII operand (On or Off)'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSVHEX06E  '\n          MSGCOMP 1,CONSTANT,,'Invalid primary command'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSVHEX\nVHEXEND   EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSAPPEND                                       *\n* ------------------------------------------------------------------- *\nAPPNDSTART EQU    *\n          DC      CL8'OSAPPEND'\n          DC      AL4(APPNDEND-APPNDSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSAPPEND01W '\n          MSGCOMP 1,CONSTANT,,'Append aborted'\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for OSAPPEND\nAPPNDEND  EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSDESERV                                       *\n* ------------------------------------------------------------------- *\nDESRVSTART EQU    *\n          DC      CL8'OSDESERV'\n          DC      AL4(DESRVEND-DESRVSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSDESERV01E'\n          MSGCOMP 1,CONSTANT,,'Open failed for DD'\n          MSGCOMP 1,CHAR,8,SESS_DD\n          MSGCOMP 1,CONSTANT,,' R15='\n          MSGCOMP 1,HALFWORD,4,COMM_DWORD+2\n          MSGDEF  END\n\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDESERV02E'\n          MSGCOMP 1,CONSTANT,,'DESERV failed.  Return code'\n          MSGCOMP 1,HEX,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,'  Reason code'\n          MSGCOMP 1,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          DC     X'FF'                   END OF MESSAGES FOR OSDESERV\nDESRVEND  EQU     *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSDAIR                                         *\n* ------------------------------------------------------------------- *\nDAIRSTART EQU     *\n          DC      CL8'OSDAIR'\n          DC      AL4(DAIREND-DAIRSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSDAIR01E  '\n          MSGCOMP 1,CONSTANT,,'Allocation failed R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' ERROR='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,' INFO='\n          MSGCOMP 1,HEX,4,COMM_DWORD+4\n          MSGCOMP 2,CONSTANT,,'OSDAIR01E  '\n          MSGCOMP 2,CONSTANT,,'DD=    '\n          MSGCOMP 2,CHAR,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'OSDAIR01E  '\n          MSGCOMP 3,CONSTANT,,'DSN=   '\n          MSGCOMP 3,CHAR,44,COMM_INFO_02\n          MSGCOMP 4,CONSTANT,,'OSDAIR01E  '\n          MSGCOMP 4,CONSTANT,,'MEMBER='\n          MSGCOMP 4,CHAR,8,COMM_INFO_03\n          MSGCOMP 5,CONSTANT,,'OSDAIR01E  '\n          MSGCOMP 5,CONSTANT,,'VOLSER='\n          MSGCOMP 5,CHAR,6,SESS_VOLSER\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDAIR02E  '\n          MSGCOMP 1,CONSTANT,,'DE-allocation failed R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' ERROR='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,' INFO='\n          MSGCOMP 1,HEX,4,COMM_DWORD+4\n          MSGCOMP 2,CONSTANT,,'OSDAIR02E  '\n          MSGCOMP 2,CONSTANT,,'DD=    '\n          MSGCOMP 2,CHAR,8,SESS_DD\n          MSGCOMP 3,CONSTANT,,'OSDAIR02E  '\n          MSGCOMP 3,CONSTANT,,'DSN=   '\n          MSGCOMP 3,CHAR,44,SESS_DSN\n          MSGCOMP 4,CONSTANT,,'OSDAIR02E  '\n          MSGCOMP 4,CONSTANT,,'MEMBER='\n          MSGCOMP 4,CHAR,8,SESS_MEMBER\n          MSGCOMP 5,CONSTANT,,'OSDAIR02E  '\n          MSGCOMP 5,CONSTANT,,'VOLSER='\n          MSGCOMP 5,CHAR,6,SESS_VOLSER\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSDAIR\nDAIREND   EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         MESSAGES FOR OSDISP                                         *\n* ------------------------------------------------------------------- *\nDISPSTART EQU     *\n          DC      CL8'OSDISP'\n          DC      AL4(DISPEND-DISPSTART)\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDISP02E  '\n         MSGCOMP 1,CONSTANT,,'SESSION command not allowed at this time'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSDISP03E  '\n          MSGCOMP 1,CONSTANT,,'Too many operands for FORMAT'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSDISP04E  '\n          MSGCOMP 1,CONSTANT,,'FORMAT name too long'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSDISP\nDISPEND   EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSDSPACE                                       *\n* ------------------------------------------------------------------- *\nDSPCSTART EQU     *\n          DC      CL8'OSDSPACE'\n          DC      AL4(DSPCEND-DSPCSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSDSPACE01E  '\n          MSGCOMP 1,CONSTANT,,'ALESERV failed R15='\n          MSGCOMP 1,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSDSPACE01E+ '\n          MSGCOMP 2,CONSTANT,,'Dataspace name='\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSDSPACE02E  '\n          MSGCOMP 1,CONSTANT,,'DSPSERV failed R15='\n          MSGCOMP 1,HEX,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,'  Reason (R0)='\n          MSGCOMP 1,HEX,8,COMM_INFO_01+4\n          MSGCOMP 2,CONSTANT,,'OSDSPACE02E+ '\n          MSGCOMP 2,CONSTANT,,'DATASPACE name='\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSDSPACE03E  '\n          MSGCOMP 1,CONSTANT,,'No data has been stored in data space '\n          MSGCOMP 1,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSDSPACE04E  '\n          MSGCOMP 1,CONSTANT,,'Record '\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' below START in space '\n          MSGCOMP 1,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSDSPACE05E  '\n          MSGCOMP 1,CONSTANT,,'Record '\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' too high in space '\n          MSGCOMP 1,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSDSPACE06E Record '\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' not stored in space '\n          MSGCOMP 1,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSDSPACE07E No I/O area'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSDSPACE08E Record '\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' length is greater than 32768'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSDSPACE09E Record '\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' already stored in space '\n          MSGCOMP 1,CHAR,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSDSPACE10E Data space '\n          MSGCOMP 1,CHAR,8,COMM_INFO_02\n          MSGCOMP 1,CONSTANT,,' full at record '\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSDSPACE11E  '\n          MSGCOMP 1,CONSTANT,,'Lengths on UPDATE do not match. Record='\n          MSGCOMP 1,FULLWORD,9,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSDSPACE11E+'\n          MSGCOMP 2,CONSTANT,,'STORE''d length '\n          MSGCOMP 2,FULLWORD,9,COMM_INFO_02\n          MSGCOMP 3,CONSTANT,,'OSDSPACE11E-'\n          MSGCOMP 3,CONSTANT,,'Caller''s length '\n          MSGCOMP 3,FULLWORD,9,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSDSPACE12E  '\n          MSGCOMP 1,CONSTANT,,'Member '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,' not found'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSDSPACE13E  '\n          MSGCOMP 1,CHAR,60,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'             '\n          MSGCOMP 2,CONSTANT,,'File not found'\n          MSGDEF  END\n\n          MSGDEF  14\n          MSGCOMP 1,CONSTANT,,'OSDSPACE14E  '\n          MSGCOMP 1,CONSTANT,,'DATASPACE'\n          MSGCOMP 1,CHAR,60,COMM_INFO_02\n          MSGCOMP 1,CONSTANT,,'is already in use'\n          MSGDEF  END\n\n          MSGDEF  15\n          MSGCOMP 1,CONSTANT,,'OSDSPACE15E  '\n          MSGCOMP 1,CONSTANT,,'Data is not VTOC info'\n          MSGDEF  END\n\n          MSGDEF  16\n          MSGCOMP 1,CONSTANT,,'OSDSPACE16E  '\n          MSGCOMP 1,CONSTANT,,'Data is not a HFS directory'\n          MSGDEF  END\n\n          MSGDEF  17\n          MSGCOMP 1,CONSTANT,,'OSDSPACE17E  '\n          MSGCOMP 1,CONSTANT,,'Data is not a PDS(/E) directory'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSDSPACE\nDSPCEND   EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSFORMAT                                       *\n* ------------------------------------------------------------------- *\nFMATSTART EQU     *\n          DC      CL8'OSFORMAT'\n          DC      AL4(FMATEND-FMATSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSFORMAT01E  '\n          MSGCOMP 1,CONSTANT,,'OSFORMAT OPEN failed, R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSFORMAT02E  '\n          MSGCOMP 1,CONSTANT,,'Format'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,'not found'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSFORMAT03E  '\n          MSGCOMP 1,CONSTANT,,'Field starting position is not valid'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSFORMAT04E  '\n          MSGCOMP 1,CONSTANT,,'Field length is not valid'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSFORMAT05E  '\n          MSGCOMP 1,CONSTANT,,'Data type is not valid'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSFORMAT06E  '\n          MSGCOMP 1,CONSTANT,,'ROW,COL is too long'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSFORMAT07E  '\n          MSGCOMP 1,CONSTANT,,'Display row is not valid'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSFORMAT08E  '\n          MSGCOMP 1,CONSTANT,,'Display column is not valid'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSFORMAT09E  '\n          MSGCOMP 1,CONSTANT,,'Unrecognized condition on IF statement'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSFORMAT\nFMATEND   EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSHFSDIR                                       *\n* ------------------------------------------------------------------- *\nHFSDIRSTART EQU   *\n          DC      CL8'OSHFSDIR'\n          DC      AL4(HFSDIREND-HFSDIRSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSHFSDIR01E  '\n          MSGCOMP 1,CONSTANT,,'OPEN DIR failed.'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'  Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'  Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSHFSDIR02E  '\n          MSGCOMP 1,CONSTANT,,'READ DIR failed.'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'  Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'  Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSHFSDIR03E  '\n          MSGCOMP 1,CONSTANT,,'File name too long'\n          MSGCOMP 2,HALFWORD,5,COMM_INFO_01\n          MSGCOMP 1,CHAR,40,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSHFSDIR04E  '\n          MSGCOMP 1,CONSTANT,,'STAT failed.'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'  Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'  Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGCOMP 3,CONSTANT,,'Path: '\n          MSGCOMP 3,CHAR,64,COMM_INFO_01+8\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSHFSDIR05E  '\n          MSGCOMP 1,CONSTANT,,'CLOSE failed.'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'  Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'  Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSHFSDIR\nHFSDIREND EQU     *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSHFSTYP                                       *\n* ------------------------------------------------------------------- *\nHFSTYPSTART EQU   *\n          DC      CL8'OSHFSTYP'\n          DC      AL4(HFSTYPEND-HFSTYPSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSHFSTYP01E  '\n          MSGCOMP 1,CONSTANT,,'STAT failed.'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'  Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'  Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSHFSTYP02E  '\n          MSGCOMP 1,CONSTANT,,'READ LINK failed.'\n          MSGCOMP 2,CONSTANT,,'Return value='\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'  Return code='\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'  Reason code='\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSHFSTYP\nHFSTYPEND EQU     *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSMAIN                                         *\n* ------------------------------------------------------------------- *\nMAINSTART EQU     *\n          DC      CL8'OSMAIN'\n          DC      AL4(MAINEND-MAINSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSMAIN01I  '\n          MSGCOMP 1,CONSTANT,,'Enter a command'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSMAIN02E  '\n          MSGCOMP 1,CONSTANT,,'Unsupported data set type'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSMAIN03E  '\n          MSGCOMP 1,CONSTANT,,'Unsupported data set org (DSORG)'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSMAIN04E  '\n          MSGCOMP 1,CONSTANT,,'Invalid command'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSMAIN05E  '\n          MSGCOMP 1,CONSTANT,,'Could not load ISPQRY, R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSMAIN06E  '\n          MSGCOMP 1,CONSTANT,,'Required parms missing'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSMAIN07E  '\n          MSGCOMP 1,CONSTANT,,'TIOT entry not found'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSMAIN08E  '\n          MSGCOMP 1,CONSTANT,,'DSINFO  failed, R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSMAIN09E  '\n          MSGCOMP 1,CONSTANT,,'Data set not on DASD device'\n          MSGDEF  END\n          DC     X'FF'                   End of messages for OSMAIN\nMAINEND   EQU    *\n\n\n\n* ------------------------------------------------------------------- *\n*         MESSAGES FOR OSLMDIR                                        *\n* ------------------------------------------------------------------- *\nLMDIRSTART EQU    *\n          DC      CL8'OSLMDIR '\n          DC      AL4(LMDIREND-LMDIRSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSLMDIR01E  '\n          MSGCOMP 1,CONSTANT,,'Invalid line command'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSLMDIR05E  '\n          MSGCOMP 1,CONSTANT,,'Too few operands'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSLMDIR06E  '\n          MSGCOMP 1,CONSTANT,,'Too many operands'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSLMDIR07E  '\n          MSGCOMP 1,CONSTANT,,'Member name too long'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSLMDIR08E  '\n          MSGCOMP 1,CONSTANT,,'Unknown command'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSLMDIR09E  '\n          MSGCOMP 1,CONSTANT,,'Delete STOW failed, R15='\n          MSGCOMP 1,FULLWORD,4,COMM_DWORD\n          MSGCOMP 2,CONSTANT,,'OSLMDIR09E+'\n          MSGCOMP 2,CONSTANT,,'Member='\n          MSGCOMP 2,CHAR,8,SESS_MEMBER\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSLMDIR10E  '\n          MSGCOMP 1,CONSTANT,,'Member '\n          MSGCOMP 1,CHAR,8,SESS_MEMBER\n          MSGCOMP 1,CONSTANT,,'was previously deleted or renamed'\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSLMDIR11I  '\n          MSGCOMP 1,CONSTANT,,'Dataspace dump complete'\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSLMDIR12E  '\n          MSGCOMP 1,FULLWORD,5,COMM_DWORD\n          MSGCOMP 1,CONSTANT,,' members reset'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSLMDIR13E  '\n          MSGCOMP 1,CONSTANT,,'No previous FIND is active'\n          MSGDEF  END\n\n          DC      X'FF'                   End of messages for OSLMDIR\nLMDIREND  EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSLMOD                                         *\n* ------------------------------------------------------------------- *\nLMODSTART  EQU    *\n          DC      CL8'OSLMOD'\n          DC      AL4(LMODEND-LMODSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSLMOD01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSLMOD02W'\n          MSGCOMP 1,CONSTANT,,'Buffer overflow'\n          MSGCOMP 2,CONSTANT,,'OSLMOD02W '\n          MSGCOMP 2,FULLWORD,5,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'sections for '\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'available for display'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSLMOD03E'\n          MSGCOMP 1,CONSTANT,,'Invalid line command'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSLMOD04E'\n          MSGCOMP 1,CONSTANT,,'DAIR failed'\n          MSGCOMP 2,CONSTANT,,'R15='\n          MSGCOMP 2,HEX,4,comm_info_01\n          MSGCOMP 2,CONSTANT,,'   info='\n          MSGCOMP 2,HEX,4,comm_info_01+2\n          MSGCOMP 2,CONSTANT,,'   Reason='\n          MSGCOMP 2,HEX,4,comm_info_01+4\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSLMOD05E'\n          MSGCOMP 1,CONSTANT,,'Dataspace error'\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for OSLMOD\nLMODEND   EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for LMODESD                                        *\n* ------------------------------------------------------------------- *\nESDSTART  EQU     *\n          DC      CL8'LMODESD'\n          DC      AL4(ESDEND-ESDSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'LMODESD01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'LMODESD02W'\n          MSGCOMP 1,CONSTANT,,'All ESD data has been displayed for'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'LMODESD03W'\n          MSGCOMP 1,CONSTANT,,'No ESD dAta for section'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for LMODESD\nESDEND    EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for LMODIDRB                                       *\n* ------------------------------------------------------------------- *\nIDRBSTART EQU     *\n          DC      CL8'LMODIDRB'\n          DC      AL4(IDRBEND-IDRBSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'LMODIDRB01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'LMODIDRB02W'\n          MSGCOMP 1,CONSTANT,,'All IDRB data has been displayed for'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'LMODIDRB03W'\n          MSGCOMP 1,CONSTANT,,'No IDRB dAta for section'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for LMODIDRB\nIDRBEND   EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for LMODIDRL                                       *\n* ------------------------------------------------------------------- *\nIDRLSTART EQU     *\n          DC      CL8'LMODIDRL'\n          DC      AL4(IDRLEND-IDRLSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'LMODIDRL01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'LMODIDRL02W'\n          MSGCOMP 1,CONSTANT,,'All IDRL data has been displayed for'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'LMODIDRL03W'\n          MSGCOMP 1,CONSTANT,,'No IDRL dAta for section'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for LMODIDRL\nIDRLEND   EQU    *\n\n* ------------------------------------------------------------------- *\n*         Messages for LMODIDRZ                                       *\n* ------------------------------------------------------------------- *\nIDRZSTART EQU     *\n          DC      CL8'LMODIDRZ'\n          DC      AL4(IDRZEND-IDRZSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'LMODIDRZ01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'LMODIDRZ02W'\n          MSGCOMP 1,CONSTANT,,'All IDRZ data has been displayed for'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'LMODIDRZ03W'\n          MSGCOMP 1,CONSTANT,,'No IDRZ dAta for section'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for LMODIDRZ\nIDRZEND   EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for LMODMAP                                        *\n* ------------------------------------------------------------------- *\nMAPSTART  EQU     *\n          DC      CL8'LMODMAP'\n          DC      AL4(MAPEND-MAPSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'LMODMAP01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'LMODMAP02W'\n          MSGCOMP 1,CONSTANT,,'All MAP data has been displayed for'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'LMODMAP03W'\n          MSGCOMP 1,CONSTANT,,'No MAP data for section'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for LMODMAP\nMAPEND    EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for LMODRLD                                        *\n* ------------------------------------------------------------------- *\nRLDSTART  EQU     *\n          DC      CL8'LMODRLD'\n          DC      AL4(RLDEND-RLDSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'LMODRLD01E'\n          MSGCOMP 1,CONSTANT,,'IEWBIND error.  Function:'\n          MSGCOMP 1,CHAR,20,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'OSLMOD01E '\n          MSGCOMP 2,CONSTANT,,'Return code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'   Reason code:'\n          MSGCOMP 2,FULLWORD,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'LMODRLD02W'\n          MSGCOMP 1,CONSTANT,,'All RLD data has been displayed for'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'LMODRLD03W'\n          MSGCOMP 1,CONSTANT,,'No RLD data for section'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for LMODRLD\nRLDEND    EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSOFFLD                                        *\n* ------------------------------------------------------------------- *\nOFFLDSTART EQU    *\n          DC      CL8'OSOFFLD'\n          DC      AL4(OFFLDEND-OFFLDSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSOFFLD01W '\n          MSGCOMP 1,CONSTANT,,'Offload aborted'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSOFFLD02W '\n          MSGCOMP 1,CONSTANT,,'Output data set not over-written'\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for OSOFFLD\nOFFLDEND  EQU    *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSOFILE                                        *\n* ------------------------------------------------------------------- *\nOFILESTART EQU    *\n          DC      CL8'OSOFILE'\n          DC      AL4(OFILEEND-OFILESTART)\n\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSOFILE01E '\n          MSGCOMP 1,CONSTANT,,'Invalid DISP (must be SHR,NEW, or MOD)'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSOFILE02E '\n          MSGCOMP 1,CONSTANT,,'DSN and PATH are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSOFILE03E '\n          MSGCOMP 1,CONSTANT,,'Non-numeric digit in primary quantity'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSOFILE04E '\n          MSGCOMP 1,CONSTANT,,'Non-numeric digit in secondary quantity'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSOFILE05E '\n          MSGCOMP 1,CONSTANT,,'VOLSER is not available'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSOFILE06E '\n          MSGCOMP 1,CONSTANT,,'DSN or PATH is required'\n          MSGDEF  END\n\n          DC     X'FF'                   End of messages for OSOFILE\nOFILEEND  EQU    *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSPARSE                                        *\n* ------------------------------------------------------------------- *\nPARSSTART EQU     *\n          DC      CL8'OSPARSE'\n          DC      AL4(PARSEND-PARSSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSPARSE01E '\n          MSGCOMP 1,CONSTANT,,'No ending quote on hex parameter'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSPARSE02E '\n          MSGCOMP 1,CONSTANT,,'Hex string has odd number of digits'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSPARSE03E '\n          MSGCOMP 1,CONSTANT,,'Hex string has no digits'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSPARSE04E '\n          MSGCOMP 1,CONSTANT,,'Hex string has non-hex digit(s)'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSPARSE05E '\n          MSGCOMP 1,CONSTANT,,'No ending quote'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSPARSE06E '\n          MSGCOMP 1,CONSTANT,,'Quoted string with zero length found'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSPARSE07E '\n          MSGCOMP 1,CONSTANT,,'Null value following equal sign'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSPARSE08E'\n          MSGCOMP 1,CONSTANT,,'Two consecutive equal signs (=) found'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSPARSE08E'\n          MSGCOMP 1,CONSTANT,,'Leading equal sign not allowed'\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSPARSE10E'\n          MSGCOMP 1,CONSTANT,,'Zero length passed.  Internal error'\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSPARSE11E'\n          MSGCOMP 1,CONSTANT,,'Two consecutive operands ended with equa+\n               l signs'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR OSPARSE\nPARSEND   EQU     *\n\n\n* ------------------------------------------------------------------- *\n*         Messages for OSPARMS                                        *\n* ------------------------------------------------------------------- *\nPARMSSTART EQU     *\n           DC      CL8'OSPARMS'\n           DC      AL4(PARMSEND-PARMSSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSPARMS01E'\n          MSGCOMP 1,CONSTANT,,'Parse failed'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSPARMS02E'\n          MSGCOMP 1,CONSTANT,,'Invalid keyword'\n          MSGCOMP 1,CHAR,40,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSPARMS03E'\n          MSGCOMP 1,CONSTANT,,'Duplicate member name keyword'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSPARMS04E'\n          MSGCOMP 1,CONSTANT,,'Member name missing'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSPARMS05E'\n          MSGCOMP 1,CONSTANT,,'Member name too long'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'OSPARMS06E'\n          MSGCOMP 1,CONSTANT,,'Duplicate DD keyword'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'OSPARMS07E'\n          MSGCOMP 1,CONSTANT,,'DSN and DD are mutally exclusive'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'OSPARMS08E'\n          MSGCOMP 1,CONSTANT,,'DD name missing'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'OSPARMS09E'\n          MSGCOMP 1,CONSTANT,,'DD name too long'\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'OSPARMS10E'\n          MSGCOMP 1,CONSTANT,,'Duplicated DSN keyword'\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'OSPARMS11E'\n          MSGCOMP 1,CONSTANT,,'DSN missing'\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'OSPARMS12E'\n          MSGCOMP 1,CONSTANT,,'DSN too long'\n          MSGDEF  END\n\n          MSGDEF  13\n          MSGCOMP 1,CONSTANT,,'OSPARMS13E'\n          MSGCOMP 1,CONSTANT,,'FROMKEY and RBA are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  14\n          MSGCOMP 1,CONSTANT,,'OSPARMS14E'\n          MSGCOMP 1,CONSTANT,,'FROMKEY missing'\n          MSGDEF  END\n\n          MSGDEF  15\n          MSGCOMP 1,CONSTANT,,'OSPARMS145'\n          MSGCOMP 1,CONSTANT,,'FROMKEY value too long'\n          MSGDEF  END\n\n          MSGDEF  16\n          MSGCOMP 1,CONSTANT,,'OSPARMS16E'\n          MSGCOMP 1,CONSTANT,,'TOKEY and RBA are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  17\n          MSGCOMP 1,CONSTANT,,'OSPARMS17E'\n          MSGCOMP 1,CONSTANT,,'TOKEY value missing'\n          MSGDEF  END\n\n          MSGDEF  18\n          MSGCOMP 1,CONSTANT,,'OSPARMS18E'\n          MSGCOMP 1,CONSTANT,,'TOKEY value too long'\n          MSGDEF  END\n\n          MSGDEF  19\n          MSGCOMP 1,CONSTANT,,'OSPARMS19E'\n          MSGCOMP 1,CONSTANT,,'Duplicate NBR/RECORDS keyword'\n          MSGDEF  END\n\n          MSGDEF  20\n          MSGCOMP 1,CONSTANT,,'OSPARMS20E'\n          MSGCOMP 1,CONSTANT,,'NBR value missing'\n          MSGDEF  END\n\n          MSGDEF  21\n          MSGCOMP 1,CONSTANT,,'OSPARMS21E'\n          MSGCOMP 1,CONSTANT,,'NBR value too long'\n          MSGDEF  END\n\n          MSGDEF  22\n          MSGCOMP 1,CONSTANT,,'OSPARMS22E'\n          MSGCOMP 1,CONSTANT,,'Duplicate RBA keyword'\n          MSGDEF  END\n\n          MSGDEF  23\n          MSGCOMP 1,CONSTANT,,'OSPARMS23E'\n          MSGCOMP 1,CONSTANT,,'RBA and FROMKEY/TOKEY are mutually exclu+\n               sive'\n          MSGDEF  END\n\n          MSGDEF  24\n          MSGCOMP 1,CONSTANT,,'OSPARMS24E'\n          MSGCOMP 1,CONSTANT,,'RBA value missing'\n          MSGDEF  END\n\n          MSGDEF  25\n          MSGCOMP 1,CONSTANT,,'OSPARMS25E'\n          MSGCOMP 1,CONSTANT,,'RBA value not numeric'\n          MSGDEF  END\n\n          MSGDEF  26\n          MSGCOMP 1,CONSTANT,,'OSPARMS26E'\n          MSGCOMP 1,CONSTANT,,'RBA value too long'\n          MSGDEF  END\n\n          MSGDEF  27\n          MSGCOMP 1,CONSTANT,,'OSPARMS27E'\n          MSGCOMP 1,CONSTANT,,'Dupicated START keyword'\n          MSGDEF  END\n\n          MSGDEF  28\n          MSGCOMP 1,CONSTANT,,'OSPARMS28E'\n          MSGCOMP 1,CONSTANT,,'START value not present'\n          MSGDEF  END\n\n          MSGDEF  29\n          MSGCOMP 1,CONSTANT,,'OSPARMS29E'\n          MSGCOMP 1,CONSTANT,,'START value not numeric'\n          MSGDEF  END\n\n          MSGDEF  30\n          MSGCOMP 1,CONSTANT,,'OSPARMS30E'\n          MSGCOMP 1,CONSTANT,,'START value too long'\n          MSGDEF  END\n\n          MSGDEF  31\n          MSGCOMP 1,CONSTANT,,'OSPARMS31E'\n          MSGCOMP 1,CONSTANT,,'START value may not be zero'\n          MSGDEF  END\n\n          MSGDEF  32\n          MSGCOMP 1,CONSTANT,,'OSPARMS32E'\n          MSGCOMP 1,CONSTANT,,'Duplicate VOLSER keyword'\n          MSGDEF  END\n\n          MSGDEF  33\n          MSGCOMP 1,CONSTANT,,'OSPARMS33E'\n          MSGCOMP 1,CONSTANT,,'VOLSER value missing'\n          MSGDEF  END\n\n          MSGDEF  34\n          MSGCOMP 1,CONSTANT,,'OSPARMS34E'\n          MSGCOMP 1,CONSTANT,,'VOLSER parameter must be 6 characters'\n          MSGDEF  END\n\n          MSGDEF  35\n          MSGCOMP 1,CONSTANT,,'OSPARMS35E'\n          MSGCOMP 1,CONSTANT,,'SYSOUT value must be 1 character'\n          MSGDEF  END\n\n          MSGDEF  36\n          MSGCOMP 1,CONSTANT,,'OSPARMS36E'\n          MSGCOMP 1,CONSTANT,,'VTOC value must be 6 characters'\n          MSGDEF  END\n\n          MSGDEF  37\n          MSGCOMP 1,CONSTANT,,'OSPARMS37E'\n          MSGCOMP 1,CONSTANT,,'RVTOC value must be 6 characters'\n          MSGDEF  END\n\n          MSGDEF  38\n          MSGCOMP 1,CONSTANT,,'OSPARMS38E'\n          MSGCOMP 1,CONSTANT,,'Duplicate FORMAT'\n          MSGDEF  END\n\n          MSGDEF  39\n          MSGCOMP 1,CONSTANT,,'OSPARMS39E'\n          MSGCOMP 1,CONSTANT,,'FORMAT name missing'\n          MSGDEF  END\n\n          MSGDEF  40\n          MSGCOMP 1,CONSTANT,,'OSPARMS40E'\n          MSGCOMP 1,CONSTANT,,'FORMAT name too long'\n          MSGDEF  END\n\n          MSGDEF  41\n          MSGCOMP 1,CONSTANT,,'OSPARMS41E'\n          MSGCOMP 1,CONSTANT,,'Unknown FORMAT'\n          MSGDEF  END\n\n          MSGDEF  42\n          MSGCOMP 1,CONSTANT,,'OSPARMS42E'\n          MSGCOMP 1,CONSTANT,,'DSN and PATH are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  43\n          MSGCOMP 1,CONSTANT,,'OSPARMS43E'\n          MSGCOMP 1,CONSTANT,,'DD and PATH are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  44\n          MSGCOMP 1,CONSTANT,,'OSPARMS44E'\n          MSGCOMP 1,CONSTANT,,'VOLSER and PATH are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  45\n          MSGCOMP 1,CONSTANT,,'OSPARMS45E'\n          MSGCOMP 1,CONSTANT,,'MEMBER and PATH are mutually exclusive'\n          MSGDEF  END\n\n          MSGDEF  46\n          MSGCOMP 1,CONSTANT,,'OSPARMS46E'\n          MSGCOMP 1,CONSTANT,,'Duplicated PATH'\n          MSGDEF  END\n\n          MSGDEF  47\n          MSGCOMP 1,CONSTANT,,'OSPARMS47E'\n          MSGCOMP 1,CONSTANT,,'PATH missing'\n          MSGDEF  END\n\n          MSGDEF  48\n          MSGCOMP 1,CONSTANT,,'OSPARMS48E'\n          MSGCOMP 1,CONSTANT,,'PATH too long'\n          MSGDEF  END\n\n          MSGDEF  49\n          MSGCOMP 1,CONSTANT,,'OSPARMS49E'\n          MSGCOMP 1,CONSTANT,,'No parameter(s) allowed with ACT'\n          MSGDEF  END\n\n           DC     X'FF'                   END OF MESSAGES FOR OSPARMS\nPARMSEND   EQU     *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSPROMPT                                       *\n* ------------------------------------------------------------------- *\nPROMPTSTART EQU   *\n           DC      CL8'OSPROMPT'\n           DC      AL4(PROMPTEND-PROMPTSTART)\n\n           MSGDEF  1\n           MSGCOMP 1,CONSTANT,,'OSPROMPT01'\n           MSGCOMP 1,CONSTANT,,'DSN and DD are mutually exclusive'\n           MSGDEF  END\n\n           MSGDEF  2\n           MSGCOMP 1,CONSTANT,,'OSPROMPT02'\n           MSGCOMP 1,CONSTANT,,'DSN, DD, or PATH is required'\n           MSGDEF  END\n\n           MSGDEF  4\n           MSGCOMP 1,CONSTANT,,'OSPROMPT04'\n           MSGCOMP 1,CONSTANT,,'START not valid'\n           MSGDEF  END\n\n           MSGDEF  5\n           MSGCOMP 1,CONSTANT,,'OSPROMPT05'\n           MSGCOMP 1,CONSTANT,,'RECORDS not valid'\n           MSGDEF  END\n\n           MSGDEF  6\n           MSGCOMP 1,CONSTANT,,'OSPROMPT06'\n           MSGCOMP 1,CONSTANT,,'FROMKEY and RBA are mutually exclusive'\n           MSGDEF  END\n\n           MSGDEF  7\n           MSGCOMP 1,CONSTANT,,'OSPROMPT07'\n           MSGCOMP 1,CONSTANT,,'TOKEY and RBA are mutually exclusive'\n           MSGDEF  END\n\n           MSGDEF  8\n           MSGCOMP 1,CONSTANT,,'OSPROMPT08'\n           MSGCOMP 1,CONSTANT,,'RBA not numeric'\n           MSGDEF  END\n\n           MSGDEF  9\n           MSGCOMP 1,CONSTANT,,'OSPROMPT09'\n           MSGCOMP 1,CONSTANT,,'No closing quote on DSN'\n           MSGDEF  END\n\n           MSGDEF  10\n           MSGCOMP 1,CONSTANT,,'OSPROMPT10'\n           MSGCOMP 1,CONSTANT,,'DSN and PATH are mutually exclusive'\n           MSGDEF  END\n\n           MSGDEF  11\n           MSGCOMP 1,CONSTANT,,'OSPROMPT11'\n           MSGCOMP 1,CONSTANT,,'DD and PATH are mutually exclusive'\n           MSGDEF  END\n\n           MSGDEF  12\n           MSGCOMP 1,CONSTANT,,'OSPROMPT12'\n           MSGCOMP 1,CONSTANT,,'MEMBER and PATH are mutually exclusive'\n           MSGDEF  END\n\n           MSGDEF  13\n           MSGCOMP 1,CONSTANT,,'OSPROMPT13'\n           MSGCOMP 1,CONSTANT,,'VOLSER and PATH are mutually exclusive'\n           MSGDEF  END\n\n           DC     X'FF'                   END OF MESSAGES FOR OSPROMPT\nPROMPTEND  EQU     *\n\n* ------------------------------------------------------------------- *\n*         Messages for OSRDVSAM                                       *\n* ------------------------------------------------------------------- *\nVSAMSTART EQU     *\n          DC      CL8'OSRDVSAM '\n          DC      AL4(VSAMEND-VSAMSTART)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'OSRDVSAM01E '\n          MSGCOMP 1,CONSTANT,,'OPEN failed. DDNAME='\n          MSGCOMP 1,CHAR,8,SESS_DD\n          MSGCOMP 1,CONSTANT,,', R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'OSRDVSAM02E '\n          MSGCOMP 1,CONSTANT,,'SHOWCB failed.  R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,', RPLFDBK='\n          MSGCOMP 1,HEX,2,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,', RPLERRCD='\n          MSGCOMP 1,HEX,2,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'OSRDVSAM03E FROMKEY/TOKEY not allowed unle+\n               ss data set is a KSDS'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'OSRDVSAM04E '\n          MSGCOMP 1,CHAR,8,COMM_INFO_03\n          MSGCOMP 1,CONSTANT,,' POINT failed.  R15='\n          MSGCOMP 1,HEX,8,COMM_DWORD\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'OSRDVSAM05E '\n          MSGCOMP 1,CONSTANT,,'MODCB failed.  R15='\n          MSGCOMP 1,HEX,4,COMM_DWORD+2\n          MSGCOMP 1,CONSTANT,,', RPLFDBK='\n          MSGCOMP 1,HEX,2,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,', RPLERRCD='\n          MSGCOMP 1,HEX,2,COMM_INFO_02\n          MSGDEF  END\n\n          DC     X'FF'                   END OF MESSAGES FOR OSPARSE\nVSAMEND   EQU     *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*         The following constant marks the end of the CSECT           *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          DC     X'FF'                   End of all messages\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY1    DSECT\n          COPY   DXDPREF\n\nDUMMY2    DSECT\n          COPY   MSG\n\n          COMMON\n          SESSION  TYPE=DSECT\n          BPXYSTAT DSECT=YES,LIST=YES\n\n          COPY   TRENTRY\n          COPY   REGEQU\n          END    OSMSGUS\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSOFFLD": {"ttr": 16648, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x13\\x01\\t!\\x0f\\x01\\x10\\x02\\x1f\\x10D\\x01\\xd8\\x01\\xb9\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-21T10:44:13", "lines": 472, "newlines": 441, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        Offload members to a sequential file                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSOFFLD  CSECT\nOSOFFLD  AMODE 31\nOSOFFLD  RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSOFFLD,R15\n         B     INIT0000\nMODID    DC    CL8'OSOFFLD'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OFFLDEND-OSOFFLD)\nINIT0000 DS    0H\n         USING DS1FMTID,SESS_DSCB\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSOFFLD,R10                    DEFINE BASE\n         LR    R8,R1\n         USING OFFLDREQ,R8                    DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSOFFLD_WORK_L,                                      +\n               LOC=BELOW\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSOFFLD_WORK,R13               DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         L     R9,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R9\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R8\n         CLI   OFFLDREQ_FUNC,$OFFLDREQ_OPEN\n         BE    OPEN0000              YES\n         CLI   OFFLDREQ_FUNC,$OFFLDREQ_WRITE\n         BE    MAIN0000              YES\n         CLI   OFFLDREQ_FUNC,$OFFLDREQ_CLOSE\n         BE    CLOSE000              YES\n         DC    H'0',C'INVALID FUNCTION'\n* ------------------------------------------------------------------- *\n*        Allocate the output data set                                 *\n* ------------------------------------------------------------------- *\nOPEN0000 DS    0H\n         ITRACE ID=GET_OFILE\n         LA    R1,PANEL_NAME                  PANEL NAME\n         L     R15,COMM_V_OSOFILE             OSOFILE ENTRY POINT\n         BALR  R14,R15                        PROMPT FOR OUTPUT DATASET\n         LTR   R15,R15                        CONTINUE?\n         BNZ   ABORT000                       NO\n         XC    DAIRREQ(DAIRREQ_L),DAIRREQ\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         CLI   SPF_OUTPUT_DSN,X'7D'           QUOTED NAME?\n         BE    OPEN0010                       YES\n         MVC   DAIR_DSN,COMM_BLANKS           INITIALIZE TO BLANKS\n         LH    R2,COMM_USER_LENGTH            USER ID LENGTH\n         BCTR  R2,0                           MINUS 1 FOR EXECUTE\n         EX    R2,DSN_MVC1                    COPY USER ID\n         LA    R3,DAIR_DSN+1(R2)              END OF DSN\n         MVI   0(R3),C'.'                     INSERT DELIMITING PERIOD\n         LA    R4,L'DAIR_DSN-3                MAXIMUM LENGTH\n         SR    R4,R2                          MINUS USER ID LENGTH\n         BCTR  R4,0                           MINUS 1 FOR PERIOD\n         EX    R4,DSN_MVC2                    COPY SPECIFIED PART\n         B     OPEN0040\nOPEN0010 DS    0H\n         MVC   DAIR_DSN(L'DAIR_DSN-1),SPF_OUTPUT_DSN+1\n         LA    R14,DAIR_DSN+(L'DAIR_DSN-1)\n         LA    R15,L'DAIR_DSN                 LOOP LIMITER\nOPEN0020 DS    0H\n         CLI   0(R14),X'7D'                   ENDING QUOTE?\n         BE    OPEN0030                       YES\n         BCTR  R14,0\n         BCT   R15,OPEN0020\nOPEN0030 DS    0H\n         MVI   0(R14),C' '                    REMOVE QUOTE\nOPEN0040 DS    0H\n         MVC   DAIR_MEMBER,COMM_BLANKS\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVC   DAIR_UNIT,COMM_BLANKS\n         CLC   SPF_OUTPUT_DISP,NEW            NEW OUTPUT DATA SET?\n         BE    OPEN0060                       YES\n         CLC   SPF_OUTPUT_DISP,MOD            MOD (APPEND?)\n         BE    OPEN0050                       YES\n         ITRACE ID=DISP_SHR\n         MVI   DAIR_DISP,$DAIR_DISP_SHR       SET DISP TO SHR\n         B     OPEN0070\nOPEN0050 DS    0H\n         ITRACE ID=DISP_MOD\n         MVI   DAIR_DISP,$DAIR_DISP_MOD       SET DISP TO MOD\n         B     OPEN0070\nOPEN0060 DS    0H\n         ITRACE ID=DISP_NEW\n         MVI   DAIR_DISP,$DAIR_DISP_NEW       SET DISP TO NEW\n         MVC   DAIR_VOLSER,SPF_OUTPUT_VOLSER\n         MVC   DAIR_UNIT,SPF_OUTPUT_UNIT\n         PACK  COMM_DWORD,SPF_OUTPUT_SPACE_PRI\n         CVB   R1,COMM_DWORD\n         STCM  R1,7,DAIR_PRI\n         PACK  COMM_DWORD,SPF_OUTPUT_SPACE_SEC\n         CVB   R1,COMM_DWORD\n         STCM  R1,7,DAIR_SEC\nOPEN0070 DS    0H\n         LA    R1,DAIRREQ                     ALLOCATION PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         ITRACE ID=ALOC_OUT,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        LINK TO OSDAIR\n         ITRACE ID=OUT_RC,                                             +\n               DATA1=(DAIR_R15,2),                                     +\n               DATA2=(DAIR_ERROR,4)\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BZ    OPEN0080                       YES\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGES\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     OPEN0000                       DISPLAY PANEL AGAIN\nOPEN0080 DS    0H\n         MVC   OFFLDREQ_DDNAME,DAIR_DD        SAVE DD NAME\n         ITRACE ID=OUT_DD,                                             +\n               DATA1=OFFLDREQ_DDNAME\n* ------------------------------------------------------------------- *\n*        Make sure we don't over-write without user's permission      *\n* ------------------------------------------------------------------- *\n         CLI   DAIR_DISP,$DAIR_DISP_SHR       ALLOCATED DISP=SHR?\n         BNE   OPEN0090                       NO\n         CLI   SPF_YES_OR_NO,C'Y'             OVERWRITE?\n         BNE   ABORT010                       NO\n* ------------------------------------------------------------------- *\n*        OPEN the output data set                                     *\n* ------------------------------------------------------------------- *\nOPEN0090 DS    0H\n         GETMAIN RU,                                                   +\n               LV=ODCB_L,                                              +\n               LOC=BELOW\n         LR    R7,R1\n         ST    R7,OFFLDREQ_DCB                SAVE DCB ADDRESS\n         ITRACE ID=OUT_DCB,                                            +\n               RDATA1=R7\nOUTPUT   USING IHADCB,R7\n         MVC   0(ODCB_L,R7),ODCB_I            COPY DCB\n         MVC   OUTPUT.DCBDDNAM,DAIR_DD        COPY DD NAME\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         CLI   DAIR_DISP,$DAIR_DISP_MOD       OPEN 'EXTEND'?\n         BE    OPEN0110                       YES\n         CLI   DAIR_DISP,$DAIR_DISP_NEW       NEW?\n         BE    OPEN0100                       YES\n         CLC   DAIR_MEMBER,COMM_BLANKS        MEMBER NAME PRESENT?\n         BNE   OPEN0110                       YES\nOPEN0100 DS    0H\n         ITRACE ID=COPY_DCB\n         MVC   OUTPUT.DCBRECFM,DS1RECFM       COPY RECFM\n         MVC   OUTPUT.DCBLRECL,DS1LRECL       COPY LRECL\n         MVC   OUTPUT.DCBBLKSI,DS1BLKL        COPY BLOCK SIZE\nOPEN0110 DS    0H\n         ITRACE ID=OPEN_OUT,                                           +\n               RDATA1=R7,                                              +\n               DATA2=OUTPUT.DCBDDNAM\n         OPEN  ((R7),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         B     OPEN0130\nOPEN0120 DS    0H\n         ITRACE ID=OPEN_EXT\n         OPEN  ((R7),EXTEND),                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\nOPEN0130 DS    0H\n         GETMAIN RU,                                                   +\n               LV=32768,                                               +\n               LOC=BELOW\n         ST    R1,OFFLDREQ_IO                 SAVE I/O AREA\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n         XC    OFFLDREQ_COUNT,OFFLDREQ_COUNT\n         XC    WORK_RECORDS,WORK_RECORDS\n         XC    WORK_BYTES,WORK_BYTES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=MAIN\n         L     R7,OFFLDREQ_DCB                DCB ADDRESS\n         L     R6,OFFLDREQ_IO                 I/O AREA\n         ITRACE ID=ALLOCIN,                                            +\n               DATA1=SESS_DSN,                                         +\n               DATA2=OFFLDREQ_MEMBER\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET COMMAND\n         MVC   DAIR_DSN,SESS_DSN              COPY DATA SET NAME\n         MVC   DAIR_MEMBER,OFFLDREQ_MEMBER\n         MVC   DAIR_VOLSER,SESS_VOLSER\n         MVC   DAIR_UNIT,SYSALLDA\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         LA    R1,DAIRREQ                     ALLOCATION PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE INPUT DATASET\n         ITRACE ID=IN_RC,                                              +\n               DATA1=(DAIR_R15,4)\n         OC    DAIR_R15,DAIR_R15\n         BNZ   ERR0000\n         MVC   WORK_IN_DDNAME,DAIR_DD         SAVE DD NAME\nMAIN0010 DS    0H\n         MVC   WORK_DCB(IDCB_L),IDCB_I\n         LA    R5,WORK_DCB\nINPUT    USING IHADCB,R5\n         MVC   INPUT.DCBDDNAM,WORK_IN_DDNAME  COPY DDNAME\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         ITRACE ID=OPEN_IN,                                            +\n               RDATA1=R5,                                              +\n               DATA2=WORK_IN_DDNAME\n         OPEN  ((R5),INPUT),                  OPEN INPUT DATASET       +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         L     R1,OFFLDREQ_COUNT              NUMBER OFFLOADED SO FAR\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,OFFLDREQ_COUNT              SAVE TOTAL\n         ST    R1,SEPREQ_SEQ                  SERVES AS SEQ NBR ALSO\n         LA    R1,SPF_SEPARATOR_1\n         ST    R1,SEPREQ_FIRST_SEPARATOR\n         LA    R1,3\n         ST    R1,SEPREQ_NBR                  NBR OF SEPARATOR LINES\n         ST    R7,SEPREQ_DCB                  OUTPUT DCB ADDR\n         MVC   SEPREQ_MEMBER,OFFLDREQ_MEMBER  SET MEMBER NAME\n         LA    R1,SEPREQ                      SEPARATOR PARMS\n         L     R15,COMM_V_OSSEP               OSSEP ENTRY POINT\n         BALR  R14,R15                        OUTPUT LEADING SEPARATORS\nMAIN0020 DS    0H\n         ITRACE ID=NOTIFY,                                             +\n               DATA1=OFFLDREQ_MEMBER\n         MVC   WORK_MSG(MSG01_L),MSG01\n         MVC   WORK_MSG+(MSG01_MEMBER-MSG01)(L'MSG01_MEMBER),OFFLDREQ_M+\n               EMBER\n         LA    R2,WORK_MSG\n         LA    R3,MSG01_L\n         TPUT  (R2),(R3),R                    ISSUE TPUT\nMAIN0030 DS    0H\n         ITRACE ID=OFFLOAD\nMAIN0040 DS    0H\n         GET   (R5),(R6)                      READ\n         L     R1,WORK_RECORDS                RECORDS READ\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,WORK_RECORDS                SAVE NUMBER\n         L     R1,WORK_BYTES                  BYTES FOR THIS FILE\n         LA    R1,80(,R1)                     PLUS 80\n         ST    R1,WORK_BYTES                  SAVE TOTAL\n         PUT   (R7),(R6)                      PUT\n         B     MAIN0040                       LOOP\nMAIN0050 DS    0H\n         ITRACE ID=EOF,                                                +\n               DATA1=(WORK_RECORDS,4)\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLS_IN,                                             +\n               RDATA1=R5\n         CLOSE ((R5)),                        CLOSE INPUT              +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL (R5)                        FREE BUFFERS\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION\n         MVC   DAIR_DD,WORK_IN_DDNAME         COPY DDNAME\n         ITRACE ID=FREE_IN,                                            +\n               DATA1=DAIR_DD\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE INPUT DATASET\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         LA    R1,SPF_SEPARATOR_4             FIRST OUTPUT SEPARATOR\n         ST    R1,SEPREQ_FIRST_SEPARATOR\n         MVC   SEPREQ_RECORDS,WORK_RECORDS    NBR OF RECORDS\n         MVC   SEPREQ_BYTES,WORK_BYTES        NBR OF BYTES\n         LA    R1,SEPREQ                      SEPARATOR PARMS\n         L     R15,COMM_V_OSSEP               OSSEP ENTRY POINT\n         ITRACE ID=CALL_SEP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                        OUTPUT TRAILING SEPARATOR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         ICM   R7,15,OFFLDREQ_DCB             DCB ADDRESS\n         BZ    EXIT0000\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLS_OUT,                                            +\n               RDATA1=R7\n         CLOSE ((R7)),                        CLOSE OUTPUT DCB         +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL (R7)                        FREE BUFFERS\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R7\n         FREEMAIN RU,                         FREEMAIN DCB             +\n               A=(R7),                                                 +\n               LV=ODCB_L\n         XC    OFFLDREQ_DCB,OFFLDREQ_DCB      CLEAR DCB ADDRESS\n         L     R6,OFFLDREQ_IO                 I/O AREA\n         ITRACE ID=FREE_IO,                                            +\n               RDATA1=R6\n         FREEMAIN RU,                         FREEMAIN I/O AREA        +\n               A=(R6),                                                 +\n               LV=32768\n         XC    OFFLDREQ_IO,OFFLDREQ_IO        CLEAR I/O AREA ADDRESS\n         ITRACE ID=FREE_OUT,                                           +\n               DATA1=OFFLDREQ_DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE           SET COMMAND\n         MVC   DAIR_DD,OFFLDREQ_DDNAME        COPY DD NAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        FREE OUTPUT DD\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         MVC   OFFLDREQ_DDNAME,COMM_BLANKS    CLEAR DDNAME\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        User pressed PF3 or PF4                                      *\n* ------------------------------------------------------------------- *\nABORT000 DS    0H\n         ITRACE ID=ABORT\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID+1,1\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         B     EXIT0004\n* ------------------------------------------------------------------- *\n*        Output dataset already exists and overwrite was not 'yes'    *\n* ------------------------------------------------------------------- *\nABORT010 DS    0H\n         ITRACE ID=NO_WRITE\n         MVI   DAIR_FUNC,$DAIR_FREE           DE-ALLOCATE OUTPUT FILE\n         MVC   DAIR_DD,OFFLDREQ_DDNAME        COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         MVC   OFFLDREQ_DDNAME,COMM_BLANKS    CLEAR DDNAME\n         MVC   COMM_MSG_CSECT,MODID           COPY CSECT NAME\n         MVI   COMM_MSG_ID+1,2                SET MSG ID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                        BUILD MESSAGE\n         B     EXIT0004                       EXIT WITH RC=4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0000  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     EXIT0004\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=OSOFFLD_WORK_L\n         L     R14,12(,R13)\n         LR    R15,R2                         SET RETURN CODE\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\nBOMBIT   DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSN_MVC1 MVC   DAIR_DSN(0),COMM_USER          COPY USER ID\nDSN_MVC2 MVC   1(0,R3),SPF_OUTPUT_DSN         COPY DATA SET NAME\n* ------------------------------------------------------------------- *\n*        CONSTANTS                                                    *\n* ------------------------------------------------------------------- *\nIDCB_I   DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               EODAD=MAIN0050,                                         +\n               MACRF=GM\nIDCB_L   EQU   *-IDCB_I\nODCB_I   DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               MACRF=PM\nODCB_L   EQU   *-ODCB_I\nOPEN_I   OPEN  (*,OUTPUT),                                             +\n               MODE=31,                                                +\n               MF=L\nOPEN_L   EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L  EQU   *-CLOSE_I\n\nNEW      DC    CL3'NEW'\nMOD      DC    CL3'MOD'\nSHR      DC    CL3'SHR'\n\nSYSALLDA DC    CL8'SYSALLDA'\n\nPANEL_NAME   DC  CL8'OSOFFLD'\n\nMSG01        DS  0C\n             DC  C'OSOFFLD02I  Offloading member:'\nMSG01_MEMBER Dc  CL8' '\nMSG01_L      EQU *-MSG01\n\nOFFLDEND     EQU *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSOFFLD_WORK    DSECT\n                COPY     DXDPREF\nWORK_DCB        DS       0F,(IDCB_L)X\nWORK_OPEN       DS       0F,(OPEN_L)X\nWORK_CLOSE      DS       0F,(CLOSE_L)X\n\nWORK_RECORDS    DS       F\nWORK_BYTES      DS       F\n\nWORK_IN_DDNAME  DS       CL8\n\nWORK_MSG        DS       CL80\n\n                DAIRREQ  DSECT=NO\n                SEPREQ   DSECT=NO\nOSOFFLD_WORK_L  EQU      *-OSOFFLD_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                OFFLDREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                IBMMAC   DCBD=PS\nFORMAT_1        DSECT\n                IBMMAC   VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY REGEQU\n                END  OSOFFLD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSOFILE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\t!\\x0f\\x01\\t!\\x0f\\x151\\x01 \\x01 \\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-07-29T15:31:13", "lines": 288, "newlines": 288, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*       Obtain output file info                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSOFILE  CSECT\nOSOFILE  AMODE 31\nOSOFILE  RMODE ANY\n         USING OSOFILE,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSOFILE'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OFILEEND-OSOFILE)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSOFILE,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDOFILE,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         MVC   SESS_DISP_PANEL,0(R1)          COPY PANEL NAME\n         L     R9,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   COMM_MSG_CSECT,MODID           COPY MODULE NAME\nMAIN0010 DS    0H\n         LA    R1,VPUT                        COMMAND NAME\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,VAR_NAMES                   LIST OF NAMES\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARM LIST\n         ITRACE ID=VPUT,                                               +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         ITRACE ID=VPUT_RC,                                            +\n               RDATA1=R15\nMAIN0020 DS    0H\n         LA    R1,DISPLAY                     COMMAND NAME\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SESS_DISP_PANEL             PANEL NAME\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARM LIST\n         ITRACE ID=DISPLAY,                                            +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        RC=0?\n         BNZ   EXIT0004                       NO\n         LA    R1,VGET\n         ST    R1,DXD_SPF_1\n         LA    R1,NAME_LIST\n         ST    R1,DXD_SPF_2\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15\n         ITRACE ID=VGET_RC,                                            +\n               RDATA1=R15\n         OC    SPF_ZCMD,COMM_BLANKS           FORCE UPPER CASE\n         ITRACE ID=ZCMD,                                               +\n               DATA1=SPF_ZCMD+0,                                       +\n               DATA2=SPF_ZCMD+8\n         CLC   ABEND,SPF_ZCMD                 BLOW YOURSELF UP?\n         BE    ABEND000                       WELL, THEY ASKED FOR IT\n         CLC   =C'??',SPF_ZCMD                HELP?\n         BE    HELP0000                       YES\n         OC    SPF_OUTPUT_DSN,COMM_BLANKS\n         OC    SPF_OUTPUT_DISP,COMM_BLANKS\n         OC    SPF_OUTPUT_UNIT,COMM_BLANKS\n         OC    SPF_OUTPUT_VOLSER,COMM_BLANKS\n         OC    SPF_YES_OR_NO,COMM_BLANKS\n         ITRACE ID=DSN,                                                +\n               DATA1=SPF_OUTPUT_DSN+0,                                 +\n               DATA2=SPF_OUTPUT_DSN+8\n         ITRACE ID=DISP,                                               +\n               DATA1=(SPF_OUTPUT_DISP,3)\n         ITRACE ID=UNIT_VOL,                                           +\n               DATA1=SPF_OUTPUT_UNIT,                                  +\n               DATA2=SPF_OUTPUT_VOLSER\n\n         CLC   SPF_OUTPUT_DSN,COMM_BLANKS     DATA SET NAME?\n         BE    MAIN0030                       NO\n         CLC   SPF_OUTPUT_PATH,COMM_BLANKS    PATH NAME?\n         BNE   ERR0020                        YES.. CAN'T HAVE BOTH\n         B     MAIN0040\nMAIN0030 DS    0H\n         CLC   SPF_OUTPUT_PATH,COMM_BLANKS    PATH NAME?\n         BE    ERR0060                        NO.. NEED DSN OR PATH\n         B     MAIN0050                       SKIP VOLSER FOR PATHS\nMAIN0040 DS    0H\n         CLC   SPF_OUTPUT_VOLSER,COMM_BLANKS\n         BE    MAIN0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VER_VOL\n         XC    DXD_UCB_WORK,DXD_UCB_WORK      INITIALIZE COPY OF UCB\n         MVC   DXD_UCBSCAN(UCBSCAN_L),UCBSCAN_I\n         XC    DXD_UCB_WORK,DXD_UCB_WORK\n         ITRACE ID=UCBSCAN\n         UCBSCAN COPY,                                                 +\n               WORKAREA=DXD_UCB_WORK,                                  +\n               VOLSER=SESS_VOLSER,                                     +\n               UCBAREA=DXD_UCB,                                        +\n               DYNAMIC=YES,                                            +\n               RANGE=ALL,                                              +\n               MF=(E,DXD_UCBSCAN)\n         ITRACE ID=UCB_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        VALID VOLSER?\n         BZ    ERR0050                        NO\nMAIN0050 DS    0H\n         CLC   SESS_DISP_PANEL,OS0002         PANEL 2?\n         BNE   EXIT0000                       NO\n         CLC   SPF_OUTPUT_DISP,NEW            NEW?\n         BE    MAIN0060                       YES\n         CLC   SPF_OUTPUT_DISP,SHR            SHR?\n         BE    EXIT0000                       YES\n         CLC   SPF_OUTPUT_DISP,MOD            MOD?\n         BE    EXIT0000                       YES\n         MVI   COMM_MSG_ID+1,1                SET MESSAGE ID\n         B     ERR0100\nMAIN0060 DS    0H\n         ITRACE ID=SPACE,                                              +\n               DATA1=(SPF_OUTPUT_SPACE_PRI,5),                         +\n               DATA2=(SPF_OUTPUT_SPACE_SEC,5)\n         LA    R1,SPF_OUTPUT_SPACE_PRI\n         LA    R2,L'SPF_OUTPUT_SPACE_PRI\nMAIN0070 DS    0H\n         CLI   0(R1),C'0'                     VALID DIGIT?\n         BL    ERR0030                        NO\n         CLI   0(R1),C'9'                     VALID DIGIT?\n         BH    ERR0030                        NO\n         LA    R1,1(,R1)                      NEXT DIGIT\n         BCT   R2,MAIN0070                    LOOP\n         LA    R1,SPF_OUTPUT_SPACE_SEC\n         LA    R2,L'SPF_OUTPUT_SPACE_SEC\nMAIN0080 DS    0H\n         CLI   0(R1),C'0'                     VALID DIGIT?\n         BL    ERR0040                        NO\n         CLI   0(R1),C'9'                     VALID DIGIT?\n         BH    ERR0040                        NO\n         LA    R1,1(,R1)                      NEXT DIGIT\n         BCT   R2,MAIN0080                    LOOP\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHELP0000 DS    0H\n         ITRACE ID=HELP\n         LA    R1,DISPLAY                     COMMAND NAME\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,HELP_PANEL                  PANEL NAME\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARM LIST\n         ITRACE ID=DISPLAY,                                            +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         B     MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2                OUTPUT DSN AND PATH\n         B     ERR0100\nERR0030  DS    0H\n         ITRACE ID=BAD_PRI\n         MVI   COMM_MSG_ID+1,3                BAD DIGIT IN PRI QTY\n         B     ERR0100\nERR0040  DS    0H\n         ITRACE ID=BAD_SEC\n         MVI   COMM_MSG_ID+1,4                BAD DIGIT IN SEC QTY\n         B     ERR0100\nERR0050  DS    0H\n         ITRACE ID=BAD_SEC\n         MVI   COMM_MSG_ID+1,5                BAD DIGIT IN SEC QTY\n         B     ERR0100\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6                NEED DSN OR PATH\nERR0100  DS    0H\n         L     R15,COMM_V_OSMSG               PROCESS MESSAGE\n         BALR  R14,R15                        BUILD MESSAGE\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE\n         B     MAIN0010                       DISPLAY THE PANEL AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R15,R15\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R15,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC    Q(DXDOFILE)\n\nUCBSCAN_I     UCBSCAN MF=(L,ANYNAME)\nUCBSCAN_L     EQU    *-UCBSCAN_I\n\nABEND         DC    C'ABEND '\nDISPLAY       DC    CL8'DISPLAY'\nHELP_PANEL    DC    CL8'SEPHELP'\nVGET          DC    CL8'VGET'\nVPUT          DC    CL8'VPUT'\nNAME_LIST     DC    C'(ZSCROLLA ZSCROLLN ZVERB)'\nVAR_NAMES     DC    C'(PODSN POD POUNIT POVOL POPRI POSEC PRL)'\nOS0002        DC    CL8'OS0002'\n\nNEW           DC    CL3'NEW'\nSHR           DC    CL3'SHR'\nMOD           DC    CL3'MOD'\n\n              LTORG\n\nOFILEEND      EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDOFILE       DSECT\n               COPY    DXDPREF\n\nDXD_SPF_PARMS  DS  0A\nDXD_SPF_1      DS  A\nDXD_SPF_2      DS  A\nDXD_SPF_3      DS  A\nDXD_SPF_4      DS  A\nDXD_SPF_5      DS  A\n\nDXD_UCBSCAN    DS  0F,(UCBSCAN_L)X\nDXD_UCB_WORK   DS  100X\nDXD_UCB        DS  48X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY    TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY  REGEQU\n         END   OSOFILE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSPARMS": {"ttr": 17927, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x008\\x01\\t \\x8f\\x01\\x10\\x02o\\x14\\x03\\x03;\\x03-\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-07-27T00:00:00", "modifydate": "2010-01-26T14:03:38", "lines": 827, "newlines": 813, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process parms on invoking commands                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSPARMS  CSECT\nOSPARMS  AMODE 31\nOSPARMS  RMODE ANY\n         USING OSPARMS,R15                       DEFINE BASE\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSPARMS'                      MODULE NAME\n         DC    CL8'&SYSDATE'                     DATE OF ASSEMBLY\n         DC    CL8'&SYSTIME'                     TIME OF ASSEMBLY\n         DC    A(PARMSEND-OSPARMS)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                   SAVE ENTRY REGISTERS\n         LR    R10,R15                           COPY BASE\n         DROP  R15\n         USING OSPARMS,R10\n         LR    R9,R1\n         USING PARMSREQ,R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R15,COMM_DXD                      WORK AREA ADDRESS\n         A     R15,DXD_START                     PLUS DISPLACEMENT\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDPARMS,R13\n         MVC   DXD_CSECT,MODID\n         MVC   COMM_MSG_CSECT,MODID\n* ------------------------------------------------------------------- *\n*        Parse the invoking command                                   *\n* ------------------------------------------------------------------- *\n         ITRACE ID=PARSE,                                              +\n               DATA1=(COMM_COMMAND_LENGTH,4),                          +\n               DATA2=COMM_COMMAND\n         MVC   PARSE_COMMAND,COMM_COMMAND        ADDRESS OF COMMAND\n         MVC   PARSE_LENGTH,COMM_COMMAND_LENGTH  LENGTH OF COMMAND\n         LA    R1,COMM_OPERANDS                  OPERANDS INFO TABLE\n         ST    R1,PARSE_OPERANDS                 PASS ADDRESS\n         LA    R1,20                             MAX OPERANDS\n         STH   R1,PARSE_OPERANDS_NBR\n         LA    R1,PARSEREQ                       PARM BLOCK ADDRESS\n         L     R15,COMM_V_OSPARSE                OSPARSE ADDRESS\n         ITRACE ID=CALL,                                               +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                           LINK TO OSPARSE\n         ITRACE ID=RC,                                                 +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   ERR0010                           NO\n         MVC   COMM_OPERANDS_NBR,PARSE_OPERANDS_NBR\n* ------------------------------------------------------------------- *\n*        Process operands on invoking command                         *\n* ------------------------------------------------------------------- *\nPARM0010 DS    0H\n         MVI   SESS_KEYWORD_FLAGS,0              CLEAR ALL FLAGS\n         LA    R2,COMM_OPERANDS                  1ST OPERAND'S DATA\n         USING OPERAND,R2\n         SR    R3,R3                             CLEAR REGISTER\n         ICM   R3,3,COMM_OPERANDS_NBR            NUMBER OF OPERANDS\n         ITRACE ID=OPERANDS,                                           +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         MVI   SESS_USER_OPTIONS,0               RESET ALL OPTIONS\nPARM0020 DS    0H\n         ICM   R4,15,OPERAND_ADDRESS             OPERAND TEXT ADDRESS\n         SR    R5,R5                             CLEAR REGISTER\n         ICM   R5,3,OPERAND_LENGTH               OPERAND'S LENGTH\n         ITRACE ID=OPERAND,                                            +\n               DATA1=0(R4),                                            +\n               RDATA2=R5\n         SR    R6,R6                             CLEAR REGISTER\n         CH    R3,H2                             AT LEAST TWO LEFT?\n         BL    PARM0030                          NO\n         LA    R6,OPERAND_L(,R2)                 NEXT OPERAND\nNEXT     USING OPERAND,R6\nPARM0030 DS    0H\n         LA    R14,KEYWORDS                      FIRST KEYWORD\n         USING KEYWORD,R14\nPARM0040 DS    0H\n         ICM   R15,15,KEYWORD_LINK               WHERE TO LINK\n         CH    R5,KEYWORD_LENGTH                 TOO LONG?\n         BH    PARM0050                          YES\n         LR    R1,R5                             COPY LENGTH\n         BCTR  R1,0                              FOR EXECUTE\n         EX    R1,KEY_CLC                        FOUND THE KEYWORD?\n         BER   R15                               YES\nPARM0050 DS    0H\n         LA    R14,KEYWORD_L(,R14)               NEXT KEYWORD\n         CLI   0(R14),X'FF'                      END OF LIST?\n         BE    ERR0020                           YES\n         B     PARM0040                          LOOP\nPARM0060 DS    0H\n         LA    R2,OPERAND_L(,R2)                 NEXT OPERAND\n         BCT   R3,PARM0070\n         B     EXIT0000                          ALL OPERANDS PROCESSED\nPARM0070 DS    0H\n         LA    R2,OPERAND_L(,R2)                 NEXT OPERAND\n         BCT   R3,PARM0020\n         B     EXIT0000                          ALL OPERANDS PROCESSED\n* ------------------------------------------------------------------- *\n*        Process ABEND keyword                                        *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=SET_AB\n         OI    COMM_FLAGS,$COMM_ABEND            SET FLAG\n         B     PARM0070\n* ------------------------------------------------------------------- *\n*        PROCESS ACT (DISPLAY ACTIVE REGIONS) KEYWORD                 *\n* ------------------------------------------------------------------- *\nACT0000  DS    0H\n         ITRACE ID=ACT\n         CLI   SESS_KEYWORD_FLAGS,0              OTHER KEYWORD(S) USED?\n         BNE   ERR0490                           YES.. NOT ALLOWED\n         CLI   SESS_KEYWORD_FLAGS_2,0            OTHER KEYWORD(S) USED?\n         BNE   ERR0490                           YES.. NOT ALLOWED\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_ACT SET PARM INDICATOR\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_OTHER   DATA TYPE IS 'OTHER'\n         MVC   SESS_FORMAT,OSACT\n         B     PARM0070\n* ------------------------------------------------------------------- *\n*        Process ASCII operand                                        *\n* ------------------------------------------------------------------- *\nASCII000 DS    0H\n         ITRACE ID=ASCII\n         OI    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         B     PARM0070\n* ------------------------------------------------------------------- *\n*        Process DD= keyword                                          *\n* ------------------------------------------------------------------- *\nDD0000   DS    0H\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DSN\n         BO    ERR0060\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DD\n         BO    ERR0070\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_DD\n         LTR   R6,R6                             DD NAME PRESENT?\n         BZ    ERR0080                           NO\n         LH    R14,NEXT.OPERAND_LENGTH\n         CH    R14,H8                            TOO LONG?\n         BH    ERR0090\n         BCTR  R14,0\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         EX    R14,DD_MVC                        COPY DD NAME\n         ITRACE ID=SET_DD,                                             +\n               DATA1=SESS_DD\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process DSN= keyword                                         *\n* ------------------------------------------------------------------- *\nDSN0000  DS    0H\n         ITRACE ID=DSN\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DD\n         BO    ERR0070\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DSN\n         BO    ERR0100\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_DSN\n         LTR   R6,R6                             DSN PRESENT?\n         BZ    ERR0110                           NO\n         ICM   R15,15,NEXT.OPERAND_ADDRESS       DSN ADDRESS\n         LH    R14,NEXT.OPERAND_LENGTH           DSN LENGTH\n         CH    R14,H4                            4 BYTES?\n         BNE   DSN0010                           NO\n         CLC   VTOC,0(R15)                       VTOC?\n         BE    DSN0050                           YES\n         CLC   STORAGE(4),0(R15)                 STOR?\n         BE    DSN0070                           YES\n         B     DSN0020\nDSN0010  DS    0H\n         CH    R14,H7                            7 BYTES?\n         BNE   DSN0020                           NO\n         CLC   STORAGE,0(R15)                    STORAGE?\n         BE    DSN0070                           YES\nDSN0020  DS    0H\n         TM    NEXT.OPERAND_TYPE,$OPERAND_QUOTED\n         BO    DSN0030                           YES\n         LH    R1,COMM_USER_LENGTH               USER ID LENGTH\n         LA    R1,1(,R1)                         PLUS 1 FOR '.'\n         AR    R1,R14                            PLUS OPERAND LENGTH\n         CH    R1,H44                            TOO LONG?\n         BH    ERR0120                           YES\n         LH    R1,COMM_USER_LENGTH\n         EX    R1,MVC_PREFIX\n         LA    R1,SESS_DSN                       DSN IN COMM AREA\n         AH    R1,COMM_USER_LENGTH               PLUS LENGTH OF USER ID\n         MVI   0(R1),C'.'                        INSERT PERIOD\n         LA    R1,1(,R1)                         ADD 1 TO ADDRESS\n         B     DSN0040\nDSN0030  DS    0H\n         CH    R14,H44                           TOO LONG?\n         BH    ERR0120                           YES\n         LA    R1,SESS_DSN\nDSN0040  DS    0H\n         BCTR  R14,0\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         EX    R14,DSN_MVC                       COPY DD NAME\n         OC    SESS_DSN,COMM_BLANKS              TRANSLATE NULLS\n         ITRACE ID=SET_DSN,                                            +\n               DATA1=SESS_DSN\n         B     PARM0060                          CONTINUE\nDSN0050  DS    0H\n         ITRACE ID=VTOC\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_VTOC\n         MVI   SESS_DSN,X'04'\n         MVC   SESS_DSN+1(L'SESS_DSN-1),SESS_DSN\n         B     PARM0060                          CONTINUE\nDSN0060  DS    0H\n         ITRACE ID=RAWVTOC\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_RAWVTOC\n         MVI   SESS_DSN,X'04'\n         MVC   SESS_DSN+1(L'SESS_DSN-1),SESS_DSN\n         B     PARM0060                          CONTINUE\nDSN0070  DS    0H\n         ITRACE ID=STOR\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_STOR\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process DUMPDATA operand                                     *\n* ------------------------------------------------------------------- *\nDUMP0000 DS    0H\n         ITRACE ID=DUMPDATA\n         OI    SESS_USER_OPTIONS,$OPTIONS_DUMPDATA\n         B     PARM0070\n* ------------------------------------------------------------------- *\n*        Process F= or FORMAT= keyword                                *\n* ------------------------------------------------------------------- *\nFMAT0000 DS    0H\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         BO    ERR0380                           DUPLICATE FORMAT\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         TM    NEXT.OPERAND_TYPE,$OPERAND_PRESENT\n         BNO   ERR0390                           NO\n         LH    R14,NEXT.OPERAND_LENGTH           FORMAT NAME LENGTH\n         CH    R14,H8                            TOO LONG?\n         BH    ERR0400                           YES\n         MVC   FMATREQ_FORMAT,COMM_BLANKS\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         BCTR  R14,0\n         EX    R14,FMAT_MVC                      COPY FORMAT NAME\n         ITRACE ID=VFY_FMAT,                                           +\n               DATA1=FMATREQ_FORMAT\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSFORMAT\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSFORMAT\n         MVI   FMATREQ,$FMATREQ_VERIFY           SET FUNCTION CODE\n         LA    R1,FMATREQ\n         ICM   R15,15,LOADREQ_EP\n         BALR  R14,R15                           CALL FMFORMAT\n         CLI   FMATREQ_RC,$FMATREQ_OK            FORMAT NAME OK?\n         BNE   ERR0410                           NO\n         MVC   SESS_FORMAT,FMATREQ_FORMAT\n         B     PARM0060                          PROCESS NEXT OPERAND\nFMAT_MVC MVC   FMATREQ_FORMAT(0),0(R15)\n* ------------------------------------------------------------------- *\n*        Process OSE keyword                                          *\n* ------------------------------------------------------------------- *\nOS0000   DS    0H\n         ITRACE ID=ONSCREEN\n         B     PARM0070                          PROCESS NEXT OPERAND\n* ------------------------------------------------------------------- *\n*        Process OSE keyword                                          *\n* ------------------------------------------------------------------- *\nOSE0000  DS    0H\n         ITRACE ID=OS_EDIT\n         MVC   SESS_FORMAT,EDIT                  EDIT\n         OI    SESS_EDIT_FLAGS,$SESS_EDIT        SET EDIT SESSION\n         B     PARM0070                          PROCESS NEXT OPERAND\n* ------------------------------------------------------------------- *\n*        Process FROMKEY= keyword                                     *\n* ------------------------------------------------------------------- *\nFROM0000 DS    0H\n         TM    SESS_USER_OPTIONS,$OPTIONS_RBA\n         BO    ERR0130\n         ITRACE ID=FROMKEY\n         TM    NEXT.OPERAND_TYPE,$OPERAND_PRESENT\n         BNO   ERR0140\n         LH    R14,NEXT.OPERAND_LENGTH           STARTING KEY LENGTH\n         CH    R14,H40                           TOO LONG?\n         BH    ERR0150                           YES\n         OI    SESS_USER_OPTIONS,$OPTIONS_FROMKEY\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         TM    NEXT.OPERAND_TYPE,$OPERAND_HEX    HEX VALUE?\n         BO    FROM0010                          YES\n         ST    R14,SESS_FROMKEY_LENGTH           SET LENGTH\n         BCTR  R14,0                             FOR EXECUTE\n         EX    R14,FROM_MVC\n         B     PARM0060                          CONTINUE\nFROM0010 DS    0H\n         XC    SESS_FROM_KEY,SESS_FROM_KEY       CLEAR KEY\n         MVC   COMM_INFO_01(40),0(R15)\n         TR    COMM_INFO_01(40),CHAR_TO_HEX\n         PACK  DXD_PACK+00(6),COMM_INFO_01+00(11)\n         PACK  DXD_PACK+05(6),COMM_INFO_01+10(11)\n         PACK  DXD_PACK+10(6),COMM_INFO_01+20(11)\n         PACK  DXD_PACK+15(6),COMM_INFO_01+30(11)\n         SRL   R14,1\n         ST    R14,SESS_FROMKEY_LENGTH           SET LENGTH\n         BCTR  R14,0\n         EX    R14,FROM_HEX\n         B     PARM0060\nFROM_MVC MVC   SESS_FROM_KEY(0),0(R15)\nFROM_HEX MVC   SESS_FROM_KEY(0),DXD_PACK\n* ------------------------------------------------------------------- *\n*        Process M= keyword                                           *\n* ------------------------------------------------------------------- *\nMEM0000  DS    0H\n         ITRACE ID=MEMBER\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_MEMBER\n         BO    ERR0030\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_MEMBER\n         LTR   R6,R6                             MEMBER NAME PRESENT?\n         BZ    ERR0040                           NO\n         LH    R14,NEXT.OPERAND_LENGTH\n         CH    R14,H8                            TOO LONG?\n         BH    ERR0050                           YES\n         BCTR  R14,0\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         EX    R14,MEM_MVC                       COPY MEMBER NAME\n         ITRACE ID=SET_MEM,                                            +\n               DATA1=SESS_MEMBER\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process NBR= keyword                                         *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         ITRACE ID=NUMBER\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_RECORDS\n         BO    ERR0190\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_RECORDS\n         LTR   R6,R6                             NUMBER PRESENT?\n         BZ    ERR0200                           NO\n         TM    NEXT.OPERAND_TYPE,$OPERAND_NUMERIC\n         BNO   ERR0290                           NO\n         LH    R14,NEXT.OPERAND_LENGTH\n         CH    R14,H8                            TOO MANY DIGITS?\n         BH    ERR0210                           YES\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         BCTR  R14,0\n         EX    R14,PACK_OPR\n         CVB   R0,COMM_DWORD                     CONVERT TO BINARY\n         ST    R0,SESS_NUMBER                    SET NUMBER OF RECORDS\n         ITRACE ID=SET_NBR,                                            +\n               DATA1=(SESS_NUMBER,4)\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process NOSTAE keyword                                       *\n*                                                                     *\n*    Rather than issue a \"ESTAE   0\", set a flag in the common area.  *\n*    This will allow the exit to be enabled or disabled by primary    *\n*    command area command.                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNOSTAE00 DS    0H\n         ITRACE ID=NOSTAE                        TURN OFF ESTAE EXIT\n         OI    SESS_ABEND_FLAG,$ABEND_NO_STAE\n         B     PARM0070                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process PATH= keyword                                        *\n* ------------------------------------------------------------------- *\nPATH0000 DS    0H\n         ITRACE ID=PATH\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DSN\n         BO    ERR0420\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_DD\n         BO    ERR0430\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_VOL\n         BO    ERR0440\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_MEMBER\n         BO    ERR0450\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         BO    ERR0460\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         TM    NEXT.OPERAND_TYPE,$OPERAND_PRESENT\n         BNO   ERR0470\n         LH    R14,NEXT.OPERAND_LENGTH\n         CH    R14,H256                          TOO LONG?\n         BH    ERR0480                           YES\n         MVC   SESS_PATH,COMM_BLANKS\n         XC    SESS_PATH_LENGTH,SESS_PATH_LENGTH\n         STH   R14,SESS_PATH_LENGTH+2\n         BCTR  R14,0\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         EX    R14,PATH_MVC\n         B     PARM0060\nPATH_MVC MVC   SESS_PATH(0),0(R15)\n* ------------------------------------------------------------------- *\n*        Process RBA= keyword                                         *\n* ------------------------------------------------------------------- *\nRBA0000  DS    0H\n         ITRACE ID=RBA\n         TM    SESS_USER_OPTIONS,$OPTIONS_RBA\n         BO    ERR0220\n         TM    SESS_USER_OPTIONS,$OPTIONS_FROMKEY+$OPTIONS_TOKEY\n         BNZ   ERR0230\n         OI    SESS_USER_OPTIONS,$OPTIONS_RBA\n         LTR   R6,R6                             NUMBER PRESENT?\n         BZ    ERR0240                           NO\n         TM    NEXT.OPERAND_TYPE,$OPERAND_NUMERIC\n         BNO   ERR0250                           NO\n         LH    R14,NEXT.OPERAND_LENGTH\n         CH    R14,H8                            TOO MANY DIGITS?\n         BH    ERR0260                           YES\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         BCTR  R14,0\n         EX    R14,PACK_OPR\n         CVB   R0,COMM_DWORD                     CONVERT TO BINARY\n         ST    R0,SESS_RBA                       SET RBA\n         ITRACE ID=SET_RBA,                                            +\n               DATA1=(SESS_RBA,4)\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process START= operand                                       *\n* ------------------------------------------------------------------- *\nSTART000 DS    0H\n         ITRACE ID=START\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_START\n         BO    ERR0270\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_START\n         LTR   R6,R6                             NUMBER PRESENT?\n         BZ    ERR0280                           NO\n         TM    NEXT.OPERAND_TYPE,$OPERAND_NUMERIC\n         BNO   ERR0290                           NO\n         LH    R14,NEXT.OPERAND_LENGTH\n         CH    R14,H8                            TOO MANY DIGITS?\n         BH    ERR0300                           YES\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         BCTR  R14,0\n         EX    R14,PACK_OPR\n         CVB   R1,COMM_DWORD                     CONVERT TO BINARY\n         LTR   R1,R1                             ZERO?\n         BZ    ERR0310                           YES\n         ST    R1,DATASPACE_1_FIRST_RECORD       SET FIRST RECORD\n         ITRACE ID=SET_STRT,                                           +\n               DATA1=(DATASPACE_1_FIRST_RECORD,4)\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process TOKEY= keyword                                       *\n* ------------------------------------------------------------------- *\nTO0000   DS    0H\n         ITRACE ID=TOKEY\n         TM    SESS_USER_OPTIONS,$OPTIONS_RBA\n         BO    ERR0160\n         TM    NEXT.OPERAND_TYPE,$OPERAND_PRESENT\n         BNO   ERR0170\n         LH    R14,NEXT.OPERAND_LENGTH           ENDING KEY LENGTH\n         CH    R14,H40                           TOO LONG?\n         BH    ERR0180                 YES\n         OI    SESS_USER_OPTIONS,$OPTIONS_TOKEY\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         TM    NEXT.OPERAND_TYPE,$OPERAND_HEX    IN HEX?\n         BO    TO0010                            YES\n         ST    R14,SESS_TOKEY_LENGTH             SET LENGTH\n         BCTR  R14,0                             FOR EXECUTE\n         EX    R14,TO_MVC\n         B     PARM0060                          CONTINUE\nTO0010   DS    0H\n         XC    SESS_TO_KEY,SESS_TO_KEY\n         MVC   COMM_INFO_01(40),0(R15)           COPY\n         TR    COMM_INFO_01(40),CHAR_TO_HEX      TRANSLATE\n         PACK  DXD_PACK+00(6),COMM_INFO_01+00(11)\n         PACK  DXD_PACK+05(6),COMM_INFO_01+10(11)\n         PACK  DXD_PACK+10(6),COMM_INFO_01+20(11)\n         PACK  DXD_PACK+15(6),COMM_INFO_01+30(11)\n         SRL   R14,1\n         ST    R14,SESS_TOKEY_LENGTH             SET LENGTH\n         BCTR  R14,0\n         EX    R14,TO_HEX\n         B     PARM0060\nTO_MVC   MVC   SESS_TO_KEY(0),0(R15)             COPY TO KEY\nTO_HEX   MVC   SESS_TO_KEY(0),DXD_PACK           COPY PACKED KEY\n* ------------------------------------------------------------------- *\n*        Process VOL= operand                                         *\n* ------------------------------------------------------------------- *\nVOL0000  DS    0H\n         ITRACE ID=VOL\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_VOL\n         BO    ERR0320\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_VOL\n         LTR   R6,R6                             VOLSER PRESENT?\n         BZ    ERR0330                           NO\n         CLC   NEXT.OPERAND_LENGTH,H6            CORRECT LENGTH?\n         BNE   ERR0340                           NO\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         MVC   SESS_VOLSER,0(R15)                COPY VOLSER\n         ITRACE ID=SETVOL,                                             +\n               DATA1=(SESS_VOLSER,6)\n         OI    SESS_USER_OPTIONS,$OPTIONS_VOLSER\n         B     PARM0060                          CONTINUE\n* ------------------------------------------------------------------- *\n*        Process SYSOUT OPERAND                                       *\n* ------------------------------------------------------------------- *\nSYSOUT00 DS    0H\n         ITRACE ID=SYSOUT\n         CLC   NEXT.OPERAND_LENGTH,H1            CORRECT LENGTH?\n         BNE   ERR0350                           NO\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         MVC   COMM_SYSOUT_CLASS,0(R1)           COPY SYSOUT CLASS\n         B     PARM0060\n* ------------------------------------------------------------------- *\n*        Process VTOC= keyword                                        *\n* ------------------------------------------------------------------- *\nVTOC0000 DS    0H\n         ITRACE ID=VTOC_1\n         CLC   NEXT.OPERAND_LENGTH,H6            CORRECT LENGTH?\n         BNE   ERR0360                           NO\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_VOL\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_VTOC\n         OI    SESS_USER_OPTIONS,$OPTIONS_VOLSER\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         MVC   SESS_VOLSER,0(R15)                COPY VOLSER\n         MVI   SESS_DSN,X'04'\n         MVC   SESS_DSN+1(L'SESS_DSN-1),SESS_DSN\n         B     PARM0060\n* ------------------------------------------------------------------- *\n*        Process RAWVTOC= keyword                                     *\n* ------------------------------------------------------------------- *\nRVTOC000 DS    0H\n         ITRACE ID=RAWVTOC1\n         CLC   NEXT.OPERAND_LENGTH,H6            CORRECT LENGTH?\n         BNE   ERR0370                           NO\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_VOL\n         OI    SESS_KEYWORD_FLAGS_2,$KEYWORD_RAWVTOC\n         OI    SESS_USER_OPTIONS,$OPTIONS_VOLSER\n         ICM   R15,15,NEXT.OPERAND_ADDRESS\n         MVC   SESS_VOLSER,0(R15)                COPY VOLSER\n         MVI   SESS_DSN,X'04'\n         MVC   SESS_DSN+1(L'SESS_DSN-1),SESS_DSN\n         B     PARM0060\n         DROP  NEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                   PARSE FAILED\n         B     ERR900\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2                   INVALID KEYWORD\n         BCTR  R5,0\n         MVC   COMM_INFO_01,COMM_BLANKS\n         EX    R5,ERR_MVC\n         B     ERR900\nERR_MVC  MVC   COMM_INFO_01(0),0(R4)\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3      DUPLICATE MEMBER KEYWORD\n         B     ERR900\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4      MEMBER NAME BLANK\n         B     ERR900\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,5      MEMBER NAME TOO LONG\n         B     ERR900\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6      DUPLICATE DD KEYWORD\n         B     ERR900\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,7      DSN AND DD ARE MUTALLY EXCLUSIVE\n         B     ERR900\nERR0080  DS    0H\n         MVI   COMM_MSG_ID+1,8      DD NAME IS BLANK\n         B     ERR900\nERR0090  DS    0H\n         MVI   COMM_MSG_ID+1,9      DD NAME IS TOO LONG\n         B     ERR900\nERR0100  DS    0H\n         MVI   COMM_MSG_ID+1,10     DUPLICATE DSN KEYWORD\n         B     ERR900\nERR0110  DS    0H\n         MVI   COMM_MSG_ID+1,11     DSN IS BLANK\n         B     ERR900\nERR0120  DS    0H\n         MVI   COMM_MSG_ID+1,12     DSN IS TOO LONG\n         B     ERR900\nERR0130  DS    0H\n         MVI   COMM_MSG_ID+1,13     FROMKEY AND RBA MUTUALLY EXCLUSIVE\n         B     ERR900\nERR0140  DS    0H\n         MVI   COMM_MSG_ID+1,14     FROMKEY IS MISSING\n         B     ERR900\nERR0150  DS    0H\n         MVI   COMM_MSG_ID+1,15     FROMKEY TOO LONG\n         B     ERR900\nERR0160  DS    0H\n         MVI   COMM_MSG_ID+1,16     TOKEY AND RBA MUTUALLY EXCLUSIVE\n         B     ERR900\nERR0170  DS    0H\n         MVI   COMM_MSG_ID+1,17     TOKEY MISSING\n         B     ERR900\nERR0180  DS    0H\n         MVI   COMM_MSG_ID+1,18     TOKEY TOO LONG\n         B     ERR900\nERR0190  DS    0H\n         MVI   COMM_MSG_ID+1,19     DUPLICATE NBR/RECORDS KEYWORD\n         B     ERR900\nERR0200  DS    0H\n         MVI   COMM_MSG_ID+1,20     NBR MISSING\n         B     ERR900\nERR0210  DS    0H\n         MVI   COMM_MSG_ID+1,21     NBR TOO LONG\n         B     ERR900\nERR0220  DS    0H\n         MVI   COMM_MSG_ID+1,22     DUPLICATE RBA KEYWORD\n         B     ERR900\nERR0230  DS    0H\n         MVI   COMM_MSG_ID+1,23     RBA AND FROMKEY/TOKEY MUTUALLY EXCL\n         B     ERR900\nERR0240  DS    0H\n         MVI   COMM_MSG_ID+1,24     RBA MISSING\n         B     ERR900\nERR0250  DS    0H\n         MVI   COMM_MSG_ID+1,25     RBA NOT NUMERIC\n         B     ERR900\nERR0260  DS    0H\n         MVI   COMM_MSG_ID+1,26     RBA TOO LONG\n         B     ERR900\nERR0270  DS    0H\n         MVI   COMM_MSG_ID+1,27     DUPLICATE START KEYWORD\n         B     ERR900\nERR0280  DS    0H\n         MVI   COMM_MSG_ID+1,28     START VALUE MISSING\n         B     ERR900\nERR0290  DS    0H\n         MVI   COMM_MSG_ID+1,29     START NOT NUMERIC\n         B     ERR900\nERR0300  DS    0H\n         MVI   COMM_MSG_ID+1,30     START VALUE TOO LONG\n         B     ERR900\nERR0310  DS    0H\n         MVI   COMM_MSG_ID+1,31     START MAY NOT BE ZERO\n         B     ERR900\nERR0320  DS    0H\n         MVI   COMM_MSG_ID+1,32     DUPLICATE VOLSER KEYWORD\n         B     ERR900\nERR0330  DS    0H\n         MVI   COMM_MSG_ID+1,33     VOLSER VALUE MISSING\n         B     ERR900\nERR0340  DS    0H\n         MVI   COMM_MSG_ID+1,34     VOLSER WRONG LENGTH\n         B     ERR900\nERR0350  DS    0H\n         MVI   COMM_MSG_ID+1,35     SYSOUT WRONG LENGTH\n         B     ERR900\nERR0360  DS    0H\n         MVI   COMM_MSG_ID+1,36     VTOC VOLSER NOT 6 CHARACTERS\n         B     ERR900\nERR0370  DS    0H\n         MVI   COMM_MSG_ID+1,37     RVTOC VOLSER NOT 6 CHARACTERS\n         B     ERR900\nERR0380  DS    0H\n         MVI   COMM_MSG_ID+1,38     DUPLICATE FORMAT\n         B     ERR900\nERR0390  DS    0H\n         MVI   COMM_MSG_ID+1,39     FORMAT NAME MISSING\n         B     ERR900\nERR0400  DS    0H\n         MVI   COMM_MSG_ID+1,40     FORMAT NAME TOO LONG\n         B     ERR900\nERR0410  DS    0H\n         MVI   COMM_MSG_ID+1,41     FORMAT NAME NOT VALID\n         B     ERR900\nERR0420  DS    0H\n         MVI   COMM_MSG_ID+1,42     PATH & DSN\n         B     ERR900\nERR0430  DS    0H\n         MVI   COMM_MSG_ID+1,43     PATH & DD\n         B     ERR900\nERR0440  DS    0H\n         MVI   COMM_MSG_ID+1,44     PATH & VOLSER\n         B     ERR900\nERR0450  DS    0H\n         MVI   COMM_MSG_ID+1,45     PATH & MEMBER\n         B     ERR900\nERR0460  DS    0H\n         MVI   COMM_MSG_ID+1,46     DUPLICATE PATH\n         B     ERR900\nERR0470  DS    0H\n         MVI   COMM_MSG_ID+1,47     PATH MISSING\n         B     ERR900\nERR0480  DS    0H\n         MVI   COMM_MSG_ID+1,48     PATH TOO LONG\n         B     ERR900\nERR0490  DS    0H\n         MVI   COMM_MSG_ID+1,49     PARMS USED WITH \"ACT\"\nERR900   DS    0H\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         LA    R3,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)\n         L     R14,12(,R13)         RESTORE R14\n         LR    R15,R3               SET RETURN CODE\n         LM    R0,R12,20(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                  EXIT\n* ------------------------------------------------------------------- *\nKEY_CLC     CLC   KEYWORD_KEYWORD(0),0(R4)\nDD_MVC      MVC   SESS_DD(0),0(15)\nMEM_MVC     MVC   SESS_MEMBER(0),0(R15)\nMVC_PREFIX  MVC   SESS_DSN(0),COMM_USER\nDSN_MVC     MVC   0(0,R1),0(R15)\nPACK_OPR    PACK  COMM_DWORD,0(0,R15)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START   DC   Q(DXDPARMS)  DISPLACEMENT TO WORK AREA\n\nH1          DC   H'1'\nH2          DC   H'2'\nH4          DC   H'4'\nH6          DC   H'6'\nH7          DC   H'7'\nH8          DC   H'8'\nH40         DC   H'40'\nH44         DC   H'44'\nH256        DC   H'256'\n\nCHAR_TO_HEX EQU  *-C'A'\n            DC     X'0A0B0C0D0E0F000000000000000000'\n            DC   X'00000000000000000000000000000000'\n            DC   X'00000000000000000000000000000000'\n            DC   X'00010203040506070809000000000000'\n\nEDIT            DC   CL8'EDIT    '\nOSACT           DC   CL8'OSACT'\nMODULE_OSFORMAT DC   CL8'OSFORMAT'\nSTORAGE         DC   C'STORAGE'\nVTOC            DC   C'VTOC'\n\nKEYWORDS    DS  0C\n            KEYDEF 'ABEND',ABEND000\n            KEYDEF 'ACT',ACT0000\n            KEYDEF 'ASCII',ASCII000\n            KEYDEF 'DUMPDATA',DUMP0000\n            KEYDEF 'DD=',DD0000\n            KEYDEF 'DSN=',DSN0000\n            KEYDEF 'F=',FMAT0000\n            KEYDEF 'OSEDIT',OSE0000\n            KEYDEF 'OSE',OSE0000\n            KEYDEF 'OSMAIN',OS0000\n            KEYDEF 'OS',OS0000\n            KEYDEF 'FORMAT=',FMAT0000\n            KEYDEF 'FROMKEY=',FROM0000\n            KEYDEF 'M=',MEM0000\n            KEYDEF 'MEM=',MEM0000\n            KEYDEF 'MEMBER=',MEM0000\n            KEYDEF 'NBR=',NBR0000\n            KEYDEF 'NOSTAE',NOSTAE00\n            KEYDEF 'P=',PATH0000\n            KEYDEF 'PATH=',PATH0000\n            KEYDEF 'RBA=',RBA0000\n            KEYDEF 'RECS=',NBR0000\n            KEYDEF 'RECORDS=',NBR0000\n            KEYDEF 'RAWVTOC',DSN0060\n            KEYDEF 'RAWVTOC=',RVTOC000\n            KEYDEF 'START=',START000\n            KEYDEF 'SYSOUT=',SYSOUT00\n            KEYDEF 'TOKEY=',TO0000\n            KEYDEF 'V=',VOL0000\n            KEYDEF 'VOL=',VOL0000\n            KEYDEF 'VOLSER=',VOL0000\n            KEYDEF 'VTOC',DSN0050\n            KEYDEF 'VTOC=',VTOC0000\n            KEYDEF 'VTOCRAW=',RVTOC000\n            DC  X'FF'\n\n            LTORG\n\nPARMSEND    EQU    *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDPARMS    DSECT\n            COPY     DXDPREF\n\nDXD_PACK    DS       CL42\n\n            FMATREQ  DSECT=NO\n            LOADREQ  DSECT=NO\n            PARSEREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            PARMSREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nKEYWORD           DSECT\nKEYWORD_KEYWORD   DS       CL8\nKEYWORD_LENGTH    DS       XL2\nKEYWORD_LINK      DS       XL4\nKEYWORD_L         EQU      *-KEYWORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSPARMS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSPARSE": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00R\\x01\\t!\\x0f\\x01\\t3O\\t7\\x01\\x93\\x01\\x90\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-11-30T09:37:52", "lines": 403, "newlines": 400, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*         Parse commands and operands                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSPARSE  CSECT\nOSPARSE  AMODE 31\nOSPARSE  RMODE ANY\n         USING OSPARSE,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSPARSE'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(PARSEEND-OSPARSE)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSPARSE,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDPARSE,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         LR    R8,R1                          PARAMETERS\n         USING PARSEREQ,R8\n         MVC   DXD_COMMAND,COMM_BLANKS        INITIALIZE WORK AREA\n         MVI   DXD_FLAGS,0                    RESET FLAGS\n* ------------------------------------------------------------------- *\n*        Initialize output                                            *\n* ------------------------------------------------------------------- *\n         LH    R1,PARSE_OPERANDS_NBR          MAX OPERANDS\n         L     R4,PARSE_OPERANDS              1ST OPERAND\n         USING OPERAND,R4                     DEFINE BASE\nINIT0010 DS    0H\n         XC    OPERAND(OPERAND_L),OPERAND\n         LA    R4,OPERAND_L(,R4)\n         BCT   R1,INIT0010\n         XC    PARSE_OPERANDS_NBR,PARSE_OPERANDS_NBR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,PARSE_COMMAND               COMMAND ADDRESS\n         LH    R5,PARSE_LENGTH                COMMAND LENGTH\n         ITRACE ID=CMD,                                                +\n               RDATA1=R6,                                              +\n               RDATA2=R5\n         LTR   R5,R5                          ZERO?\n         BZ    ERR0100                        YES\n         CH    R5,H80                         TOO LONG?\n         BNH   PARS0010                       NO\n         LH    R5,H80                         LIMIT TO 80\nPARS0010 DS    0H\n         LR    R1,R5\n         BCTR  R1,0                           FOR EXECUTE\n         EX    R1,COPY_CMD                    COPY COMMAND TO WORK AREA\n* ------------------------------------------------------------------- *\n*        \"squeeze off\" leading blanks                                 *\n* ------------------------------------------------------------------- *\n         LA    R1,DXD_COMMAND                 FIRST BYTE OF COMMAND\n         LR    R2,R5                          MAXIMUM LENGTH\nPARS0020 DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BNE   PARS0030                       NO\n         MVC   DXD_COMMAND(L'DXD_COMMAND-1),DXD_COMMAND+1\n         MVI   DXD_COMMAND+(L'DXD_COMMAND-1),C' '\n         BCT   R2,PARS0020                    LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARS0030 DS    0H\n         CLI   DXD_COMMAND,C'='               START WITH AN EQUAL SIGN?\n         BE    ERR0090                        YES.. NOT VALID\n* ------------------------------------------------------------------- *\n*        Remove Consecutive blanks                                    *\n* ------------------------------------------------------------------- *\n         LA    R1,DXD_COMMAND\n         LA    R2,80\nPARS0040 DS    0H\n         CLC   0(2,R1),COMM_BLANKS            TWO CONSECUTIVE BLANKS?\n         BNE   PARS0050                       NO\n         MVC   0(80,R1),1(R1)                 SHIFT OUT 1 BLANK\n         MVI   80(R1),C' '                    FORCE A BLANK\n         B     PARS0060\nPARS0050 DS    0H\n         LA    R1,1(,R1)                      NEXT\nPARS0060 DS    0H\n         BCT   R2,PARS0040\n* ------------------------------------------------------------------- *\n*        Remove blanks before and/or after equal signs                *\n* ------------------------------------------------------------------- *\n         LA    R1,DXD_COMMAND\n         LA    R2,80\nPARS0070 DS    0H\n         CLC   =C' =',0(R1)                   BLANK AND EQUAL SIGN?\n         BE    PARS0080                       YES\n         CLC   =C'= ',0(R1)                   EQUAL SIGN AND A BLANK?\n         BNE   PARS0100                       NO\n         MVC   1(80,R1),2(R1)                 SHIFT OUT BLANK\n         B     PARS0090\nPARS0080 DS    0H\n         MVC   0(80,R1),1(R1)                 SHIFT OUT BLANK\nPARS0090 DS    0H\n         MVI   80(R1),C' '                    FORCE A BLANK\n         B     PARS0110\nPARS0100 DS    0H\n         LA    R1,1(,R1)                      NEXT\nPARS0110 DS    0H\n         BCT   R2,PARS0070                    LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R4,PARSE_OPERANDS              COMMAND TO BE PARSED\n         USING OPERAND,R4                     DEFINE BASE\n         LA    R6,DXD_COMMAND                 FIRST CHARACTER\n         B     PARS0130\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARS0120 DS    0H\n         BAL   R9,PARS1000                    FIND A NON-BLANK\nPARS0130 DS    0H\n         ST    R6,DXD_OPERAND_ADDRESS         SAVE ADDRESS\n         BAL   R9,PARS2000                    FIND BLANK OR EQUAL SIGN\n         LTR   R1,R1                          ANY DATA FOUND?\n         BZ    EXIT0000                       NO\n         L     R15,DXD_OPERAND_END            END OF OPERAND\n         TM    DXD_FLAGS,$DXD_EQUAL           END WITH EQUAL SIGN?\n         BNO   PARS0140                       NO\n         CLI   0(R15),C'='                    THIS END WITH EQUAL SIGN?\n         BE    ERR0110                        YES\nPARS0140 DS    0H\n         CLI   0(R15),C'='                    END WITH EQUAL SIGN?\n         BE    PARS0150                       YES\n         NI    DXD_FLAGS,255-$DXD_EQUAL       RESET INDICATOR\n         B     PARS0160\nPARS0150 DS    0H\n         OI    DXD_FLAGS,$DXD_EQUAL           SET FLAG\nPARS0160 DS    0H\n         MVI   OPERAND_TYPE,$OPERAND_PRESENT  INDICATE PRESENCE\n         MVC   OPERAND_ADDRESS,DXD_OPERAND_ADDRESS\n         STCM  R1,3,OPERAND_LENGTH            SET LENGTH\n         SR    R14,R14                        CLEAR REGISTER\n         ICM   R14,3,PARSE_OPERANDS_NBR       NUMBER OF OPERANDS SO FAR\n         LA    R14,1(,R14)                    ADD 1\n         STCM  R14,3,PARSE_OPERANDS_NBR       SAVE TOTAL\n         ICM   R3,15,OPERAND_ADDRESS\n         CLI   0(R3),C'/'                     UNIX PATH?\n         BE    PARS0200                       YES\n         BCTR  R1,R0                          FOR EXECUTE\n         TM    COMM_FLAGS,$COMM_NO_UPPER      NO UPPER CASE ON?\n         BO    PARS0170                       YES\n         ITRACE ID=UPPER,                                              +\n               RDATA1=R3,                                              +\n               RDATA2=R1\n         EX    R1,CASE_OC                     TRANSLATE TO UPPER CASE\nPARS0170 DS    0H\n         EX    R1,NBR_TRT                     NUMERIC?\n         BNZ   PARS0180                       NO\n         OI    OPERAND_TYPE,$OPERAND_NUMERIC\n         B     PARS0200\nPARS0180 DS    0H\n         ICM   R1,3,OPERAND_LENGTH            OPERAND LENGTH\n         L     R15,DXD_OPERAND_END            OPERAND'S ENDING ADDRESS\n         CLC   =C'X''',0(R3)                  HEX STRING (X'....')?\n         BNE   PARS0190                       NO\n         CLI   0(R15),C''''                   ENDING QUOTE PRESENT?\n         BNE   ERR0010                        NO.. INVALID\n         TM    OPERAND_LENGTH+1,X'01'         LENGTH ODD NOW?\n         BNO   ERR0020                        NO.. INVALID\n         SH    R1,H3                          MINUS LENGTH OF DELIMITER\n         BNH   ERR0030                        INVALID\n         STCM  R1,3,OPERAND_LENGTH            OPERAND LENGTH\n         LA    R3,2(R3)                       DATA FOLLOWING OPENING X'\n         BCTR  R1,R0                          FOR EXECUTE\n         EX    R1,HEX_TRT                     VALID HEX?\n         BNZ   ERR0040                        NO.. INVALID\n         ITRACE ID=HEX,                                                +\n               RDATA1=R3,                                              +\n               DATA2=(OPERAND_LENGTH,2)\n         STCM  R3,15,OPERAND_ADDRESS          SET OPERAND ADDRESS\n         OI    OPERAND_TYPE,$OPERAND_HEX\n         B     PARS0200\nPARS0190 DS    0H\n         CLI   0(R3),C''''                    OPENING QUOTE\n         BNE   PARS0200                       NO\n         CLI   0(R15),C''''                   ENDING QUOTE PRESENT?\n         BNE   ERR0050                        NO.. INVALID\n         LA    R3,1(R3)                       DATA FOLLOWING QUOTE\n         SH    R1,H2                          LENGTH WITHOUT QUOTES\n         BNH   ERR0060\n         STCM  R3,15,OPERAND_ADDRESS\n         STCM  R1,3,OPERAND_LENGTH            SET LENGTH\n         OI    OPERAND_TYPE,$OPERAND_QUOTED\nPARS0200 DS    0H\n         LA    R4,OPERAND_L(,R4)              NEXT OPERAND OUTPUT\n         LTR   R5,R5\n         BZ    EXIT0000\n         B     PARS0120                       LOOP\n* ------------------------------------------------------------------- *\n*        FIND NON-BLANK                                               *\n* ------------------------------------------------------------------- *\nPARS1000 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BNER  R9                             NO\n         LA    R6,1(,R6)                      NEXT\n         BCT   R5,PARS1000                    LOOP\n         TM    DXD_FLAGS,$DXD_EQUAL           LAST END WITH EQUAL SIGN?\n         BO    ERR0070                        YES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        FIND BLANK OR EQUAL SIGN                                     *\n* ------------------------------------------------------------------- *\nPARS2000 DS    0H\n         SR    R1,R1                          INITIALIZE LENGTH\nPARS2010 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BER   R9                             YES\n         CLI   0(R6),C'='                     EQUAL SIGN\n         BNE   PARS2020                       NO\n         CLI   1(R6),C'='                     TWO EQUAL SIGNS?\n         BE    ERR0080                        YES.. BAD NEWS\n         OI    DXD_FLAGS,$DXD_EQUAL           SET FLAG\n         LA    R1,1(,R1)                      ADD 1 TO LENGTH\n         LA    R6,1(,R6)                      SKIP OVER EQUAL SIGN\n         ST    R6,DXD_OPERAND_END             SAVE END OF OPERAND\n         BCTR  R5,0                           MINUS 1 REMAINING\n         BR    R9                             OTHERWIZE END OF OPERAND\nPARS2020 DS    0H\n         ST    R6,DXD_OPERAND_END\n         LA    R1,1(,R1)                      ADD 1 TO LENGTH\n         LA    R6,1(,R6)                      ADD 1 TO ADDRESS\n         BCT   R5,PARS2010                    LOOP\n         BR    R9                             END OF DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         LA    R2,1\n         B     ERR1000\nERR0020  DS    0H\n         LA    R2,2\n         B     ERR1000\nERR0030  DS    0H\n         LA    R2,3\n         B     ERR1000\nERR0040  DS    0H\n         LA    R2,4\n         B     ERR1000\nERR0050  DS    0H\n         LA    R2,5\n         B     ERR1000\nERR0060  DS    0H\n         LA    R2,6\n         B     ERR1000\nERR0070  DS    0H\n         LA    R2,7\n         B     ERR1000\nERR0080  DS    0H\n         LA    R2,8\n         B     ERR1000\nERR0090  DS    0H\n         LA    R2,9\n         B     ERR1000\nERR0100  DS    0H\n         LA    R2,10\n         B     ERR1000\nERR0110  DS    0H\n         LA    R2,11\nERR1000  DS    0H\n         ITRACE ID=ERROR,                                              +\n               DATA1=(COMM_MSG_ID,2)\n         STCM  R2,3,COMM_MSG_ID\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(,R13)\n         L     R14,12(,R13)\n         LR    R15,R2\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOPY_CMD MVC   DXD_COMMAND(0),0(R6)   COPY COMMAND TO WORK AREA\nCASE_OC  OC    0(0,R3),COMM_BLANKS    'TRANSLATE' TO UPPERCASE\nNBR_TRT  TRT   0(0,R3),NUMERICS       CHECK FOR NUMERIC OPERAND\nHEX_TRT  TRT   0(0,R3),HEX            CHECK FOR HEX OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC    Q(DXDPARSE)\nH2                   DC    H'2'\nH3                   DC    H'3'\nH80                  DC    H'80'\n\nNUMERICS             DC    256X'FF'\n                     ORG   NUMERICS+C'0'\n                     DC    10X'00'\n                     ORG\n\nHEX                  DC    256X'FF'\n                     ORG   HEX+C'A'\n                     DC    6X'00'\n                     ORG   HEX+C'0'\n                     DC    10X'00'\n                     ORG\n\nMSG01      DS  0C\n           DC  CL11'OSPARSE01E'\n           DC  C'No ending quote on hex parameter'\nMSG01L     EQU *-MSG01\n\nMSG02      DS  0C\n           DC  CL11'OSPARSE02E'\n           DC  C'Hex string has odd number of digits'\nMSG02L     EQU *-MSG02\n\nMSG03      DS  0C\n           DC  CL11'OSPARSE03E'\n           DC  C'Hex string has no digits'\nMSG03L     EQU *-MSG03\n\nMSG04      DS  0C\n           DC  CL11'OSPARSE04E'\n           DC  C'Hex string contains non-hex digit(s)'\nMSG04L     EQU *-MSG04\n\nMSG05      DS  0C\n           DC  CL11'OSPARSE05E'\n           DC  C'No ending quote'\nMSG05L     EQU *-MSG05\n\nMSG06      DS  0C\n           DC  CL11'OSPARSE06E'\n           DC  C'Quoted string with zero length found'\nMSG06L     EQU *-MSG06\n\nMSG07      DS  0C\n           DC  CL11'OSPARSE07E'\n           DC  C'Two consecutive equal signs (=) found'\nMSG07L     EQU *-MSG07\n\nMSG08      DS  0C\n           DC  CL11'OSPARSE08E'\n           DC  C'Leading equal sign not allowed'\nMSG08L     EQU *-MSG08\n\nPARSEEND   EQU *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDPARSE             DSECT\n                     COPY   DXDPREF\nDXD_OPERAND_ADDRESS  DS     A\nDXD_OPERAND_END      DS     A\nDXD_FLAGS            DS     X\n$DXD_EQUAL           EQU    X'80'     .. LAST OPERAND ENDED EQUAL SIGN\nDXD_COMMAND          DS     CL160\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         PARSEREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSPARSE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSPROF": {"ttr": 18190, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00E\\x01\\t!\\x0f\\x01\\x10\\x02o\\x15T\\x01\\xfb\\x02\\x02\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-26T15:54:45", "lines": 507, "newlines": 514, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSPROF                                                *\n*                                                                     *\n*  Read or write profile information                                  *\n*                                                                     *\n*                                                                     *\n*  This program either reads information from the user's profile      *\n*  or saves information to the profile.                               *\n*                                                                     *\n*  It is linked separately and dynamically loaded because some of     *\n*  the I/O control blocks are still required to be below the 24-bit   *\n*  line.  It was just less hassle to put the whole thing below        *\n*  the line.                                                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSPROF   CSECT\nOSPROF   AMODE 31\nOSPROF   RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSPROF,R15\n         B     INIT0000\nMODID    DC    CL8'OSPROF'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(PROFEND-OSPROF)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT ADDR\n         DROP  R15\n         USING OSPROF,R10                     DEFINE BASE\n         LR    R8,R1                          SAVE PARM BLOCK ADDRESS\n         USING PROFREQ,R8                     DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSPROF_WORK_L,                                       +\n               LOC=BELOW\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSPROF_WORK,R13\n         MVC   DXD_CSECT,MODID                COPY CSECT NAME\n         USING IHADCB,WORK_DCB\n         L     R9,COMM_OSSPFD                 OSSPFD ADDRESS\n         USING OSSPFD,R9                      DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R8\n         MVI   PROF_RC,$PROF_OK               ASSUME THE BEST\n* ------------------------------------------------------------------- *\n*        Locate the ISPPROF DD                                        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCANTIOT\n         USING PSA,R0                         DEFINE BASE\n         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA\n         USING TCB,R1                         DEFINE TCB BASE\n         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB\n         USING TIOT1,R2                       DEFINE TIOT BASE\n         LA    R3,TIOENTRY                    FIRST TIOT ENTRY\n         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE\nINIT0010 DS    0H\n         SR    R4,R4                          CLEAR FOR LENGTHS\n         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY\n         BZ    ERR0010                        NOT FOUND\n         CLC   TIOEDDNM,ISPPROF_DD            PROFILE DD FOUND?\n         BE    INIT0020                       YES\n         AR    R3,R4                          NEXT ENTRY\n         B     INIT0010                       LOOP\n* ------------------------------------------------------------------- *\n*        Profile DD found                                             *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         ITRACE ID=DD_FND,                                             +\n               RDATA1=R3\n* ------------------------------------------------------------------- *\n*        Get profile DSN from JFCB                                    *\n* ------------------------------------------------------------------- *\n         LA    R5,WORK_EPA\n         ST    R5,WORK_SWEPAPTR\n         USING ZB505,R5\n         XC    SWAEPAX,SWAEPAX\n         MVC   SWVA,TIOEJFCB\n         ITRACE ID=SWAREQ,                                             +\n               DATA1=(WORK_SWEPAPTR,4)\n         SWAREQ FCODE=RL,                                              +\n               EPA=WORK_SWEPAPTR,                                      +\n               UNAUTH=YES,                                             +\n               MF=(E,WORK_SWAPARMS)\n         L     R1,SWBLKPTR\n         USING JFCB,R1                        DEFINE BASE\n         ITRACE ID=JFCB,                                               +\n               RDATA1=R1\n         MVC   DAIR_DSN,JFCBDSNM              COPY PROFILE DSN\n         MVC   DAIR_DD,OSPROF_DD              SET DD NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   PROF_FUNC,$PROF_READ           READ  PROFILE INFO?\n         BE    PROF0100                       YES\n         CLI   PROF_FUNC,$PROF_WRITE          WRITE PROFILE INFO?\n         BE    PROF1000                       YES\n         DC    H'0'                           SHOULD NEVER GET HERE\n* ------------------------------------------------------------------- *\n*        Read profile data                                            *\n* ------------------------------------------------------------------- *\nPROF0100 DS    0H\n         ITRACE ID=READ\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         MVI   DAIR_OPTS,$DAIR_USE_DD\n         MVC   DAIR_MEMBER,COMM_BLANKS        PDS, NOT A MEMBER\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVC   DAIR_UNIT,COMM_BLANKS\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         BAL   R7,DAIR0000                    ALLOCATE PROFILE DATA SET\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   EXIT0000                       NO..\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         ITRACE ID=OPEN_DIR\n         MVC   WORK_DCB(DIRDCB_L),DIRDCB\n         OPEN  WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         ITRACE ID=FIND\n         FIND  WORK_DCB,                                               +\n               PROFILE_NAME,                                           +\n               D\n         LR    R2,R15\n         ITRACE ID=FIND_RC,                                            +\n               RDATA1=R2\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         CLOSE WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL WORK_DCB\n         MVI   DAIR_FUNC,$DAIR_FREE\n         BAL   R7,DAIR0000                      FREE THE DATA SET\n         LTR   R2,R2                            MEMBER FOUND?\n         BNZ   EXIT0000                         NO\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         MVC   DAIR_MEMBER,PROFILE_NAME\n         BAL   R7,DAIR0000                      ALLOCATE WITH MEMBER\n         MVC   WORK_DCB(READDCB_L),READDCB\n         MVC   WORK_DCBE(DCBE_L),DCBE_I\n         LA    R1,WORK_DCBE\n         STCM  R1,7,DCBDCBE\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         OPEN  WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\nPROF0110 DS    0H\n         ITRACE ID=GET_PROF\n         GET   WORK_DCB,WORK_IO_AREA\n         ITRACE ID=PROF_REC,                                           +\n               DATA1=WORK_IO_AREA+0,                                   +\n               DATA2=WORK_IO_AREA+8\n         CLC   WORK_TYPE,TYPE_LANGUAGE        LANGUAGE?\n         BE    PROF0130                       YES\n         CLC   WORK_TYPE,TYPE_ODSN            OUTPUT DSN?\n         BE    PROF0150                       YES\n         CLC   WORK_TYPE,TYPE_ODISP           OUTPUT DISP?\n         BE    PROF0160                       YES\n         CLC   WORK_TYPE,TYPE_OUNIT           OUTPUT UNIT?\n         BE    PROF0170                       YES\n         CLC   WORK_TYPE,TYPE_OVOLSER         OUTPUT VOLSER?\n         BE    PROF0180                       YES\n         CLC   WORK_TYPE,TYPE_OPRI            OUTPUT PRIMARY SPACE?\n         BE    PROF0190                       YES\n         CLC   WORK_TYPE,TYPE_OSEC            OUTPUT SECONDARY SPACE?\n         BE    PROF0200                       YES\n         CLC   WORK_TYPE,TYPE_SEP1            MEMBER SEPARATOR 1?\n         BE    PROF0210                       YES\n         CLC   WORK_TYPE,TYPE_SEP2            MEMBER SEPARATOR 2?\n         BE    PROF0220                       YES\n         CLC   WORK_TYPE,TYPE_SEP3            MEMBER SEPARATOR 3?\n         BE    PROF0230                       YES\n         CLC   WORK_TYPE,TYPE_SEP4            MEMBER SEPARATOR 4?\n         BE    PROF0240                       YES\n         CLC   WORK_TYPE,TYPE_SEP5            MEMBER SEPARATOR 5?\n         BE    PROF0250                       YES\n         CLC   WORK_TYPE,TYPE_SEP6            MEMBER SEPARATOR 6?\n         BE    PROF0260                       YES\n         ITRACE ID=UNKNOWN                    UNKNOWN RECORD IN PROFILE\n         B     PROF0110\nPROF0130 DS    0H\n         ITRACE ID=LANGUAGE,                                           +\n               DATA1=COMM_NATIONAL_LANGUAGE,                           +\n               DATA2=WORK_DATA\n         CLC   COMM_NATIONAL_LANGUAGE,WORK_DATA\n         BE    PROF0110                       SAME LANGUAGE\n         MVI   LANG_FUNC,$LANG_LOOKUP         SET FUNCTION\n         MVC   LANG_NAME,WORK_DATA            SET LANGUAGE NAME\n         LOAD  EP=OSLANG                      LOAD OSLANG\n         LR    R15,R0                         COPY OSLANG ENTRY POINT\n         LA    R1,LANGREQ                     PARAMETER BLOCK\n         ITRACE ID=OSLANG,                                             +\n               RDATA1=R1,                                              +\n               DATA2=LANG_NAME\n         BALR  R14,R15                        LOOKUP THE LANGUAGE\n         DELETE EP=OSLANG                     DELETE OSLANG\n         CLI   LANG_RC,$LANG_OK               SUCCESSFUL?\n         BNE   ERR0030                        NO\n         ITRACE ID=CHG_LANG                   CHANGING LANGUAGE MODULES\n         CLC   COMM_NATIONAL_LANGUAGE,COMM_BLANKS\n         BE    PROF0140                       NO LANGUAGE SET SO FAR\n         DELETE EPLOC=COMM_LANGUAGE_MODULE\nPROF0140 DS    0H\n         MVC   COMM_NATIONAL_LANGUAGE,LANG_NAME\n         MVC   COMM_LANGUAGE_MODULE,LANG_MODULE\n         LOAD  EPLOC=COMM_LANGUAGE_MODULE\n         ST    R0,COMM_MESSAGE_TABLE          SET MESSAGE TABLE ADDRESS\n         B     PROF0110                       READ NEXT RECORD\nPROF0150 DS    0H\n         ITRACE ID=ODSN\n         MVC   SPF_OUTPUT_DSN,WORK_DATA       COPY DATA SET NAME\n         B     PROF0110\nPROF0160 DS    0H\n         ITRACE ID=ODISP\n         MVC   SPF_OUTPUT_DISP,WORK_DATA\n         B     PROF0110\nPROF0170 DS    0H\n         ITRACE ID=OUNIT\n         MVC   SPF_OUTPUT_UNIT,WORK_DATA\n         B     PROF0110\nPROF0180 DS    0H\n         ITRACE ID=OVOLSER\n         MVC   SPF_OUTPUT_VOLSER,WORK_DATA\n         B     PROF0110\nPROF0190 DS    0H\n         ITRACE ID=OPRI\n         MVC   SPF_OUTPUT_SPACE_PRI,WORK_DATA\n         B     PROF0110\nPROF0200 DS    0H\n         ITRACE ID=OSEC\n         MVC   SPF_OUTPUT_SPACE_SEC,WORK_DATA\n         B     PROF0110\nPROF0210 DS    0H\n         ITRACE ID=SEP1\n         MVC   SPF_SEPARATOR_1,WORK_DATA\n         B     PROF0110\nPROF0220 DS    0H\n         ITRACE ID=SEP2\n         MVC   SPF_SEPARATOR_2,WORK_DATA\n         B     PROF0110\nPROF0230 DS    0H\n         ITRACE ID=SEP3\n         MVC   SPF_SEPARATOR_3,WORK_DATA\n         B     PROF0110\nPROF0240 DS    0H\n         ITRACE ID=SEP4\n         MVC   SPF_SEPARATOR_4,WORK_DATA\n         B     PROF0110\nPROF0250 DS    0H\n         ITRACE ID=SEP5\n         MVC   SPF_SEPARATOR_5,WORK_DATA\n         B     PROF0110\nPROF0260 DS    0H\n         ITRACE ID=SEP6\n         MVC   SPF_SEPARATOR_6,WORK_DATA\n         B     PROF0110\nPROF0500 DS    0H\n         ITRACE ID=PROF_EOF\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         CLOSE WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         FREEPOOL WORK_DCB\n         MVI   DAIR_FUNC,$DAIR_FREE\n         BAL   R7,DAIR0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROF1000 DS    0H\n         ITRACE ID=WRITE\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         MVI   DAIR_OPTS,$DAIR_USE_DD\n         MVC   DAIR_MEMBER,PROFILE_NAME\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVC   DAIR_UNIT,COMM_BLANKS\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         BAL   R7,DAIR0000\n         OC    DAIR_R15,DAIR_R15\n         BNZ   EXIT0000\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         ITRACE ID=OPEN_DIR\n         MVC   WORK_DCB(WRTDCB_L),WRTDCB\n         OPEN  (WORK_DCB,OUTPUT),                                      +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_TYPE,TYPE_LANGUAGE\n         MVC   WORK_DATA(L'COMM_NATIONAL_LANGUAGE),COMM_NATIONAL_LANGUA+\n               GE\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_TYPE,TYPE_ODSN\n         MVC   WORK_DATA(L'SPF_OUTPUT_DSN),SPF_OUTPUT_DSN\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_ODISP\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_DATA(L'SPF_OUTPUT_DISP),SPF_OUTPUT_DISP\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_OUNIT\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_DATA(L'SPF_OUTPUT_UNIT),SPF_OUTPUT_UNIT\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_OVOLSER\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_DATA(L'SPF_OUTPUT_VOLSER),SPF_OUTPUT_VOLSER\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_OPRI\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_DATA(L'SPF_OUTPUT_SPACE_PRI),SPF_OUTPUT_SPACE_PRI\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_OSEC\n         MVC   WORK_DATA,COMM_BLANKS\n         MVC   WORK_DATA(L'SPF_OUTPUT_SPACE_SEC),SPF_OUTPUT_SPACE_SEC\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_SEP1\n         MVC   WORK_DATA,SPF_SEPARATOR_1\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_SEP2\n         MVC   WORK_DATA,SPF_SEPARATOR_2\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_SEP3\n         MVC   WORK_DATA,SPF_SEPARATOR_3\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_SEP4\n         MVC   WORK_DATA,SPF_SEPARATOR_4\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_SEP5\n         MVC   WORK_DATA,SPF_SEPARATOR_5\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_TYPE,TYPE_SEP6\n         MVC   WORK_DATA,SPF_SEPARATOR_6\n         PUT   WORK_DCB,WORK_IO_AREA\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLOSE\n         CLOSE (WORK_DCB),                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n*        ITRACE ID=FREEPOOL\n*        FREEPOOL WORK_DCB\n         MVI   DAIR_FUNC,$DAIR_FREE\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=DAIR_DD\n         BAL   R7,DAIR0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0000 DS    0H\n         LA    R1,DAIRREQ                     ALLOCATION PARAMETERS\n         ITRACE ID=CALLDAIR,                                           +\n               RDATA1=R1\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        LINK TO OSDAIR\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=(DAIR_R15,2)\n         BR    R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NO_PROF\n         MVI   PROF_RC,$PROF_NO_PROFILE\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=BAD_LANG,                                           +\n               RDATA1=R1,                                              +\n               DATA2=LANG_NAME\n         DC    H'0'\n         ABEND 3,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSPROF_WORK_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIRDCB   DCB   DSORG=PO,                                               +\n               DDNAME=OSPROF,                                          +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=R\nDIRDCB_L       EQU   *-DIRDCB\nREADDCB  DCB   DSORG=PS,                                               +\n               DDNAME=OSPROF,                                          +\n               DCBE=*,                                                 +\n               EODAD=PROF0500,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=GM\nREADDCB_L      EQU   *-READDCB\nWRTDCB   DCB   DSORG=PS,                                               +\n               DDNAME=OSPROF,                                          +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=PM\nWRTDCB_L       EQU  *-WRTDCB\nDCBE_I   DCBE  RMODE31=BUFF\nDCBE_L   EQU   *-DCBE_I\nOPEN_I   OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU   *-CLOSE_I\n\nSWAPARMS_I     SWAREQ MF=L\nSWAPARMS_L     EQU   *-SWAPARMS_I\n\nH24            DC    H'24'\nISPPROF_DD     DC    CL8'ISPPROF'\nOSPROF_DD      DC    CL8'OSPROF'\nPROFILE_NAME   DC    CL8'$$OS'\nTYPE_LANGUAGE  DC    CL8'LANGUAGE'\nTYPE_ODSN      DC    CL8'ODSN'\nTYPE_ODISP     DC    CL8'ODISP'\nTYPE_OUNIT     DC    CL8'OUNIT'\nTYPE_OVOLSER   DC    CL8'OVOLSER'\nTYPE_OPRI      DC    CL8'OPRI'\nTYPE_OSEC      DC    CL8'OSEC'\nTYPE_SEP1      DC    CL8'SEP1'\nTYPE_SEP2      DC    CL8'SEP2'\nTYPE_SEP3      DC    CL8'SEP3'\nTYPE_SEP4      DC    CL8'SEP4'\nTYPE_SEP5      DC    CL8'SEP5'\nTYPE_SEP6      DC    CL8'SEP6'\n\n               LTORG\n\nPROFEND        EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSPROF_WORK      DSECT\n                 COPY  DXDPREF\nWORK_DCB         DS    0F,(READDCB_L)X\nWORK_DCBE        DS    0F,(DCBE_L)X\nWORK_OPEN        DS    0F,(OPEN_L)X\nWORK_CLOSE       DS    0F,(CLOSE_L)X\nWORK_SWAPARMS    DS    0F,(SWAPARMS_L)X\n\nWORK_SWEPAPTR    DS    A\nWORK_EPA         DS    CL28\n\nWORK_IO_AREA     DS    0C\nWORK_TYPE        DS    CL8             PROFILE DATA I/O AREA\nWORK_DATA        DS    CL72\n\nWORK_FLAGS       DS    X\n$FLAG_INIT       EQU   X'80'\n\n                 DAIRREQ DSECT=NO\n                 LANGREQ DSECT=NO\nOSPROF_WORK_L    EQU  *-OSPROF_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC CVT=YES,                                               +\n               DCBD=PS,                                                +\n               JFCB=YES,                                               +\n               PSA=YES,                                                +\n               TCB=YES,                                                +\n               TIOT=YES\n         IEFJESCT\n         IEFZB505   LOCEPAX=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         PROFREQ  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSPROF\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSPROMPT": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\t!\\x0f\\x01\\t!\\x0f\\x154\\x01X\\x01X\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-07-29T15:34:42", "lines": 344, "newlines": 344, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        PROMPT for parameters for initial or new sessions            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSPROMPT CSECT\nOSPROMPT AMODE 31\nOSPROMPT RMODE ANY\n         USING OSPROMPT,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSPROMPT'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(PROMPTEND-OSPROMPT)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSPROMPT,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDPRMPT,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         MVC   COMM_MSG_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVC   SPF_DSN,COMM_BLANKS\n         MVC   SPF_DD,COMM_BLANKS\n         MVC   SPF_MEMBER,COMM_BLANKS\n         MVC   SPF_VOLSER,COMM_BLANKS\n         MVC   SPF_FORMAT,COMM_BLANKS\n         MVC   SPF_FIRST_RECORD,COMM_BLANKS\n         MVC   SPF_RECORDS,COMM_BLANKS\n         MVC   SPF_RBA,COMM_BLANKS\n         MVC   SPF_PATH,COMM_BLANKS\nMAIN0120 DS    0H\n         MVC   SESS_DISP_PANEL,OS0000         PANEL TO DISPLAY\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         ITRACE ID=DISP\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2)\n         OC    SESS_RC,SESS_RC                RC ZERO?\n         BNZ   EXIT0000                       NO\n         OC    SPF_ZCMD,COMM_BLANKS           FORCE UPPER CASE\n         CLC   SPF_ZCMD,COMM_BLANKS           ANYTHING IN ZCMD?\n         BE    MAIN0130                       NO\n         ITRACE ID=ZCMD                       USE WHATEVER IS IN ZCMD\n         B     EXIT0000\nMAIN0130 DS    0H\n         ITRACE ID=NO_ZCMD\n         CLC   SPF_DSN,COMM_BLANKS            DATA SET NAME PRESENT?\n         BE    MAIN0170                       NO\n         CLC   SPF_DD,COMM_BLANKS             DD NAME PRESENT ALSO?\n         BNE   ERR0010                        YES\n         CLC   SPF_PATH,COMM_BLANKS           PATH PRESENT ALSO?\n         BNE   ERR0100                        YES\n         ITRACE ID=DSN\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_DSN\n         CLI   SPF_DSN,X'7D'                  OPEN QUOTE?\n         BE    MAIN0140                       YES\n         ITRACE ID=NOQUOTE\n         MVC   SESS_DSN(L'COMM_USER),COMM_USER  COPY USER ID AS PERFIX\n         LA    R1,SESS_DSN                    DATA SET NAME ADDRESS\n         AH    R1,COMM_USER_LENGTH            PLUS USER ID LENGTH\n         MVI   0(R1),C'.'                     INSERT PERIOD\n         LA    R1,1(,R1)                      NEXT BYTE\n         LA    R15,L'SESS_DSN                 LENGTH OF DSN\n         SH    R15,COMM_USER_LENGTH           MINUS LENGTH OF USER ID\n         BCTR  R15,0                          MINUS LENGTH OF PERIOD\n         BCTR  R15,0                          MINUS 1\n         EX    R15,DSN_MVC1                   COPY SPECIFIED NAME\n         B     MAIN0210\nDSN_MVC1 MVC   0(0,R1),SPF_DSN                COPY SPECIFIED NAME\nMAIN0140 DS    0H\n         ITRACE ID=QUOTED\n         LA    R1,SPF_DSN+(L'SPF_DSN-1)\n         LA    R15,L'SPF_DSN-1                LENGTH OF NAME\nMANI0150 DS    0H\n         CLI   0(R1),X'7D'                    CLOSING QUOTE?\n         BE    MAIN0160                       YES\n         BCTR  R1,0\n         BCT   R15,MANI0150\n         B     ERR0090                        NO CLOSING QUOTE\nMAIN0160 DS    0H\n         MVC   SESS_DSN,COMM_BLANKS           INITIALIZE DSN\n         BCTR  R15,0                          MINUS 1 FOR QUOTE\n         BCTR  R15,0                          FOR EX INSTRUCTION\n         EX    R15,DSN_MVC2                   COPY MINUS QUOTES\n         B     MAIN0210\nDSN_MVC2 MVC   SESS_DSN(0),SPF_DSN+1\nMAIN0170 DS    0H\n         CLC   SPF_DD,COMM_BLANKS             DD NAME PRESENT?\n         BE    MAIN0180                       NO\n         CLC   SPF_PATH,COMM_BLANKS           PATH PRESENT ALSO\n         BNE   ERR0110                        YES\n         ITRACE ID=DDNAME\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_DD\n         B     MAIN0210\nMAIN0180 DS    0H\n         NI    SESS_KEYWORD_FLAGS,255-$KEYWORD_PATH\n         CLC   SPF_PATH,COMM_BLANKS           UNIX PATH PRESENT?\n         BE    ERR0020                        NO\n         CLC   SPF_MEMBER,COMM_BLANKS\n         BNE   ERR0120                        NOT ALLOWED WITH PATH\n         CLC   SPF_VOLSER,COMM_BLANKS\n         BNE   ERR0130                        VOLSER NOT ALLOWED\n         ITRACE ID=PATH\n         MVC   SESS_PATH,SPF_PATH\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_PATH\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_HFS\n         LA    R14,SESS_PATH\n         SR    R15,R15\nMAIN0190 DS    0H\n         CLI   0(R14),C' '                    BLANK?\n         BE    MAIN0200                       YES\n         LA    R14,1(,R14)\n         LA    R15,1(,R15)\n         B     MAIN0190\nMAIN0200 DS    0H\n         ST    R15,SESS_PATH_LENGTH           SAVE PATH LENGTH\nMAIN0210 DS    0H\n         CLC   SPF_FORMAT,COMM_BLANKS\n         BE    MAIN0220\n         ITRACE ID=VFY_FMAT,                                           +\n               DATA1=SPF_FORMAT\n         MVI   LOADREQ_FUNC,$LOADREQ_LOAD\n         MVC   LOADREQ_MODULE,MODULE_OSFORMAT\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15\n         MVI   FMATREQ,$FMATREQ_VERIFY\n         MVC   FMATREQ_FORMAT,SPF_FORMAT\n         LA    R1,FMATREQ\n         ICM   R15,15,LOADREQ_EP\n         BALR  R14,R15\n         CLI   FMATREQ_RC,$FMATREQ_OK\n         BNE   ERR910\n         MVC   SESS_FORMAT,SPF_FORMAT\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\nMAIN0220 DS    0H\n         CLC   SPF_FIRST_RECORD,COMM_BLANKS\n         BE    MAIN0230\n         ITRACE ID=START,                                              +\n               DATA1=SPF_FIRST_RECORD\n         LA    R1,SPF_FIRST_RECORD\n         BAL   R8,NBR0000                     CONVERT\n         BM    ERR0040                        NOT VALID\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_START\n         ST    R1,DATASPACE_1_FIRST_RECORD\nMAIN0230 DS    0H\n         CLC   SPF_RECORDS,COMM_BLANKS\n         BE    MAIN0240\n         ITRACE ID=RECORDS,                                            +\n               DATA1=SPF_RECORDS\n         LA    R1,SPF_RECORDS\n         BAL   R8,NBR0000                     CONVERT\n         BM    ERR0050                        NOT VALID\n         OI    SESS_KEYWORD_FLAGS,$KEYWORD_RECORDS\n         ST    R1,SESS_NUMBER\nMAIN0240 DS    0H\n         CLC   SPF_RBA,COMM_BLANKS\n         BE    MAIN0250\n         CLC   SPF_FROM_KEY,COMM_BLANKS\n         BNE   ERR0060\n         CLC   SPF_TO_KEY,COMM_BLANKS\n         BNE   ERR0070\n         ITRACE ID=RECORDS,                                            +\n               DATA1=SPF_RBA\n         LA    R1,SPF_RBA\n         BAL   R8,NBR0000                     CONVERT\n         BM    ERR0080                        NOT VALID\n         OI    SESS_USER_OPTIONS,$OPTIONS_RBA\n         ST    R1,SESS_RBA\nMAIN0250 DS    0H\n         MVC   SESS_DD,SPF_DD\n         MVC   SESS_MEMBER,SPF_MEMBER\n         MVC   SESS_FORMAT,SPF_FORMAT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1\n         B     ERR900\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2\n         B     ERR900\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4\n         B     ERR900\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,5\n         B     ERR900\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6\n         B     ERR900\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,7\n         B     ERR900\nERR0080  DS    0H\n         MVI   COMM_MSG_ID+1,8\n         B     ERR900\nERR0090  DS    0H\n         MVI   COMM_MSG_ID+1,9\n         B     ERR900\nERR0100  DS    0H\n         MVI   COMM_MSG_ID+1,10\n         B     ERR900\nERR0110  DS    0H\n         MVI   COMM_MSG_ID+1,11\n         B     ERR900\nERR0120  DS    0H\n         MVI   COMM_MSG_ID+1,12\n         B     ERR900\nERR0130  DS    0H\n         MVI   COMM_MSG_ID+1,13\nERR900   DS    0H\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\nERR910   DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0120\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Convert numeric values to binary                                *\n*                                                                     *\n*                                                                     *\n*     At entry R1 is address of 10 character field to convert         *\n*              R8 return address                                      *\n*                                                                     *\n*                                                                     *\n*     At exit  R1 zero or positive, valid numeric                     *\n*              R1 negative, field was not numeric                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         MVC   DXD_NBR_IN,CHAR_ZERO            INITIALIZE WORK AREA\n         LA    R15,10                          INITIALIZE LENGTH\nNBR0010  DS    0H\n         CLI   0(R1),C' '                      BLANK?\n         BE    NBR0020                         YES\n         CLI   0(R1),C'0'                      VALID DIGIT?\n         BL    NBR0040                         NO\n         CLI   0(R1),C'9'                      STILL VALID?\n         BH    NBR0040                         NO\n         MVC   DXD_NBR_IN(L'DXD_NBR_IN-1),DXD_NBR_IN+1\n         MVC   DXD_NBR_IN+(L'DXD_NBR_IN-1)(1),0(R1)\n         LA    R1,1(,R1)                       NEXT DIGIT\n         BCT   R15,NBR0010                     LOOP\n         B     NBR0030\nNBR0020  DS    0H\n         BCTR  R15,0                           FOR EXECUTE\n         EX    R15,NBR_CLC                     REMAINING BLANKS?\n         BNE   NBR0040                         NO\nNBR0030  DS    0H\n         PACK  COMM_DWORD,DXD_NBR_IN           PACK\n         CVB   R1,COMM_DWORD                   CONVERT TO BINARY\n         BR    R8\nNBR0040  DS    0H\n         ICM   R1,15,MINUS_1                   NOT VALID\n         BR    R8\nNBR_CLC  CLC   0(0,R1),COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)\n         L     R14,12(,R13)                    RESTORE R14\n         SR    R15,R15                         SET RETURN CODE\n         LM    R0,R12,20(R13)                  RESTORE REGISTERS\n         BR    R14                             EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START       DC   Q(DXDPRMPT)\nMINUS_1         DC   F'-1'\n\nASCII           DC   CL6'ASCII'\nCHAR_ZERO       DC   10C'0'\nEDIT_WORD       DC   X'F02020202020202020202120'\nOS0000          DC   CL8'OS0000'\nMODULE_OSFORMAT DC   CL8'OSFORMAT'\n                LTORG\nPROMPTEND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDPRMPT    DSECT\n            COPY     DXDPREF\n\nDXD_FLAGS   DS       X\n$DXD_INIT   EQU      X'80'\n\nDXD_NBR_IN  DS       CL10\nDXD_NBR_OUT DS       XL12\n\n            FMATREQ  DSECT=NO\n            LOADREQ  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY     REGEQU\n            END      OSPROMPT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSRDBSAM": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x02\\x01\\t \\x9f\\x01\\t3o\\x08\\x10\\x01\\xea\\x01\\xf1\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-07-28T00:00:00", "modifydate": "2009-12-02T08:10:02", "lines": 490, "newlines": 497, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSRDBSAM                                              *\n*                                                                     *\n*  Read sequential files or PDS members.                              *\n*                                                                     *\n*  The data set is already allocated.                                 *\n*  The DD name is in SESS_DD.                                         *\n*                                                                     *\n*                                                                     *\n*  The sequential file or PDS member is read a block at a time        *\n*  using BSAM.  If the DCB RECFM is \"blocked\", the logical records    *\n*  are \"deblocked\".  If the RECFM is \"fixed\", the records are         *\n*  deblocked using the LRECL in the format-1 label.  If the RECFM     *\n*  is \"variable\", the records are assumed to have \"LLBB\" info in      *\n*  the first four bytes... the length taken from the first two bytes. *\n*                                                                     *\n*  The records are stored in data space 1.                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRDBSAM CSECT\nOSRDBSAM AMODE 31\nOSRDBSAM RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSRDBSAM,R15\n         B     INIT0000\nMODID    DC    CL8'OSRDBSAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(BSAMEND-OSRDBSAM)\nINIT0000 DS    0H\n         USING DS1FMTID,SESS_DSCB               DEFINE  BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING OSRDBSAM,R10\n         GETMAIN RU,                                                   +\n               LV=OSRDBSAM_WORK_L,                                     +\n               LOC=BELOW\n         ST    R13,4(,R1)                       SAVE R13\n         ST    R1,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING OSRDBSAM_WORK,R13                DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R13\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVC   SESS_DATA_LOADER,MODID           WHO LOADED DATA\n         MVC   WORK_RETRY,SESS_RETRY            SAVE RETRY ADDRESS\n         LA    R1,RTRY0000                      OUR RETRY ADDRESS\n         ST    R1,SESS_RETRY                    PUT IT INTO EFFECT\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         LA    R0,DCB_L                         DCB LENGTH\n         ST    R0,SESS_DCB_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         LR    R7,R1\n         ST    R7,SESS_DCB_ADDR\n         MVC   0(DCB_L,R7),DCB_I\n         USING IHADCB,R7                        DEFINE DCB ADDRESS\n         USING DECB,WORK_DECB                   DEFINE BASE\n         LA    R1,DATASPACE_1                   USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?\n         BO    INIT0020                         YES\n         MVC   SESS_DEFAULT_FORMAT,BROWSE\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         BO    INIT0010\n         MVC   SESS_FORMAT,BROWSE\nINIT0010 DS    0H\n         XC    WORK_LENGTH,WORK_LENGTH\n         B     INIT0030\nINIT0020 DS    0H\n         ITRACE ID=EDIT\n         MVC   SESS_DEFAULT_FORMAT,EDIT\n         MVC   SESS_FORMAT,EDIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0030 DS    0H\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT_EMPTY EMPTY FILE OR MEMBER?\n         BO    MAIN0150\n         MVC   WORK_OPEN(OPEN_L),OPEN_I\n         MVC   DCBDDNAM,SESS_DD                 SET DD NAME IN DCB\n         ITRACE ID=OPEN,                                               +\n               RDATA1=R7,                                              +\n               DATA2=DCBDDNAM\n         TM    DS1DSORG+1,DS1ORGAM              VSAM?\n         BNO   INIT0040                         NO\n         OI    COMM_FLAGS,$COMM_AUTH_ON         NEED AUTHORIZATION\n         L     R15,COMM_V_OSAUTH                OSAUTH ENTRY POINT\n         BALR  R14,R15                          AUTHORIZE OURSELVES\n         ITRACE ID=SUP\n         MODESET MODE=SUP\nINIT0040 DS    0H\n         OPEN  ((R7),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         TM    DCBOFLGS,DCBOFOPN                SUCCESFUL?\n         BNO   ERR0010                          NO\n         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN    INDICATE DCB IS OPEN\n         TM    DCBRECFM,DCBRECU                 RECFM=U?\n         BNO   MAIN0000                         NO\n         OC    DCBLRECL,DCBLRECL                LRECL ZERO?\n         BNZ   MAIN0000                         NO\n         OC    DCBBLKSI,DCBBLKSI                BLOCK SIZE ZERO ALSO?\n         BNZ   MAIN0000                         NO\n         MVC   DCBLRECL,H32760                  SET LRECL TO 32760\n         MVC   DCBBLKSI,H32760                  SET BLOCK SIZE TO 32760\n         MVC   DS1LRECL,H32760                  SET LRECL TO 32760\n         MVC   DS1BLKL,H32760                   SET BLOCK SIZE TO 32760\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         L     R8,SESS_IO_AREA                  RESET I/O AREA ADDRESS\n         ITRACE ID=READ,                                               +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         XC    WORK_DECB(DECB_L),WORK_DECB\n         READ  WORK_DECB,                       READ                   +\n               SF,                              .. SEQUENTIALLY FWD    +\n               (R7),                            .. DCB ADDRESS         +\n               (R8),                            .. I/O AREA            +\n               'S',                                                    +\n               MF=E\n*        SAM31\n         ITRACE ID=CHECK\n         CHECK WORK_DECB                        WAIT FOR THE I/O\n         L     R6,DECIOBPT                      IOB ADDRESS\n         USING IOBSTDRD,R6                      DEFINE IOB BASE\n         MVC   DSPCREQ_CCHHR,IOBCC              SAVE DISK ADDR\n         ITRACE ID=CCHHR,DATA1=(IOBCC,5)\n         LH    R5,DCBBLKSI                      BLOCK SIZE\n         SR    R1,R1                            CLEAR R1\n         ICM   R1,3,IOBSTDRD+14                 RESIDUAL LENGTH\n         SR    R5,R1                            LENGTH READ\n         ITRACE ID=RECORD,                                             +\n               RDATA1=R8,                                              +\n               RDATA2=R5\n         XC    WORK_SEQ,WORK_SEQ                RESET SEQUENCE NBR\nMAIN0010 DS    0H\n         TM    DCBRECFM,DCBRECU                 RECFM U?\n         BO    MAIN0110                         YES\n         TM    DCBRECFM,DCBRECBR                BLOCKED RECORDS?\n         BNO   MAIN0110                         NO\n         TM    DCBRECFM,DCBRECV                 RECFM V?\n         BO    MAIN0050                         YES\n* ------------------------------------------------------------------- *\n*        Fixed blocked records                                        *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         LTR   R5,R5                            ANY DATA LEFT?\n         BZ    MAIN0000                         NO.. READ NEXT BLOCK\n         BM    ERR0050\n         ITRACE ID=FIXED,                                              +\n               RDATA1=R8,                                              +\n               RDATA2=R5\n         ST    R8,DSPCREQ_RECORD_ADDR\n         XC    DSPCREQ_RECORD_LENGTH(2),DSPCREQ_RECORD_LENGTH\n         MVC   DSPCREQ_RECORD_LENGTH+2(2),DCBLRECL\n         BAL   R4,MAIN0200\nMAIN0030 DS    0H\n         OC    SESS_NUMBER,SESS_NUMBER          SPECIFIC NBR TO READ?\n         BZ    MAIN0040                         NO\n         CLC   DATASPACE_1_LAST_RECORD,SESS_NUMBER       STOP POINT?\n         BNL   EOF0010                          YES.. STOP READING\nMAIN0040 DS    0H\n         AH    R8,DCBLRECL                      PLUS RECORD SIZE\n         SH    R5,DCBLRECL                      MINUS RECORD SIZE\n         B     MAIN0020                         LOOP\n* ------------------------------------------------------------------- *\n*        Variable length, blocked records                             *\n* ------------------------------------------------------------------- *\nMAIN0050 DS    0H\n         SR    R5,R5                            CLEAR R5\n         ICM   R5,3,0(R8)                       BLOCK LENGTH\n         BZ    MAIN0000                         SHOULD NOT HAPPEN\n         SH    R5,H4                            MINUS LENGTH OF BDW\n         LA    R8,4(,R8)                        SKIP BDW\nMAIN0060 DS    0H\n         LTR   R5,R5                            DATA LEFT?\n         BZ    MAIN0000                         NO\n         ITRACE ID=VAR,                                                +\n               RDATA1=R8,                                              +\n               RDATA2=R5\n         TM    2(R8),X'03'                      PART OF SPANNED RECORD?\n         BZ    MAIN0070                         NO\n         LA    R0,4(,R8)                        DATA PORTION\n         LH    R1,0(R8)                         LENGTH OF DATA\n         SH    R1,H4                            MINUS LENGTH OF LLBB\n         LA    R14,WORK_IO\n         AH    R14,WORK_LENGTH\n         LR    R15,R1\n         MVCL  R14,R0                           COPY DATA TO BUFFER\n         LH    R1,WORK_LENGTH\n         AH    R1,0(R8)                         PLUS NEW DATA LENGTH\n         SH    R1,H4                            MINUS LENGTH OF LLBB\n         STH   R1,WORK_LENGTH\n         TM    2(R8),X'02'                      END OF SPANNED RECORD?\n         BNO   MAIN0100                         NO\n         LA    R1,WORK_IO                       DATA\n         ST    R1,DSPCREQ_RECORD_ADDR           SET ADDRESS\n         LH    R1,WORK_LENGTH                   DATA LENGTH\n         XC    WORK_LENGTH,WORK_LENGTH\n         B     MAIN0080\nMAIN0070 DS    0H\n         LA    R1,4(,R8)                        DATA ADDRESS\n         ST    R1,DSPCREQ_RECORD_ADDR\n         LH    R1,0(R8)                         RECORD LENGTH\n         SH    R1,H4                            MINUS RDW LENGTH\nMAIN0080 DS    0H\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         ITRACE ID=VAR_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         BAL   R4,MAIN0200\nMAIN0090 DS    0H\n         OC    SESS_NUMBER,SESS_NUMBER          SPECIFIC NBR TO READ?\n         BZ    MAIN0100                         NO\n         CLC   DATASPACE_1_LAST_RECORD,SESS_NUMBER\n         BNL   EOF0010                          TIME TO STOP\nMAIN0100 DS    0H\n         SH    R5,0(R8)                         MINUS RECORD SIZE\n         BM    ERR0040\n         BZ    MAIN0000                         END OF BLOCK\n         AH    R8,0(R8)                         PLUS RECORD SIZE\n         B     MAIN0060                         LOOP\n* ------------------------------------------------------------------- *\n*        Unblocked or undefined records                               *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=UNBLOCKD,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R5\n         TM    DCBRECFM,DCBRECU                 UNDEFINED LENGTH?\n         BO    MAIN0120                         YES\n         TM    DCBRECFM,DCBRECF                 FIXED LENGTH?\n         BO    MAIN0120                         YES\n         ITRACE ID=RECFM_V\n         LH    R5,0(R8)                         LENGTH OF BLOCK\n         SH    R5,H4                            MINUS BDW LENGTH\n         LA    R8,4(,R8)                        LEAVE OUT BDW\nMAIN0120 DS    0H\n         ST    R8,DSPCREQ_RECORD_ADDR\n         ST    R5,DSPCREQ_RECORD_LENGTH\n         BAL   R4,MAIN0200\n         OC    SESS_NUMBER,SESS_NUMBER          SPECIFIC NBR TO READ?\n         BZ    MAIN0000                         NO\n         CLC   DATASPACE_1_LAST_RECORD,SESS_NUMBER\n         BNL   EOF0010                          TIME TO STOP\n         B     MAIN0000                         LOOP\n* ------------------------------------------------------------------- *\n*        Empty file or PDS member                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=EMPTY\n         MVC   COMM_MSG_1(MSG_03_L),MSG_03\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DSPCREQ_RECORD_NBR\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         BLR   R4                               LOW.. DON'T STORE IT\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         LH    R1,WORK_SEQ\n         LA    R1,1(,R1)\n         STH   R1,WORK_SEQ\n         ST    R1,DSPCREQ_SEQ                   SEQ NBR\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE                DATA SPACE MANAGER\n         BALR  R14,R15                          LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL         DATA SPACE FULL?\n         BE    EOF0000                          YES\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   EXIT0000                         NO\n         BR    R4\n* ------------------------------------------------------------------- *\n*        EOF                                                          *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         SAM31\n         ITRACE ID=FULL,                                               +\n               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR\n         B     EOF0030\nEOF0010  DS    0H\n         SAM31\n         ITRACE ID=LOGICEOF,                                           +\n               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR\n         B     EOF0030\nEOF0020  DS    0H\n         SAM31\n         ITRACE ID=REAL_EOF\nEOF0030  DS    0H\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R7\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         ITRACE ID=FREEPOOL\n         FREEPOOL (R7)\n         L     R0,SESS_DCB_LENGTH\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R7),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\n         L     R1,DSPCREQ_RECORD_NBR\n         S     R1,DATASPACE_1_FIRST_RECORD\n         LA    R1,1(,R1)\n         CVD   R1,COMM_DWORD\n         MVC   COMM_MSG_2,COMM_BLANKS\n         MVC   COMM_MSG_2(MSG_01_L),MSG_01\n         ED    COMM_MSG_2+(MSG_01_RECORDS-MSG_01)(L'MSG_01_RECORDS),COM+\n               M_DWORD+3\n         B     EXIT0000                         EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRTRY0000 DS    0H\n         ITRACE ID=ABEND,                                              +\n               DATA1=(SESS_SYSTEM_CODE,6)\n         CLC   SESS_SYSTEM_CODE,X_0013\n         BNE   RTRY0010\n         CLC   SESS_ABEND_R15,X_0018\n         BNE   RTRY0010\n         ITRACE ID=NO_MEM,                                             +\n               DATA1=SESS_MEMBER\n         OI    SESS_STATUS,$STATUS_NO_MEMBER\n         NI    SESS_ABEND_FLAG,255-$ABENDED\n         MVC   COMM_MSG_LINES,H1\n         MVC   COMM_MSG_1(MSG_02_L),MSG_02\n         MVC   COMM_MSG_1+(MSG_02_MEMBER-MSG_02)(8),SESS_MEMBER\n         B     EXIT0000\nRTRY0010 DS    0H\n         ITRACE ID=CALLABND\n         L     R15,COMM_V_OSABEND\n         BALR  R14,R15\n         OI    SESS_STATUS,$STATUS_NO_DATA\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1',C'OPEN failed'\nERR0020  DS    0H\n         DC    H'2',C'Block size is zero after OPEN'\nERR0040  DS    0H\n         DC    H'4'\n         DC    C'Length left in VB record went negative'\nERR0050  DS    0H\n         DC    H'5'\n         DC    C'Length left in FB block went negative'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         TM    DS1DSORG+1,DS1ORGAM              VSAM?\n         BNO   EXIT0010                         NO\n         ITRACE ID=PROB\n         MODESET MODE=PROB                      RETURN TO PROBLEM STATE\n         NI    COMM_FLAGS,255-$COMM_AUTH_ON     TURN OFF AUTHORIZATION\n         L     R15,COMM_V_OSAUTH                OSAUTH ENTRY POINT\n         BALR  R14,R15                          AUTHORIZE OURSELVES\nEXIT0010 DS    0H\n         MVC   SESS_RETRY,WORK_RETRY            RESET RETRY ADDRESS\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE SAVE AREA\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSRDBSAM_WORK_L\n         LM    R14,R12,12(R13)                  RESTORE REGISTERSS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCB_I    DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               EODAD=EOF0010,                                          +\n               MACRF=R\nDCB_L          EQU   *-DCB_I\nOPEN_I   OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU   *-OPEN_I\nCLOSE_I  CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU   *-CLOSE_I\n\nF1             DC    F'1'\n\nH1             DC    H'1'\nH4             DC    H'4'\nH5             DC    H'5'\nH32760         DC    H'32760'\n\nX_0013         DC    X'0013'\nX_0018         DC    X'0018'\n\nBROWSE         DC    CL8'BROWSE'\nEDIT           DC    CL8'EDIT  '\n\nMSG_01         DS    0C\nMSG_01_RECORDS DC    X'402020206B2020206B202120'\n               DC    C' records'\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DC    0C\n               DC    C'Member '\nMSG_02_MEMBER  DC    CL8' '\n               DC    C' not found'\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DC    0C\n               DC    C'Data set or member has no records'\nMSG_03_L       EQU   *-MSG_03\n\n               LTORG\n\nBSAMEND        EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRDBSAM_WORK    DSECT\n                 COPY  DXDPREF\nWORK_OPEN        DS    0F,(OPEN_L)X\nWORK_CLOSE       DS    0F,(CLOSE_L)X\nWORK_DECB        DS    0F,(DECB_L)X\n\nWORK_RETRY       DS    A                  SAVED RETRY ADDRESS\n\n                 DSPCREQ DSECT=NO\n\nWORK_SEQ         DS    H\n\nWORK_LENGTH      DS    H\nWORK_IO          DS    32768X\n\nOSRDBSAM_WORK_L  EQU   *-OSRDBSAM_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC DCBD=PS,                                               +\n               IOB=YES,                                                +\n               DUMMY=X\nFORMAT_1         DSECT\n                 IBMMAC  VTOC=1\n                 IBMMAC  DECB=YES\nDECB_L           EQU     *-DECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                EQUATES                                              *\n* ------------------------------------------------------------------- *\n                 COPY REGEQU\n$BUFFSIZE        EQU  65535\n                 END  OSRDBSAM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSRDVSAM": {"ttr": 3587, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00S\\x01\\t!\\x0f\\x01\\t4\\x1f\\x15Y\\x02\\x15\\x01\\xf5\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-07T15:59:53", "lines": 533, "newlines": 501, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSRDVSAM                                              *\n*                                                                     *\n*  Read VSAM datasets                                                 *\n*                                                                     *\n*  The data set is already allocated.  The DD name is in SESS_DD.     *\n*                                                                     *\n*  For KSDSes, the FROMKEY and TOKEY keywords are allowed.            *\n*                                                                     *\n*  In all cases the data is loaded into the data space.               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRDVSAM CSECT\nOSRDVSAM AMODE 31\nOSRDVSAM RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSRDVSAM,R15\n         B     INIT0000\nMODID    DC    CL8'OSRDVSAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(VSAMEND-OSRDVSAM)\nINIT0000 DS    0H\n         USING DS1FMTID,SESS_DSCB               DEFINE BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING OSRDVSAM,R10                     DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSRDVSAM_WORK_L,                                     +\n               LOC=ANY\n         ST    R13,4(,R1)                       SAVE R13\n         ST    R1,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING OSRDVSAM_WORK,R13                DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         MVC   SESS_DATA_LOADER,MODID           WHO LOADED DATA\n         MVI   WORK_RC,0                        ASSUME RC = 0\n         LA    R0,ACB_L\n         ST    R0,SESS_DCB_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         LR    R9,R1\n         ST    R9,SESS_DCB_ADDR\n         MVC   0(ACB_L,R9),ACB\n         MVC   WORK_RPL(RPL_L),RPL\n         MVC   WORK_EXLST(EXLST_L),EXLST\n         MVC   WORK_OPEN(OPEN_L),OPEN\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE\n         USING IFGACB,R9\n         LA    R8,WORK_RPL\n         USING IFGRPL,R8\n         ST    R8,RPLDACB                       SET ACB ADDRESS\n         LA    R7,WORK_EXLST\n         USING IFGEXLST,R7\n         ST    R7,ACBEXLST                      SET EXLST ADDRESS\n         MVC   ACBDDNM,SESS_DD                  SET DDNAME IN ACB\n         ST    R9,RPLDACB                       SET ADDRESS IN RPL\n         MVC   RPLBUFL,=A($BUFFSIZE)            SET BUFFER SIZE\n         LA    R1,EOF0000                       EOF ADDRESS\n         STCM  R1,15,EXLEODP                    SET EOF ADDRESS\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         LA    R1,DATASPACE_1                   USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         MVC   RPLAREA,SESS_IO_AREA\n         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPEN\n         OPEN  ((R9),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR0010                          NO\n         OI    SESS_DCB_FLAGS,$SESS_ACB_OPEN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TESTCB ACB=(R9),                       KSDS?                  +\n               ATRB=KSDS,                                              +\n               MF=(G,WORK_TESTCB1,TESTCB1_L)\n         BE    MAIN0010                         YES\n         TM    SESS_USER_OPTIONS,$OPTIONS_FROMKEY+$OPTIONS_TOKEY\n         BNZ   ERR0030                          NOT ALLOWED\n         TESTCB ACB=(R9),                       RRDS?                  +\n               ATRB=RRDS,                                              +\n               MF=(G,WORK_TESTCB2,TESTCB2_L)\n         BE    MAIN0030                         YES\n         TESTCB ACB=(R9),                       ESDS?                  +\n               ATRB=ESDS,                                              +\n               MF=(G,WORK_TESTCB3,TESTCB3_L)\n         BE    MAIN0040                         YES\n         TESTCB ACB=(R9),                       LDS (LINEAR)?          +\n               ATRB=LDS,                                               +\n               MF=(G,WORK_TESTCB4,TESTCB4_L)\n         BE    MAIN0050                         YES\n         TESTCB ACB=(R9),                       VRRDS?                 +\n               ATRB=VRRDS,                                             +\n               MF=(G,WORK_TESTCB5,TESTCB5_L)\n         BE    MAIN0060                         YES\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=KSDS\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM_KSDS\n         MVC   WORK_VSAM_TYPE,KSDS              SET VSAM TYPE\n         ITRACE ID=SHOW_CB\n         LA    R2,SESS_VSAM_LRECL               AREA FOR RETURNED DATA\n         SHOWCB ACB=(R9),                                              +\n               AREA=(R2),                                              +\n               FIELDS=(LRECL,KEYLEN,RKP),                              +\n               LENGTH=12,                                              +\n               MF=(G,WORK_SHOWCB1,SHOWCB1_L)\n         ITRACE ID=SHOWCBRC,                    SHOWCB RC              +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR0020\n         MVC   DS1LRECL,SESS_VSAM_LRECL+2       COPY TO FMT1\n         MVC   DS1KEYL,SESS_VSAM_KEY_LENGTH+3\n         MVC   DS1RKP,SESS_VSAM_RKP+2\n         TM    SESS_USER_OPTIONS,$OPTIONS_FROMKEY\n         BNO   MAIN0100\n         ITRACE ID=MODCB1\n         LA    R2,SESS_FROM_KEY\n         L     R3,SESS_FROMKEY_LENGTH\n         MODCB RPL=(R8),                                               +\n               ARG=(R2),                                               +\n               KEYLEN=(R3),                                            +\n               OPTCD=(KEY,DIR,SYN,NUP,GEN,KGE,MVE),                    +\n               MF=(G,WORK_MODCB1,MODCB1_L)\n         ITRACE ID=MOD1_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR1010\n         MVC   COMM_INFO_03(L'FROM_KEY),FROM_KEY\n         ITRACE ID=POINT                        ISSUE POINT\n         POINT RPL=(R8)\n         ITRACE ID=POINT_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR1010                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         ITRACE ID=RRDS\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM_RRDS\n         MVC   WORK_VSAM_TYPE,RRDS              SET TYPE\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         ITRACE ID=ESDS\n         MVC   WORK_VSAM_TYPE,ESDS              SET TYPE\n         ITRACE ID=MODCB2\n         MODCB ACB=(R9),                                               +\n               MACRF=ADR,                       USE ADR MODE           +\n               MF=(G,WORK_MODCB2,MODCB2_L)\n         ITRACE ID=ADR_RC,                                             +\n               RDATA1=R15\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0050 DS    0H\n         ITRACE ID=MODCB3\n         MVC   WORK_VSAM_TYPE,LDS               SET TYPE\n         MVI   SESS_DATA_TYPE,$DATA_TYPE_VSAM_LDS   DATA TYPE\n         MODCB RPL=(R8),                        MODIFY RPL             +\n               OPTCD=(SEQ,FWD,CNV),                                    +\n               MF=(G,WORK_MODCB3,MODCB3_L)\n         ITRACE ID=MODCB4\n         MODCB RPL=(R9),                        MODIFY ACB             +\n               OPTCD=(CNV),                                            +\n               MF=(G,WORK_MODCB4,MODCB4_L)\n         B     MAIN0130\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ITRACE ID=VVDS\n         MVC   WORK_VSAM_TYPE,VVDS              SET TYPE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         L     R1,COMM_OSSPFD\n         USING OSSPFD,R1\n         MVC   SPF_VSAM_TYPE,WORK_VSAM_TYPE\n         DROP  R1\n         TM    SESS_USER_OPTIONS,$OPTIONS_RBA\n         BNO   MAIN0110\n         LA    R2,SESS_RBA\n         ITRACE ID=MODCB5,                                             +\n               RDATA1=R2\n         MODCB RPL=(R8),                                               +\n               OPTCD=(ADR,RBA),                                        +\n               ARG=(R2),                                               +\n               MF=(G,WORK_MODCB5,MODCB5_L)\n         ITRACE ID=MOD1_RC,                                            +\n               RDATA1=R15\n         MVC   COMM_INFO_03(L'RBA),RBA\n         ITRACE ID=POINT_2\n         POINT RPL=(R8)                         ISSUE POINT\n         ITRACE ID=RC,                                                 +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR0040                          NO\nMAIN0110 DS    0H\n         CLC   WORK_VSAM_TYPE,ESDS              ESDS?\n         BE    MAIN0120                         YES\n         ITRACE ID=MODCB6\n         MODCB RPL=(R8),                        MODIFY RPL             +\n               OPTCD=(SEQ,FWD,MVE),                                    +\n               MF=(G,WORK_MODCB6,MODCB6_L)\n         ITRACE ID=MOD2_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR0050                          NO\n         B     MAIN0130\nMAIN0120 DS    0H\n         ITRACE ID=MODCB7\n         MODCB RPL=(R8),                        MODIFY RPL             +\n               OPTCD=(ADR,SEQ,FWD,MVE),                                +\n               MF=(G,WORK_MODCB7,MODCB7_L)\n         ITRACE ID=MOD3_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR0050                          NO\nMAIN0130 DS    0H\n         ITRACE ID=READ,                                               +\n               RDATA1=R8\n         L     R1,DSPCREQ_RECORD_NBR            RECORD NBR\n         LA    R1,1(,R1)                        PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR            UPDATE\n         GET   RPL=(R8)                         READ A RECORD\n         ITRACE ID=READ_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   ERR1010                          NO\n         ITRACE ID=AT_START,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_FIRST_RECORD,4)\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD\n         BL    MAIN0130                         NO\n         L     R1,RPLRLEN                       RECORD LENGTH\n         ST    R1,DSPCREQ_RECORD_LENGTH\n         LA    R2,WORK_RBA\n         SHOWCB RPL=(R8),                                              +\n               AREA=(R2),                                              +\n               FIELDS=(RBA),                                           +\n               LENGTH=4,                                               +\n               MF=(G,WORK_SHOWCB2,SHOWCB2_L)\n         ITRACE ID=AREA_RBA,                                           +\n               DATA1=(RPLAREA,4),                                      +\n               DATA2=(WORK_RBA,4)\n         LTR   R15,R15\n         BNZ   ERR0060\n         MVC   DSPCREQ_RBA,WORK_RBA             COPY RBA\n         ITRACE ID=STORE,                                              +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT\n         BALR  R14,R15                          STORE THIS RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_FULL         DATA SPACE FULL?\n         BE    MAIN0170                         YES\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR1010                          BAD NEWS\n         OC    SESS_NUMBER,SESS_NUMBER\n         BZ    MAIN0140\n         L     R1,DATASPACE_1_LAST_RECORD\n         S     R1,DATASPACE_1_FIRST_RECORD\n         LA    R1,1(,R1)\n         C     R1,SESS_NUMBER                   AT RECORD LIMIT?\n         BL    MAIN0140                         NO, READ NEXT RECORD\n         B     MAIN0160                         FORCE \"LOGICAL EOF\"\nMAIN0140 DS    0H\n         TM    SESS_USER_OPTIONS,$OPTIONS_TOKEY\n         BNO   MAIN0130                         NO 'TO KEY'\n         L     R1,SESS_VSAM_KEY_LENGTH\n         CH    R1,H40                           TOO LONG?\n         BNH   MAIN0150                         NO\n         LH    R1,H40                           LIMIT TO 40\nMAIN0150 DS    0H\n         BCTR  R1,0                             FOR EXECUTE\n         L     R2,SESS_VSAM_RKP                 RELATIVE KEY POSITION\n         A     R2,DSPCREQ_RECORD_ADDR\n         EX    R1,TOKEY_CLC                     REACHED 'TO KEY'?\n         BNH   MAIN0130                         NO\nMAIN0160 DS    0H\n         ITRACE ID=LOGICEOF,                                           +\n               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR\n         B     EXIT0000\nMAIN0170 DS    0H\n         ITRACE ID=FULL\n         B      EXIT0000\n* ------------------------------------------------------------------- *\n*        EOF                                                          *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         ITRACE ID=EOF,                                                +\n               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ST    R15,COMM_DWORD                   SET RC\n         LA    R0,1                             SET MESSAGE NUMBER\n         B     ERR1000\nERR0020  DS    0H\n         ST    R15,COMM_DWORD                   SET RC\n         LA    R0,2                             SET MESSAGE NUMBER\n         B     ERR1000\nERR0030  DS    0H\n         LA    R0,3                             SET MESSAGE NUMBER\n         B     ERR1000\nERR0040  DS    0H\n         LA    R0,4                             SET MESSAGE NUMBER\n         B     ERR1000\nERR0050  DS    0H\n         LA    R0,5                             SET MESSAGE NUMBER\n         B     ERR1000\nERR0060  DS    0H\n         LA    R0,6                             SET MESSAGE NUMBER\n         B     ERR1000\nERR1000  DS    0H\n         ST    R15,COMM_DWORD\n         MVC   COMM_INFO_01(1),RPLFDBK\n         MVC   COMM_INFO_02(1),RPLERRCD\n         MVC   COMM_MSG_CSECT,MODID             SET OUR CSECT NAME\n         STCM  R0,3,COMM_MSG_ID\n         L     R15,COMM_V_OSMSG                 OSMSG ENTRY POINT\n         BALR  R14,R15                          CONSTRUCT MESSAGE\n         ITRACE ID=MSGLINES,                                           +\n               DATA1=(COMM_MSG_LINES,2)\n         B     EXIT0030                         EXIT\nERR1010  DS    0H\n         ITRACE ID=RPLFDBK,                                            +\n               DATA1=(RPLFDBK,1),                                      +\n               DATA2=(RPLERRCD,1)\n         STH   R15,COMM_DWORD\n         MVC   COMM_MSG_1(MSG01_L),MSG01\nWORK     USING MSG01,COMM_MSG_1\n         UNPK  COMM_INFO_01(5),COMM_DWORD(3)    UNPACK RC\n         MVC   WORK.MSG01_RC,COMM_INFO_01\n         TR    WORK.MSG01_RC,COMM_HEXCHAR\n         UNPK  COMM_INFO_01(7),RPLFDBK(4)       UNPACK FEED BACK\n         MVC   WORK.MSG01_FDBK,COMM_INFO_01\n         TR    WORK.MSG01_FDBK,COMM_HEXCHAR\n         MVC   COMM_MSG_LINES,H1\n         B     EXIT0030\n         DROP  WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?\n         BO    EXIT0010                         YES\n         MVC   SESS_DEFAULT_FORMAT,BROWSE\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         BO    EXIT0040\n         MVC   SESS_FORMAT,BROWSE\n         B     EXIT0040\nEXIT0010 DS    0H\n         MVC   SESS_FORMAT,EDIT\n         MVC   SESS_DEFAULT_FORMAT,EDIT\n         B     EXIT0040\nEXIT0030 DS    0H\n         MVI   WORK_RC,8\n         DC    H'0'\nEXIT0040 DS    0H\n         TM    SESS_DCB_FLAGS,$SESS_ACB_OPEN    DCB OPEN?\n         BNO   EXIT0050                         NO\n         ITRACE ID=CLOSE\n         CLOSE ((R9)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         L     R0,SESS_DCB_LENGTH\n         FREEMAIN RU,                                                  +\n               A=(R9),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         NI    SESS_DCB_FLAGS,255-$SESS_ACB_OPEN\nEXIT0050 DS    0H\n         SR    R2,R2\n         IC    R2,WORK_RC\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSRDVSAM_WORK_L\n         L     R14,12(,R13)                     RESTORE R14\n         LR    R15,R2                           SET RC\n         LM    R0,R12,20(R13)                   RESTORE REGISTERS\n         BR    R14                              RETURN\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTOKEY_CLC  CLC  0(0,R2),SESS_TO_KEY\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nACB      ACB   AM=VSAM,                                                +\n               DDNAME=ANYDD,                                           +\n               MACRF=(ADR,DIR,IN,KEY,SEQ,CNV),                         +\n               EXLST=*\nACB_L          EQU   *-ACB\nRPL      RPL   AM=VSAM\nRPL_L    EQU   *-RPL\nEXLST    EXLST AM=VSAM,                                                +\n               EODAD=(*,A)\nEXLST_L  EQU   *-EXLST\nOPEN     OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L         EQU   *-OPEN\nCLOSE    CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L        EQU   *-CLOSE\n\nF1             DC    F'1'\nH1             DC    H'1'\nH40            DC    H'40'\n\nMSG01          DS    0C\n               DC    C'OSRDVSAM01E '\n               DC    C'Error during READ.  R15='\nMSG01_RC       DC    CL4' '\n               DC    C', RPLFDBK='\nMSG01_FDBK     DC    CL6' '\nMSG01_L        EQU   *-MSG01\n\nEDIT           DC    CL8'EDIT'\nESDS           DC    CL4'ESDS'\nFROM_KEY       DC    C'FROM KEY'\nKSDS           DC    CL4'KSDS'\nLDS            DC    CL4'LDS '\nRBA            DC    C'RBA'\nRRDS           DC    CL4'RRDS'\nVVDS           DC    CL4'VVDS'\n\nBROWSE         DC    CL8'BROWSE'\nNONE           DC    CL8'None'\n               LTORG\nVSAMEND        EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRDVSAM_WORK    DSECT\n                 COPY  DXDPREF\nWORK_RPL         DS    0F,(RPL_L)X\nWORK_EXLST       DS    0F,(EXLST_L)X\nWORK_OPEN        DS    0F,(OPEN_L)X\nWORK_CLOSE       DS    0F,(CLOSE_L)X\nWORK_MODCB1      DS    0F,(MODCB1_L)X\nWORK_MODCB2      DS    0F,(MODCB2_L)X\nWORK_MODCB3      DS    0F,(MODCB3_L)X\nWORK_MODCB4      DS    0F,(MODCB4_L)X\nWORK_MODCB5      DS    0F,(MODCB5_L)X\nWORK_MODCB6      DS    0F,(MODCB6_L)X\nWORK_MODCB7      DS    0F,(MODCB7_L)X\nWORK_SHOWCB1     DS    0F,(SHOWCB1_L)X\nWORK_SHOWCB2     DS    0F,(SHOWCB2_L)X\nWORK_TESTCB1     DS    0F,(TESTCB1_L)X\nWORK_TESTCB2     DS    0F,(TESTCB2_L)X\nWORK_TESTCB3     DS    0F,(TESTCB3_L)X\nWORK_TESTCB4     DS    0F,(TESTCB4_L)X\nWORK_TESTCB5     DS    0F,(TESTCB5_L)X\n\nWORK_RBA         DS    F                  LAST RECORD'S RBA\n\nWORK_VSAM_TYPE   DS    CL4\n\n                 DSPCREQ DSECT=NO\n\nWORK_RC          DS    X\n\nOSRDVSAM_WORK_L  EQU   *-OSRDVSAM_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC ACB=VSAM,                                              +\n               EXLST=VSAM,                                             +\n               RPL=VSAM,                                               +\n               DUMMY=X\nFORMAT_1 DSECT\n         IBMMAC VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY   TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY   REGEQU\n$BUFFSIZE EQU   65535\n         END    OSRDVSAM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSRDVTOC": {"ttr": 2824, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x01\\t!\\x0f\\x01\\t3o\\x08\\x11\\x02+\\x02*\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-02T08:11:32", "lines": 555, "newlines": 554, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSRDVTOC                                              *\n*                                                                     *\n*  Read VTOCs                                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRDVTOC CSECT\nOSRDVTOC AMODE 31\nOSRDVTOC RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSRDVTOC,R15\n         B     INIT0000\nMODID    DC    CL8'OSRDVTOC'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(VTOCEND-OSRDVTOC)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSRDVTOC,R10                   DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSRDVTOC_WORK_L,                                     +\n               LOC=BELOW\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSRDVTOC_WORK,R13              DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         MVC   SESS_DATA_LOADER,MODID         IDENTIFY WHO LOADED DATA\n         LA    R1,WORK_DATASPACE_RECORD_L     RECORD LENGTH\n         ST    R1,DSPCREQ_RECORD_LENGTH       SET RECORD LENGTH\n         MVC   DATASPACE_1_FIRST_RECORD,F1    INITIALIZE RECORD NBR\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE    SET FUNCTION CODE\n         LA    R0,DCB_L\n         ST    R0,SESS_DCB_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         LR    R8,R1\n         ST    R8,SESS_DCB_ADDR\n         MVC   0(DCB_L,R8),DCB_I              INITIALIZE THE DCB\n         MVC   WORK_OPEN(OPEN_L),OPEN_I       INITIALIZE OPEN\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I    INITIALIZE CLOSE\n         MVC   WORK_EXLST(EXLST_L),EXLST_I    INITIALIZE EXIT LIST\n         MVC   WORK_CCW_1(CCW_L),CCW_I        INITIALIZE CCW STRING\n         XC    WORK_RECORDS_READ,WORK_RECORDS_READ\n         XC    WORK_FORMAT_3S,WORK_FORMAT_3S  INITIALIZE COUNTER\n         XC    WORK_FORMAT_4S,WORK_FORMAT_4S  INITIALIZE COUNTER\n         XC    WORK_FORMAT_5S,WORK_FORMAT_5S  INITIALIZE COUNTER\n         USING IHADCB,R8                      DEFINE BASE\n         LA    R1,WORK_IOB\n         ST    R1,DCBIOBAD                    SET IOB ADDRESS\n         USING IOB,WORK_IOB\n         STCM  R8,7,IOBDCBPB                  SET DCB ADDRESS IN IOB\n         LA    R1,WORK_ECB                    I/O ECB ADDRESS\n         STCM  R1,7,IOBECBPB                  SET ECB ADDRESS\n         MVI   IOBFLAG1,X'02'                 SET FLAG BYTE 1\n         LA    R1,WORK_EXLST                  EXIT LIST\n         STCM  R1,7,DCBEXLSA                  RELOCATE EXIT LIST\n         LA    R1,WORK_JFCB                   JFCB\n         STCM  R1,7,WORK_EXLST+1              RELOCATE JFCB\n         LA    R1,WORK_CCW_1                  SEARCH CCW ADDRESS\n         STCM  R1,7,WORK_CCW_2+1              RELOCATE ADDRESS IN TIC\n         LA    R1,WORK_IO_AREA                I/O AREA ADDRESS\n         STCM  R1,7,WORK_CCW_3+1              RELOCATE I/O AREA IN READ\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         LA    R1,WORK_DATASPACE_RECORD       DATASPACE RECORD\n         ST    R1,DSPCREQ_RECORD_ADDR         SET RECORD ADDRESS\n         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RAWVTOC\n         BO    INIT0010\n         ITRACE ID=VTOC\n         MVC   SESS_DEFAULT_FORMAT,VTOC\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         BO    INIT0020\n         MVC   SESS_FORMAT,VTOC\n         B     INIT0020\nINIT0010 DS    0H\n         ITRACE ID=RAWVTOC\n         MVC   SESS_DEFAULT_FORMAT,RVTOC\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT\n         BO    INIT0020\n         MVC   SESS_FORMAT,RVTOC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         ITRACE ID=ALLOC\n         MVC   DAIR_VOLSER,SESS_VOLSER        SET VOLSER\n         MVI   DAIR_DISP,$DAIR_DISP_SHR       SET DISP\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION\n         MVI   DAIR_OPTS,$DAIR_VOLUME         SET OPTION\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE THE VOLUME\n         ITRACE ID=ALLOC_RC,                                           +\n               RDATA1=R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         MVC   DCBDDNAM,DAIR_DD               SET DDNAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R1,WORK_JFCB\n         ITRACE ID=RDJFCB,                                             +\n               RDATA1=R8,                                              +\n               RDATA2=R1\n         RDJFCB ((R8)),                                                +\n               MF=(E,WORK_OPEN)               READ THE JFCB\n         ITRACE ID=RDJFCBRC,                                           +\n               RDATA1=R15\n         LTR   R15,R15\n         BNZ   ERR0020\n         MVI   JFCBDSNM,X'04'                 CHANGE DSN\n         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM\n         OI    JFCBTSDM,JFCNWRIT              NO JFCB WRITE-BACK\n         ITRACE ID=OPEN\n         OPEN  ((R8),INPUT),                  OPEN THE VTOC            +\n               MF=(E,WORK_OPEN),                                       +\n               TYPE=J\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15\n         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN\n         LA    R1,WORK_CCW_1\n         ST    R1,IOBSTART                    ADDRESS OF 1ST CCW\n         LA    R1,WORK_ECB                    ECB ADDRESS\n         STCM  R1,7,IOBECBPB                  SET ADDRESS\n         LA    R1,IOBCC                       DISK ADDRESS\n         STCM  R1,7,WORK_CCW_1+1              RELOCATE ADDR IN SEARCH\n         SR    R1,R1\n         ICM   R1,7,DCBDEBA                   DEB ADDRESS\n         USING DEBBASIC,R1                    DEFINE BASE\n         LA    R1,DEBBASND                    END OF BASIC SECTION\n         DROP  R1\n         USING DEBDASD,R1                     DEFINE BASE\n         MVC   WORK_DISK_ADDR,DEBSTRCC        COPY STARTING ADDRESS\n         MVI   WORK_DISK_RECORD,0             FORCE RECORD 0\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCANTIOT\n         USING PSA,R0                         DEFINE BASE\n         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA\n         USING TCB,R1                         DEFINE TCB BASE\n         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB\n         USING TIOT1,R2                       DEFINE TIOT BASE\n         LA    R3,TIOENTRY                    FIRST TIOT ENTRY\n         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE\nINIT0030 DS    0H\n         SR    R4,R4                          CLEAR FOR LENGTHS\n         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY\n         BZ    ERR0050                        END OF TABLE\n         CLC   TIOEDDNM,DAIR_DD               DD FOUND?\n         BE    INIT0040                       YES\n         AR    R3,R4                          NEXT ENTRY\n         B     INIT0030                       LOOP\nINIT0040 DS    0H\n         SR    R1,R1\n         ICM   R1,7,TIOEFSRT                  UCB'S ADDRESS\n         ST    R1,SESS_UCB                    SET UCB ADDRESS\n         USING UCBOB,R1                       DEFINE BASE\n         MVC   SESS_UCBTYP,UCBTYP             COPY UCB DEVICE TYPE INFO\n* ------------------------------------------------------------------- *\n*        Read 1st track, save format-4 info                           *\n* ------------------------------------------------------------------- *\n         BAL   R9,EXCP0010\n         CLI   WORK_ECB,X'7F'                 SUCCESSFUL?\n         BNE   ERR0040                        NO\n         ITRACE ID=FMT_4\n         LA    R7,WORK_IO_AREA\n         USING COUNT,R7\n         MVC   SESS_DSCB,WORK_IO_AREA+52      COPY FORMAT-4 TO COMMON\n         USING DS4IDFMT,SESS_DSCB             DEFINE BASE\n         MVI   WORK_DSCB_TRACK+0,0\n         MVC   WORK_DSCB_TRACK+1(0),DS4DEVDT  COPY DSCB'S PER TRACK\n         MVC   SESS_TRACKS,DS4DSTRK           COPY TRACKS PER CYLINDER\n         MVC   SESS_CYLINDERS,DS4DSCYL        COPY CYLINDERS\n         MVC   WORK_VTOC_HIGH,DS4HPCHR        COPY HIGH EXENT INFO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         LA    R7,WORK_IO_AREA\n         USING COUNT,R7\n         LH    R6,WORK_DSCB_TRACK             DSCB'S PER TRACK\nMAIN0010 DS    0H\n         L     R1,WORK_RECORDS_READ           RECORDS READ\n         A     R1,F1                          PLUS 1\n         ST    R1,WORK_RECORDS_READ           SAVE TOTAL\n         CLI   DS1FMTID,C'1'                  FORMAT-1?\n         BE    MAIN0020\n         CLI   DS1FMTID,C'3'                  FORMAT-3?\n         BE    MAIN0030\n         CLI   DS1FMTID,C'4'                  FORMAT-4?\n         BE    MAIN0060\n         CLI   DS1FMTID,C'5'                  FORMAT-5?\n         BE    MAIN0040\n         B     MAIN0080\nMAIN0020 DS    0H\n         L     R1,SESS_FORMAT1S               NBR OF FORMAT-1'S\n         A     R1,F1                          PLUS 1\n         ST    R1,SESS_FORMAT1S               UPDATE TOTAL\n         MVI   WORK_DATASPACE_X,0\n         MVC   WORK_DATASPACE_PREFIX,DS1DSNAM USE DSN FOR PREFIX\n         B     MAIN0070\nMAIN0030 DS    0H\n         L     R1,WORK_FORMAT_3S              FORMAT-3S SO FAR\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,WORK_FORMAT_3S              SAVE TOTAL\n         B     MAIN0050\nMAIN0040 DS    0H\n         L     R1,WORK_FORMAT_5S              FORMAT-5S SO FAR\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,WORK_FORMAT_5S              SAVE TOTAL\n         B     MAIN0050\nMAIN0050 DS    0H\n         MVI   WORK_DATASPACE_X,1\n         MVC   WORK_DATASPACE_PREFIX,COMM_BLANKS\n         MVC   WORK_DATASPACE_PREFIX(PREFIX_L),PREFIX\n         MVC   WORK_DATASPACE_PREFIX+(PREFIX_FORMAT-PREFIX)(1),DS1FMTID\n         SR    R0,R0\n         ICM   R0,3,COUNT_CYLINDER            CYLINDER NUMBER\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_EDIT(6),=X'F02020202020'  INITIALIZE EDIT WORD\n         ED    WORK_EDIT(6),COMM_DWORD+5      EDIT CYLINDER NUMBER\n         MVC   WORK_DATASPACE_PREFIX+(PREFIX_CYLINDER-PREFIX)(4),WORK_E+\n               DIT+2\n         ICM   R0,3,COUNT_HEAD                HEAD NUMBER\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_EDIT(6),=X'F02020202020'  INITIALIZE EDIT WORD\n         ED    WORK_EDIT(6),COMM_DWORD+5      EDIT CYLINDER NUMBER\n         MVC   WORK_DATASPACE_PREFIX+(PREFIX_HEAD-PREFIX)(4),WORK_EDIT++\n               2\n         SR    R0,R0\n         IC    R0,COUNT_RECORD                RECORD NUMBER\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_EDIT(4),=X'F0202020'      INITIALIZE EDIT WORD\n         ED    WORK_EDIT(4),COMM_DWORD+6      EDIT RECORD NUMBER\n         MVC   WORK_DATASPACE_PREFIX+(PREFIX_RECORD-PREFIX)(3),WORK_EDI+\n               T+1\n         B     MAIN0070\nMAIN0060 DS    0H\n         MVI   WORK_DATASPACE_X,1\n         MVC   SESS_DSN,COMM_BLANKS\n         MVC   SESS_DSN(15),=C'VTOC of volume '\n         MVC   SESS_DSN+15(6),SESS_VOLSER\n         MVC   WORK_DATASPACE_PREFIX,SESS_DSN\nCOMM     USING DS1FMTID,SESS_DSCB\n         MVI   COMM.DS1RECFM,DS1RECFF         FAKE RECFM=F\n         LA    R1,185                         LENGTH OF RECORDS\n         STCM  R1,3,COMM.DS1LRECL             FAKE LRECL\n         STCM  R1,3,COMM.DS1BLKL              FAKE BLOCK SIZE\nMAIN0070 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          RECORDS STORED\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE TOTAL\n         MVC   WORK_DATASPACE_DATA,DS1DSNAM   COPY DSCB\n         MVC   DSPCREQ_CCHHR,COUNT_CYLINDER   COPY DISK ADDRESS\n         ITRACE ID=STORE,                                              +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DSPCREQ_CCHHR,5)\n         LA    R1,DSPCREQ                     DSPCREQ ADDRESS\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        STORE THE RECORD\nMAIN0080 DS    0H\n         LA    R7,DS1END-COUNT(,R7)           NEXT DSCB\n         BCT   R6,MAIN0010                    LOOP\n* ------------------------------------------------------------------- *\n*        Compute address of next track in VTOC                        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=NEXT_TRK,                                           +\n               DATA1=(WORK_VTOC_HIGH,5),                               +\n               DATA2=(WORK_DISK_ADDR,5)\n         CLC   WORK_DISK_ADDR,WORK_VTOC_HIGH  END OF VTOC?\n         BNL   EXIT0000                       YES\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,WORK_DISK_HEAD            CURRENT HEAD NUMBER\n         LA    R1,1(,R1)                      PLUS 1\n         CH    R1,SESS_TRACKS                 AT MAX?\n         BE    MAIN0090                       YES\n         STCM  R1,3,WORK_DISK_HEAD            SET UPDATED HEAD\n         MVI   WORK_DISK_RECORD,0\n         B     MAIN0100                       READ NEXT DSCB\nMAIN0090 DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,WORK_DISK_CYL             CURRENT CYLINDER NUMBER\n         LA    R1,1(,R1)                      PLUS 1\n         STCM  R1,3,WORK_DISK_CYL             SET UPDATED CYLINDER\n         XC    WORK_DISK_HEAD,WORK_DISK_HEAD  RESET HEAD NUMBER\n         MVI   WORK_DISK_RECORD,0\nMAIN0100 DS    0H\n         MVI   IOBR,0                         FORCE RECORD NBR TO ZERO\n         ITRACE ID=NEW_ADDR,                                           +\n               DATA1=(WORK_DISK_ADDR,5)\n         BAL   R9,EXCP0010                    READ NEXT TRACK\n         B     MAIN0000                       PROCESS THE TRACK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXCP0000 DS    0H\n         ITRACE ID=RETRY\n         B     EXCP0020\nEXCP0010 DS    0H\n         ITRACE ID=EXCP,                                               +\n               DATA1=(WORK_DISK_ADDR,5),                               +\n               DATA2=(WORK_CCW_3+1,3)\n         MVC   IOBCC(5),WORK_DISK_ADDR\nEXCP0020 DS    0H\n         XC    WORK_ECB,WORK_ECB              INITIALIZE ECB\n         EXCP  IOBSTDRD\n         WAIT  ECB=WORK_ECB\n         ITRACE ID=EXCP_ECB,                                           +\n               DATA1=(WORK_ECB,4)\n         CLI   WORK_ECB,X'42'                 END OF VTOC? (BAD I KNOW)\n         BER   R9                             YES\n         CLI   WORK_ECB,X'44'                 RETRY?\n         BE    EXCP0000                       YES\n         CLI   WORK_ECB,X'7F'                 SUCCESSFUL I/O?\n         BNE   ERR0040                        NO\n         SR    R0,R0                          CLEAR REGISTER\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,WORK_CCW_3+6              LENGTH USED\n         ICM   R0,3,IOBSTDRD+14               RESIDUAL LENGTH\n         SR    R1,R0                          LENGTH READ\n         ITRACE ID=BYTES,                                              +\n               RDATA1=R1\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DAIRFAIL\n         OI    SESS_STATUS,$STATUS_NO_DATA\n         B     EXITFAST\n         DROP  R1\nERR0020  DS    0H\n         ITRACE ID=RDJFCB_X\n         DC    H'0'\nERR0040  DS    0H\n         ITRACE ID=IO_ERR\n         DC    H'0'\nERR0050  DS    0H\n         ITRACE ID=NO_TIOT\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=STATS\n         MVC   COMM_MSG_2(MSG_01_L),MSG_01\n         L     R0,SESS_FORMAT1S\n         CVD   R0,COMM_DWORD\n         ED    COMM_MSG_2+(MSG_01_FORMAT_1S-MSG_01)(L'MSG_01_FORMAT_1S)++\n               ,COMM_DWORD+4\n         L     R0,WORK_FORMAT_3S\n         CVD   R0,COMM_DWORD\n         ED    COMM_MSG_2+(MSG_01_FORMAT_3S-MSG_01)(L'MSG_01_FORMAT_3S)++\n               ,COMM_DWORD+4\n         L     R0,WORK_FORMAT_5S\n         CVD   R0,COMM_DWORD\n         ED    COMM_MSG_2+(MSG_01_FORMAT_5S-MSG_01)(L'MSG_01_FORMAT_5S)++\n               ,COMM_DWORD+4\n         ITRACE ID=CLOSE,                                              +\n               RDATA1=R8\n         CLOSE ((R8)),                                                 +\n               MF=(E,WORK_CLOSE)\n         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN\n         ITRACE ID=FREEPOOL,                                           +\n               RDATA1=R8\n         FREEPOOL (R8)\n         ITRACE ID=FREE_DD\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE THE DD\n         ITRACE ID=FREE_RC,                                            +\n               RDATA1=R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0010                        NO\nEXITFAST DS    0H\n         ITRACE ID=FREE_DCB,                                           +\n               RDATA1=R8\n         L     R0,SESS_DCB_LENGTH\n         FREEMAIN RU,                                                  +\n               A=(R8),                                                 +\n               LV=(0)\n         XC    SESS_DCB_ADDR,SESS_DCB_ADDR\n         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=OSRDVTOC_WORK_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1       DC    F'1'\n\nCCW_I    DS    0D\nCCW_I_1  CCW   $CCW_SEARCH,*,$CCW_CC,5\nCCW_I_2  CCW   $CCW_TIC,CCW_I_1,0,8\nCCW_I_3  CCW   $CCW_READ_MULTIPLE_CKD,*,$CCW_SILI,65535\nCCW_L    EQU   *-CCW_I\n\nDCB_I    DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               DEVD=DA,                                                +\n               EXLST=*,                                                +\n               MACRF=EXCP\nDCB_L    EQU   *-DCB_I\nOPEN_I   OPEN  (*,INPUT),                                              +\n               MF=L\nOPEN_L   EQU   *-OPEN_I\nCLOSE_I  CLOSE *,                                                      +\n               MF=L\nCLOSE_L  EQU   *-CLOSE_I\nEXLST_I  DC    X'87',AL3(*)\nEXLST_L  EQU   *-EXLST_I\n\nVTOC             DC    CL8'VTOC'\nRVTOC            DC    CL8'RVTOC'\n\nMSG_01           DS    0C\nMSG_01_FORMAT_1S DC    X'40202020206B202120'\n                 DC    C' Format 1(s)'\nMSG_01_FORMAT_3S DC    X'40202020206B202120'\n                 DC    C' Format 3(s)'\nMSG_01_FORMAT_5S DC    X'40202020206B202120'\n                 DC    C' Format 5(s)'\nMSG_01_L         EQU   *-MSG_01\n\nPREFIX           DS    0C\n                 DC    C'Format-'\nPREFIX_FORMAT    DC    C' '\n                 DC    C' at '\nPREFIX_CYLINDER  DC    CL4' '\n                 DC    C'-'\nPREFIX_HEAD      DC    CL4' '\n                 DC    C'-'\nPREFIX_RECORD    DC    CL3' '\nPREFIX_L         EQU   *-PREFIX\n\nHEXCHAR          EQU   *-C'0'\n                 DC    C'0123456789ABCDEF'\n\nVTOCEND          EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRDVTOC_WORK    DSECT\n                 COPY  DXDPREF\n\nWORK_CCW         DS    0D\nWORK_CCW_1       DS    D\nWORK_CCW_2       DS    D\nWORK_CCW_3       DS    D\n\nWORK_ECB         DS    F\nWORK_IOB         DS    0F,(IOB_L)X\nWORK_OPEN        DS    0F,(OPEN_L)X\nWORK_CLOSE       DS    0F,(CLOSE_L)X\nWORK_EXLST       DS    0F,(EXLST_L)X\n\nWORK_RECORDS_READ DS   F\nWORK_FORMAT_3S   DS    F\nWORK_FORMAT_4S   DS    F\nWORK_FORMAT_5S   DS    F\n\nWORK_MAX_LENGTH  DS    F\n\nWORK_SAVE_R7     DS    A\n\nWORK_DSCB_TRACK  DS    H                  DSCB'S PER TRACK\n\nWORK_DISK_ADDR   DS    0CL5\nWORK_DISK_CYL    DS    H\nWORK_DISK_HEAD   DS    H\nWORK_DISK_RECORD DS    X\n\nWORK_EDIT        DS    CL8\n\nWORK_VTOC_HIGH   DS    CL5\nWORK_SAVE_ADDR   DS    CL5\n\nWORK_JFCB        DS    0F\n                 IBMMAC JFCB=YES\n\n                 DAIRREQ DSECT=NO\n                 DSPCREQ DSECT=NO\n\nWORK_DATASPACE_RECORD   DS  0C\nWORK_DATASPACE_X        DS  X             SORT SEQUENCER\nWORK_DATASPACE_PREFIX   DS  CL44\nWORK_DATASPACE_DATA     DS  CL140\nWORK_DATASPACE_RECORD_L EQU *-WORK_DATASPACE_RECORD\n\nWORK_IO_AREA     DS     65536X\nOSRDVTOC_WORK_L  EQU    *-OSRDVTOC_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOUNT                DSECT\nCOUNT_CYLINDER       DS     XL2\nCOUNT_HEAD           DS     XL2\nCOUNT_RECORD         DS     X\nCOUNT_KEY_LENGTH     DS     X\nCOUNT_DATA_LENGTH    DS     XL2\nCOUNT_DATA           DS     0X\n                     IBMMAC VTOC=1\nFORMAT_4             DSECT\n                     IBMMAC VTOC=4\n\n         IBMMAC DCBD=PS,                                               +\n               DEB=YES,                                                +\n               PSA=YES,                                                +\n               TCB=YES,                                                +\n               TIOT=YES,                                               +\n               UCB=YES\n         IBMMAC IOB=YES\nIOB_L    EQU   *-IOB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY    TRENTRY\n               COPY    CCW\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY    REGEQU\n               END     OSRDVTOC\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSRECALL": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\t!\\x0f\\x01\\t!\\x0f\\x159\\x00\\xc9\\x00\\xc9\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-07-29T15:39:36", "lines": 201, "newlines": 201, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSRECALL                                              *\n*                                                                     *\n*  Manage the RECALL table.                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSRECALL CSECT\nOSRECALL AMODE 31\nOSRECALL RMODE ANY\n         USING OSRECALL,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSRECALL'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(RECALLEND-OSRECALL)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSRECALL,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDRCALL,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         LR    R9,R1                          SAVE PARM BLOCK ADDRESS\n         USING RCALLREQ,R9                    DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9,                                              +\n               DATA2=RCALLREQ_FUNC\n         CLI   RCALLREQ_FUNC,$RCALLREQ_INIT\n         BE    INIT0010                       YES\n         CLI   RCALLREQ_FUNC,$RCALLREQ_RECALL\n         BE    RCALL000                       YES\n         CLI   RCALLREQ_FUNC,$RCALLREQ_STORE\n         BE    STORE000                       YES\n         CLI   RCALLREQ_FUNC,$RCALLREQ_TERM\n         BE    TERM0000                       YES\n         DC    H'0',C'INVALID FUNCTION'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=INIT\n         GETMAIN RU,                                                   +\n               LV=RECALL_L*COMM_RECALL_NBR,                            +\n               LOC=ANY\n         ST    R1,COMM_RECALL_FIRST\n         ST    R1,COMM_RECALL_CURR\n         LA    R2,RECALL_L*19(R1)\n         ST    R2,COMM_RECALL_LAST\n         USING RECALL,R1\n         ITRACE ID=INIT_2,                                             +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         LA    R2,COMM_RECALL_NBR\nINIT0020 DS    0H\n         MVC   RECALL_CMD,COMM_BLANKS\n         XC    RECALL_LENGTH,RECALL_LENGTH\n         LA    R1,RECALL_L(,R1)\n         BCT   R2,INIT0020\n         DROP  R1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRCALL000 DS    0H\n         ITRACE ID=RECALL,                                             +\n               DATA1=(DXD_RECALL_CURR,4)\n         ICM   R2,15,DXD_RECALL_CURR          CURRENT RECALL ENTRY\n         BZ    EXIT0000                       NOTHING STORED\n         USING RECALL,R2                      DEFINE BASE\n         OC    RECALL_LENGTH,RECALL_LENGTH\n         BZ    EXIT0000\nRCALL010 DS    0H\n         MVC   RCALLREQ_LENGTH,RECALL_LENGTH\n         MVC   RCALLREQ_CMD,RECALL_CMD\nRCALL020 DS    0H\n         C     R2,COMM_RECALL_FIRST           ALREADY AT FIRST?\n         BNE   RCALL030                       NO\n         L     R2,COMM_RECALL_LAST            'WRAP' TO BOTTOM\n         ITRACE ID=WRAP,                                               +\n               RDATA1=R2\n         B     RCALL040\nRCALL030 DS    0H\n         SH    R2,=Y(RECALL_L)                BACK UP 1 ENTRY\nRCALL040 DS    0H\n         C     R2,DXD_RECALL_CURR             SCANNED ENTIRE TABLE?\n         BE    RCALL050                       YES\n         OC    RECALL_LENGTH,RECALL_LENGTH\n         BZ    RCALL020\nRCALL050 DS    0H\n         ITRACE ID=NEW_CURR,                                           +\n               RDATA1=R2\n         ST    R2,DXD_RECALL_CURR             SET CURRENT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSTORE000 DS    0H\n         ITRACE ID=STORE,                                              +\n               DATA1=(COMM_RECALL_CURR,4)\n         ICM   R2,15,COMM_RECALL_CURR         CURRENT RECALL ENTRY\n         BZ    EXIT0000\n         CLC   RCALLREQ_LENGTH,RECALL_LENGTH\n         BNE   STORE010                       NOT SAME\n         CLC   RCALLREQ_CMD,RECALL_LENGTH\n         BE    STORE040                       SAME.. DON'T STORE AGAIN\nSTORE010 DS    0H\n         OC    RECALL_LENGTH,RECALL_LENGTH\n         BZ    STORE030\n         C     R2,COMM_RECALL_LAST            AT BOTTOM OF TABLE?\n         BE    STORE020\n         AH    R2,=Y(RECALL_L)                NEXT ENTRY\n         B     STORE030\nSTORE020 DS    0H\n         L     R2,COMM_RECALL_FIRST           'WRAP' BACK TO TOP\n         ITRACE ID=WRAP,                                               +\n               RDATA1=R2\nSTORE030 DS    0H\n         ITRACE ID=NEW_CURR,                                           +\n               RDATA1=R2\n         ST    R2,COMM_RECALL_CURR            SET 'CURRENT' ADDRESS\n         ST    R2,DXD_RECALL_CURR             SAVE FOR RECALL ALSO\n         MVC   RECALL_LENGTH,RCALLREQ_LENGTH\n         MVC   RECALL_CMD,RCALLREQ_CMD\n         B     EXIT0000\nSTORE040 DS    0H\n         ITRACE ID=DUP\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ICM   R1,15,COMM_RECALL_FIRST        RECALL TABLE ADDRESS\n         BZ    EXIT0000\n         ITRACE ID=TERM,                                               +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=RECALL_L*COMM_RECALL_NBR\n         XC    COMM_RECALL_FIRST,COMM_RECALL_FIRST\n         XC    COMM_RECALL_CURR,COMM_RECALL_CURR\n         XC    COMM_RECALL_LAST,COMM_RECALL_LAST\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START       DC     Q(DXDRCALL)\n                LTORG\nRECALLEND       EQU    *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDRCALL        DSECT\n                COPY   DXDPREF\nDXD_RECALL_CURR DS     A\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECALL          DSECT\nRECALL_LENGTH   DS       H\nRECALL_CMD      DS       CL80\nRECALL_L        EQU      *-RECALL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                RCALLREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     REGEQU\n                END      OSRECALL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSSEP": {"ttr": 3841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\t!\\x0f\\x01\\t4\\x1f\\x16\\x00\\x01\\xb3\\x01\\xb6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-07T16:00:14", "lines": 435, "newlines": 438, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Generate separator lines for APPEND or OFFLOAD                  *\n*                                                                     *\n*     Each member may be followed by up to 3 'separator' lines        *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*     Variables available for customizing the separator lines:        *\n*                                                                     *\n*                                                                     *\n*      &DSN     data set name                                         *\n*      &MEMBER  member name                                           *\n*      &DATE1   date in 'Julian'   form (YYDDD)  (five digits)        *\n*      &DATE2   date in 'Julian'   form (YY.DDD) (six digits)         *\n*      &DATE3   date in MMDDYYYY   form (8 bytes)                     *\n*      &DATE4   date in MM/DD/YYYY form (10 bytes)                    *\n*      &DATE5   date in DDMMYYYY   form (8 bytes)                     *\n*      &DATE6   date in DD/MM/YYYY form (10 bytes)                    *\n*      &DATE7   date in YYYYMMDD   form (8 bytes)                     *\n*      &DATE8   date in YYYY/MM/DD form (10 bytes)                    *\n*      &SEQ     Sequence number (first file is 00001,                 *\n*                                second is 00002, etc)                *\n*      &TIME1   time in HH:MM:SS        (8 bytes)                     *\n*      &TIME2   time in HH:MM:SS:th     (11 bytes)                    *\n*      &RECORDS Number of records in last file appended               *\n*      &SIZE    Number of bytes in last file appended                 *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSEP    CSECT\nOSSEP    AMODE 31\nOSSEP    RMODE ANY\n         USING OSCOMM,R12\n         USING OSSEP,R15\n         B     INIT0000\nMODID    DC    CL8'OSSEP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(SEPEND-OSSEP)\nINIT0000 DS    0H\n         USING SESSION,R11                    DEFINE SESSION BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSSEP,R10                      DEFINE BASE\n         LR    R9,R1\n         USING SEPREQ,R9                      DEFINE BASE\n         L     R1,COMM_DXD                    WORK AREA BASE\n         A     R1,DXD_START                   PLUS DISP\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING SEPDXD,R13                     DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         MVC   WORK_TIME(TIME_L),TIME_I\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9\n         L     R8,SEPREQ_FIRST_SEPARATOR      FIRST SEPARATOR\n         L     R7,SEPREQ_NBR                  NUMBER OF SEPARATORS\n         L     R6,SEPREQ_DCB                  OUTPUT DCB ADDRESS\nMAIN0110 DS    0H\n         MVC   COMM_INFO_01,COMM_BLANKS\n         CLC   0(72,R8),COMM_BLANKS           ALL BLANK?\n         BE    MAIN0290                       YES\n         CLC   =C'BLANK ',0(R8)               WANT A BLANK LINE?\n         BE    MAIN0280                       YES\n         LA    R5,COMM_INFO_01                OUTPUT AREA\n         LR    R2,R8                          SEPARATOR SOURCE\n         LA    R3,72                          LENGTH TO SCAN\nMAIN0120 DS    0H\n         CLC   MEMBER_KEYWORD,0(R2)           MEMBER NAME KEYWORD?\n         BE    MAIN0130                       YES\n         CLC   DSN_KEYWORD,0(R2)              DATA SET NAME KEYWORD?\n         BE    MAIN0140                       YES\n         CLC   SEQ_KEYWORD,0(R2)              SEQUENCE NUMBER KEYWORD?\n         BE    MAIN0150                       YES\n         CLC   TIME1_KEYWORD,0(R2)            TIME (HH.MM.SS.TH)?\n         BE    MAIN0160                       YES\n         CLC   TIME2_KEYWORD,0(R2)            TIME (HH.MM.SS)?\n         BE    MAIN0160                       YES\n         CLC   DATE1_KEYWORD,0(R2)            YYDDD?\n         BE    MAIN0180                       YES\n         CLC   DATE2_KEYWORD,0(R2)            YY.DDD?\n         BE    MAIN0190                       YES\n         CLC   DATE3_KEYWORD,0(R2)            MMDDYYYY?\n         BE    MAIN0200                       YES\n         CLC   DATE4_KEYWORD,0(R2)            MM/DD/YYYY?\n         BE    MAIN0210                       YES\n         CLC   DATE5_KEYWORD,0(R2)            DDMMYYYY?\n         BE    MAIN0220                       YES\n         CLC   DATE6_KEYWORD,0(R2)            DD/MM/YYYY?\n         BE    MAIN0230                       YES\n         CLC   DATE7_KEYWORD,0(R2)            YYYYMMDD?\n         BE    MAIN0240                       YES\n         CLC   DATE8_KEYWORD,0(R2)            YYYY/MM/DD?\n         BE    MAIN0250                       YES\n         CLC   RECORDS_KEYWORD,0(R2)          NUMBER OF RECORDS\n         BE    MAIN0260                       YES\n         CLC   SIZE_KEYWORD,0(R2)             SIZE OF LAST FILE\n         BE    MAIN0270                       YES\n         MVC   0(1,R5),0(R2)                  COPY SEPARATOR TO OUTPUT\n         LA    R5,1(,R5)                      NEXT IN OUTPUT\n         LA    R2,1(,R2)                      NEXT IN SOURCE\n         BCT   R3,MAIN0120                    LOOP\n         B     MAIN0280\nMAIN0130 DS    0H\n         MVC   0(L'SEPREQ_MEMBER,R5),SEPREQ_MEMBER\n         LA    R5,L'SEPREQ_MEMBER(,R5)        NEXT IN OUTPUT\n         LA    R2,L'MEMBER_KEYWORD(,R2)       NEXT IN SOURCE\n         SH    R3,=Y(L'MEMBER_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\nMAIN0140 DS    0H\n         MVC   0(L'SESS_DSN,R5),SESS_DSN      DATA SET NAME\n         LA    R5,L'SESS_DSN(,R5)             NEXT IN OUTPUT\n         LA    R2,L'DSN_KEYWORD(,R2)          NEXT IN SOURCE\n         SH    R3,=Y(L'DSN_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\nMAIN0150 DS    0H\n         L     R0,SEPREQ_SEQ                  SEQUENCE NUMBER\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   COMM_INFO_02(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    COMM_INFO_02(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   0(5,R5),COMM_INFO_02+1         COPY SEQUENCE NUMBER\n         LA    R5,5(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'SEQ_KEYWORD(,R2)          NEXT IN SOURCE\n         SH    R3,=Y(L'SEQ_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\nMAIN0160 DS    0H\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=YYYYDDD,                                       +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR   TRANSLATE IT\n         MVC   0(2,R5),COMM_INFO_02+00        COPY HOURS (HH)\n         MVI   2(R5),C':'                     INSERT COLON\n         MVC   3(2,R5),COMM_INFO_02+02        COPY MINUTES (MM)\n         MVI   5(R5),C':'                     INSERT COLON\n         MVC   6(2,R5),COMM_INFO_02+04        COPY SECONDS (SS)\n         CLC   TIME2_KEYWORD,0(R2)            TIME 2 (HH.MM.SS)?\n         BE    MAIN0170\n         MVI   8(R5),C':'                     INSERT COLON\n         MVC   9(2,R5),COMM_INFO_02+06        COPY SECONDS (TH)\n         LA    R5,11(,R5)                     NEXT IN OUTPUT\n         LA    R2,L'TIME1_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'TIME1_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\nMAIN0170 DS    0H\n         LA    R5,8(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'TIME2_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'TIME2_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date (YYYYDDD)                                               *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=DATE1\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=YYYYDDD,                                       +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   0(7,R5),COMM_INFO_02+1         COPY YEAR AND DATE\n         LA    R5,7(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'DATE1_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE1_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date (YYYY.DDD)                                              *\n* ------------------------------------------------------------------- *\nMAIN0190 DS    0H\n         ITRACE ID=DATE2\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=YYYYDDD,                                       +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   0(4,R5),COMM_INFO_02+1         COPY YEAR\n         MVI   4(R5),C'.'                     INSERT PERIOD\n         MVC   5(3,R5),COMM_INFO_02+5         COPY DAY OF YEAR\n         LA    R5,8(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'DATE2_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE2_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date (MMDDYYYY)                                              *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=DATE3\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=MMDDYYYY,                                      +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   0(8,R5),COMM_INFO_02           COPY DATE\n         LA    R5,8(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'DATE3_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE3_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date form 4 (MM/DD/YYYY)                                     *\n* ------------------------------------------------------------------- *\nMAIN0210 DS    0H\n         ITRACE ID=DATE4\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=MMDDYYYY,                                      +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   00(2,R5),COMM_INFO_02+00       COPY MONTH\n         MVI   02(R5),C'/'                    INSERT SLASH\n         MVC   03(2,R5),COMM_INFO_02+02       COPY DAY OF MONTH\n         MVI   05(R5),C'/'                    INSERT SLASH\n         MVC   06(4,R5),COMM_INFO_02+04       COPY YEAR\n         LA    R5,10(,R5)                     NEXT IN OUTPUT\n         LA    R2,L'DATE4_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE4_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date form 5 (DDMMYYYY)                                       *\n* ------------------------------------------------------------------- *\nMAIN0220 DS    0H\n         ITRACE ID=DATE5\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=DDMMYYYY,                                      +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   0(8,R5),COMM_INFO_02           COPY DATE\n         LA    R5,8(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'DATE5_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE5_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date form 6 (DD/MM/YYYY)                                     *\n* ------------------------------------------------------------------- *\nMAIN0230 DS    0H\n         ITRACE ID=DATE6\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=DDMMYYYY,                                      +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   00(2,R5),COMM_INFO_02+00       COPY DAY OF MONTH\n         MVI   02(R5),C'/'                    INSERT SLASH\n         MVC   03(2,R5),COMM_INFO_02+02       COPY MONTH\n         MVI   05(R5),C'/'                    INSERT SLASH\n         MVC   06(4,R5),COMM_INFO_02+04       COPY YEAR\n         LA    R5,10(,R5)                     NEXT IN OUTPUT\n         LA    R2,L'DATE6_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE6_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date form 7 (YYYYMMDD)                                       *\n* ------------------------------------------------------------------- *\nMAIN0240 DS    0H\n         ITRACE ID=DATE7\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=YYYYMMDD,                                      +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   0(8,R5),COMM_INFO_02           COPY DATE\n         LA    R5,8(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'DATE7_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE7_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280                       ALL DATA CHECKED\n* ------------------------------------------------------------------- *\n*        Date form 8 (YYYY/MM/DD)                                     *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=DATE8\n         TIME  DEC,                                                    +\n               COMM_INFO_03,                                           +\n               DATETYPE=YYYYMMDD,                                      +\n               LINKAGE=SYSTEM,                                         +\n               MF=(E,WORK_TIME)\n         UNPK  COMM_INFO_02(9),COMM_INFO_03+8(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   00(4,R5),COMM_INFO_02+00       COPY YEAR\n         MVI   04(R5),C'/'                    INSERT SLASH\n         MVC   05(2,R5),COMM_INFO_02+04       COPY MONTH\n         MVI   07(R5),C'/'                    INSERT SLASH\n         MVC   08(4,R5),COMM_INFO_02+06       COPY DAY OF MONTH\n         LA    R5,10(,R5)                     NEXT IN OUTPUT\n         LA    R2,L'DATE8_KEYWORD(,R2)        NEXT IN SOURCE\n         SH    R3,=Y(L'DATE8_KEYWORD)\n         BH    MAIN0120                       CHECK FOR ANOTHER KEYWORD\n         B     MAIN0280\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0260 DS    0H\n         L     R1,SEPREQ_RECORDS              NUMBER OF RECORDS\n         ITRACE ID=RECORDS,                                            +\n               RDATA1=R1\n         CVD   R1,COMM_DWORD\n         MVC   COMM_INFO_02(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_02(L'EDIT_WORD_2),COMM_DWORD+4\n         MVC   0(7,R5),COMM_INFO_02+1         COPY NUMBER OF RECORDS\n         LA    R5,7(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'RECORDS_KEYWORD(,R2)      NEXT IN SOURCE\n         SH    R3,=Y(L'RECORDS_KEYWORD)\n         BH    MAIN0120                       CHECK FOR NEXT KEYWORD\n         B     MAIN0280\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0270 DS    0H\n         L     R1,SEPREQ_BYTES                NUMBER OF BYTES\n         ITRACE ID=BYTES,                                              +\n               RDATA1=R1\n         CVD   R1,COMM_DWORD\n         MVC   COMM_INFO_02(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    COMM_INFO_02(L'EDIT_WORD_2),COMM_DWORD+4\n         MVC   0(7,R5),COMM_INFO_02+1         COPY NUMBER OF RECORDS\n         LA    R5,7(,R5)                      NEXT IN OUTPUT\n         LA    R2,L'SIZE_KEYWORD(,R2)         NEXT IN SOURCE\n         SH    R3,=Y(L'SIZE_KEYWORD)\n         BH    MAIN0120                       CHECK FOR NEXT KEYWORD\n         B     MAIN0280\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0280 DS    0H\n         PUT   (R6),COMM_INFO_01              OUTPUT SEPARATOR\nMAIN0290 DS    0H\n         LA    R8,72(,R8)                     NEXT SEPARATOR\n         BCT   R7,MAIN0110                    LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START        DC     Q(SEPDXD)\nTIME_I           TIME   LINKAGE=SYSTEM,MF=L\nTIME_L           EQU    *-TIME_I\n\nEDIT_WORD_1      DC     X'F02020202120'\nEDIT_WORD_2      DC     X'4020202020202120'\n\nDATE1_KEYWORD    DC     C'&&DATE1'\nDATE2_KEYWORD    DC     C'&&DATE2'\nDATE3_KEYWORD    DC     C'&&DATE3'\nDATE4_KEYWORD    DC     C'&&DATE4'\nDATE5_KEYWORD    DC     C'&&DATE5'\nDATE6_KEYWORD    DC     C'&&DATE6'\nDATE7_KEYWORD    DC     C'&&DATE7'\nDATE8_KEYWORD    DC     C'&&DATE8'\nDSN_KEYWORD      DC     C'&&DSN'\nMEMBER_KEYWORD   DC     C'&&MEMBER'\nSEQ_KEYWORD      DC     C'&&SEQ'\nTIME1_KEYWORD    DC     C'&&TIME1'\nTIME2_KEYWORD    DC     C'&&TIME2'\nRECORDS_KEYWORD  DC     C'&&RECORDS'\nSIZE_KEYWORD     DC     C'&&SIZE'\n\n                 LTORG\n\nSEPEND           EQU    *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEPDXD          DSECT\n                COPY     DXDPREF\n\nWORK_TIME       DS       0F,(TIME_L)X\n\nSEPDXD_L        EQU      *-SEPDXD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SEPREQ   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               IBMMAC   DCBD=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSSEP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSSKEL": {"ttr": 7182, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x12\\x01\\t!\\x0f\\x01\\t6/\\x153\\x02^\\x02^\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:33:12", "lines": 606, "newlines": 606, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSSKEL                                                *\n*                                                                     *\n*  This can be used as a starting point for developing your           *\n*  own 'format'.                                                      *\n*                                                                     *\n*  The data has already been stored in a 'data space'.  Records are   *\n*  accessed using a relative record type scheme.  The first record    *\n*  is record number 1, the second is record number 2, etc.  Data is   *\n*  retrieved using the DSPCREQ parameter block.  The data records     *\n*  can be accessed in any order.  This you can retrieve record 6      *\n*  then record 15, then record 2. The data can be updated             *\n*  as the record length does not change.                              *\n*                                                                     *\n*  Why would you want to update the data since On Screen is           *\n*  read-only?  Any reason you want... the PDS(/E) directory           *\n*  displays update the directory entries of you rename or delete      *\n*  a member.  If a member is deleted, On Screen \"remembers\" and       *\n*  does not allow any other commands for that member.                 *\n*                                                                     *\n*  Add any new panels you want to the ISPPLIB.  Any new SPF \"fields\"  *\n*  will need to be VDEFINEd.                                          *\n*                                                                     *\n*  For full explantions of VDEFINE or SPF dynamic areas please refer  *\n*  to the IBM SPF manuals.                                            *\n*                                                                     *\n*  Most On Screen panels use an SPF dynamic area.  Because On Screen  *\n*  uses panels with dynamic areas so frequently, I choose to use      *\n*  the name \"VDATA\" for the SPF variable in in all the panels.        *\n*                                                                     *\n*  If you choose to use a dynamic area                                *\n*   . Set COMM_VDATA_FUNC to $VDATA_GETMAIN and call OSVDATA          *\n*     with the address of the panel name in R1.                       *\n*     - OSVDATA will issue a PQUERY                                   *\n*         SPF_VWIDTH will contain the number of columns               *\n*         SPF_VDEPTH will contain the number of rows                  *\n*     - OSVDATA will compute the size of the dynamic area             *\n*         and GETMAIN storage.                                        *\n*     - OSVDATA will return the address of the storage in R1          *\n*         and the length in R0.                                       *\n*                                                                     *\n*   . you should save the returned address and length in your         *\n*     own work area.                                                  *\n*                                                                     *\n*                                                                     *\n*   . When you want to display the data                               *\n*     set SESS_DISP_PANEL to the name of the panel                    *\n*     set SESS_DISP_VDATA_ADDR to the address of the dynamic area     *\n*       storage (returned in R1 by OSVDATA on $VDATA_GETMAIN call).   *\n*     set SESS_DISP_VDATA_LENGTH to the length of the dynamic area    *\n*       storage (returned in R0 by OSVDATA on $VDATA_GETMAIN call).   *\n*     set SESS_DISP_CURSOR to where you want the cursor to be in      *\n*       the dynamic area or zero.  A bit of explantion here.. the     *\n*       cursor position is the byte's number relative to the          *\n*       beginning of the area.  So, the first byte is binary 1,       *\n*       the second byte is binary 2, etc.  To find the first byte     *\n*       on the fourth line, multiply the width by 4 and add 1.        *\n*       For the 22nd byte one line 7, multiply the width (SPF_VWIDTH) *\n*       by 7 (the line number) add 22 (the column number) and add 1.  *\n*                                                                     *\n*                                                                     *\n*   . during CLEANUP                                                  *\n*     set COMM_VDATA_FUNC to $VDATA_FREEMAIN                          *\n*     set R0 to the length of the area (the value you got in R0 on    *\n*        $VDATA_GETMAIN call)                                         *\n*     set R1 to the length of the area (the value you got in R1 on    *\n*        $VDATA_GETMAIN call)                                         *\n*     call OSVDATA to free the storage                                *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSKEL CSECT\nOSSKEL AMODE 31\nOSSKEL RMODE ANY\n         USING OSCOMM,R12\n         USING OSSKEL,R15\n         B     INIT0000\nMODID    DC    CL8'OSSKEL'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSSKELEND-OSSKEL)\nINIT0000 DS    0H\n         USING SESSION,R11                      DEFINE COMMON AREA BASE\n         USING DS1FMTID,SESS_DSCB               DEFINE BASE\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING OSSKEL,R10                       DEFINE BASES\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*        Determine if this is INITIAL invocation                      *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\n         OC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         BNZ   ERR0020\n         LA    R0,OSSKEL_DXD_L\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSSKEL_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         ST    R13,4(,R2)                        SAVE R13\n         ST    R2,8(,R13)                        CHAIN SAVE AREA\n         LR    R13,R2                            COPY WORK AREA ADDRESS\n         USING OSSKEL_WORK,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         XC    DXD_RC,DXD_RC\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         MVC   DXD_PANEL,????????                <--- YOUR PANEL NAME\n         LA    R1,DXD_PANEL                      PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN    SET VDATA FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                           GETMAIN VDATA STORAGE\n         ST    R0,DXD_VDATA_LENGTH               SAVE VDATA LENGTH\n         ST    R1,DXD_VDATA_ADDR                 SAVE VDATA ADDR\n         ITRACE ID=VDATA,                                              +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         MVC   DXD_VDEPTH,SPF_VDEPTH             SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH             SAVE WIDTH\n         XC    DXD_CURSOR,DXD_CURSOR             INITIALIZE CURSOR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Re-establish save area and determine function                *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0020\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2,                                             +\n               DATA1=(SESS_FORMAT_FLAGS,1)\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL  PROCESS CONTROL STMT?\n         BE    CNTL0000                           YES\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP  CLEAN UP?\n         BE    CLEAN000                           YES\n         B     MAIN0000                           OTHERWISE FORMAT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        PROCESS CONTROL STATEMENTS                                   *\n*                                                                     *\n*        ADDRESS OF CONTROL STATEMENT IS IN                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCNTL0000 DS    0H\n         ITRACE ID=CNTLSTMT,                                           +\n               RDATA1=R1\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Format data                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=FORMAT\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*         Initialize the VDATA buffer                                 *\n* ------------------------------------------------------------------- *\n         L     R0,DXD_VDATA_ADDR                BUFFER ADDRESS\n         L     R1,DXD_VDATA_LENGTH              BUFFER SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_VDATA_ADDR                BUFFER ADDRESS\n         L     R7,DXD_VDEPTH                    NUMBER OF LINES\n         L     R6,SESS_IO_AREA                  I/O AREA ADDRESS\n         ST    R6,DSPCREQ_RECORD_ADDR\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" the data and build the body of the SPF panel      *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          RETRIEVE DATA\n         ITRACE ID=GET_RC,                                             +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    MAIN0110                         NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n\n\n*\n*\n*      Build the data for the dynamic area here.\n*\n*      R12 is address of OSCOMM\n*      R11 is address of SESSION\n*      R10 is base of this CSECT\n*      R9  is address of SPFDATA\n*      R8  is address of current line in VDATA\n*      R7  is number of lines remaining in vdata\n*\n*      Use the equates in $ATTRS to set attribute bytes\n*      Line length is in DXD_VWIDTH\n*\n*\n\n\n\n\n\n\n\n         BCT   R7,MAIN0100                      MINUS 1 LINE\n         ITRACE ID=FULL\n         B     MAIN0150\nMAIN0100 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER\n         A     R1,F1                            ADD 1\n         C     R1,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?\n         BH    MAIN0110                         YES\n         ST    R1,DSPCREQ_RECORD_NBR            SAVE NEW RECORD NUMBER\n         B     MAIN0010                         GET/PROCESS NEXT RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        End of data reached                                          *\n*                                                                     *\n*   End of data has been reached.  There is still available space     *\n*   in the VDATA area.  You can build 'trailer' type info now.        *\n*                                                                     *\n*   R8 is the 1st byte of the current in the VDATA buffer.            *\n*   R7 is the number of remaining lines                               *\n*   DXD_VWIDTH is the length of each line                             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=END_DATA,                                           +\n               RDATA1=R7,                       LINES REMAINING        +\n               RDATA2=R8                        ADDRESS IN VDATA BUFFER\n* ------------------------------------------------------------------- *\n*         Build DSCB info                                             *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         MVC   SPF_RECORD_FROM,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         ITRACE ID=OSDSCB\n         L     R15,COMM_V_OSDSCB                OSDSCB ENTRY POINT\n         BALR  R14,R15                          FORMAT THE DSCB INFO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display the panel                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               DATA1=DXD_PANEL,                                        +\n               RDATA2=R15\n         MVC   SESS_DISP_PANEL,DXD_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         MVC   SESS_DISP_CURSOR,DXD_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   EXIT0000                         YES\n         OC    SESS_RC,SESS_RC                  RC=0\n         BZ    MAIN0300                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for command(s)                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         CLC   SPF_ZCMD,???????????             ????? COMMAND\n         BE    .........                        YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        No command has been recognized                               *\n*        Check for scroll commands                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         MVC   SESS_VERTICAL_SCROLL,SPF_ZSCROLLN\n         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    MAIN0390                         YES\n         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?\n         BE    MAIN0360                         YES\n         CLI   SPF_ZVERB,C'L'                   SCROLL LEFT?\n         BE    MAIN0410                         YES\n         CLI   SPF_ZVERB,C'R'                   SCROLL RIGHT?\n         BE    MAIN0440                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    MAIN0380                         YES\n         CLI   SPF_ZVERB,C'U'                   SCROLL UP?\n         BE    MAIN0330                         YES\n         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?\n         BE    MAIN0150                         YES\n\n    IF YOU GET  HERE, THE COMMAND WAS NOT RECOGNIZED.\n    YOU PROBABLY WANT TO PUT MESSAGES IN SPF_MSG_1 TO SPF_MSG_5\n\n         B     MAIN0200                         DISPLAY AGAIN WITH MSG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0380                         YES\n         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D\n         SR    R2,R1                            MINUS SCROLL AMOUNT\n         ICM   R1,15,DATASPACE_1_FIRST_RECORD   ANY STARTING RECORD?\n         BNZ   MAIN0340                         YES\n         LA    R1,1                             DEFAULT TO 1\nMAIN0340 DS    0H\n         CR    R2,R1                            LESS THAN MININUM?\n         BNL   MAIN0350                         NO\n         LR    R2,R1                            DON'T SCROLL PAST 1ST\nMAIN0350 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD SET 1ST TO DISPLAY\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0360 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0390                         YES\n         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D\n         AR    R2,R1                            PLUS RECORDS TO SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD\n         BH    MAIN0370                         BEYOND END OF DATA\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD 1ST TO DISPLAY\n         B     MAIN0000                         REBUILD EVERYTHING\nMAIN0370 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD\n         C     R2,DXD_VDEPTH                    MORE THAN SCREEN?\n         BNH   MAIN0150                         NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED\n         S     R2,DXD_VDEPTH                    MINUS 1 SCREEN\n         A     R2,F2                            PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0380 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         B     MAIN0000                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Don't use a \"LA   R2,2(,R2)\"  here to add 2                  *\n*        because \"LA\" always turns off the high order                 *\n*        bit(s) and therefore the sign bit.                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0390 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         L     R2,DATASPACE_1_LAST_RECORD          HIGH RECORD STORED\n         BCTR  R2,0\n         S     R2,DXD_VDEPTH                       MINUS DEPTH\n         A     R2,F2                               PLUS 2\n         CH    R2,H1                               ONE OR MORE?\n         BNL   MAIN0400                            YES\n         LH    R2,H1                               FORCE RECORD 1\nMAIN0400 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD\n         B     MAIN0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL LEFT                                                  *\n* ------------------------------------------------------------------- *\nMAIN0410 DS    0H\n         ITRACE ID=LEFT,                                               +\n               DATA1=(SESS_HORIZONTAL_SCROLL,4)\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0420                            YES\n         L     R1,SESS_HORIZONTAL_SCROLL           COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         SR    R2,R1                               MINUS SCROLL\n         CH    R2,H1                               AT LEAST 1 LEFT?\n         BNL   MAIN0430                            NO\nMAIN0420 DS    0H\n         LH    R2,H1                               STOP AT COLUMN 1\nMAIN0430 DS    0H\n         ITRACE ID=LEFT_1,                                             +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL RIGHT                                                 *\n* ------------------------------------------------------------------- *\nMAIN0440 DS    0H\n         ITRACE ID=RIGHT,                                              +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,4)\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0470                            YES\n         L     R1,SESS_HORIZONTAL_SCROLL           COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         AR    R2,R1                               PLUS SCROLL\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS       HFS?\n         BO    MAIN0460                            YES.. ALLOW ANYTHING\n         OC    DS1LRECL,DS1LRECL                   LRECL = ZERO?\n         BZ    MAIN0450                            YES..\n         CH    R2,DS1LRECL                         over RECORD SIZE?\n         BH    MAIN0000                            YES.. STAY PUT\n         B     MAIN0460\nMAIN0450 DS    0H\n         CH    R2,DS1BLKL                          over BLOCK SIZE\n         BH    MAIN0000                            YES.. STAY PUT\nMAIN0460 DS    0H\n         ITRACE ID=RIGHT_1,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0000                            REBUILD EVERYTHING\nMAIN0470 DS    0H\n         LH    R2,DS1LRECL                         RECORD LENGTH\n         S     R1,DXD_VWIDTH                       MINUS 1 SCREEN WIDTH\n         A     R1,F1                               PLUS 1\n         ITRACE ID=RIGHT_2,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DSPC_ERR\n         MVC   SPF_MSG_1,COMM_MSG_1                COPY MESSAGES\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         LA    R1,DISPLAY\n         ST    R1,DXD_SPF_PARM1\n         LA    R1,OSERR\n         ST    R1,DXD_SPF_PARM2\n         OI    DXD_SPF_PARM2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                             DISPLAY MESSAGES\n         MVC   SPF_MSG_1,COMM_BLANKS               RESET MESSAGES\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         STH   R15,SESS_RC\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE         SIGNAL MAINLINE\n         B     EXIT0000\nERR0020  DS    0H\n         DC    H'0'                                SHOULD NOT HAPPEN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP,                                           +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n         ICM   R1,15,DXD_VDATA_ADDR                VDATA GETMAINED?\n         BZ    CLEAN010                            NO\n         L     R0,DXD_VDATA_LENGTH                 VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                             FREE VDATA\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\nCLEAN010 DS    0H\n         LA    R0,OSSKEL_DXD_L                     WORK AREA SIZE\n         LR    R1,R13                              COPY ADDRESS\n         L     R13,4(,R13)                         RESTORE R13\n         FREEMAIN RU,                              FREE WORK AREA      +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                          RETURN CODE\n         L     R13,4(,R13)                         RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                        RESTORE R14\n         LM    R0,R12,20(R13)                      RESTORE REGISTERS\n         BR    R14                                 RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1              DC    F'1'\nF2              DC    F'2'\nH1              DC    H'1'\nDISPLAY         DC    CL8'DISPLAY'\nOSERR           DC    CL8'OSERR'                   ERROR MESSAGE PANEL\n                LTORG\nOSSKELEND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSKEL_WORK         DSECT\n                    COPY     DXDPREF\n\nDXD_PANEL           DS       CL8            PANEL NAME\nDXD_VDATA_ADDR      DS       A              VDATA BUFFER ADDRESS\nDXD_VDATA_LENGTH    DS       F              VDATA BUFFER LENGTH\nDXD_CURSOR          DS       F              CURSOR POSITION\n\nDXD_VWIDTH          DS       F              DYNAMIC AREA WIDTH\nDXD_VDEPTH          DS       F              DYNAMIC AREA DEPTH\n\nDXD_SPF_PARMS       DS       0A\nDXD_SPF_PARM1       DS       A\nDXD_SPF_PARM2       DS       A\n\nDXD_RC              DS       H\n\n                    DSPCREQ  DSECT=NO\nOSSKEL_DXD_L        EQU      *-OSSKEL_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY    DSECT\n         IBMMAC   VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSSKEL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSSPFD": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     This is separately LINKEDITed because the contents will         *\n*     be modified as On Screen runs.  The main parts of On Screen     *\n*     are re-entrant, refreshable, and re-usable.                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n       OSSPFD  TYPE=CSECT\n       END     OSSPFD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSSPFV": {"ttr": 9740, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\x01\\x01\\t \\x8f\\x01\\x10\\x01?\\x149\\x01\\xce\\x01\\x7f\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2009-07-27T00:00:00", "modifydate": "2010-01-13T14:39:01", "lines": 462, "newlines": 383, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     This is separately LINKEDITed because the contents will         *\n*     be modified as On Screen runs.  The main parts of On screen     *\n*     are re-entrant, refreshable, and re-usable.                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSPFV   CSECT\nOSSPFV   AMODE 31\nOSSPFV   RMODE ANY\n         VDEF  BASE=OSSPFD\n* ------------------------------------------------------------------- *\n*       System variables                                              *\n* ------------------------------------------------------------------- *\n         VDEF  NAME=LVLINE,          DEFINE VARIABLE                   +\n               DATA=SPF_LVLINE,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VDEPTH,          DEFINE VARIABLE                   +\n               DATA=SPF_VDEPTH,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VTYPE,           DEFINE VARIABLE                   +\n               DATA=SPF_VTYPE,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=VWIDTH,          DEFINE VARIABLE                   +\n               DATA=SPF_VWIDTH,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=ZSCROLLN,        DEFINE VARIABLE                   +\n               DATA=SPF_ZSCROLLN,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VPOS,            DEFINE VARIABLE                   +\n               DATA=SPF_CURSOR_POSITION,      NAME IN OSSPFD           +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=ZSCROLLA,        DEFINE VARIABLE                   +\n               DATA=SPF_ZSCROLLA,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=ZVERB,           DEFINE VARIABLE                   +\n               DATA=SPF_ZVERB,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=RFIND,           DEFINE VARIABLE                   +\n               DATA=SPF_RFIND,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=ZCMD,            DEFINE VARIABLE                   +\n               DATA=SPF_ZCMD,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=VSCR,            DEFINE VARIABLE                   +\n               DATA=SPF_VSCR,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VNEVER          .. NEVER VDEFINED\n         VDEF  NAME=ZSCREENC,        DEFINE VARIABLE                   +\n               DATA=SPF_ZSCREENC,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=5,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET            .. NEVER VDEFINED\n\n* ------------------------------------------------------------------- *\n*        On Screen variables                                          *\n* ------------------------------------------------------------------- *\n         VDEF  NAME=PDSN,            DEFINE VARIABLE                   +\n               DATA=SPF_DSN,         .. FIELD NAME IN OSSPFD           +\n               LENGTH=44,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PDD,             DEFINE VARIABLE                   +\n               DATA=SPF_DD,          .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PMEMBER,         DEFINE VARIABLE                   +\n               DATA=SPF_MEMBER,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCSECT,          DEFINE VARIABLE                   +\n               DATA=SPF_CSECT,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PPATH,           DEFINE VARIABLE                   +\n               DATA=SPF_PATH,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=256,           .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRPATH,          DEFINE VARIABLE                   +\n               DATA=SPF_REAL_PATH,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=256,           .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POPATH,          DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_PATH, .. FIELD NAME IN OSSPFD           +\n               LENGTH=256,           .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PPL,             DEFINE VARIABLE                   +\n               DATA=SPF_PATH_LENGTH, .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRPL,            DEFINE VARIABLE                   +\n               DATA=SPF_REAL_PATH_LENGTH,     NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PUNIT,           DEFINE VARIABLE                   +\n               DATA=SPF_UNIT,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRECF,           DEFINE VARIABLE                   +\n               DATA=SPF_RECORD_FROM, .. FIELD NAME IN OSSPFD           +\n               LENGTH=09,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRECT,           DEFINE VARIABLE                   +\n               DATA=SPF_RECORD_TO,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=09,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRECO,           DEFINE VARIABLE                   +\n               DATA=SPF_RECORD_OF,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=09,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCOLF,           DEFINE VARIABLE                   +\n               DATA=SPF_COLUMN_FROM, .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCOLT,           DEFINE VARIABLE                   +\n               DATA=SPF_COLUMN_TO,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCOLO,           DEFINE VARIABLE                   +\n               DATA=SPF_COLUMN_OF,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PVOLSER,         DEFINE VARIABLE                   +\n               DATA=SPF_VOLSER,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=06,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PDSORG,          DEFINE VARIABLE                   +\n               DATA=SPF_DSORG,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=04,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRECFM,          DEFINE VARIABLE                   +\n               DATA=SPF_RECFM,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=03,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PORECFM,         DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_RECFM,   FIELD NAME IN OSSPFD           +\n               LENGTH=03,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PLRECL,          DEFINE VARIABLE                   +\n               DATA=SPF_LRECL,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POLRECL,         DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_LRECL,   FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PBLKSI,          DEFINE VARIABLE                   +\n               DATA=SPF_BLOCK_SIZE,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PKEYL,           DEFINE VARIABLE                   +\n               DATA=SPF_KEY_LENGTH,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRKP,            DEFINE VARIABLE                   +\n               DATA=SPF_RKP,         .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PVTYPE,          DEFINE VARIABLE                   +\n               DATA=SPF_VSAM_TYPE,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=04,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PASCII,          DEFINE VARIABLE                   +\n               DATA=SPF_ASCII,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCAPS,           DEFINE VARIABLE                   +\n               DATA=SPF_CAPS,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PTAGGED,         DEFINE VARIABLE                   +\n               DATA=SPF_TAGGED,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=10,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=F,               DEFINE VARIABLE                   +\n               DATA=SPF_FUNCTION,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=1,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PFORMAT,         DEFINE VARIABLE                   +\n               DATA=SPF_FORMAT,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PODSN,           DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_DSN,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=44,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POMEM,           DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_MEMBER,  FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PNDSN,           DEFINE VARIABLE                   +\n               DATA=SPF_NEW_DSN,     .. FIELD NAME IN OSSPFD           +\n               LENGTH=44,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PNMEM,           DEFINE VARIABLE                   +\n               DATA=SPF_NEW_MEMBER,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POD,             DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_DISP, .. FIELD NAME IN OSSPFD           +\n               LENGTH=3,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POVOL,           DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_VOLSER,  FIELD NAME IN OSSPFD           +\n               LENGTH=06,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POUNIT,          DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_UNIT, .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POPRI,           DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_SPACE_PRI,     NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=POSEC,           DEFINE VARIABLE                   +\n               DATA=SPF_OUTPUT_SPACE_SEC,     NAME IN OSSPFD           +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCDSN,           DEFINE VARIABLE                   +\n               DATA=SPF_CONFIG_DSN,  .. NAME IN OSSPFD                 +\n               LENGTH=44,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCMEM,           DEFINE VARIABLE                   +\n               DATA=SPF_CONFIG_MEMBER,  NAME IN OSSPFD                 +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCDESC,          DEFINE VARIABLE                   +\n               DATA=SPF_CONFIG_DESC, .. NAME IN OSSPFD                 +\n               LENGTH=62,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCVOL,           DEFINE VARIABLE                   +\n               DATA=SPF_CONFIG_VOLSER,  NAME IN OSSPFD                 +\n               LENGTH=06,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PREF,            DEFINE VARIABLE                   +\n               DATA=SPF_PREFIX,      .. NAME IN OSSPFD                 +\n               LENGTH=04,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PYN,             DEFINE VARIABLE                   +\n               DATA=SPF_YES_OR_NO,   .. FIELD NAME IN OSSPFD           +\n               LENGTH=03,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSEP1,           DEFINE VARIABLE                   +\n               DATA=SPF_SEPARATOR_1, .. FIELD NAME IN OSSPFD           +\n               LENGTH=72,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PFROMK,          DEFINE VARIABLE                   +\n               DATA=SPF_FROM_KEY,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=40,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSMFDESC,        DEFINE VARIABLE                   +\n               DATA=SPF_SMF_DESC,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=L'SPF_SMF_DESC, . LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PTOK,            DEFINE VARIABLE                   +\n               DATA=SPF_TO_KEY,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=40,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRBA,            DEFINE VARIABLE                   +\n               DATA=SPF_RBA,         .. FIELD NAME IN OSSPFD           +\n               LENGTH=10,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PFIRST,          DEFINE VARIABLE                   +\n               DATA=SPF_FIRST_RECORD, . FIELD NAME IN OSSPFD           +\n               LENGTH=10,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PRECORDS,        DEFINE VARIABLE                   +\n               DATA=SPF_RECORDS,     .. FIELD NAME IN OSSPFD           +\n               LENGTH=10,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSEP2,           DEFINE VARIABLE                   +\n               DATA=SPF_SEPARATOR_2, .. FIELD NAME IN OSSPFD           +\n               LENGTH=72,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSEP3,           DEFINE VARIABLE                   +\n               DATA=SPF_SEPARATOR_3, .. FIELD NAME IN OSSPFD           +\n               LENGTH=72,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSEP4,           DEFINE VARIABLE                   +\n               DATA=SPF_SEPARATOR_4, .. FIELD NAME IN OSSPFD           +\n               LENGTH=72,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSEP5,           DEFINE VARIABLE                   +\n               DATA=SPF_SEPARATOR_5, .. FIELD NAME IN OSSPFD           +\n               LENGTH=72,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PSEP6,           DEFINE VARIABLE                   +\n               DATA=SPF_SEPARATOR_6, .. FIELD NAME IN OSSPFD           +\n               LENGTH=72,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCBNAME,         DEFINE VARIABLE                   +\n               DATA=SPF_CB_NAME,     .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PCBDESC,         DEFINE VARIABLE                   +\n               DATA=SPF_CB_DESCRIPTION, FIELD NAME IN OSSPFD           +\n               LENGTH=40,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n\n         VDEF  NAME=PR,              DEFINE VARIABLE                   +\n               DATA=SPF_REGISTER,    .. FIELD NAME IN OSSPFD           +\n               LENGTH=03,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PLABEL1,         DEFINE VARIABLE                   +\n               DATA=SPF_LABEL1,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=63,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PLABEL2,         DEFINE VARIABLE                   +\n               DATA=SPF_LABEL2,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=63,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PBEGIN,          DEFINE VARIABLE                   +\n               DATA=SPF_BEGIN,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PEND,            DEFINE VARIABLE                   +\n               DATA=SPF_END,         .. FIELD NAME IN OSSPFD           +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n\n         VDEF  NAME=PMSG1,           DEFINE VARIABLE                   +\n               DATA=SPF_MSG_1,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PMSG2,           DEFINE VARIABLE                   +\n               DATA=SPF_MSG_2,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PMSG3,           DEFINE VARIABLE                   +\n               DATA=SPF_MSG_3,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PMSG4,           DEFINE VARIABLE                   +\n               DATA=SPF_MSG_4,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PMSG5,           DEFINE VARIABLE                   +\n               DATA=SPF_MSG_5,       .. FIELD NAME IN OSSPFD           +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PADDR,           DEFINE VARIABLE                   +\n               DATA=SPF_ADDRESS,     .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PAREA,           DEFINE VARIABLE                   +\n               DATA=SPF_AREA,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PLEN,            DEFINE VARIABLE                   +\n               DATA=SPF_LENGTH,      .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PNAME,           DEFINE VARIABLE                   +\n               DATA=SPF_SPACE_NAME,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PASID,           DEFINE VARIABLE                   +\n               DATA=SPF_SPACE_ASID,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=PALET,           DEFINE VARIABLE                   +\n               DATA=SPF_SPACE_ALET,  .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR,            .. FORMAT                         +\n               FLAGS=$VGET           .. VGET WHEN VDEFINED\n         VDEF  NAME=DDID,            DEFINE VARIABLE                   +\n               DATA=SPF_DDID,        .. FIELD NAME IN OSSPFD           +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY  VARDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD TYPE=DSECT\n         END   OSSPFV\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSSTOR": {"ttr": 3851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x08\\x01\\t \\x8f\\x01\\t4\\x1f\\x16\\x01\\x01\\xf2\\x01\\xf5\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-07-27T00:00:00", "modifydate": "2009-12-07T16:01:08", "lines": 498, "newlines": 501, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSSTOR                                                *\n*                                                                     *\n*  Display storage                                                    *\n*                                                                     *\n*    To allow storage to be viewed.                                   *\n*                                                                     *\n*                                                                     *\n*    On entry R1 is address of parm list                              *\n*                                                                     *\n*     Parm list                                                       *\n*            address of storage to be displayed                       *\n*            length of storage to be displayed                        *\n*            ALET of storage to be displayed                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSTOR   CSECT\nOSSTOR   AMODE 31\nOSSTOR   RMODE ANY\n         USING OSSTOR,R15\n         B     INIT0000\nMODID    DC    CL8'OSSTOR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\nMODLEN   DC    A(STOREND-OSSTOR)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)\n         LR    R10,R15                        COPY BASE\n         DROP  R15\n         USING OSSTOR,R10\n         USING OSCOMM,R12\n         USING SESSION,R11\n         LR    R8,R1                          COPY PARM LIST ADDRESS\n         USING STORPARM,R8\n         GETMAIN RU,                                                   +\n               LV=DXDSTOR_L,                                           +\n               LOC=ANY\n         XC    0(DXDSTOR_L,R1),0(R1)\n         ST    R1,8(,R13)                     DXD BASE\n         ST    R13,4(,R1)\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING DXDSTOR,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R8\n         MVC   DXD_START_ADDR,STORE_AREA_ADDR COPY ADDRESS\n         MVC   DXD_START_LENGTH,STORE_AREA_LENGTH\n         XC    DXD_START_DISP,DXD_START_DISP\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n         MVC   SPF_ZCMD,COMM_BLANKS            RESET COMMAND\n         MVC   SPF_AREA,STORE_AREA_NAME        AREA NAME\n         UNPK  DXD_DATA2(9),STORE_AREA_ADDR(5) UNPACK ADDRESS\n         MVC   SPF_ADDRESS,STORE_AREA_ADDR\n         TR    SPF_ADDRESS,COMM_HEXCHAR\n         UNPK  DXD_DATA2(9),STORE_AREA_LENGTH(5)\n         MVC   SPF_LENGTH,DXD_DATA2\n         TR    SPF_LENGTH,COMM_HEXCHAR\n         UNPK  DXD_DATA2(9),STORE_AREA_ALET(5)\n         MVC   SPF_SPACE_ALET,DXD_DATA2\n         TR    SPF_SPACE_ALET,COMM_HEXCHAR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VDATA\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS\n         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH\n         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        VDEFINE VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,DXD_VWIDTH                  SCREEN WIDTH\n         SH    R1,=Y(VDATA_L)                 MINUS DATA LENGTH\n         SRL   R1,1                           DIVIDE BY 2\n         STH   R1,DXD_CENTER_OFFSET           SAVE CENTERING OFFSET\n         ITRACE ID=CENTER,                                             +\n               RDATA1=R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBLD0000  DS    0H\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                          INITIALIZE VDATA\n         MVC   DXD_WORK_ADDR,DXD_START_ADDR\n         MVC   DXD_WORK_LENGTH,DXD_START_LENGTH\n         MVC   DXD_WORK_DISP,DXD_START_DISP\n         L     R4,DXD_WORK_ADDR\n         L     R7,DXD_VDATA_ADDR               VDATA ADDRESS\n         AH    R7,DXD_CENTER_OFFSET            PLUS CENTERING OFFSET\n         L     R6,DXD_VDEPTH                   SCREEN DEPTH\n         USING VDATA,R7\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R7,                                              +\n               RDATA2=R6\nBLD0010  DS    0H\n         L     R1,DXD_WORK_LENGTH              LENGTH REMAINING\n         CH    R1,H16                          MORE THAN 32 BYTES LEFT?\n         BNH   BLD0020                         NO\n         LH    R1,H16                          LIMIT LENGTH\nBLD0020  DS    0H\n         XC    DXD_DATA1,DXD_DATA1             INITIALIZE WORK AREA\n         BCTR  R1,0\n         LAM   R4,R4,STORE_AREA_ALET           SET ALET\n         SAC   512                             ENTER AR MODE\n         EX    R1,MVC_01                       COPY DATA\n         SAC   0                               TURN OFF AR MODE\n         LAM   R4,R4,F0                        SET ALET\n         UNPK  DXD_DATA2+00(9),DXD_DATA1+00(5) UNPACK DATA\n         UNPK  DXD_DATA2+08(9),DXD_DATA1+04(5) UNPACK DATA\n         UNPK  DXD_DATA2+16(9),DXD_DATA1+08(5) UNPACK DATA\n         UNPK  DXD_DATA2+24(9),DXD_DATA1+12(5) UNPACK DATA\n         TR    DXD_DATA2,COMM_HEXCHAR\n         XC    DXD_DATA3(DXD_DATA3L),DXD_DATA3\n         MVC   DXD_DATA3_1,DXD_DATA2+00\n         MVC   DXD_DATA3_2,DXD_DATA2+08\n         MVC   DXD_DATA3_3,DXD_DATA2+16\n         MVC   DXD_DATA3_4,DXD_DATA2+24\n         MVI   VDATA_ATTR_1,$SCREEN_ATTR_HIGH\n         UNPK  VDATA_ADDRESS(9),DXD_WORK_ADDR(5) UNPACK ADDRESS\n         TR    VDATA_ADDRESS,COMM_HEXCHAR\n         MVI   VDATA_ATTR_2,$SCREEN_ATTR_INPUT SET ATTRIBUTE\n         LA    R1,LENGTH_TABLE(R1)             ADDRESS OF LENGTH\n         SR    R2,R2\n         IC    R2,0(R1)\n         ITRACE ID=X,                                                  +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         EX    R2,MVC_02                       COPY DATA\n         MVI   VDATA_ATTR_3,$SCREEN_ATTR_INPUT SET ATTRIBUTE\n         MVI   VDATA_ATTR_4,$SCREEN_ATTR_INPUT SET ATTRIBUTE\n         MVI   VDATA_ATTR_5,$SCREEN_ATTR_INPUT SET ATTRIBUTE\n         MVI   VDATA_ATTR_6,$SCREEN_ATTR_NORMAL\n         MVI   VDATA_ASTERISK_1,C'*'\n         TR    DXD_DATA1,PRINTABLE             TRANSLATE UNPRINTABLES\n         MVC   VDATA_CHARACTER,DXD_DATA1       COPY CHARACTER\n         MVI   VDATA_ASTERISK_2,C'*'\n         MVI   VDATA_ATTR_7,$SCREEN_ATTR_HIGH\n         UNPK  DXD_DATA2(9),DXD_WORK_DISP(5)   UNPACK DISPLACEMENT\n         MVC   VDATA_DISP,DXD_DATA2\n         TR    VDATA_DISP,COMM_HEXCHAR         TRANSLATE\n         LA    R4,16(,R4)\n         ST    R4,DXD_WORK_ADDR                UPDATE ADDRESS\n         L     R1,DXD_WORK_DISP\n         LA    R1,16(,R1)\n         ST    R1,DXD_WORK_DISP                UDATE DISP\n         L     R1,DXD_WORK_LENGTH              LENGTH LEFT\n         SH    R1,H16                          MINUS 16\n         BNH   BLD0030                         ALL DONE.. DISPLAY\n         ST    R1,DXD_WORK_LENGTH              UPDATE LENGTH LEFT\n         A     R7,DXD_VWIDTH                   NEXT LINE\n         BCT   R6,BLD0010                      BUILD NEXT LINE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBLD0030  DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               DATA1=(PANEL_NAME,8)\n         LA    R1,DISPLAY\n         ST    R1,DXD_SPF_1\n         LA    R1,PANEL_NAME\n         ST    R1,DXD_SPF_2\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                         DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                         RC ZERO?\n         BNZ   EXIT0000                        NO\n         OC    SPF_ZCMD,COMM_BLANKS\n         CLC   =C'ABEND ',SPF_ZCMD\n         BE    ABEND000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0040 DS    0H\n         LA    R1,VGET                         COMMAND\n         ST    R1,DXD_SPF_1                    SET ADDRESS\n         LA    R1,NAME_LIST                    SYSTEM VARIABLES\n         ST    R1,DXD_SPF_2                    SET ADDRESS\n         OI    DXD_SPF_2,X'80'                 FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                SPF PARM LIST\n         ITRACE ID=VGET_2,                                             +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK                SPF INTERFACE\n         BALR  R14,R15                         VGET SPF VARIABLE(S)\n         ITRACE ID=VGET2_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                         SUCCESSFUL?\n         BNZ   DISP0050                        NO\n         TM    DXD_FLAGS,$VPUT                 VPUT ALREADY ISSUED?\n         BO    DISP0060                        YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0050 DS    0H\n         OI    DXD_FLAGS,$VPUT                 SET FLAG\n         LA    R1,VPUT                         COMMAND\n         ST    R1,DXD_SPF_1                    SET ADDRESS\n         LA    R1,NAME_LIST\n         ST    R1,DXD_SPF_2\n         OI    DXD_SPF_2,X'80'                 SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK                SPF INTERFACE\n         BALR  R14,R15                         UPDATE SPF VARIABLE(S)\n         ITRACE ID=VPUT2_RC,                                           +\n               RDATA1=R15\n         B     DISP0040                        DO VGET\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISP0060 DS    0H\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?\n         BE    DOWN0000                       YES\n         CLI   SPF_ZVERB,C'U'                 SCROLL UP?\n         BE    UP0000                         YES\n         B     BLD0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDOWN0000 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=(SPF_ZSCROLLA,1),                                 +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    DOWN0010                       YES\n         L     R1,SPF_ZSCROLLN                NBR OF LINES TO SCROLL\n         MH    R1,H16                         BYTES PER LINE\n         LR    R0,R1\n         A     R0,DXD_START_DISP              PLUS CURRENT DISP\n         C     R0,STORE_AREA_LENGTH           SCROLL BEYOND END?\n         BH    DOWN0010                       YES\n         L     R0,DXD_START_ADDR              START ADDR\n         AR    R0,R1                          PLUS SCROLL\n         ST    R0,DXD_START_ADDR              UPDATE ADDRESS\n         L     R0,DXD_START_LENGTH            LENGTH REMAINING\n         SR    R0,R1                          MINUS SCROLL\n         ST    R0,DXD_START_LENGTH            UPDATE LENGTH REMAINING\n         L     R0,DXD_START_DISP              DISPLACEMENT\n         AR    R0,R1                          PLUS SCROLL\n         ST    R0,DXD_START_DISP              UPDATE DISPLACEMENT\n         B     BLD0000\nDOWN0010 DS    0H\n         LH    R1,H16\n         L     R0,STORE_AREA_LENGTH           AREA LENGTH\n\n\n*        ROUND UP TO 16 BYTE BOUNDARY\n         AH    R0,H15                         PLUS 15\n         SRL   R0,4                           SHIFT OUT LOW BITS\n         SLL   R0,4                           ROUND UP\n\n         SR    R0,R1                          MINUS SCROLL\n         BNH   DOWN0020                       BEYOND START\n         ST    R1,DXD_START_LENGTH            SET LENGTH\n         ST    R0,DXD_START_DISP              AND DISP\n         A     R0,STORE_AREA_ADDR             AREA ADDRESS\n         ST    R0,DXD_START_ADDR              SET STARTING ADDRESS\n         B     BLD0000                        RE-BUILD DISPLAY\nDOWN0020 DS    0H\n         MVC   DXD_START_ADDR,STORE_AREA_ADDR\n         MVC   DXD_START_LENGTH,STORE_AREA_LENGTH\n         XC    DXD_START_DISP,DXD_START_DISP\n         B     BLD0000                        RE-BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUP0000   DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    UP0010                         YES\n         L     R1,SPF_ZSCROLLN                NBR OF LINES\n         MH    R1,H16                         BYTES PER LINE\n         L     R0,DXD_START_DISP              START DISP\n         SR    R0,R1                          MINUS SCROLL\n         BNH   UP0010                         BEYOND TOP\n         ST    R0,DXD_START_DISP              SET STARTING DISP\n         L     R0,DXD_START_ADDR              STARTING ADDR\n         SR    R0,R1                          MINUS SCROLL\n         ST    R0,DXD_START_ADDR              SET STARTING ADDR\n         L     R0,DXD_START_LENGTH            LENGTH\n         AR    R0,R1                          PLUS SCROLL\n         ST    R0,DXD_START_LENGTH            SET STARTING LENGTH\n         B     BLD0000\nUP0010   DS    0H\n         MVC   DXD_START_ADDR,STORE_AREA_ADDR\n         MVC   DXD_START_LENGTH,STORE_AREA_LENGTH\n         XC    DXD_START_DISP,DXD_START_DISP\n         B     BLD0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LAM   R4,R4,F0\n         ICM   R1,15,DXD_VDATA_ADDR\n         BZ    EXIT0010\n         L     R0,DXD_VDATA_LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\nEXIT0010 DS    0H\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE SAVE AREA\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=DXDSTOR_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC_01   MVC   DXD_DATA1(0),0(R4)\nMVC_02   MVC   VDATA_HEX_1(0),DXD_DATA3\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPANEL_NAME    DC    CL8'OSSTOR'\n\nF0            DC    F'0'\n\nH15           DC    H'15'\nH16           DC    H'16'\n\nDISPLAY       DC    CL8'DISPLAY'\nVGET          DC    CL8'VGET'\nVPUT          DC    CL8'VPUT'\nNAME_LIST     DC    C'(ZSCROLLA ZSCROLLN ZVERB)'\n\n\n\n\n\nLENGTH_TABLE  DS    0X\n              DC    AL1(01)    0  xx\n              DC    AL1(03)    1  xxxx\n              DC    AL1(05)    2  xxxxxx\n              DC    AL1(07)    3  xxxxxxxx\n\n              DC    AL1(10)    4  xxxxxxxx xx\n              DC    AL1(12)    5  xxxxxxxx xxxx\n              DC    AL1(14)    6  xxxxxxxx xxxxxx\n              DC    AL1(16)    7  xxxxxxxx xxxxxxxx\n\n              DC    AL1(19)    8  xxxxxxxx xxxxxxxx xx\n              DC    AL1(21)    9  xxxxxxxx xxxxxxxx xxxx\n              DC    AL1(23)   10  xxxxxxxx xxxxxxxx xxxxxx\n              DC    AL1(25)   11  xxxxxxxx xxxxxxxx xxxxxxxx\n\n              DC    AL1(28)   12  XXXXXXXX XXXXXXXX XXXXXXXX XX\n              DC    AL1(30)   13  XXXXXXXX XXXXXXXX XXXXXXXX XXXX\n              DC    AL1(32)   14  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXX\n              DC    AL1(34)   15  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n\n\n\n\n\nPRINTABLE     DS    0C\n*                      0 1 2 3 4 5 6 7 8 9 A B C D E F\n              DC    X'40404040404040404040404040404040' 00-0F\n              DC    X'40404040404040404040404040404040' 10-1F\n              DC    X'40404040404040404040404040404040' 20-2F\n              DC    X'40404040404040404040404040404040' 30-3F\n              DC    X'404040404040404040404A4B4C4D4E4F' 40-4F\n              DC    X'504040404040404040405A5B5C5D5E5F' 50-5F\n              DC    X'60614040404040404040406B6C6D6E6F' 60-6F\n              DC    X'404040404040404040407A7B7C7D7E7F' 70-7F\n              DC    X'40818283848586878889408B8C8D8E8F' 80-8F\n              DC    X'40919293949596979899409B9C9D9E9F' 90-9F\n              DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF\n              DC    X'4040404040404040404040BBBCBDBEBF' B0-BF\n              DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n              DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n              DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n              DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\n              LTORG\n\nSTOREND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTOR           DSECT\n                  COPY DXDPREF\nDXD_VDATA_ADDR    DS   A\nDXD_VDATA_LENGTH  DS   F\nDXD_VDEPTH        DS   F\nDXD_VWIDTH        DS   F\n\nDXD_START_ADDR    DS   A\nDXD_START_LENGTH  DS   F\nDXD_START_DISP    DS   A\n\nDXD_WORK_ADDR     DS   A\nDXD_WORK_LENGTH   DS   F\nDXD_WORK_DISP     DS   A\n\nDXD_SPF_PARMS     DS  0A\nDXD_SPF_1         DS   A\nDXD_SPF_2         DS   A\n\nDXD_CENTER_OFFSET DS   H\n\nDXD_DATA1         DS   CL16\nDXD_DATA2         DS   CL33\n\nDXD_DATA3         DS   0C\nDXD_DATA3_1       DS   CL8\n                  DS   X\nDXD_DATA3_2       DS   CL8\n                  DS   X\nDXD_DATA3_3       DS   CL8\n                  DS   X\nDXD_DATA3_4       DS   CL8\nDXD_DATA3L        EQU  *-DXD_DATA3\n\nDXD_FLAGS         DS   X\n$VPUT             EQU  X'80'\nDXDSTOR_L         EQU  *-DXDSTOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVDATA             DSECT\nVDATA_ATTR_1      DS   X\nVDATA_ADDRESS     DS   CL8\nVDATA_ATTR_2      DS   X\nVDATA_HEX_1       DS   CL8\nVDATA_ATTR_3      DS   X\nVDATA_HEX_2       DS   CL8\nVDATA_ATTR_4      DS   X\nVDATA_HEX_3       DS   CL8\nVDATA_ATTR_5      DS   X\nVDATA_HEX_4       DS   CL8\nVDATA_ATTR_6      DS   X\n                  DS   XL2\nVDATA_ASTERISK_1  DS   X\nVDATA_CHARACTER   DS   CL16\nVDATA_ASTERISK_2  DS   X\n                  DS   X\nVDATA_ATTR_7      DS   X\nVDATA_DISP        DS   CL8\nVDATA_L           EQU  *-VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         STORPARM DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSSTOR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSSUBMIT": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\t!\\x0f\\x01\\t!\\x0f\\x15B\\x00\\xeb\\x00\\xeb\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-07-29T15:42:52", "lines": 235, "newlines": 235, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        SUBMIT files or PDS members as batch jobs.                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSUBMIT CSECT\nOSSUBMIT AMODE 31\nOSSUBMIT RMODE 24\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSSUBMIT,R15\n         B     INIT0000\nMODID    DC    CL8'OSSUBMIT'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(SUBMITEND-OSSUBMIT)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSSUBMIT,R10                   DEFINE BASE\n         LR    R9,R1\n         USING SUBREQ,R9                      DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=OSSUBMIT_WORK_L,                                     +\n               LOC=BELOW\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSSUBMIT_WORK,R13              DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9\n         MVC   WORK_IN_DCB(INDCB_L),INDCB\n         MVC   WORK_OUT_DCB(OUTDCB_L),OUTDCB\n         MVC   WORK_OPEN(OPEN_L),OPEN\n         MVC   WORK_CLOSE(CLOSE_L),CLOSE\n         LA    R8,WORK_IN_DCB\nIN       USING IHADCB,R8\n         LA    R7,WORK_OUT_DCB\nOUT      USING IHADCB,R7\n         ZAP   WORK_RECORDS,P0                INIT RECORD COUNTER\n* ------------------------------------------------------------------- *\n*        Allocate the input data set                                  *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ALLOC_IN\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET COMMAND\n         MVI   DAIR_OPTS,0                    USE DEFAULT OPTIONS\n         MVC   DAIR_DSN,SUBREQ_DSN            COPY DATA SET NAME\n         MVC   DAIR_MEMBER,SUBREQ_MEMBER\n         MVC   DAIR_VOLSER,SESS_VOLSER\n         MVC   DAIR_UNIT,COMM_BLANKS\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE INPUT DATA SET\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         MVC   IN.DCBDDNAM,DAIR_DD            COPY DD NAME\n         MVC   WORK_IN_DDNAME,DAIR_DD\n* ------------------------------------------------------------------- *\n*        Allocate the output to internal reader                       *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ALLOCOUT\n         MVC   DAIR_DSN,COMM_BLANKS\n         MVC   DAIR_MEMBER,COMM_BLANKS\n         MVC   DAIR_SYSOUT,COMM_INTRDR\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         MVI   DAIR_OPTS,$DAIR_INTRDR\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         MVC   OUT.DCBDDNAM,DAIR_DD           COPY DDNAME\n         MVC   WORK_OUT_DDNAME,DAIR_DD\n* ------------------------------------------------------------------- *\n*        OPEN the input and output                                    *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPEN_IN,                                            +\n               DATA1=IN.DCBDDNAM\n         OPEN  (WORK_IN_DCB,INPUT),                                    +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         ITRACE ID=OPEN_OUT,                                           +\n               DATA1=OUT.DCBDDNAM\n         OPEN  (WORK_OUT_DCB,OUTPUT),                                  +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n* ------------------------------------------------------------------- *\n*        Copy the input to the output                                 *\n* ------------------------------------------------------------------- *\nSUB0010  DS    0H\n         GET   WORK_IN_DCB,WORK_IO            READ A RECORD\n         AP    WORK_RECORDS,P1\n         PUT   WORK_OUT_DCB,WORK_IO           WRITE IT TO OUTPUT\n         B     SUB0010                        LOOP\n* ------------------------------------------------------------------- *\n*        CLOSE the DCBs                                               *\n* ------------------------------------------------------------------- *\nSUB0020  DS    0H\n         ITRACE ID=CLOSE_IN\n         CLOSE WORK_IN_DCB,                                            +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         FREEPOOL WORK_IN_DCB\n         ITRACE ID=CLOSEOUT\n         CLOSE WORK_OUT_DCB,                                           +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         FREEPOOL WORK_OUT_DCB\n* ------------------------------------------------------------------- *\n*        De-allocate input                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DEALLOC,                                            +\n               DATA1=IN.DCBDDNAM\n         MVC   DAIR_DD,WORK_IN_DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        DEALLOCATE INPUT DATA SET\n         MVI   SUBREQ_RC,$SUBREQ_OK\n         MVC   COMM_MSG_2(MSG_01_L),MSG_01\n         MVC   COMM_MSG_2+(MSG_01_MEMBER-MSG_01)(L'MSG_01_MEMBER),SUBRE+\n               Q_MEMBER\n         ED    COMM_MSG_2+(MSG_01_RECORDS-MSG_01)(L'MSG_01_RECORDS),WOR+\n               K_RECORDS\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DAIR_ERR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R15,R15\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R15,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=OSSUBMIT_WORK_L\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINDCB    DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               EODAD=SUB0020,                                          +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=GM\nINDCB_L  EQU   *-INDCB\nOUTDCB   DCB   DSORG=PS,                                               +\n               DDNAME=ANYDD,                                           +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=PM\nOUTDCB_L EQU   *-OUTDCB\nOPEN     OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPEN_L   EQU   *-OPEN\nCLOSE    CLOSE (*),                                                    +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L  EQU   *-CLOSE\n\nP0       DC    P'0'\nP1       DC    P'1'\nMSG_01         DS   0C\n               DC   C'OSSUBMIT01I '\nMSG_01_MEMBER  DC   CL8' '\n               DC   C' submitted,'\nMSG_01_RECORDS DC   X'4020202020202120'\n               DC   C' records'\nMSG_01_L       EQU  *-MSG_01\nSUBMITEND      EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSSUBMIT_WORK   DSECT\n                COPY     DXDPREF\nWORK_IN_DCB     DS       0F,(INDCB_L)X\nWORK_OUT_DCB    DS       0F,(OUTDCB_L)X\nWORK_OPEN       DS       0F,(OPEN_L)X\nWORK_CLOSE      DS       0F,(CLOSE_L)X\n\nWORK_IN_DDNAME  DS       CL8\nWORK_OUT_DDNAME DS       CL8\n\nWORK_RECORDS    DS       PL4\n\n                DAIRREQ  DSECT=NO\n\nWORK_IO         DS       CL80\nOSSUBMIT_WORK_L EQU      *-OSSUBMIT_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SUBREQ   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                IBMMAC   DCBD=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     REGEQU\n                END      OSSUBMIT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSTRACE": {"ttr": 4105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\t!\\x0f\\x01\\t4\\x1f\\x16\\x01\\x01G\\x01J\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-07T16:01:19", "lines": 327, "newlines": 330, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSTRACE                                               *\n*                                                                     *\n*  Display internal trace table                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSTRACE  CSECT\nOSTRACE  AMODE 31\nOSTRACE  RMODE ANY\n         USING OSTRACE,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSTRACE'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(TRACEEND-OSTRACE)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSTRACE,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDTRACE,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n\n         MVC   SPF_ZCMD,COMM_BLANKS\n         LA    R1,PANEL_NAME                  COPY PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         ST    R0,DXD_VDATA_LENGTH\n         ST    R1,DXD_VDATA_ADDR\n         BALR  R14,R15                        OBTAIN VDATA STORAGE\n         MVI   COMM_VDATA_FUNC,$VDATA_VDEFINE SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        VDEFINE VDATA\n         ITRACE ID=VDATA,                                              +\n               DATA1=(DXD_VDATA_ADDR,4),                               +\n               DATA2=(DXD_VDATA_LENGTH,4)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        From here on limit the use of ITRACE.                        *\n*        Otherwise the trace table will be flooded with               *\n*        trace points from this program.                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         ICM   R15,8,COMM_BLANKS\n         MVCL  R0,R14\n\n         MVC   DXD_FIRST,COMM_TRACE_1ST\nMAIN0000 DS    0H\n         L     R8,DXD_VDATA_ADDR\n         L     R7,SPF_VDEPTH                    NUMBER OF LINES\n         L     R6,DXD_FIRST                     FIRST TO DISPLAY\nZ        USING TRENTRY,R6                       DEFINE BASE\nMAIN0010 DS    0H\n         MVC   0(MSG_01_L,R8),MSG_01            INITIALIZE\n         USING MSG_01,R8                        DEFINE BASE\n         MVC   MSG_01_CSECT,Z.TRECSECT          COPY CSECT\n         MVC   MSG_01_ID,Z.TREID                COPY TRACE ID\n         MVC   MSG_01_DATA1,Z.TREDATA1          COPY DATA ITEM\n         TR    MSG_01_DATA1,PRINTABLES          TRANSLATE UNPRINTABLES\n         UNPK  MSG_01_HEX1+0(9),Z.TREDATA1+0(5) UNPACK DATA 1\n         UNPK  MSG_01_HEX1+8(9),Z.TREDATA1+4(5)\n         TR    MSG_01_HEX1,COMM_HEXCHAR         TRANSLATE\n         MVI   MSG_01_HEX1+16,C' '\n         MVC   MSG_01_DATA2,Z.TREDATA2          COPY DATA ITEM\n         TR    MSG_01_DATA2,PRINTABLES          TRANSLATE UNPRINTABLES\n         UNPK  MSG_01_HEX2+0(9),Z.TREDATA2+0(5) UNPACK DATA 2\n         UNPK  MSG_01_HEX2+8(9),Z.TREDATA2+4(5)\n         TR    MSG_01_HEX2,COMM_HEXCHAR         TRANSLATE\n         MVI   MSG_01_HEX2+16,C' '\n         C     R6,COMM_TRACE_CURR               CURRENT ENTRY?\n         BNE   MAIN0020                         NO\n         MVC   MSG_01_CURR,=C'-->'              FLAG AS CURRENT\nMAIN0020 DS    0H\n         DROP  R8\n         ST    R6,DXD_LAST                      LAST DISPLAYED\n         A     R8,SPF_VWIDTH                    NEXT LINE\n         BCT   R7,MAIN0030\n         B     DISP0000                         SCREEN FULL\nMAIN0030 DS    0H\n         C     R6,COMM_TRACE_LAST               LAST TRACE ENTRY?\n         BE    DISP0000                         YES\n         LA    R6,TRENTRYL(,R6)                 NEXT TRACE ENTRY\n         B     MAIN0010                         LOOP\n* ------------------------------------------------------------------- *\n*        DISPLAY                                                      *\n* ------------------------------------------------------------------- *\nDISP0000 DS    0H\n         LA    R1,DISPLAY                       ISPF FUNCTION\n         ST    R1,DXD_SPF_1                     SET ADDRESS\n         LA    R1,PANEL_NAME                    PANEL NAME\n         ST    R1,DXD_SPF_2                     SET ADDRESS\n         OI    DXD_SPF_2,X'80'                  FLAG END OF LIST\n         LA    R1,DXD_SPF_PARMS                 SPF PARM LIST\n         L     R15,COMM_ISPLINK                 SPF ENTERFACE ADDRESS\n         BALR  R14,R15                          DISPLAY\n         CH    R15,H8                           SERIOUS ERROR?\n         BH    ERR0010                          YES\n         LTR   R15,R15                          RC ZERO?\n         BNZ   EXIT0000                         NO.. EXIT\nDISP0010 DS    0H\n         LA    R1,VGET                          COMMAND\n         ST    R1,DXD_SPF_1                     SET ADDRESS\n         LA    R1,NAME_LIST                     SYSTEM VARIABLES\n         ST    R1,DXD_SPF_2                     SET ADDRESS\n         OI    DXD_SPF_2,X'80'                  FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                 SPF PARM LIST\n         L     R15,COMM_ISPLINK                 SPF ENTRY POINT\n         BALR  R14,R15                          VGET SPF VARIABLE(S)\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   DISP0020                         NO\n         TM    DXD_FLAGS,$VPUT                  VPUT ALREADY ISSUED?\n         BO    DISP0030                         YES\n* ------------------------------------------------------------------- *\n*       UPDATE SPF VARIABLES                                          *\n* ------------------------------------------------------------------- *\nDISP0020 DS    0H\n         OI    DXD_FLAGS,$VPUT                  SET FLAG\n         LA    R1,VPUT                          COMMAND\n         ST    R1,DXD_SPF_1                     SET ADDRESS\n         LA    R1,NAME_LIST\n         ST    R1,DXD_SPF_2\n         OI    DXD_SPF_2,X'80'                  SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS                 PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK                 SPF ENTRY POINT\n         BALR  R14,R15                          UPDATE SPF VARIABLE(S)\n         B     DISP0010                         DO VGET\nDISP0030 DS    0H\n         CLC   CURRENT(4),SPF_ZCMD              GO TO CURRENT ENTRY?\n         BE    DISP0080                         YES\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    DISP0040                         YES\n         CLI   SPF_ZVERB,C'D'                   DOWN?\n         BE    DISP0050                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    DISP0060                         YES\n         CLI   SPF_ZVERB,C'U'                   UP?\n         BE    DISP0070                         YES\n         B     DISP0000\n* ------------------------------------------------------------------- *\n*        Bottom                                                       *\n* ------------------------------------------------------------------- *\nDISP0040 DS    0H\n         L     R1,COMM_TRACE_LAST               LAST TRACE ENTRY\n         L     R0,SPF_VDEPTH                    SCREEN DEPTH\n         BCTR  R0,0                             MINUS 1\n         MH    R0,=Y(TRENTRYL)                  MULTIPLY BY LENGTH\n         SR    R1,R0                            SUBTRACT FROM LAST\n         ST    R1,DXD_FIRST                     SET FIRST TO DISPLAY\n         B     MAIN0000                         BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        Down                                                         *\n* ------------------------------------------------------------------- *\nDISP0050 DS    0H\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    DISP0040                         YES\n         L     R1,SPF_ZSCROLLN                  NUMBER TO SCROLL\n         MH    R1,=Y(TRENTRYL)                  MULTIPLY BY LENGTH\n         A     R1,DXD_FIRST                     PLUS FIRST\n         C     R1,COMM_TRACE_LAST               BEYOND END OF TABLE?\n         BH    DISP0040                         YES.. TO TO BOTTOM\n         ST    R1,DXD_FIRST                     SET FIRST TO DISPLAY\n         B     MAIN0000                         REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        Top                                                          *\n* ------------------------------------------------------------------- *\nDISP0060 DS    0H\n         MVC   DXD_FIRST,COMM_TRACE_1ST         SET FIRST TO DISPLAY\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        Up                                                           *\n* ------------------------------------------------------------------- *\nDISP0070 DS    0H\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    DISP0060                         YES\n         L     R0,SPF_ZSCROLLN                  NUMBER TO SCROLL\n         MH    R0,=Y(TRENTRYL)                  MULTIPLY BY LENGTH\n         L     R1,DXD_FIRST                     FIRST\n         SR    R1,R0                            MINUS SCROLL\n         C     R1,COMM_TRACE_1ST                ABOVE TOP OF TABLE?\n         BL    DISP0060                         YES.. GO TO TOP\n         ST    R1,DXD_FIRST                     SET FIRST TO DISPLAY\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        Make current last on display                                 *\n* ------------------------------------------------------------------- *\nDISP0080 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         L     R1,COMM_TRACE_CURR               CURRENT ENTRY\n         L     R0,SPF_VDEPTH                    SCREEN DEPTH\n         BCTR  R0,0                             MINUS 1\n         MH    R0,=Y(TRENTRYL)                  MULTIPLY BY LENGTH\n         SR    R1,R0                            SUBTRACT\n         C     R1,COMM_TRACE_1ST                ABOVE TOP OF TABLE?\n         BL    DISP0060                         YES.. FORCE TOP\n         ST    R1,DXD_FIRST                     SET FIRST TO DISPLAY\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R0,DXD_VDATA_LENGTH\n         L     R1,DXD_VDATA_ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN  SET FUNCTION\n         L     R15,COMM_V_OSVDATA               OSVDATA ENTRY POINT\n         BALR  R14,R15                          FREE VDATA STORAGE\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START        DC    Q(DXDTRACE)\n\nH8               DC    H'8'\n\nCURRENT          DC    C'CURRENT'\nDISPLAY          DC    CL8'DISPLAY'\nNAME_LIST        DC    C'(ZSCROLLA ZSCROLLN ZVERB)'\nPANEL_NAME       DC    CL8'OSTRACE'\nVGET             DC    CL8'VGET'\nVPUT             DC    CL8'VPUT'\n\nPRINTABLES       DS    0C\n*                          0 1 2 3 4 5 6 7 8 9 A B C D E F\n                 DC    X'40404040404040404040404040404040' 00-0F\n                 DC    X'40404040404040404040404040404040' 10-1F\n                 DC    X'40404040404040404040404040404040' 20-2F\n                 DC    X'40404040404040404040404040404040' 30-3F\n                 DC    X'404040404040404040404A4B4C4D4E4F' 40-4F\n                 DC    X'504040404040404040405A5B5C5D5E5F' 50-5F\n                 DC    X'60614040404040404040406B6C6D6E6F' 60-6F\n                 DC    X'404040404040404040407A7B7C7D7E7F' 70-7F\n                 DC    X'40818283848586878889408B8C8D8E8F' 80-8F\n                 DC    X'40919293949596979899409B9C9D9E9F' 90-9F\n                 DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF\n                 DC    X'4040404040404040404040BBBCBDBEBF' B0-BF\n                 DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n                 DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n                 DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n                 DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\n                 LTORG\n\nMSG_01           DS    0C\nMSG_01_CURR      DC    CL03' '\n                 DC    CL01' '\nMSG_01_CSECT     DC    CL08' '\n                 DC    CL02' '\nMSG_01_ID        DC    CL08' '\n                 DC    CL02' '\nMSG_01_DATA1     DC    CL08' '\n                 DC    CL02' '\nMSG_01_HEX1      DC    CL16' '\n                 DC    CL03' '\nMSG_01_DATA2     DC    CL08' '\n                 DC    CL02' '\nMSG_01_HEX2      DC    CL16' '\n                 DC    CL01' '\nMSG_01_L         EQU   *-MSG_01\n\nTRACEEND         EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTRACE         DSECT\n                 COPY    DXDPREF\n\nDXD_SPF_PARMS    DS     0A\nDXD_SPF_1        DS      A\nDXD_SPF_2        DS      A\n\nDXD_FIRST        DS      A              FIRST DISPLAYED\nDXD_LAST         DS      A              LAST DISPLAYED\n\nDXD_PANEL        DS      CL8\nDXD_VDATA_ADDR   DS      A\nDXD_VDATA_LENGTH DS      F\n\nDXD_FLAGS        DS      X\n$VPUT            EQU     X'80'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                 END      OSTRACE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSTRAP": {"ttr": 18187, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1e\\x00F\\x01\\t#/\\x01\\x10\\x02o\\x14\\x06\\x00D\\x00F\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.30", "flags": 0, "createdate": "2009-08-20T00:00:00", "modifydate": "2010-01-26T14:06:46", "lines": 68, "newlines": 70, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSTRAP                                                *\n*                                                                     *\n*                                                                     *\n*  This module may NOT                                                *\n*   .  use ITRACE                                                     *\n*   .  establish its own save area                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSTRAP   CSECT\nOSTRAP   AMODE 31\nOSTRAP   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OSTRAP,R15\n         B     INIT0000\nMODID    DC    CL8'OSTRAP'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\nINIT0000 DS    0H\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         STORCOMM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     SEQ\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n$BUFFSIZE   EQU      65535\n            END      OSTRAP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSUSER": {"ttr": 12556, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x004\\x01\\t!\\x0f\\x01\\x10\\x01O\\x16\\x14\\x01G\\x01G\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-14T16:14:34", "lines": 327, "newlines": 327, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSUSER                                                *\n*                                                                     *\n*                                                                     *\n*  Some formatting may be too complicated for USERFMT to handle.      *\n*  At least not very easily.  This program allows users to write      *\n*  essentialy a user exit to format records.  What this code will     *\n*  do is \"retrieve\" the records one at a time and call the user       *\n*  function.  The users would not have to be as familiar with the     *\n*  internals of OS and the same code that does the record retreival,  *\n*  display, scrolling, etc does not have to be re-coded for each      *\n*  user format.                                                       *\n*                                                                     *\n*                                                                     *\n*  The exit is defined via an EXIT statement in the FORMAT            *\n*  definition.  FORMATs are defined by members in the OSFORMAT        *\n*  PDS (or PDS/E).  The exit will have been loaded by OSFORMAT        *\n*  and the address saved in SESS_FUNCTION_EP.                         *\n*                                                                     *\n*  User exits have addressability to the common area (mapped by       *\n*  the macro called COMMON), therefore they can locate and access     *\n*  most any internal control block.                                   *\n*                                                                     *\n*  To make it easier to develop a function exit, most of the info     *\n*  an exit would need is collected into the USEREXIT data area.       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSUSER   CSECT\nOSUSER   AMODE 31\nOSUSER   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSUSER,R15\n         B     INIT0000\nMODID    DC    CL8'OSUSER'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSUSEREND-OSUSER)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING OSUSER,R10                     DEFINE BASE\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                                                   +\n               LV=OSUSER_WORK_L,                                       +\n               LOC=ANY\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSUSER_WORK,R13                DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         ITRACE ID=VDATA\n         MVC   WORK_PANEL,OS0001              SET PANEL NAME\n         LA    R1,WORK_PANEL                  PANEL NAME ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GET VDATA\n         ST    R0,WORK_VDATA_LENGTH\n         ST    R1,WORK_VDATA_ADDR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0010\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY\n         XC    WORK_RC,WORK_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH\n         BE    MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=USERINIT\n         XC    USEREXIT(USEREXIT_FUNC-USEREXIT),USEREXIT\n         MVC   USEREXIT_MSG_1,COMM_BLANKS\n         MVC   USEREXIT_MSG_2,COMM_BLANKS\n         MVC   USEREXIT_MSG_3,COMM_BLANKS\n         MVC   USEREXIT_MSG_4,COMM_BLANKS\n         MVC   USEREXIT_MSG_5,COMM_BLANKS\n         MVI   USEREXIT_FUNC,$USEREXIT_INITIALIZE\n         LA    R1,USEREXIT\n         L     R15,SESS_FUNCTION_EXIT\n         BALR  R14,R15\n         L     R6,SESS_IO_AREA                I/O AREA ADDRESS\n         ST    R6,DSPCREQ_RECORD_ADDR\n         ST    R6,USEREXIT_RECORD_ADDR\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,DATASPACE_1_LAST_RECORD\n         BCTR  R1,0\n         ST    R1,USEREXIT_MAX_RECORD_NBR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         MVC   USEREXIT_VDATA_ADDR,WORK_VDATA_ADDR\n         MVC   USEREXIT_VDATA_LENGTH,WORK_VDATA_LENGTH\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*        Initialize VDATA buffer                                      *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         L     R0,WORK_VDATA_ADDR\n         L     R1,WORK_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE VDATA\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" the record and format it                          *\n* ------------------------------------------------------------------- *\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BH    MAIN1000                       END OF RECORDS REACHED\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=DSPCREQ_RECORD_NBR,                               +\n               DATA2=DATASPACE_1_LAST_RECORD\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    ERR910                         NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK         SUCCESSFUL?\n         BNE   ERR910                         NO\n         ITRACE ID=RECORD,                                             +\n               DATA1=DSPCREQ_RECORD_ADDR,                              +\n               DATA2=DSPCREQ_RECORD_LENGTH\n* ------------------------------------------------------------------- *\n*        Format fields                                                *\n* ------------------------------------------------------------------- *\n         MVC   USEREXIT_RECORD_LENGTH,DSPCREQ_RECORD_LENGTH\n         MVC   USEREXIT_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVC   USEREXIT_ROWS,SPF_VDEPTH\n         MVC   USEREXIT_COLUMNS,SPF_VWIDTH\n         MVI   USEREXIT_FUNC,$USEREXIT_FORMAT SET FUNCTION\n         LA    R1,USEREXIT                    EXIT PARMS\n         L     R15,SESS_FUNCTION_EXIT         FUNCTION EXIT EP\n         ITRACE ID=CALLEXIT,                                           +\n               RDATA1=R15\n         BALR  R14,R15                        LINK TO EXIT\n         MVC   SPF_MSG_1,USEREXIT_MSG_1\n         MVC   SPF_MSG_2,USEREXIT_MSG_2\n         MVC   SPF_MSG_3,USEREXIT_MSG_3\n         MVC   SPF_MSG_4,USEREXIT_MSG_4\n         MVC   SPF_MSG_5,USEREXIT_MSG_5\n* ------------------------------------------------------------------- *\n*        Build the DSCB info                                          *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         ITRACE ID=OSDSCB\n         L     R15,COMM_V_OSDSCB              OSDSCB ENTRY POINT\n         BALR  R14,R15                        FORMAT THE DSCB INFO\n* ------------------------------------------------------------------- *\n*        DISPLAY THE PANEL                                            *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               DATA1=WORK_PANEL,                                       +\n               RDATA2=R15\n         MVC   SESS_DISP_PANEL,WORK_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,WORK_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,WORK_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP              OSDISP ENTRY POINT\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT WANTED?\n         BNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   EXIT0000                       YES\n         OC    SESS_RC,SESS_RC                RC=0\n         BZ    MAIN0200                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Process command(s)                                           *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         MVC   USEREXIT_ZCMD,SPF_ZCMD\n         MVC   USEREXIT_ZVERB,SPF_ZVERB\n         MVC   USEREXIT_ZSCROLLA,SPF_ZSCROLLA\n         MVC   USEREXIT_ZSCROLLN,SPF_ZSCROLLN\n         MVI   USEREXIT_FUNC,$USEREXIT_CMD\n         LA    R1,USEREXIT\n         L     R15,SESS_FUNCTION_EXIT\n         ITRACE ID=CMD\n         BALR  R14,R15                        CALL EXIT FOR COMMAND\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,USEREXIT_RECORD_NBR\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         MVC   SPF_MSG_1(EOF_MSG_L),EOF_MSG\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0000\n         DC    H'0'\nERR910   DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         ICM   R1,15,WORK_VDATA_ADDR\n         BZ    CLEAN010\n         L     R0,WORK_VDATA_LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\nCLEAN010 DS    0H\n         LA    R0,OSUSER_WORK_L               WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE R13\n         FREEMAIN RU,                         FREE WORK REA            +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,WORK_RC                    RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOS0001          DC       CL8'OS0001'\n\nEOF_MSG         DS       0C\n                DC       AL1($SCREEN_ATTR_HIGH)\n                DC       C'---- END OF DATA ----'\nEOF_MSG_L       EQU      *-EOF_MSG\n\n                LTORG\n\nOSUSEREND       EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSUSER_WORK        DSECT\n                   COPY     DXDPREF\nWORK_VDATA_ADDR    DS       A\nWORK_VDATA_LENGTH  DS       F\nWORK_PANEL         DS       CL8\nWORK_RC            DS       H\n                   DSPCREQ  DSECT=NO\n                   USEREXIT DSECT=NO\nOSUSER_WORK_L      EQU      *-OSUSER_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY     ATTRS\n* ------------------------------------------------------------------- *\n*               EQUATES                                               *\n* ------------------------------------------------------------------- *\n                COPY     REGEQU\n                END      OSUSER\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSVARMGR": {"ttr": 9483, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x19\\x01\\t!\\x0f\\x01\\x10\\x01?\\x13\\x18\\x01D\\x00\\xf2\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2010-01-13T13:18:19", "lines": 324, "newlines": 242, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: OSVARMGR                                              *\n*                                                                     *\n*  Define or delete SPF variables.                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVARMGR CSECT\nOSVARMGR AMODE 31\nOSVARMGR RMODE ANY\n         USING OSVARMGR,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         B     INIT0000\nMODID    DC    CL8'OSVARMGR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(VARMGREND-OSVARMGR)\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         DROP  R15\n         USING OSVARMGR,R10\n         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDVMGR,R13                    DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n* ------------------------------------------------------------------- *\n         LR    R9,R1\n         USING VARREQ,R9                      DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9,                                              +\n               DATA2=VAR_COMMAND\n         L     R8,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R8                      DEFINE BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVAR0010  DS    0H\n         CLI   VAR_COMMAND,$VAR_DEFINE        DEFINE VARIABLES?\n         BE    VAR0100                        YES\n         CLI   VAR_COMMAND,$VAR_DELETE        DELETE VARIABLE?\n         BE    VAR0200                        YES\n         CLI   VAR_COMMAND,$VAR_GET           VGET VARIABLE?\n         BE    VAR0300                        YES\n         SR    R5,R5\n         ICM   R5,1,VAR_COMMAND\n         ITRACE ID=BADCMD\n         ABEND 1,DUMP,,USER                   BAD COMMAND\n* ------------------------------------------------------------------- *\n*        PROCESS DEFINE COMMANDS                                      *\n* ------------------------------------------------------------------- *\nVAR0100  DS    0H\n         ITRACE ID=DEFINE,                    DEFINE VARIABLES         +\n               DATA1=VAR_TABLE,                                        +\n               DATA2=VAR_AREA\n         L     R6,VAR_TABLE                   FIRST VARIABLE\nVAR0110  DS    0H\n         USING VAR_DSECT,R6                   DEFINE BASE\n         MVI   DXD_FLAGS,0\n         TM    VAR_FLAG,$VDEFINE              VARIABLE ALREADY DEFINED?\n         BO    VAR0120                        YES\n         TM    VAR_FLAG,$VNEVER               NEVER DEFINE?\n         BO    VAR0120                        YES\n         LA    R1,VDEFINE                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF1                    SET ADDRESS IN PARM LIST\n         LA    R1,VAR_NAME                    VARIABLE'S NAME\n         ST    R1,DXD_SPF2                    SET NAME'S ADDRESS\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,VAR_DISP                  DISPLACEMENT TO DATA\n         A     R3,VAR_AREA                    PLUS BASE ADDRESS\n         ST    R3,DXD_SPF3                    SET ADDRESS IN PARM LIST\n         LA    R1,VAR_FORMAT                  DATA FORMAT\n         ST    R1,DXD_SPF4                    SET ADDRESS IN PARM LIST\n         LA    R1,VAR_LENGTH                  VARIABLE LENGTH\n         ST    R1,DXD_SPF5                    SET ADDRESS IN PARM LIST\n         OI    DXD_SPF5,X'80'                 SET END-OF-LIST\n         ITRACE ID=VDEFINE,                   DEFINING A VARIABLE      +\n               DATA1=VAR_NAME,                .. VARIABLE'S NAME       +\n               DATA2=DXD_SPF3                 .. ADDRESS OF DATA\n         LA    R1,DXD_SPFP                    SPF PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK               SPFLINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         ITRACE ID=VDEF_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        VDEFINE SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         OI    VAR_FLAG,$VDEFINE              VARIABLE HAS BEEN DEFINED\n         TM    VAR_FLAG,$VGET                 VGET NOW?\n         BNO   VAR0120                        NO\n         MVC   DXD_NAMELIST,COMM_BLANKS\n         MVC   DXD_NAMELIST+1(8),VAR_NAME\n         BAL   R7,VAR0400\nVAR0120  DS    0H\n         LA    R6,VAR_DSECT_L(,R6)            NEXT VARIABLE\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BNE   VAR0110                        NO\n         MVC   SPF_RFIND,PASSTHRU             SET RFIND OPTION\n         B     EXIT0000                       ALL PROCESSED\n* ------------------------------------------------------------------- *\n*        PROCESS VARIABLE DELETION                                    *\n* ------------------------------------------------------------------- *\nVAR0200  DS    0H\n         ITRACE ID=DELETE                     DELETING ALL VARIABLES\n         MVC   DXD_POOL,SHARED\n         LA    R0,VPUT                        SPF COMMAND\n         ST    R0,DXD_SPF1                    SET ADDRESS\n         LA    R0,DXD_NAMELIST                NAME LIST\n         ST    R0,DXD_SPF2                    SET ADDRESS\n         LA    R0,DXD_POOL\n         ST    R0,DXD_SPF3\n         OI    DXD_SPF3,X'80'\n         L     R6,VAR_TABLE                   START WITH FIRST VARIABLE\nVAR0210  DS    0H\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BE    EXIT0000                       YES\n         TM    VAR_FLAG,$VDEFINE              VARIABLE DEFINED?\n         BNO   VAR0250                        NO\n         TM    VAR_FLAG,$VPUT                 VPUT BEFORE DELETING?\n         BNO   VAR0240                        NO\n         MVC   DXD_NAMELIST,COMM_BLANKS\n         MVI   DXD_NAMELIST+0,C'('\n         MVC   DXD_NAMELIST+1(8),VAR_NAME     COPY VARIABLE NAME\n         LA    R1,DXD_NAMELIST+10\n         LA    R2,8\nVAR0220  DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BNE   VAR0230                        NO\n         BCTR  R1,0                           BACK UP 1\n         BCT   R2,VAR0220                     LOOP\nVAR0230  DS    0H\n         MVI   1(R1),C')'                     INSERT CLOSING PAREN\n         LA    R0,VPUT                        SPF COMMAND\n         ST    R0,DXD_SPF1                    SET ADDRESS\n         LA    R0,DXD_NAMELIST                NAME LIST\n         ST    R0,DXD_SPF2                    SET ADDRESS\n         LA    R0,DXD_POOL\n         ST    R0,DXD_SPF3\n         OI    DXD_SPF3,X'80'\n         ITRACE ID=VPUT,                                               +\n               DATA1=DXD_NAMELIST+1,                                   +\n               DATA2=DXD_POOL\n         LA    R1,DXD_SPF1                    SPF PARM LIST\n         L     R15,COMM_ISPLINK               SPF ENTRY POINT\n         BALR  R14,R15                        VPUT THE VARIABLE\n         ITRACE ID=VPUT_RC,                   TRACE VPUT RC            +\n               RDATA1=R15\n         LTR   R15,R15                        VPUT OK?\n         BNZ   ERR0040                        NO\nVAR0240  DS    0H\n         LA    R0,VDELETE                     COMMAND'S ADDRESS\n         ST    R0,DXD_SPF1                    SET ADDRESS IN PARM LIST\n         ST    R6,DXD_SPF2                    SET VARIABLE NAME ADDRESS\n         OI    DXD_SPF2,X'80'                 FLAG END-OF-LIST\n         ITRACE ID=VDELETE,                   DELETING A VARIABLE      +\n               DATA1=VAR_NAME                 .. VARIABLE NAME\n         LA    R1,DXD_SPFP                    PARM LIST'S ADDRESS\n         L     R15,COMM_ISPLINK               SPFLINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         LTR   R15,R15                        VDELETE SUCCESSFUL?\n         BNZ   ERR0020                        NO\nVAR0250  DS    0H\n         LA    R6,VAR_DSECT_L(,R6)            NEXT VARIABLE\n         B     VAR0210                        PROCESS ALL VARIABLES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVAR0300  DS    0H\n         MVC   DXD_NAMELIST,COMM_BLANKS\n         MVC   DXD_NAMELIST+1(8),VAR_VARIABLE\n         BAL   R7,VAR0400                     DO VGET\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVAR0400  DS    0H\n         MVI   DXD_NAMELIST+0,C'('\n         LA    R1,DXD_NAMELIST+10\n         LA    R2,8\nVAR0410  DS    0H\n         CLI   0(R1),C' '\n         BNE   VAR0420\n         BCTR  R1,0\n         BCT   R2,VAR0410\nVAR0420  DS    0H\n         MVI   1(R1),C')'\n         LA    R0,VGET                        VGET COMMAND\n         ST    R0,DXD_SPF1                    SET ADDRESS\n         LA    R0,DXD_NAMELIST          < --  DON'T LIKE THE CLOSE NAME\n         ST    R0,DXD_SPF2                    SET NAME\n         LA    R0,DXD_POOL                    SHARED OF PROFILE POOL\n         ST    R0,DXD_SPF3\n         OI    DXD_SPF3,X'80'                 FLAG END-OF-LIST\n         TM    VAR_FLAG,$VPUT                 THIS VARIABLE SAVED?\n         BO    VAR0430                        YES\n         ITRACE ID=SHARED\n         MVC   DXD_POOL,SHARED                FROM SHARED POOL\n         B     VAR0440\nVAR0430  DS    0H\n         ITRACE ID=PROFILE\n         MVC   DXD_POOL,PROFILE\nVAR0440  DS    0H\n         ST    R0,DXD_SPF3                    SET ADDRESS\n         ITRACE ID=VGET,                                               +\n               DATA1=DXD_NAMELIST+1,                                   +\n               DATA2=DXD_POOL\n         LA    R1,DXD_SPF1\n         L     R15,COMM_ISPLINK               SPF ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=VGET_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=0(R3)\n         LTR   R15,R15                        SUCCESSFUL?\n         BZR   R7                             YES\n         TM    DXD_FLAGS,$DXD_VPUT            VPUT ISSUED?\n         BO    ERR0030\n         LA    R0,VPUT\n         ST    R0,DXD_SPF1\n         LA    R1,DXD_SPF1                    CHANGE VGET TO VPUT\n         ITRACE ID=VPUT,                                               +\n               DATA1=DXD_NAMELIST+0,                                   +\n               DATA2=DXD_POOL\n         L     R15,COMM_ISPLINK               SPF ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=VPUT_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=0(R3)\n         OI    DXD_FLAGS,$DXD_VPUT\n         B     VAR0420                        TRY AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=VDEFFAIL,                                           +\n               RDATA1=R15\n         DC    H'12'\nERR0020  DS    0H\n         ITRACE ID=VDELFAIL,                                           +\n               RDATA1=R15\n         DC    H'13'\nERR0030  DS    0H\n         ITRACE ID=VGETFAIL,                                           +\n               RDATA1=R15\n         DC    H'14'\nERR0040  DS    0H\n         ITRACE ID=VPUTFAIL,                                           +\n               RDATA1=R15\n         DC    H'15'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START DC    Q(DXDVMGR)\nVARNAME_I DC    F'1'\n          DC    F'0'\n          DC    CL8' '\nVARNAME_L EQU   *-VARNAME_I\nPASSTHRU  DC    CL8'PASSTHRU'\nSHARED    DC    CL8'SHARED'\nPROFILE   DC    CL8'PROFILE'\nVDEFINE   DC    CL8'VDEFINE'\nVDELETE   DC    CL8'VDELETE'\nVGET      DC    CL8'VGET'\nVPUT      DC    CL8'VPUT'\n          LTORG\nVARMGREND EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDVMGR      DSECT\n             COPY  DXDPREF\nDXD_SPFP     DS    0A                    ISPF PARM LIST\nDXD_SPF1     DS    A                     PARM 1 ADDRESS\nDXD_SPF2     DS    A                     PARM 2 ADDRESS\nDXD_SPF3     DS    A                     PARM 3 ADDRESS\nDXD_SPF4     DS    A                     PARM 4 ADDRESS\nDXD_SPF5     DS    A                     PARM 5 ADDRESS\n\nDXD_FLAGS    DS    X\n$DXD_VPUT    EQU   X'80'\n\nDXD_NAMELIST DS    CL12\n\nDXD_POOL     DS    CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     VARDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         VARREQ   DSECT=YES\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSVARMGR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSVDATA": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\t!\\x0f\\x01\\t!\\x0f\\x15E\\x01\\x07\\x01\\x07\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-07-29T15:45:44", "lines": 263, "newlines": 263, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSVDATA                                               *\n*                                                                     *\n*     There are three functions:                                      *\n*       GETMAIN                                                       *\n*       FREEMAIN                                                      *\n*       VDEFINE                                                       *\n*                                                                     *\n*                                                                     *\n*   On GETMAINs, issue a PQUERY to determine the dimensions of        *\n*   the dynamic area on the SPF panel.  The address of the panel      *\n*   name is passed in R1.  At exit, R0 is the length of the area      *\n*   and R1 is the address of the area GETMAINed.                      *\n*                                                                     *\n*   On FREEMAINs, the length of the area to be freed is passed        *\n*   in R0, the address is passed in R1.                               *\n*                                                                     *\n*   On VDEFINEs, the length of the area to be VDEFINED is passed      *\n*   in R0, the address is passed in R1.                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVDATA  CSECT\nOSVDATA  AMODE 31\nOSVDATA  RMODE ANY\n         USING OSCOMM,R12\n         USING OSVDATA,R15\n         B     INIT0000\nMODID    DC    CL8'OSVDATA'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(VDATAEND-OSVDATA)\nINIT0000 DS    0H\n         USING SESSION,R11                    DEFINE SESSION BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         LR    R2,R0                          COPY R0\n         LR    R3,R1                          COPY R1\n         DROP  R15\n         USING OSVDATA,R10                    DEFINE BASE\n         L     R15,COMM_DXD\n         A     R15,DXD_START\n         ST    R13,4(,R15)                    SAVE R13\n         ST    R15,8(,R13)                    CHAIN SAVE AREA\n         LR    R13,R15                        COPY WORK AREA ADDRESS\n         USING DXDVDATA,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=COMM_VDATA_FUNC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R9,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R9                      DEFINE BASE\n         CLI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         BE    VDATA010\n         CLI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         BE    VDATA030\n         CLI   COMM_VDATA_FUNC,$VDATA_VDEFINE\n         BE    VDATA020\n         ITRACE ID=BAD_FUNC,                                           +\n               DATA1=(COMM_VDATA_FUNC,1)\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        GETMAIN                                                      *\n*                                                                     *\n*        Determine panel size                                         *\n*        COMPUTE SIZE OF AREA                                         *\n*        ISSUE SYSTEM GETMAIN                                         *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVDATA010 DS    0H\n         ITRACE ID=PQUERY,                    ISSUING PQUERY           +\n               DATA1=0(R3)                    .. PANEL NAME\n         LA    R1,PQUERY                      COMMAND'S ADDRESS\n         ST    R1,WORK_SPF_1                  SET IN PARM LIST\n         ST    R3,WORK_SPF_2                  SET ADDR OF PANEL NAME\n         LA    R1,CVDATA                      AREA NAME\n         ST    R1,WORK_SPF_3                  SET IN PARM LIST\n         LA    R1,CVTYPE                      AREA TYPE\n         ST    R1,WORK_SPF_4                  SET IN PARM LIST\n         LA    R1,CVWIDTH                     SCREEN DEPTH\n         ST    R1,WORK_SPF_5                  SET IN PARM LIST\n         LA    R1,CVDEPTH                     SCREEN WIDTH\n         ST    R1,WORK_SPF_6                  SET IN PARM LIST\n         LA    R1,CVROW                       SCREEN ROW\n         ST    R1,WORK_SPF_7                  SET IN PARM LIST\n         LA    R1,CVCOL                       SCREEN COLUMN\n         ST    R1,WORK_SPF_8                  SET IN PARM LIST\n         OI    WORK_SPF_8,X'80'               FLAG 'END-OF-LIST'\n         LA    R1,WORK_SPF_PARMS              PQUERY PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK               SPF INTERFACE'S ADDRESS\n         BALR  R14,R15                        ISSUE QUERY\n         ITRACE ID=PQUERYRC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                        PQUERY SUCCESSFUL?\n         BNZ   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*        Compute size of VDATA                                        *\n* ------------------------------------------------------------------- *\n         L     R0,SPF_VWIDTH                  DYNAMIC AREA WIDTH\n         MH    R0,SPF_VDEPTH+2                MULTIPLY BY DEPTH\n* ------------------------------------------------------------------- *\n*        Acquire storage for dynamic area                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DYNA_W_D,                  WIDTH AND DEPTH          +\n               DATA1=(SPF_VWIDTH,4),                                   +\n               DATA2=(SPF_VDEPTH,4)\n         ST    R0,WORK_VDATA_LENGTH           SAVE LENGTH\n         GETMAIN RU,                                                   +\n               LV=(R0),                                                +\n               LOC=ANY\n         ST    R1,WORK_VDATA_ADDR             SAVE ADDRESS\n         ITRACE ID=GETMAIN,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        DEFINE 'VDATA' TO SPF                                        *\n* ------------------------------------------------------------------- *\nVDATA020 DS    0H\n         LA    R1,VDELETE                     VDELETE FIRST\n         ST    R1,WORK_SPF_1\n         LA    R1,CVDATA\n         ST    R1,WORK_SPF_2\n         OI    WORK_SPF_2,X'80'\n         ITRACE ID=VDEL_1,                                             +\n               RDATA1=R1\n         LA    R1,WORK_SPF_PARMS\n         L     R15,COMM_ISPLINK               VDELETE VDATA\n         BALR  R14,R15\n         ITRACE ID=VDEFINE,                   DEFINING 'VDATA'         +\n               DATA1=(SESS_DISP_VDATA_ADDR,4),                         +\n               DATA2=(SESS_DISP_VDATA_LENGTH,4)\n         LA    R1,VDEFINE                     COMMAND'S ADDRESS\n         ST    R1,WORK_SPF_1                  SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA                      VARIABLE NAME ADDRESS\n         ST    R1,WORK_SPF_2                  SET ADDRESS IN PARM LIST\n         ST    R3,WORK_SPF_3                  SET ADDRESS OF DATA\n         LA    R1,CHARFORM                    DATA FORMAT ADDRESS\n         ST    R1,WORK_SPF_4                  SET ADDRESS IN PARM LIST\n         ST    R2,WORK_VDATA_LENGTH           SAVE LENGTH\n         LA    R1,WORK_VDATA_LENGTH           ADDRESS OF LENGTH\n         ST    R1,WORK_SPF_5                  SET ADDRESS IN PARM LIST\n         OI    WORK_SPF_5,X'80'               FLAG END-OF-LIST\n         LA    R1,WORK_SPF_PARMS              SPF PARM LIST ADDRESS\n         L     R15,COMM_ISPLINK               SPF ENTRY POINT\n         BALR  R14,R15                        DEFINE 'VDATA'\n         LTR   R15,R15                        DEFINE SUCCESSFUL?\n         BNZ   ERR0030                        NO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        FREEMAIN VDATA                                               *\n* ------------------------------------------------------------------- *\nVDATA030 DS    0H\n         ITRACE ID=FREEMAIN,                                           +\n               RDATA1=R3,                                              +\n               RDATA2=R2\n         FREEMAIN RU,                         FREEMAIN THE AREA        +\n               A=(R3),                                                 +\n               LV=(R2)\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=PQRYFAIL\n         DC    H'1'\n         DC    C'PQUERY FAILED'\nERR0020  DS    0H\n         ITRACE ID=VDELFAIL\n         DC    H'2'\n         DC    C'VDELETE FAILED'\nERR0030  DS    0H\n         ITRACE ID=VDEFFAIL\n         DC    H'3'\n         DC    C'VDEFINE FAILED'\nERR0040  DS    0H\n         ITRACE ID=NO_ADDR\n         DC    H'4'\n         DC    C'NO VDATA ADDR'\nERR0050  DS    0H\n         ITRACE ID=NO_LEN\n         DC    H'5'\n         DC    C'NO VDATA LENGTH'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(WORK_VDATA_ADDR,4),                              +\n               DATA2=(WORK_VDATA_LENGTH,4)\n         L     R0,WORK_VDATA_LENGTH\n         L     R1,WORK_VDATA_ADDR\n         L     R13,4(,R13)                    RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R2,R12,28(R13)                 RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC    Q(DXDVDATA)\nCHARFORM      DC    CL8'CHAR'\nCVDATA        DC    CL8'VDATA'\nCVDEPTH       DC    CL8'VDEPTH'\nCVTYPE        DC    CL8'VTYPE'\nCVWIDTH       DC    CL8'VWIDTH'\nCVROW         DC    CL8'VROW'\nCVCOL         DC    CL8'VCOL'\nPQUERY        DC    CL8'PQUERY'\nVDEFINE       DC    CL8'VDEFINE'\nVDELETE       DC    CL8'VDELETE'\n              LTORG\nVDATAEND      EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDVDATA          DSECT\n                  COPY    DXDPREF\n\nWORK_SPF_PARMS    DS      0A     SPF PARM LIST\nWORK_SPF_1        DS      A\nWORK_SPF_2        DS      A\nWORK_SPF_3        DS      A\nWORK_SPF_4        DS      A\nWORK_SPF_5        DS      A\nWORK_SPF_6        DS      A\nWORK_SPF_7        DS      A\nWORK_SPF_8        DS      A\nWORK_SPF_9        DS      A\n\nWORK_VDATA_ADDR   DS      A\nWORK_VDATA_LENGTH DS      F\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      OSVDATA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OSVHEX": {"ttr": 7681, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00W\\x01\\t!\\x0f\\x01\\t6/\\x153\\x02\\xb6\\x02\\xb6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:33:57", "lines": 694, "newlines": 694, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSVHEX                                                *\n*                                                                     *\n*  Build main body for vertical hex                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVHEX   CSECT\nOSVHEX   AMODE 31\nOSVHEX   RMODE ANY\n         USING OSCOMM,R12\n         USING OSVHEX,R15\n         B     INIT0000\nMODID    DC    CL8'OSVHEX'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSVHEXEND-OSVHEX)\nINIT0000 DS    0H\n         USING OSCOMM,R12                      DEFINE COMMON AREA BASE\n         USING SESSION,R11                     DEFINE COMMON AREA BASE\n         USING DS1FMTID,SESS_DSCB              DEFINE BASE\n         STM   R14,R12,12(R13)                 SAVE REGS\n         LR    R10,R15                         COPY ENTRY POINT\n         DROP  R15\n         USING OSVHEX,R10                       DEFINE BASE\n         L     R9,COMM_OSSPFD\n         USING OSSPFD,R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R0,15,SESS_DXD_ADDR\n         BNZ   ERR0070\n         LA    R0,OSVHEX_DXD_L\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSVHEX_DXD_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         USING OSVHEX_WORK,R13                  DEFINE WORK AREA BASE\n         ST    R13,4(,R2)                       SAVE R13\n         ST    R2,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R2                           COPY WORK AREA ADDRESS\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         LA    R1,DATASPACE_1                   USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH  DATA FROM HFS?\n         BO    INIT0010                          YES\n         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM    DATA FROM VSAM FILE?\n         BO    INIT0020                          NO\n         MVC   DXD_PANEL,OS0001                  PANEL FOR NON-VSAM\n         B     INIT0030\nINIT0010 DS    0H\n         MVC   DXD_PANEL,OSHFS                   PANEL FOR HFS(ES)\n         B     INIT0030\nINIT0020 DS    0H\n         MVC   DXD_PANEL,OS0008                  PANEL FOR VSAM\nINIT0030 DS    0H\n         LA    R1,DXD_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                           GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH\n         ST    R1,DXD_VDATA_ADDR\n         MVC   DXD_VWIDTH,SPF_VWIDTH\n         MVC   DXD_VDEPTH,SPF_VDEPTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR NO CURSOR POSITION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0100 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0080\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2\n         XC    DXD_RC,DXD_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA\nMAIN0010 DS    0H\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\nMAIN0050 DS    0H\n         L     R0,DXD_VDATA_ADDR                VDATA BUFFER ADDRESS\n         L     R1,DXD_VDATA_LENGTH              VDATA BUFFER LENGTH\n         SR    R14,R14                          CLEAR R14\n         SR    R15,R15                          CLEAR R15\n         MVCL  R0,R14                           INITIALIZE VDATA BUFFER\n         L     R7,DXD_VDEPTH                    LINES AVAIABLE\n         L     R8,DXD_VDATA_ADDR                VDATA BUFFER ADDRESS\n         SRL   R7,2                             DIVIDE BY 4\n         LR    R1,R7                            COPY LINES\n         A     R1,DSPCREQ_RECORD_NBR            PLUS STARTING RECORD\n         BCTR  R1,0                             MINUS 1\n         C     R1,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?\n         BNH   MAIN0070                         NO\n         L     R1,DATASPACE_1_LAST_RECORD\nMAIN0070 DS    0H\n         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   SPF_RECORD_TO,DXD_WORK_1+1\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" the data and build the body of the SPF panel      *\n* ------------------------------------------------------------------- *\nMAIN0080 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BH    MAIN0170                         END OF RECORDS REACHED\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT\n         BALR  R14,R15                          LINK TO OSDSPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    MAIN0200                         NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         L     R3,DSPCREQ_RECORD_ADDR\n         L     R4,DSPCREQ_RECORD_LENGTH\n         CR    R4,R2                            BEYOND END OF RECORD?\n         BL    MAIN0130                         YES, NO DATA TO DISPLAY\n         BCTR  R2,0                             ADJUST FOR RELATIVE\n         AR    R3,R2                            1ST BYTE TO DISPLAY\n         SR    R4,R2                            LENGTH DISPLAYABLE\n         C     R4,DXD_VWIDTH                    MORE THAN WIDTH?\n         BNH   MAIN0090                         NO\n         L     R4,DXD_VWIDTH                    LIMIT TO WIDTH\nMAIN0090 DS    0H\n         BCTR  R4,0                             FOR EXCUTE\n* ------------------------------------------------------------------- *\n*        Build character line                                         *\n* ------------------------------------------------------------------- *\n         MVC   DXD_WORK_2(80),0(R3)             COPY DATA\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         BNO   MAIN0100\n         TR    DXD_WORK_2,ASCII_TO_EBCDIC\nMAIN0100 DS    0H\n         TR    DXD_WORK_2,PRINTABLES\n         EX    R4,MVC_01                        COPY TO BUFFER\n         A     R8,DXD_VWIDTH                    NEXT LINE\n* ------------------------------------------------------------------- *\n*        Build zone line                                              *\n* ------------------------------------------------------------------- *\n         MVC   DXD_WORK_2(80),0(R3)             COPY DATA\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         BNO   MAIN0110\n         TR    DXD_WORK_2,ASCII_TO_EBCDIC\nMAIN0110 DS    0H\n         MVN   DXD_WORK_2,HEXZERO               CLEAR THE NUMERICS\n         TR    DXD_WORK_2,HEXCHAR               TRANSLATE\n         EX    R4,MVC_01                        COPY TO BUFFER\n         A     R8,DXD_VWIDTH                    NEXT LINE\n* ------------------------------------------------------------------- *\n*        Build numerics line                                          *\n* ------------------------------------------------------------------- *\n         MVC   DXD_WORK_2(80),0(R3)             COPY DATA\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         BNO   MAIN0120\n         TR    DXD_WORK_2,ASCII_TO_EBCDIC\nMAIN0120 DS    0H\n         MVZ   DXD_WORK_2,HEXZERO               CLEAR THE ZONES\n         TR    DXD_WORK_2,HEXCHAR               TRANSLATE\n         EX    R4,MVC_01                        COPY TO BUFFER\n         A     R8,DXD_VWIDTH                    NEXT LINE\n         B     MAIN0140\n* ------------------------------------------------------------------- *\n*        Leave a blank line between 'lines'                           *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         A     R8,DXD_VWIDTH                    SKIP CHAR LINE\n         A     R8,DXD_VWIDTH                    SKIP ZONE LINE\n         A     R8,DXD_VWIDTH                    SKIP NUMERICS LINE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         A     R8,DXD_VWIDTH                    NEXT LINE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BCT   R7,MAIN0150                      MINUS 1 'LINE'\n         B     MAIN0170\nMAIN0150 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER\nMAIN0160 DS    0H\n         A     R1,F1                            ADD 1\n         ST    R1,DSPCREQ_RECORD_NBR            SAVE NEW RECORD NUMBER\n         B     MAIN0080                         GET/PROCESS NEXT RECORD\nMAIN0170 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BL    MAIN0200\n* ------------------------------------------------------------------- *\n*        End of data reached and there is room for the                *\n*        \"End of data\" line                                           *\n* ------------------------------------------------------------------- *\n         MVC   DXD_WORK_2(EOF_01_L),EOF_01\n         L     R1,DATASPACE_1_LAST_RECORD       NUMBER OF RECORDS READ\n         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   DXD_WORK_2+(EOF_01_RECORDS-EOF_01)(L'EOF_01_RECORDS),DXD++\n               _WORK_1+1\n         L     R1,DATASPACE_1_BYTES             NUMBER OF BYTES READ\n         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3\n         MVC   DXD_WORK_2+(EOF_01_BYTES-EOF_01)(L'EOF_01_BYTES),DXD_WOR+\n               K_1+1\n         LA    R1,EOF_01_L                      LENGTH OF TRAILER LINE\n         C     R1,DXD_VWIDTH                    GREATER THAN WIDTH?\n         BNH   MAIN0180                         NO\n         L     R1,DXD_VWIDTH                    LIMIT TO SCREEN WIDTH\nMAIN0180 DS    0H\n         BCTR  R1,0                             FOR EXECUTE\n         EX    R1,MVC_01                        COPY TRAILER LINE\nMAIN0200 DS    0H\n* ------------------------------------------------------------------- *\n*        Build DSCB info and From/To                                  *\n* ------------------------------------------------------------------- *\n         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         L     R15,COMM_V_OSDSCB\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,DXD_PANEL        SET NAME NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                          LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT?\n         BNE   EXIT0000                         YES\n         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?\n         BNE   EXIT0000                         YES\n         OC    SESS_RC,SESS_RC                  RC ZERO?\n         BZ    MAIN0400                         YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=CMDS\n         L     R1,SPF_ZSCROLLN                  NBR TO SCROLL\n         SRL   R1,2                             'LOGICAL' LINES\n         ST    R1,SESS_VERTICAL_SCROLL\n         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    MAIN0510                         YES\n         CLI   SPF_ZVERB,C'D'                   DOWN?\n         BE    MAIN0530                         YES\n         CLI   SPF_ZVERB,C'L'                   LEFT?\n         BE    MAIN0550                         YES\n         CLI   SPF_ZVERB,C'R'                   RIGHT?\n         BE    MAIN0580                         YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    MAIN0620                         YES\n         CLI   SPF_ZVERB,C'U'                   UP?\n         BE    MAIN0630                         YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OC    SPF_ZCMD,COMM_BLANKS             'TRANSLATE' TO UPPER\n         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?\n         BE    MAIN0200                         YES\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         OC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR\n         BZ    MAIN0200                         NO OPERANDS\n         ICM   R4,15,OPERAND_01_ADDRESS\n         CLC   CANCEL,0(R4)                     CANCEL?\n         BE    CANCEL00                         YES\n         CLC   CANCEL(3),0(R4)                  CANCEL?\n         BE    CANCEL00                         YES\n         CLC   OPERAND_01_LENGTH,H5             POSSIBLY ASCII COMMAND?\n         BNE   ERR0060                          NO\n         CLC   ASCII,0(R4)                      ASCII COMMAND?\n         BNE   ERR0060                          NO\n         CLI   COMM_OPERANDS_NBR+1,2            TWO OPERANDS?\n         BL    MAIN0410                         NO\n         BH    ERR0030                          TOO MANY\n         CLC   OPERAND_02_LENGTH,H3             TOO LONG?\n         BH    ERR0040                          YES\n         ICM   R4,15,OPERAND_02_ADDRESS\n         CLC   ON,0(R4)                         TURN ASCII ON?\n         BE    MAIN0420\n         CLC   OFF,0(R4)                        TURN ASCII OFF?\n         BE    MAIN0430                         YES\n         B     ERR0050\nMAIN0410 DS    0H\n         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         BO    MAIN0430\nMAIN0420 DS    0H\n         ITRACE ID=ASCII_ON\n         OI    SESS_USER_OPTIONS,$OPTIONS_ASCII\n         MVC   SPF_ASCII,ASCII\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         B     MAIN0040\nMAIN0430 DS    0H\n         ITRACE ID=ASCII_OF\n         NI    SESS_USER_OPTIONS,255-$OPTIONS_ASCII\n         MVC   SPF_ASCII,COMM_BLANKS\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         B     MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0510 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         L     R0,SPF_VDEPTH                    DISPLAY DEPTH\n         SRL   R0,2                             COMPUTE EFFECTIVE DEPTH\n         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD\n         BCTR  R2,0\n         SR    R2,R0                            MINUS EFFECTIVE DEPTH\n         A     R2,F2                            PLUS 2\n         C     R2,DATASPACE_1_FIRST_RECORD      LOWER THAN FIRST?\n         BNL   MAIN0520                         NO\n         L     R2,DATASPACE_1_FIRST_RECORD      FORCE TO FIRST RECORD\nMAIN0520 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR\n         B     MAIN0040                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0530 DS    0H\n         ITRACE ID=DOWN,                                               +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_RECORD,4),             +\n               DATA2=(SESS_VERTICAL_SCROLL,4)\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0510                            YES\n         L     R1,SESS_VERTICAL_SCROLL             NBR TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST DISPLAYED      D\n         AR    R2,R1                               PLUS SCROLL\n         C     R2,DATASPACE_1_LAST_RECORD\n         BH    MAIN0540                            BEYOND END OF DATA\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR\n         B     MAIN0040                            REBUILD EVERYTHING\nMAIN0540 DS    0H\n         L     R2,DATASPACE_1_LAST_RECORD          HIGHEST STORED\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD MINUS 1ST DISPLAYED  ED\n         C     R2,DXD_VDEPTH                       MORE THAN ONE SCRN?\n         BNH   MAIN0050                            NO.. STAY PUT\n         L     R2,DATASPACE_1_LAST_RECORD          HIGHEST STORED\n         S     R2,DXD_VDEPTH                       MINUS 1 SCREEN\n         A     R2,F2                               PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD SET FIRST TO DISPLAY\n         B     MAIN0040                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL LEFT                                                  *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=LEFT,                                               +\n               DATA1=(SESS_HORIZONTAL_SCROLL,2)\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0560                         YES\n         L     R1,SESS_HORIZONTAL_SCROLL        COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         SR    R2,R1                            MINUS COLUMNS TO SCROLL\n         C     R2,F1                            AT LEAST 1 COLUMN LEFT?\n         BNL   MAIN0570                         NO\nMAIN0560 DS    0H\n         L     R2,F1                            STOP AT COLUMN 1\nMAIN0570 DS    0H\n         ITRACE ID=LEFT_1,                                             +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0040                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL RIGHT                                                 *\n* ------------------------------------------------------------------- *\nMAIN0580 DS    0H\n         ITRACE ID=RIGHT,                                              +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,2)\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    MAIN0610                         YES\n         L     R1,SESS_HORIZONTAL_SCROLL        COLUMNS TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         AR    R2,R1                            PLUS COLUMNS TO SCROLL\n         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS    HFS?\n         BO    MAIN0600                         YES.. ALLOW ANYTHING\n         OC    DS1LRECL,DS1LRECL                LRECL = ZERO?\n         BZ    MAIN0590                         YES..\n         CH    R2,DS1LRECL                      MORE THAN RECORD SIZE?\n         BH    MAIN0040                         YES.. STAY PUT\n         B     MAIN0600\nMAIN0590 DS    0H\n         CH    R2,DS1BLKL                       MORE THAN BLOCK SIZE?\n         BH    MAIN0040                         YES.. STAY PUT\nMAIN0600 DS    0H\n         ITRACE ID=RIGHT_1,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0040                         REBUILD EVERYTHING\nMAIN0610 DS    0H\n         LH    R2,DS1LRECL                      RECORD LENGTH\n         S     R1,DXD_VWIDTH                    MINUS 1 SCREEN WIDTH\n         A     R1,F1                            PLUS 1\n         ITRACE ID=RIGHT_2,                                            +\n               RDATA1=R2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN\n         B     MAIN0040                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0620 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         B     MAIN0040                         REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0630 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0620                            YES\n         L     R1,SESS_VERTICAL_SCROLL             NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST DISPLAYED      D\n         SR    R2,R1                               MINUS SCROLL AMOUNT\n         C     R2,DATASPACE_1_FIRST_RECORD         LESS THAN FIRST?\n         BNL   MAIN0640                            NO\n         L     R2,DATASPACE_1_FIRST_RECORD         DON'T SCROLL\nMAIN0640 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR\n         B     MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1',C'ERROR FROM OSDSPACE'\nERR0020  DS    0H\n         DC    H'1',C'PARSE FAILURE'\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0100\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4\n         B     ERR0100\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,5\n         B     ERR0100\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6\n         B     ERR0100\nERR0070  DS    0H\n         DC    H'0'\nERR0080  DS    0H\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0000\n         DC    H'0'\nERR0100  DS    0H\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0200\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         ICM   R1,15,DXD_VDATA_ADDR             VDATA ADDRESS\n         BZ    CLEAN010\n         L     R0,DXD_VDATA_LENGTH              VDATA LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\nCLEAN010 DS    0H\n         LA    R0,OSVHEX_DXD_L                  WORK AREA SIZE\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                           FREE WORK AREA         +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCANCEL00 DS    0H\n         ITRACE ID=CANCEL\n         MVI   SESS_RC+1,4\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                       RETURN CODE\n         L     R13,4(,R13)                      RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                     RESTORE R14\n         LM    R0,R12,20(R13)                   RESTORE REGISTERS\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R8),DXD_WORK_2    COPY DATA TO BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF1              DC    F'1'\nF2              DC    F'2'\nH2              DC    H'2'\nH3              DC    H'3'\nH5              DC    H'5'\nH6              DC    H'6'\nH8              DC    H'8'\n\nHEXZERO         DC    80X'00'\n\nCANCEL          DC    C'CANCEL '\nOSHFS           DC    CL8'OSHFS'\nOS0001          DC    CL8'OS0001'\nOS0008          DC    CL8'OS0008'\nASCII           DC    C'ASCII'\nOFF             DC    C'OFF'\nON              DC    C'ON'\n\nHEXCHAR         DC    C'0123456789ABCDEF'\n                DC    C'1               '\n                DC    C'2               '\n                DC    C'3               '\n                DC    C'4               '\n                DC    C'5               '\n                DC    C'6               '\n                DC    C'7               '\n                DC    C'8               '\n                DC    C'9               '\n                DC    C'A               '\n                DC    C'B               '\n                DC    C'C               '\n                DC    C'D               '\n                DC    C'E               '\n                DC    C'F               '\n\nEDIT_WORD_1     DC    X'40202020202020202120'\nEOF_01          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'---- END OF DATA ----'\nEOF_01_RECORDS  DC    CL9' '\n                DC    C' RECORDS, '\nEOF_01_BYTES    DC    CL9' '\n                DC    C' BYTES ------------------'\nEOF_01_L        EQU   *-EOF_01\n\n\nASCII_TO_EBCDIC DS    0C\n*                        0 1 2 3 4 5 6 7 8 9 A B C D E F\n                DC    X'000102030405060708090A0B0C0D0E0F' 00-0F\n                DC    X'101112131415161718191A1B1C1D1E1F' 10-1F\n                DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 20-2F\n                DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 30-3F\n                DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 40-4F\n                DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5E6D' 50-5F\n                DC    X'79818283848586878889919293949596' 60-6F\n                DC    X'979899A2A3A4A5A6A7A8A98B6A9BA17F' 70-7F\n                DC    X'808182838485868788898A8B8C8D8E8F' 80-8F\n                DC    X'909192939495969798999A9B9C9D9E9F' 90-9F\n                DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF' A0-AF\n                DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF' B0-BF\n                DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF' C0-CF\n                DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF' D0-DF\n                DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF' E0-EF\n\nPRINTABLES      DS    0C\n*                        0 1 2 3 4 5 6 7 8 9 A B C D E F\n                DC    X'40404040404040404040404040404040' 00-0F\n                DC    X'40404040404040404040404040404040' 10-1F\n                DC    X'40404040404040404040404040404040' 20-2F\n                DC    X'40404040404040404040404040404040' 30-3F\n                DC    X'404040404040404040404A4B4C4D4E4F' 40-4F\n                DC    X'504040404040404040405A5B5C5D5E5F' 50-5F\n                DC    X'60614040404040404040406B6C6D6E6F' 60-6F\n                DC    X'404040404040404040407A7B7C7D7E7F' 70-7F\n                DC    X'40818283848586878889408B8C8D8E8F' 80-8F\n                DC    X'40919293949596979899409B9C9D9E9F' 90-9F\n                DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF\n                DC    X'4040404040404040404040BBBCBDBEBF' B0-BF\n                DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n                DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n                DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n                DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\n                LTORG\n\nOSVHEXEND       EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVHEX_WORK       DSECT\n                  COPY     DXDPREF\n\nDXD_PANEL         DS       CL8\nDXD_VDATA_ADDR    DS       A\nDXD_VDATA_LENGTH  DS       F\n\nDXD_VWIDTH        DS       F\nDXD_VDEPTH        DS       F\n\nDXD_RC            DS       H\n\nDXD_WORK_1        DS       CL10\nDXD_WORK_2        DS       CL100\n                  DSPCREQ  DSECT=NO\n                  FMATREQ  DSECT=NO\nOSVHEX_DXD_L      EQU      *-OSVHEX_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY    DSECT\n         IBMMAC VTOC=1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSVHEX\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSVRAW": {"ttr": 7940, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x08\\x01\\t!\\x0f\\x01\\t6/\\x154\\x06\\xf9\\x06\\xfc\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-07-29T00:00:00", "modifydate": "2009-12-28T15:34:08", "lines": 1785, "newlines": 1788, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSVRAW                                                *\n*                                                                     *\n*  Build main raw VTOC                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVRAW   CSECT\nOSVRAW   AMODE 31\nOSVRAW   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING OSVRAW,R15\n         B     INIT0000\nMODID    DC    CL8'OSVRAW'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSVRAWEND-OSVRAW)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING DS1FMTID,SESS_DSCB             DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         LA    R9,2048(,R10)\n         LA    R9,2048(,R9)\n         DROP  R15\n         USING OSVRAW,R10,R9                  DEFINE BASE\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0020\n         ICM   R2,15,SESS_DXD_ADDR\n         BNZ   INIT0010\n         LA    R0,OSVRAW_WORK_L\n         ST    R0,SESS_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR\n         LR    R2,R1\n         LR    R0,R1\n         LA    R1,OSVRAW_WORK_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\nINIT0010 DS    0H\n         ST    R13,4(,R2)                     SAVE R13\n         ST    R2,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING OSVRAW_WORK,R13                DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY1\n         L     R5,SESS_IO_AREA                I/O AREA ADDRESS\n         ST    R5,DSPCREQ_RECORD_ADDR\n         MVI   WORK_HYPEN_1,C'-'\n         MVI   WORK_HYPEN_2,C'-'\n         MVC   SPF_VOLSER,SESS_VOLSER\n         MVC   COMM_MSG_CSECT,MODID\n         MVI   COMM_MSG_ID,0\n         LA    R1,DATASPACE_1                 USE DATA SPACE 1\n         ST    R1,DSPCREQ_DATASPACE\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC         VTOC INFO?\n         BNE   EXIT0000                               NO\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_DSN\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         MVC   SESS_DISP_PANEL,VRAW_PANEL\n         LA    R1,SESS_DISP_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,WORK_VDATA1_LENGTH\n         ST    R1,WORK_VDATA1_ADDR\n         MVC   WORK_VWIDTH,SPF_VWIDTH\n         MVC   WORK_VDEPTH,SPF_VDEPTH\n         LA    R1,SESS_DISP_PANEL\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,WORK_VDATA2_LENGTH\n         ST    R1,WORK_VDATA2_ADDR\n         B     EXIT0000\nINIT0020 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         BZ    ERR0030\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2\n         XC    WORK_RC,WORK_RC\n         L     R5,SESS_IO_AREA                I/O AREA ADDRESS\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=1ST_RECD,                                           +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_RECORD,4)\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n* ------------------------------------------------------------------- *\n*        Clear VDATA                                                  *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         L     R0,WORK_VDATA1_ADDR\n         L     R1,WORK_VDATA1_LENGTH\n         ITRACE ID=CLRVDATA,                                           +\n               RDATA1=R0,                                              +\n               RDATA2=R1\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R7,WORK_VDATA1_ADDR                  BUFFER ADDRESS\n         L     R6,WORK_VDEPTH                       NUMBER OF LINES\n         XC    WORK_LINES,WORK_LINES                RESET NBR OF LINES\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" records and build display                         *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC       VTOC INFO?\n         BNE   ERR0040                              NO\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD\n         BH    MAIN0040                             END OF RECORDS\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DATASPACE_1_LAST_RECORD,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         BE    MAIN0030\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         MVC   0(MENU_L,R7),MENU\n         USING MENU,R7\n         MVC   MENU_DSN,1(R5)\n         UNPK  WORK_WORK_2(11),DSPCREQ_CCHHR(6)\n         TR    WORK_WORK_2(10),COMM_HEXCHAR\n         MVC   MENU_CYLINDER,WORK_WORK_2+0\n         MVC   MENU_HEAD,WORK_WORK_2+4\n         MVC   MENU_RECORD,WORK_WORK_2+8\n         DROP  R7\n         LH    R1,WORK_LINES\n         LA    R1,1(,R1)\n         STH   R1,WORK_LINES\n         A     R7,SPF_VWIDTH\n         BCT   R6,MAIN0030\n         B     MAIN0040\nMAIN0030 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR\n         A     R1,F1\n         ST    R1,DSPCREQ_RECORD_NBR\n         B     MAIN0020\n* ------------------------------------------------------------------- *\n*        DISPLAY                                                      *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         ITRACE ID=DISPLAY\n         NI    WORK_FLAGS,255-$LINE_CMD\n         MVC   SESS_DISP_PANEL,VRAW_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,WORK_VDATA1_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,WORK_VDATA1_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS\n         BNE   EXIT0000                       NEW FORMAT SELECTED\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   EXIT0000                       YES\n         OC    SESS_RC,SESS_RC                RC = 0?\n         BZ    MAIN0045                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*        CHECK FOR LINE COMMAND(S)                                    *\n* ------------------------------------------------------------------- *\nMAIN0045 DS    0H\n         L     R7,WORK_VDATA1_ADDR\n         USING MENU,R7\n         LH    R6,WORK_LINES                  NUMBER OF LINES\n         L     R4,DATASPACE_1_DISPLAY_FIRST_RECORD\nMAIN0050 DS    0H\n         OC    MENU_SELECT,C' '\n         CLI   MENU_SELECT,C' '               SELECTED?\n         BE    MAIN0060                       NO\n         ST    R4,DSPCREQ_RECORD_NBR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010\n         USING VTOC_DATA,R5                   DEFINE BASE\n         SR    R0,R0\n         ICM   R0,3,DSPCREQ_CCHHR\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   WORK_CYLINDER,WORK_WORK_1+2\n         ICM   R0,3,DSPCREQ_CCHHR+2\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   WORK_HEAD,WORK_WORK_1+2\n         SR    R0,R0\n         IC    R0,DSPCREQ_CCHHR+4\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   WORK_RECORD,WORK_WORK_1+3\n         CLI   DS1FMTID,C'1'                  FORMAT 1?\n         BE    MAIN1000                       YES\n         CLI   DS1FMTID,C'3'                  FORMAT 3?\n         BE    MAIN3000                       YES\n         CLI   DS1FMTID,C'4'                  FORMAT 4?\n         BE    MAIN4000                       YES\n         CLI   DS1FMTID,C'5'                  FORMAT 5?\n         BE    MAIN5000                       YES\n         DC    H'0'\nMAIN0060 DS    0H\n         A     R7,SPF_VWIDTH                  NEXT LINE\n         LA    R4,1(,R4)                      NEXT RECORD NBR\n         BCT   R6,MAIN0050                    LOOP\n         TM    WORK_FLAGS,$LINE_CMD\n         BO    MAIN0040\n         DROP  R7\n* ------------------------------------------------------------------- *\n*        Check for scrolling                                          *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=CMDS,                                               +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    MAIN0090                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    MAIN0130                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    MAIN0150                       YES\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    MAIN0160                       YES\n         OC    SPF_ZCMD,COMM_BLANKS           'TRANSLATE' TO UPPER CASE\n         CLC   SPF_ZCMD,COMM_BLANKS           ANY COMMAND?\n         BE    MAIN0000                       NO\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,COMM_OPERANDS_NBR\n         BZ    MAIN0040                       NO OPERANDS\n         CLC   OPERAND_01_LENGTH,H4           FOUR BYTES?\n         BNE   MAIN0080\n         ICM   R2,15,OPERAND_01_ADDRESS\n         CLC   =C'SORT ',0(R2)                SORT?\n         BE    MAIN0200\nMAIN0080 DS    0H\n         MVC   SPF_MSG_1(EMSG_03_L),EMSG_03\n         B     MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0090 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n         L     R1,DATASPACE_1_LAST_RECORD\n         S     R1,WORK_VDEPTH                 MINUS SCREEN DEPTH\n         BH    MAIN0100\n         LA    R1,1                           FORCE RECORD 1\n         B     MAIN0110\nMAIN0100 DS    0H\n         LA    R1,1(R1)                       PLUS 1\nMAIN0110 DS    0H\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE STARTING RECd D\n         B     MAIN0000                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS                 CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                    MAX?\n         BE    MAIN0090                             YES\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD  RECORD DISPLAYED\n         A     R1,SPF_ZSCROLLN                      PLUS SCROLL AMOUNT\n         C     R1,DATASPACE_1_LAST_RECORD           BEYOND END OF DATA?\n         BH    MAIN0140                             YES\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE RECD NBR\n         B     MAIN0000                             REBUILD EVERYTHING\nMAIN0140 DS    0H\n         MVC   SPF_MSG_1(EMSG_01_L),EMSG_01\n         B     MAIN0000                        REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR ZCMD\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         B     MAIN0000                       REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                   MAX?\n         BE    MAIN0150                            YES\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD RECORD DISPLAYED\n         S     R1,SPF_ZSCROLLN                     MINUS SCROLL AMOUNT\n         BL    MAIN0150                            LIMIT TO 'TOP'\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE RECORD NUMBER\n         B     MAIN0000                            REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         CLC   COMM_OPERANDS_NBR,H2           CORRECT NBR OF OPERANDS?\n         BH    MAIN0240                       TOO MANY\n         ICM   R2,15,OPERAND_02_ADDRESS\n         CLC   =C'DSN',0(R2)                  SORT BY DSN?\n         BE    MAIN0210                       YES\n         CLC   =C'NAME',0(R2)                 SORT BY DSN?\n         BE    MAIN0210                       YES\n         CLC   =C'ADDR',0(R2)                 SORT BY ADDR\n         BE    MAIN0220                       YES\n         CLC   =C'CCHHR',0(R2)                SORT BY ADDR\n         BE    MAIN0220                       YES\n         MVI   COMM_MSG_ID+1,1\n         B     MAIN0250\nMAIN0210 DS    0H\n         ITRACE ID=SORT_DSN\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_DSN\n         B     MAIN0230\nMAIN0220 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_CCHHR\nMAIN0230 DS    0H\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     MAIN0000\nMAIN0240 DS    0H\n         MVI   COMM_MSG_ID+1,2\nMAIN0250 DS    0H\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*        Format 1 records                                             *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=FORMAT_1\n         ST    R6,WORK_SAVE_R6\n         ST    R7,WORK_SAVE_R7\n         L     R0,WORK_VDATA2_ADDR            INITIALIZE VDATA\n         L     R1,WORK_VDATA2_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         L     R7,WORK_VDATA2_ADDR\n         L     R6,SPF_VDEPTH\n         L     R1,A_MSG_101\n         MVC   0(MSG_101_L,R7),0(r1)\n         USING MSG_101,R7\n         MVC   MSG_101_ADDRESS,WORK_DISK_ADDRESS\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         ITRACE ID=MSG_102\n         L     R1,A_MSG_102\n         MVC   0(MSG_102_L,R7),0(R1)\n         USING MSG_102,R7\n         MVC   MSG_102_DSN,DS1DSNAM\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         ITRACE ID=MSG_103\n         L     R1,A_MSG_103\n         MVC   0(MSG_103_L,R7),0(R1)\n         USING MSG_103,R7\n         CLI   DS1DSSN,C' '\n         BL    MAIN1010\n         MVC   MSG_103_VOLSER,DS1DSSN\n         SR    R1,R1\n         ICM   R1,3,DS1VOLSQ\n         CVD   R1,COMM_DWORD\n         ED    MSG_103_VOLSEQ,COMM_DWORD+5\n         DROP  R7\nMAIN1010 DS    0H\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         ITRACE ID=MSG_104\n         L     R1,A_MSG_104\n         MVC   0(MSG_104_L,R7),0(R1)\n         USING MSG_104,R7\n         OC    DS1CREDT,DS1CREDT\n         BZ    MAIN1020\n         SR    R1,R1\n         IC    R1,DS1CREDT\n         CVD   R1,COMM_DWORD\n         AP    COMM_DWORD,P1900\n         MVC   WORK_WORK_1(6),EDIT_WORD_1\n         ED    WORK_WORK_1(6),COMM_DWORD+5\n         MVC   MSG_104_CREATE(4),WORK_WORK_1+2\n         MVI   MSG_104_CREATE+4,C'.'\n         ICM   R1,3,DS1CREDT+1\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(6),EDIT_WORD_1\n         ED    WORK_WORK_1(6),COMM_DWORD+5\n         MVC   MSG_104_CREATE+5(3),WORK_WORK_1+3\n\nMAIN1020 DS    0H\n         ITRACE ID=MAIN1020\n         OC    DS1EXPDT,DS1EXPDT\n         BZ    MAIN1030\n         SR    R1,R1\n         IC    R1,DS1EXPDT\n         CVD   R1,COMM_DWORD\n         AP    COMM_DWORD,P1900\n         MVC   WORK_WORK_1(6),EDIT_WORD_1\n         ED    WORK_WORK_1(6),COMM_DWORD+5\n         MVC   MSG_104_EXPIRE(4),WORK_WORK_1+2\n         MVI   MSG_104_EXPIRE+4,C'.'\n         ICM   R1,3,DS1EXPDT+1\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(6),EDIT_WORD_1\n         ED    WORK_WORK_1(6),COMM_DWORD+5\n         MVC   MSG_104_EXPIRE+5(3),WORK_WORK_1+3\n\nMAIN1030 DS    0H\n         ITRACE ID=MAIN1030\n         OC    DS1REFD,DS1REFD\n         BZ    MAIN1040\n         SR    R1,R1\n         IC    R1,DS1REFD\n         CVD   R1,COMM_DWORD\n         AP    COMM_DWORD,P1900\n         MVC   WORK_WORK_1(6),EDIT_WORD_1\n         ED    WORK_WORK_1(6),COMM_DWORD+5\n         MVC   MSG_104_REF(4),WORK_WORK_1+2\n         MVI   MSG_104_REF+4,C'.'\n         ICM   R1,3,DS1REFD+1\n         CVD   R1,COMM_DWORD\n         MVC   WORK_WORK_1(6),EDIT_WORD_1\n         ED    WORK_WORK_1(6),COMM_DWORD+5\n         MVC   MSG_104_REF+5(3),WORK_WORK_1+3\n         OC    DS1REFD,DS1REFD\n         DROP  R7\n\nMAIN1040 DS    0H\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         ITRACE ID=MSG_105\n         L     R1,A_MSG_105\n         MVC   0(MSG_105_L,R7),0(R1)\n         USING MSG_105,R7\n         LA    R1,DSORG_TABLE\n         USING DSORG_DSECT,R1\nMAIN1050 DS    0H\n         CLI   0(R1),X'FF'\n         BE    MAIN1060\n         CLC   DS1DSORG,DSORG_CODE\n         BE    MAIN1060\n         LA    R1,DSORG_DSECT_L(,R1)\n         B     MAIN1050\nMAIN1060 DS    0H\n         ITRACE ID=MAIN1060,                                           +\n               DATA1=(DSORG_OPTS,4),                                   +\n               DATA2=(DSORG_DESCRIPTION,4)\n         MVC   WORK_OPTS,DSORG_OPTS\n         MVC   MSG_105_DSORG,DSORG_DESCRIPTION\n         DROP  R1\n         LA    R1,RECFM_TABLE\n         USING RECFM_DSECT,R1\nMAIN1070 DS    0H\n         CLI   0(R1),X'FF'\n         BE    MAIN1080\n         CLC   DS1RECFM,RECFM_CODE\n         BE    MAIN1080\n         LA    R1,RECFM_DSECT_L(,R1)\n         B     MAIN1070\nMAIN1080 DS    0H\n         ITRACE ID=RECFM,                                              +\n               DATA1=(RECFM_CODE,4),                                   +\n               DATA2=(RECFM_DESCRIPTION,4)\n         MVC   MSG_105_RECFM,RECFM_DESCRIPTION\n         SR    R1,R1\n         ICM   R1,3,DS1LRECL\n         CVD   R1,COMM_DWORD\n         ED    MSG_105_LRECL,COMM_DWORD+5\n         ICM   R1,3,DS1BLKL\n         CVD   R1,COMM_DWORD\n         ED    MSG_105_BLKL,COMM_DWORD+5\n         DROP  R1,R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\n\n         ITRACE ID=MSG_106\n         L     R1,A_MSG_106\n         MVC   0(MSG_106_L,R7),0(R1)\n         USING MSG_106,R7\n         SR    R1,R1\n         IC    R1,DS1KEYL\n         CVD   R1,COMM_DWORD\n         ED    MSG_106_KEYL,COMM_DWORD+5\n         ICM   R1,3,DS1RKP\n         CVD   R1,COMM_DWORD\n         ED    MSG_106_RKP,COMM_DWORD+5\n         DROP  R7\n\n         ITRACE ID=MSG_107\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\n         L     R1,A_MSG_107\n         MVC   0(MSG_107_L,R7),0(R1)\n         USING MSG_107,R7\n         UNPK  WORK_WORK_1(3),DS1FLAG1(2)\n         TR    WORK_WORK_1(2),COMM_HEXCHAR\n         MVC   MSG_107_CODE,WORK_WORK_1\n         LA    R1,FLAG1_TABLE\n         USING FLAG1_DSECT,R1\n         SR    R15,R15\nMAIN1090 DS    0H\n         CLI   FLAG1_CODE,X'FF'\n         BE    MAIN1110\n         IC    R15,FLAG1_CODE\n         EX    R15,FLAG1_TM\n         BNO   MAIN1100\n         MVC   MSG_107_DESC,FLAG1_DESCRIPTION\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN1100 DS    0H\n         LA    R1,FLAG1_DSECT_L(,R1)\n         B     MAIN1090\nMAIN1110 DS    0H\n         DROP  R1,R7\n\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\n         ITRACE ID=MSG_108\n         L     R1,A_MSG_108\n         MVC   0(MSG_108_L,R7),0(R1)\n         USING MSG_108,R7\n         UNPK  WORK_WORK_1(3),DS1SMSFG(2)\n         TR    WORK_WORK_1(2),COMM_HEXCHAR\n         MVC   MSG_108_CODE,WORK_WORK_1\n         LA    R1,SMS_TABLE\n         USING SMS_DSECT,R1\n         SR    R15,R15\nMAIN1120 DS    0H\n         CLI   SMS_CODE,X'FF'\n         BE    MAIN1140\n         IC    R15,SMS_CODE\n         EX    R15,SMS_TM\n         BNO   MAIN1130\n         MVC   MSG_108_DESC,SMS_DESCRIPTION\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN1130 DS    0H\n         LA    R1,SMS_DSECT_L(,R1)\n         B     MAIN1120\n         DROP  R1,R7\n\nMAIN1140 DS    0H\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\n         ITRACE ID=MSG_109\n         L     R1,A_MSG_109\n         MVC   0(MSG_109_L,R7),0(R1)\n         USING MSG_109,R7\n         UNPK  WORK_WORK_1(3),DS1DSIND(2)\n         TR    WORK_WORK_1(2),COMM_HEXCHAR\n         MVC   MSG_109_CODE,WORK_WORK_1\n         LA    R1,DSIND_TABLE\n         USING DSIND_DSECT,R1\n         SR    R15,R15\nMAIN1150 DS    0H\n         CLI   DSIND_CODE,X'FF'\n         BE    MAIN1170\n         IC    R15,DSIND_CODE\n         EX    R15,DSIND_TM\n         BNO   MAIN1160\n         MVC   MSG_109_DESC,DSIND_DESCRIPTION\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN1160 DS    0H\n         LA    R1,DSIND_DSECT_L(,R1)\n         B     MAIN1150\nMAIN1170 DS    0H\n         TM    DS1DSIND,X'10'\n         BNO   MAIN1200\n         TM    DS1DSIND,X'04'\n         BO    MAIN1180\n         MVC   MSG_109_DESC,READ_WRITE_PROTECTED\n         B     MAIN1190\nMAIN1180 DS    0H\n         MVC   MSG_109_DESC,WRITE_PROTECTED\nMAIN1190 DS    0H\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN1200 DS    0H\n         DROP  R1,R7\n\n         ITRACE ID=MSG_110\n         L     R1,A_MSG_110\n         MVC   0(MSG_110_L,R7),0(R1)\n         USING MSG_110,R7\n         UNPK  WORK_WORK_1(3),DS1OPTCD(2)\n         TR    WORK_WORK_1(2),COMM_HEXCHAR\n         MVC   MSG_110_CODE,WORK_WORK_1\n         ICM   R1,15,WORK_OPTS\n         BZ    MAIN1330\n         USING OPTCD_DSECT,R1\n         SR    R15,R15\nMAIN1310 DS    0H\n         CLI   OPTCD_CODE,X'FF'\n         BE    MAIN1330\n         IC    R15,OPTCD_CODE\n         EX    R15,OPTCD_TM\n         BNO   MAIN1320\n         MVC   MSG_110_DESC,OPTCD_DESCRIPTION\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN1320 DS    0H\n         LA    R1,OPTCD_DSECT_L(,R1)\n         B     MAIN1310\n         DROP  R1,R7\n\nMAIN1330 DS    0H\n         ITRACE ID=MSG_111\n         L     R1,A_MSG_111\n         MVC   0(MSG_111_L,R7),0(R1)\n         USING MSG_111,R7\n         SR    R1,R1\n         ICM   R1,7,DS1SCAL3\n         CVD   R1,COMM_DWORD\n         ED    MSG_111_VALUE,COMM_DWORD+4\n         LA    R1,SCAL1_TABLE\n         USING SCAL1_DSECT,R1\nMAIN1340 DS    0H\n         CLI   SCAL1_CODE,X'FF'\n         BE    MAIN1360\n         SR    R15,R15\n         IC    R15,SCAL1_CODE\n         EX    R15,SCAL1_TM\n         BO    MAIN1350\n         LA    R1,SCAL1_DSECT_L(,R1)\n         B     MAIN1340\nMAIN1350 DS    0H\n         MVC   MSG_111_DESC,SCAL1_DESCRIPTION\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\n\n         DROP  R1,R7\n\nMAIN1360 DS    0H\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\n         TM    DS1SCAL1,DS1EXT\n         BNO   MAIN1400\n         ITRACE ID=MSG_112\n         L     R1,A_MSG_112\n         MVC   0(MSG_112_L,R7),0(R1)\n         USING MSG_112,R7\n         ICM   R1,3,DS1SCXTV\n         CVD   R1,COMM_DWORD\n         ED    MSG_112_VALUE,COMM_DWORD+5\n         LA    R1,SCXTF_TABLE\n         USING SCXTF_DSECT,R1\nMAIN1370 DS    0H\n         CLI   SCXTF_CODE,X'FF'\n         BE    MAIN1390\n         CLC   SCXTF_CODE,DS1SCXTF\n         BE    MAIN1380\n         LA    R1,SCXTF_DSECT_L(,R1)\n         B     MAIN1370\nMAIN1380 DS    0H\n         MVC   MSG_112_DESC,SCXTF_DESCRIPTION\n         DROP  R1,R7\n\nMAIN1390 DS    0H\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN1400 DS    0H\n         ITRACE ID=MSG_113\n         L     R1,A_MSG_113\n         MVC   0(MSG_113_L,R7),0(R1)\n         USING MSG_113,R7\n         OC    DS1PTRDS,DS1PTRDS\n         BZ    MAIN1410\n         UNPK  WORK_WORK_2(11),DS1PTRDS(6)\n         TR    WORK_WORK_2,COMM_HEXCHAR\n         MVC   MSG_113_CCHHR+0(4),WORK_WORK_2+0\n         MVI   MSG_113_CCHHR+4,C'-'\n         MVC   MSG_113_CCHHR+5(4),WORK_WORK_2+4\n         MVI   MSG_113_CCHHR+9,C'-'\n         MVC   MSG_113_CCHHR+10(2),WORK_WORK_2+8\n         B     MAIN1420\nMAIN1410 DS    0H\n         MVC   MSG_113_CCHHR(L'NONE),NONE\nMAIN1420 DS    0H\n         A     R7,SPF_VWIDTH\n         BCTR  R6,0\n         A     R7,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_EXTENT_HEADING\n         MVC   0(EXTENT_HEADING_L,R7),0(R1)\n         A     R7,SPF_VWIDTH\n         BCTR  R6,0\n\n         LA    R1,DS1EXT1                     1ST EXTENT\n         LA    R2,3                           NBR OF EXTENTS\n         BAL   R15,XTNT0000\n         B     MAIN6000                       DISPLAY DATA\n\nFLAG1_TM TM    DS1FLAG1,0\nSMS_TM   TM    DS1SMSFG,0\nDSIND_TM TM    DS1DSIND,0\nOPTCD_TM TM    DS1OPTCD,0\nSCAL1_TM TM    DS1SCAL1,0\n* ------------------------------------------------------------------- *\n*        FORMAT 3 RECORDS                                             *\n* ------------------------------------------------------------------- *\nMAIN3000 DS    0H\n         ITRACE ID=FORMAT_3\n         ST    R6,WORK_SAVE_R6\n         ST    R7,WORK_SAVE_R7\n         L     R7,WORK_VDATA2_ADDR\n         L     R6,SPF_VDEPTH\n         L     R1,A_MSG_301\n         MVC   0(MSG_301_L,R7),0(R1)\n         USING MSG_301,R7\n         MVC   MSG_301_ADDRESS,WORK_DISK_ADDRESS\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n         A     R7,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_EXTENT_HEADING\n         MVC   0(EXTENT_HEADING_L,R7),0(R1)\n         A     R7,SPF_VWIDTH\n         BCTR  R6,0\n\n         LA    R1,DS3EXTNT                    1ST EXTENT\n         LA    R2,4                           NBR OF EXTENTS\n         BAL   R15,XTNT0000\n\n         LA    R1,DS3ADEXT                    1ST EXTENT\n         LA    R2,9                           NBR OF EXTENTS\n         BAL   R15,XTNT0000\n         B     MAIN6000\n* ------------------------------------------------------------------- *\n*        FORMAT 4 RECORDS                                             *\n* ------------------------------------------------------------------- *\nMAIN4000 DS    0H\n         ITRACE ID=FORMAT_4\n         ST    R6,WORK_SAVE_R6\n         ST    R7,WORK_SAVE_R7\n         L     R7,WORK_VDATA2_ADDR\n         L     R6,SPF_VDEPTH\n         L     R1,A_MSG_401\n         MVC   0(MSG_401_L,R7),0(R1)\n         USING MSG_401,R7\n         MVC   MSG_401_ADDRESS,WORK_DISK_ADDRESS\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_402\n         MVC   0(MSG_402_L,R7),0(R1)\n         USING MSG_402,R7\n         UNPK  WORK_WORK_1(9),DS4HCCHH(5)\n         TR    WORK_WORK_1(8),COMM_HEXCHAR\n         MVC   MSG_402_CCHH+0(4),WORK_WORK_1+0\n         MVI   MSG_402_CCHH+4,C'-'\n         MVC   MSG_402_CCHH+5(4),WORK_WORK_1+4\n         SR    R1,R1\n         ICM   R1,3,DS4NOATK\n         CVD   R1,COMM_DWORD\n         ED    MSG_402_AVAIL,COMM_DWORD+5\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n         DROP  R7\n\n         L     R1,A_MSG_403\n         MVC   0(MSG_403_L,R7),0(R1)\n         USING MSG_403,R7\n         UNPK  WORK_WORK_1(3),DS4VTOCI(2)\n         TR    WORK_WORK_1(2),COMM_HEXCHAR\n         MVC   MSG_403_CODE,WORK_WORK_1\n         LA    R1,VTOCI_TABLE\n         USING VTOCI_DSECT,R1\nMAIN4010 DS    0H\n         CLI   0(R1),X'FF'\n         BE    MAIN4030\n         CLC   DS4VTOCI,VTOCI_CODE\n         BNE   MAIN4020\n         MVC   MSG_403_VTOCI,VTOCI_DESCRIPTION\n         A     R7,WORK_VWIDTH\n         BCTR  R6,0\nMAIN4020 DS    0H\n         LA    R1,VTOCI_DSECT_L(,R1)\n         B     MAIN4010\nMAIN4030 DS    0H\n         DROP  R1,R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_404\n         MVC   0(MSG_404_L,R7),0(R1)\n         USING MSG_404,R7\n         SR    R1,R1\n         IC    R1,DS4NOEXT\n         CVD   R1,COMM_DWORD\n         ED    MSG_404_EXTENTS,COMM_DWORD+6\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_405\n         MVC   0(MSG_405_L,R7),0(R1)\n         USING MSG_405,R7\n         UNPK  WORK_WORK_1(3),DS4SMSFG(2)\n         TR    WORK_WORK_1(2),COMM_HEXCHAR\n         MVC   MSG_405_CODE,WORK_WORK_1\n         LA    R1,SMS_TABLE_2\n         USING SMS_DSECT2,R1\nMAIN4040 DS    0H\n         CLI   0(R1),X'FF'\n         BE    MAIN4060\n         CLC   SMS_CODE2,DS4SMSFG\n         BE    MAIN4050\n         LA    R1,SMS_DSECT2_L(,R1)\n         B     MAIN4040\nMAIN4050 DS    0H\n         MVC   MSG_405_DESC,SMS_DESCRIPTION2\nMAIN4060 DS    0H\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_406\n         MVC   0(MSG_406_L,R7),0(R1)\n         USING MSG_406,R7\n         SR    R1,R1\n         IC    R1,DS4DEVAC\n         CVD   R1,COMM_DWORD\n         ED    MSG_406_CYL,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_407\n         MVC   0(MSG_407_L,R7),0(R1)\n         USING MSG_407,R7\n         SR    R1,R1\n         ICM   R1,3,DS4DSCYL\n         CVD   R1,COMM_DWORD\n         ED    MSG_407_CYL,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_408\n         MVC   0(MSG_408_L,R7),0(R1)\n         USING MSG_408,R7\n         SR    R1,R1\n         ICM   R1,3,DS4DSTRK\n         CVD   R1,COMM_DWORD\n         ED    MSG_408_TRACKS,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_409\n         MVC   0(MSG_409_L,R7),0(R1)\n         USING MSG_409,R7\n         SR    R1,R1\n         ICM   R1,3,DS4DSCYL\n         MVC   WORK_HALFWORD,DS4DSTRK\n         MH    R1,WORK_HALFWORD\n         CVD   R1,COMM_DWORD\n         ED    MSG_409_TRACKS,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_410\n         MVC   0(MSG_410_L,R7),0(R1)\n         USING MSG_410,R7\n         SR    R1,R1\n         ICM   R1,3,DS4DEVTK\n         CVD   R1,COMM_DWORD\n         ED    MSG_410_SIZE,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_411\n         MVC   0(MSG_411_L,R7),0(R1)\n         USING MSG_411,R7\n         SR    R1,R1\n         IC    R1,DS4DEVDT\n         CVD   R1,COMM_DWORD\n         ED    MSG_411_DSCBS,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_412\n         MVC   0(MSG_412_L,R7),0(R1)\n         USING MSG_412,R7\n         SR    R1,R1\n         IC    R1,DS4DEVDB\n         CVD   R1,COMM_DWORD\n         ED    MSG_412_BLOCKS,COMM_DWORD+5\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_413\n         MVC   0(MSG_413_L,R7),0(R1)\n         USING MSG_413,R7\n         UNPK  WORK_WORK_2(9),DS4VTOCE+2(5)\n         TR    WORK_WORK_2(8),COMM_HEXCHAR\n         MVC   MSG_413_CCHH+0(4),WORK_WORK_2+0\n         MVI   MSG_413_CCHH+4,C'-'\n         MVC   MSG_413_CCHH+5(4),WORK_WORK_2+4\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_414\n         MVC   0(MSG_414_L,R7),0(R1)\n         USING MSG_414,R7\n         UNPK  WORK_WORK_2(9),DS4VTOCE+6(5)\n         TR    WORK_WORK_2(8),COMM_HEXCHAR\n         MVC   MSG_414_CCHH+0(4),WORK_WORK_2+0\n         MVI   MSG_414_CCHH+4,C'-'\n         MVC   MSG_414_CCHH+5(4),WORK_WORK_2+4\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n\n         B     MAIN6000\n* ------------------------------------------------------------------- *\n*        FORMAT 5 RECORDS                                             *\n* ------------------------------------------------------------------- *\nMAIN5000 DS    0H\n         ITRACE ID=FORMAT_5\n         ST    R6,WORK_SAVE_R6\n         ST    R7,WORK_SAVE_R7\n         L     R7,WORK_VDATA2_ADDR\n         L     R6,SPF_VDEPTH\n         L     R1,A_MSG_501\n         MVC   0(MSG_501_L,R7),0(R1)\n         USING MSG_501,R7\n         MVC   MSG_501_ADDRESS,WORK_DISK_ADDRESS\n         DROP  R7\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n         A     R7,WORK_VWIDTH\n         BCTR  R6,R0\n         LA    R1,DS5AVEXT\n         LA    R2,8\n         BAL   R15,MAIN5010\n         LA    R1,DS5MAVET\n         LA    R2,19\n         BAL   R15,MAIN5010\n         B     MAIN6000\n\nMAIN5010 DS    0H\n         OC    0(5,R1),0(R1)\n         BZR   R15\n         L     R14,A_MSG_502\n         MVC   0(MSG_502_L,R7),0(R14)\n         USING MSG_502,R7\n         SR    R0,R0\n         ICM   R0,3,0(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG_502_FIRST,WORK_WORK_1+1\n         ICM   R0,3,2(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG_502_CYL,WORK_WORK_1+1\n         SR    R0,R0\n         IC    R0,4(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG_502_TRACKS,WORK_WORK_1+1\n         A     R7,SPF_VWIDTH\n         BCT   R6,MAIN5020\n         BR    R15\nMAIN5020 DS    0H\n         LA    R1,5(,R1)\n         BCT   R2,MAIN5010\n         BR    R15\n         DROP  R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN6000 DS    0H\n         ITRACE ID=DISPLAY2\n         MVC   SESS_DISP_PANEL,VRAW_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,WORK_VDATA2_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,WORK_VDATA2_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        LINK TO OSDISP\nMAIN6010 DS    0H\n         ITRACE ID=DISP2_RC,                                           +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         L     R6,WORK_SAVE_R6\n         L     R7,WORK_SAVE_R7\n         B     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nXTNT0000 DS    0H\n         CLI   0(R1),0\n         BER   R15\n         L     R14,A_EXTENT_MSG\n         MVC   0(EXTENT_MSG_L,R7),0(R14)\n         USING EXTENT_MSG,R7\n         UNPK  EXTENT_TYPE(3),0(2,R1)\n         TR    EXTENT_TYPE,COMM_HEXCHAR\n         MVI   EXTENT_TYPE+2,C' '\n         SR    R0,R0\n         IC    R0,1(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   EXTENT_SEQUENCE,WORK_WORK_1+3\n         ICM   R0,3,2(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   EXTENT_LOW_CC,WORK_WORK_1+2\n         ICM   R0,3,4(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   EXTENT_LOW_HH,WORK_WORK_1+2\n         ICM   R0,3,6(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   EXTENT_HIGH_CC,WORK_WORK_1+2\n         ICM   R0,3,8(R1)\n         CVD   R0,COMM_DWORD\n         MVC   WORK_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   EXTENT_HIGH_HH,WORK_WORK_1+2\n         A     R7,SPF_VWIDTH\n         BCT   R6,XTNT0010\n         BR    R15\nXTNT0010 DS    0H\n         LA    R1,10(,R1)\n         BCT   R2,XTNT0000\n         BR    R15\n         DROP  R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0',C'Error from OSDSPACE'\nERR0030  DS    0H\n         DC    H'2'\nERR0040  DS    0H\n         MVC   SPF_MSG_1(EMSG_04_L),EMSG_04\n         B     MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R0,WORK_VDATA1_LENGTH\n         L     R1,WORK_VDATA1_ADDR\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA1\n         L     R0,WORK_VDATA2_LENGTH\n         L     R1,WORK_VDATA2_ADDR\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA2\n         ITRACE ID=CLEAN_UP\n         LA    R0,OSVRAW_WORK_L               WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,WORK_RC                    RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                LTORG\n\nA_MSG_101       DC    A(MSG_101)\nA_MSG_102       DC    A(MSG_102)\nA_MSG_103       DC    A(MSG_103)\nA_MSG_104       DC    A(MSG_104)\nA_MSG_105       DC    A(MSG_105)\nA_MSG_106       DC    A(MSG_106)\nA_MSG_107       DC    A(MSG_107)\nA_MSG_108       DC    A(MSG_108)\nA_MSG_109       DC    A(MSG_109)\nA_MSG_110       DC    A(MSG_110)\nA_MSG_111       DC    A(MSG_111)\nA_MSG_112       DC    A(MSG_112)\nA_MSG_113       DC    A(MSG_113)\n\nA_MSG_301       DC    A(MSG_301)\n\nA_MSG_401       DC    A(MSG_401)\nA_MSG_402       DC    A(MSG_402)\nA_MSG_403       DC    A(MSG_403)\nA_MSG_404       DC    A(MSG_404)\nA_MSG_405       DC    A(MSG_405)\nA_MSG_406       DC    A(MSG_406)\nA_MSG_407       DC    A(MSG_407)\nA_MSG_408       DC    A(MSG_408)\nA_MSG_409       DC    A(MSG_409)\nA_MSG_410       DC    A(MSG_410)\nA_MSG_411       DC    A(MSG_411)\nA_MSG_412       DC    A(MSG_412)\nA_MSG_413       DC    A(MSG_413)\nA_MSG_414       DC    A(MSG_414)\n\nA_MSG_501       DC    A(MSG_501)\nA_MSG_502       DC    A(MSG_502)\n\nA_EXTENT_HEADING DC   A(EXTENT_HEADING)\nA_EXTENT_MSG     DC   A(EXTENT_MSG)\n\nF1              DC    F'1'\nH2              DC    H'2'\nH4              DC    H'4'\n\nVRAW_PANEL      DC    CL8'OSVRAW '\nNONE            DC    C'NONE'\n\nREAD_WRITE_PROTECTED  DC CL40'READ/WRITE PASSWORD'\nWRITE_PROTECTED       DC CL40'WRITE PASSWORD'\n\nEDIT_WORD_1     DC    X'F02020202120'\n\nP1900           DC    P'1900'\n\nEMSG_01         DC    C'At bottom of data'\nEMSG_01_L       EQU   *-EMSG_01\n\nEMSG_02         DC    C'At top of data'\nEMSG_02_L       EQU   *-EMSG_02\n\nEMSG_03         DC    C'Invalid primary command'\nEMSG_03_L       EQU   *-EMSG_03\n\nEMSG_04         DC    C'NOT VTOC DATA'\nEMSG_04_L       EQU   *-EMSG_04\n\nFLAG1_TABLE     DS    0C\n                DC    AL1(DS1COMPR),CL20'Compressable extend '\n                DC    AL1(DS1CPOIT),CL20'Checkpointed        '\n                DC    AL1(DS1EXPBY),CL20'VSE retention period'\n                DC    AL1(DS1RECAL),CL20'Recalled            '\n                DC    AL1(DS1LARGE),CL20'>64 K track coexist '\n                DC    X'FF'\n\nDSIND_TABLE     DS    0C\n                DC    X'80',CL40'Last volume containing data'\n                DC    X'40',CL40'Dataset is RACF defined'\n                DC    X'20',CL40'Block length is a multiple of 8'\n                DC    x'08',CL40'Modified since recall'\n                DC    x'02',CL40'Opened for update since backup'\n                DC    x'01',CL40'Secure checkpoint data set'\n                DC    X'FF'\n\nSMS_TABLE       DS    0C\n                DC    AL1(DS1SMSDS),CL20'SMS managed         '\n                DC    AL1(DS1SMSUC),CL20'No BCS entry exists '\n                DC    AL1(DS1REBLK),CL20'May be reblocked    '\n                DC    AL1(DS1CRSDB),CL20'DADSM origin blksize'\n                DC    AL1(DS1PDSE),CL20'PDSE                '\n                DC    AL1(DS1STRP),CL20'Extended format     '\n                DC    AL1(DS1PDSEX),CL20'HFS                 '\n                DC    AL1(DS1DSAE),CL20'Extended attributes '\n                DC    X'FF'\n\nSCAL1_TABLE     DS    0C\n                DC    X'C4',CL20'Contiguous cylinders'\n                DC    X'C0',CL20'Cylinders'\n                DC    X'84',CL20'Contiguous tracks'\n                DC    X'80',CL20'Tracks'\n                DC    X'44',CL20'Contiguous Blocks'\n                DC    X'40',CL20'Blocks'\n                DC    X'41',CL20'Blocks (rounded)'\n                DC    X'FF'\n                DC    X'FF'\n\nSCXTF_TABLE     DS    0C\n                DC    AL1(DS1SCAVB),CL20' blksize units     '\n                DC    AL1(DS1SCMB),CL20'MB                  '\n                DC    AL1(DS1SCKB),CL20'KB                  '\n                DC    AL1(DS1SCUB),CL20' bytes              '\n                DC    AL1(DS1SCCP1),CL20' 256 byte units    '\n                DC    AL1(DS1SCCP2),CL20' 65536 byte units  '\n                DC    X'FF'\n\nDSORG_TABLE    DS    0C\n               DC    AL1(DS1DSGIS),AL1(0),AL4(0),CL4'ISAM'\n               DC    AL1(DS1DSGPS),AL1(0),AL4(PS_OPTS),CL4'PS'\n               DC    AL1(DS1DSGPS+DS1DSGU),AL1(0),AL4(PS_OPTS),CL4'PSU'\n               DC    AL1(DS1DSGDA),AL1(0),AL4(DA_OPTS),CL4'DA'\n               DC    AL1(DS1DSGDA+DS1DSGU),AL1(0),AL4(DA_OPTS),CL4'DAU'\n               DC    AL1(DS1DSGCX),AL1(0),AL4(0),CL4'BTAM'\n               DC    AL1(DS1DSGPO),AL1(0),AL4(PS_OPTS),CL4'PO'\n               DC    AL1(DS1DSGPO+DS1DSGU),AL1(0),AL4(PS_OPTS),CL4'POU'\n               DC    AL1(0),AL1(DS1DSGGS),AL4(0),CL4'GS'\n               DC    AL1(0),AL1(DS1DSGTX),AL4(0),CL4'TX'\n               DC    AL1(0),AL1(DS1DSGTQ),AL4(0),CL4'TQ'\n               DC    AL1(0),AL1(DS1ORGAM),AL4(VSAM_OPTS),CL4'VS'\n               DC    AL1(DS1DSGU),AL1(DS1ORGAM),AL4(VSAM_OPTS),CL4'VSU'\n               DC    AL1(0),AL1(DS1DSGTR),AL4(0),CL4'TR'\n               DC    X'FF',AL1(0),AL4(0),CL4'UNKN'\n\nRECFM_TABLE     DS    0C\n                DC    AL1(DS1RECFF),CL4'F'\n                DC    AL1(DS1RECFF+DS1RECFS),CL4'FS'\n                DC    AL1(DS1RECFF+DS1RECFA),CL4'FA'\n                DC    AL1(DS1RECFF+DS1RECMC),CL4'FM'\n                DC    AL1(DS1RECFF+DS1RECFB),CL4'FB'\n                DC    AL1(DS1RECFF+DS1RECFB+DS1RECFS),CL4'FBS'\n                DC    AL1(DS1RECFF+DS1RECFB+DS1RECFA),CL4'FBA'\n                DC    AL1(DS1RECFF+DS1RECFB+DS1RECMC),CL4'FBM'\n                DC    AL1(DS1RECFV),CL4'V'\n                DC    AL1(DS1RECFV+DS1RECFA),CL4'VA'\n                DC    AL1(DS1RECFV+DS1RECFB),CL4'VB'\n                DC    AL1(DS1RECFV+DS1RECFS),CL4'VS'\n                DC    AL1(DS1RECFV+DS1RECFB+DS1RECFS),CL4'VBS'\n                DC    AL1(DS1RECFV+DS1RECFB+DS1RECFA),CL4'VBA'\n                DC    AL1(DS1RECFV+DS1RECFB+DS1RECMC),CL4'VBM'\n                DC    AL1(DS1RECFF+DS1RECFV),CL4'U'\n                DC    X'FF',CL4'UNKN'\n\nDA_OPTS         DS    0C\n                DC    X'80',CL40'Write validity check'\n                DC    X'40',CL40'Track overflow'\n                DC    X'20',CL40'Extended search'\n                DC    X'10',CL40'Feedback'\n                DC    X'08',CL40'Actual addressing'\n                DC    X'04',CL40'Dynamic buffering'\n                DC    X'02',CL40'Read exclusive'\n                DC    X'01',CL40'Relative block addr '\n                DC    X'FF'\n\nPS_OPTS         DS    0C\n                DC    X'80',CL40'Write validity check'\n                DC    X'40',CL40'Allow data check'\n                DC    X'20',CL40'Chained scheduling  '\n                DC    X'10',CL40'VSE/OS interchange  '\n                DC    X'08',CL40'Treat EOF as EOV    '\n                DC    X'04',CL40'Search direct       '\n                DC    X'02',CL40'User label totalling'\n                DC    X'01',CL40'3800 print subsystem'\n                DC    X'FF'\n\nVSAM_OPTS       DS    0C\n                DC    AL1(DS1OPTIC),CL40'Cataloged in ICF CAT'\n                DC    AL1(DS1OPTBC),CL40'ICF catalog'\n                DC    X'FF'\n\nVTOCI_TABLE     DS    0C\n                DC    AL1(DS4DOSBT),CL40'VSE contamination'\n                DC    AL1(DS4DVTOC),CL40'INDEX was disabled'\n                DC   AL1(DS4EFVLD),CL40'Extended free space management'\n                DC    AL1(DS4DSTKP),CL40'VSE stacked pack'\n                DC    AL1(DS4DOCVT),CL40'VSE converted VTOC'\n                DC    AL1(DS4DIRF),CL40'DADSM interrupt recording'\n                DC    AL1(DS4DICVT),CL40'DIRF reclaimed'\n                DC    AL1(DS4IVTOC),CL40'Index created'\n                DC    AL1(DS4IVTOC+DS4DOSBT),CL40'Index valid'\n                DC    AL1(DS4IVTOC+DS4DOCVT+DS4DOSBT),CL40'Index valid'\n                DC    X'FF'\n\nSMS_TABLE_2     DS    0C\n                DC    AL1(DS4SMS),CL40'SMS managed volume'\n                DC    AL1(DS4SMSCV),CL40'SMS volume in initial state'\n                DC    X'FF'\n*\n*             Menu\n*\nMENU            DS    0C\n                DC    AL1($SCREEN_ATTR_INPUT)\nMENU_SELECT     DC    C' '\n                DC    AL1($SCREEN_ATTR_NORMAL)\n                DC    C' '\nMENU_DSN        DC    CL44' '\n                DC    C' '\nMENU_CYLINDER   DC    CL4' '\n                DC    C'-'\nMENU_HEAD       DC    CL4' '\n                DC    C'-'\nMENU_RECORD     DC    CL3' '\nMENU_L          EQU   *-MENU\n*\n*             FORMAT 1\n*\nMSG_101         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    26C'-'\n                DC    C' FORMAT 1 AT '\nMSG_101_ADDRESS DC    CL13' '\n                DC    C' '\n                DC    26C'-'\nMSG_101_L       EQU   *-MSG_101\n\nMSG_102         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DSN           '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_102_DSN     DC    CL44' '\nMSG_102_L       EQU   *-MSG_102\n\nMSG_103         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'1st VOLSER    '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_103_VOLSER  DC    CL06' '\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  Vol sequence'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_103_VOLSEQ  DC    X'402020202120'\nMSG_103_L       EQU   *-MSG_103\n\nMSG_104         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Created       '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_104_CREATE  DC    CL08'-None-'\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  Expire'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_104_EXPIRE  DC    CL08'-None-'\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  Referenced'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_104_REF     DC    CL08' '\nMSG_104_L       EQU   *-MSG_104\n\nMSG_105         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DSORG       '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_105_DSORG   DC    CL04' '\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  RECFM'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_105_RECFM   DC    CL04' '\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  LRECL'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_105_LRECL   DC    X'402020202120'\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  BLKL'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_105_BLKL    DC    X'402020202120'\n                DC    AL1($SCREEN_ATTR_HIGH)\nMSG_105_L       EQU   *-MSG_105\n\nMSG_106         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'KEYL'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_106_KEYL    DC    X'402020202120'\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'        RKP'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_106_RKP     DC    X'402020202120'\nMSG_106_L       EQU   *-MSG_106\n\nMSG_107         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DS1FLAG1'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_107_CODE    DC    CL2' '\n                DC    CL2' '\nMSG_107_DESC    DC    CL20' '\nMSG_107_L       EQU   *-MSG_107\n\nMSG_108         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DS1SMSFG'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_108_CODE    DC    CL2' '\n                DC    CL2' '\nMSG_108_DESC    DC    CL20' '\nMSG_108_L       EQU   *-MSG_108\n\nMSG_109         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DS1DSIND'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_109_CODE    DC    CL2' '\n                DC    CL2' '\nMSG_109_DESC    DC    CL40' '\nMSG_109_L       EQU   *-MSG_109\n\nMSG_110         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DS1OPTCD'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_110_CODE    DC    CL2' '\n                DC    CL2' '\nMSG_110_DESC    DC    CL40' '\nMSG_110_L       EQU   *-MSG_110\n\nMSG_111         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Secondary space          '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_111_VALUE   DC    X'4020202020202120'\n                DC    C' '\nMSG_111_DESC    DC    CL20' '\nMSG_111_L       EQU   *-MSG_111\n\nMSG_112         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Secondary space extension'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_112_VALUE   DC    X'402020202120'\nMSG_112_DESC    DC    CL20' '\nMSG_112_L       EQU   *-MSG_112\n\nMSG_113         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'FORMAT_3 ADDRESS         '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_113_CCHHR   DC    CL12' '\nMSG_113_L       EQU   *-MSG_113\n\n\n*\n*             FORMAT 3\n*\nMSG_301         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    26C'-'\n                DC    C' FORMAT 3 AT '\nMSG_301_ADDRESS DC    CL13' '\n                DC    C' '\n                DC    26C'-'\nMSG_301_L       EQU   *-MSG_301\n\n*\n*             FORMAT 4\n*\nMSG_401         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    26C'-'\n                DC    C' FORMAT 4 AT '\nMSG_401_ADDRESS DC    CL13' '\n                DC    C' '\n                DC    26C'-'\nMSG_401_L       EQU   *-MSG_401\n\nMSG_402         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'CCHH of next alternate track'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_402_CCHH    DC    CL09' '\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'   Number available'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_402_AVAIL   DC    X'402020202120'\nMSG_402_L       EQU   *-MSG_402\n\nMSG_403         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'VTOC INDICATORS             '\nMSG_403_CODE    DC    CL2' '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_403_VTOCI   DC    CL40' '\nMSG_403_L       EQU   *-MSG_403\n\nMSG_404         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Number of VTOC extents      '\nMSG_404_EXTENTS DC    X'40202120'\nMSG_404_L       EQU   *-MSG_404\n\nMSG_405         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'SMS flags                   '\nMSG_405_CODE    DC    CL2' '\n                DC    C' '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_405_DESC    DC    CL40' '\nMSG_405_L       EQU   *-MSG_405\n\nMSG_406         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Alternate cylinders         '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_406_CYL     DC    X'402020202120'\nMSG_406_L       EQU   *-MSG_406\n\nMSG_407         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Total cylinders             '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_407_CYL     DC    X'402020202120'\nMSG_407_L       EQU   *-MSG_407\n\nMSG_408         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Tracks per cylinder         '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_408_TRACKS  DC    X'402020202120'\nMSG_408_L       EQU   *-MSG_408\n\nMSG_409         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Total tracks                '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_409_TRACKS  DC    X'402020202120'\nMSG_409_L       EQU   *-MSG_409\n\nMSG_410         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Track size                  '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_410_SIZE    DC    X'402020202120'\n\nMSG_410_L       EQU   *-MSG_410\n\nMSG_411         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'DSCBs per track             '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_411_DSCBS   DC    X'402020202120'\nMSG_411_L       EQU   *-MSG_411\n\nMSG_412         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Directory blocks per track  '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_412_BLOCKS  DC    X'402020202120'\nMSG_412_L       EQU   *-MSG_412\n\nMSG_413         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'VTOC extent  from:          '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_413_CCHH    DC    CL9' '\nMSG_413_L       EQU   *-MSG_413\n\nMSG_414         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'               to:          '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_414_CCHH    DC    CL9' '\nMSG_414_L       EQU   *-MSG_414\n\n*\n*             FORMAT 5\n*\nMSG_501         DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    26C'-'\n                DC    C' FORMAT 5 AT '\nMSG_501_ADDRESS DC    CL13' '\n                DC    C' '\n                DC    26C'-'\nMSG_501_L       EQU   *-MSG_501\n\nMSG_502         DS    0C\nMSG_502_FIRST   DC    CL5' '\n                DC    CL5' '\nMSG_502_CYL     DC    CL5' '\n                DC    CL5' '\nMSG_502_TRACKS  DC    CL5' '\nMSG_502_L       EQU   *-MSG_502\n\nEXTENT_HEADING  DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Extent type    Seq#    From          To'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nEXTENT_HEADING_L EQU  *-EXTENT_HEADING\n\nEXTENT_MSG      DS    0C\n                DC    C'         '\nEXTENT_TYPE     DC    CL2' '\n                DC    C'     '\nEXTENT_SEQUENCE DS    CL3' '\n                DC    CL2' '\nEXTENT_LOW_CC   DC    CL4' '\n                DC    C'-'\nEXTENT_LOW_HH   DC    CL4' '\n                DC    CL5' '\nEXTENT_HIGH_CC  DC    CL4' '\n                DC    C'-'\nEXTENT_HIGH_HH  DC    CL4' '\nEXTENT_MSG_L    EQU   *-EXTENT_MSG\n\nOSVRAWEND       EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVRAW_WORK         DSECT\n                    COPY   DXDPREF\n\nWORK_OPTS           DS     A\n\nWORK_SAVE_R6        DS     F\nWORK_SAVE_R7        DS     F\n\nWORK_VDATA1_ADDR    DS     A\nWORK_VDATA1_LENGTH  DS     F\nWORK_VDATA2_ADDR    DS     A\nWORK_VDATA2_LENGTH  DS     F\n\nWORK_VDEPTH         DS     F\nWORK_VWIDTH         DS     F\n\nWORK_RC             DS     H\nWORK_LINES          DS     H\nWORK_HALFWORD       DS     H\n\nWORK_WORK_1         DS     CL10\nWORK_WORK_2         DS     CL100\n\nWORK_DISK_ADDRESS   DS     0C\nWORK_CYLINDER       DS     CL4\nWORK_HYPEN_1        DS     C\nWORK_HEAD           DS     CL4\nWORK_HYPEN_2        DS     C\nWORK_RECORD         DS     CL3\n\nWORK_FLAGS          DS     X\n$LINE_CMD           EQU    X'80'\n\n                    DSPCREQ  DSECT=NO\nOSVRAW_WORK         DSECT\nOSVRAW_WORK_L       EQU    *-OSVRAW_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECFM_DSECT       DSECT\nRECFM_CODE        DS   X\nRECFM_DESCRIPTION DS   CL4\nRECFM_DSECT_L     EQU  *-RECFM_DSECT\n\nDSORG_DSECT       DSECT\nDSORG_CODE        DS   XL2\nDSORG_OPTS        DS   AL4\nDSORG_DESCRIPTION DS   CL4\nDSORG_DSECT_L     EQU  *-DSORG_DSECT\n\nFLAG1_DSECT       DSECT\nFLAG1_CODE        DS   X\nFLAG1_DESCRIPTION DS   CL20\nFLAG1_DSECT_L     EQU  *-FLAG1_DSECT\n\n\nSMS_DSECT         DSECT\nSMS_CODE          DS   X\nSMS_DESCRIPTION   DS   CL20\nSMS_DSECT_L       EQU  *-SMS_DSECT\n\nDSIND_DSECT       DSECT\nDSIND_CODE        DS   X\nDSIND_DESCRIPTION DS   CL40\nDSIND_DSECT_L     EQU  *-DSIND_DSECT\n\nOPTCD_DSECT       DSECT\nOPTCD_CODE        DS   X\nOPTCD_DESCRIPTION DS   CL40\nOPTCD_DSECT_L     EQU  *-OPTCD_DSECT\n\nSCXTF_DSECT       DSECT\nSCXTF_CODE        DS   X\nSCXTF_DESCRIPTION DS   CL20\nSCXTF_DSECT_L     EQU  *-SCXTF_DSECT\n\nSCAL1_DSECT       DSECT\nSCAL1_CODE        DS   X\nSCAL1_DESCRIPTION DS   CL20\nSCAL1_DSECT_L     EQU  *-SCAL1_DSECT\n\nVTOCI_DSECT       DSECT\nVTOCI_CODE        DS   X\nVTOCI_DESCRIPTION DS   CL40\nVTOCI_DSECT_L     EQU  *-VTOCI_DSECT\n\nSMS_DSECT2        DSECT\nSMS_CODE2         DS   X\nSMS_DESCRIPTION2  DS   CL40\nSMS_DSECT2_L      EQU  *-SMS_DSECT2\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVTOC_DATA DSECT\n          DS     X                    RECORD TYPE\n          DS     CL44                 DSN OR FORMAT NAME\n          IBMMAC VTOC=1\n          ORG    IECSDSL1\n          IBMMAC VTOC=3\n          ORG    DS1FMTID\n          IBMMAC VTOC=4\n          ORG    IECSDSL1\n          IBMMAC VTOC=5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSVRAW\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSVTOC": {"ttr": 21006, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x000\\x01\\t(o\\x01\\x10\\x04\\x1f\\x11#\\x07Q\\x076\\x00\\xf9\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-02-10T11:23:30", "lines": 1873, "newlines": 1846, "modlines": 249, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: OSVTOC                                                *\n*                                                                     *\n*  Build main body for VTOC display                                   *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  Data in the data space was built by OSRDVTOC.  Each record in the  *\n*  data space is prefixed with a 44 byte \"data set name\".  The        *\n*  format-3, format-4, and format-5 records to not have a printable   *\n*  \"data set name\" in the first 44 characters as the format-1's do.   *\n*  The 44 byte prefix for format-1's is the data set name so in the   *\n*  case of format-1's, the DSN is duplicated.  For format-3,          *\n*  format-4, and format-5 the prefix is \"FORMAT x AT CCHHR\" where     *\n*  x is 3, 4, or 5 and CCHHR is the disk address of the record        *\n*  within the VTOC.  This allows the format-3, format-4, and          *\n*  format-5 records to be sorted by \"data set name\".                  *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVTOC   CSECT\nOSVTOC   AMODE 31\nOSVTOC   RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         J     INIT0000\nMODID    DC    CL8'OSVTOC'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         DC    A(OSVTOCEND-OSVTOC)\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING DS1FMTID,SESS_DSCB\n         STM   R14,R12,12(R13)                SAVE REGS\n         LARL  R10,BASED_AREA                 BASED AREA ADDR\n         USING BASED_AREA,R10\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         JNE   INIT0010\n         ICM   R1,15,SESS_DXD_ADDR\n         JNZ   ERR0120\n         LA    R0,OSVTOC_DXD_L\n         BRAS  R9,GETMAIN1\n         ST    R1,SESS_DXD_ADDR\n         ST    R13,4(,R1)                     SAVE R13\n         ST    R1,8(,R13)                     CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING OSVTOC_WORK,R13                DEFINE WORK AREA BASE\n         LARL  R1,MODID\n         MVC   DXD_CSECT,0(R1)\n         ITRACE ID=ENTRY1\n         L     R5,COMM_OSSPFD\n         USING OSSPFD,R5\n         MVC   SPF_VOLSER,SESS_VOLSER\n         MVC   SPF_RECFM,COMM_BLANKS          CLEAR RECORD FORMAT\n         MVC   SPF_DSORG,VTOC\n         MVI   COMM_MSG_ID,0                  FORCE BYTE 1 TO ZERO\n\n         MVC   DXD_COMPRESS(COMPRESS_L),COMPRESS\n\n         NI    SPF_FLAGS,255-$SPF_VPUT\n         MVC   DSPCREQ_RECORD_NBR,F1\n         MVC   DXD_VOLLIST_NBR,H1\n         MVC   DXD_VOLLIST_UCB,SESS_UCBTYP\n         MVC   DXD_VOLLIST_VOL,SESS_VOLSER\n         XC    DXD_VOLLIST_SEQ,DXD_VOLLIST_SEQ\n         LA    R0,DATASPACE_1\n         ST    R0,DSPCREQ_DATASPACE\n         MVC   SESS_DISP_PANEL,VTOC_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         LA    R1,SESS_DISP_PANEL\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,DXD_VDATA1_LENGTH           SAVE LENGTH\n         ST    R1,DXD_VDATA1_ADDR             SAVE ADDRESS\n         MVC   DXD_VWIDTH,SPF_VWIDTH\n         MVC   DXD_VDEPTH,SPF_VDEPTH\n         LA    R1,SESS_DISP_PANEL\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15\n         ST    R0,DXD_VDATA2_LENGTH           SAVE LENGTH\n         ST    R1,DXD_VDATA2_ADDR             SAVE ADDRESS\n         J     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ICM   R15,15,SESS_DXD_ADDR\n         JZ    ERR0140\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2\n         XC    DXD_RC,DXD_RC\n         L     R5,COMM_OSSPFD\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         JE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         JE    CLEAN000\n         CLI   COMM_SESS_FUNC,$SESS_SWITCH    SESSION SWITCH?\n         JNE   MAIN0000                       NO\n         L     R7,DXD_LINES_REMAINING         RESET LINES REMAINING\n         L     R8,DXD_CURRENT_VDATA1_ADDR     RESET VDATA1 ADDRESS\n         ITRACE ID=RESUME,                                             +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\nMAIN0010 DS    0H\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC VTOC DATA?\n         JNE   MAIN0020                       NO\n         BRAS  R14,SORT0000                   SORT THE DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Establish the first VTOC record to be displayed                *\n*      Build the heading                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\nMAIN0030 DS    0H\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DSPCREQ_RECORD_NBR\n         MVC   SPF_RECORD_FROM,DSPCREQ_RECORD_NBR\n         ITRACE ID=OSDSCB\n         L     R15,COMM_V_OSDSCB              OSDSCB ENTRY POINT\n         BALR  R14,R15                        FORMAT THE DSCB INFO\n\n         L     R0,DXD_VDATA1_ADDR             VDATA ADDRESS\n         L     R1,DXD_VDATA1_LENGTH           VDATA LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE VDATA\n\n         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC VTOC DATA?\n         JNE   ERR0090                        NO\n\n         ITRACE ID=BUILD\n         L     R8,DXD_VDATA1_ADDR             BUFFER ADDRESS\n         L     R7,DXD_VDEPTH                  NUMBER OF LINES AVAILABLE\n         MVC   0(HEADING_01_L,R8),HEADING_01  COPY HEADING\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         MVC   DXD_LINES,H1                   INITIALIZE LINES BUILT\n         BCTR  R7,R0\n* ------------------------------------------------------------------- *\n*        \"Retrieve\" the data and build the body of the SPF panel      *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         CLC   DSPCREQ_RECORD_NBR,SESS_FORMAT1S\n         JH    MAIN0060                       END OF RECORDS REACHED\n         ITRACE ID=GET_RECD,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(SESS_FORMAT1S,4)\n         LA    R1,DXD_FORMAT_1\n         ST    R1,DSPCREQ_RECORD_ADDR         I/O AREA ADDRESS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=DSPC_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED\n         JE    MAIN0050                       NOT STORED\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   ERR0110                        OTHER ERROR?\n         ITRACE ID=RECORD,                    YES                      +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         CLI   DS1FMTID,C'1'                  FORMAT-1?\n         JNE   MAIN0050                       NO\n         BRAS  R6,FMT10000                    BUILD BASIC STUFF\n         L     R1,DSPCREQ_RECORD_NBR          VTOC RECORD NUMBER\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE UPDATED RECORD NBR\n         LH    R1,DXD_LINES                   NBR OF LINES BUILT\n         LA    R1,1(,R1)                      PLUS 1\n         STH   R1,DXD_LINES                   SAVE TOTAL\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         BRCT  R7,MAIN0040\n         J     MAIN0060                       SCREEN IS FULL\nMAIN0050 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          VTOC RECORD NUMBER\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE UPDATED RECORD NBR\n         J     MAIN0040                       PROCESS NEXT RECORD\n* ------------------------------------------------------------------- *\n*        Display the panel                                            *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,VTOC_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA1_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA1_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        LINK TO OSDISP\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS\n         JNE   MAIN0620                       NEW FORMAT SELECTED\n         CLI   COMM_SESS_FUNC,0               SESSION CHANGE?\n         JNE   MAIN0620                       YES\n         OC    SESS_RC,SESS_RC                DISPLAY RC=0\n         JZ    MAIN0070                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE\n         J     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Process commands                                              *\n*                                                                     *\n*       Check for a line command first                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=CMDS\n         L     R8,DXD_VDATA1_ADDR             DYNAMIC AREA ADDRESS\n         USING MSG01,R8                       DEFINE BASE\n         SR    R7,R7\n         ICM   R7,3,DXD_LINES                 NUMBER OF LINES BUILT\n         JZ    MAIN0110                       NONE\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         NI    DXD_FLAGS,255-$LINE_CMD        RESET FLAG\n         J     MAIN0100                       SKIP HEADING\nMAIN0080 DS    0H\n         OI    MSG01_SELECT,C' '              FORCE TO UPPER CASE\n         ITRACE ID=LINE_CMD,                                           +\n               DATA1=(MSG01_SELECT,1),                                 +\n               DATA2=MSG01_DSN\n         CLI   MSG01_SELECT,C' '              BLANK?\n         JE    MAIN0090                       YES\n         MVC   MSG01_MSG,COMM_BLANKS          RESET MESSAGE\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R1,MSG01_SELECT                COMMAND ADDRESS\n         ST    R1,SESS_COMMAND_ADDRESS        SET ADDRESS\n         MVC   SESS_COMMAND_LENGTH,H1         FORCE LENGTH TO 1\n         LA    R0,LINE_COMMANDS               LIST OF COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         ITRACE ID=X_OSCMD,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                            BRANCH TO COMMAND\n         MVI   COMM_MSG_ID+1,1                SET MESSAGE NUMBER\n         J     ERR0100\nMAIN0090 DS    0H\n         L     R1,DSPCREQ_RECORD_NBR          RECORD NUMBER\n         A     R1,F1                          PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR          SAVE RECORD NUMBER\nMAIN0100 DS    0H\n         A     R8,DXD_VWIDTH\n         BRCT  R7,MAIN0080\n         DROP  R8\n         TM    DXD_FLAGS,$LINE_CMD            ANY LINE COMMANDS?\n         JO    MAIN0060                       YES\n* ------------------------------------------------------------------- *\n*       Check for command line (primary) command                      *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         CLC   SPF_ZCMD,COMM_BLANKS           ALL BLANK?\n         JE    MAIN0120                       YES\n         ITRACE ID=PRI_CMD,                                            +\n               DATA1=SPF_ZCMD+00,                                      +\n               DATA2=SPF_ZCMD+08\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,COMM_OPERANDS_NBR         NUMBER OF OPERANDS\n         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS\n         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH\n         LA    R0,PRIMARY_COMMANDS            LIST OF COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                        SEARCH COMMANDS\n         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND\n         BOR   R15                            BRANCH TO COMMAND\n         MVI   COMM_MSG_ID+1,2                SET MESSAGE NUMBER\n         J     ERR0100\n* ------------------------------------------------------------------- *\n*       No commands so check for scroll                               *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         L     R1,SPF_ZSCROLLN\n         ST    R1,SESS_HORIZONTAL_SCROLL\n         BCTR  R1,0\n         ST    R1,SESS_VERTICAL_SCROLL\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         JE    MAIN0210                       YES\n         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?\n         JE    MAIN0150                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         JE    MAIN0200                       YES\n         CLI   SPF_ZVERB,C'U'                 SCROLL UP?\n         JE    MAIN0130                       YES\n         J     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                     MAX?\n         JE    MAIN0200                              YES\n         L     R1,SESS_VERTICAL_SCROLL               NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   1ST DISPLAYED\n         SR    R2,R1                                 MINUS SCROLL\n         CH    R2,H1                                 LESS THAN 1?\n         JNL   MAIN0140                              NO\n         LH    R2,H1                                 FORCE 1ST RECORD\nMAIN0140 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   CHANGE 1ST RCD NBR\n         J     MAIN0020                              REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*        SCROLL DOWN                                                  *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                     MAX?\n         JE    MAIN0210                              YES\n         L     R1,SESS_VERTICAL_SCROLL               NUMBER TO SCROLL\n         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   1ST DISPLAYED\n         AR    R2,R1                                 PLUS SCROLL\n         C     R2,SESS_FORMAT1S                      BEYOND LAST FMT-1?\n         JH    MAIN0160                              YES\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   CHANGE 1ST REC NBR\n         J     MAIN0020                              REBUILD EVERYTHING\nMAIN0160 DS    0H\n         L     R2,SESS_FORMAT1S                      NBR OF FORMAT-1'S\n         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   MINUS 1ST ON DISP\n         C     R2,DXD_VDEPTH                         MORE THAN DEPTH?\n         JNH   MAIN0020                              NO.. STAY PUT\n         L     R2,SESS_FORMAT1S                      HIGHEST STORED\n         S     R2,DXD_VDEPTH                         MINUS 1 SCREEN\n         A     R2,F2                                 PLUS 2\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   SET 1ST TO DISPLAY\n         J     MAIN0020                              REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=TOP\n         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD\n         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1   SET TO RECORD 1\n         XC    DXD_FIND_NBR,DXD_FIND_NBR\n         J     MAIN0020                              REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0210 DS    0H\n         ITRACE ID=BOTTOM\n         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD\n         L     R2,SESS_FORMAT1S                      HIGHEST RECORD\n         S     R2,DXD_VDEPTH                         MINUS DEPTH\n         A     R2,F2                                 PLUS 2\n         CH    R2,H1                                 STILL HAVE 1?\n         JNL   MAIN0220                              YES\n         LH    R2,H1                                 FORCE RECORD 1\nMAIN0220 DS    0H\n         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   CHANGE 1ST RCD NBR\n         J     MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Detail info.                                                 *\n*                                                                     *\n*        I did NOT include PDS directory block information.           *\n*        Directory block info requires reading the PDS(/E).           *\n*        The user may not have RACF authorization.                    *\n*                                                                     *\n*                                                                     *\n*        The main data display uses an SPF dynamic area.              *\n*        This will also use a dynamic area.  To allow the user to     *\n*        enter multiple line commands, the current VDATA buffer       *\n*        must not be overwritten.  So first save the current VDATA    *\n*        buffer address and length and then acquire a second VDATA    *\n*        buffer.                                                      *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         USING MSG01,R8\n         ITRACE ID=INFO,                                               +\n               DATA1=MSG01_DSN+0,                                      +\n               DATA2=MSG01_DSN+8\n         DROP  R8\n         ST    R7,DXD_LINES_REMAINING\n         ST    R8,DXD_CURRENT_VDATA1_ADDR\n         L     R0,DXD_VDATA2_ADDR\n         L     R1,DXD_VDATA2_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE VDATA\n         ITRACE ID=FIND_DSN\n         USING MSG01,R8\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         LA    R1,DXD_FORMAT_1\n         ST    R1,DSPCREQ_RECORD_ADDR         I/O AREA ADDRESS\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_DSN_S\n         MVC   DSPCREQ_DSN,MSG01_DSN\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         DROP  R8\n         CLI   DSPCREQ_RC,$DSPCREQ_OK         SUCCESSFUL?\n         JNE   ERR0110\n\n         L     R8,DXD_VDATA2_ADDR             BUFFER ADDRESS\n         L     R7,SPF_VDEPTH                  NUMBER OF LINES\n         MVC   0(HEADING_01_L,R8),HEADING_01\n         A     R8,SPF_VWIDTH\n         BRAS  R6,FMT10000                    BUILD LINE 1\n         BCTR  R7,0\n\n         A     R8,SPF_VWIDTH\n         MVC   0(MSG02_L,R8),MSG02            COPY MESSAGE\n         USING MSG02,R8                       DEFINE BASE\n         SR    R1,R1\n         ICM   R1,3,DS1VOLSQ                  VOLUME SEQUENCE NBR\n         CVD   R1,COMM_DWORD\n         ED    MSG02_VOL_SEQ,COMM_DWORD+3     EDIT VOL SEQ\n         TM    DS1RECFM,DS1RECFU              UNDEFINED?\n         JO    MAIN0310\n         TM    DS1RECFM,DS1RECFV              VARIABLE?\n         JO    MAIN0320\n         TM    DS1RECFM,DS1RECFF              FIXED?\n         JO    MAIN0330\n         MVC   MSG02_RECFM,=C'????'           UNKNOWN\n         J     MAIN0370\nMAIN0310 DS    0H\n         MVI   MSG02_RECFM,C'U'               UNDEFINE RECORD FORMAT\n         J     MAIN0370\nMAIN0320 DS    0H\n         MVI   MSG02_RECFM,C'V'               VARIABLE LENGTH RECORDS\n         J     MAIN0340\nMAIN0330 DS    0H\n         MVI   MSG02_RECFM,C'F'               FIXED LENGTH RECORDS\nMAIN0340 DS    0H\n         TM    DS1RECFM,DS1RECFB              BLOCKED?\n         JNO   MAIN0350                       NO\n         MVI   MSG02_RECFM+1,C'B'\nMAIN0350 DS    0H\n         TM    DS1RECFM,DS1RECFA              ASA CARRIAGE CONTROL?\n         JO    MAIN0360\n         TM    DS1RECFM,DS1RECMC              MACHINE CARRIAGE CONTROL?\n         JNO   MAIN0370\n         MVI   MSG02_RECFM+2,C'A'\n         J     MAIN0370\nMAIN0360 DS    0H\n         MVI   MSG02_RECFM+2,C'M'\nMAIN0370 DS    0H\n         SR    R1,R1\n         ICM   R1,3,DS1LRECL                  RECORD SIZE (LRECL)\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG02_LRECL,COMM_DWORD+5       EDIT LRECL\n         ICM   R1,3,DS1BLKL                   BLOCK SIZE\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG02_BLKSI,COMM_DWORD+5       EDIT BLOCK SIZE\n         ITRACE ID=DSINFO\n         MVI   DSINFO_OPTIONS,0               SET OPTIONS (NONE)\n         MVC   DSINFO_DSN,DS1DSNAM            COPY DSN\n         LA    R1,DSINFREQ\n         L     R15,COMM_V_OSDSINFO\n         BALR  R14,R15                        CALL OSDSINFO\n         ITRACE ID=INFO_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        CATALOGED?\n         JNZ   MAIN0380                       NO\n         CLC   DSINFO_VOLSER,SESS_VOLSER      CATALOGED ON THIS VOLUME?\n         JNE   MAIN0380                       NO\n         MVC   MSG02_CATALOGED,=C'YES'        CATALOGED ON THIS VOLUME\n         DROP  R8\nMAIN0380 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R7,0\n\n         MVC   0(MSG03_L,R8),MSG03\n         USING MSG03,R8                       DEFINE BASE\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,DS1RKP                    KEY POSITION\n         CVD   R1,COMM_DWORD\n         ED    MSG03_RKP,COMM_DWORD+5         EDIT KEY POSITION\n         SR    R1,R1\n         IC    R1,DS1KEYL                     KEY LENGTH\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG03_KEYLEN,COMM_DWORD+6      EDIT KEY LENGTH\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R7,0\n\n         MVC   0(MSG04_L,R8),MSG04            COPY MESSAGE\n         USING MSG04,R8                       DEFINE BASE\n         UNPK  MSG04_SMS(3),DS1SMSFG(2)       UNPACK SMS FLAG(S)\n         TR    MSG04_SMS,COMM_HEXCHAR         TRANSLATE\n         MVI   MSG04_SMS+2,C' '               RESTORE BLANK\n         LA    R1,MSG04_FLAGS\n         TM    DS1SMSFG,DS1SMSDS              SMS MANAGED?\n         JNO   MAIN0390                       NO\n         MVC   0(L'SMS,R1),SMS                INDICATE SMS\n         LA    R1,L'SMS+3(R1)\nMAIN0390 DS    0H\n         TM    DS1SMSFG,DS1SMSUC              NO BCS?\n         JNO   MAIN0400\n         MVC   0(L'NOBCS,R1),NOBCS            INDICATE NO BCS\n         LA    R1,L'NOBCS+3(R1)\nMAIN0400 DS    0H\n         TM    DS1SMSFG,DS1REBLK              REBLOCK(ABLE)?\n         JNO   MAIN0410                       NO\n         MVC   0(L'REBLOCK,R1),REBLOCK        INDICATE REBLOCKABLE\n         LA    R1,L'REBLOCK+3(R1)\nMAIN0410 DS    0H\n         TM    DS1SMSFG,DS1CRSDB              DADSM CREATE BLOCK SIZE?\n         JNO   MAIN0420                       NO\n         MVC   0(L'DADSM_BLOCKSIZE,R1),DADSM_BLOCKSIZE\n         LA    R1,L'DADSM_BLOCKSIZE+3(R1)\nMAIN0420 DS    0H\n         TM    DS1SMSFG,DS1DSAE               EXTENDED ATTRIBUTES?\n         JNO   MAIN0450                       NO\n         MVC   0(L'EXTENDED,R1),EXTENDED      EXTENDED ATTRIBUTES\n         LA    R1,L'EXTENDED+3(R1)\nMAIN0450 DS    0H\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n\n         MVC   0(MSG05_L,R8),MSG05            COPY MESSAGE\n         USING MSG05,R8                       DEFINE BASE\n         UNPK  MSG05_INDICATORS(3),DS1DSIND(2)\n         TR    MSG05_INDICATORS,COMM_HEXCHAR  TRANSLATE\n         MVI   MSG05_INDICATORS+2,C' '        RESTORE BLANK\n         LA    R1,MSG05_FLAGS\n         TM    DS1DSIND,DS1IND80              LAST VOLUME?\n         JNO   MAIN0460                       NO\n         MVC   0(L'LAST,R1),LAST              INDICATE LAST\n         LA    R1,L'LAST+3(R1)\nMAIN0460 DS    0H\n         TM    DS1DSIND,DS1IND40              RACF DEFINED?\n         JNO   MAIN0470                       NO\n         MVC   0(L'RACF,R1),RACF              INDICATE RACF PROTECTED\n         LA    R1,L'RACF+3(R1)\nMAIN0470 DS    0H\n         TM    DS1DSIND,DS1SECTY              READ & WRITE PROTECTED?\n         JNO   MAIN0480                       NO\n         MVC   0(L'PASSRDWRT,R1),PASSRDWRT    INDICATE PROTECTED\n         LA    R1,L'PASSRDWRT+3(R1)\nMAIN0480 DS    0H\n         TM    DS1DSIND,DS1WRSEC              WRITE PROTECTED?\n         JNO   MAIN0490                       NO\n         MVC   0(L'PASSWRT,R1),PASSWRT        INDICATE WRITE PROTECTED\n         LA    R1,L'PASSWRT+3(R1)\nMAIN0490 DS    0H\n         TM    DS1DSIND,DS1IND08              MODIFIED SINCE RECALL?\n         JNO   MAIN0500                       NO\n         MVC   0(L'MODIFIED,R1),MODIFIED      INDICATE MODIFIED\nMAIN0500 DS    0H\n         TM    DS1DSIND,DS1CHKPT              SECURE CHECKPOINT?\n         JNO   MAIN0510                       NO\n         MVC   0(L'CHECKPOINT,R1),CHECKPOINT\nMAIN0510 DS    0H\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n\n         MVC   0(MSG06_L,R8),MSG06            COPY MESSAGE\n         USING MSG06,R8                       DEFINE BASE\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,DS1CREDT                    YEAR CREATED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG06_CREATE(2),DXD_WORK_1+4\n         MVI   MSG06_CREATE+2,C'.'\n         ICM   R1,3,DS1CREDT+1                DAY CREATED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG06_CREATE+3(3),DXD_WORK_1+3\n\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,DS1EXPDT                    YEAR EXPIRES\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG06_EXPIRE(2),DXD_WORK_1+4\n         MVI   MSG06_EXPIRE+2,C'.'\n         ICM   R1,3,DS1EXPDT+1                DAY EXPIRES\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG06_EXPIRE+3(3),DXD_WORK_1+3\n\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,DS1REFD                     YEAR REFERENCED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG06_REFERENCE(2),DXD_WORK_1+4\n         MVI   MSG06_REFERENCE+2,C'.'\n         ICM   R1,3,DS1REFD+1                 DAY REFERENCED\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5\n         MVC   MSG06_REFERENCE+3(3),DXD_WORK_1+3\n         DROP  R8\n\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R7,0\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         MVC   0(MSG09_L,R8),MSG09\n         USING MSG09,R8\n         SR    R0,R0                          CLEAR REGISTER\n         ICM   R0,3,DS1LSTAR                  LAST USED TRACK\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG09_TRACK,COMM_DWORD+5\n         SR    R0,R0\n         IC    R0,DS1LSTAR+2                  LAST USED RECORD\n         CVD   R0,COMM_DWORD\n         ED    MSG09_RECORD,COMM_DWORD+6\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n         MVC   0(HEADING_02_L,R8),HEADING_02\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n         MVC   0(HEADING_03_L,R8),HEADING_03\n         A     R8,SPF_VWIDTH\n         BCTR  R7,0\n         LA    R1,DS1EXT1\n         USING EXTENT,R1\n         LA    R2,3\n         ITRACE ID=FMT1XTNT,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         BRAS  R14,XTNT0100\n         OC    DS1PTRDS,DS1PTRDS\n         JZ    MAIN0550\n         MVC   DXD_SAVE_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVC   DSPCREQ_CCHHR,DS1PTRDS\nMAIN0530 DS    0H\n         ITRACE ID=RD_F3_1,                                            +\n               DATA1=(DSPCREQ_CCHHR,5),                                +\n               DATA2=(DSPCREQ_RECORD_ADDR,4)\n         LA    R1,DXD_FORMAT_3\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_CCHHR\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=FMT3_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   MAIN0060\n         LA    R1,DS3EXT1\n         LA    R2,4\n         ITRACE ID=FMT3XNT1,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         BRAS  R14,XTNT0100\n         LA    R1,DS3ADEXT\n         LA    R2,9\n         ITRACE ID=FMT3XNT2,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         BRAS  R14,XTNT0100\n         OC    DS3PTRDS,DS3PTRDS\n         JZ    MAIN0540\n         MVC   DSPCREQ_CCHHR,DS3PTRDS\n         J     MAIN0530\nMAIN0540 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DXD_SAVE_RECORD_NBR\n         LA    R1,DXD_FORMAT_1\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\n* ------------------------------------------------------------------- *\n*        Detail info has been built.  Display it.                     *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         MVC   SESS_DISP_PANEL,VTOC_PANEL\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA2_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA2_LENGTH\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=SESS_RC\n* ------------------------------------------------------------------- *\n*           Restore main display VDATA info                           *\n* ------------------------------------------------------------------- *\n         L     R7,DXD_LINES_REMAINING\n         L     R8,DXD_CURRENT_VDATA1_ADDR\n* ------------------------------------------------------------------- *\n*           Reset the selection and highlight this row                *\n* ------------------------------------------------------------------- *\n         USING MSG01,R8\n         MVI   MSG01_SELECT,C' '\n         MVC   MSG01_MSG(L'INFO),INFO\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         DROP  R8\n\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Process line \"S\" or \"B\" command                               *\n*                                                                     *\n*       .  Save current 'per dataset' (the VTOC info)                 *\n*       .  Allocate the data set (on this volume)                     *\n*       .  Determine the data set's DSORG                             *\n*       .  Read the data set or PDS (or PDS/E) directory              *\n*       .  Display the data                                           *\n*       .  DELETE the function if necessary                           *\n*       .  FREEMAIN the I/O area if necessary                         *\n*       .  Delete the data space                                      *\n*       .  Free (unallocate) the data set                             *\n*       .  Restore previous 'per data set' data                       *\n*       .  FREEMAIN saved 'per data set' data                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         USING MSG01,R8\n         ITRACE ID=BROWSE,                                             +\n               DATA1=MSG01_DSN+0,                                      +\n               DATA2=MSG01_DSN+8\n         CLI   MSG01_DSORG,C'H'                 IS THIS AN HFS?\n         JE    ERR0030                          YES.. NOT ALLOWED\n         ITRACE ID=NEW_SESS\n         LA    R0,SESSION_L\n         BRAS  R9,GETMAIN2\n         LR    R3,R1                            SAVE ADDRESS\nNEW      USING SESSION,R3\n         ST    R3,COMM_NEW_SESSION\n         LR    R0,R3\n         LA    R1,SESSION_L\n         LR    R14,R11                          CURRENT SESSION ADDR\n         LR    R15,R1                           COPY LENGTH\n         MVCL  R0,R14                           COPY SESSION BLOCK\n         L     R1,SESS_NEXT                     NEXT ON CHAIN\nNEXT     USING SESSION,R1\n         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK\n         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK\n         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT\n         LTR   R1,R1                            'NEXT' BLOCK?\n         JZ    MAIN0610                         NO\n         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK\n         DROP  NEXT\nMAIN0610 DS    0H\n         MVI   MSG01_SELECT,C' '                RESET THE SELECTION\n         MVI   NEW.SESS_FORMAT_FLAGS,0\n         MVI   NEW.SESS_DATA_TYPE,0             DATA TYPE NOT KNOWN YET\n         MVI   NEW.SESS_DATASET_FLAGS,0         RESET DATA SET FLAGS\n         XC    NEW.SESS_DXD_ADDR,NEW.SESS_DXD_ADDR\n         XC    NEW.SESS_DXD_LENGTH,NEW.SESS_DXD_LENGTH\n         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND\n         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH\n         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS\n         MVC   NEW.SESS_DATA_LOADER,COMM_BLANKS\n         MVC   NEW.SESS_DSN,MSG01_DSN\n         MVC   NEW.SESS_MEMBER,COMM_BLANKS\n         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR\n         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_LENGTH\n         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR\n         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH\n         MVI   SESS_KEYWORD_FLAGS,$KEYWORD_DSN+$KEYWORD_VOL\n         MVI   SESS_KEYWORD_FLAGS_2,0\n         L     R0,COMM_IO_SIZE                  I/O AREA SIZE\n         BRAS  R9,GETMAIN1\n         ST    R1,NEW.SESS_IO_AREA              SAVE ADDRESS\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\n         MVC   NEW.DATASPACE_1_FIRST_RECORD,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         MVC   NEW.DATASPACE_1_DISPLAY_FIRST_COLUMN,F1\n         XC    NEW.DATASPACE_1_ALET,NEW.DATASPACE_1_ALET\n         XC    NEW.DATASPACE_1_TOKEN,NEW.DATASPACE_1_ALET\n         MVC   NEW.DATASPACE_1_NAME,COMM_BLANKS\n         MVI   COMM_SESS_FUNC,$SESS_SWITCH\nMAIN0620 DS    0H\n         ST    R7,DXD_LINES_REMAINING\n         ST    R8,DXD_CURRENT_VDATA1_ADDR\n         ITRACE ID=CKPT,                                               +\n               RDATA1=R7,                                              +\n               RDATA2=R8\n         DROP  R8\n         J     EXIT0000                         EXIT\n* ------------------------------------------------------------------- *\n*        Process C(atalog) line coummand                              *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         ITRACE ID=CATALOG\nMAIN0710 DS    0H\n         MVC   DXD_CAMLST(CAT_CAMLST_L),CAT_CAMLST_I\n         USING MSG01,R8\n         LA    R1,MSG01_DSN\n         ST    R1,DXD_CAMLST+4\n         LA    R1,DXD_VOLLIST\n         ST    R1,DXD_CAMLST+12\n         CATALOG DXD_CAMLST\n         LTR   R15,R15                          SUCCESSFUL?\n         JNZ   ERR1010                          NO\n         MVC   MSG01_MSG(L'CATALOGED),CATALOGED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         MVI   MSG01_SELECT,C' '\n         DROP  R8\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*        Process U(ncatalog) line command                             *\n* ------------------------------------------------------------------- *\nMAIN0750 DS    0H\n         ITRACE ID=UNCAT\n         MVC   DXD_CAMLST(UNCAT_CAMLST_L),UNCAT_CAMLST_I\n         USING MSG01,R8\n         LA    R1,MSG01_DSN\n         ST    R1,DXD_CAMLST+4\n         CATALOG DXD_CAMLST\n         LTR   R15,R15                        SUCCESSFUL?\n         JNZ   ERR1020                        NO\n         MVC   MSG01_MSG(L'UNCATED),UNCATED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         MVI   MSG01_SELECT,C' '\n         DROP  R8\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*        Process R(ename) line command                                *\n* ------------------------------------------------------------------- *\nMAIN0800 DS    0H\n         ITRACE ID=RENAME\nMAIN0810 DS    0H\n         USING MSG01,R8\n         MVC   SPF_DSN,MSG01_DSN              COPY DATA SET NAME\n         MVC   SESS_DISP_PANEL,PANEL_4        COPY PANEL NAME\n         L     R15,COMM_V_OSDISP              OSDISP ENTRY\n         BALR  R14,R15                        LINK TO OSDISP\n         OC    SESS_RC,SESS_RC                RC=0?\n         JNZ   MAIN0830                       NO.. ABORT RENAME\n         CLC   SPF_NEW_DSN,COMM_BLANKS        ANYTHING IN NEW NAME?\n         JE    MAIN0810                       NO.. ASK AGAIN\n         CLC   SPF_NEW_DSN,MSG01_DSN          SET NEW NAME TO OLD\n         JE    MAIN0810\n         MVC   DXD_CAMLST(RENAME_CAMLST_L),RENAME_CAMLST_i\n         LA    R1,MSG01_DSN\n         ST    R1,DXD_CAMLST+4\n         LA    R1,SPF_NEW_DSN\n         ST    R1,DXD_CAMLST+8\n         LA    R1,DXD_VOLLIST\n         ST    R1,DXD_CAMLST+12\n         SR    R0,R0\n         RENAME  DXD_CAMLST\n         ITRACE ID=RENAMERC,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R0\n         LTR   R15,R15                        SUCCESSFUL?\n         JZ    MAIN0820                       YES\n         LTR   R0,R0                          REASON CODE ZERO?\n         JNZ   ERR1030                        NO\nMAIN0820 DS    0H\n         MVI   MSG01_SELECT,C' '              RESET COMMAND\n         MVC   MSG01_DSN,SPF_NEW_DSN          CHANGE DSN\n         MVC   MSG01_MSG(L'RENAMED),RENAMED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         J     MAIN0090\nMAIN0830 DS    0H\n         MVI   MSG01_SELECT,C' '              RESET COMMAND\n         MVC   MSG01_MSG(L'RENAME_ABORTED),RENAME_ABORTED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         DROP  R8\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*        Process D(elete) line command                                *\n* ------------------------------------------------------------------- *\nMAIN0850 DS    0H\n         ITRACE ID=DELETE\n         USING MSG01,R8                       DEFINE BASE\n         MVC   SPF_DSN,MSG01_DSN              COPY DATASET NAME\n         MVC   SESS_DISP_PANEL,PANEL_9        PANEL TO USE\n         L     R15,COMM_V_OSCNFRM\n         BALR  R14,R15                        CONFIRM DELETION\n         LTR   R15,R15                        ABORTED?\n         JNZ   MAIN0860                       YES\n         CLI   SPF_YES_OR_NO,C'N'             ABORTED?\n         JE    MAIN0860                       YES\n         MVC   DXD_CAMLST(DELETE_CAMLST_L),DELETE_CAMLST_I\n         LA    R1,MSG01_DSN                   DATA SET NAME\n         ST    R1,DXD_CAMLST+4                SET ADDRESS\n         LA    R1,DXD_VOLLIST                 VOLLIST\n         ST    R1,DXD_CAMLST+12               SET ADDRESS\n         L     R0,SESS_UCB                    NOT WELL DOCUMENTED\n         SCRATCH DXD_CAMLST\n         ITRACE ID=SCR_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15\n         JNZ   ERR1040\n         MVI   MSG01_SELECT,C' '              RESET COMMAND\n         MVC   MSG01_MSG(L'DELETED),DELETED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         J     MAIN0090\nMAIN0860 DS    0H\n         ITRACE ID=ABORTED\n         MVI   MSG01_SELECT,C' '              RESET COMMAND\n         MVC   MSG01_MSG(L'DELETE_ABORTED),DELETE_ABORTED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0900 DS    0H\n         ITRACE ID=COMPRESS\n         USING MSG01,R8                       DEFINE BASE\n         CLI   MSG01_DSORG,C'H'               HFS?\n         JE    ERR0030                        YES\n         MVI   DAIR_OPTS,$DAIR_USE_DD         SET OPTIONS\n         ITRACE ID=ALLOC,                                              +\n               DATA1=SYSUT1\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)\n         MVC   DAIR_DD,SYSUT1                 COPY DDNAME\n         MVC   DAIR_DSN,MSG01_DSN             COPY DATA SET NAME\n         MVC   DAIR_MEMBER,COMM_BLANKS        COPY MEMBER NAME\n         MVC   DAIR_VOLSER,SESS_VOLSER        COPY VOLSER\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         ITRACE ID=ALLO_RC,                                            +\n               DATA1=(DAIR_R15,4)\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         ITRACE ID=ALLOC,                                              +\n               DATA1=SYSUT2\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)\n         MVC   DAIR_DD,SYSUT2                 COPY DDNAME\n         MVC   DAIR_DSN,MSG01_DSN             COPY DATA SET NAME\n         MVC   DAIR_MEMBER,COMM_BLANKS        COPY MEMBER NAME\n         MVC   DAIR_VOLSER,SESS_VOLSER        COPY VOLSER\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         ITRACE ID=ALLO_RC,                                            +\n               DATA1=(DAIR_R15,4)\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         ITRACE ID=ALLOC,                                              +\n               DATA1=SYSIN\n         MVI   DAIR_OPTS,$DAIR_DUMMY+$DAIR_USE_DD\n         MVC   DAIR_DD,SYSIN\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        ALLOCATE SYSIN\n         ITRACE ID=ALLO_RC,                                            +\n               DATA1=(DAIR_R15,4),                                     +\n               DATA2=DAIR_DD\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         ITRACE ID=ALLOC,                                              +\n               DATA1=SYSPRINT\n         MVC   DAIR_DD,SYSPRINT\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        ALLOCATE SYSPRINT\n         ITRACE ID=ALLO_RC,                                            +\n               DATA1=(DAIR_R15,4),                                     +\n               DATA2=DAIR_DD\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         ITRACE ID=LINKCOPY\n         LA    R1,DXD_COMPRESS\n         MVC   DXD_LINK(LINK_L),LINK_I\n         BAL   R9,LINK\n         LR    R2,R15                         SAVE IEBCOPY RETURN CODE\n         ITRACE ID=FREE_PRT\n         MVI   DAIR_OPTS,0                    CLEAR OPTIONS\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION (FREE)\n         MVC   DAIR_DD,SYSIN                  COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         MVC   DAIR_DD,SYSPRINT               COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         ITRACE ID=FREE_UT1\n         MVC   DAIR_DD,SYSUT1                 COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         ITRACE ID=FREE_UT2\n         MVC   DAIR_DD,SYSUT2                 COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         JNZ   ERR0020                        NO\n         LR    R2,R15                         IEBCOPY RC=0?\n         JNZ   ERR1050                        NO\n         MVC   MSG01_MSG(L'COMPRESSED),COMPRESSED\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         MVI   MSG01_SELECT,C' '\n         J     MAIN0090                       CONTINUE WITH NEXT CMD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0910 DS    0H\n         ITRACE ID=LISTCMDS\n         MVI   MSG01_SELECT,C' '                RESET COMMAND\n         DROP  R8\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,LINE_COMMANDS                 LIST OF COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                          DISPLAY COMMANDS\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Process F(ind) primary command                               *\n*                                                                     *\n*        . Verify the number of operand(s)                            *\n*        . Find the data set name in the data space                   *\n*        . Make the data set's entry the first on the display         *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=FIND\n         CH    R3,H2                          TWO OPERANDS?\n         JL    MAIN1020                       LESS\n         JNE   ERR0050                        TOO MANY\n         CLC   OPERAND_02_LENGTH,H44          TOO LONG?\n         JH    ERR0060                        YES\n         ICM   R2,15,OPERAND_02_ADDRESS\n         MVC   DSPCREQ_DSN,0(R2)              COPY DATA SET NAME\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         J     MAIN1030\nMAIN1020 DS    0H\n         CLC   DXD_FIND_DSN,COMM_BLANKS       DATA SET NAME PRESENT?\n         JE    ERR0050                        NO\n         MVC   DSPCREQ_RECORD_NBR,DXD_FIND_NBR\n         MVC   DSPCREQ_DSN,DXD_FIND_DSN\nMAIN1030 DS    0H\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_DSN_G\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         CLI   DSPCREQ_RC,$DSPCREQ_OK         LOCATED?\n         JNE   MAIN1040                       NO\n         MVC   DXD_FIND_NBR,DSPCREQ_RECORD_NBR\n         MVC   DXD_FIND_DSN,DSPCREQ_DSN\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         J     MAIN0030                       REBUILD\nMAIN1040 DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         J     MAIN0060                       DISPLAY WITH MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1100 DS    0H\n         ITRACE ID=LISTCMDS\n         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY\n         LA    R0,PRIMARY_COMMANDS\n         ST    R0,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         L     R15,COMM_V_OSCMD\n         BALR  R14,R15                        DISPLAY COMMANDS\n         J     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1200 DS    0H\n         ITRACE ID=REFRESH\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CLEAR       DATA SPACE FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                           CLEAR DATA SPACE\n         MVC   LOADREQ_MODULE,MODULE_OSRDVTOC    MODULE NAME\n         LA    R1,LOADREQ\n         L     R15,COMM_V_OSLOAD\n         BALR  R14,R15                           LOAD OSRDVTOC\n         ICM   R15,15,LOADREQ_EP                 OSRDVTOC ENTRY POINT\n         BALR  R14,R15                           LINK TO OSRDVTOC\n         ITRACE ID=RDVTOCRC,                                           +\n               RDATA1=R15\n         CLC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD\n         JNH   MAIN0020                          DISPLAY\n         J     MAIN0210                          GO TO BOTTOM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT10000 DS    0H\n         MVC   0(MSG01_L,R8),MSG01\n         USING MSG01,R8\n         MVC   MSG01_DSN,DS1DSNAM\n         MVI   MSG01_ATTR_1,$SCREEN_ATTR_INPUT\n         MVI   MSG01_ATTR_2,$SCREEN_ATTR_NORMAL\n         TM    DS1SMSFG,DS1PDSEX              HFS?\n         JO    FMT10020\n         TM    DS1SMSFG,DS1PDSE               PDSE?\n         JO    FMT10010\n         TM    DS1DSORG,DS1DSGIS              ISAM? (*GAD*)\n         JO    FMT10030                       YES\n         TM    DS1DSORG,DS1DSGPS              SEQUENTIAL?\n         JO    FMT10040                       YES\n         TM    DS1DSORG,DS1DSGDA              DIRECT ACCESS?\n         JO    FMT10050                       YES\n         TM    DS1DSORG,DS1DSGPO              PDS?\n         JO    FMT10060                       YES\n         TM    DS1DSORG+1,DS1ACBM             VSAM?\n         JO    FMT10080\n         MVI   MSG01_ATTR_1,$SCREEN_ATTR_NORMAL\n         MVC   MSG01_DSORG,UNKNOWN            UNKNOWN\n         J     FMT10090\nFMT10010 DS    0H\n         MVC   MSG01_DSORG,PDSE\n         J     FMT10070\nFMT10020 DS    0H\n         MVC   MSG01_DSORG,HFS\n         J     FMT10070\nFMT10030 DS    0H\n         MVC   MSG01_DSORG,ISAM\n         J     FMT10070\nFMT10040 DS    0H\n         MVC   MSG01_DSORG,PS\n         J     FMT10070\nFMT10050 DS    0H\n         MVC   MSG01_DSORG,DA\n         J     FMT10070\nFMT10060 DS    0H\n         MVC   MSG01_DSORG,PO\nFMT10070 DS    0H\n         TM    DS1DSORG,DS1DSGU\n         JNO   FMT10090\n         MVI   MSG01_DSORG+4,C'U'\n         J     FMT10090\nFMT10080 DS    0H\n         MVC   MSG01_DSORG,VSAM\nFMT10090 DS    0H\n         XC    DXD_EXTENTS,DXD_EXTENTS\n         XC    DXD_TOTAL_TRACKS,DXD_TOTAL_TRACKS\n         LA    R1,DS1EXT1\n         LA    R2,3\n         BRAS  R14,XTNT0000\n         OC    DS1PTRDS,DS1PTRDS\n         JZ    FMT10120\n         MVC   DXD_SAVE_RECORD_NBR,DSPCREQ_RECORD_NBR\n         MVC   DSPCREQ_CCHHR,DS1PTRDS\nFMT10100 DS    0H\n         LA    R1,DXD_FORMAT_3\n         ST    R1,DSPCREQ_RECORD_ADDR\n         ITRACE ID=RD_F3_2,                                            +\n               DATA1=(DSPCREQ_CCHHR,5),                                +\n               DATA2=(DSPCREQ_RECORD_ADDR,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_CCHHR\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         ITRACE ID=FMT3_RC,                                            +\n               DATA1=(DSPCREQ_RC,1)\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         JNE   MAIN0060\n         LA    R1,DS3EXT1\n         LA    R2,4\n         BRAS  R14,XTNT0000\n         LA    R1,DS3ADEXT\n         LA    R2,9\n         BRAS  R14,XTNT0000\n         OC    DS3PTRDS,DS3PTRDS\n         JZ    FMT10110\n         MVC   DSPCREQ_CCHHR,DS3PTRDS\n         J     FMT10100\nFMT10110 DS    0H\n         MVC   DSPCREQ_RECORD_NBR,DXD_SAVE_RECORD_NBR\n         LA    R1,DXD_FORMAT_1\n         ST    R1,DSPCREQ_RECORD_ADDR\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE\nFMT10120 DS    0H\n         ICM   R1,15,DXD_EXTENTS\n         CVD   R1,COMM_DWORD\n         ED    MSG01_EXTENTS,COMM_DWORD+6\n         ICM   R1,15,DXD_TOTAL_TRACKS\n         CVD   R1,COMM_DWORD\n         ED    MSG01_TRACKS,COMM_DWORD+4\n         TM    DS1DSORG+1,DS1ACBM             VSAM?\n         BOR   R6                             YES.. BYPASS DCB INFO\n         LA    R1,MSG01_DCB_INFO\n         TM    DS1RECFM,DS1RECFU\n         JO    FMT10130\n         TM    DS1RECFM,DS1RECFF\n         JO    FMT10140\n         TM    DS1RECFM,DS1RECFV\n         JO    FMT10150\n         BR    R6                             UNKNOWN.. STOP NOW\nFMT10130 DS    0H\n         MVI   0(R1),C'U'\n         J     FMT10160\nFMT10140 DS    0H\n         MVI   0(R1),C'F'\n         J     FMT10160\nFMT10150 DS    0H\n         MVI   0(R1),C'V'\nFMT10160 DS    0H\n         LA    R1,1(,R1)\nFMT10170 DS    0H\n         TM    DS1RECFM,DS1RECFB\n         JNO   FMT10180\n         MVI   0(R1),C'B'\n         LA    R1,1(,R1)\nFMT10180 DS    0H\n         TM    DS1RECFM,DS1RECFA\n         JO    FMT10190\n         TM    DS1RECFM,DS1RECMC\n         JO    FMT10200\n         J     FMT10220\nFMT10190 DS    0H\n         MVI   0(R1),C'A'\n         J     FMT10210\nFMT10200 DS    0H\n         MVI   0(R1),C'M'\nFMT10210 DS    0H\n         LA    R1,1(,R1)\nFMT10220 DS    0H\n         TM    DS1RECFM,DS1RECFS\n         JNO   FMT10230\n         MVI   0(R1),C'S'\n         LA    R1,1(,R1)\nFMT10230 DS    0H\n         MVI   0(R1),C','\n         MVC   1(6,R1),=X'402020202120'\n         SR    R0,R0\n         ICM   R0,3,DS1LRECL\n         CVD   R0,COMM_DWORD\n         ED    1(6,R1),COMM_DWORD+5\nFMT10240 DS    0H\n         CLI   1(R1),C' '\n         BNER  R6\n         MVC   1(5,R1),2(R1)\n         MVI   6(R1),C' '\n         J     FMT10240\n         DROP  R8\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nXTNT0000 DS    0H\n         ST    R14,DXD_RETURN\nXTNT0010 DS    0H\n         ITRACE ID=EXTENT1,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         USING EXTENT,R1\n         CLI   EXTENT_TYPE,0                  UNUSED EXTENT?\n         JE    XTNT0020                       YES\n         ICM   R0,15,DXD_EXTENTS              NBR OF EXTENTS\n         A     R0,F1                          PLUS 1\n         STCM  R0,15,DXD_EXTENTS              SAVE TOTAL\n         SR    R0,R0\n         SR    R14,R14\n         SR    R15,R15\n         ICM   R14,3,EXTENT_LOW_CYLINDER      STARTING CYLINDER\n         MH    R14,SESS_TRACKS                MULTIPLY BY TRACKS/CYL\n         ICM   R0,3,EXTENT_LOW_TRACK          STARTING TRACK\n         AR    R14,R0                         RELATIVE STARTING TRACK\n         ICM   R15,3,EXTENT_HIGH_CYLINDER     ENDING CYLINDER\n         MH    R15,SESS_TRACKS                MULTIPLY BY TRACKS/CYL\n         ICM   R0,3,EXTENT_HIGH_TRACK         ENDING TRACK\n         AR    R15,R0                         RELATIVE ENDING TRACK\n         SR    R15,R14                        COMPUTE TRACKS MINUS 1\n         A     R15,F1                         ADD 1 BACK\n         A     R15,DXD_TOTAL_TRACKS           PLUS TOTAL UP TO NOW\n         ST    R15,DXD_TOTAL_TRACKS           SAVE TOTAL\nXTNT0020 DS    0H\n         LA    R1,EXTENT_L(,R1)\n         BRCT  R2,XTNT0010\n         L     R14,DXD_RETURN\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nXTNT0100 DS    0H\n         ST    R14,DXD_RETURN\nXTNT0110 DS    0H\n         ITRACE ID=EXTENT2,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         USING EXTENT,R1\n         CLI   EXTENT_TYPE,0                  UNUSED EXTENT?\n         JE    XTNT0120                       YES\n         MVC   0(MSG07_L,R8),MSG07\n         USING MSG07,R8\n         SR    R0,R0\n         UNPK  MSG07_TYPE(3),EXTENT_TYPE(2)   UNPACK TYPE\n         TR    MSG07_TYPE,COMM_HEXCHAR        TRANSLATE IT\n         MVI   MSG07_TYPE+2,C' '\n         IC    R0,EXTENT_SEQUENCE             EXTENT SEQUENCE NBR\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG07_SEQUENCE,COMM_DWORD+6    EDIT IT\n         ICM   R0,3,EXTENT_LOW_CYLINDER       STARTING CYLINDER\n         LR    R14,R0                         COPY TO R14\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG07_LOW_CYL,COMM_DWORD+5     EDIT STARTING CYLINDER\n         MH    R14,SESS_TRACKS                MULTIPLY BY TRACKS/CYL\n         ICM   R0,3,EXTENT_LOW_TRACK          STARTING TRACK\n         AR    R14,R0                         COMPUTE RELATIVE TRACK\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG07_LOW_TRACK,COMM_DWORD+5   EDIT STARTING TRACK\n         ICM   R0,3,EXTENT_HIGH_CYLINDER      ENDING CYLINDER\n         LR    R15,R0                         COPY TO R15\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG07_HIGH_CYL,COMM_DWORD+5    EDIT ENDING CYLINDER\n         MH    R15,SESS_TRACKS                MULTIPLY BY TRACKS/CYL\n         ICM   R0,3,EXTENT_HIGH_TRACK         ENDING TRACK\n         AR    R15,R0                         COMPUTE RELATIVE TRACK\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG07_HIGH_TRACK,COMM_DWORD+5  EDIT ENDING TRACK\n         SR    R15,R14                        COMPUTE NBR OF TRACKS-1\n         LA    R15,1(,R15)                    ADD 1 BACK\n         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL\n         ED    MSG07_TRACKS,COMM_DWORD+4      EDIT NBR OF TRACKS\n         DROP  R8,R1\n         A     R8,SPF_VWIDTH                  NEXT LINE ON SCREEN\n         BRCT  R7,XTNT0120                    MINUS 1 LINE\n         J     MAIN0550                       SCREEN FULL\nXTNT0120 DS    0H\n         LA    R1,EXTENT_L(,R1)               NEXT EXTENT\n         BRCT  R2,XTNT0110                    LOOP\n         L     R14,DXD_RETURN\n         BR    R14                            ALL EXTENTS PROCESSED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSORT0000 DS    0H\n         ST    R14,DXD_RETURN\n         ITRACE ID=SORT\n         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_DSN\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15\n         L     R14,DXD_RETURN\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0020  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         J     EXIT0000                       EXIT\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,13\n         J     ERR0100\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,11\n         MVC   COMM_DWORD(4),DSINFO_ERROR_INFO\n         J     ERR0100                        EXIT\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,3\n         J     ERR0100\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,4\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,5\n         STH   R15,COMM_DWORD                 SAVE RETURN CODE\n         J     ERR0100\nERR0080  DS    0H\n         DC    H'8'\n         DC    C'DISPLAY FAILED'\nERR0090  DS    0H\n         MVI   COMM_MSG_ID+1,12\nERR0100  DS    0H\n         LARL  R1,MODID\n         MVC   COMM_MSG_CSECT,0(R1)\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                        CALL OSMSG\nERR0110  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         J     MAIN0060\nERR0120  DS    0H\n         DC    H'0'\nERR0140  DS    0H\n         DC    H'0'\nERR1010  DS    0H\n         MVI   COMM_MSG_ID+1,6\n         J     ERR1100\nERR1020  DS    0H\n         MVI   COMM_MSG_ID+1,7\n         J     ERR1100\nERR1030  DS    0H\n         MVI   COMM_MSG_ID+1,8\n         J     ERR1100\nERR1040  DS    0H\n         MVI   COMM_MSG_ID+1,9\n         J     ERR1100\nERR1050  DS    0H\n         MVI   COMM_MSG_ID+1,10\nERR1100  DS    0H\n         STH   R15,COMM_DWORD                 SAVE RETURN CODE\n         MVI   COMM_MSG_ID,0                  FORCE BYTE 1 TO ZERO\n         LARL  R1,MODID\n         MVC   COMM_MSG_CSECT,0(R1)\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15               CALL OSMSG\n         USING MSG01,R8\n         MVC   MSG01_MSG,COMM_MSG_1\n         MVI   MSG01_ATTR_3,$SCREEN_ATTR_HIGH\n         DROP  R8\n         J     MAIN0090\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEBUG000 DS    0H\n         ITRACE ID=DEBUG\n         L     R15,COMM_V_OSDEBUG\n         BALR  R14,R15\n         J     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R0,DXD_VDATA1_LENGTH\n         L     R1,DXD_VDATA1_ADDR\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\n         L     R0,DXD_VDATA2_LENGTH\n         L     R1,DXD_VDATA2_ADDR\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH\n         XC    COMM_MAIN_COMMAND_TABLE,COMM_MAIN_COMMAND_TABLE\n         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE\n         LA    R0,OSVTOC_DXD_L                WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(,R13)                    RESTORE R13\n         BRAS  R9,FREEMAIN\n         SR    R15,R15\n         J     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R1,4(,R13)\n         ITRACE ID=EXIT,                                               +\n               DATA1=(12(R13),4)\n         LH    R15,DXD_RC                     RETURN CODE\n         L     R13,4(,R13)                    RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The parts of the code that require a base register should         *\n*   should be placed below label BASED_AREA.                          *\n*                                                                     *\n*   This area is based by R10.                                        *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBASED_AREA      DS    0F\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGETMAIN1 DS    0H\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         BR    R9\n\nGETMAIN2 DS    0H\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         BR    R9\nFREEMAIN DS    0H\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         BR    R9\nLINK     DS    0H\n         LINK  EP=IEBCOPY,                                             +\n               PARAM=DXD_COMPRESS,                                     +\n               MF=(E,DXD_LINK),                                        +\n               VL=1\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nCAT_CAMLST_I    CAMLST CAT,1,,2\nCAT_CAMLST_L    EQU    *-CAT_CAMLST_I\nDELETE_CAMLST_I CAMLST SCRATCH,1,,2,,OVRD\nDELETE_CAMLST_L EQU    *-DELETE_CAMLST_I\nRENAME_CAMLST_I CAMLST RENAME,1,2,3\nRENAME_CAMLST_L EQU    *-RENAME_CAMLST_I\nUNCAT_CAMLST_I  CAMLST UNCAT,1\nUNCAT_CAMLST_L  EQU    *-UNCAT_CAMLST_I\nLINK_I          LINK   EP=IEBCOPY,SF=L\nLINK_L          EQU    *-LINK_I\n\nF1              DC    F'1'\nF2              DC    F'2'\nH1              DC    H'1'\nH2              DC    H'2'\nH8              DC    H'8'\nH44             DC    H'44'\n\nEDIT_WORD_1     DC    X'F02020202020'\n\nABEND           DC    C'ABEND'\nBROWSED         DC    C'*Browsed*'\nCATALOGED       DC    CL18'*Cataloged*'\nCHECKPOINT      DC    C'Checkpoint'\n\nCOMPRESS        DC    AL2(8),CL8'COMPRESS'\nCOMPRESS_L      EQU   *-COMPRESS\n\nCOMPRESSED      DC    C'*Compressed*'\nDADSM_BLOCKSIZE DC    C'DADSM blocksize'\nDEBUG           DC    C'DEBUG'\nDELETED         DC    CL18'*Deleted*'\nDELETE_ABORTED  DC    C'*Deletion aborted*'\nEXTENDED        DC    C'Extended attributes'\nFIND            DC    C'FIND '\nVTOC_PANEL      DC    CL8'OSVTOC'\nPANEL_4         DC    CL8'OS0004'\nPANEL_9         DC    CL8'OS0009'\nHFS             DC    CL5'HFS'\nISAM            DC    CL5'ISAM'\nINFO            DC    CL18'*Info*'\nLAST            DC    C'Last'\nLOCATE          DC    C'LOCATE'\nMODIFIED        DC    C'Modified'\nMODULE_OSRDVTOC DC    CL8'OSRDVTOC'\nNOBCS           DC    C'NO BCS'\nPS              DC    CL5'PS'\nDA              DC    CL5'DA'\nPO              DC    CL5'PO'\nPDSE            DC    CL5'PDSE'\nPASSRDWRT       DC    C'PASSRDWRT'\nPASSWRT         DC    C'PASSWRT'\nRACF            DC    C'RACF'\nREBLOCK         DC    C'Reblockable'\nREFRESH         DC    C'REFRESH'\nRENAMED         DC    Cl18'*Renamed*'\nRENAME_ABORTED  DC    C'*Rename aborted*'\nSMS             DC    CL5'SMS'\nSYSIN           DC    CL8'SYSIN'\nSYSPRINT        DC    CL8'SYSPRINT'\nSYSUT1          DC    CL8'SYSUT1'\nSYSUT2          DC    CL8'SYSUT2'\nVSAM            DC    CL5'VSAM'\nVTOC            DC    CL5'VTOC'\nUNCATED         DC    CL18'*Uncatl''ged*'\nUNKNOWN         DC    CL5'UNKN'\n\n\nLINE_COMMANDS     DS    0C\n                  CMD   B,MAIN0600,'Browse'\n                  CMD   C,MAIN0700,'Catalog'\n                  CMD   D,MAIN0850,'Delete'\n                  CMD   I,MAIN0300,'Detail information'\n                  CMD   R,MAIN0800,'Rename'\n                  CMD   S,MAIN0600,'Select (browse)'\n                  CMD   U,MAIN0750,'Uncatalog'\n                  CMD   V,MAIN0060,'View (browse)'\n                  CMD   X,MAIN0900,'Compress'\n                  CMD   ?,MAIN0910,'Display available commands'\n                  DC    X'FF'\n\nPRIMARY_COMMANDS  DS    0C\n                  CMD   F,MAIN1000,'Find (string in DSN)'\n                  CMD   L,MAIN1000,'Locate (same as FIND)'\n                  CMD   R,MAIN1200,'Refresh info'\n                  CMD   REF,MAIN1200,'Refresh info'\n                  CMD   FIND,MAIN1000,'Find string in a DSN'\n                  CMD   ABEND,ABEND000,'Cause an 0C1 ABEND'\n                  CMD   DEBUG,DEBUG000,'Display DEBUG data'\n                  CMD   LOCATE,MAIN1000,'Locate (same as FIND)'\n                  CMD   REFRESH,MAIN1200,'Refresh info'\n                  CMD   ??,MAIN1100,'Display available commands'\n                  DC    X'FF'\n\n                  LTORG\n\nHEADING_01        DS    0C\n                  DC    AL01($SCREEN_ATTR_HIGH)\n                  DC    CL02' '\n                  DC    CL44'Dataset name'\n                  DC    CL01' '\n                  DC    CL05'DSORG'\n                  DC    CL01' '\n                  DC    CL03'XNT'\n                  DC    CL02' '\n                  DC    CL07' Tracks'\n                  DC    CL01' '\n                  DC    C'DCB info'\nHEADING_01_L      EQU   *-HEADING_01\n\nHEADING_02        DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'    _________________________'\n                  DC    C'  Extent info  '\n                  DC    C'__________________________'\nHEADING_02_L      EQU   *-HEADING_02\n\nHEADING_03        DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'    Type   Seq_#        Start CCCC-HHHH     E+\n               nd CCCC-HHHH       Tracks'\nHEADING_03_L      EQU   *-HEADING_03\n\nMSG01             DS    0C\nMSG01_ATTR_1      DC    AL1(0)\nMSG01_SELECT      DC    C' '\nMSG01_ATTR_2      DC    AL1($SCREEN_ATTR_NORMAL)\nMSG01_DSN         DC    CL44' '\n                  DC    C' '\nMSG01_DSORG       DC    CL5' '\nMSG01_EXTENTS     DC    X'40202120'\nMSG01_ATTR_3      DC    C' '\nMSG01_MSG         DC    CL18' '\n                  ORG   MSG01_MSG\nMSG01_TRACKS      DC    X'4020202020202120'\n                  DC    C' '\nMSG01_DCB_INFO    DC    CL13' '\nMSG01_L           EQU   *-MSG01\n\nMSG02             DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    CL10'VOL SEQ'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG02_VOL_SEQ     DC    X'402020202120'\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'  RECFM'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG02_RECFM       DC    CL4' '\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'LRECL'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG02_LRECL       DC    X'402020202120'\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'Block size'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG02_BLKSI       DC    X'402020202120'\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'  Cataloged'\n                  DC    AL1($SCREEN_ATTR_HIGH_YELLOW)\nMSG02_CATALOGED   DC    CL3'No'\nMSG02_L           EQU   *-MSG02\n\nMSG03             DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    CL10'RKP'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG03_RKP         DC    X'402020202120'\n                  DC    CL2' '\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    CL10'Key Length'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG03_KEYLEN      DC    X'40202120'\nMSG03_L           EQU   *-MSG03\n\nMSG04             DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    CL10'SMS'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG04_SMS         DC    CL2' '\n                  DC    CL2' '\nMSG04_FLAGS       DC    CL65' '\nMSG04_L           EQU   *-MSG04\n\nMSG05             DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'Indicators'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG05_INDICATORS  DC    CL2' '\n                  DC    CL2' '\nMSG05_FLAGS       DS    CL65' '\nMSG05_L           EQU   *-MSG05\n\nMSG06             DS    0C\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    CL10'Created'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG06_CREATE      DC    CL6' '\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'  Expires'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG06_EXPIRE      DC    CL6' '\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C' Last referenced'\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG06_REFERENCE   DC    CL6' '\nMSG06_L           EQU   *-MSG06\n\nMSG07             DS    0C\n                  DC    AL1($SCREEN_ATTR_NORMAL)\n                  DC    CL5' '\nMSG07_TYPE        DC    CL2' '\n                  DC    CL5' '\nMSG07_SEQUENCE    DC    X'40202120'\n                  DC    CL2' '\n                  DC    C'      '\nMSG07_LOW_CYL     DC    X'F02020202120'\n                  DC    C'-'\nMSG07_LOW_TRACK   DC    X'F02020202120'\n                  DC    CL7' '\nMSG07_HIGH_CYL    DC    X'F02020202120'\n                  DC    C'-'\nMSG07_HIGH_TRACK  DC    X'F02020202120'\n                  DC    CL5' '\nMSG07_TRACKS      DC    X'4020202020202120'\nMSG07_L           EQU   *-MSG07\n\nMSG09             DS    0C\n                  DC    CL21' '\n                  DC    AL1($SCREEN_ATTR_HIGH)\n                  DC    C'Last used track/record '\n                  DC    AL1($SCREEN_ATTR_NORMAL)\nMSG09_TRACK       DC    X'F02020202120'\n                  DC    C'-'\nMSG09_RECORD      DC    X'F0202120'\nMSG09_L           EQU   *-MSG09\n\nOSVTOCEND         EQU   *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOSVTOC_WORK            DSECT\n                       COPY DXDPREF\n\nDXD_VWIDTH             DS   F\nDXD_VDEPTH             DS   F\n\nDXD_VDATA1_ADDR        DS   A\nDXD_VDATA1_LENGTH      DS   F\nDXD_VDATA2_ADDR        DS   A\nDXD_VDATA2_LENGTH      DS   F\n\nDXD_CURRENT_VDATA1_ADDR DS  A\nDXD_LINES_REMAINING    DS   F\n\nDXD_RETURN             DS   A\n\nDXD_LINK               DS   0A,(LINK_L)X\n\nDXD_CAMLST             DS   0F,(CAT_CAMLST_L)X\n\nDXD_VDATA              DS   A\n\nDXD_EXTENTS            DS   F\nDXD_TOTAL_TRACKS       DS   F\n\nDXD_VOLLIST            DS   0F\nDXD_VOLLIST_NBR        DS   H\nDXD_VOLLIST_UCB        DS   XL4\nDXD_VOLLIST_VOL        DS   CL6\nDXD_VOLLIST_SEQ        DS   XL2\n\nDXD_FIND_NBR           DS   F\nDXD_FIND_DSN           DS   CL44\n\nDXD_RC                 DS   H\nDXD_LINES              DS   H\n\nDXD_COMPRESS           DS   0H,(COMPRESS_L)X\n\nDXD_WORK_1             DS   CL10\n\nDXD_FLAGS              DS   X\n$LINE_CMD              EQU  X'80'\n\nDXD_SAVE_RECORD_NBR    DS   CL5\n\nDXD_FORMAT_1           DS     0C\n                       DS     X\n                       DS     CL44\n                       IBMMAC VTOC=1\n\nDXD_FORMAT_3           DS     0C\n                       DS     X\n                       DS     CL44\n                       IBMMAC VTOC=3\n\n                       DAIRREQ  DSECT=NO\n                       DSINFREQ DSECT=NO\n                       DSPCREQ  DSECT=NO\n                       LOADREQ  DSECT=NO\n\nOSVTOC_WORK            DSECT\nOSVTOC_DXD_L           EQU      *-OSVTOC_WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXTENT   DSECT\nEXTENT_TYPE          DS  X\nEXTENT_SEQUENCE      DS  X\nEXTENT_LOW           DS  0XL4\nEXTENT_LOW_CYLINDER  DS  XL2\nEXTENT_LOW_TRACK     DS  XL2\nEXTENT_HIGH          DS  0XL4\nEXTENT_HIGH_CYLINDER DS  XL2\nEXTENT_HIGH_TRACK    DS  XL2\nEXTENT_L             EQU *-EXTENT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY TRENTRY\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  OSVTOC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT810/CBT.V500.FILE810.PDS/SOURCE.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT810/CBT.V500.FILE810.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}