*--------------------------------------------------------------------*
*                                                                    *
*  Module name: GENSS2                                               *
*                                                                    *
*  Function:                                                         *
*   Generate packed decimal (PACK, AP, ZAP, ...                      *
*                                                                    *
*  At entry R7 is AREA address                                       *
*           R5 is address of instruction                             *
*           R4 is address of OPCODE entry                            *
*                                                                    *
*--------------------------------------------------------------------*
GENSS2   CSECT
GENSS2   AMODE 31
GENSS2   RMODE ANY
         USING GENSS2,R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISCOMM,R9
         USING AREA_DSECT,R7
         USING OPCODE_DSECT,R4
         B     MOD0000                        SKIP EYECATCHER
MODID    DC    CL8'GENSS2'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        SET BASE REG
         DROP  R15
         USING GENSS2,R10
         L     R15,SESS_DXD_ADDR              WORK AREA BASE
         A     R15,DXD_START                  PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                        SET SAVE AREA ADDRESS
         USING DXDSS2,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R7,                                              +
               DATA2=0(R5)
         MVC   DXD_BLANKS,COMM_BLANKS
         LA    R1,DISCOMM_SOURCE_OPERAND1
*--------------------------------------------------------------------*
*        Break out length, base, and disp for operand 1              *
*--------------------------------------------------------------------*
         SR    R0,R0                          CLEAR R0
         IC    R0,1(R5)                       LENGTHS 1 AND 2
         SRL   R0,4                           SHIFT OUT LENGTH 2
         STC   R0,DXD_LENGTH                  SET LENGTH
         IC    R0,2(R5)                       BASE 1
         SRL   R0,4                           SHIFT TO LOW BITS
         STC   R0,DXD_BASE                    BASE FOR OPERAND 1
         MVC   DXD_DISP,2(R5)                 COPY BASE AND DDD
         NI    DXD_DISP,X'0F'                 REMOVE BASE
         MVC   DXD_LABEL,AREA_REF_LABEL1      ADDR OF LABEL 1
         MVC   DXD_LABEL,AREA_REF_LABEL1      ADDR OF LABEL 1
         MVC   DXD_USING,AREA_REF_USING1      ADDR OF USING BLOCK
         BAL   R3,GEN0010                     GENERATE OPERAND 1
*--------------------------------------------------------------------*
*        Comma to delimit operands 1 and 2                           *
*--------------------------------------------------------------------*
         MVI   0(R1),C','
         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS
*--------------------------------------------------------------------*
*        Break out length, base, and disp for operand 2              *
*--------------------------------------------------------------------*
         MVC   DXD_LENGTH,1(R5)               COPY LENGTHS 1 AND 2
         NI    DXD_LENGTH,X'0F'               REMOVE LENGTH 1
         SR    R0,R0                          CLEAR R0
         IC    R0,4(R5)                       BASE 2
         SRL   R0,4                           SHIFT TO LOW BITS
         STC   R0,DXD_BASE                    BASE FOR OPERAND 2
         MVC   DXD_DISP,4(R5)                 COPY BASE AND DDD 2
         NI    DXD_DISP,X'0F'                 COPY BASE AND DDD 2
         MVC   DXD_LABEL,AREA_REF_LABEL2      ADDR OF LABEL 2
         MVC   DXD_LABEL_DISP,AREA_REF_DISP2  DISP FROM LABEL 2
         MVC   DXD_USING,AREA_REF_USING2      ADDR OF USING BLOCK
         BAL   R3,GEN0010                     GENERATE OPERAND 2
         B     EXIT0000
*--------------------------------------------------------------------*
*                                                                    *
*        Generate operand                                            *
*                                                                    *
*--------------------------------------------------------------------*
GEN0010  DS    0H
         ICM   R8,15,DXD_LABEL                LABEL BLOCK ADDR?
         BNZ   GEN0020                        YES
*--------------------------------------------------------------------*
*        Generate "DDD(L,B)"                                         *
*--------------------------------------------------------------------*
         SR    R15,R15
         ICM   R15,3,DXD_DISP                 DISP
         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL
         MVC   DXD_EDIT_WORD,EDIT_WORD
         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH
         LA    R2,DXD_EDIT_WORD
         BAL   R15,SCAN1000                   FIND 1ST NON BLANK
         MVC   0(8,R1),0(R2)                  COPY DISP
         BAL   R15,SCAN0000
         MVI   0(R1),C'('                     OPEN PAREN
         SR    R15,R15
         IC    R15,DXD_LENGTH
         LA    R15,1(,R15)                    FULL LENGTH
         CVD   R15,COMM_DWORD
         MVC   DXD_EDIT_WORD,EDIT_WORD
         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH
         LA    R2,DXD_EDIT_WORD
         BAL   R15,SCAN1000                   FIND 1ST NON BLANK
         MVC   1(3,R1),0(R2)                  COPY LENGTH
         BAL   R15,SCAN0000                   FIND 1ST NON BLANK
         MVI   0(R1),C','                     INSERT COMMA
         MVI   1(R1),C'R'                     INSERT COMMA
         SR    R15,R15
         IC    R15,DXD_BASE
         SLL   R15,1                          MULTIPLY BY 2
         LA    R2,REGISTER_TABLE(R15)
         MVC   2(2,R1),0(R2)                  COPY REGISTER
         BAL   R15,SCAN0000
         MVI   0(R1),C')'                     CLOSE PAREN
         LA    R1,1(,R1)                      UPDATE ADDRESS
         BR    R3
*--------------------------------------------------------------------*
*        GENERATE LABEL(LENGTH)                                      *
*--------------------------------------------------------------------*
GEN0020  DS    0H
         USING LABEL_DSECT,R8
         ICM   R2,15,DXD_USING                USING BLOCK ADDR?
         BZ    GEN0030                        NO
         USING USING_DSECT,R2
         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?
         BE    GEN0030                        YES
         MVC   0(L'USING_NAME,R1),USING_NAME  COPY NAME
         BAL   R15,SCAN0000                   FIND END OF NAME
         MVI   0(R1),C'.'                     INSERT DELIMITER
         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS
GEN0030  DS    0H
         MVC   0(L'LABEL_NAME,R1),LABEL_NAME  COPY LABEL NAME
         BAL   R15,SCAN0000                   FIND 1ST BLANK
         ICM   R0,15,DXD_LABEL_DISP           DISP FROM LABEL
         BZ    GEN0040                        ZERO..
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_EDIT_WORD,EDIT_WORD
         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH
         LA    R2,DXD_EDIT_WORD
         BAL   R15,SCAN1000                   FIND 1ST DIGIT
         MVI   0(R1),C'+'                     INSERT PLUS
         MVC   1(8,R1),0(R2)                  COPY DISP
         BAL   R15,SCAN0000                   FIND 1ST BLANK
GEN0040  DS    0H
         MVI   0(R1),C'('                     INSERT OPEN PAREN
         SR    R15,R15                        CLEAR R15
         IC    R15,DXD_LENGTH                 LENGTH
         LA    R15,1(,R15)                    TRUE LENGTH
         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL
         MVC   DXD_EDIT_WORD,EDIT_WORD
         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH
         LA    R2,DXD_EDIT_WORD               EDIT LENGTH
         BAL   R15,SCAN1000                   FIND 1ST DIGIT
         MVC   1(3,R1),0(R2)                  COPY LENGTH
         BAL   R15,SCAN0000                   FIND 1ST BLANK
         MVI   0(R1),C')'                     CLOSING PAREN
         LA    R1,1(,R1)
         BR    R3
*--------------------------------------------------------------------*
*        Find next blank                                             *
*--------------------------------------------------------------------*
SCAN0000 DS    0H
         CLI   0(R1),C' '
         BER   R15
         LA    R1,1(,R1)
         B     SCAN0000
*--------------------------------------------------------------------*
*        Find first non-zero                                         *
*--------------------------------------------------------------------*
SCAN1000 DS    0H
         CLI   0(R2),C' '
         BNER  R15
         LA    R2,1(,R2)
         B     SCAN1000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        RETURN CODE               ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DXD_START      DC   Q(DXDSS2)
EDIT_WORD      DC   X'4020202020202120'

REGISTER_TABLE DS   0C
               DC   CL2'0 '
               DC   CL2'1 '
               DC   CL2'2 '
               DC   CL2'3 '
               DC   CL2'4 '
               DC   CL2'5 '
               DC   CL2'6 '
               DC   CL2'7 '
               DC   CL2'8 '
               DC   CL2'9 '
               DC   CL2'10'
               DC   CL2'11'
               DC   CL2'12'
               DC   CL2'13'
               DC   CL2'14'
               DC   CL2'15'
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DXDSS2         DSECT
               COPY DXDPREF
DXD_LABEL      DS   A
DXD_USING      DS   A
DXD_LABEL_DISP DS   XL4
DXD_LENGTH     DS   X
DXD_BASE       DS   X
DXD_DISP       DS   XL2

DXD_EDIT_WORD  DS   XL8
DXD_BLANKS     DS   CL8

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      GENSS2
