* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: DISDLIST                                              *
*                                                                     *
*  FUNCTION:                                                          *
*    Display/allow definition of data area(s)                         *
*                                                                     *
*                                                                     *
*  The disassembler tries to 'recognize' data on its own.  Still,     *
*  there are data areas of most programs that may be mis-intrpreted   *
*  as instructions.  To prevent this, the user can "tell" us where    *
*  data areas begin and end (by using the start and end               *
*  displacements).                                                    *
*                                                                     *
*                                                                     *
*  User defined areas are chained from COMM_USER_AREA_NEXT_1.         *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DISDLIST CSECT
DISDLIST AMODE 31
DISDLIST RMODE ANY
         USING DISDLIST,R15
         B     MOD0000                           SKIP EYECATCHER
MODID    DC    CL8'DISDLIST'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                   SAVE REGS
         LR    R10,R15                           SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISDLIST,R10
         USING DISCOMM,R9
         L     R15,SESS_DXD_ADDR                 WORK AREA
         A     R15,DXD_START                     PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         USING DXDDLIST,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         USING AREA_DSECT,R5
* ------------------------------------------------------------------- *
*                                                                     *
*        In order to allow the user to "cancel" changes,              *
*        first "copy" the existing USER area chain.                   *
*                                                                     *
* ------------------------------------------------------------------- *
         XC    DXD_AREA_NEXT,DXD_AREA_NEXT
         XC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED
         LA    R2,DXD_AREA_PREV
PREV     USING AREA_DSECT,R2
         ICM   R5,15,DISCOMM_USER_AREA_NEXT_1    FIRST USER AREA
         BZ    INIT0020
INIT0010 DS    0H
         GETMAIN RU,                                                   +
               LV=AREA_DSECT_L,                                        +
               LOC=ANY
         ITRACE ID=COPY_1,                                             +
               RDATA1=R1
NEW      USING AREA_DSECT,R1
         MVC   NEW.AREA_DSECT(AREA_DSECT_L),AREA_DSECT
         ST    R1,PREV.AREA_NEXT
         ST    R2,NEW.AREA_PREV
         LR    R2,R1
         ICM   R5,15,AREA_NEXT
         BNZ   INIT0010
         MVC   DXD_FIRST_DISPLAYED,DXD_AREA_NEXT
         DROP  NEW,PREV
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         L     R0,SPF_VDEPTH                     NBR OF LINES
         SLL   R0,2                              MULTIPLY BY 4
         ST    R0,DXD_AREA_TABLE_SIZE
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,DXD_AREA_TABLE                 SAVE ADDRESS
         ITRACE ID=A_TABLE,                                            +
               RDATA1=R1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=BUILD
         L     R0,DISCOMM_VDATA_ADDR
         L     R1,DISCOMM_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                            INITIALIZE VDATA
         L     R0,DXD_AREA_TABLE
         L     R1,DXD_AREA_TABLE_SIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                            INIT AREA TABLE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         L     R7,SPF_VDEPTH                     NBR OF LINES
MAIN0020 DS    0H
         MVC   0(MSG01_L,R6),MSG01               INITIALIZE
         A     R6,SPF_VWIDTH                     NEXT LINE
         BCT   R7,MAIN0020                       LOOP
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         USING MSG01,R6
         L     R7,SPF_VDEPTH
MAIN0030 DS    0H
         L     R3,DXD_AREA_TABLE                 FIRST 'SLOT'
         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED
         ICM   R5,15,DXD_FIRST_DISPLAYED         FIRST TO DISPLAY
         BZ    MAIN0060                          NOTHING DEFINED YET
MAIN0040 DS    0H
         ITRACE ID=AREA,                                               +
               RDATA1=R5,                                              +
               RDATA2=R6
         ST    R5,DXD_LAST_DISPLAYED             SAVE ADDR
         ST    R5,0(R3)                          SAVE ADDR
         UNPK  DXD_WORK(9),AREA_BEGIN(5)         UNPACK BEGIN DISP
         TR    DXD_WORK(8),COMM_HEXCHAR          TRANSLATE
         MVC   MSG01_BEGIN,DXD_WORK              COPY BEGIN
         UNPK  DXD_WORK(9),AREA_END(5)           UNPACK BEGIN DISP
         TR    DXD_WORK(8),COMM_HEXCHAR          TRANSLATE
         MVC   MSG01_END,DXD_WORK                COPY BEGIN
         UNPK  DXD_WORK(9),AREA_LENGTH(5)        UNPACK LENGTH
         TR    DXD_WORK(8),COMM_HEXCHAR          TRANSLATE
         MVC   MSG01_LENGTH,DXD_WORK             COPY LENGTH
         LA    R1,1                              CONSTANT 1
         AH    R1,DXD_NBR_DISPLAYED              PLUS TOTAL SO FAR
         STH   R1,DXD_NBR_DISPLAYED              SAVE TOTAL
         LA    R3,4(,R3)                         NEXT IN ADDR TABLE
         A     R6,SPF_VWIDTH                     NEXT LINE
         BCT   R7,MAIN0050
         B     MAIN0060
MAIN0050 DS    0H
         ICM   R5,15,AREA_NEXT
         BNZ   MAIN0040
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=DISPLAY
         MVC   SESS_DISP_PANEL,PANEL_DISDLIST    SET PANEL NAME
         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT
         BALR  R14,R15                           DISPLAY
         ITRACE ID=DISP_RC,                                            +
               RDATA1=R15,                                             +
               DATA2=SPF_ZVERB
         LTR   R2,R15                            RC = 0?
         BNZ   MAIN0500                          NO
         CLC   ABEND,SPF_ZCMD                    ABEND?
         BE    ABEND000                          YES
         CLC   CANCEL,SPF_ZCMD                   CANCEL?
         BE    MAIN0550                          YES
         CLC   CAN,SPF_ZCMD                      CAN(CEL)?
         BE    MAIN0550                          YES
* ------------------------------------------------------------------- *
*        Check new areas or changes to existing area(s)               *
* ------------------------------------------------------------------- *
         NI    DXD_FLAGS,255-$DXD_UPDATE         RESET FLAG
         NI    DXD_FLAGS,255-$DXD_ERROR          RESET FLAG
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         L     R7,SPF_VDEPTH                     NBR OF LINES
MAIN0070 DS    0H
         MVC   MSG01_MSG,COMM_BLANKS
         OC    MSG01_BEGIN,COMM_BLANKS
         CLC   MSG01_BEGIN,COMM_BLANKS           BEGIN BLANK?
         BE    MAIN0090                          YES
         ITRACE ID=CNV_BEGN,                                           +
               DATA1=MSG01_BEGIN
         LA    R1,MSG01_BEGIN                    SOURCE DISP
         ST    R1,DXD_CONV_SOURCE
         LA    R1,DXD_BEGIN                      OUTPUT OF CONVERSION
         ST    R1,DXD_CONV_OUT
         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS
         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT
         BALR  R14,R15                           CHECK/CONV BEGIN
         LTR   R15,R15                           VALID?
         BNZ   MAIN0110                          NO
         OC    MSG01_END,COMM_BLANKS
         CLC   MSG01_END,COMM_BLANKS             END BLANK?
         BE    MAIN0120                          YES
         ITRACE ID=CNV_END,                                            +
               DATA1=MSG01_END
         LA    R1,MSG01_END                      SOURCE DISP
         ST    R1,DXD_CONV_SOURCE
         LA    R1,DXD_END                        OUTPUT OF CONVERSION
         ST    R1,DXD_CONV_OUT
         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS
         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT
         BALR  R14,R15                           CHECK/CONV BEGIN
         LTR   R15,R15                           VALID?
         BNZ   MAIN0110                          NO
         CLC   DXD_BEGIN,DXD_END                 BEGIN > END?
         BNH   MAIN0120                          NO
         MVI   COMM_MSG_ID+1,1                   SET MESSAGE ID
         B     MAIN0100
MAIN0090 DS    0H
         CLC   MSG01_END,COMM_BLANKS             END BLANK?
         BE    MAIN0120                          YES
         MVI   COMM_MSG_ID+1,3                   SET MESSAGE ID
MAIN0100 DS    0H
         ITRACE ID=ERROR
         BAL   R4,MSG0000                        BUILD MESSAGE
MAIN0110 DS    0H
         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE
         OI    DXD_FLAGS,$DXD_ERROR              ERROR HAS OCCURRED
MAIN0120 DS    0H
         A     R6,SPF_VWIDTH                     NEXT LINE
         BCT   R7,MAIN0070                       LOOP
         TM    DXD_FLAGS,$DXD_ERROR              ERROR(S)?
         BO    MAIN0060                          YES
* ------------------------------------------------------------------- *
*                                                                     *
*        No errors have been found                                    *
*                                                                     *
*        Determine if any area(s) were                                *
*          updated                                                    *
*          removed                                                    *
*          added                                                      *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=NO_ERROR
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         L     R7,SPF_VDEPTH                     NBR OF LINES
         L     R3,DXD_AREA_TABLE                 FIRST AREA
MAIN0130 DS    0H
         L     R5,0(,R3)                         AREA BLOCK IF USED
         ITRACE ID=MAIN0130,                                           +
               RDATA1=R6,                                              +
               RDATA2=R5
         CLC   MSG01_BEGIN,COMM_BLANKS           BEGIN DISP BLANK?
         BE    MAIN0200                          YES
         LA    R1,MSG01_BEGIN                    SOURCE DISP
         ST    R1,DXD_CONV_SOURCE
         LA    R1,DXD_BEGIN                      OUTPUT OF CONVERSION
         ST    R1,DXD_CONV_OUT
         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS
         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT
         BALR  R14,R15                           CHECK/CONV BEGIN
         CLC   MSG01_END,COMM_BLANKS             END DISP BLANK?
         BE    MAIN0140                          YES
         LA    R1,MSG01_END                      SOURCE DISP
         ST    R1,DXD_CONV_SOURCE
         LA    R1,DXD_END                        OUTPUT OF CONVERSION
         ST    R1,DXD_CONV_OUT
         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS
         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT
         BALR  R14,R15                           CHECK/CONV BEGIN
         B     MAIN0150
MAIN0140 DS    0H
         MVC   DXD_END,DISCOMM_CSECT_LENGTH      USE CSECT LENGTH
         MVI   COMM_MSG_ID+1,4                   SET MESSAGE ID
         BAL   R4,MSG0000                        BUILD MESSAGE
         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
*        Verify begin and/or end are less than CSECT length           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         CLC   DXD_BEGIN,DISCOMM_CSECT_LENGTH    BEGIN > CSECT LENGTH?
         BH    MAIN0270                          YES
         CLC   DXD_END,DISCOMM_CSECT_LENGTH      END > CSECT LENGTH?
         BNH   MAIN0155                          NO
         MVI   COMM_MSG_ID+1,5                   SET MESSAGE ID
         BAL   R4,MSG0000                        BUILD MESSAGE
         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE
         MVC   DXD_END,DISCOMM_CSECT_LENGTH      LIMIT TO CSECT LENGTH
MAIN0155 DS    0H
         L     R1,DXD_END                        END DISP
         S     R1,DXD_BEGIN                      MINUS BEGIN
         LA    R1,1(,R1)                         TRUE LENGTH
         STCM  R1,15,DXD_LENGTH                  SET LENGTH
         LTR   R5,R5                             AREA EXIST?
         BZ    MAIN0170                          NO
         CLC   AREA_BEGIN,DXD_BEGIN              SAME BEGIN DISP?
         BNE   MAIN0160                          NO
         CLC   AREA_END,DXD_END                  SAME END DISP?
         BE    MAIN0250                          YES
MAIN0160 DS    0H
         ITRACE ID=UPDTAREA
         OI    DXD_FLAGS,$DXD_UPDATE             AREA HAS BEEN UPDATED
         MVC   AREA_BEGIN,DXD_BEGIN              CHANGE BEGIN DISP
         MVC   AREA_END,DXD_END                  CHANGE END DISP
         MVC   AREA_LENGTH,DXD_LENGTH            CHANGE LENGTH
         B     MAIN0250
MAIN0170 DS    0H
         OI    DXD_FLAGS,$DXD_UPDATE
         GETMAIN RU,                                                   +
               LV=AREA_DSECT_L,                                        +
               LOC=ANY
         ITRACE ID=NEW_AREA,                                           +
               RDATA1=R1
NEW      USING AREA_DSECT,R1
         XC    NEW.AREA_DSECT(AREA_DSECT_L),NEW.AREA_DSECT
         MVC   NEW.AREA_EYE,AREA_ID              IDENTIFY BLOCK
         MVC   NEW.AREA_BEGIN,DXD_BEGIN          SET BEGIN DISP
         MVC   NEW.AREA_END,DXD_END              SET END DISP
         MVC   NEW.AREA_LENGTH,DXD_LENGTH        SET LENGTH
         MVI   NEW.AREA_TYPE,$AREA_DATA          SET AREA TYPE
         MVI   NEW.AREA_DATA_TYPE,$DATA_USER     USER DEFINED AREA
         LA    R5,DXD_AREA_PREV                  FIRST AREA
MAIN0180 DS    0H
         ICM   R2,15,AREA_NEXT                   ANOTHER ON CHAIN?
         BZ    MAIN0190                          YES
         LR    R5,R2                             COPY ADDRESS
         B     MAIN0180
MAIN0190 DS    0H
         ST    R1,AREA_NEXT                      SET 'NEXT' IN PREVIOUS
         ST    R5,NEW.AREA_PREV                  SET PREV IN NEW
         OC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED
         BNZ   MAIN0250                          BLOCK PRESENT
         ST    R1,DXD_FIRST_DISPLAYED            SET FIRST ON CHAIN
         B     MAIN0250
         DROP  NEW
MAIN0200 DS    0H
         LTR   R5,R5                             AREA EXIST?
         BZ    MAIN0250                          NO
         OI    DXD_FLAGS,$DXD_UPDATE             AN AREA WAS UPDATED
         ITRACE ID=DEL_AREA,                     DELETING AN AREA      +
               RDATA1=R5,                                              +
               DATA2=AREA_BEGIN
         ICM   R1,15,AREA_NEXT                   NEXT AREA ON CHAIN
         BZ    MAIN0210
NEXT     USING AREA_DSECT,R1
         MVC   NEXT.AREA_PREV,AREA_PREV          SET PREV IN NEXT
         DROP  NEXT
MAIN0210 DS    0H
         ICM   R1,15,AREA_PREV                   PREVIOUS ON CHAIN
         BZ    MAIN0220                          NO PREVIOUS BLOCK
PREV     USING AREA_DSECT,R1
         MVC   PREV.AREA_NEXT,AREA_NEXT          SET NEXT IN PREVIOUS
MAIN0220 DS    0H
         C     R5,DXD_FIRST_DISPLAYED            FIRST AREA DISPLAYED?
         BNE   MAIN0230                          NO
         MVC   DXD_FIRST_DISPLAYED,AREA_NEXT     CHANGE TO NEXT BLOCK
MAIN0230 DS    0H
         C     R5,DXD_AREA_NEXT                  FIRST AREA ON CHAIN?
         BNE   MAIN0240                          NO
         MVC   DXD_AREA_NEXT,AREA_NEXT           NEXT IS NOW FIRST
MAIN0240 DS    0H
         ITRACE ID=FREE_1,                                             +
               RDATA1=R5
         FREEMAIN RU,                            FREEMAIN THE AREA     +
               A=(R5),                                                 +
               LV=AREA_DSECT_L
         XC    0(4,R3),0(R3)                     CLEAR ADDR IN TABLE
MAIN0250 DS    0H
         ITRACE ID=NEXT
         A     R6,SPF_VWIDTH                     NEXT LINE
         LA    R3,4(,R3)                         NEXT IN TABLE
         BCT   R7,MAIN0130                       LOOP
         ICM   R5,15,DXD_AREA_NEXT               FIRST AREA
         BZ    MAIN0260                          NONE ON CHAIN
         XC    AREA_PREV,AREA_PREV               NO PREV BLOCK
MAIN0260 DS    0H
         TM    DXD_FLAGS,$DXD_UPDATE             ANY UPDATES?
         BO    MAIN0010                          YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0270 DS    0H
         MVI   COMM_MSG_ID+1,6                   SET MESSAGE ID
         BAL   R4,MSG0000                        BUILD MESSAGE
         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=SCROLL,                                             +
               DATA1=SPF_ZVERB,                                        +
               DATA2=SPF_ZSCROLLA
         CLI   SPF_ZVERB,C'B'                    BOTTOM?
         BE    MAIN0400
         CLI   SPF_ZVERB,C'D'                    DOWN?
         BE    MAIN0420
         CLI   SPF_ZVERB,C'T'                    TOP?
         BE    MAIN0440
         CLI   SPF_ZVERB,C'U'                    UP?
         BE    MAIN0450
         B     MAIN0050
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0400 DS    0H
         ITRACE ID=BOTTOM
         ICM   R1,15,DXD_AREA_NEXT               FIRST ON CHAIN
TEMP     USING AREA_DSECT,R1
         BZ    EXIT0000                          SHOULD NOT HAPPEN!
MAIN0410 DS    0H
         LR    R5,R1                             SAVE THIS ADDR
         ICM   R1,15,TEMP.AREA_NEXT              NEXT AREA
         BNZ   MAIN0410
         B     MAIN0010                          BUILD DISPLAY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0420 DS    0H
         ITRACE ID=DOWN
         CLI   SPF_ZSCROLLA,C'M'                 MAX?
         BE    MAIN0400                          YES
         L     R2,SPF_ZSCROLLN                   NBR OF LINES TO SCROLL
         L     R1,DXD_FIRST_DISPLAYED            1ST ON DISPLAY
MAIN0430 DS    0H
         ICM   R1,15,TEMP.AREA_NEXT              NEXT ON CHAIN
         BZ    MAIN0010                          AT END OF CHAIN
         ST    R1,DXD_FIRST_DISPLAYED
         BCT   R2,MAIN0430
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0440 DS    0H
         ITRACE ID=TOP
         L     R5,DXD_AREA_NEXT                  FIRST DATA ITEM
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0450 DS    0H
         ITRACE ID=UP
         CLI   SPF_ZSCROLLA,C'M'                 MAX?
         BE    MAIN0440                          YES
         ICM   R1,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY
         BZ    EXIT0000                          SHOULD NOT HAPPEN!
         L     R2,SPF_ZSCROLLN                   LINES ON DISPLAY
MAIN0460 DS    0H
         ST    R1,DXD_FIRST_DISPLAYED            COPY ADDR
         ICM   R1,15,TEMP.AREA_PREV              PREVIOUS AREA
         BZ    MAIN0010
         BCT   R2,MAIN0460                       LOOP
         B     MAIN0010
         DROP  TEMP
* ------------------------------------------------------------------- *
*                                                                     *
*      Replace the existing USER area chain with the updated chain    *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0500 DS    0H
         ITRACE ID=SWITCH,                                             +
               DATA1=DISCOMM_USER_AREA_NEXT_1,                         +
               DATA2=DXD_AREA_NEXT
         ICM   R5,15,DISCOMM_USER_AREA_NEXT_1    FIRST USER AREA
         BZ    MAIN0520                          NOTHING ON CHAIN
MAIN0510 DS    0H
         LR    R1,R5                             COPY ADDRESS
         ICM   R5,15,AREA_NEXT                   NEXT AREA
         ITRACE ID=FREE_2,                                             +
               RDATA1=R1
         FREEMAIN RU,                            FREEMAIN THIS AREA    +
               A=(1),                                                  +
               LV=AREA_DSECT_L
         LTR   R5,R5                             ANOTHER AREA?
         BNZ   MAIN0510                          YES
MAIN0520 DS    0H
         MVC   DISCOMM_USER_AREA_NEXT_1,DXD_AREA_NEXT
         XC    DXD_AREA_NEXT,DXD_AREA_NEXT       RESET WORKING CHAIN
         ICM   R5,15,DISCOMM_USER_AREA_NEXT_1    1ST USER AREA
         BZ    EXIT0000                          NO USER AREAS
         XC    AREA_PREV,AREA_PREV               ZERO 'PREV' ADDR
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0550 DS    0H
         ITRACE ID=CANCEL
         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND
         ICM   R5,15,DXD_AREA_NEXT               FIRST NEW AREA
         BZ    EXIT0000                          NONE
MAIN0560 DS    0H
         LR    R1,R5                             COPY ADDRESS
         ICM   R5,15,AREA_NEXT                   NEXT AREA
         ITRACE ID=FREE_3,                                             +
               RDATA1=R1
         FREEMAIN RU,                            FREEMAIN THIS AREA    +
               A=(1),                                                  +
               LV=AREA_DSECT_L
         LTR   R5,R5                             ANOTHER AREA?
         BNZ   MAIN0560                          YES
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0000  DS    0H
         MVI   COMM_MSG_ID,0
         ITRACE ID=MSG,                                                +
               DATA1=COMM_MSG_ID
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R0,DXD_AREA_TABLE_SIZE            ADDR TABLE SIZE
         L     R1,DXD_AREA_TABLE                 ADDR TABLE ADDR
         ITRACE ID=FREE_TBL,                                           +
               RDATA1=R1,                                              +
               RDATA2=R0
         FREEMAIN RU,                            FREEMAIN ADDR TABLE   +
               A=(1),                                                  +
               LV=(0)
         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670
         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680
         LR    R15,R2                            SET RC
         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680
         BR    R14                               RETURN TO CALLER       ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         ITRACE ID=ABEND
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START     DC   Q(DXDDLIST)
V_DISDCONV    DC   V(DISDCONV)

AREA_ID       DC   CL8'AREA'
ABEND         DC   C'ABEND '
CAN           DC   C'CAN '
CANCEL        DC   C'CANCEL '
PANEL_DISDLIST DC  CL8'DISDLIST'

              LTORG

MSG01         DS   0C
              DC   AL1($SCREEN_ATTR_INPUT)
MSG01_BEGIN   DC   CL8' '
              DC   AL1($SCREEN_ATTR_NORMAL)
              DC   CL3' '
              DC   AL1($SCREEN_ATTR_INPUT)
MSG01_END     DC   CL8' '
              DC   AL1($SCREEN_ATTR_NORMAL)
              DC   CL3' '
MSG01_LENGTH  DC   CL8' '
              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)
MSG01_MSG     DC   CL30' '
MSG01_L       EQU  *-MSG01

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDDLIST              DSECT
                      COPY DXDPREF

DXD_AREA_PREV         DS  A             DUMMY FOR 'PREV' ON CHAIN
DXD_AREA_NEXT         DS  A             FIRST DATA ITEM ON CHAIN

DXD_FIRST_DISPLAYED   DS  A             FIRST DATA ITEM DISPLAYED
DXD_LAST_DISPLAYED    DS  A             LAST DATA ITEM DISPLAYED

DXD_AREA_TABLE        DS  A
DXD_AREA_TABLE_SIZE   DS  F

DXD_CONV_PARMS        DS  0A
DXD_CONV_SOURCE       DS  F
DXD_CONV_OUT          DS  F

DXD_BEGIN             DS  F
DXD_END               DS  F
DXD_LENGTH            DS  F
                      DS  X

DXD_NBR_DISPLAYED     DS  H             NBR OF DATA ITEMS DISPLAYED

DXD_FLAGS             DS  X             FLAGS
$DXD_ERROR            EQU X'80'         .. SERIOUS ERROR
$DXD_UPDATE           EQU X'40'         .. AREA(S) UPDATED

DXD_WORK              DS  CL9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     REGEQU
              END     DISDLIST
