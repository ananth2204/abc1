* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: DISKLIST                                              *
*                                                                     *
*  FUNCTION:                                                          *
*    Display/allow definition of libraries of pre-processed DSECTs.   *
*                                                                     *
*                                                                     *
*  The disassembler allows actual assembler source to be used to      *
*  "map" data areas.  DSECTs can be either processed during           *
*  dis-assembly or pre-processed by DISASMU1.  The info obtained      *
*  from pre-processing DSECTs is recorded in VSAM KSDSes.             *
*                                                                     *
*  This module displays the KSDSes currently allocated and allows     *
*  the user to change/add/or remove a data set(s).                    *
*                                                                     *
* ------------------------------------------------------------------- *
DISKLIST CSECT
DISKLIST AMODE 31
DISKLIST RMODE ANY
         USING DISKLIST,R15
         B     MOD0000                           SKIP EYECATCHER
MODID    DC    CL8'DISKLIST'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                   SAVE REGS
         LR    R10,R15                           SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISKLIST,R10
         USING DISCOMM,R9
         L     R15,SESS_DXD_ADDR                 WORK AREA
         A     R15,DXD_START                     PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         USING DXDKLIST,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R1
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         USING KSDS_DSECT,R7
         USING IFGACB,KSDS_ACB
* ------------------------------------------------------------------- *
*                                                                     *
*        If R1 is zero display existing KSDS list                     *
*        If R1 not zero, display list passed in R1                    *
*                                                                     *
* ------------------------------------------------------------------- *
         ST    R1,DXD_KSDS_NEXT
         ST    R1,DXD_FIRST_DISPLAYED
         LTR   R1,R1                             R1 ZERO?
         BNZ   INIT0030                          NO
* ------------------------------------------------------------------- *
*                                                                     *
*        In order to allow the user to "cancel" changes,              *
*        first "copy" the existing KSDS chain.                        *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=COPYKSDS
         LA    R2,DXD_KSDS_PREV
PREV     USING KSDS_DSECT,R2
         ICM   R7,15,DISCOMM_KSDS_NEXT           FIRST KSDS
         BZ    INIT0030
INIT0010 DS    0H
         TM    KSDS_FLAGS,$KSDS_OPEN             IS THE KSDS OPEN
         BNO   INIT0020                          NO
         ITRACE ID=CLOSE,                                              +
               DATA1=KSDS_DDNAME
         CLOSE KSDS_ACB,                         CLOSE THE ACB         +
               MODE=31,                                                +
               MF=(E,DISCOMM_CLOSE)
         LTR   R15,R15                           SUCCESSFUL?
         BNZ   ERR0010                           NO
         NI    KSDS_FLAGS,255-$KSDS_OPEN         RESET FLAG
INIT0020 DS    0H
         MVI   DAIR_FUNC,$DAIR_FREE              SET DAIR FUNCTION
         MVC   DAIR_DD,KSDS_DDNAME               SET DDNAME
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                           DEALLOCATE KSDS
         OC    DAIR_R15,DAIR_R15                 SUCCESSFUL?
         BNZ   ERR1000                           NO
         GETMAIN RU,                             GETMAIN NEW KSDS BLOCK+
               LV=KSDS_DSECT_L,                                        +
               LOC=ANY
NEW      USING KSDS_DSECT,R1
         ITRACE ID=COPYKSDS,                                           +
               RDATA1=R1,                                              +
               RDATA2=R7
         MVC   NEW.KSDS_DSECT(KSDS_DSECT_L),KSDS_DSECT
         ST    R1,PREV.KSDS_NEXT
         LR    R2,R1
         ICM   R7,15,KSDS_NEXT                   ANOTHER KSDS?
         BNZ   INIT0010                          YES.. PROCESS IT
         DROP  NEW,PREV
         MVC   DXD_FIRST_DISPLAYED,DXD_KSDS_NEXT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0030 DS    0H
         L     R0,SPF_VDEPTH                     NBR OF LINES
         SLL   R0,2                              MULTIPLY BY 4
         ST    R0,DXD_KSDS_TABLE_SIZE
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,DXD_KSDS_TABLE                 SAVE ADDRESS
         ITRACE ID=A_TABLE,                                            +
               RDATA1=R1,                                              +
               DATA2=(DXD_KSDS_TABLE_SIZE,4)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=CLEAR
         L     R0,DISCOMM_VDATA_ADDR
         L     R1,DISCOMM_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                            INITIALIZE VDATA
         L     R0,DXD_KSDS_TABLE
         L     R1,DXD_KSDS_TABLE_SIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                            INIT AREA TABLE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         L     R15,SPF_VDEPTH                    NBR OF LINES
MAIN0020 DS    0H
         MVC   0(MSG01_L,R6),MSG01               INITIALIZE
         A     R6,SPF_VWIDTH                     NEXT LINE
         BCT   R15,MAIN0020                      LOOP
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         USING MSG01,R6
         MVC   DXD_LINES_REMAINING,SPF_VDEPTH
MAIN0030 DS    0H
         L     R4,DXD_KSDS_TABLE                 FIRST 'SLOT'
         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED
         ICM   R7,15,DXD_FIRST_DISPLAYED         FIRST TO DISPLAY
         BZ    MAIN0060                          NOTHING DEFINED YET
MAIN0040 DS    0H
         ITRACE ID=KSDS,                                               +
               RDATA1=R7,                                              +
               DATA2=KSDS_DDNAME
         ST    R7,DXD_LAST_DISPLAYED             SAVE ADDR
         ST    R7,0(R4)                          SAVE ADDR
         MVC   MSG01_DSN,KSDS_DSNAME             COPY DATA SET NAME
         LA    R1,1                              CONSTANT 1
         AH    R1,DXD_NBR_DISPLAYED              PLUS TOTAL SO FAR
         STH   R1,DXD_NBR_DISPLAYED              SAVE TOTAL
         LA    R4,4(,R4)                         NEXT IN ADDR TABLE
         A     R6,SPF_VWIDTH                     NEXT LINE
         L     R15,DXD_LINES_REMAINING
         BCTR  R15,0
         ST    R15,DXD_LINES_REMAINING
         LTR   R15,R15
         BNZ   MAIN0050
         B     MAIN0060
MAIN0050 DS    0H
         ICM   R7,15,KSDS_NEXT
         BNZ   MAIN0040
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=DISPLAY
         MVC   SESS_DISP_PANEL,PANEL_DISKLIST    SET PANEL NAME
         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT
         BALR  R14,R15                           DISPLAY
         ITRACE ID=DISP_RC,                                            +
               RDATA1=R15,                                             +
               DATA2=SPF_ZVERB
         LTR   R2,R15                            RC = 0?
         BNZ   MAIN0500                          NO
         CLC   ABEND,SPF_ZCMD                    ABEND
         BE    ABEND000                          YES
         CLC   CANCEL,SPF_ZCMD                   CANCEL?
         BE    MAIN1000                          YES
         CLC   CAN,SPF_ZCMD                      CAN(CEL)?
         BE    MAIN1000                          YES
* ------------------------------------------------------------------- *
*                                                                     *
*        Verify all DSNs                                              *
*          cataloged                                                  *
*          are KSDSes                                                 *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         MVC   DXD_LINES_REMAINING,SPF_VDEPTH    NBR OF LINES
         NI    DXD_FLAGS,255-$DXD_ERROR          RESET FLAG
MAIN0070 DS    0H
         MVC   MSG01_MSG,COMM_BLANKS             RESET MSG
         OC    MSG01_DSN,COMM_BLANKS             TRANSLATE TO UPPER
         CLC   MSG01_DSN,COMM_BLANKS             BLANK?
         BE    MAIN0090                          YES
         MVC   DSINFO_DSN,MSG01_DSN              COPY DSN
         LA    R1,DSINFREQ
         L     R15,V_DISDSINF                    DISDSINF ENTRY POINT
         BALR  R14,R15
         ITRACE ID=DINFO_RC,                                           +
               RDATA1=R15,                                             +
               DATA2=(DSINFO_DATASET_TYPE,1)
         LTR   R15,R15                           OK?
         BNZ   MAIN0080                          NO
         CLI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM
         BE    MAIN0090                          YES
         ITRACE ID=NON_VSAM
         OI    DXD_FLAGS,$DXD_ERROR              SET ERROR FLAG
         MVC   MSG01_MSG(ERR01_L),ERR01
         B     MAIN0090
MAIN0080 DS    0H
         ITRACE ID=DSINFERR
         OI    DXD_FLAGS,$DXD_ERROR              SET ERROR FLAG
         MVC   MSG01_MSG,COMM_MSG_1              COPY ERROR MESSAGE
MAIN0090 DS    0H
         A     R6,SPF_VWIDTH                     NEXT LINE
         L     R15,DXD_LINES_REMAINING
         BCTR  R15,0
         ST    R15,DXD_LINES_REMAINING
         LTR   R15,R15
         BNZ   MAIN0070
         TM    DXD_FLAGS,$DXD_ERROR              ANY ERRORS?
         BO    MAIN0060                          DISPLAY W/MSG(S)
* ------------------------------------------------------------------- *
*                                                                     *
*        Determine if any KSDSes were                                 *
*          updated                                                    *
*          removed                                                    *
*          added                                                      *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R6,SPF_VWIDTH                     SCREEN WIDTH
         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE
         SRL   R6,1                              DIVIDE BY 2
         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR
         MVC   DXD_LINES_REMAINING,SPF_VDEPTH    NBR OF LINES
         L     R4,DXD_KSDS_TABLE                 FIRST KSDS
MAIN0130 DS    0H
         L     R7,0(,R4)                         KSDS BLOCK IF USED
         ITRACE ID=MAIN0130,                                           +
               RDATA1=R4,                                              +
               RDATA2=R7
         OC    MSG01_DSN,COMM_BLANKS             'TRANSLATE'
         CLC   MSG01_DSN,COMM_BLANKS             BLANK?
         BE    MAIN0180                          YES
         LTR   R7,R7                             KSDS BLOCK EXIST?
         BZ    MAIN0150                          NO
         CLC   MSG01_DSN,KSDS_DSNAME             SAME DSN?
         BE    MAIN0220                          YES
MAIN0140 DS    0H
         ITRACE ID=UPDTKSDS
         OI    DXD_FLAGS,$DXD_UPDATE             KSDS HAS BEEN UPDATED
         MVC   KSDS_DSNAME,MSG01_DSN             CHANGE DSN
         B     MAIN0220
MAIN0150 DS    0H
         ITRACE ID=NEW_KSDS
         OI    DXD_FLAGS,$DXD_UPDATE
         GETMAIN RU,                                                   +
               LV=KSDS_DSECT_L,                                        +
               LOC=ANY
NEW      USING KSDS_DSECT,R1
         XC    NEW.KSDS_DSECT(KSDS_DSECT_L),NEW.KSDS_DSECT
         MVC   NEW.KSDS_EYE,KSDS_ID              IDENTIFY BLOCK
         MVC   NEW.KSDS_DSNAME,MSG01_DSN         SET DSN
         MVC   NEW.KSDS_ACB(ACB_L),ACB_I         INITIALIZE ACB
         LA    R7,DXD_KSDS_PREV                  FIRST KSDS
MAIN0160 DS    0H
         ICM   R2,15,KSDS_NEXT                   ANOTHER ON CHAIN?
         BZ    MAIN0170                          YES
         LR    R7,R2                             COPY ADDRESS
         B     MAIN0160
MAIN0170 DS    0H
         ST    R1,KSDS_NEXT                      SET 'NEXT' IN PREVIOUS
         ST    R7,NEW.KSDS_PREV                  SET PREV IN NEW
         OC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED
         BNZ   MAIN0220                          BLOCK PRESENT
         ST    R1,DXD_FIRST_DISPLAYED            SET FIRST ON CHAIN
         B     MAIN0220
         DROP  NEW
MAIN0180 DS    0H
         LTR   R7,R7                             KSDS EXIST?
         BZ    MAIN0220                          NO
         OI    DXD_FLAGS,$DXD_UPDATE             A KSDS WAS UPDATED
         ITRACE ID=DEL_KSDS,                     DELETING A KSDS BLOCK +
               RDATA1=R7,                                              +
               DATA2=KSDS_DDNAME
         ICM   R1,15,KSDS_NEXT                   NEXT KSDS ON CHAIN
         BZ    MAIN0190
NEXT     USING KSDS_DSECT,R1
         MVC   NEXT.KSDS_PREV,KSDS_PREV          SET PREV IN NEXT
         DROP  NEXT
MAIN0190 DS    0H
         ICM   R1,15,KSDS_PREV                   PREVIOUS ON CHAIN
         BZ    MAIN0200                          NO PREVIOUS BLOCK
PREV     USING KSDS_DSECT,R1
         MVC   PREV.KSDS_NEXT,KSDS_NEXT          SET NEXT IN PREVIOUS
MAIN0200 DS    0H
         C     R7,DXD_FIRST_DISPLAYED            FIRST KSDS DISPLAYED?
         BNE   MAIN0210                          NO
         MVC   DXD_FIRST_DISPLAYED,KSDS_NEXT     CHANGE TO NEXT BLOCK
MAIN0210 DS    0H
         ITRACE ID=FREEKSDS,                                           +
               RDATA1=R7
         FREEMAIN RU,                            FREEMAIN KSDS BLOCK   +
               A=(R7),                                                 +
               LV=KSDS_DSECT_L
         XC    0(4,R4),0(R4)                     CLEAR ADDR IN TABLE
MAIN0220 DS    0H
         ITRACE ID=NEXT
         A     R6,SPF_VWIDTH                     NEXT LINE
         LA    R4,4(,R4)                         NEXT IN TABLE
         L     R15,DXD_LINES_REMAINING           LINES REMAINING
         BCTR  R15,0                             MINUS 1
         ST    R15,DXD_LINES_REMAINING           UPDATE NBR REMAINING
         LTR   R15,R15                           ANY LEFT?
         BNZ   MAIN0130                          YES.. LOOP
         TM    DXD_FLAGS,$DXD_UPDATE             ANY UPDATES?
         BO    MAIN0010                          YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   SPF_ZVERB,C'B'                    BOTTOM?
         BE    MAIN0300
         CLI   SPF_ZVERB,C'D'                    DOWN?
         BE    MAIN0320
         CLI   SPF_ZVERB,C'T'                    TOP?
         BE    MAIN0330
         CLI   SPF_ZVERB,C'U'                    UP?
         BE    MAIN0340
         B     MAIN0050
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         ITRACE ID=BOTTOM
         ICM   R1,15,DXD_KSDS_NEXT               FIRST ON CHAIN
TEMP     USING KSDS_DSECT,R1
         BZ    EXIT0000                          SHOULD NOT HAPPEN!
MAIN0310 DS    0H
         LR    R7,R1                             SAVE THIS ADDR
         ICM   R1,15,TEMP.KSDS_NEXT              NEXT KSDS
         BNZ   MAIN0310
         B     MAIN0010                          BUILD DISPLAY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0320 DS    0H
         ITRACE ID=DOWN
         CLI   SPF_ZSCROLLA,C'M'                 MAX?
         BE    MAIN0300                          YES
         L     R7,DXD_LAST_DISPLAYED             LAST ITEM DISPLAYED
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0330 DS    0H
         ITRACE ID=TOP
         L     R7,DXD_KSDS_NEXT                  FIRST DATA ITEM
         B     MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0340 DS    0H
         ITRACE ID=UP
         CLI   SPF_ZSCROLLA,C'M'                 MAX?
         BE    MAIN0330                          YES
         ICM   R1,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY
         BZ    EXIT0000                          SHOULD NOT HAPPEN!
         L     R15,SPF_ZSCROLLN                  LINES TO SCROLL
MAIN0350 DS    0H
         LR    R7,R1                             COPY ADDR
         ICM   R1,15,TEMP.KSDS_PREV              PREVIOUS KSDS
         BZ    MAIN0010
         BCT   R15,MAIN0350                      LOOP
         B     MAIN0010
         DROP  TEMP
* ------------------------------------------------------------------- *
*                                                                     *
*      Replace the existing KSDS chain with the updated chain         *
*                                                                     *
*        Run the new chain                                            *
*                                                                     *
*        Allocate the data sets                                       *
*        OPEN the ACBs                                                *
*                                                                     *
*      If there are any errors,                                       *
*        CLOSE and FREE all data sets on the chain                    *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0500 DS    0H
         ITRACE ID=TERM
         TM    DXD_FLAGS,$DXD_ERROR           ERROR FLAG ON?
         BO    MAIN0700                       YES
         ICM   R7,15,DXD_KSDS_NEXT            FIRST ON NEW CHAIN
         BZ    MAIN0600                       NONE ON CHAIN
         ZAP   DXD_DSECT_NBR,P0               RESET DSECT NBR
MAIN0510 DS    0H
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET DAIR FUNCTION
         MVI   DAIR_OPTS,$DAIR_USE_DD
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         MVC   DAIR_DD,COMM_BLANKS            INIT DD NAME
         AP    DXD_DSECT_NBR,P1               ADD 1 TO DSECT NBR
         MVC   DAIR_DD+3(4),=X'40212020'      COPY EDIT WORD
         ED    DAIR_DD+3(4),DXD_DSECT_NBR     EDIT DSECT NBR
         MVC   DAIR_DD(5),=CL5'DSECT'         SET DD PREFIX
         MVC   KSDS_DDNAME,DAIR_DD            COPY DD NAME
         MVC   DAIR_DSN,KSDS_DSNAME           SET DSN
         MVC   DAIR_MEMBER,COMM_BLANKS        NO MEMBER
         MVC   DAIR_VOLSER,COMM_BLANKS        NO VOLSER
         MVC   DAIR_UNIT,COMM_BLANKS          NO UNIT
         ITRACE ID=ALOC_NEW,                                           +
               DATA1=DAIR_DD
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        ALLOCATE THE KSDS
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   MAIN0530                       NO
         MVC   ACBDDNM,DAIR_DD                SET DD NAME
         ITRACE ID=OPEN_ACB,                                           +
               DATA1=ACBDDNM
         OPEN  (KSDS_ACB,INPUT),              OPEN THE ACB             +
               MODE=31,                                                +
               MF=(E,DISCOMM_OPEN)
         ITRACE ID=OPEN_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   MAIN0540                       NO
         OI    KSDS_FLAGS,$KSDS_OPEN          INDICATE KSDS IS OPEN
MAIN0520 DS    0H
         ICM   R7,15,KSDS_NEXT                NEXT KSDS
         BNZ   MAIN0510
         B     MAIN0600
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0530 DS    0H
         OI    DXD_FLAGS,$DXD_ERROR           ERROR HAS OCCURRED
         CLC   SPF_MSG_1,COMM_BLANKS          ALREADY HAVE A MSG?
         BNE   MAIN0550                       YES
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     MAIN0550
MAIN0540 DS    0H
         OI    DXD_FLAGS,$DXD_ERROR           ERROR HAS OCCURRED
         MVC   COMM_INFO_01(8),KSDS_DDNAME    COPY DDNAME
         MVC   COMM_INFO_02(44),KSDS_DSNAME   COPY DSNAME
         STH   R15,COMM_INFO_03               SAVE OPEN RC
         MVI   COMM_MSG_ID+1,3
         BAL   R5,MSG0000                     BUILD MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
*      An error occurred allocating or OPENing one of the KSDSes      *
*      in the new list.                                               *
*                                                                     *
*      Run the new chain, CLOSE and de-allocate all KSDSes            *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0550 DS    0H
         ITRACE ID=RESETNEW
         ICM   R7,15,DXD_KSDS_NEXT            FIRST KSDS
         BZ    MAIN0550
MAIN0560 DS    0H
         TM    KSDS_FLAGS,$KSDS_OPEN          DATA SET OPEN?
         BNO   MAIN0570                       NO
         ITRACE ID=CLOSE,                                              +
               DATA1=KSDS_DDNAME
         CLOSE KSDS_ACB,                                               +
               MODE=31,                                                +
               MF=(E,DISCOMM_CLOSE)
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0020                        NO
MAIN0570 DS    0H
         ITRACE ID=FREE,                                               +
               DATA1=KSDS_DDNAME
         MVC   DAIR_DD,KSDS_DDNAME            COPY DDNAME
         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT
         BALR  R14,R15                        FREE THE DD
         LR    R1,R7                          COPY ADDRESS
         ICM   R7,15,KSDS_NEXT                NEXT KSDS
         BNZ   MAIN0560                       YES
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
*        All libraries were found and are valid                       *
*                                                                     *
*        Replace old chain with new                                   *
*          Make sure the KSDSes in the old list are CLOSEd            *
*          Free the DSECTs, LABELs, EQUATEs associated                *
*          Free the KSDS block                                        *
*          Copy the address of first KDDS block on new chain          *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0600 DS    0H
         ITRACE ID=SWITCH,                                             +
               DATA1=DISCOMM_KSDS_NEXT,                                +
               DATA2=DXD_KSDS_NEXT
         ICM   R7,15,DISCOMM_KSDS_NEXT        1ST KSDS
         BZ    MAIN0690
MAIN0610 DS    0H
         TM    KSDS_FLAGS,$KSDS_OPEN          DATA SET OPEN?
         BNO   MAIN0620                       NO
         CLOSE KSDS_ACB,                                               +
               MODE=31,                                                +
               MF=(E,DISCOMM_CLOSE)
MAIN0620 DS    0H
         ICM   R5,15,KSDS_DSECT_NEXT          FIRST DSECT
         BZ    MAIN0680
         USING DSECT_DSECT,R5
MAIN0630 DS    0H
         ICM   R4,15,DSECT_LABEL_NEXT         FIRST LABEL
         BZ    MAIN0670
         USING LABEL_DSECT,R4
MAIN0640 DS    0H
         ICM   R3,15,LABEL_EQU_NEXT           FIRST EQU
         BZ    MAIN0660
         USING EQU_DSECT,R3
MAIN0650 DS    0H
         LR    R1,R3                          COPY EQU BLOCK ADDR
         ICM   R3,15,EQU_NEXT                 NEXT EQU
         FREEMAIN RU,                         FREE THIS EQU            +
               A=(1),                                                  +
               LV=EQU_DSECT_L
         LTR   R3,R3                          ANOTHER EQU?
         BNZ   MAIN0650                       YES
MAIN0660 DS    0H
         LR    R1,R4
         ICM   R4,15,LABEL_NEXT               NEXT LABEL
         FREEMAIN RU,                         FREE THIS LABEL          +
               A=(1),                                                  +
               LV=LABEL_DSECT_L
         LTR   R4,R4                          ANOTHER LABEL?
         BNZ   MAIN0640                       YES
MAIN0670 DS    0H
         LR    R1,R5
         ICM   R5,15,DSECT_NEXT               NEXT DSECT
         FREEMAIN RU,                         FREE THIS DSECT          +
               A=(1),                                                  +
               LV=DSECT_DSECT_L
         LTR   R5,R5                          ANOTHER DSECT?
         BNZ   MAIN0630                       YES
MAIN0680 DS    0H
         LR    R1,R7
         ICM   R7,15,KSDS_NEXT                NEXT KSDS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=KSDS_DSECT_L
         LTR   R7,R7                          ANOTHER KSDS?
         BNZ   MAIN0610                       YES
MAIN0690 DS    0H
         MVC   DISCOMM_KSDS_NEXT,DXD_KSDS_NEXT CHANGE KSDS CHAIN
         XC    DXD_KSDS_NEXT,DXD_KSDS_NEXT     RESET DXD CHAIN
         DROP  R3,R4,R5
         B     EXIT0000
* ------------------------------------------------------------------- *
*        User has requested exit with error(s) pending                *
* ------------------------------------------------------------------- *
MAIN0700 DS    0H
         ITRACE ID=PURGE
         MVI   COMM_MSG_ID+1,5
         BAL   R5,MSG0000
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
* ------------------------------------------------------------------- *
*                                                                     *
*        User has requested all changes to be cancelled.              *
*                                                                     *
*        Free any blocks on new chain                                 *
*        Re-allocate and OPEN KSDSes on existing chain                *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=CANCEL
         MVC   SPF_ZCMD,COMM_BLANKS           RESET COMMAND
         ICM   R7,15,DXD_KSDS_NEXT            FIRST ON NEW CHAIN
         BZ    MAIN1020
         XC    DXD_KSDS_NEXT,DXD_KSDS_NEXT    CLEAR FOR NEXT TIME
MAIN1010 DS    0H
         LR    R1,R7                          COPY ADDRESS
         ICM   R7,15,KSDS_NEXT                NEXT KSDS
         ITRACE ID=FREEKSDS,                                           +
               RDATA1=R7,                                              +
               DATA2=KSDS_DDNAME
         FREEMAIN RU,                         FREEMAIN THE BLOCK       +
               A=(1),                                                  +
               LV=KSDS_DSECT_L
         LTR   R7,R7                          ANOTHER ON CHAIN?
         BNZ   MAIN1010                       YES
* ------------------------------------------------------------------- *
*        Run existing chain, allocate and OPEN the KSDSes             *
* ------------------------------------------------------------------- *
MAIN1020 DS    0H
         ITRACE ID=REDO_OLD,                                           +
               DATA1=DISCOMM_KSDS_NEXT
         ICM   R7,15,DISCOMM_KSDS_NEXT
         BZ    EXIT0000
MAIN1030 DS    0H
         ITRACE ID=RE-ALLOC
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET DAIR FUNCTION
         MVI   DAIR_OPTS,$DAIR_USE_DD
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         MVC   DAIR_DD,KSDS_DDNAME            SET DD NAME
         MVC   DAIR_DSN,KSDS_DSNAME           SET DATA SET NAME
         MVC   DAIR_MEMBER,COMM_BLANKS        NO MEMBER
         MVC   DAIR_VOLSER,COMM_BLANKS        NO VOLSER
         MVC   DAIR_UNIT,COMM_BLANKS          NO UNIT
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        ALLOCATE KSDS
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR1000                        NO
         ITRACE ID=RE-OPEN,                                            +
               DATA1=KSDS_DDNAME
         OPEN  KSDS_ACB,                      OPEN THE ACB             +
               MODE=31,                                                +
               MF=(E,DISCOMM_OPEN)
         ITRACE ID=OPEN_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0030                        NO
         OI    KSDS_FLAGS,$KSDS_OPEN          INDICATE KSDS IS OPEN
         ICM   R7,15,KSDS_NEXT                ANOTHER KSDS?
         BNZ   MAIN1030                       YES
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID+1,1                INIT CLOSE FAILED
         MVC   COMM_INFO_01,KSDS_DDNAME       DDNAME
         MVC   COMM_INFO_02,KSDS_DSNAME       DSNAME
         STH   R15,COMM_INFO_03               CLOSE RC
         B     ERR0100
ERR0020  DS    0H
         MVC   COMM_INFO_01,KSDS_DDNAME       DDNAME
         MVC   COMM_INFO_02,KSDS_DSNAME       DSNAME
         STH   R15,COMM_INFO_03               CLOSE RC
         MVI   COMM_MSG_ID+1,2                CLOSING NEW ACB FAILED
         B     ERR0100
ERR0030  DS    0H
         MVC   COMM_INFO_01,KSDS_DDNAME       DDNAME
         MVC   COMM_INFO_02,KSDS_DSNAME       DSNAME
         STH   R15,COMM_INFO_03               CLOSE RC
         MVI   COMM_MSG_ID+1,3                OPEN FAILED
ERR0100  DS    0H
         BAL   R5,MSG0000
         B     ERR1010
ERR1000  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         MVC   COMM_MSG_CSECT,MODID
ERR1010  DS    0H
         MVC   SESS_DISP_PANEL,PANEL_DIS0000  SET PANEL NAME
         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR
         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH
         L     R15,COMM_V_OSDISP
         BALR  R14,R15                        DISPLAY PANEL
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0000  DS    0H
         MVI   COMM_MSG_ID,0
         ITRACE ID=MSG,                                                +
               DATA1=(COMM_MSG_ID,2)
         CLC   SPF_MSG_1,COMM_BLANKS          ALREADY HAVE A MSG?
         BNER  R5                             YES
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         MVC   COMM_MSG_CSECT,MODID
         BR    R5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R0,DXD_KSDS_TABLE_SIZE         ADDR TABLE SIZE
         L     R1,DXD_KSDS_TABLE              ADDR TABLE ADDR
         FREEMAIN RU,                         FREEMAIN ADDR TABLE      +
               A=(1),                                                  +
               LV=(0)
         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670
         L     R14,12(,R13)                   RESTORE REGISTERS         ASE01680
         LR    R15,R2                         SET RC
         LM    R0,R12,20(R13)                 RESTORE REGISTERS         ASE01680
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START      DC   Q(DXDKLIST)
V_DISDSINF     DC   V(DISDSINF)

P0             DC   P'0'
P1             DC   P'1'

KSDS_ID        DC   CL8'KSDS'
ABEND          DC   C'ABEND'
CAN            DC   C'CAN '
CANCEL         DC   C'CANCEL '
PANEL_DISKLIST DC   CL8'DISKLIST'
PANEL_DIS0000  DC   CL8'DIS0000'

ERR01          DC   C'NOT VSAM'
ERR01_L        EQU  *-ERR01

              LTORG


MSG01         DS   0C
              DC   AL1($SCREEN_ATTR_INPUT)
MSG01_DSN     DC   CL44' '
              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)
MSG01_MSG     DC   CL30' '
MSG01_L       EQU  *-MSG01

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDKLIST              DSECT
                      COPY DXDPREF

DXD_KSDS_PREV         DS  A             DUMMY FOR 'PREV' ON CHAIN
DXD_KSDS_NEXT         DS  A             FIRST DATA ITEM ON CHAIN

DXD_FIRST_DISPLAYED   DS  A             FIRST DATA ITEM DISPLAYED
DXD_LAST_DISPLAYED    DS  A             LAST DATA ITEM DISPLAYED

DXD_KSDS_TABLE        DS  A
DXD_KSDS_TABLE_SIZE   DS  F

DXD_LINES_REMAINING   DS  F

DXD_NBR_DISPLAYED     DS  H             NBR OF DATA ITEMS DISPLAYED

DXD_FLAGS             DS  X             FLAGS
$DXD_ERROR            EQU X'80'         .. SERIOUS ERROR
$DXD_UPDATE           EQU X'40'         .. AREA(S) UPDATED

DXD_DSECT_NBR         DS  PL2

                      DAIRREQ  DSECT=NO
                      DSINFREQ DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 IFGACB   AM=VSAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     REGEQU
              END     DISKLIST
