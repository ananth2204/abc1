* ------------------------------------------------------------------- *
*                                                                     *
*  FUNCTION:                                                          *
*      Read in pre-processed DSECTs                                   *
*      Chain USING blocks to DSECT blocks                             *
*                                                                     *
*                                                                     *
*  The disassembler allows DSECTs to be 'pre-processed' by DISASMU1.  *
*  Since the name of a DSECT can be more than 8 characters in length, *
*  a PDS or PDS/E cannot be used.  I chose to use VSAM KSDSs.  The    *
*  record key is "DSECT_NAME+sequence nbr" where DSECT_NAME is the    *
*  DSECT's name and "sequence nbr" is a 4-byte binary sequence number *
*  to make the key for each record unique.  The DSECT itself with     *
*  always have sequence number zero (X'00000000').                    *
*                                                                     *
*  The program does a "read by key" with sequence number zero to      *
*  determine if the DSECT is 'known', and then if found, read         *
*  forward sequentially until the end of the file or the next         *
*  record that has sequence number zero is found.                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DISDSECT CSECT
DISDSECT AMODE 31
DISDSECT RMODE ANY
         USING DISDSECT,R15
         B     DSCT0000                          SKIP EYECATCHER
MODID    DC    CL8'DISDSECT'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
DSCT0000 DS    0H
         STM   R14,R12,12(R13)                   SAVE REGS
         LR    R10,R15                           SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISDSECT,R10
         USING DISCOMM,R9
         L     R15,SESS_DXD_ADDR                 WORK AREA
         A     R15,DXD_START                     PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         USING DXDDSECT,R13
         USING IFGRPL,DXD_RPL
* ------------------------------------------------------------------- *
*        Housekeeping                                                 *
* ------------------------------------------------------------------- *
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         MVI   DXD_RC,0
         LA    R4,DXD_RPL
         LA    R3,PPD_KEY
         LA    R2,PPD
         MVC   DXD_MODCB(MODCB1_L),MODCB1_I
         MODCB RPL=(R4),                                               +
               AREA=(R2),                                              +
               AREALEN=PPD_L,                                          +
               ARG=(R3),                                               +
               KEYLEN=L'PPD_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE),                                +
               MF=(G,DXD_MODCB)
* ------------------------------------------------------------------- *
*        Determine if DSECT was in ASM,START/ASM,END                  *
* ------------------------------------------------------------------- *
DSCT0010 DS    0H
         ICM   R3,15,DISCOMM_USING_NEXT          FIRST USING BLOCK
         USING USING_DSECT,R3                    DEFINE BASE
         BZ    EXIT0000                          NOTHING ON CHAIN
         XC    USING_DSECT_ADDR,USING_DSECT_ADDR
         XC    USING_LABEL_ADDR,USING_LABEL_ADDR
DSCT0020 DS    0H
         ITRACE ID=FINDDSCT,                     SEARCHING FOR A DSECT +
               RDATA1=R3,                                              +
               DATA2=USING_DSECT_NAME
         ICM   R2,15,DISCOMM_DSECT_NEXT          FIRST DSECT ENTRY
         USING DSECT_DSECT,R2                    DEFINE BASE
         BZ    DSCT0040                          NO CHAIN
DSCT0030 DS    0H
         BZ    DSCT0040                          NOT ON EXISTING CHAIN
         ITRACE ID=TESTDSCT,                     CHECKING A DSECT NAME +
               DATA1=DSECT_NAME                  .. DSECT'S NAME
         CLC   USING_DSECT_NAME,DSECT_NAME       DSECT FOUND?
         BE    DSCT0170                          YES
         ICM   R2,15,DSECT_NEXT                  NEXT DSECT BLOCK
         BNZ   DSCT0030                          LOOP
* ------------------------------------------------------------------- *
*                                                                     *
*        The DSECT was not processed via ASM,START/ASM,END.           *
*                                                                     *
*        Search the DSECT DDs.                                        *
*                                                                     *
* ------------------------------------------------------------------- *
DSCT0040 DS    0H
         ITRACE ID=SRCHKSDS                      CHECKING PRE-PROCESSED
         XC    PPD_SEQ,PPD_SEQ                   SET SEQ NBR TO ZERO
         MVC   PPD_NAME,USING_DSECT_NAME         COPY DSECT NAME
         ICM   R5,15,DISCOMM_KSDS_NEXT           ANY DSECT KSDS?
         BZ    ERR0010                           NO
         USING KSDS_DSECT,R5                     DEFINE BASE
DSCT0050 DS    0H
         LA    R2,KSDS_ACB                       ACB'S ADDRESS
         MVC   DXD_MODCB(MODCB2_L),MODCB2_I
         MODCB RPL=(R4),                         UPDATE ACB ADDR IN RPL+
               ACB=(R2),                                               +
               MF=(G,DXD_MODCB)
         LTR   R15,R15
         BNZ   ERR0020
         ITRACE ID=READKSDS,                                           +
               DATA1=KSDS_DDNAME,                                      +
               DATA2=USING_DSECT_NAME
         GET   RPL=(R4)                          READ KSDS
         ITRACE ID=GET_RC,                                             +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         LTR   R15,R15                           SUCCESSFUL?
         BZ    DSCT0060                          YES..
         ICM   R5,15,KSDS_NEXT                   NEXT
         BNZ   DSCT0050
         B     ERR0010                           DSECT NOT FOUND
DSCT0060 DS    0H
         SR    R6,R6                             NO LABEL SO FAR
         SR    R7,R7                             NO EQUATE SO FAR
         USING LABEL_DSECT,R6
         USING EQU_DSECT,R7
         B     DSCT0080
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DSCT0070 DS    0H
         ICM   R1,15,PPD_SEQ                     SEQ NBR
         LA    R1,1(,R1)                         PLUS 1
         STCM  R1,15,PPD_SEQ                     UPDATE SEQ NBR
         ITRACE ID=GET,                                                +
               DATA1=PPD_KEY+0,                                        +
               DATA2=PPD_SEQ
         GET   RPL=(R4)                          READ NEXT RECORD
         ITRACE ID=GET_RC,                                             +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         LTR   R15,R15                           SUCCESSFUL?
         BNZ   DSCT0170                          NO
DSCT0080 DS    0H
         ITRACE ID=DATA,                                               +
               DATA1=PPD_DATA+8,                                       +
               DATA2=PPD_DATA+12
         CLC   DSECT_ID,PPD_DATA+8               DSECT?
         BE    DSCT0090                          YES
         CLC   LABEL_ID,PPD_DATA+8               LABEL?
         BE    DSCT0110                          YES
         CLC   EQU_ID,PPD_DATA+8                 EQUATE?
         BE    DSCT0130                          YES
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
*        New DSECT found                                              *
*                                                                     *
*     Add the DSECT, LABELs, EQUs to the Pre-processed DSECTs chain   *
*                                                                     *
* ------------------------------------------------------------------- *
DSCT0090 DS    0H
         ITRACE ID=DSECT,                                              +
               DATA1=PPD_DATA+12,                                      +
               DATA2=PPD_DATA+20
         GETMAIN RU,                             GETMAIN DSECT BLOCK   +
               LV=DSECT_DSECT_L,                                       +
               LOC=ANY
         LR    R2,R1                             COPY ADDRESS
         ITRACE ID=NEWDSECT,                                           +
               RDATA1=R2
NEW      USING DSECT_DSECT,R2
         MVC   NEW.DSECT_DSECT(DSECT_DSECT_L),PPD_DATA
         ICM   R1,15,KSDS_DSECT_NEXT
         BZ    DSCT0100
NEXT     USING DSECT_DSECT,R1
         ST    R2,NEXT.DSECT_PREV
DSCT0100 DS    0H
         MVC   NEW.DSECT_NEXT,KSDS_DSECT_NEXT    CHAIN EXISTING TO NEW
         XC    NEW.DSECT_PREV,NEW.DSECT_PREV
         ST    R2,KSDS_DSECT_NEXT
         XC    DSECT_LABEL_PREV,DSECT_LABEL_PREV INIT LABEL BLOCK ADDR  RESS
         XC    DSECT_LABEL_NEXT,DSECT_LABEL_NEXT INIT LABEL BLOCK ADDR  RESS
         LA    R6,DSECT_LABEL_PREV               NO LABEL SO FAR
         SR    R7,R7                             NO EQUATE SO FAR
         B     DSCT0070
* ------------------------------------------------------------------- *
*                                                                     *
*        New LABEL                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DSCT0110 DS    0H
         ITRACE ID=LABEL,                                              +
               DATA1=PPD_DATA+12,                                      +
               DATA2=PPD_DATA+20
         GETMAIN RU,                                                   +
               LV=LABEL_DSECT_L,                                       +
               LOC=ANY
         ITRACE ID=NEWLABEL,                                           +
               RDATA1=R1
NEW      USING LABEL_DSECT,R1
         ST    R1,LABEL_NEXT
         LR    R15,R6
         LR    R6,R1                             COPY STORAGE ADDRESS
         MVC   LABEL_DSECT(LABEL_DSECT_L),PPD_DATA
         ST    R15,LABEL_PREV
         XC    LABEL_EQU_PREV,LABEL_EQU_PREV     CLEAR EQUATE ADDRESS
         XC    LABEL_EQU_NEXT,LABEL_EQU_NEXT     CLEAR EQUATE ADDRESS
         LA    R7,LABEL_EQU_PREV
         B     DSCT0070
         DROP  NEW
* ------------------------------------------------------------------- *
*                                                                     *
*        New EQU                                                      *
*                                                                     *
* ------------------------------------------------------------------- *
DSCT0130 DS    0H
         ITRACE ID=EQU,                                                +
               DATA1=PPD_DATA+12,                                      +
               DATA2=PPD_DATA+20
         GETMAIN RU,                                                   +
               LV=EQU_DSECT_L,                                         +
               LOC=ANY
         ITRACE ID=NEWEQU,                                             +
               RDATA1=R1
NEW      USING EQU_DSECT,R1
         ST    R1,EQU_NEXT
         LR    R15,R7                            SAVE PREV ADDR
         LR    R7,R1                             COPY NEW BLOCK ADDR
         MVC   EQU_DSECT(EQU_DSECT_L),PPD_DATA
         ST    R15,EQU_PREV
         XC    EQU_NEXT,EQU_NEXT
         B     DSCT0070                          READ NEXT RECORD
         DROP  R6,R7,NEW
* ------------------------------------------------------------------- *
*                                                                     *
*        The referenced DSECT has been found                          *
*                                                                     *
* ------------------------------------------------------------------- *
DSCT0170 DS    0H
         ITRACE ID=DSCTFND,                      DSECT LOCATED         +
               DATA1=DSECT_NAME,                 .. DSECT NAME         +
               RDATA2=R2                         .. DSECT BLOCK ADDR
         ST    R2,USING_DSECT_ADDR               CHAIN TO USING BLOCK
         XC    USING_DISP,USING_DISP             SET DISP TO ZERO
         OC    USING_DSECT_LABEL,USING_DSECT_LABEL
         BZ    DSCT0210                          YES
         CLC   USING_DSECT_LABEL,COMM_BLANKS     LABEL BLANK?
         BE    DSCT0210                          YES
         ITRACE ID=FINDLABL,                                           +
               DATA1=USING_DSECT_LABEL+0,                              +
               DATA2=USING_DSECT_LABEL+8
         ICM   R8,15,DSECT_LABEL_NEXT            FIRST LABEL
         USING LABEL_DSECT,R8                    DEFINE BASE
         BZ    DSCT0190                          NO LABELS
DSCT0180 DS    0H
         ITRACE ID=CHK_LABL,                                           +
               DATA1=LABEL_NAME+0,                                     +
               DATA2=LABEL_NAME+8
         CLC   LABEL_NAME,USING_DSECT_LABEL      LABEL LOCATED?
         BE    DSCT0200                          YES
         ICM   R8,15,LABEL_NEXT                  NEXT LABEL
         BNZ   DSCT0180                          LOOP
DSCT0190 DS    0H
         ITRACE ID=NOT_FND
         MVC   COMM_INFO_01(63),USING_DSECT_LABEL    COPY LABEL NAME
         MVC   COMM_INFO_02(63),USING_DSECT_NAME     COPY DSECT NAME
         MVI   COMM_MSG_ID+1,2
         BAL   R1,MSG0000
         MVI   DXD_RC,8                          SET RC
         B     DSCT0210
DSCT0200 DS    0H
         ITRACE ID=LABLFND,                                            +
               RDATA1=R8
         ST    R8,USING_LABEL_ADDR               SET LABEL BLOCK ADDR
         MVC   USING_DISP,LABEL_DISP             SET DISP TO LABEL
         B     DSCT0210                          PROCESS NEXT USING
DSCT0210 DS    0H
         ITRACE ID=NEXTUSNG,                                           +
               RDATA1=R3,                                              +
               DATA2=USING_NEXT
         ICM   R3,15,USING_NEXT                  NEXT USING BLOCK
         BNZ   DSCT0020                          LOOP
         B     EXIT0000                          ALL DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0000  DS    0H
         MVC   COMM_MSG_CSECT,MODID              SET CSECT NAME
         MVI   COMM_MSG_ID,0
         L     R15,COMM_V_OSMSG                  OSMSG ENTRY POINT
         BALR  R14,R15                           BUILD MESSAGE(S)
         L     R14,COMM_OSSPFD
         USING OSSPFD,R14
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         BR    R1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   COMM_INFO_01(63),USING_DSECT_NAME SET DSECT'S NAME
         MVI   COMM_MSG_ID+1,3
         BAL   R1,MSG0000
         MVI   DXD_RC,8                          SET RC
         B     EXIT0000                          AND EXIT
ERR0020  DS    0H
         ITRACE ID=MODCB1E,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         DC    H'2'
ERR0030  DS    0H
         ITRACE ID=MODCB2E,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         DC    H'3'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         SR    R15,R15                                                  ASE01690
         IC    R15,DXD_RC                        SET RC
         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670
         L     R14,12(,R13)                      RESTORE REGISTER 14    ASE01680
         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680
         BR    R14                               RETURN TO CALLER       ASE01700
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
DXD_START      DC    Q(DXDDSECT)

MODCB1_I MODCB RPL=*,                                                  +
               ACB=*,                                                  +
               AREA=*,                                                 +
               AREALEN=1,                                              +
               ARG=*,                                                  +
               KEYLEN=1,                                               +
               OPTCD=(KEY,KGE,DIR,SYN,MVE),                            +
               MF=L
MODCB1_L EQU  *-MODCB1_I

MODCB2_I MODCB RPL=*,                                                  +
               ACB=*
MODCB2_L EQU  *-MODCB2_I

DSECT_ID       DC    CL8'DSECT'
LABEL_ID       DC    CL8'LABEL'
EQU_ID         DC    CL8'EQU'
               LTORG
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DXDDSECT       DSECT
               COPY  DXDPREF

DXD_RPL        DS    (RPL_L)X

DXD_MODCB      DS    (MODCB1_L)X

DXD_RC         DS    X

               COPY  PPDDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               IFGRPL   AM=VSAM
RPL_L          EQU      *-IFGRPL
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
               COPY     REGEQU
               END      DISDSECT
