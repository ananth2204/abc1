* -------------------------------------------------------------------*
*                                                                    *
*  Module name: DISGEN                                               *
*                                                                    *
*  Function:                                                         *
*   Generate source code                                             *
*                                                                    *
*                                                                    *
*  Output data set name is in DISCOMM_OUTPUT_DSN.  DISMAIN will      *
*  have already verified the data set does exist and is fixed        *
*  or fixed blocked with LRECL=80.  The DCB is DISPUNCH_DCB.         *
*  The DCB is already open.                                          *
*                                                                    *
* -------------------------------------------------------------------*
DISGEN   CSECT
DISGEN   AMODE 31
DISGEN   RMODE ANY
         USING DISGEN,R15
         B     MOD0000                        SKIP EYECATCHER
MODID    DC    CL8'DISGEN'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISGEN,R10
         USING DISCOMM,R9
         L     R15,SESS_DXD_ADDR              WORK AREA
         A     R15,DXD_START                  PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                        SET SAVE AREA ADDRESS
         USING DXDGEN,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         MVC   DISCOMM_SOURCE(DISCOMM_SOURCE_L),COMM_BLANKS
         MVC   DXD_EDITWORD_FILL,COMM_BLANKS
* ------------------------------------------------------------------- *
*        RESET                                                        *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         ICM   R7,15,DISCOMM_ALL_AREA_NEXT    1ST DATA/INSTR BLOCK
         BZ    INIT0030                       NO AREAS
         USING AREA_DSECT,R7
         OC    AREA_BEGIN,AREA_BEGIN          DISP ZERO?
         BZ    INIT0020                       YES
         DC    H'0'
INIT0020 DS    0H
         NI    AREA_FLAGS,255-$AREA_LABEL_GENNED
         ICM   R7,15,AREA_NEXT                NEXT AREA
         BNZ   INIT0020
         DROP  R7
INIT0030 DS    0H
         ICM   R5,15,DISCOMM_BASE_NEXT        1ST BASE
         BZ    INIT0050
         USING BASE_DSECT,R5
INIT0040 DS    0H
         MVI   BASE_FLAGS,0                   RESET FLAGS
         ICM   R5,15,BASE_NEXT                NEXT BASE
         BNZ   INIT0040
* ------------------------------------------------------------------- *
*        Reset flags in USING blocks                                  *
* ------------------------------------------------------------------- *
INIT0050 DS    0H
         ICM   R5,15,DISCOMM_USING_NEXT       FIRST USING
         BZ    INIT0070
         USING USING_DSECT,R5
INIT0060 DS    0H
         NI    USING_FLAG,255-$USING_GENNED-$DROP_GENNED
         ICM   R5,15,USING_NEXT
         BNZ   INIT0060
* ------------------------------------------------------------------- *
*        Generate CSECT statement                                     *
* ------------------------------------------------------------------- *
INIT0070 DS    0H
         DS    0H
         MVC   DISCOMM_SOURCE_LABEL(L'DISCOMM_CSECT),DISCOMM_CSECT
         MVC   DISCOMM_SOURCE_OPCODE,OP_CSECT
         L     R15,V_DISOUT
         BALR  R14,R15
* ------------------------------------------------------------------- *
*        Generate ENTRY statements                                    *
* ------------------------------------------------------------------- *
GEN0010  DS    0H
         ICM   R7,15,DISCOMM_ESD_NEXT         1ST ESD
         BZ    GEN0040
         USING ESD_DSECT,R7
GEN0020  DS    0H
         CLC   =C'LD',ESD_TYPE                'LD'?
         BNE   GEN0030                        NO
         MVC   DISCOMM_SOURCE_OPCODE,OP_ENTRY
         MVC   DISCOMM_SOURCE_OPERAND1(L'ESD_NAME),ESD_NAME
         L     R15,V_DISOUT
         BALR  R14,R15
GEN0030  DS    0H
         ICM   R7,15,ESD_NEXT
         BNZ   GEN0020
         DROP  R7
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
*        Top of generation loop                                       *
*                                                                     *
*   All object code will be described by AREA blocks.                 *
*                                                                     *
*   R7   AREA   block                                                 *
*   R6   LABEL  block                                                 *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0040  DS    0H
         ICM   R7,15,DISCOMM_ALL_AREA_NEXT       1ST DATA/INSTR BLOCK
         BNZ   GEN0050
         USING AREA_DSECT,R7
GEN0050  DS    0H
         ITRACE ID=GEN0050,                                            +
               DATA1=AREA_BEGIN,                                       +
               DATA2=AREA_END
         ICM   R6,15,AREA_LABEL                  LABEL BLOCK ADDRESS?
         BZ    GEN0100                           NO
         USING LABEL_DSECT,R6
GEN0060  DS    0H
         TM    AREA_FLAGS,$AREA_LABEL_GENNED     LABEL GENNED?
         BO    GEN0100                           YES
         MVC   DISCOMM_SOURCE_LABEL,LABEL_NAME   COPY LABEL
         MVC   DISCOMM_SOURCE_OPCODE,OP_DS       SET OPCODE
         MVC   DISCOMM_SOURCE_OPERAND1(2),=C'0C' USE "0C" ON DATA AREAS
         CLI   AREA_TYPE,$AREA_DATA              DATA LABEL?
         BE    GEN0070                           YES
         MVC   DISCOMM_SOURCE_OPERAND1(2),=C'0H' USE "0H'               S
GEN0070  DS    0H
         UNPK  DISCOMM_SOURCE_DISP(9),AREA_BEGIN(5)
         TR    DISCOMM_SOURCE_DISP,COMM_HEXCHAR
         MVI   DISCOMM_SOURCE_DISP+8,C' '
         L     R15,V_DISOUT
         BALR  R14,R15
GEN0080  DS    0H
         ICM   R6,15,LABEL_NEXT                  ANOTHER LABEL HERE?
         BNZ   GEN0060                           YES
         OI    AREA_FLAGS,$AREA_LABEL_GENNED     SET FLAG
* ------------------------------------------------------------------- *
*        Generate USING or DROP statements                            *
* ------------------------------------------------------------------- *
GEN0100  DS    0H
         ICM   R5,15,DISCOMM_USING_NEXT       1ST USING
         USING USING_DSECT,R5
         BZ    GEN0280                        NO USINGS
GEN0110  DS    0H
         ITRACE ID=USING,                                              +
               DATA1=(AREA_BEGIN,4),                                   +
               DATA2=(USING_BEGIN,4)
         CLC   AREA_BEGIN,USING_BEGIN         AT OR ABOVE THIS AREA?
         BL    GEN0270                        NO
         TM    USING_FLAG,$USING_GENNED       USING ALREADY GENNED?
         BO    GEN0220                        YES
         ITRACE ID=GEN_USNG,                                           +
               DATA1=(USING_BEGIN,4),                                  +
               DATA2=(USING_REGISTER,4)
         OI    USING_FLAG,$USING_GENNED       SET FLAG
         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?
         BE    GEN0200                        YES
         MVC   DISCOMM_SOURCE_LABEL,USING_NAME
         LA    R1,DISCOMM_SOURCE_LABEL
         BAL   R15,SCAN0000                   FIND END OF NAME
         LA    R0,DISCOMM_SOURCE_LABEL+7
         CR    R1,R0                          BEYOND 8 BYTE LABEL?
         BH    GEN0210                        YES.. LEAVE ADDR ALONE
GEN0200  DS    0H
         LA    R1,DISCOMM_SOURCE_OPCODE       SET OUTPUT ADDRESS
GEN0210  DS    0H
         MVC   0(L'OP_USING,R1),OP_USING      SET OPCODE
         LA    R1,L'OP_USING+1(,R1)           UPDATE OUTPUT ADDRESS
         B     GEN0230
GEN0220  DS    0H
         ITRACE ID=DROP,                                               +
               DATA1=(USING_END,4),                                    +
               DATA2=(AREA_END,4)
         CLC   AREA_END,USING_END             AT OR ABOVE END OF AREA?
         BL    GEN0270                        NO
         TM    USING_FLAG,$DROP_GENNED        DROP ALREADY GENNED?
         BO    GEN0270                        YES
         ITRACE ID=GEN_DROP
         OI    USING_FLAG,$DROP_GENNED        SET FLAG
         MVC   DISCOMM_SOURCE_OPCODE,OP_DROP  SET OPCODE
         LA    R1,DISCOMM_SOURCE_OPERAND1
         CLC   USING_NAME,COMM_BLANKS         USING NAME?
         BE    GEN0250                        NO
         MVC   DISCOMM_SOURCE_OPERAND1(L'USING_NAME),USING_NAME
         B     GEN0260
GEN0230  DS    0H
         MVC   0(L'USING_DSECT_LABEL,R1),USING_DSECT_LABEL
         CLC   USING_DSECT_LABEL,COMM_BLANKS  LABEL NAME?
         BNE   GEN0240                        YES
         MVC   0(L'USING_DSECT_NAME,R1),USING_DSECT_NAME
GEN0240  DS    0H
         BAL   R15,SCAN0000                   FIND END OF NAME
         MVI   0(R1),C','                     INSERT COMMA
GEN0250  DS    0H
         MVC   1(3,R1),USING_CHAR_REGISTER    COPY REGISTER NUMBER
GEN0260  DS    0H
         L     R15,V_DISOUT
         BALR  R14,R15
GEN0270  DS    0H
         ITRACE ID=NEXTUSNG
         ICM   R5,15,USING_NEXT               NEXT USING
         BNZ   GEN0110
         DROP  R5
* ------------------------------------------------------------------- *
*        Generate USING or DROP for BASE statements                   *
* ------------------------------------------------------------------- *
GEN0280  DS    0H
         ICM   R5,15,DISCOMM_BASE_NEXT        1ST BASE
         BZ    GEN0380
         USING BASE_DSECT,R5
GEN0290  DS    0H
         ITRACE ID=BASE,                                               +
               DATA1=BASE_BEGIN,                                       +
               DATA2=AREA_BEGIN
         CLC   BASE_BEGIN,AREA_BEGIN          BASE BELOW THIS AREA
         BH    GEN0370                        YES
         TM    BASE_FLAGS,$BASE_GENNED        USING GENNED?
         BO    GEN0360                        YES
         ITRACE ID=BASEUSNG,                                           +
               DATA1=BASE_BEGIN,                                       +
               DATA2=AREA_BEGIN
         OI    BASE_FLAGS,$BASE_GENNED        SET FLAG
         MVC   DISCOMM_SOURCE_OPCODE,OP_USING
         MVC   DISCOMM_SOURCE_OPERAND1(L'DISCOMM_CSECT),DISCOMM_CSECT
         LA    R1,DISCOMM_SOURCE_OPERAND1
         BAL   R15,SCAN0000                   BLANK?
         ICM   R0,15,BASE_DISP                DISP BASE REFERS TO
         BZ    GEN0350
         MVI   0(R1),C'+'                     INSERT A PLUS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_EDITWORD,EDITWORD          INITIALIZE EDIT WORD
         ED    DXD_EDITWORD,COMM_DWORD+4      EDIT DISP
         LA    R2,DXD_EDITWORD
GEN0320  DS    0H
         CLI   0(R2),C' '                     BLANK?
         BNE   GEN0330                        NO
         LA    R2,1(,R2)                      NEXT
         B     GEN0320
GEN0330  DS    0H
         MVC   1(8,R1),0(R2)                  COPY DISP
         BAL   R15,SCAN0000                   FIND BLANK
GEN0350  DS    0H
         MVI   0(R1),C','
         MVI   1(R1),C'R'
         SR    R2,R2
         IC    R2,BASE_REGISTER               BASE
         SLL   R2,1                           MULTIPLY BY 2
         LA    R2,REG_NAMES(R2)
         MVC   2(2,R1),0(R2)
         L     R15,V_DISOUT
         BALR  R14,R15
         B     GEN0370
GEN0360  DS    0H
         CLC   BASE_END,AREA_END              ABOVE THIS AREA
         BE    GEN0370                        NO
         BH    GEN0370                        NO
         TM    BASE_FLAGS,$BASE_DROPPED       DROPPED?
         BO    GEN0370                        YES
         ITRACE ID=BASEDROP,                                           +
               DATA1=BASE_BEGIN,                                       +
               DATA2=AREA_BEGIN
         OI    BASE_FLAGS,$BASE_DROPPED       SET FLAG
         MVC   DISCOMM_SOURCE_OPCODE,OP_DROP
         MVI   DISCOMM_SOURCE_OPERAND1,C'R'
         SR    R2,R2
         IC    R2,BASE_REGISTER               BASE
         SLL   R2,1                           MULTIPLY BY 2
         LA    R2,REG_NAMES(R2)
         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R2)
         L     R15,V_DISOUT
         BALR  R14,R15
GEN0370  DS    0H
         ICM   R5,15,BASE_NEXT
         BNZ   GEN0290
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        R7    AREA base                                              *
*        R5    Address of instruction or data                         *
*        R4    OPCODE base                                            *
*        R3    FORMAT base                                            *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0380  DS    0H
         ITRACE ID=GENAREA,                                            +
               DATA1=AREA_BEGIN,                                       +
               DATA2=0(R7)
         MVC   DISCOMM_GEN_LENGTH,AREA_LENGTH SET LENGTH
         ICM   R5,15,AREA_BEGIN               DISP TO OBJECT CODE
         A     R5,DISCOMM_CSECT_TEXT          PLUS TEXT BASE
         CLI   AREA_TYPE,$AREA_DATA           AT A DATA AREA?
         BE    GEN0390                        YES
         CLI   AREA_TYPE,$AREA_INSTRUCTION    AT AN INSTRUCTION?
         BE    GEN0400                        YES
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0390  DS    0H
         ITRACE ID=GEN_DC
         L     R4,DISCOMM_OPCODE_TABLE_ADDR   OPCODE TABLE
         L     R4,0(R4)                       DC ENTRY
         USING OPCODE_DSECT,R4
         L     R15,V_GENDC                    GENDC ENTRY POINT
         BALR  R14,R15                        GENERATE DC
         B     GEN0500
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0400  DS    0H
         ICM   R5,15,AREA_BEGIN               INSTRUCTION DISP
         ST    R5,DISCOMM_GEN_DISP            SET GEN DISP
         A     R5,DISCOMM_CSECT_TEXT          PLUS TEXT BASE
         SR    R2,R2
         IC    R2,0(R5)                       OPCODE
         SLL   R2,2                           MULTIPLY BY 4
         A     R2,DISCOMM_OPCODE_TABLE_ADDR   PLUS OPCODE TABLE BASE
         L     R4,0(R2)                       OPCODE ENTRY
         ITRACE ID=GEN_INST,                                           +
               RDATA1=R4,                                              +
               DATA2=(0(R5),1)
         ICM   R15,15,OPCODE_EXIT             MODIFICATION EXIT?
         BZ    GEN0410                        NO
         ST    R4,DXD_EXIT_PARM_1             OPCODE ENTRY ADDR
         ST    R5,DXD_EXIT_PARM_2             INSTRUCTION TEXT ADDR
         LA    R1,DXD_EXIT_PARMS
         ITRACE ID=CALLEXIT,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15
         ITRACE ID=EXIT_X,                                             +
               DATA1=(OPCODE_MNEMONIC,5)
GEN0410  DS    0H
         SR    R1,R1
         ICM   R1,3,OPCODE_LENGTH             INSTRUCTION LENGTH
         BCTR  R1,0
         XC    COMM_INFO_01(8),COMM_INFO_01
         EX    R1,OP_MVC                      COPY INSTRUCTION TEXT
         ITRACE ID=OPCODE,                                             +
               RDATA1=R4,                                              +
               DATA2=COMM_INFO_01
         LA    R3,FORMAT_TABLE
         USING FORMAT_DSECT,R3
GEN0420  DS    0H
         CLC   FORMAT_FORMAT,OPCODE_FORMAT    LOCATED FORMAT?
         BE    GEN0430
         LA    R3,FORMAT_L(,R3)               NEXT FORMAT
         CLI   0(R3),X'FF'                    END OF TABLE?
         BNE   GEN0420                        NO
         DC    H'0'
GEN0430  DS    0H
         ICM   R15,15,FORMAT_ADDR
         ITRACE ID=FORMAT,                                             +
               RDATA1=R3,                                              +
               RDATA2=R15
         BALR  R14,R15                        CALL SOURCE FORMATTER
         ITRACE ID=FORMAT_X
GEN0440  DS    0H
         SR    R15,R15
* ------------------------------------------------------------------- *
*                                                                     *
*       Generate the displacement, and the object text for the        *
*       current instruction or DC.                                    *
*                                                                     *
*       Recompute the text address (R5)                               *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0500  DS    0H
         STC   R15,DXD_GEN_RC
         ITRACE ID=GEN_RC,                                             +
               RDATA1=R15
         L     R5,DISCOMM_GEN_DISP
         A     R5,DISCOMM_CSECT_TEXT
         ICM   R1,15,DISCOMM_GEN_LENGTH       LENGTH
         BZ    GEN0520                        NO OBJECT AT THIS POINT
         BCTR  R1,0
         EX    R1,MVC_01
         CLI   AREA_TYPE,$AREA_INSTRUCTION    AN INSTRUCTION?
         BNE   GEN0510                        NO
         UNPK  DXD_UNPACK_OUT_1(5),DXD_UNPACK_IN+0(3)
         UNPK  DXD_UNPACK_OUT_2(5),DXD_UNPACK_IN+2(3)
         UNPK  DXD_UNPACK_OUT_3(5),DXD_UNPACK_IN+4(3)
         UNPK  DXD_UNPACK_OUT_4(5),DXD_UNPACK_IN+6(3)
         TR    DXD_UNPACK_OUT_1,COMM_HEXCHAR
         TR    DXD_UNPACK_OUT_2,COMM_HEXCHAR
         TR    DXD_UNPACK_OUT_3,COMM_HEXCHAR
         TR    DXD_UNPACK_OUT_4,COMM_HEXCHAR
         MVI   DXD_BLANK_1,C' '
         MVI   DXD_BLANK_2,C' '
         MVI   DXD_BLANK_3,C' '
         LA    R2,LENGTH_TABLE(R1)
         IC    R1,0(R2)
         EX    R1,MVC_02
         B     GEN0520
GEN0510  DS    0H
         UNPK  DXD_UNPACK_OUT+0(9),DXD_UNPACK_IN+0(5)
         UNPK  DXD_UNPACK_OUT+8(9),DXD_UNPACK_IN+4(5)
         TR    DXD_UNPACK_OUT(16),COMM_HEXCHAR
         ICM   R1,15,DISCOMM_GEN_LENGTH
         SLL   R1,1
         BCTR  R1,0
         EX    R1,MVC_02
GEN0520  DS    0H
         TM    OPCODE_FLAGS,$OPCODE_CCA+$OPCODE_CCC+$OPCODE_CCL
         BZ    GEN0530
         MVC   DISCOMM_CC,OPCODE_FLAGS        SAVE CONDITION CODE TYPE
         NI    DISCOMM_CC,$OPCODE_CCA+$OPCODE_CCC+$OPCODE_CCL
         ITRACE ID=SAVE_CC,                                            +
               DATA1=(DISCOMM_CC,1)
GEN0530  DS    0H
         UNPK  DISCOMM_SOURCE_DISP(9),DISCOMM_GEN_DISP(5)
         TR    DISCOMM_SOURCE_DISP,COMM_HEXCHAR
         MVI   DISCOMM_SOURCE_DISP+8,C' '
         MVC   DISCOMM_SOURCE_OPCODE,OPCODE_MNEMONIC
         L     R15,V_DISOUT
         BALR  R14,R15
         CLI   DXD_GEN_RC,0                   AREA ALL PROCESSED?
         BNE   GEN0050                        NO
         ITRACE ID=NEXTAREA,                                           +
               DATA1=AREA_NEXT
         ICM   R7,15,AREA_NEXT                NEXT AREA
         BNZ   GEN0050                        PROCESS THIS AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ICM   R7,15,DISCOMM_ASM_NEXT         ANY ASSEMBLER SOURCE?
         BZ    GEN0610                        NO
         USING ASM_DSECT,R7
GEN0600  DS    0H
         L     R15,V_DISOUT
         BALR  R14,R15
         ICM   R7,15,ASM_NEXT                 MORE ASSEMBLER SOURCE
         BNZ   GEN0600                        YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0610  DS    0H
         ITRACE ID=GEN_END
         MVC   DISCOMM_SOURCE_OPCODE,OP_END
         MVC   DISCOMM_SOURCE_OPERAND1(L'DISCOMM_CSECT),DISCOMM_CSECT
         L     R15,V_DISOUT
         BALR  R14,R15
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SCAN0000 DS    0H
         CLI   0(R1),C' '
         BER   R15
         LA    R1,1(,R1)
         B     SCAN0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        RETURN CODE               ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MVC_01   MVC   DXD_UNPACK_IN(0),0(R5)
MVC_02   MVC   DISCOMM_SOURCE_HEX_1(0),DXD_UNPACK_OUT
OP_MVC   MVC   COMM_INFO_01(0),0(R5)          COPY INSTRUCTION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START           DC   Q(DXDGEN)
V_DISOUT            DC   V(DISOUT)
V_GENDC             DC   V(GENDC)
OP_CSECT            DC   CL6'CSECT'
OP_END              DC   CL6'END'
OP_ENTRY            DC   CL6'ENTRY'
OP_USING            DC   CL6'USING'
OP_DROP             DC   CL6'DROP'
OP_DS               DC   CL6'DS'

EDITWORD            DC   X'4020202020202120'

FORMAT_TABLE        DC   AL1($OPCODE_E),VL4(GENE)
                    DC   AL1($OPCODE_RR1),VL4(GENRR1)
                    DC   AL1($OPCODE_RR2),VL4(GENRR2)
                    DC   AL1($OPCODE_RR3),VL4(GENRR3)
                    DC   AL1($OPCODE_RX),VL4(GENRX)
                    DC   AL1($OPCODE_S),VL4(GENSI)
                    DC   AL1($OPCODE_SI),vL4(GENSI)
                    DC   AL1($OPCODE_RS1),VL4(GENRS1)
                    DC   AL1($OPCODE_RS2),VL4(GENRS2)
                    DC   AL1($OPCODE_RS3),VL4(GENRS3)
                    DC   AL1($OPCODE_SS1),VL4(GENSS1)
                    DC   AL1($OPCODE_SS2),VL4(GENSS2)
                    DC   AL1($OPCODE_SS3),AL4(GEN0440)
                    DC   AL1($OPCODE_SS4),AL4(GEN0440)
                    DC   AL1($OPCODE_B2S),VL4(GENB2S)
                    DC   AL1($OPCODE_RRE),VL4(GENRRE)
                    DC   AL1($OPCODE_REL1),VL4(GENREL1)
                    DC   AL1($OPCODE_RIL),VL4(GENRIL)
                    DC   X'FF'

REG_NAMES           DC   CL2'0 '
                    DC   CL2'1 '
                    DC   CL2'2 '
                    DC   CL2'3 '
                    DC   CL2'4 '
                    DC   CL2'5 '
                    DC   CL2'6 '
                    DC   CL2'7 '
                    DC   CL2'8 '
                    DC   CL2'9 '
                    DC   CL2'10'
                    DC   CL2'11'
                    DC   CL2'12'
                    DC   CL2'13'
                    DC   CL2'14'
                    DC   CL2'15'
                    DC   X'FF'

LENGTH_TABLE        DC   AL1(01)    1
                    DC   AL1(03)    2
                    DC   AL1(06)    3
                    DC   AL1(08)    4
                    DC   AL1(11)    5
                    DC   AL1(13)    6
                    DC   AL1(16)    7
                    DC   AL1(18)    8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDGEN              DSECT
                    COPY DXDPREF

DXD_EXIT_PARMS      DS   0A            OPCODE modification exit parms
DXD_EXIT_PARM_1     DS   A                 OPCODE TABLE ENTRY ADDR
DXD_EXIT_PARM_2     DS   A                 INSTRUCTION TEXT'S ADDR

DXD_DISP            DS   XL4

DXD_GEN_RC          DS   X

DXD_UNPACK_IN       DS   CL8

DXD_UNPACK_OUT      DS   0C
DXD_UNPACK_OUT_1    DS   XL4
DXD_BLANK_1         DS   X
DXD_UNPACK_OUT_2    DS   XL4
DXD_BLANK_2         DS   X
DXD_UNPACK_OUT_3    DS   XL4
DXD_BLANK_3         DS   X
DXD_UNPACK_OUT_4    DS   XL4
                    DS   X

DXD_EDITWORD        DS   CL8
DXD_EDITWORD_FILL   DS   CL8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FORMAT_DSECT        DSECT
FORMAT_FORMAT       DS   X
FORMAT_ADDR         DS   XL4
FORMAT_L            EQU  *-FORMAT_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     REGEQU
               END  DISGEN
