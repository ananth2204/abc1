*--------------------------------------------------------------------*
*                                                                    *
*  MODULE NAME: GENREL1                                              *
*                                                                    *
*  Function:                                                         *
*   Generate "relative" (A7_x) instructions                          *
*                                                                    *
*                                                                    *
*  The address mode is "relative", not "base+disp" so the reference  *
*  was not caused by a USING.  Since there was no USING, there       *
*  is never a "named using" (name.label) type label generated.       *
*                                                                    *
*                                                                    *
*  At entry R7 is address of AREA                                    *
*           R5 is address of instruction                             *
*           R4 is address of OPCODE entry                            *
*                                                                    *
*--------------------------------------------------------------------*
GENREL1  CSECT
GENREL1  AMODE 31
GENREL1  RMODE ANY
         USING GENREL1,R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISCOMM,R9
         USING AREA_DSECT,R7
         USING OPCODE_DSECT,R4
         B     MOD0000                        SKIP EYECATCHER
MODID    DC    CL8'GENREL1'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        SET BASE REG
         DROP  R15
         USING GENREL1,R10
         GETMAIN RU,                                                   +
               LV=WORK_L,                                              +
               LOC=ANY
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING WORK,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R7,                                              +
               DATA2=(0(R5),4)
         LA    R3,DISCOMM_SOURCE_OPERAND1     INITIALIZE OUTPUT ADDRESS
         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE
         NI    COMM_INFO_01,X'0F'             LEAVE OPCODE MODIFIER
         SR    R1,R1
         IC    R1,COMM_INFO_01                INSERT INTO R1
         SLL   R1,2                           MULTIPLY BY 4
         L     R15,A_TABLE(R1)
         BR    R15
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
REL0000  DS    0H
         ITRACE ID=REL0000
         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE
         NI    COMM_INFO_01,X'F0'             LEAVE ONLY REGISTER NBR
         SR    R1,R1
         IC    R1,COMM_INFO_01                REGISTER NBR
         SRL   R1,2                           SHIFT RIGHT TWO BITS
         LA    R1,REGISTER_TABLE(R1)
         MVC   0(3,R3),0(R1)                  COPY REGISTER NUMBER
         LA    R2,4
REL0010  DS    0H
         CLI   0(R3),C' '                     BLANK?
         BE    REL0020                        YES
         LA    R3,1(,R3)                      NEXT
         BCT   R2,REL0010                     LOOP
REL0020  DS    0H
         MVI   0(R3),C','                     INSERT COMMA
         MVI   1(R3),C'X'                     INSERT X
         MVI   2(R3),C''''                    INSERT '
         UNPK  3(5,R3),2(3,R5)                UNPACK MASK
         TR    3(4,R3),COMM_HEXCHAR           TRANSLATE MASK
         MVI   7(R3),C''''                    INSERT '
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
REL0100  DS    0H
         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE
         NI    COMM_INFO_01,X'F0'             LEAVE ONLY CONDITION CODE
         ITRACE ID=REL0100,                                            +
               DATA1=(DISCOMM_CC,1),                                   +
               DATA2=(COMM_INFO_01,1)
         TM    DISCOMM_CC,$OPCODE_CCA         LAST CC SET BY ARITH?
         BO    REL0110                        YES
         TM    DISCOMM_CC,$OPCODE_CCC         LAST CC SET BY COMPARE?
         BO    REL0120                        YES
         ITRACE ID=TABLE_L
         LA    R1,BRC_TABLE_L                 USE "LOGICAL" TABLE
         B     REL0130
REL0110  DS    0H
         ITRACE ID=TABLE_A
         LA    R1,BRC_TABLE_A                 USE ARITH TABLE
         B     REL0130
REL0120  DS    0H
         ITRACE ID=TABLE_C
         LA    R1,BRC_TABLE_C                 USE COMPARE TABLE
REL0130  DS    0H
         CLC   COMM_INFO_01(1),0(R1)          CONDITION LOCATED?
         BE    REL0140                        YES
         LA    R1,6(,R1)                      NEXT
         CLI   0(R1),X'FF'                    END OF TABLE?
         BE    REL0150                        YES
         B     REL0130                        LOOP
REL0140  DS    0H
         MVC   OPCODE_MNEMONIC,1(R1)          SET MNEMONIC
         B     REL0160
REL0150  DS    0H
         SR    R1,R1
         IC    R1,COMM_INFO_01                CONDITION CODE
         SRL   R1,4                           SHIFT TO LOW BITS
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   COMM_INFO_01(L'EDITWORD1),EDITWORD1
         ED    COMM_INFO_01(L'EDITWORD1),COMM_DWORD+6
         MVC   0(2,R3),COMM_INFO_01+2         COPY CONDITION CODE
         MVI   2(R3),C','                     INSERT COMMA
         LA    R3,3(,R3)                      UPDATE OUTPUT ADDRESS
REL0160  DS    0H
         BAL   R15,REL2000
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
REL0300  DS    0H
         ITRACE ID=REL300
         BAL   R15,REL1000                    GENERATE REGISTER
         BAL   R15,REL2000                    GENERATE LABEL
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
REL0400  DS    0H
         ITRACE ID=REL0400
         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE
         NI    COMM_INFO_01,X'F0'             LEAVE ONLY REGISTER NBR
         SR    R1,R1
         IC    R1,COMM_INFO_01                REGISTER NBR
         SRL   R1,2                           SHIFT RIGHT TWO BITS
         LA    R1,REGISTER_TABLE(R1)
         MVC   0(3,R3),0(R1)                  COPY REGISTER NUMBER
         LA    R2,4
REL0410  DS    0H
         CLI   0(R3),C' '                     BLANK?
         BE    REL0420                        YES
         LA    R3,1(,R3)                      NEXT
         BCT   R2,REL0410                     LOOP
REL0420  DS    0H
         MVI   0(R3),C','                     INSERT COMMA
         LA    R3,1(,R3)                      UPDATE OUTPUT ADDRESS
         LH    R0,2(R5)                       IMMEDIATE DATA
         LTR   R0,R0                          NEGATIVE AMOUNT?
         BNM   REL0430                        NO
         MVI   0(R3),C'-'                     INSERT MINUS SIGN
         LA    R3,1(,R3)                      UPDATE OUTPUT ADDRESS
REL0430  DS    0H
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   COMM_INFO_01(16),COMM_BLANKS   INITIALIZE INFO 1
         MVC   COMM_INFO_01(L'EDITWORD3),EDITWORD3
         ED    COMM_INFO_01,COMM_DWORD+5      EDIT
         LA    R1,COMM_INFO_01
         LA    R2,L'EDITWORD3
REL0440  DS    0H
         CLI   0(R1),C' '                     BLANK?
         BNE   REL0450                        NO
         LA    R1,1(,R1)                      NEXT
         BCT   R2,REL0440
REL0450  DS    0H
         MVC   0(5,R3),0(R1)                  COPY IMMEDIATE
         B     EXIT0000
*---------------------------------------------------------------------*
*        Generate register                                            *
*---------------------------------------------------------------------*
REL1000  DS    0H
         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE
         NI    COMM_INFO_01,X'F0'             LEAVE ONLY REGISTER NBR
         SR    R1,R1
         IC    R1,COMM_INFO_01                REGISTER NBR
         SRL   R1,2                           SHIFT RIGHT TWO BITS
         LA    R1,REGISTER_TABLE(R1)
         MVC   0(3,R3),0(R1)                  COPY REGISTER NUMBER
         LA    R2,4
REL1010  DS    0H
         CLI   0(R3),C' '                     BLANK?
         BE    REL1020                        YES
         LA    R3,1(,R3)                      NEXT
         BCT   R2,REL1010                     LOOP
REL1020  DS    0H
         MVI   0(R3),C','                     INSERT COMMA
         LA    R3,1(,R3)                      UPDATE OUTPUT ADDRESS
         BR    R15
*---------------------------------------------------------------------*
*        Generate label                                               *
*---------------------------------------------------------------------*
REL2000  DS    0H
         ICM   R1,15,AREA_REF_LABEL2
         BNZ   REL2010
         USING LABEL_DSECT,R1
         ITRACE ID=NOLABEL
         DC    H'0'                           SHOULD NOT HAPPEN
REL2010  DS    0H
         MVC   0(L'LABEL_NAME,R3),LABEL_NAME  COPY LABEL
         ICM   R1,15,AREA_REF_DISP2           DISPLACEMENT FROM LABEL
         BZ    EXIT0000                       ZERO..
         LA    R2,L'LABEL_NAME
REL2020  DS    0H
         CLI   0(R3),C' '                     BLANK?
         BE    REL2030                        YES
         LA    R3,1(,R3)                      NEXT
         BCT   R2,REL2020                     LOOP
REL2030  DS    0H
         MVI   0(R3),C'+'                     INSET PLUS
         CVD   R1,COMM_DWORD                  CONVERT DISP TO DECIMAL
         MVC   COMM_INFO_01(L'EDITWORD2),EDITWORD2
         ED    COMM_INFO_01,COMM_DWORD+5      EDIT DISP
         MVC   1(5,R3),COMM_INFO_01+1
         BR    R15
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13
         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=WORK_L
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        RETURN CODE               ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EDITWORD1      DC       X'F0202020'
EDITWORD2      DC       X'F02020202020'
EDITWORD3      DC       X'402020202120'

A_TABLE        DS       0A
               DC       A(REL0000)                     TMLH      0
               DC       A(REL0000)                     TMLL      1
               DC       A(REL0000)                     TMHH      2
               DC       A(REL0000)                     TMHL      3
               DC       A(REL0100)                     BRC       4
               DC       A(REL0300)                     BRAS      5
               DC       A(REL0300)                     BRCT      6
               DC       A(REL0300)                     BRCTG     7
               DC       A(REL0400)                     LHI       8
               DC       A(REL0400)                     LGHI      9
               DC       A(REL0400)                     AHI      10
               DC       A(REL0400)                     AGHI     11
               DC       A(REL0400)                     MHI      12
               DC       A(REL0400)                     MGHI     13
               DC       A(REL0400)                     CHI      14
               DC       A(REL0400)                     CGHI     15

REGISTER_TABLE DS       0C
               DC       CL4'R0  '
               DC       CL4'R1  '
               DC       CL4'R2  '
               DC       CL4'R3  '
               DC       CL4'R4  '
               DC       CL4'R5  '
               DC       CL4'R6  '
               DC       CL4'R7  '
               DC       CL4'R8  '
               DC       CL4'R9  '
               DC       CL4'R10 '
               DC       CL4'R11 '
               DC       CL4'R12 '
               DC       CL4'R13 '
               DC       CL4'R14 '
               DC       CL4'R15 '

BRC_TABLE_A    DS       0C
               DC       X'00',CL5'JNOP '
               DC       X'10',CL5'JO   '
               DC       X'20',CL5'JP   '
               DC       X'40',CL5'JM   '
               DC       X'70',CL5'JNZ  '
               DC       X'80',CL5'JZ   '
               DC       X'B0',CL5'JNM  '
               DC       X'D0',CL5'JNP  '
               DC       X'E0',CL5'JNO  '
               DC       X'F0',CL5'J    '
               DC       X'FF'

BRC_TABLE_C    DS       0C
               DC       X'00',CL5'JNOP '
               DC       X'20',CL5'JH   '
               DC       X'40',CL5'JL   '
               DC       X'70',CL5'JNE  '
               DC       X'80',CL5'JE   '
               DC       X'B0',CL5'JNL  '
               DC       X'D0',CL5'JNH  '
               DC       X'F0',CL5'J    '
               DC       X'FF'

BRC_TABLE_L    DS       0C
               DC       X'00',CL5'JNOP '
               DC       X'10',CL5'JO   '
               DC       X'40',CL5'JL   '
               DC       X'70',CL5'JNE  '
               DC       X'80',CL5'JZ   '
               DC       X'B0',CL5'JNL  '
               DC       X'D0',CL5'JNH  '
               DC       X'E0',CL5'JNO  '
               DC       X'F0',CL5'J    '
               DC       X'FF'
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
WORK           DSECT
               COPY     DXDPREF
WORK_L         EQU      *-WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      GENREL1
