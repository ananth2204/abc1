*--------------------------------------------------------------------*
*                                                                    *
*  Module name: DISDCONV                                             *
*                                                                    *
*  Function:                                                         *
*                                                                    *
*   Convert displacements from character to binary                   *
*                                                                    *
*   There are two parms:                                             *
*     .   Address of source data (8 characters)                      *
*     .   Address of output (fullword)                               *
*                                                                    *
*--------------------------------------------------------------------*
DISDCONV CSECT
DISDCONV AMODE 31
DISDCONV RMODE ANY
         USING DISDCONV,R15
         B     MOD0000                           SKIP EYECATCHER
MODID    DC    CL8'DISDCONV'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                   SAVE REGS
         LR    R10,R15                           SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISDCONV,R10
         USING DISCOMM,R9
         L     R15,SESS_DXD_ADDR                 WORK AREA
         A     R15,DXD_START                     PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         USING DXDDCONV,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R1
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         LM    R7,R8,0(R1)                       ADDR OF PARMS
         LR    R6,R7                             SAVE SOURCE ADDR
         MVC   DXD_IN,C_ZEROS                    INITIALIZE
         LA    R1,L'DXD_IN                       LOOP LIMITER
CONV0000 DS    0H                                LAST DIGIT
         CLI   0(R7),C' '                        BLANK?
         BE    CONV0020                          YES
         CLI   0(R7),C'A'                        VALID DIGIT?
         BL    ERR0010                           NO
         CLI   0(R7),C'F'                        VALID DIGIT?
         BNH   CONV0010                          YES
         CLI   0(R7),C'0'                        VALID DIGIT?
         BL    ERR0010                           NO
         CLI   0(R7),C'9'                        VALID DIGIT?
         BH    ERR0010                           NO
CONV0010 DS    0H
         MVC   DXD_IN(L'DXD_IN-1),DXD_IN+1       SHIFT LEFT 1 DIGIT
         MVC   DXD_IN+(L'DXD_IN-1)(1),0(R7)      COPY DIGIT
         LA    R7,1(,R7)                         NEXT DIGIT
         BCT   R1,CONV0000                       LOOP
CONV0020 DS    0H
         LTR   R8,R8                             JUST VERIFYING?
         BZ    CONV0030                          YES
         TR    DXD_IN,CHARHEX                    PREPARE FOR CONVERSION
         PACK  DXD_OUT(5),DXD_IN(9)              PACK
         MVC   0(4,R8),DXD_OUT                   COPY TO OUTPUT
CONV0030 DS    0H
         SR    R15,R15                           SET RC
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
ERR0010  DS    0H
         ITRACE ID=BAD,                                                +
               RDATA1=R7
         MVI   COMM_MSG_ID+1,1
         MVC   COMM_INFO_01(1),0(R7)             COPY OFFENDING DIGIT
         MVI   COMM_MSG_ID,0
         MVC   COMM_MSG_CSECT,MODID              COPY MODULE NAME
         L     R15,COMM_V_OSMSG
         BALR  R14,R15                           BUILD MESSAGE
         LA    R15,4                             SET RC
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               DATA1=DXD_OUT
         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670
         L     R14,12(,R13)                      RESTORE R14            ASE01680
         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680
         BR    R14                               RETURN TO CALLER       ASE01700
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DXD_START     DC   Q(DXDDCONV)

C_ZEROS       DC   C'00000000'

CHARHEX       DC   256X'00'
              ORG  CHARHEX+C'A'
              DC   X'0A0B0C0D0E0F'
              ORG  CHARHEX+C'0'
              DC   X'00010203040506070809'
              ORG
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DXDDCONV      DSECT
              COPY DXDPREF

DXD_IN        DS   CL8
DXD_OUT       DS   CL5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY     REGEQU
              END     DISDCONV
