* -------------------------------------------------------------------*
*                                                                    *
*  Module name: GENDC                                                *
*                                                                    *
*  Function:                                                         *
*   Generate DCs                                                     *
*                                                                    *
*  At entry R7 is address of current AREA block                      *
*           R5 is address of instruction text                        *
*           R4 is address of OPCODE table entry                      *
*                                                                    *
* -------------------------------------------------------------------*
GENDC    CSECT
GENDC    AMODE 31
GENDC    RMODE ANY
         USING GENDC,R15
         B     MOD0000                        SKIP EYECATCHER
MODID    DC    CL8'GENDC'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
MOD0000  DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING GENDC,R10
         USING DISCOMM,R9
         USING AREA_DSECT,R7
         USING OPCODE_DSECT,R4
         L     R15,SESS_DXD_ADDR              WORK AREA
         A     R15,DXD_START                  PLUS DISP
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15                        SET SAVE AREA ADDRESS
         USING DXDGENDC,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R7,                                              +
               DATA2=AREA_BEGIN
         MVC   OPCODE_MNEMONIC,OP_DC          SET OPCODE TO 'DC'
         C     R7,DXD_AREA                    SAME AREA?
         BE    INIT0010
         ITRACE ID=NEWAREA,                                            +
               DATA1=AREA_BEGIN,                                       +
               DATA2=AREA_LENGTH
         ST    R7,DXD_AREA                    SAVE AREA ADDRESS
         MVC   DXD_BEGIN,AREA_BEGIN           COPY BEGIN DISP
         MVC   DXD_LENGTH,AREA_LENGTH
INIT0010 DS    0H
         L     R5,DXD_BEGIN                   BEGIN DISP
         ST    R5,DISCOMM_GEN_DISP            SET 'GEN' DISP
         A     R5,DISCOMM_CSECT_TEXT          PLUS TEXT ADDRESS
         L     R8,DXD_LENGTH                  AREA LENGTH
         ITRACE ID=DC,                                                 +
               RDATA1=R5,                                              +
               RDATA2=R8
         CLI   AREA_DATA_TYPE,$DATA_ACON      AD-CON?
         BE    GEN0080                        YES
         CLI   AREA_DATA_TYPE,$DATA_VCON      V-CON?
         BE    GEN0130                        YES
         CLI   AREA_DATA_TYPE,$DATA_CXD       CXD (PSEUDO AREA SIZE)?
         BE    GEN0160                        YES
         CLI   AREA_DATA_TYPE,$DATA_Q         Q (PSEUDO AREA DISP)?
         BE    GEN0170                        YES
* -------------------------------------------------------------------*
*                                                                    *
* -------------------------------------------------------------------*
GEN0000  DS    0H
         XC    DISCOMM_GEN_LENGTH,DISCOMM_GEN_LENGTH
         CH    R8,H8                          MORE THAN 8?
         BNH   GEN0010                        NO
         LH    R8,H8                          LIMIT TO 8
GEN0010  DS    0H
         TRT   0(1,R5),PRINT                  PRINTABLE CHARACTER?
         BZ    GEN0040                        YES
* ------------------------------------------------------------------- *
*                                                                     *
*        HEX CONSTANTS                                                *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=X_QUOTE,                                            +
               RDATA1=R8
         MVC   DISCOMM_SOURCE_OPERAND1(L'X_QUOTE),X_QUOTE
         LA    R3,DISCOMM_SOURCE_OPERAND1+L'X_QUOTE
GEN0020  DS    0H
         TRT   0(1,R5),PRINT                  PRINTABLE?
         BZ    GEN0030                        YES
         UNPK  0(3,R3),0(2,R5)                UNPACK DATA
         TR    0(2,R3),COMM_HEXCHAR           TRANSLATE TO PRINTABLE
         LA    R5,1(R5)                       NEXT OBJECT MODULE BYTE
         LA    R3,2(R3)                       NEXT IN OUTPUT
         L     R15,DXD_BEGIN                  BEGIN DISP
         LA    R15,1(,R15)                    PLUS 1
         ST    R15,DXD_BEGIN                  CHANGE DISP
         L     R15,DXD_LENGTH
         BCTR  R15,0
         ST    R15,DXD_LENGTH
         L     R15,DISCOMM_GEN_LENGTH         LENGTH GENNED
         LA    R15,1(,R15)                    PLUS 1
         ST    R15,DISCOMM_GEN_LENGTH         UPDATE GENNED LENGTH
         BCT   R8,GEN0020                     LOOP
GEN0030  DS    0H
         MVI   0(R3),C''''                    INSERT ENDING QUOTE
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        CHARACTER CONSTANTS                                          *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0040  DS    0H
         ITRACE ID=C_QUOTE,                                            +
               RDATA1=R8
         MVC   DISCOMM_SOURCE_OPERAND1(L'C_QUOTE),C_QUOTE
         LA    R3,DISCOMM_SOURCE_OPERAND1+L'C_QUOTE
GEN0050  DS    0H
         TRT   0(1,R5),PRINT                  PRINTABLE?
         BNZ   GEN0070                        NO
         MVC   0(1,R3),0(R5)                  COPY DATA
         LA    R3,1(,R3)                      NEXT IN GENERATED CODE
         CLI   0(R5),X'7D'                    QUOTE?
         BNE   GEN0060                        NO
         MVI   0(R3),X'7D'                    INSERT SECOND QUOTE
         LA    R3,1(,R3)                      ACCOUNT FOR IT
GEN0060  DS    0H
         LA    R5,1(,R5)                      NEXT IN TEXT
         L     R15,DXD_BEGIN                  BEGIN DISP
         LA    R15,1(,R15)                    PLUS 1
         ST    R15,DXD_BEGIN                  CHANGE DISP
         L     R15,DXD_LENGTH
         BCTR  R15,0
         ST    R15,DXD_LENGTH
         L     R15,DISCOMM_GEN_LENGTH         LENGTH GENNED
         LA    R15,1(,R15)                    PLUS 1
         ST    R15,DISCOMM_GEN_LENGTH         UPDATE GENNED LENGTH
         BCT   R8,GEN0050                     MINUS 1
GEN0070  DS    0H
         MVI   0(R3),C''''                    INSERT ENDING QUOTE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        GENERATE ADCONs                                              *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0080  DS    0H
         ITRACE ID=GENADCON
         MVC   DISCOMM_SOURCE_OPERAND1(4),=C'AL ('
         MVC   DISCOMM_SOURCE_OPERAND1+2(1),AREA_LENGTH+3
         OI    DISCOMM_SOURCE_OPERAND1+2,X'F0'
         LA    R2,DISCOMM_SOURCE_OPERAND1+4
         ICM   R1,15,AREA_REF_LABEL1          LABEL BLOCK'S ADDRESS
         BZ    GEN0110                        NO LABEL
         USING LABEL_DSECT,R1
         MVC   DISCOMM_SOURCE_OPERAND1+4(L'LABEL_NAME),LABEL_NAME
GEN0090  DS    0H
         CLI   0(R2),C' '                     BLANK?
         BE    GEN0100                        YES
         LA    R2,1(,R2)                      NEXT
         B     GEN0090
GEN0100  DS    0H
         ICM   R0,15,AREA_REF_DISP1           DISPLACEMENT FROM LABEL
         BZ    GEN0120                        NO DISPLACEMENT
         MVI   0(R2),C'+'                     INSERT PLUS SIGN
         LA    R2,1(,R2)                      UPDATE OUTPUT ADDRESS
GEN0110  DS    0H
         ICM   R0,15,AREA_REF_DISP1           DISPLACEMENT FROM LABEL
         BZ    GEN0120                        NO DISPLACEMENT
         CVD   R0,COMM_DWORD                  SET DISPLACEMENT
         MVC   0(L'EDITWORD,R2),EDITWORD
         ED    0(L'EDITWORD,R2),COMM_DWORD+4
         LA    R2,L'EDITWORD(,R2)             UPDATE ADDRESS
         TM    AREA_DATA_TYPE,$DATA_31        31-BIT MODE BIT ON?
         BNO   GEN0120                        NO
         MVC   0(L'X80,R2),X80                GEN 31-BIT MODE
         LA    R2,L'X80(,R2)                  UPDATE ADDRESS
GEN0120  DS    0H
         MVI   0(R2),C')'                     CLOSING PARENTHESIS
         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'
         B     EXIT0000                       DONE
* ------------------------------------------------------------------- *
*                                                                     *
*        GENERATE VCONs                                               *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0130  DS    0H
         ITRACE ID=GENVCON
         MVC   DISCOMM_SOURCE_OPERAND1(4),=C'VL ('
         MVC   DISCOMM_SOURCE_OPERAND1+2(1),AREA_LENGTH+3
         OI    DISCOMM_SOURCE_OPERAND1+2,X'F0' MAKE IT PRINTABLE
         MVC   DISCOMM_SOURCE_OPERAND1+4(L'AREA_RLD_NAME),AREA_RLD_NAME
         LA    R1,DISCOMM_SOURCE_OPERAND1
GEN0140  DS    0H
         CLI   0(R1),C' '
         BE    GEN0150
         LA    R1,1(,R1)
         B     GEN0140
GEN0150  DS    0H
         MVI   0(R1),C')'                     CLOSING PARENTHESIS
         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        GENERATE CXD                                                 *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0160  DS    0H
         MVC   OPCODE_MNEMONIC,OP_CXD         CHANGE OPCODE TO CXD
         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        Generate "Q" constants.                                      *
*                                                                     *
*                                                                     *
*  If the RLD name for the AREA matches the name of a DSECT,          *
*     generate a "DC  QLx(rld name)                                   *
*  otherwise                                                          *
*     generate a "DC  ALx(0)" with the QLx(rld name) as the comment   *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
GEN0170  DS    0H
         ITRACE ID=GEN_Q
         ICM   R3,15,DISCOMM_DSECT_NEXT
         BZ    GEN0190                         NO DEFINED DSECTS
         USING DSECT_DSECT,R3                  DEFINE BASSE
GEN0180  DS    0H
         CLC   DSECT_NAME,AREA_RLD_NAME        DSECT LOCATED?
         BE    GEN0220                         YES
         ICM   R3,15,DSECT_NEXT                NEXT DSECT
         BNZ   GEN0180                         LOOP
GEN0190  DS    0H
         MVC   DISCOMM_SOURCE_OPERAND1+20(4),=C'QL ('
         MVC   DISCOMM_SOURCE_OPERAND1+22(1),AREA_LENGTH+3
         OI    DISCOMM_SOURCE_OPERAND1+22,X'F0' MAKE IT PRINTABLE
         MVC   DISCOMM_SOURCE_OPERAND1+24(L'AREA_RLD_NAME),AREA_RLD_NAM+
               E
         LA    R1,DISCOMM_SOURCE_OPERAND1+24
GEN0200  DS    0H
         CLI   0(R1),C' '
         BE    GEN0210
         LA    R1,1(,R1)
         B     GEN0200
GEN0210  DS    0H
         MVI   0(R1),C')'                     CLOSING PARENTHESIS
         MVI   DISCOMM_SOURCE_OPERAND1+0,C'A'
         MVC   DISCOMM_SOURCE_OPERAND1+1(3),DISCOMM_SOURCE_OPERAND1+21
         MVI   DISCOMM_SOURCE_OPERAND1+4,C'0'
         MVI   DISCOMM_SOURCE_OPERAND1+5,C')'
         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'
         B     EXIT0000
GEN0220  DS    0H
         MVC   DISCOMM_SOURCE_OPERAND1+0(4),=C'QL ('
         MVC   DISCOMM_SOURCE_OPERAND1+2(1),AREA_LENGTH+3
         OI    DISCOMM_SOURCE_OPERAND1+2,X'F0' MAKE IT PRINTABLE
         MVC   DISCOMM_SOURCE_OPERAND1+4(L'AREA_RLD_NAME),AREA_RLD_NAME
         LA    R1,DISCOMM_SOURCE_OPERAND1+4
GEN0230  DS    0H
         CLI   0(R1),C' '                     BLANK?
         BE    GEN0240                        YES
         LA    R1,1(,R1)                      NEXT
         B     GEN0230
GEN0240  DS    0H
         MVI   0(R1),C')'                     INSERT ENDING PAREN
         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=LEN_ZERO
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         L     R15,DXD_LENGTH                 LENGTH LEFT
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE OTHER REGISTERS   ASE01680
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START      DC   Q(DXDGENDC)
H8             DC   H'8'
OP_CXD         DC   CL6'CXD'
OP_DC          DC   CL6'DC'
C_QUOTE        DC   C'C'''
X_QUOTE        DC   C'X'''
X80            DC   C'+X''80000000'
EDITWORD       DC   X'F020202020202120'

PRINT    DS   0C
         DC   256X'FF'
         ORG  PRINT+X'40'
         DC   X'00'
         ORG  PRINT+X'4A'
         DC   6X'00'
         ORG  PRINT+X'5A'
         DC   8X'00'
         ORG  PRINT+X'6B'
         DC   5X'00'
         ORG  PRINT+X'7A'
         DC   6X'00'
         ORG  PRINT+X'81'
         DC   9X'00'
         ORG  PRINT+X'91'
         DC   9X'00'
         ORG  PRINT+X'A2'
         DC   9X'00'
         ORG  PRINT+X'C0'
         DC   10X'00'
         ORG  PRINT+X'D0'
         DC   10X'00'
         ORG  PRINT+X'E2'
         DC   8X'00'
         ORG  PRINT+X'F0'
         DC   10X'00'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDGENDC       DSECT
               COPY DXDPREF
DXD_AREA       DS   A
DXD_BEGIN      DS   A
DXD_LENGTH     DS   F
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     REGEQU
               END  GENDC
