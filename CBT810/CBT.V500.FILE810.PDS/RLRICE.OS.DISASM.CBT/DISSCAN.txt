* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: DISSCAN                                               *
*                                                                     *
*  FUNCTION:                                                          *
*      Determine which parts of the object text are instructions      *
*      and which are data.                                            *
*                                                                     *
*      Areas known to be data are:                                    *
*         RLD items                                                   *
*         Areas identified by the user (via the "D" menu option)      *
*                                                                     *
*      The text will be scanned a byte-at-a-time to determine if      *
*      the remaining areas are instructions or are data.              *
*                                                                     *
*      When DISSCAN completes, the AREA blocks should describe        *
*      every byte of the object text.                                 *
*                                                                     *
* ------------------------------------------------------------------- *
DISSCAN  CSECT
DISSCAN  AMODE 31
DISSCAN  RMODE ANY
         USING DISSCAN,R15
         B     INIT0000                        SKIP EYECATCHER
MODID    DC    CL8'DISSCAN'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                 SAVE REGS
         LR    R10,R15                         SET BASE REG
         DROP  R15
         USING OSCOMM,R12
         USING SESSION,R11
         USING DISSCAN,R10
         USING DISCOMM,R9
         L     R15,SESS_DXD_ADDR               WORK AREA
         A     R15,DXD_START                   PLUS DISPLACEMENT
         ST    R15,8(,R13)
         ST    R13,4(,R15)
         LR    R13,R15
         USING DXDSCAN,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
* ------------------------------------------------------------------- *
*                                                                     *
*        Housekeeping                                                 *
*                                                                     *
*        . Free areas from a previous scan(s)                         *
*        . initialize starting displacement                           *
*        . initialize data detected                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         ICM   R5,15,DXD_NEW_AREAS             NEW AREAS CHAIN
         BZ    INIT0020                        NOTHING ON CHAIN
NEW      USING AREA_DSECT,R5
INIT0010 DS    0H
         ITRACE ID=FREE_NEW,                                           +
               RDATA1=R5
         LR    R1,R5                           COPY AREA BLOCK ADDRESS
         ICM   R5,15,NEW.AREA_NEXT             NEXT AREA
         FREEMAIN RU,                          FREE THIS AREA          +
               A=(R1),                                                 +
               LV=AREA_DSECT_L
         LTR   R5,R5                           ANOTHER AREA BLOCK?
         BNZ   INIT0010                        YES
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
INIT0020 DS    0H
         ITRACE ID=ZERO
         XC    DXD_I(DXD_L),DXD_I
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         L     R1,DISCOMM_CSECT_LENGTH         CSECT LENGTH
         BCTR  R1,0                            MINUS 1
         ST    R1,DXD_MAX_DISP                 MAX DISP
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         ICM   R6,15,DISCOMM_ALL_AREA_NEXT     ANY DATA AREAS?
         BNZ   SCAN0010                        YES
         LA    R6,DUMMY_FF                     USE DUMMY INSTEAD
DATA     USING AREA_DSECT,R6
*---------------------------------------------------------------------*
*                                                                     *
*        Top of scan loop                                             *
*                                                                     *
*---------------------------------------------------------------------*
SCAN0010 DS    0H
         ITRACE ID=SCAN0010,                                           +
               DATA1=DXD_SCAN_DISP,                                    +
               DATA2=DATA.AREA_BEGIN
         ago   .a
         CLC   DXD_SCAN_DISP,X_0074
         BL    SCAN0015
X_0074   DC    X'00000074'
SCAN0015 DS    0H
.a       anop
         CLC   DXD_SCAN_DISP,DXD_MAX_DISP      AT MAX DISP?
         BH    SCAN0300                        YES.. END OF CSECT
         CLC   DXD_SCAN_DISP,DATA.AREA_BEGIN   AT DATA AREA?
         BNE   SCAN0030                        NO
*---------------------------------------------------------------------*
*                                                                     *
*        We are at a known data area                                  *
*                                                                     *
*        Add an AREA block for any data detected                      *
*                                                                     *
*        If the data area ends at the end of the CSECT, we're done    *
*                                                                     *
*        Otherwise update the scan disp                               *
*                  go to the next data area                           *
*                                                                     *
*---------------------------------------------------------------------*
         ITRACE ID=AT_AREA,                                            +
               RDATA1=R6,                                              +
               DATA2=DATA.AREA_BEGIN
         OC    DXD_DATA_LENGTH,DXD_DATA_LENGTH ANY DATA DETECTED?
         BZ    SCAN0020                        NO
         BAL   R15,SCAN0400                    GETMAIN NEW AREA BLOCK
         ITRACE ID=NEWDATA1,                                           +
               DATA1=(DXD_AREA_START,4),                               +
               DATA2=(DXD_DATA_LENGTH,4)
         MVI   NEW.AREA_TYPE,$AREA_DATA        DATA AREA
         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL
         MVC   NEW.AREA_BEGIN,DXD_AREA_START   SET START DISP
         L     R1,DXD_SCAN_DISP                CURRENT DISP
         BCTR  R1,0                            MINUS 1
         ST    R1,NEW.AREA_END                 SET END DISP
         MVC   NEW.AREA_LENGTH,DXD_DATA_LENGTH SET LENGTH
SCAN0020 DS    0H
         ITRACE ID=NEXTAREA
         ICM   R1,15,DATA.AREA_END             END OF AREA
         LA    R1,1(,R1)                       PLUS 1
         ST    R1,DXD_AREA_START               START OF NEXT AREA
         ST    R1,DXD_SCAN_DISP                NEXT BYTE TO EXAMINE
         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH
         ICM   R6,15,DATA.AREA_NEXT            NEXT DATA AREA
         BNZ   SCAN0010                        GO TO TOP OF LOOP
         LA    R6,DUMMY_FF                     SET TO DUMMY
         B     SCAN0010                        GO TO TOP OF LOOP
* --------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
* --------------------------------------------------------------------*
SCAN0030 DS    0H
         ITRACE ID=SCAN0030,                                           +
               DATA1=DXD_SCAN_DISP
         TM    DXD_SCAN_DISP+3,X'01'           AT ODD DISP?
         BO    SCAN0200                        YES
         ICM   R5,15,DATA.AREA_BEGIN           START OF NEXT DATA AREA
         BP    SCAN0040
         L     R5,DXD_MAX_DISP                 LIMIT TO MAX
SCAN0040 DS    0H
         S     R5,DXD_SCAN_DISP                COMPUTE LENGTH TO SCAN
         ITRACE ID=SCAN0040,                                           +
               RDATA1=R5
         ST    R5,DXD_ALPHA_SCAN               LENGTH TO SEARCH
         CH    R5,H6                           AT LEAST 6 BYTES?
         BL    SCAN0100                        NO
         SR    R3,R3                           CLEAR FOR COUNTER
         L     R4,DISCOMM_CSECT_TEXT           TEXT'S ADDRESS
         A     R4,DXD_SCAN_DISP                PLUS CURRENT DISP
SCAN0050 DS    0H
         TRT   0(1,R4),ALPHA_TABLE             ALPHA?
         BNZ   SCAN0060                        NO
         LA    R3,1(,R3)                       ADD 1 TO LENGTH SEARCHED
         LA    R4,1(,R4)                       ADD 1 TO ADDRESS
         BCT   R5,SCAN0050                     CHECK AGAIN
         L     R3,DXD_ALPHA_SCAN               RESTORE LENGTH SCANNED
SCAN0060 DS    0H
         ITRACE ID=SCAN0060,                                           +
               RDATA1=R3                       NBR OF ALPHAS
         CH    R3,H6                           SIX OR MORE?
         BL    SCAN0100                        NO
SCAN0070 DS    0H
         ITRACE ID=NEWDATA2,                                           +
               DATA1=(DXD_AREA_START,4),                               +
               DATA2=(DXD_DATA_LENGTH,4)
         BAL   R15,SCAN0400                    GETMAIN NEW AREA BLOCK
         MVI   NEW.AREA_TYPE,$AREA_DATA
         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL
         L     R1,DXD_AREA_START               STARTING DISP
         STCM  R1,15,NEW.AREA_BEGIN            SET BEGIN DISP
         AR    R1,R3                           PLUS LENGTH
         BCTR  R1,0                            MINUS 1
         STCM  R1,15,NEW.AREA_END              SET AREA END
         STCM  R3,15,NEW.AREA_LENGTH           SET LENGTH
         A     R3,DXD_AREA_START               PLUS AREA START ADDR
         ST    R3,DXD_AREA_START               NEXT AREA START ADDR
         ST    R3,DXD_SCAN_DISP                SET CURRENT SCAN ADDR
         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH
         B     SCAN0010                        GO TO TOP OF LOOP
* --------------------------------------------------------------------*
*                                                                     *
* --------------------------------------------------------------------*
SCAN0100 DS    0H
         ITRACE ID=SCAN0100,                                           +
               DATA1=(DISCOMM_CSECT_TEXT,4),                           +
               DATA2=(DXD_SCAN_DISP,4)
         ICM   R1,15,DISCOMM_CSECT_TEXT        TEXT ADDR
         A     R1,DXD_SCAN_DISP                PLUS SCAN DISP
         ST    R1,DXD_EXIT_PARM2               INSTRUCTION TEXT ADDR
         SR    R4,R4                           CLEAR R4
         ICM   R4,1,0(R1)                      OPCODE
         ITRACE ID=OPCODE_1,                                           +
               RDATA1=R1,                                              +
               RDATA2=R4
         LTR   R4,R4                           OPCODE ZERO?
         BZ    SCAN0200                        ZERO.. NOT VALID
         SLL   R4,2                            MULTIPLY BY 4
         A     R4,DISCOMM_OPCODE_TABLE_ADDR    PLUS BASE
         ICM   R4,15,0(R4)                     OPCODE ENTRY
         BZ    SCAN0200                        ZERO.. NOT VALID
OP1      USING OPCODE_DSECT,R4
         ICM   R15,15,OP1.OPCODE_EXIT          MODIFICATION EXIT?
         BZ    SCAN0110                        NO
         ST    R4,DXD_EXIT_PARM1
         LA    R1,DXD_EXIT_PARMS
         ITRACE ID=OP1_EXIT,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                         CALL THE EXIT
         ITRACE ID=OP1_X,                                              +
               DATA1=(OP1.OPCODE_MNEMONIC,5),                          +
               DATA2=(OP1.OPCODE_LENGTH,2)
SCAN0110 DS    0H
         SR    R2,R2
         ICM   R2,3,OP1.OPCODE_LENGTH          LENGTH OF INSTRUCTION
         BZ    SCAN0200                        NOT A VALID OPCODE
         A     R2,DXD_SCAN_DISP                PLUS SCAN DISP
         BCTR  R2,0                            DISP OF LAST BYTE
         CL    R2,DATA.AREA_BEGIN              OVERLAP DATA AREA?
         BH    SCAN0200                        YES.. NOT AN INSTRUCTION
         CL    R2,DXD_MAX_DISP                 BEYOND MAX DISP?
         BH    SCAN0200                        YES.. NOT AN INSTRUCTION
         ITRACE ID=XX,                                                 +
               DATA1=(OP1.OPCODE_MNEMONIC,5),                          +
               DATA2=(OP1.OPCODE_FLAGS,1)
         TM    OP1.OPCODE_FLAGS,$OPCODE_BRANCH BRANCH INSTRUCTION?
         BO    SCAN0130                        YES
         LA    R2,1(,R2)                       RESTORE FULL LENGTH
         A     R2,DISCOMM_CSECT_TEXT           PLUS TEXT BASE ADDR
         ST    R2,DXD_EXIT_PARM2
         SR    R3,R3                           CLEAR R3
         ICM   R3,1,0(R2)                      OPCODE
         ITRACE ID=OPCODE_2,                                           +
               RDATA1=R2,                                              +
               RDATA2=R3
         LTR   R3,R3                           OPCODE ZERO?
         BZ    SCAN0200                        ZERO.. NOT VALID
         SLL   R3,2                            MULTIPLY BY 4
         A     R3,DISCOMM_OPCODE_TABLE_ADDR    PLUS BASE
         ICM   R3,15,0(R3)                     OPCODE ENTRY
         BZ    SCAN0200                        ZERO.. NOT VALID
OP2      USING OPCODE_DSECT,R3
         ST    R3,DXD_EXIT_PARM1               OPCODE ENTRY ADDR
         ICM   R15,15,OP2.OPCODE_EXIT          MODIFICATION EXIT?
         BZ    SCAN0120                        NO
         LA    R1,DXD_EXIT_PARMS
         ITRACE ID=OP2_EXIT,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                         CALL EXIT
         ITRACE ID=OP2_X,                                              +
               DATA1=(OP2.OPCODE_MNEMONIC,5),                          +
               DATA2=(OP2.OPCODE_LENGTH,2)
SCAN0120 DS    0H
         SR    R1,R1
         ICM   R1,3,OP1.OPCODE_LENGTH          OPCODE 1 LENGTH
         BZ    SCAN0200                        NOT A VALID OPCODE
         SR    R2,R2
         ICM   R2,3,OP2.OPCODE_LENGTH          OPCODE 2 LENGTH
         BZ    SCAN0200                        NOT A VALID OPCODE
         AR    R1,R2                           ADD LENGTHS
         BCTR  R1,R0                           DISP OF LAST BYTE
         A     R1,DXD_SCAN_DISP                PLUS OPCODE 1 DISP
         CL    R1,DATA.AREA_BEGIN              OVERLAP DATA?
         BH    SCAN0200                        YES
         CL    R1,DXD_MAX_DISP                 BEYOND MAX DISP?
         BH    SCAN0200                        YES
SCAN0130 DS    0H
         OC    DXD_DATA_LENGTH,DXD_DATA_LENGTH ANY DATA DETECTED?
         BZ    SCAN0140                        NO
         BAL   R15,SCAN0400                    GETMAIN NEW DATA AREA
         ITRACE ID=NEWDATA3,                                           +
               DATA1=(DXD_AREA_START,4),                               +
               DATA2=(DXD_DATA_LENGTH,4)
         MVI   NEW.AREA_TYPE,$AREA_DATA
         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL
         MVC   NEW.AREA_BEGIN,DXD_AREA_START   SET START DISP
         L     R1,DXD_SCAN_DISP                CURRENT DISP
         BCTR  R1,0                            MINUS 1
         ST    R1,NEW.AREA_END                 SET END DISP
         MVC   NEW.AREA_LENGTH,DXD_DATA_LENGTH SET LENGTH
         MVC   DXD_AREA_START,DXD_SCAN_DISP    CHANGE AREA START
         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH
SCAN0140 DS    0H
         ITRACE ID=NEW_INST,                                           +
               DATA1=(DXD_AREA_START,4),                               +
               DATA2=(OP1.OPCODE_MNEMONIC,5)
         BAL   R15,SCAN0400                    GETMAIN AREA BLOCK
         MVI   NEW.AREA_TYPE,$AREA_INSTRUCTION AREA IS AN INSTRUCTION
         MVC   NEW.AREA_BEGIN,DXD_AREA_START   STARTING DISP
         SR    R1,R1
         ICM   R1,3,OP1.OPCODE_LENGTH          INSTRUCTION LENGTH
         STCM  R1,15,NEW.AREA_LENGTH           AREA LENGTH
         A     R1,DXD_AREA_START               PLUS START
         ST    R1,DXD_SCAN_DISP                UPDATE DISP TO EXAMINE
         ST    R1,DXD_AREA_START               START OF NEXT AREA
         BCTR  R1,0                            MINUS 1
         STCM  R1,15,NEW.AREA_END              END DISP
         ST    R4,NEW.AREA_OPCODE              CORRESPONDING OPCODE
         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH
         ITRACE ID=NEW_X,                                              +
               DATA1=NEW.AREA_BEGIN,                                   +
               DATA2=(NEW.AREA_TYPE,1)
         B     SCAN0010
* --------------------------------------------------------------------*
*                                                                     *
* --------------------------------------------------------------------*
SCAN0200 DS    0H
         ITRACE ID=SCAN0200,                                           +
               DATA1=(DXD_SCAN_DISP,4)
         L     R1,DXD_SCAN_DISP                CURRENT SCAN DISP
         LA    R1,1(,R1)                       PLUS 1
         ST    R1,DXD_SCAN_DISP                UPDATE DISP
         L     R1,DXD_DATA_LENGTH              DATA FOUND SO FAR
         LA    R1,1(,R1)                       PLUS 1
         ST    R1,DXD_DATA_LENGTH              UPDATE LENGTH
         B     SCAN0010                        GO BACK TO TOP OF LOOP
* --------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*         End of CSECT                                                *
*                                                                     *
*         Add final AREA block if necessary                           *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
SCAN0300 DS    0H
         ITRACE ID=SCAN0300,                                           +
               DATA1=(DXD_AREA_START,4),                               +
               DATA2=(DXD_DATA_LENGTH,4)
         OC    DXD_DATA_LENGTH,DXD_DATA_LENGTH ANY DATA FOUND?
         BZ    SCAN0310                        NO
         BAL   R15,SCAN0400                    GETMAIN NEW AREA BLOCK
         MVC   NEW.AREA_BEGIN,DXD_AREA_START   SET BEGINNING DISP
         L     R3,DXD_SCAN_DISP                STOPPING DISP
         BCTR  R3,0                            MINUS 1
         ST    R3,NEW.AREA_END                 SET ENDING DISP
         S     R3,NEW.AREA_BEGIN               AREA LENGTH
         LA    R3,1(,R3)                       PLUS 1
         ST    R3,NEW.AREA_LENGTH              SET LENGTH
         MVI   NEW.AREA_TYPE,$AREA_DATA        AREA IS DATA
         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL   INTERNALLY DETECTED
         ITRACE ID=NEWDATA2,                                           +
               RDATA1=R1,                                              +
               DATA2=NEW.AREA_BEGIN
         DROP  NEW
* --------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*        There are now two chains that together 'describe' the        *
*        entire CSECT.                                                *
*                                                                     *
*        One is the 'ALL' AREA chain.  The other is the new areas     *
*        detected during the scan.                                    *
*                                                                     *
*        Now "merge" the two chains.  The result will be one chain    *
*        of AREA blocks that "describe" every byte of the CSECT.      *
*                                                                     *
*                                                                     *
* --------------------------------------------------------------------*
SCAN0310 DS    0H
         ITRACE ID=RECHAIN,                                            +
               DATA1=DXD_NEW_AREAS,                                    +
               DATA2=DISCOMM_ALL_AREA_NEXT
         L     R2,DISCOMM_ALL_AREA_NEXT        FIRST ON CHAIN
         XC    DISCOMM_ALL_AREA_NEXT,DISCOMM_ALL_AREA_NEXT
         LTR   R2,R2
         BNZ   SCAN0320                        ANYTHING ON CHAIN?
         LA    R2,DUMMY_FF                     SET TO DUMMY AREA
A        USING AREA_DSECT,R2
NEW      USING AREA_DSECT,R1
SCAN0320 DS    0H
         ICM   R3,15,DXD_NEW_AREAS             ANY NEW AREAS?
         BNZ   SCAN0330                        YES
B        USING AREA_DSECT,R3
         LA    R3,DUMMY_FF                     SET TO DUMMY AREA
SCAN0330 DS    0H
         XC    DXD_NEW_AREAS,DXD_NEW_AREAS     RESET
         LA    R4,DISCOMM_ALL_AREA_PREV        RESULT CHAIN POINT
PREV     USING AREA_DSECT,R4
SCAN0340 DS    0H
         ITRACE ID=A_B,                                                +
               DATA1=A.AREA_BEGIN,                                     +
               DATA2=B.AREA_BEGIN
         CLC   A.AREA_BEGIN,B.AREA_BEGIN       COMPARE A WITH B
         BL    SCAN0350                        A < B
         BH    SCAN0360                        A > B
         C     R2,=A(DUMMY_FF)                 AT END OF CHAINS?
         BE    EXIT0000                        YES
         DC    H'0'
SCAN0350 DS    0H
         ITRACE ID=ADD_A,                                              +
               RDATA1=R2,                                              +
               DATA2=A.AREA_BEGIN
         LR    R1,R2                           COPY ADDRESS
         L     R2,A.AREA_NEXT                  NEXT ON CHAIN
         ST    R1,PREV.AREA_NEXT
         ST    R4,NEW.AREA_PREV
         XC    NEW.AREA_NEXT,NEW.AREA_NEXT
         LR    R4,R1
         LTR   R2,R2                           ANOTHER BLOCK?
         BNZ   SCAN0340                        YES
         LA    R2,DUMMY_FF                     SET TO DUMMY AREA
         B     SCAN0340
SCAN0360 DS    0H
         ITRACE ID=ADD__B,                                             +
               RDATA1=R3,                                              +
               DATA2=B.AREA_BEGIN
         LR    R1,R3
         L     R3,B.AREA_NEXT
         ST    R1,PREV.AREA_NEXT
         ST    R4,NEW.AREA_PREV
         XC    NEW.AREA_NEXT,NEW.AREA_NEXT
         LR    R4,R1
         LTR   R3,R3                           ANOTHER AREA?
         BNZ   SCAN0340                        YES
         LA    R3,DUMMY_FF                     SET TO DUMMY
         B     SCAN0340
* --------------------------------------------------------------------*
*                                                                     *
*        GETMAIN/init new AREA blocks                                 *
*                                                                     *
* --------------------------------------------------------------------*
SCAN0400 DS    0H
         ST    R15,DXD_SAVE_LINK
         GETMAIN RU,                                                   +
               LV=AREA_DSECT_L,                                        +
               LOC=ANY
         LR    R5,R1
         ITRACE ID=NEW_AREA,                                           +
               RDATA1=R5
         XC    NEW.AREA_DSECT(AREA_DSECT_L),NEW.AREA_DSECT
         MVC   NEW.AREA_EYE,AREA_ID            IDENTIFY AREA
         OC    DXD_NEW_AREAS,DXD_NEW_AREAS     ANY AREAS YET?
         BNZ   SCAN0410                        YES
         ST    R5,DXD_NEW_AREAS                FIRST NEW AREA
SCAN0410 DS    0H
         ICM   R2,15,DXD_LAST_AREA             LAST AREA ADDED
         BZ    SCAN0420                        NONE YET
LAST     USING AREA_DSECT,R2
         ST    R5,LAST.AREA_NEXT               CHAIN TO LAST ON CHAIN
         DROP  LAST
SCAN0420 DS    0H
         ST    R5,DXD_LAST_AREA                CHANGE 'LAST' AREA
         ST    R2,NEW.AREA_PREV                CHAIN PREVIOUS BLOCK
         L     R15,DXD_SAVE_LINK
         BR    R15
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         LA    R1,DUMMY_FF                     DUMMY 'AREA'
         ITRACE ID=EXIT0000,                                           +
               RDATA1=R1
         ICM   R5,15,DISCOMM_ALL_AREA_NEXT     FIRST DATA AREA
         BZ    EXIT0040                        NO DATA AREAS
NEW      USING AREA_DSECT,R5
EXIT0010 DS    0H
         ITRACE ID=EXIT0010,                                           +
               RDATA1=R5,                                              +
               DATA2=(NEW.AREA_NEXT,4)
         C     R1,NEW.AREA_NEXT                POINTING TO 'DUMMY'?
         BE    EXIT0020                        YES
         ICM   R5,15,NEW.AREA_NEXT             NEXT AREA
         BNZ   EXIT0010                        LOOP
         B     EXIT0030
EXIT0020 DS    0H
         ITRACE ID=EXIT0020
         XC    NEW.AREA_NEXT,NEW.AREA_NEXT     CLEAR ADDRESS
EXIT0030 DS    0H
         ITRACE ID=EXIT0030
         ICM   R5,15,DISCOMM_ALL_AREA_NEXT     FIRST DATA AREA
         XC    NEW.AREA_PREV,NEW.AREA_PREV     NO PREV IN 1ST BLOCK
EXIT0040 DS    0H
         ITRACE ID=EXIT0040
         L     R13,4(,R13)                     RESTORE REGISTER 13
         LM    R14,R12,12(R13)                 RESTORE OTHER REGISTERS
         SR    R15,R15                         GIVE GOOD RETURN CODE
         BR    R14                             RETURN TO CALLER
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DXD_START DC   Q(DXDSCAN)
H6        DC   H'6'
AREA_ID   DC   CL8'AREA'

DUMMY_FF  DC   (AREA_DSECT_L)X'FF'


ALPHA_TABLE        DS  0C 0 1 2 3 4 5 6 7 8 9 A B C D E F'
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   00-0F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   10-1F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   20-2F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   30-3F
                   DC  X'00FFFFFFFFFFFFFFFFFFFF00FF0000FF'   40-4F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFF00000000FF'   50-5F
                   DC  X'0000FFFFFFFFFFFFFFFFFF00FF00FFFF'   60-6F
                   DC  X'FFFFFFFFFFFFFFFFFFFF000000000000'   70-7F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   80-8F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   90-9F
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   A0-AF
                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   B0-BF
                   DC  X'FF000000000000000000FFFFFFFFFFFF'   C0-CF
                   DC  X'FF000000000000000000FFFFFFFFFFFF'   D0-DF
                   DC  X'FFFF0000000000000000FFFFFFFFFFFF'   E0-EF
                   DC  X'00000000000000000000FFFFFFFFFFFF'   F0-FF

*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
DXDSCAN            DSECT
                   COPY DXDPREF
DXD_I              DS  0A
DXD_MAX_DISP       DS  F                MAX DISPLACEMENT
DXD_NEW_AREAS      DS  A                FIRST NEW AREA
DXD_LAST_AREA      DS  A                LAST NEW AREA BLOCK
DXD_AREA_START     DS  A                DISP CURRENT AREA STARTED
DXD_SCAN_DISP      DS  A                DISP CURRENTLY BEING EXAMINED
DXD_SAVE_LINK      DS  A
DXD_DATA_LENGTH    DS  F                NBR OF BYTES OF DATA DETECTED
DXD_ALPHA_SCAN     DS  F                CONSECUTIVE ALPHA CHARACTERS

DXD_EXIT_PARMS     DS  0A
DXD_EXIT_PARM1     DS  A                OPCODE TABLE ENTRY ADDR
DXD_EXIT_PARM2     DS  A                INSTRUCTION TEXT ADDR
DXD_L              EQU *-DXD_I
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     REGEQU
         END     DISSCAN
