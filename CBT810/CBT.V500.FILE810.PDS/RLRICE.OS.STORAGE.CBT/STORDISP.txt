* ------------------------------------------------------------------- *
*                                                                     *
*  Process displacments (primary command + or -)                      *
*                                                                     *
*  Allows the user to "scroll" forward or backward by entering        *
*  a "+dddd" or "-dddd" where dddd is a hex displacement.             *
*                                                                     *
* ------------------------------------------------------------------- *
STORDISP CSECT
STORDISP AMODE 31
STORDISP RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING STORCOMM,R9
         USING STORDISP,R15
         B     INIT0000
MODID    DC    CL8'STORDISP'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING STORDISP,R10                   DEFINE BASE
         L     R1,SESS_DXD_ADDR
         A     R1,DXD_START
         ST    R1,8(,R13)
         ST    R13,4(,R1)
         LR    R13,R1
         USING DXDDISP,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         ICM   R1,15,OPERAND_01_ADDRESS       OPERAND'S ADDRESS
         BZ    EXIT0008                       NOT PRESENT
         SR    R2,R2
         ICM   R2,3,OPERAND_01_LENGTH         OPERAND LENGTH
         CH    R2,H9                          TOO LONG?
         BH    EXIT0008                       YES
         LA    R1,1(,R1)                      SKIP "+" OR "-"
         BCT   R2,INIT0010
         B     EXIT0008
INIT0010 DS    0H
         ITRACE ID=CHEKDISP,                                           +
               RDATA1=R1,                                              +
               RDATA2=R2
INIT0020 DS    0H
         CLI   0(R1),C'A'                     VALID?
         BL    EXIT0008                       NO
         CLI   0(R1),C'G'                     VALID?
         BL    INIT0030                       YES
         CLI   0(R1),C'0'                     VALID?
         BL    EXIT0008                       NO
         CLI   0(R1),C'9'                     VALID?
         BH    EXIT0008                       NO
INIT0030 DS    0H
         LA    R1,1(,R1)                      NEXT
         BCT   R2,INIT0020                    LOOP
* ------------------------------------------------------------------- *
*        Operand is valid.  Assume it is a displacment.               *
* ------------------------------------------------------------------- *
         ICM   R1,15,OPERAND_01_ADDRESS       OPERAND'S ADDRESS
         XC    COMM_INFO_01(8),COMM_INFO_01
         CLI   OPERAND_01_LENGTH+1,1          1 BYTE?
         BE    MAIN0010                       YES
         CLI   OPERAND_01_LENGTH+1,2          2 BYTES?
         BE    MAIN0020                       YES
         CLI   OPERAND_01_LENGTH+1,3          3 BYTES?
         BE    MAIN0030                       YES
         CLI   OPERAND_01_LENGTH+1,4          4 BYTES?
         BE    MAIN0040                       YES
         CLI   OPERAND_01_LENGTH+1,5          5 BYTES?
         BE    MAIN0050                       YES
         CLI   OPERAND_01_LENGTH+1,6          6 BYTES?
         BE    MAIN0060                       YES
         CLI   OPERAND_01_LENGTH+1,7          7 BYTES?
         BE    MAIN0070                       YES
         MVC   COMM_INFO_01+0(8),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0010 DS    0H
         MVC   COMM_INFO_01+7(1),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0020 DS    0H
         MVC   COMM_INFO_01+6(2),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0030 DS    0H
         MVC   COMM_INFO_01+5(3),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0040 DS    0H
         MVC   COMM_INFO_01+4(4),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0050 DS    0H
         MVC   COMM_INFO_01+3(5),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0060 DS    0H
         MVC   COMM_INFO_01+2(8),0(R1)        COPY TO WORK AREA
         B     MAIN0080
MAIN0070 DS    0H
         MVC   COMM_INFO_01+1(7),0(R1)        COPY TO WORK AREA
MAIN0080 DS    0H
         TR    COMM_INFO_01(8),CHARHEX
         PACK  COMM_DWORD(5),COMM_INFO_01(9)  PACK IT
         ICM   R1,15,OPERAND_01_ADDRESS
         CLI   0(R1),C'-'                     MINUS?
         BE    MAIN0090                       YES
         L     R0,STORCOMM_DATA_ADDR          CURRENT ADDRESS
         A     R0,COMM_DWORD                  PLUS NEW DISP
         ST    R0,STORCOMM_DATA_ADDR          UPDATE ADDRESS
         L     R0,STORCOMM_DATA_DISP          CURRENT DISPLACEMENT
         A     R0,COMM_DWORD                  PLUS NEW DISP
         ST    R0,STORCOMM_DATA_DISP          UPDATE DISPLACEMENT
         B     MAIN0100
MAIN0090 DS    0H
         L     R0,STORCOMM_DATA_ADDR          CURRENT ADDRESS
         S     R0,COMM_DWORD                  MINUS NEW DISP
         ST    R0,STORCOMM_DATA_ADDR          UPDATE ADDRESS
         L     R0,STORCOMM_DATA_DISP          CURRENT DISPLACEMENT
         S     R0,COMM_DWORD                  MINUS NEW DISP
         ST    R0,STORCOMM_DATA_DISP          UPDATE DISPLACEMENT
MAIN0100 DS    0H
         NI    STORCOMM_DATA_ADDR+3,X'FC'     FORCE FULLWORD BOUNDARY
         NI    STORCOMM_DATA_DISP+3,X'FC'     FORCE FULLWORD BOUNDARY
         ITRACE ID=NEW_ADDR,                                           +
               DATA1=(STORCOMM_DATA_ADDR,4)
         MVC   STORCOMM_NEW_FUNCTION,V_STORSTOR
         MVC   SPF_ZCMD,COMM_BLANKS
         SR    R15,R15                        SET RC
         B     EXITEXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0008 DS    0H
         LA    R15,8
EXITEXIT DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(,R13)                     RESTORE R13
         L     R14,12(,R13)                    RESTORE R14
         LM    R0,R12,20(R13)                  RESTORE REGISTERS
         BR    R14                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START      DC       Q(DXDDISP)
V_STORSTOR     DC       V(STORSTOR)
H9             DC       H'9'

CHARHEX        DC       256C' '
               ORG      CHARHEX+C'A'
               DC       X'0A0B0C0D0E0F'
               ORG      CHARHEX+C'0'
               DC       X'00010203040506070809'
               ORG      CHARHEX+256

               LTORG

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDDISP        DSECT
               COPY     DXDPREF
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               STORCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      STORDISP
