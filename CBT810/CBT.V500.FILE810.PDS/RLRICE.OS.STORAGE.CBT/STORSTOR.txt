* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: STORSTOR                                              *
*                                                                     *
*                                                                     *
*  Displays storage 'unformatted'                                     *
*                                                                     *
*  ASID            STORCOMM_ASID                                      *
*  Starting addr   STORCOMM_DATA_ADDR                                 *
*                                                                     *
* ------------------------------------------------------------------- *
STORSTOR CSECT
STORSTOR AMODE 31
STORSTOR RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING STORSTOR,R15
         B     INIT0000
MODID    DC    CL8'STORSTOR'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING STORSTOR,R10                   DEFINE BASE
         USING STORCOMM,R9
         L     R15,SESS_DXD_ADDR              WORK AREA BASE
         A     R15,DXD_START                  PLUS DISP
         ST    R13,4(,R15)                    SAVE R13
         ST    R15,8(,R13)                    CHAIN SAVE AREA
         LR    R13,R15
         USING DXDSTOR,R13                    DEFINE WORK AREA BASE
         CLC   DXD_CSECT,MODID                INITIALIZED?
         BE    INIT0010                       YES
         MVC   DXD_CSECT,MODID
         MVC   DXD_ESTAEX(ESTAEX_L),ESTAEX_I  INITIALIZE
INIT0010 DS    0H
         ITRACE ID=ENTRY,                                              +
               DATA1=(STORCOMM_FUNCTION,1)
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         LA    R0,COMMAND_TABLE
         ST    R0,COMM_SUB_COMMAND_TABLE
         MVI   STORCOMM_STATUS,$STORCOMM_OK
         MVI   DXD_FLAGS,0
         CLI   STORCOMM_FUNCTION,$STORCOMM_PNS
         BE    PNS0000
         CLI   STORCOMM_FUNCTION,$STORCOMM_CLEANUP
         BE    EXIT0000
*        AGO   .A
         LA    R0,MAIN0400
         ST    R0,SESS_RETRY
         LA    R0,ABEND_TABLE                 ACCEPTABLE ABEND POINTS
         ST    R0,DXD_ESTAE_LIST
         ST    R8,DXD_ESTAE_OSSPFD            COULD USE AN STM
         ST    R9,DXD_ESTAE_STORCOMM
         ST    R10,DXD_ESTAE_CSECT
         ST    R11,DXD_ESTAE_SESSION
         ST    R12,DXD_ESTAE_OSCOMM
         L     R2,V_STORSTAE                  ESTAE EXIT ADDR
         LA    R3,DXD_ESTAE_PARMS             ESTAE PARMS ADDR
         ITRACE ID=ESTAEX,                                             +
               RDATA1=R3,                                              +
               RDATA2=R2
         ESTAEX (R2),                         SET ESTAE                +
               CT,                                                     +
               PARAM=(R3),                                             +
               XCTL=NO,                                                +
               PURGE=NONE,                                             +
               ASYNCH=NO,                                              +
               CANCEL=YES,                                             +
               MF=(E,DXD_ESTAEX)
         LTR   R15,R15
         BNZ   ERR0010
         OI    DXD_FLAGS,$ESTAE
.A       ANOP
         CLI   STORCOMM_FUNCTION,$STORCOMM_FORMAT
         BE    INIT0020
         CLI   STORCOMM_FUNCTION,$STORCOMM_COMMAND
         BE    MAIN0100
         DC    H'0'
* ------------------------------------------------------------------- *
*        Housekeeping                                                 *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS
         MVC   SESS_DISP_PANEL,PANEL_NAME
* ------------------------------------------------------------------- *
*        Initialize VDATA and point-and-shoot                         *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         L     R0,STORCOMM_VDATA_ADDR         VDATA ADDRESS
         L     R1,STORCOMM_VDATA_LENGTH       VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
*        DC    H'0'
*        MVCL  R0,R14                         INITIALIZE VDATA
         L     R0,STORCOMM_PNS_TABLE_ADDR     POINT AND SHOOT ADDRESS
         L     R1,STORCOMM_PNS_TABLE_LENGTH   POINT AND SHOOT LENGTH
         SR    R14,R14
         SR    R15,R15
*        MVCL  R0,R14                         INIT POINT AND SHOOT
*        DC    H'0'
* ------------------------------------------------------------------- *
*        Enter key zero, set secondary                                *
* ------------------------------------------------------------------- *
         OI    DXD_FLAGS,$AR                  AR MODE STUFF ON
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN ON APF AUTH
         MODESET KEY=ZERO
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
         LH    R1,STORCOMM_ASID
         ITRACE ID=SET,                                                +
               RDATA1=R1
         SSAR  (R1)
* ------------------------------------------------------------------- *
*        Format detail                                                *
* ------------------------------------------------------------------- *
         L     R3,STORCOMM_PNS_TABLE_ADDR     POINT AND SHOOT TABLE
         USING PNS,R3
         L     R4,STORCOMM_DATA_DISP          DISP
         L     R6,STORCOMM_VDATA_ADDR         VDATA ADDRESS
         L     R7,STORCOMM_VDEPTH             DEPTH
         L     R5,STORCOMM_DATA_ADDR          DATA ADDRESS
MAIN0010 DS    0H
         ITRACE ID=STORAGE,                                            +
               RDATA1=R5,                                              +
               RDATA2=R4
         ST    R5,DXD_CURRENT_ADDR
         MVC   0(MSG01_L,R6),MSG01
V        USING MSG01,R6
         LAM   R5,R5,F1                       SET SECONDARY ALET
         SAC   512                            TURN ON AR MODE
STORMVC  MVC   DXD_STORAGE,0(R5)              COPY TO OUR A/S
MAIN0020 DS    0H
         SAC   0
         LAM   R5,R5,F0                       SET SECONDARY ALET
         UNPK  DXD_UNPACK(9),DXD_CURRENT_ADDR(5)
         MVC   V.MSG01_ADDR,DXD_UNPACK
         TR    V.MSG01_ADDR,COMM_HEXCHAR
         UNPK  DXD_HEX_1(9),DXD_STORAGE+00(5) UNPACK
         UNPK  DXD_HEX_2(9),DXD_STORAGE+04(5) UNPACK
         UNPK  DXD_HEX_3(9),DXD_STORAGE+08(5) UNPACK
         UNPK  DXD_HEX_4(9),DXD_STORAGE+12(5) UNPACK
         TR    DXD_HEX_1,COMM_HEXCHAR
         TR    DXD_HEX_2,COMM_HEXCHAR
         TR    DXD_HEX_3,COMM_HEXCHAR
         TR    DXD_HEX_4,COMM_HEXCHAR
         MVC   V.MSG01_HEX_1,DXD_HEX_1
         MVC   V.MSG01_HEX_2,DXD_HEX_2
         MVC   V.MSG01_HEX_3,DXD_HEX_3
         MVC   V.MSG01_HEX_4,DXD_HEX_4
         MVC   V.MSG01_CHAR,DXD_STORAGE
         TR    V.MSG01_CHAR,PRINTABLES        TRANSLATE UNPRINTABLES
         ST    R4,DXD_CURRENT_DISP
         UNPK  DXD_UNPACK(9),DXD_CURRENT_DISP(5)
         MVC   V.MSG01_DISP,DXD_UNPACK
         TR    V.MSG01_DISP,COMM_HEXCHAR      TRANSLATE
         DROP  V
         A     R6,STORCOMM_VWIDTH             NEXT LINE
         AH    R5,H16                         UPDATE ADDR
         AH    R4,H16                         UPDATE DISP
         LA    R3,PNS_L(,R3)                  NEXT IN POINT AND SHOOT
         BCT   R7,MAIN0010                    LOOP
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Check for local primary command                              *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         ITRACE ID=ZCMD,                                               +
               DATA1=SPF_ZCMD,                                         +
               DATA2=(OPERAND_01_LENGTH,2)
         CLC   SPF_ZCMD,COMM_BLANKS           BLANK?
         BE    MAIN0110                       YES
         MVC   SESS_COMMAND_ADDRESS,OPERAND_01_ADDRESS
         MVC   SESS_COMMAND_LENGTH,OPERAND_01_LENGTH
         MVC   DXD_COMMAND_SAVE,COMM_MAIN_COMMAND_TABLE
         LA    R0,COMMAND_TABLE
         ST    R0,COMM_MAIN_COMMAND_TABLE
         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_SEARCH
         L     R15,COMM_V_OSCMD               OSCMD ENTRY POINT
         BALR  R14,R15                        CHECK FOR COMMAND
         ITRACE ID=CMD_X,                                              +
               DATA1=(SESS_COMMAND_FLAGS,1),                           +
               RDATA2=R15
         MVC   COMM_MAIN_COMMAND_TABLE,DXD_COMMAND_SAVE
         TM    SESS_COMMAND_FLAGS,$SESS_COMMAND_FOUND
         BOR   R15                            PROCESS THE COMMAND
MAIN0110 DS    0H
         L     R2,SPF_ROW                     ROW NUMBER
         L     R1,SPF_COLUMN                  COLUMN NUMBER
         ITRACE ID=ROW_COL,                                            +
               RDATA1=R2,                                              +
               RDATA2=R1
         CH    R2,H6                          IN STORAGE DISPLAY AREA?
         BL    MAIN0300                       NO
         SH    R2,H6                          COMPUTE RELATIVE ROW
         SLL   R2,4                           MULTIPLY BY DATA PER ROW
         CH    R1,=Y(MSG01_HEX_1-MSG01)       IN DATA AREA?
         BL    MAIN0300                       TOO LOW
         CH    R1,=Y((MSG01_HEX_4-MSG01)+(L'MSG01_HEX_4-1))
         BH    MAIN0300                       TOO HIGH
         CH    R1,=Y(MSG01_COL_1-MSG01)       IN INTER-COLUMN SPACE 1?
         BE    MAIN0300                       YES
         CH    R1,=Y(MSG01_COL_2-MSG01)       IN INTER-COLUMN SPACE 2?
         BE    MAIN0300                       YES
         CH    R1,=Y(MSG01_COL_3-MSG01)       IN INTER-COLUMN SPACE 3?
         BE    MAIN0300                       YES
         SH    R1,=Y(MSG01_HEX_1-MSG01)       MINUS START DISP
         SR    R0,R0
         D     R0,F9                          COMPUTE DATA COLUMN
         ITRACE ID=DATADISP,                                           +
               RDATA1=R1,                                              +
               RDATA2=R2
         SLL   R1,2                           MULTIPLY BY DATA PER COL
         L     R5,STORCOMM_DATA_ADDR          STARTING DATA ADDRESS
         AR    R5,R2                          PLUS DATA PER ROW
         AR    R5,R1                          PLUS DATA PER COLUMN
         ITRACE ID=DATAADDR,                                           +
               RDATA1=R5
         OI    DXD_FLAGS,$AR                  AR STUFF ON
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN ON APF AUTH
         MODESET KEY=ZERO
         LH    R1,STORCOMM_ASID               SECONDARY SPACE ASID
         ITRACE ID=SSAR,                                               +
               RDATA1=R1
         SSAR  (R1)
         LAM   R5,R5,F1
         SAC   512
         MVC   STORCOMM_DATA_ADDR,0(R5)
         SAC   0
         LAM   R5,R5,F0
         EPAR  (R1)
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)
         MODESET KEY=NZERO
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
         NI    DXD_FLAGS,255-$AR              AR STUFF OFF
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         ITRACE ID=PNS_X,                                              +
               DATA1=(STORCOMM_DATA_ADDR,4),                           +
               DATA2=(STORCOMM_DATA_DISP,4)
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0120 DS    0H
         ITRACE ID=Z
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         MVC   SPF_ZCMD,COMM_BLANKS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0130 DS    0H
         L     R15,COMM_V_OSFIND              OSFIND ENTRY POINT
         ITRACE ID=CALLFIND,                                           +
               RDATA1=R15
         BALR  R14,R15                        LINK TO OSFIND
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   EXIT0000                       NO.. DISPLAY WITH MSG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0180 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS           RESET COMMAND
         SR    R2,R2
         ICM   R2,3,SESS_SEARCH_ARG_LENGTH    SEARCH ARG LENGTH
         BZ    MAIN0220                       NO STRING DEFINED
         ITRACE ID=SEARCH,                                             +
               RDATA1=R2,                                              +
               DATA2=SESS_SEARCH_ARG
         BCTR  R2,0
         L     R3,F100K                       100K
         L     R4,STORCOMM_DATA_DISP          DATA DISP
         L     R5,STORCOMM_DATA_ADDR          DATA ADDRESS
         OI    DXD_FLAGS,$AR                  AR STUFF ON
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN ON APF AUTH
*        OI    COMM_FLAGS,$COMM_NO_FORMAT
         MODESET KEY=ZERO                     ALLOW MAYHEM
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
         LH    R1,STORCOMM_ASID               SECONDARY ASID
         ITRACE ID=SSAR,                                               +
               RDATA1=R1
         SSAR  (R1)                           SECONDARY A/S
         LAM   R5,R5,F1                       SET AR
         SAC   512                            TURN ON AR MODE
         B     MAIN0200
MAIN0190 DS    0H
         EX    R2,ARG_CLC                     SEARCH STRING FOUND?
         BE    MAIN0210                       YES
MAIN0200 DS    0H
         LA    R5,1(,R5)                      NEXT ADDRESS
         LA    R4,1(,R4)                      NEXT DISP
         BCT   R3,MAIN0190                    CONTINUE SEARCH
         ST    R5,STORCOMM_DATA_ADDR          SAVE ENDING ADDRESS
         ST    R4,STORCOMM_DATA_DISP          SAVE ENDING DISP
         MVC   SPF_MSG_2(MSG03_L),MSG03       COPY MESSAGE
         MVI   STORCOMM_STATUS,$STORCOMM_ERROR
         OI    DXD_FLAGS,$REBUILD             SET REBUILD FLAG
         B     MAIN0250
MAIN0210 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS
         MVC   SPF_MSG_2(MSG04_L),MSG04       COPY MESSAGE
         ST    R5,STORCOMM_DATA_ADDR          SAVE ENDING ADDRESS
         ST    R4,STORCOMM_DATA_DISP          SAVE ENDING DISP
         B     MAIN0250
MAIN0220 DS    0H
         MVC   SPF_MSG_2(MSG05_L),MSG05       COPY MESSAGE
         MVI   STORCOMM_STATUS,$STORCOMM_ERROR
         B     MAIN0250
MAIN0250 DS    0H
         SAC   0                              EXIT AR MODE
         LAM   R5,R5,F0                       CLEAR AR
         EPAR  (R1)                           OUR AX
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)                           RESET XMEM
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN ON APF AUTH
         MODESET KEY=NZERO                    ENOUGH MAYHEM
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
         NI    DXD_FLAGS,255-$AR              AR STUFF OFF
         TM    DXD_FLAGS,$REBUILD             REBUILD DATA?
         BO    MAIN0000                       YES
         B     EXIT0000
ARG_CLC  CLC   SESS_SEARCH_ARG(0),0(R5)       TEST FOR STRING
* ------------------------------------------------------------------- *
*        Check for scroll command                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         ITRACE ID=SCROLL,                                             +
               DATA1=(SPF_ZVERB,1),                                    +
               DATA2=(SPF_ZSCROLLN,4)
         L     R1,SPF_ZSCROLLN                NBR OF LINES TO SCROLL
         SLL   R1,4                           MULT BY 16
         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?
         BE    MAIN0310                       YES
         CLI   SPF_ZVERB,C'U'                 UP?
         BE    MAIN0320                       YES
         B     EXIT0000
MAIN0310 DS    0H
         ITRACE ID=DOWN
         L     R0,STORCOMM_DATA_ADDR          CURRENT ADDR
         AR    R0,R1                          PLUS SCROLL
         ST    R0,STORCOMM_DATA_ADDR          UPDATE DISP
         L     R0,STORCOMM_DATA_DISP          CURRENT DISP
         AR    R0,R1                          PLUS DISP
         ST    R0,STORCOMM_DATA_DISP          UPDATE DISP
         B     MAIN0350
MAIN0320 DS    0H
         ITRACE ID=UP
         L     R0,STORCOMM_DATA_ADDR          CURRENT ADDR
         SR    R0,R1                          MINUS SCROLL AMOUNT
*        BP    MAIN0330                       IF POSITIVE.. BRANCH
         B     MAIN0330
         XC    STORCOMM_DATA_ADDR,STORCOMM_DATA_ADDR
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         B     MAIN0350                       LIMIT TO ZERO
MAIN0330 DS    0H
         ST    R0,STORCOMM_DATA_ADDR          UPDATE CURRENT ADDR
         L     R0,STORCOMM_DATA_DISP          CURRENT DISP
         SR    R0,R1                          MINUS SCROLL AMOUNT
         ST    R0,STORCOMM_DATA_DISP          UPDATE DISP
MAIN0350 DS    0H
         ITRACE ID=NEW,                                                +
               DATA1=(STORCOMM_DATA_ADDR,4),                           +
               DATA2=(STORCOMM_DATA_DISP,4)
         B     EXIT0000
* ------------------------------------------------------------------- *
*        ABEND was intercepted by ESTAEX exit                         *
* ------------------------------------------------------------------- *
MAIN0400 DS    0H
         ITRACE ID=ABENDED
         MVC   SPF_MSG_1(MSG02_L),MSG02
         MVC   SPF_ZCMD,COMM_BLANKS
*        MVC   STORCOMM_DATA_ADDR,DXD_CURRENT_ADDR
*        MVC   STORCOMM_DATA_DISP,DXD_CURRENT_DISP
         MVI   STORCOMM_STATUS,$STORCOMM_ERROR
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PNS0000  DS    0H
         ITRACE ID=PNS,                                                +
               DATA1=(STORCOMM_PNS_DATA_ADDR,4)
         DC    H'0'                           SHOULD NEVER GET HERE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID,0
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE
         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE
         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE
         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE
         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    DXD_FLAGS,$AR
         BNO   EXIT0010
         EPAR  (R1)
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)
         SAC   0
         LAM   R5,R5,F0
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN ON APF AUTH
         MODESET KEY=NZERO
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
EXIT0010 DS    0H
         TM    DXD_FLAGS,$ESTAE
         BNO   EXIT0020
         ITRACE ID=NO_STAE
         XC    SESS_RETRY,SESS_RETRY          CLEAR RETRY
         ESTAE 0
EXIT0020 DS    0H
         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE
         ITRACE ID=EXIT
         LH    R15,DXD_RC                     RETURN CODE
         L     R13,4(,R13)                    RESTORE R13
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START       DC       Q(DXDSTOR)
V_STORSTAE      DC       V(STORSTAE)

ESTAEX_I ESTAEX *,                                                     +
               CT,                                                     +
               MF=L
ESTAEX_L EQU    *-ESTAEX_I

AUTH            DC       C'AUTH'
F0              DC       F'0'
F1              DC       F'1'
F9              DC       F'9'
F80             DC       F'80'
F100K           DC       A(100*1024)
H2              DC       H'2'
H6              DC       H'6'
H16             DC       H'16'
H20             DC       H'20'
H29             DC       H'29'
H38             DC       H'38'
H46             DC       H'46'

C_Z             DC       C'Z '
PANEL_NAME      DC       CL8'STORSTOR'

MSG01           DS       0C
MSG01_ATTR1     DC       AL1($SCREEN_ATTR_HIGH)
MSG01_ADDR      DC       CL8' '
MSG01_ATTR2     DC       AL1($SCREEN_ATTR_NORMAL)
                DC       CL4' '
MSG01_HEX_1     DC       CL8' '
MSG01_COL_1     DC       CL1' '
MSG01_HEX_2     DC       CL8' '
MSG01_COL_2     DC       CL1' '
MSG01_HEX_3     DC       CL8' '
MSG01_COL_3     DC       CL1' '
MSG01_HEX_4     DC       CL8' '
                DC       CL2' '
MSG01_CHAR      DC       CL16' '
                DC       CL4' '
MSG01_ATTR3     DC       AL1($SCREEN_ATTR_HIGH)
MSG01_DISP      DC       CL8' '
MSG01_L         EQU      *-MSG01

MSG02           DS       0C
                DC       C'Inaccessable storage'
MSG02_L         EQU      *-MSG02

MSG03           DS       0C
                DC       C'100K searched.  Press PF5 to continue'
MSG03_L         EQU      *-MSG03

MSG04           DS       0C
                DC       C'String located'
MSG04_L         EQU      *-MSG04

MSG05           DS       0C
                DC       C'No search string has been given'
MSG05_L         EQU      *-MSG05

*                           0 1 2 3 4 5 6 7 8 9 A B C D E F
PRINTABLES      DS       0C
                DC       X'40404040404040404040404040404040' 00-0F
                DC       X'40404040404040404040404040404040' 10-1F
                DC       X'40404040404040404040404040404040' 20-2F
                DC       X'40404040404040404040404040404040' 30-3F
                DC       X'404040404040404040404A4B4C4D4E4F' 40-4F
                DC       X'504040404040404040405A5B5C5D5E5F' 50-5F
                DC       X'60614040404040404040406B6C6D6E6F' 60-6F
                DC       X'404040404040404040407A7B7C7D7E7F' 70-7F
                DC       X'40818283848586878889408B8C8D8E8F' 80-8F
                DC       X'40919293949596979899409B9C9D9E9F' 90-9F
                DC       X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF
                DC       X'4040404040404040404040BBBCBDBEBF' B0-BF
                DC       X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF
                DC       X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF
                DC       X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF
                DC       X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF

                LTORG

ABEND_TABLE     DS       0A
                DC       A(STORMVC)
                DC       A(MAIN0020)
                DC       A(MAIN0190)
                DC       A(ARG_CLC)
                DC       X'FF'

COMMAND_TABLE   DS       0C
                CMD      F,MAIN0130,'Find string'
                CMD      FIND,MAIN0130,'Find string'
                CMD      RFIND,MAIN0180,'Repeat previous FIND'
                CMD      Z,MAIN0120,'Set displacment to zero'
                CMD      ZD,MAIN0120,'Set displacment to zero'
                DC       X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTOR           DSECT
                  COPY   DXDPREF
DXD_STORCOMM      DS     A
DXD_CURRENT_ADDR  DS     A
DXD_CURRENT_DISP  DS     A

DXD_COMMAND_SAVE  DS     A

DXD_ESTAEX         DS    0F,(ESTAEX_L)X
DXD_ESTAE_PARMS    DS    0A
DXD_ESTAE_LIST     DS    A
DXD_ESTAE_OSSPFD   DS    A
DXD_ESTAE_CSECT    DS    A
DXD_ESTAE_STORCOMM DS    A
DXD_ESTAE_SESSION  DS    A
DXD_ESTAE_OSCOMM   DS    A

DXD_RC            DS     H

DXD_UNPACK        DS     CL9
DXD_HEX_1         DS     CL8
DXD_HEX_2         DS     CL8
DXD_HEX_3         DS     CL8
DXD_HEX_4         DS     CL8
                  DS     X                SLACK FOR UNPACKING
DXD_STORAGE       DS     CL16

DXD_FLAGS         DS     X
$ESTAE            EQU    X'80'            .. ESTAE SET
$AR               EQU    X'40'            .. AR STUFF ON
$REBUILD          EQU    X'20'            .. REBUILD DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  STORCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     FIELDD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     PNS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  IBMMAC   SDWA=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     REGEQU
                  END      STORSTOR
