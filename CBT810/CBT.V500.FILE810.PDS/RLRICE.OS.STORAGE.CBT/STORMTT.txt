* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: STORMTT                                               *
*                                                                     *
*  Display master trace table                                         *
*                                                                     *
*                                                                     *
*                                                                     *
*  This program can be very confusing.                                *
*                                                                     *
*  For one, the most current data is displayed at the bottom...       *
*  remember the way the console works... new data is at the bottom    *
*  and older data is scrolled up and then off the top.                *
*                                                                     *
*                                                                     *
*                                                                     *
*  Improvements to consider...                                        *
*    Adding a "prev" option to the FIND?                              *
*    Setting the cursor to the string in the text on FINDs?           *
*    Use LVLINE to control nbr of lines                               *
*    Highlight (different color) certain messages?                    *
*    Automatic refresh on a user specified time interval?             *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
STORMTT  CSECT
STORMTT  AMODE 31
STORMTT  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING STORMTT,R15
         B     INIT0000
MODID    DC    CL8'STORMTT'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                 SAVE REGS
         LR    R10,R15                         COPY ENTRY POINT
         DROP  R15
         USING STORMTT,R10                     DEFINE BASE
         USING STORCOMM,R9                     DEFINE BASE
         USING MTTABLE,R5                      DEFINE BASE
         USING MTENTRY,R4                      DEFINE BASE
         L     R15,SESS_DXD_ADDR               WORK AREA BASE
         A     R15,DXD_START                   PLUS DISP
         ST    R13,4(,R15)                     SAVE R13
         ST    R15,8(,R13)                     CHAIN SAVE AREA
         LR    R13,R15
         USING DXDMTT,R13                      DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         L     R1,CVTPTR
         USING CVT,R1
         CLC   STORCOMM_ASID,H1                ALREADY IN MASTER A/S?
         BE    INIT0010                        YES
         MVC   STORCOMM_ASID,H1                FORCE ASID 1
         MVC   STORCOMM_SPACE_NAME,MASTER_NAME NAME IS '*MASTER'
         L     R2,CVTASVT                      ASVT ADDRESS
         USING ASVT,R2
         MVC   STORCOMM_ASCB,ASVTFRST+4        COPY MASTER'S ASCB ADDR
         MVC   SPF_MSG_3(MSG01_L),MSG01
INIT0010 DS    0H
         L     R2,CVTMSER                      MASTER DATA AREA
         USING BASE,R2
         MVC   STORCOMM_DATA_ADDR,BAMTTBL      MASTER TRACE TABLE ADDR
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         ST    R10,STORCOMM_FUNCTION           SET CURRENT FUNCTION
         MVC   SESS_DISP_PANEL,MTT_PANEL       USE MTT PANEL
         MVC   STORCOMM_PANEL_NAME,MTT_PANEL   USE STOR PANEL
         MVC   STORCOMM_CB_NAME,MTT_NAME       COPY CONTROL BLOCK NAME
         MVC   STORCOMM_CB_DESCRIPTION,MTT_DESC     CONTROL BLOCK DESC
         XC    DXD_ROW,DXD_ROW                 RESET ROW OFFSET
         XC    DXD_COL,DXD_COL                 RESET COLUMN OFFSET
INIT0020 DS    0H
         NI    DXD_FLAGS,255-$SEARCH           RESET SEARCH FLAG
         MVC   SPF_ZCMD,COMM_BLANKS
         BAL   R7,MAIN1000                     COPY THE TRACE TABLE
         BAL   R7,MAIN2000                     RELOCATE ADDRESSES
         BAL   R7,MAIN3000                     DETERMINE NBR OF ENTRIES
         ST    R1,DXD_TRACE_ENTRIES            SAVE NBR OF ENTRIES
         BAL   R7,MAIN4000                     BUILD INDEX
         MVC   DXD_DISPLAY_FIRST,DXD_INDEX_BOTTOM
         MVI   DXD_FLAGS,$BOTTOM               DISPLAY 'BOTTOM'
* ------------------------------------------------------------------- *
*        BUILD DISPLAY                                                *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=BUILD
         L     R0,STORCOMM_VDATA_ADDR          VDATA BUFFER
         L     R1,STORCOMM_VDATA_LENGTH        VDATA BUFFER LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                          INITIALIZE VDATA BUFFER
         ICM   R6,15,STORCOMM_VDEPTH           NBR OF LINES
         BZ    MAIN0100                        NO ROOM FOR DATA
         BCTR  R6,R0                           MINUS 1
         MH    R6,STORCOMM_VWIDTH+2            MULTIPLY BY WIDTH
         A     R6,STORCOMM_VDATA_ADDR          PLUS BASE
         L     R7,STORCOMM_VDEPTH              NBR OF LINES
         TM    DXD_FLAGS,$BOTTOM               AT BOTTOM?
         BNO   MAIN0010                        NO
         MVC   0(MSG02_L,R6),MSG02
         S     R6,STORCOMM_VWIDTH
         BCT   R7,MAIN0010
         B     MAIN0100
MAIN0010 DS    0H
         L     R3,DXD_DISPLAY_FIRST            INDEX TO START DISPLAY
MAIN0020 DS    0H
         L     R4,0(,R3)                       TRACE ENTRY FROM INDEX
         ITRACE ID=TRACE,                                              +
               RDATA1=R3,                                              +
               RDATA2=R4
         SR    R2,R2
         ICM   R2,3,MTENTLEN                   DATA LENGTH
         SH    R2,DXD_COL                      ANY DATA TO DISPLAY?
         BNH   MAIN0040                        NO
         LA    R1,MTENTDAT                     DATA ADDRESS
         AH    R1,DXD_COL                      PLUS COLUMN
         ITRACE ID=DATA,                                               +
               RDATA1=R1,                                              +
               RDATA2=R2
         C     R2,STORCOMM_VWIDTH              TOO MUCH DATA?
         BNH   MAIN0030                        NO
         L     R2,STORCOMM_VWIDTH              LIMIT LENGTH
MAIN0030 DS    0H
         BCTR  R2,0                            MINUS 1 FOR EX
         BCTR  R2,0                            MINUS 1 FOR ATTRIBUTE
         EX    R2,DATA_MVC                     COPY DATA
         TM    DXD_FLAGS,$SEARCH               SEARCH PERFORMED?
         BNO   MAIN0040                        NO
         C     R3,DXD_SEARCH_INDEX             WHERE DATA WAS FOUND?
         BNE   MAIN0040                        NO
         MVI   0(R6),$SCREEN_ATTR_HIGH_TURQUOISE
         B     MAIN0050
MAIN0040 DS    0H
         MVI   0(R6),$SCREEN_ATTR_NORMAL
MAIN0050 DS    0H
         S     R6,STORCOMM_VWIDTH              NEXT (PREVIOUS) LINE
         BCT   R7,MAIN0060                     ONE LESS LINE
         ST    R3,DXD_DISPLAY_LAST             LAST USED ON DISPLAY
         B     MAIN0100                        SCREEN FULL.. DISPLAY
MAIN0060 DS    0H
         C     R3,DXD_INDEX_TOP                AT TOP OF INDEX?
         BE    MAIN0070                        YES
         SH    R3,H4                           PREVIOUS IN INDEX
         B     MAIN0020
MAIN0070 DS    0H
         ITRACE ID=AT_TOP
         MVC   0(MSG03_L,R6),MSG03
         B     MAIN0100
DATA_MVC MVC   1(0,R6),0(R1)
* ------------------------------------------------------------------- *
*        Display the data                                             *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         MVC   SPF_SPACE_NAME,STORCOMM_SPACE_NAME
         UNPK  COMM_DWORD(5),STORCOMM_ASID(3)
         MVC   SPF_SPACE_ASID,COMM_DWORD
         MVC   SPF_CB_NAME,STORCOMM_CB_NAME
         MVC   SPF_CB_DESCRIPTION,STORCOMM_CB_DESCRIPTION
         TR    SPF_SPACE_ASID,COMM_HEXCHAR
         NI    STORCOMM_DATA_ADDR,X'7F'
         UNPK  COMM_DWORD(9),STORCOMM_DATA_ADDR(5)
         MVC   SPF_ADDRESS,COMM_DWORD
         TR    SPF_ADDRESS,COMM_HEXCHAR
         MVC   SESS_DISP_VDATA_ADDR,STORCOMM_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,STORCOMM_VDATA_LENGTH
         MVC   SESS_DISP_CURSOR,STORCOMM_CURSOR
         ITRACE ID=DISPLAY
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=COMM_NEW_FORMAT
         OC    SESS_RC,SESS_RC                 RC ZERO?
         BNE   EXIT0000                        NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   SPF_ZVERB,C'B'                  BOTTOM?
         BE    MAIN0200                        YES
         CLI   SPF_ZVERB,C'D'                  DOWN?
         BE    MAIN0210                        YES
         CLI   SPF_ZVERB,C'L'                  LEFT?
         BE    MAIN0220                        YES
         CLI   SPF_ZVERB,C'R'                  RIGHT?
         BE    MAIN0240                        YES
         CLI   SPF_ZVERB,C'T'                  TOP?
         BE    MAIN0250                        YES
         CLI   SPF_ZVERB,C'U'                  UP?
         BE    MAIN0260                        YES
         CLC   C_F,SPF_ZCMD                    FIND (SHORT)?
         BE    MAIN0300                        YES
         CLC   C_FIND,SPF_ZCMD                 FIND (LONG)?
         BE    MAIN0300                        YES
         CLC   C_RFIND,SPF_ZCMD                RFIND?
         BE    MAIN0310                        YES
         CLC   C_REFRESH,SPF_ZCMD              REFRESH?
         BE    INIT0020                        YES
         CLC   C_R,SPF_ZCMD                    REFRESH?
         BE    INIT0020                        YES
         CLC   SPF_ZCMD,COMM_BLANKS            COMMAND BLANK?
         BNE   EXIT0000                        NO
         TM    DXD_FLAGS,$BOTTOM               AT BOTTOM?
         BO    INIT0020                        YES.. REFRESH
         B     MAIN0100                        DISPLAY AGAIN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         ITRACE ID=BOTTOM
         MVC   DXD_DISPLAY_FIRST,DXD_INDEX_BOTTOM
         OI    DXD_FLAGS,$BOTTOM               SET INDICATOR
         NI    DXD_FLAGS,255-$TOP              RESET FLAG
         B     MAIN0000                        BUILD DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0210 DS    0H
         ITRACE ID=DOWN
         NI    DXD_FLAGS,255-$BOTTOM-$TOP      RESET FLAGS
         CLI   SPF_ZSCROLLA,C'M'               BOTTOM?
         BE    MAIN0200                        YES
         L     R0,SPF_ZSCROLLN                 NBR OF LINES TO SCROLL
         SLL   R0,2                            MULTIPLY BY 4
         A     R0,DXD_DISPLAY_FIRST            PLUS CURRENT
         C     R0,DXD_INDEX_BOTTOM             OFF THE BOTTOM?
         BH    MAIN0200                        YES..
         ST    R0,DXD_DISPLAY_FIRST            UPDATE CURRENT
         B     MAIN0000                        BUILD DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0220 DS    0H
         ITRACE ID=LEFT
         LH    R0,DXD_COL                      CURRENT COLUMN
         CLI   SPF_ZSCROLLA,C'M'               MAX?
         BE    MAIN0230                        YES
         S     R0,SPF_ZSCROLLN                 MINUS NBR TO SCROLL
         BNH   MAIN0230                        OFF LEFT SIDE
         STH   R0,DXD_COL                      UPDATE COLUMN
         B     MAIN0000                        BUILD DATA
MAIN0230 DS    0H
         XC    DXD_COL,DXD_COL                 FORCE TO ZERO
         B     MAIN0000                        BUILD DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0240 DS    0H
         ITRACE ID=RIGHT
         LH    R0,DXD_COL                      CURRENT COLUMN
         A     R0,SPF_ZSCROLLN                 MINUS NBR TO SCROLL
         STH   R0,DXD_COL                      UPDATE COLUMN
         B     MAIN0000                        BUILD DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0250 DS    0H
         ITRACE ID=TOP
         NI    DXD_FLAGS,255-$BOTTOM           RESET FLAG
         OI    DXD_FLAGS,$TOP                  SET FLAG
         L     R1,SPF_VDEPTH                   NBR OF LINES
         BCTR  R1,0                            MINUS 1
         BCTR  R1,0                            MINUS 1
         SLL   R1,2                            MULTPLY BY 4
         L     R0,DXD_INDEX_TOP                FIRST ENTRY
         AR    R0,R1                           SO DATA WILL FILL SCREEN
         ST    R0,DXD_DISPLAY_FIRST            SET 1ST ON DISPLAY
         ITRACE ID=TOP_X,                                              +
               RDATA1=R0
         B     MAIN0000                        BUILD DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0260 DS    0H
         ITRACE ID=UP
         NI    DXD_FLAGS,255-$BOTTOM-$TOP      RESET FLAGS
         CLI   SPF_ZSCROLLA,C'M'               MAX?
         BE    MAIN0250                        YES.. TOP
         L     R0,SPF_ZSCROLLN                 NBR TO SCROLL
         SLL   R0,2                            MULTIPLY BY 4
         L     R1,DXD_DISPLAY_FIRST            CURRENT INDEX
         SR    R1,R0                           MINS NBR TO SCROLL
         C     R1,DXD_INDEX_TOP                BEYOND TOP?
         BL    MAIN0250                        YES.. FORCE TOP
         ST    R1,DXD_DISPLAY_FIRST            UPDATE DISPLAY INDEX
         ITRACE ID=UP_X,                                               +
               RDATA1=R1
         B     MAIN0000                        BUILD DATA
* ------------------------------------------------------------------- *
*        Process FIND commands                                        *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         L     R15,COMM_V_OSFIND               OSFIND ENTRY POINT
         ITRACE ID=CALLFIND,                                           +
               RDATA1=R15
         BALR  R14,R15                         CALL OSFIND
         ITRACE ID=FIND_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                         SUCCESSFUL?
         BNZ   MAIN0100                        NO.. DISPLAY W/MSG
         MVC   SPF_ZCMD,COMM_BLANKS            RESET COMMAND
         L     R3,DXD_INDEX_TOP                START WITH FIRST LINE
         B     MAIN0330                        START SEARCH
MAIN0310 DS    0H
         ITRACE ID=RFIND
         OC    SESS_SEARCH_ARG_LENGTH,SESS_SEARCH_ARG_LENGTH
         BZ    MAIN0390
         L     R3,DXD_SEARCH_INDEX             LAST MATCHING RECORD
         MVC   SPF_ZCMD,COMM_BLANKS            RESET COMMAND
         B     MAIN0350                        START SEARCH
MAIN0330 DS    0H
         L     R4,0(,R3)                       ENTRY ADDRESS FROM INDEX
         SR    R2,R2
         ICM   R2,3,MTENTLEN                   DATA LENGTH
         LH    R6,SESS_SEARCH_ARG_LENGTH       SEARCH ARG LENGTH
         CR    R6,R2                           ARG LONGER THAN DATA?
         BH    MAIN0350                        YES
         BCTR  R6,R0                           FOR EX
         SR    R2,R6                           NBR OF LOOPS
         LA    R5,MTENTDAT                     DATA ADDRESS
MAIN0340 DS    0H
         EX    R6,FIND_CLC                     STRING LOCATED?
         BE    MAIN0360                        YES
         LA    R5,1(,R5)                       NEXT IN DATA
         BCT   R2,MAIN0340                     LOOP
MAIN0350 DS    0H
         C     R3,DXD_INDEX_BOTTOM             AT BOTTOM?
         BE    MAIN0380                        YES
         LA    R3,4(,R3)                       NEXT IN INDEX
         B     MAIN0330
MAIN0360 DS    0H
         OI    DXD_FLAGS,$SEARCH               SET FLAG
         ST    R3,DXD_SEARCH_INDEX             SAVE INDEX ADDR
         C     R3,DXD_DISPLAY_FIRST            HIGHER THAN FIRST?
         BH    MAIN0370                        YES
         C     R3,DXD_DISPLAY_LAST             LOWER THAN LAST?
         BL    MAIN0370                        YES
         B     MAIN0000                        LEAVE WINDOW ALONE
MAIN0370 DS    0H
         ST    R3,DXD_DISPLAY_FIRST            CHANGE 1ST ON DISPLAY
         B     MAIN0000
MAIN0380 DS    0H
         MVC   SPF_MSG_3(MSG04_L),MSG04        STRING NOT FOUND
         B     MAIN0100
MAIN0390 DS    0H
         MVC   SPF_MSG_3(MSG05_L),MSG05        NO STRING GIVEN
         B     MAIN0100
FIND_CLC CLC   SESS_SEARCH_ARG(0),0(R5)        STRING LOCATED?
* ------------------------------------------------------------------- *
*        Copy the master trace table to our address space             *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=COPY_MTT
         L     R5,STORCOMM_DATA_ADDR           MASTER TRACE TABLE ADDR
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                         TURN ON APF AUTH
         MODESET KEY=ZERO                      ENTER KEY 0
         LH    R1,STORCOMM_ASID                MASTER'S ASID
         ITRACE ID=SSAR,                                               +
               RDATA1=R1
         SSAR  (R1)
         LAM   R5,R5,F1                        SET AR
         SAC   512                             TURN ON AR MODE
         ICM   R1,15,DXD_TRACE_TABLE           STORAGE GETMAINED?
         BNZ   MAIN1010                        YES
         SR    R1,R1
         ICM   R1,7,MTTLEN                     TABLE LENGTH
         ST    R1,DXD_TRACE_LENGTH             SAVE LENGTH
         STORAGE OBTAIN,                                               +
               LENGTH=(R1),                                            +
               LOC=ANY
         ST    R1,DXD_TRACE_TABLE              SAVE ADDRESS
MAIN1010 DS    0H
         LR    R0,R1                           COPY ADDRESS
         L     R1,DXD_TRACE_LENGTH             LENGTH
         LR    R14,R5                          COPY ADDRESS
         LR    R15,R1                          COPY LENGTH
         LAM   R14,R14,F1                      SET AR
         MVCL  R0,R14                          COPY TRACE TABLE
         SAC   0                               TURN OFF AR MODE
         LAM   R14,R14,F0                      RESET AR
         LAM   R5,R5,F0                        RESET AR
         EPAR  (R1)
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)
         MODESET KEY=NZERO                     RESET STORAGE KEY
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                         TURN OFF PF AUTH
         BR    R7
* ------------------------------------------------------------------- *
*        Relocate addresses                                           *
* ------------------------------------------------------------------- *
MAIN2000 DS    0H
         ITRACE ID=RELOCATE
         L     R5,DXD_TRACE_TABLE              OUR COPY OF TRACE TABLE
         L     R0,MTTCURPT                     CURRENT TRACE ENTRY
         S     R0,STORCOMM_DATA_ADDR           MINUS BASE IN MASTER A/S
         AR    R0,R5                           PLUS BASE IN OUR A/S
         ST    R0,MTTCURPT                     SET RELOCATED ADDR
         L     R0,MTTENTPT                     END OF TABLE
         S     R0,STORCOMM_DATA_ADDR           MINUS BASE IN MASTER A/S
         AR    R0,R5                           PLUS BASE IN OUR A/S
         ST    R0,MTTENTPT                     SET RELOCATED ADDR
         L     R0,MTTENDPT                     END OF TABLE
         S     R0,STORCOMM_DATA_ADDR           MINUS BASE IN MASTER A/S
         AR    R0,R5                           PLUS BASE IN OUR A/S
         ST    R0,MTTENDPT                     SET RELOCATED ADDR
         L     R0,MTTWRPPT                     LAST ENTRY BEFORE WRAP
         S     R0,STORCOMM_DATA_ADDR           MINUS BASE IN MASTER A/S
         AR    R0,R5                           PLUS BASE IN OUR A/S
         ST    R0,MTTWRPPT                     SET RELOCATED ADDR
         BR    R7
* ------------------------------------------------------------------- *
*                                                                     *
*        Scan the table to determine the nbr of entries               *
*                                                                     *
*        At exit R1 is nbr of entries                                 *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN3000 DS    0H
         ITRACE ID=SCAN
         SR    R1,R1                           CLEAR FOR COUNTER
         SR    R2,R2                           CLEAR FOR LENGTHS
         L     R5,DXD_TRACE_TABLE
         ICM   R4,15,MTTCURPT                  LAST ENTRY ADDED
         NI    DXD_FLAGS,255-$WRAP             RESET FLAG
MAIN3010 DS    0H
         ICM   R2,3,MTENTLEN                   DATA LENGTH
         LA    R4,L'MTENTHDR(R2,R4)            NEXT ENTRY
         ITRACE ID=SCAN_A,                                             +
               RDATA1=R4,                                              +
               DATA2=(MTTCURPT,4)
         C     R4,MTTCURPT                     WRAP STARTING POINT?
         BL    MAIN3020                        NO
         TM    DXD_FLAGS,$WRAP                 WRAPPED END OF TABLE?
         BNO   MAIN3020                        NO
         ITRACE ID=SCAN_B,                                             +
               RDATA1=R1
         BR    R7                              ALL DONE.. RETURN
MAIN3020 DS    0H
         C     R4,MTTENDPT                     AT END OF TABLE?
         BL    MAIN3030                        NO
         L     R4,MTTWRPPT                     WRAP TO TOP
         OI    DXD_FLAGS,$WRAP                 SET FLAG
         ITRACE ID=SCANWRAP,                                           +
               RDATA1=R4
         B     MAIN3010
MAIN3030 DS    0H
         LA    R1,1(,R1)                       ADD 1
         B     MAIN3010
* ------------------------------------------------------------------- *
*        Build index                                                  *
* ------------------------------------------------------------------- *
MAIN4000 DS    0H
         ITRACE ID=BLD_INDX
         ICM   R1,15,DXD_INDEX_TOP             OLD INDEX ADDR
         BZ    MAIN4010                        NOT GETMAINED
         ICM   R0,15,DXD_INDEX_SIZE            OLD INDEX SIZE
         STORAGE RELEASE,                      FREE OLD INDEX          +
               ADDR=(R1),                                              +
               LENGTH=(R0)
MAIN4010 DS    0H
         L     R1,DXD_TRACE_ENTRIES            NBR OF ENTRIES
         SLL   R1,2                            MULTIPLY BY 4
         ST    R1,DXD_INDEX_SIZE               SAVE INDEX SIZE
         STORAGE OBTAIN,                       OBTAIN NEW INDEX        +
               LENGTH=(R1),                                            +
               LOC=ANY
         ST    R1,DXD_INDEX_TOP                SAVE INDEX ADDRESS
         A     R1,DXD_INDEX_SIZE               PLUS SIZE
         SH    R1,H4                           MINUS 1 ENTRY
         ST    R1,DXD_INDEX_BOTTOM
         ITRACE ID=INDEX,                                              +
               DATA1=(DXD_INDEX_TOP,4),                                +
               DATA2=(DXD_INDEX_SIZE,4)
         SR    R2,R2
         L     R3,DXD_INDEX_BOTTOM             LAST IN INDEX TABLE
         L     R5,DXD_TRACE_TABLE
         ICM   R4,15,MTTCURPT                  LAST ENTRY ADDED
         NI    DXD_FLAGS,255-$WRAP             RESET FLAG
MAIN4020 DS    0H
         ICM   R2,3,MTENTLEN                   DATA LENGTH
         LA    R4,L'MTENTHDR(R2,R4)            NEXT ENTRY
         ITRACE ID=INDX_A,                                             +
               RDATA1=R4,                                              +
               DATA2=(MTTCURPT,4)
         C     R4,MTTCURPT                     WRAP STARTING POINT?
         BL    MAIN4030                        NO
         TM    DXD_FLAGS,$WRAP                 WRAPPED END OF TABLE?
         BNO   MAIN4030                        NO
         ITRACE ID=INDX_X
         BR    R7                              ALL DONE.. RETURN
MAIN4030 DS    0H
         C     R4,MTTENDPT                     AT END OF TABLE?
         BL    MAIN4040                        NO
         L     R4,MTTWRPPT                     WRAP TO TOP
         OI    DXD_FLAGS,$WRAP                 SET FLAG
         ITRACE ID=INDXWRAP,                                           +
               RDATA1=R4
         B     MAIN4020
MAIN4040 DS    0H
         ITRACE ID=INDEX,                                              +
               RDATA1=R3,                                              +
               RDATA2=R4
         ST    R4,0(,R3)                       INSERT INTO INDEX
         SH    R3,H4                           PREVIOUS IN INDEX
         B     MAIN4020
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,DXD_TRACE_TABLE           TRACE TABLE STORAGE
         BZ    EXIT0010                        NOT GETMAINED
         ICM   R0,15,DXD_TRACE_LENGTH          TRACE TABLE LENGTH
         STORAGE RELEASE,                      FREE TRACE TABLE        +
               ADDR=(R1),                                              +
               LENGTH=(R0)
EXIT0010 DS    0H
         ICM   R1,15,DXD_INDEX_TOP             INDEX ADDR
         BZ    EXIT0020                        NOT GETMAINED
         ICM   R0,15,DXD_INDEX_SIZE            INDEX SIZE
         STORAGE RELEASE,                      FREE INDEX              +
               ADDR=(R1),                                              +
               LENGTH=(R0)
EXIT0020 DS    0H
         XC    DXD_TRACE_TABLE,DXD_TRACE_TABLE
         XC    DXD_INDEX_TOP,DXD_INDEX_TOP
         MVC   SESS_DISP_PANEL,STOR_PANEL      FORCE 'STOR' PANEL
         MVC   STORCOMM_FUNCTION_ADDR,V_STORSTOR
         L     R13,4(,R13)                     RESTORE R13
         LM    R14,R12,12(R13)                 RESTORE REGISTERS
         SR    R15,R15                         SET RC
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START      DC       Q(DXDMTT)
V_STORSTOR     DC       V(STORSTOR)

F0             DC       F'0'
F1             DC       F'1'
H1             DC       H'1'
H4             DC       H'4'

C_F            DC       C'F '
C_FIND         DC       C'FIND '
C_R            DC       C'R '
C_REFRESH      DC       C'REFRESH '
C_RFIND        DC       C'RFIND '
MASTER_NAME    DC       CL8'*MASTER*'
MTT_NAME       DC       CL8'MTT'
MTT_PANEL      DC       CL8'STORMTT'
MTT_DESC       DC       CL40'Master trace table'
STOR_PANEL     DC       CL8'STORSTOR'

MSG01          DS       0C
               DC       C'STORMTT01I '
               DC       C'Address space forced to *MASTER*'
MSG01_L        EQU      *-MSG01

MSG02          DS       0C
               DC       AL1($SCREEN_ATTR_HIGH)
               DC       C'STORMTT02I '
               DC       25C'_'
               DC       C' Bottom of data '
               DC       26C'_'
               DC       AL1($SCREEN_ATTR_NORMAL)
MSG02_L        EQU      *-MSG02

MSG03          DS       0C
               DC       AL1($SCREEN_ATTR_HIGH)
               DC       C'STORMTT03I '
               DC       26C'_'
               DC       C' Top of data '
               DC       27C'_'
               DC       AL1($SCREEN_ATTR_NORMAL)
MSG03_L        EQU      *-MSG03

MSG04          DS       0C
               DC       C'STORMTT04I '
               DC       C'String not found'
MSG04_L        EQU      *-MSG04

MSG05          DS       0C
               DC       C'STORMTT05I '
               DC       C'No search string has been given'
MSG05_L        EQU      *-MSG05

               LTORG

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDMTT              DSECT
                    COPY    DXDPREF
DXD_ROW             DS      H               TOP LINE
DXD_COL             DS      H               LEFT MOST ROW
DXD_TRACE_TABLE     DS      A               TRACE TABLE COPY ADDR
DXD_TRACE_LENGTH    DS      F               TRACE TABLE LENGTH
DXD_TRACE_ENTRIES   DS      F               NBR OF ENTRIES IN TABLE
DXD_INDEX_TOP       DS      A               INDEX TABLE
DXD_INDEX_BOTTOM    DS      A               INDEX TABLE
DXD_INDEX_SIZE      DS      F               INDEX SIZE
DXD_DISPLAY_FIRST   DS      A               FIRST ON DISPLAY
DXD_DISPLAY_LAST    DS      A               LAST ON DISPLAY

DXD_SEARCH_INDEX    DS      A               TRACE INDEX TO START SEARCH


DXD_FLAGS           DS      X
$BOTTOM             EQU     X'80'
$TOP                EQU     X'40'
$WRAP               EQU     X'20'
$SEARCH             EQU     X'10'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               CVT      DSECT=YES,LIST=YES
               IHAASVT
               IEEZB806
               IEEBASEA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               STORCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      STORMTT
