* ------------------------------------------------------------------- *
*                                                                     *
*  Process 'CB' commands                                              *
*                                                                     *
*  ASID            STORCOMM_ASID                                      *
*  ASCB address    STORCOMM_DATA_ADDR                                 *
*                                                                     *
* ------------------------------------------------------------------- *
STORCB   CSECT
STORCB   AMODE 31
STORCB   RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING STORCB,R15
         B     INIT0000
MODID    DC    CL8'STORCB'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         DROP  R15
         USING STORCB,R10                       DEFINE BASE
         USING STORCOMM,R9
         L     R15,SESS_DXD_ADDR                WORK AREA BASE
         A     R15,DXD_START                    PLUS DISP
         ST    R13,4(,R15)                      SAVE R13
         ST    R15,8(,R13)                      CHAIN SAVE AREA
         LR    R13,R15
         USING DXDCB,R13                        DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         L     R8,COMM_OSSPFD
         USING OSSPFD,R8
         ITRACE ID=ENTRY,                                              +
               DATA1=(STORCOMM_FUNCTION,1),                            +
               DATA2=SPF_ZCMD
         XC    DXD_RC,DXD_RC
         MVI   STORCOMM_STATUS,$STORCOMM_OK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   STORCOMM_FUNCTION,$STORCOMM_FORMAT
         BE    MAIN0000
         CLI   STORCOMM_FUNCTION,$STORCOMM_COMMAND
         BE    CMD0000
         CLI   STORCOMM_FUNCTION,$STORCOMM_PNS
         BE    PNS0000
         CLI   STORCOMM_FUNCTION,$STORCOMM_CLEANUP
         BE    EXIT0000
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         CLC   SPF_ZCMD,COMM_BLANKS           COMMAND STILL PRESENT?
         BE    MAIN0030                       NO
         TM    OPERAND_02_TYPE,$OPERAND_PRESENT
         BNO   MAIN0030                       RESUME CURRENT
         XC    DXD_FIRST_CB,DXD_FIRST_CB      NOT DISPLAYING CB'S
         MVC   DXD_CB_NAME,COMM_BLANKS        INITIALIZE WORK AREA
         SR    R1,R1
         ICM   R1,3,OPERAND_02_LENGTH         OPERAND LENGTH
         BCTR  R1,0
         ICM   R2,15,OPERAND_02_ADDRESS       OPERAND ADDRESS
         EX    R1,CB_MVC                      COPY CONTROL BLOCK NAME
         CLC   =C'? ',DXD_CB_NAME             LIST CONTROL BLOCKS?
         BE    MAIN1000                       YES
         ITRACE ID=LOCATE,                                             +
               DATA1=(DXD_CB_NAME,8)
         LA    R2,CB_TABLE
         USING CB_DSECT,R2
MAIN0010 DS    0H
         CLC   CB_NAME,DXD_CB_NAME            BLOCK LOCATED?
         BE    MAIN0020                       YES
         CLI   CB_NAME,X'FF'                  END OF TABLE?
         BE    ERR0010                        YES
         LA    R2,CB_DSECT_L(,R2)             NEXT CONTROL BLOCK
         B     MAIN0010
CB_MVC   MVC   DXD_CB_NAME(0),0(R2)           COPY NAME TO WORK AREA
MAIN0020 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R2,                                              +
               DATA2=0(R1)
         L     R1,CB_TABLE_ADDR               FORMATTING INFO
         ST    R1,STORCOMM_CB_TABLE           SET ADRESS
         MVC   STORCOMM_CB_NAME,0(R1)         COPY CONTROL BLOCK NAME
         MVC   STORCOMM_CB_DESCRIPTION,0(R1)  COPY CONTROL BLOCK DESC
         MVC   SESS_DISP_PANEL,48(R1)         COPY PANEL NAME
         MVC   STORCOMM_PANEL_NAME,48(R1)     COPY PANEL NAME
         LA    R1,56(,R1)                     FIRST FIELD
         ST    R1,STORCOMM_CB_FIRST           SET ADDRESS
         MVC   SPF_ZCMD,COMM_BLANKS
* ------------------------------------------------------------------- *
*        Trace control block being formatted                          *
* ------------------------------------------------------------------- *
MAIN0030 DS    0H
         OC    DXD_FIRST_CB,DXD_FIRST_CB      DISPLAYING LIST OF CB'S?
         BNZ   MAIN1000                       YES
         L     R1,STORCOMM_CB_TABLE
         ITRACE ID=CB,                                                 +
               DATA1=STORCOMM_CB_NAME,                                 +
               DATA2=(STORCOMM_DATA_ADDR,4)
* ------------------------------------------------------------------- *
*        Initialize dynamic area                                      *
* ------------------------------------------------------------------- *
         L     R0,STORCOMM_VDATA_ADDR         VDATA ADDRESS
         L     R1,STORCOMM_VDATA_LENGTH       VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA
* ------------------------------------------------------------------- *
*        Initialize point-and-shoot table                             *
* ------------------------------------------------------------------- *
         L     R0,STORCOMM_PNS_TABLE_ADDR     PNS TABLE ADDRESS
         ST    R0,DXD_CURRENT_PNS             INITIALIZE CURRENT
         L     R1,STORCOMM_PNS_TABLE_LENGTH   PNS TABLE LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE PNS TABLE
* ------------------------------------------------------------------- *
*        Initialize buffer addr and nbr of lines                      *
* ------------------------------------------------------------------- *
         L     R6,STORCOMM_VDATA_ADDR         VDATA ADDRESS
         L     R7,SPF_VDEPTH                  NUMBER OF LINES
* ------------------------------------------------------------------- *
*        Get into key zero                                            *
* ------------------------------------------------------------------- *
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        APF AUTHORIZE OURSELVES
         ITRACE ID=ZERO
         MODESET KEY=ZERO                     ENTER KEY 0
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        RESET APF AUTHORIZATION
* ------------------------------------------------------------------- *
*        Set secondary address space                                  *
* ------------------------------------------------------------------- *
         LH    R1,STORCOMM_ASID
         ITRACE ID=SSAR,                                               +
               RDATA1=R1
         SSAR  (R1)
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        Build display                                                *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R4,STORCOMM_CB_FIRST           FIRST FIELD
         USING FIELD_DSECT,R4                 DEFINE BASE
MAIN0040 DS    0H
         ST    R4,STORCOMM_CB_LAST            SAVE FIELD ADDR
         L     R3,DXD_CURRENT_PNS
         USING PNS,R3
         ITRACE ID=FIELD,                                              +
               DATA1=FIELD_NAME,                                       +
               RDATA2=R3
         ST    R4,PNS_FIELD_ADDR              FIELD ADDR
         CLI   FIELD_TYPE,C'H'                HEADING?
         BE    MAIN0430                       YES
         MVC   0(MSG01_L,R6),MSG01
V        USING MSG01,R6
         MVC   V.MSG01_NAME,FIELD_NAME        COPY NAME
         MVC   V.MSG01_DESC,FIELD_DESC        COPY DESCRIPTION
         UNPK  COMM_INFO_01(5),FIELD_DISP(3)  UNPACK DISP TO DATA
         MVC   V.MSG01_DISP,COMM_INFO_01
         TR    V.MSG01_DISP,COMM_HEXCHAR      TRANSLATE
         SR    R5,R5
         ICM   R5,3,FIELD_DISP                DISP TO DATA
         A     R5,STORCOMM_DATA_ADDR          PLUS BASE ADDRESS
         ST    R5,PNS_DATA_ADDR
         ITRACE ID=DATAADDR,                                           +
               DATA1=(PNS_DATA_ADDR,4),       .. DATA ADDR             +
               DATA2=(PNS_FIELD_ADDR,4)       .. FIELD ADDR
         CLI   FIELD_TYPE,C'A'                ADDRESS FIELD?
         BE    MAIN0100                       YES
         CLI   FIELD_TYPE,C'C'                CHARACTER FIELD?
         BE    MAIN0050                       YES
         CLI   FIELD_TYPE,C'D'                DUMMY?
         BE    MAIN0320                       YES
         CLI   FIELD_TYPE,C'L'                LENGTH FIELD?
         BE    MAIN0200                       YES
         CLI   FIELD_TYPE,C'N'                NUMBER FIELD?
         BE    MAIN0200                       YES
         CLI   FIELD_TYPE,C'T'                BINARY TIME?
         BE    MAIN0300                       YES
         CLI   FIELD_TYPE,C'X'                HEX FIELD?
         BE    MAIN0100                       YES
         BAL   R1,LINE0000
         B     MAIN0320
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0050 DS    0H
         ITRACE ID=CHAR
         SR    R1,R1
         ICM   R1,1,FIELD_DATA_LENGTH         LENGTH
         CH    R1,=Y(L'MSG01_DATA)            TOO LONG?
         BNH   MAIN0060                       NO
         LH    R1,=Y(L'MSG01_DATA)            LIMIT LENGTH
MAIN0060 DS    0H
         BCTR  R1,0                           FOR EX
         LAM   R5,R5,F1
         SAC   512
         EX    R1,CHAR_MVC                    EX MVC
         SAC   0
         LAM   R5,R5,F0
         BAL   R1,LINE0000
         B     MAIN0320
CHAR_MVC MVC   V.MSG01_DATA(0),0(R5)          COPY DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         ITRACE ID=HEX_ADDR
         CLI   FIELD_DATA_LENGTH,8            EIGHT BYTES?
         BE    MAIN0170
         CLI   FIELD_DATA_LENGTH,7            SEVEN BYTES?
         BE    MAIN0160
         CLI   FIELD_DATA_LENGTH,6            SIX BYTES?
         BE    MAIN0150
         CLI   FIELD_DATA_LENGTH,5            FIVE BYTES?
         BE    MAIN0140
         CLI   FIELD_DATA_LENGTH,4            FOUR BYTES?
         BE    MAIN0130
         CLI   FIELD_DATA_LENGTH,3            THREE?
         BE    MAIN0120
         CLI   FIELD_DATA_LENGTH,2            TWO?
         BE    MAIN0110
         LA    R1,UNPK_1                      UNPK ADDR
         LA    R2,MVC_1                       MVC ADDR
         LA    R3,TR_1                        TR ADDR
         B     MAIN0180
MAIN0110 DS    0H
         LA    R1,UNPK_2                      UNPK ADDR
         LA    R2,MVC_2                       MVC ADDR
         LA    R3,TR_2                        TR ADDR
         B     MAIN0180
MAIN0120 DS    0H
         LA    R1,UNPK_3                      UNPK ADDR
         LA    R2,MVC_3                       MVC ADDR
         LA    R3,TR_3                        TR ADDR
         B     MAIN0180
MAIN0130 DS    0H
         LA    R1,UNPK_4                      UNPK ADDR
         LA    R2,MVC_4                       MVC ADDR
         LA    R3,TR_4                        TR ADDR
         B     MAIN0180
MAIN0140 DS    0H
         LA    R1,UNPK_5                      UNPK ADDR
         LA    R2,MVC_5                       MVC ADDR
         LA    R3,TR_5                        TR ADDR
         B     MAIN0180
MAIN0150 DS    0H
         LA    R1,UNPK_6                      UNPK ADDR
         LA    R2,MVC_6                       MVC ADDR
         LA    R3,TR_6                        TR ADDR
         B     MAIN0180
MAIN0160 DS    0H
         LA    R1,UNPK_7                      UNPK ADDR
         LA    R2,MVC_7                       MVC ADDR
         LA    R3,TR_7                        TR ADDR
         B     MAIN0180
MAIN0170 DS    0H
         LAM   R5,R5,F1
         SAC   512
         UNPK  COMM_INFO_01+0(9),0(5,R5)      UNPACK DATA
         UNPK  COMM_INFO_01+8(9),4(5,R5)      UNPACK DATA
         SAC   0
         LAM   R5,R5,F0
         MVC   V.MSG01_DATA(16),COMM_INFO_01
         TR    V.MSG01_DATA(16),COMM_HEXCHAR
         B     MAIN0190
MAIN0180 DS    0H
         LAM   R5,R5,F1
         SAC   512
         EX    R0,0(R1)                       UNPACK DATA
         SAC   0
         LAM   R5,R5,F0
         EX    R0,0(R2)                       COPY UNPACK DATA
         EX    R0,0(R3)                       TRANSLATE UNPACKED DATA
MAIN0190 DS    0H
         BAL   R1,LINE0000                    NEXT LINE
         B     MAIN0320                       CHECK FOR TESTS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
UNPK_1   UNPK  COMM_INFO_01(3),0(2,R5)        UNPACK DATA
MVC_1    MVC   V.MSG01_DATA(2),COMM_INFO_01
TR_1     TR    V.MSG01_DATA(2),COMM_HEXCHAR
UNPK_2   UNPK  COMM_INFO_01(5),0(3,R5)        UNPACK DATA
MVC_2    MVC   V.MSG01_DATA(4),COMM_INFO_01
TR_2     TR    V.MSG01_DATA(4),COMM_HEXCHAR
UNPK_3   UNPK  COMM_INFO_01(7),0(4,R5)        UNPACK DATA
MVC_3    MVC   V.MSG01_DATA(6),COMM_INFO_01
TR_3     TR    V.MSG01_DATA(6),COMM_HEXCHAR
UNPK_4   UNPK  COMM_INFO_01(9),0(5,R5)        UNPACK DATA
MVC_4    MVC   V.MSG01_DATA(8),COMM_INFO_01
TR_4     TR    V.MSG01_DATA(8),COMM_HEXCHAR
UNPK_5   UNPK  COMM_INFO_01(11),0(6,R5)       UNPACK DATA
MVC_5    MVC   V.MSG01_DATA(10),COMM_INFO_01
TR_5     TR    V.MSG01_DATA(10),COMM_HEXCHAR
UNPK_6   UNPK  COMM_INFO_01(13),0(7,R5)       UNPACK DATA
MVC_6    MVC   V.MSG01_DATA(12),COMM_INFO_01
TR_6     TR    V.MSG01_DATA(12),COMM_HEXCHAR
UNPK_7   UNPK  COMM_INFO_01(15),0(8,R5)       UNPACK DATA
MVC_7    MVC   V.MSG01_DATA(14),COMM_INFO_01
TR_7     TR    V.MSG01_DATA(14),COMM_HEXCHAR
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         ITRACE ID=LEN_NBR
         LAM   R5,R5,F1
         SAC   512
         SR    R0,R0
         CLI   FIELD_DATA_LENGTH,4            FOUR BYTES?
         BE    MAIN0230
         CLI   FIELD_DATA_LENGTH,3            THREE?
         BE    MAIN0220
         CLI   FIELD_DATA_LENGTH,2            TWO?
         BE    MAIN0210
         ICM   R0,1,0(R5)
         B     MAIN0240
MAIN0210 DS    0H
         ICM   R0,3,0(R5)
         B     MAIN0240
MAIN0220 DS    0H
         ICM   R0,7,0(R5)
         B     MAIN0240
MAIN0230 DS    0H
         ICM   R0,15,0(R5)
MAIN0240 DS    0H
         SAC   0
         LAM   R5,R5,F0
         ITRACE ID=NBR,                                                +
               RDATA1=R0
         LTR   R1,R1
         BZ    MAIN0270
         MVC   COMM_INFO_01,COMM_BLANKS
         CVD   R0,COMM_DWORD
         MVC   COMM_INFO_01(L'EDITWORD_1),EDITWORD_1
         ED    COMM_INFO_01(L'EDITWORD_1),COMM_DWORD
         LA    R1,COMM_INFO_01
MAIN0250 DS    0H
         CLI   0(R1),C' '
         BNE   MAIN0260
         LA    R1,1(,R1)
         B     MAIN0250
MAIN0260 DS    0H
         MVC   V.MSG01_DATA(L'EDITWORD_1),0(R1)
         B     MAIN0280
MAIN0270 DS    0H
         MVC   V.MSG01_DATA(L'C_ZERO),C_ZERO
MAIN0280 DS    0H
         BAL   R1,LINE0000
         B     MAIN0320
* ------------------------------------------------------------------- *
*                                                                     *
*        Convert time fields                                          *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         ITRACE ID=TIME
         LAM   R5,R5,F1
         SAC   512
         ICM   R1,15,0(R5)                        INSERT TIME
         SAC   0
         LAM   R5,R5,F0
         SR    R0,R0
         SR    R0,R0
         D     R0,F100                            CONVERT TO SECONDS
         SR    R0,R0                              CLEAR REMAINDER
         D     R0,F3600                           COMPUTE HOURS
         CVD   R1,COMM_DWORD                      CONVERT HOURS
         MVC   COMM_INFO_01(L'EDITWORD_2),EDITWORD_2
         ED    COMM_INFO_01(L'EDITWORD_2),COMM_DWORD+6
         MVC   COMM_INFO_02+0(2),COMM_INFO_01+2   COPY HOURS
         MVI   COMM_INFO_02+2,C':'                INSERT COLON
         LR    R1,R0                              COPY REMAINDER
         SR    R0,R0                              CLEAR R0
         D     R0,F60                             COMPUTE MINUTES
         CVD   R1,COMM_DWORD                      CONVERT
         MVC   COMM_INFO_01(L'EDITWORD_2),EDITWORD_2
         ED    COMM_INFO_01(L'EDITWORD_2),COMM_DWORD+6
         MVC   COMM_INFO_02+3(2),COMM_INFO_01+2   COPY MINUTES
         MVI   COMM_INFO_02+5,C':'                INSERT COLON
         CVD   R0,COMM_DWORD                      CONVERT TO DECIMAL
         MVC   COMM_INFO_01(L'EDITWORD_2),EDITWORD_2
         ED    COMM_INFO_01(L'EDITWORD_2),COMM_DWORD+6
         MVC   COMM_INFO_02+6(2),COMM_INFO_01+2
         MVC   V.MSG01_DATA(8),COMM_INFO_02       COPY TIME
         BAL   R1,LINE0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Call exit if present                                         *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0320 DS    0H
         ICM   R15,15,FIELD_EXIT              EXIT ADDRESS
         BZ    MAIN0330                       NO EXIT
         MVC   FIELD_EXIT_PNS,DXD_CURRENT_PNS PASS CURRENT PNS
         ST    R4,FIELD_EXIT_FIELD            PASS FIELD ADDR
         ST    R6,FIELD_EXIT_VDATA            PASS VDATA BUFFER ADDR
         STH   R7,FIELD_EXIT_LINES            PASS LINES AVAILABLE
         SAC   0
         LAM   R5,R5,F0
         EPAR  (R1)
         SSAR  (R1)
         ITRACE ID=CALLEXIT,                                           +
               RDATA1=R15
         BALR  R14,R15                        CALL EXIT
         LH    R1,STORCOMM_ASID
         SSAR  (R1)
         LAM   R5,R5,F1
         SAC   512
         MVC   DXD_CURRENT_PNS,FIELD_EXIT_PNS COPY UPDATED PNS ADDR
         L     R6,FIELD_EXIT_VDATA            UPDATED BUFFER ADDRESS
         ICM   R7,3,FIELD_EXIT_LINES          LINES AVAILABLE
         BZ    EXIT0000                       NO LINES LEFT
* ------------------------------------------------------------------- *
*                                                                     *
*        Check for bit flags or values                                *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0330 DS    0H
         CLI   FIELD_TEST_TYPE,0              ANY TYPE OF TESTS?
         BE    MAIN0500                       NO
         CLI   FIELD_TEST_TYPE,$FIELD_BIT     BIT FLAG TESTS?
         BE    MAIN0340                       YES
         CLI   FIELD_TEST_TYPE,$FIELD_VALUE   VALUE TESTS?
         BE    MAIN0400                       YES
         DC    H'0'
* ------------------------------------------------------------------- *
*        Test bit(s)                                                  *
* ------------------------------------------------------------------- *
MAIN0340 DS    0H
         SR    R2,R2
         ICM   R2,1,FIELD_NBR_TESTS           NBR OF TESTS
         LA    R3,FIELD_VALUE_NAME            FIRST VALUE/DESCRIPTION
         USING FIELD_VALUE_NAME,R3
MAIN0350 DS    0H
         SR    R1,R1
         ICM   R1,1,FIELD_VALUE               BIT VALUE TO TEST FOR
         LAM   R5,R5,F1
         SAC   512
         EX    R1,BIT_TM                      BIT(S) ON?
         BNO   MAIN0360                       NO
         MVI   V.MSG01_ATTR_1,$SCREEN_ATTR_HIGH_TURQUOISE
         MVC   V.MSG01_DATA(L'FIELD_VALUE_NAME),FIELD_VALUE_NAME
         SAC   0
         LAM   R5,R5,F0
         MVI   V.MSG01_ATTR_2,$SCREEN_ATTR_HIGH_YELLOW
         MVC   V.MSG01_DESC,FIELD_VALUE_DESC  COPY DESCRIPTION
         BAL   R1,LINE0000                    NEXT LINE ON DISPLAY
MAIN0360 DS    0H
         SAC   0
         LAM   R5,R5,F0
         LA    R3,FIELD_VALUE_L(,R3)          NEXT BIT(S)/DESCRIPTION
         BCT   R2,MAIN0350
         B     MAIN0500
BIT_TM   TM    0(R5),0                        TEST BIT(S)
         DROP  R3
* ------------------------------------------------------------------- *
*        Test values                                                  *
* ------------------------------------------------------------------- *
MAIN0400 DS    0H
         ITRACE ID=VALUE
         SR    R2,R2
         ICM   R2,1,FIELD_NBR_TESTS           NBR OF VALUES
         BZ    MAIN0500                       NONE
MAIN0410 DS    0H
         LAM   R5,R5,F1
         SAC   512
         CLC   FIELD_VALUE,0(R5)              VALUE LOCATED?
         BE    MAIN0420                       YES
         LA    R3,FIELD_VALUE_L(,R3)          NEXT VALUE/DESCRIPTOR
         BCT   R2,MAIN0410                    LOOP
         SAC   0
         LAM   R5,R5,F0
         B     MAIN0500                       NOT LOCATED
MAIN0420 DS    0H
         SAC   0
         LAM   R5,R5,F0
         MVC   0(MSG01_L,R6),MSG01
         MVI   V.MSG01_ATTR_2,$SCREEN_ATTR_HIGH_YELLOW
         MVC   V.MSG01_DESC,FIELD_VALUE_DESC
         BAL   R1,LINE0000
         B     MAIN0500
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0430 DS    0H
         ITRACE ID=HEADING
         MVI   0(R6),$SCREEN_ATTR_HIGH
         MVC   1(L'FIELD_DESC,R6),FIELD_DESC
         BAL   R1,LINE0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Next field                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0500 DS    0H
         SR    R0,R0
         ICM   R0,3,FIELD_ENTRY_LENGTH        LENGTH OF THIS ENTRY
         ITRACE ID=NEXT_FLD,                                           +
               RDATA1=R4,                                              +
               RDATA2=R0
         AR    R4,R0                          NEXT FIELD
         CLI   0(R4),X'FF'                    END OF FIELDS?
         BNE   MAIN0040                       NO
         B     EXIT0000
* ------------------------------------------------------------------- *
*        LIST 'KNOWN' CONTROL BLOCKS                                  *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=LISTCB
         MVC   SPF_ZCMD,COMM_BLANKS           RESET COMMAND
         ICM   R2,15,DXD_FIRST_CB             RESUMING DISPLAY?
         BNZ   MAIN1010                       YES
         LA    R2,CB_TABLE                    START WITH 1ST CB
         ST    R2,DXD_FIRST_CB                LISTING CB's
         USING CB_DSECT,R2
         XC    DXD_CURRENT_PNS,DXD_CURRENT_PNS <-- SHOULDN'T MATTER
MAIN1010 DS    0H
         L     R0,STORCOMM_VDATA_ADDR         VDATA ADDRESS
         L     R1,STORCOMM_VDATA_LENGTH       VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA
         L     R6,STORCOMM_VDATA_ADDR         VDATA BUFFER
         L     R7,SPF_VDEPTH                  NBR OF LINES
MAIN1020 DS    0H
         MVC   20(L'CB_NAME,R6),CB_NAME
         BAL   R1,LINE0000                    NEXT LINE
         LA    R2,CB_DSECT_L(,R2)             NEXT CONTROL BLOCK
         CLI   0(R2),X'FF'                    END OF TABLE?
         BE    EXIT0000                       YES
         B     MAIN1020
* ------------------------------------------------------------------- *
*        Next line in VDATA buffer                                    *
* ------------------------------------------------------------------- *
LINE0000 DS    0H
         LA    R0,PNS_L                       LENGTH OF PNS ENTRIES
         A     R0,DXD_CURRENT_PNS             PLUS CURRENT
         ST    R0,DXD_CURRENT_PNS             UPDATE ADDRESS
         A     R6,SPF_VWIDTH                  NEXT LINE
         BCT   R7,LINE0010                    MINUS 1 AVAILABLE LINE
         B     EXIT0000                       SCREEN FULL.. EXIT
LINE0010 DS    0H
         BR    R1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CMD0000  DS    0H
         ITRACE ID=CMD,                                                +
               DATA1=(SPF_ZCMD,8),                                     +
               DATA2=(SPF_ZVERB,1)
         CLC   C_F,SPF_ZCMD                   FIND (SHORT VERSION)?
         BE    FIND0000                       YES
         CLC   C_FIND,SPF_ZCMD                FIND (LONG VERSION)?
         BE    FIND0000                       YES
         CLC   C_RFIND,SPF_ZCMD               RFIND?
         BE    FIND0010                       YES
         CLC   SPF_ZCMD,COMM_BLANKS           OTHER COMMAND?
         BNE   EXIT0000                       YES
         CLI   SPF_ZVERB,C'D'                 DOWN?
         BE    DOWN0000                       YES
         CLI   SPF_ZVERB,C'U'                 UP?
         BE    UP0000                         YES
         L     R3,SPF_ROW                     ROW CURSOR WAS ON
         ITRACE ID=ROW,                                                +
               RDATA1=R3
         CH    R3,H6                          IN HEADING(S)?
         BL    EXIT0000                       YES
         SH    R3,H6                          CONVERT TO RELATIVE LINE
         MH    R3,=Y(PNS_L)                   MULTIPLY BY LENGTH EACH
         A     R3,STORCOMM_PNS_TABLE_ADDR     PLUS BASE ADDR
         USING PNS,R3
         L     R4,PNS_FIELD_ADDR              FIELD'S ADDRESS
         ITRACE ID=PNS_ADDR,                                           +
               RDATA1=R3,                                              +
               RDATA2=R4
         ICM   R1,15,FIELD_PNS                POINT-AND-SHOOT FIELD?
         BZ    EXIT0000                       NO
         ITRACE ID=SET_PNS,                   SETTING PNS INFO         +
               DATA1=(PNS_DATA_ADDR,4),                                +
               DATA2=(PNS_FIELD_ADDR,4)
         MVC   STORCOMM_PNS_DATA_ADDR,PNS_DATA_ADDR
         MVC   STORCOMM_PNS_FIELD_ADDR,PNS_FIELD_ADDR
         MVI   STORCOMM_STATUS,$STORCOMM_PNS  SET STATUS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DOWN0000 DS    0H
         ITRACE ID=DOWN
         ICM   R1,15,SPF_ZSCROLLN             NUMBER OF LINES TO SCROLL
         BZ    EXIT0000                       ZERO..
         ICM   R2,15,DXD_FIRST_CB             LISTING CONTROL BLOCKS?
         BNZ   DOWN0020                       YES
         L     R4,STORCOMM_CB_FIRST           FIRST FIELD DISPLAYED
         BCT   R1,DOWN0010
         B     EXIT0000
DOWN0010 DS    0H
         ST    R4,STORCOMM_CB_FIRST           SAVE FOR 1ST ON SCREEN
         AH    R4,FIELD_ENTRY_LENGTH          NEXT FIELD
         CLI   0(R4),X'FF'                    END OF TABLE?
         BE    EXIT0000                       YES
         BCT   R1,DOWN0010                    LOOP
         B     EXIT0000
DOWN0020 DS    0H
         CLI   0(R2),X'FF'                    END OF TABLE?
         BE    EXIT0000                       YES
         ST    R2,DXD_FIRST_CB                SAVE ADDR
         LA    R2,CB_DSECT_L(,R2)             NEXT CB
         BCT   R1,DOWN0020                    LOOP
         B     EXIT0000
UP0000   DS    0H
         ITRACE ID=UP
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    UP0030                         YES
         ICM   R1,15,SPF_ZSCROLLN             NUMBER OF LINES TO SCROLL
         BZ    EXIT0000                       ZERO..
         ICM   R2,15,DXD_FIRST_CB             LISTING CONTROL BLOCKS?
         BNZ   UP0020                         YES
         L     R4,STORCOMM_CB_FIRST           FIRST FIELD ON SCREEN
         BCT   R1,UP0010                      SUBTRACT 1
         B     EXIT0000
UP0010   DS    0H
         ST    R4,STORCOMM_CB_FIRST           SAVE FOR 1ST ON SCREEN
         ICM   R4,15,FIELD_PREVIOUS           PREVIOUS FIELD
         BZ    EXIT0000                       AT FIRST FIELD
         BCT   R1,UP0010                      LOOP
         B     EXIT0000
UP0020   DS    0H
         C     R2,=A(CB_TABLE)                AT TOP OF TABLE?
         BE    EXIT0000                       YES
         ST    R2,DXD_FIRST_CB                SAVE ADDR
         SH    R2,=Y(CB_DSECT_L)              PREVIOUS CB
         BCT   R1,UP0020                      LOOP
         B     EXIT0000
UP0030   DS    0H
         ITRACE ID=TOP
         L     R2,STORCOMM_CB_TABLE           TABLE ADDRESS
         LA    R2,56(,R2)                     FIRST FIELD IN TABLE
         ST    R2,STORCOMM_CB_FIRST           SET FOR 1ST ON SCREEN
         XC    DXD_SEARCH_FIELD,DXD_SEARCH_FIELD
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FIND0000 DS    0H
         L     R15,COMM_V_OSFIND
         ITRACE ID=CALLFIND,                                           +
               RDATA1=R15
         BALR  R14,R15                        CALL OSFIND
         ITRACE ID=FIND_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                        OK?
         BNZ   EXIT0000                       NO.. DISPLAY WITH MSG
         CLC   SESS_SEARCH_ARG_LENGTH,H8      TOO LONG?
         BH    FIND0130                       YES
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND
         B     FIND0020
FIND0010 DS    0H
         ITRACE ID=RFIND
         SR    R2,R2
         ICM   R2,3,SESS_SEARCH_ARG_LENGTH    ANY ARG?
         BZ    FIND0140                       NO
         CH    R2,H8                          TOO LONG?
         BH    FIND0130                       YES
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND
         ICM   R4,15,DXD_SEARCH_FIELD         LAST FIELD SEARCHED
         BNZ   FIND0040
FIND0020 DS    0H
         L     R4,STORCOMM_CB_TABLE           TABLE ADDRESS
         LA    R4,56(,R4)                     1ST FIELD IN TABLE
FIND0030 DS    0H
         ITRACE ID=FIELD,                                              +
               DATA1=FIELD_NAME
         ST    R4,DXD_SEARCH_FIELD            SAVE FIELD ADDRESS
         LA    R1,FIELD_NAME                  FIELD TO SEARCH
         LA    R2,L'FIELD_NAME                LENGTH TO SEARCH
         BAL   R15,FIND0100                   SEARCH
         LA    R1,FIELD_DESC                  FIELD TO SEARCH
         LA    R2,L'FIELD_DESC                LENGTH TO SEARCH
         BAL   R15,FIND0100                   SEARCH
FIND0040 DS    0H
         ICM   R2,3,FIELD_ENTRY_LENGTH        TOTAL LENGTH
         AR    R4,R2                          NEXT FIELD
         CLI   FIELD_NAME,X'FF'               END OF TABLE?
         BNE   FIND0030                       NO
         MVC   SPF_MSG_3(MSG03_L),MSG03       END OF TABLE
         B     EXIT0000                       EXIT
FIND0100 DS    0H
         LH    R3,SESS_SEARCH_ARG_LENGTH      SEARCH ARG LENGTH
         BCTR  R3,0                           FOR EX
         SR    R2,R3                          COMPUTE NBR OF LOOPS
FIND0110 DS    0H
         EX    R3,FIND_CLC                    STRING LOCATED?
         BE    FIND0120                       YES
         LA    R1,1(,R1)                      NEXT IN NAME OR DESC
         BCT   R2,FIND0110                    LOOP
         BR    R15                            NOT FOUND
FIND0120 DS    0H
         ITRACE ID=FOUND
         ST    R4,STORCOMM_CB_FIRST           SET FOR 1ST ON SCREEN
         B     EXIT0000
FIND0130 DS    0H
         MVC   SPF_MSG_3(MSG04_L),MSG04       STRING TOO LONG
         B     EXIT0000                       EXIT
FIND0140 DS    0H
         MVC   SPF_MSG_3(MSG05_L),MSG05       NO STRING DEFINED
         B     EXIT0000                       EXIT
FIND_CLC CLC   SESS_SEARCH_ARG(0),0(R1)       TEST FOR SEARCH STRING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PNS0000  DS    0H
         ITRACE ID=PNS,                                                +
               DATA1=(STORCOMM_PNS_DATA_ADDR,4),                       +
               DATA2=(STORCOMM_PNS_FIELD_ADDR,4)
         L     R4,STORCOMM_PNS_FIELD_ADDR
         L     R5,STORCOMM_PNS_DATA_ADDR
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        AUTHORIZE OURSELVES
         ITRACE ID=ZERO
         MODESET KEY=ZERO                     ENTER KEY 0
         LH    R1,STORCOMM_ASID               SECONDARY ASID
         ITRACE ID=SSAR,                                               +
               RDATA1=R1
         SSAR  (R1)
         LAM   R5,R5,F1
         SAC   512
         CLI   FIELD_DATA_LENGTH,1
         BE    PNS0010
         CLI   FIELD_DATA_LENGTH,2
         BE    PNS0020
         CLI   FIELD_DATA_LENGTH,3
         BE    PNS0030
         CLI   FIELD_DATA_LENGTH,4
         BE    PNS0040
         DC    H'0'
PNS0010  DS    0H
         MVC   STORCOMM_DATA_ADDR+3(1),0(R5)
         B     PNS0050
PNS0020  DS    0H
         MVC   STORCOMM_DATA_ADDR+2(2),0(R5)
         B     PNS0050
PNS0030  DS    0H
         MVC   STORCOMM_DATA_ADDR+1(3),0(R5)
         B     PNS0050
PNS0040  DS    0H
         MVC   STORCOMM_DATA_ADDR+0(4),0(R5)
PNS0050  DS    0H
         SAC   0
         LAM   R5,R5,F0
         EPAR  (R1)
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)
         MODESET KEY=NZERO                    RESET STORAGE KEY
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         L     R4,STORCOMM_PNS_FIELD_ADDR     FIELD'S ADDRESS
         ICM   R1,15,FIELD_TABLE              FORMAT INFO TABLE
         ST    R1,STORCOMM_CB_TABLE           SET TABLE ADDR
         BNZ   PNS0060
         MVC   STORCOMM_CB_NAME,COMM_BLANKS   RESET CB NAME
         MVC   STORCOMM_CB_DESCRIPTION,COMM_BLANKS RESET CB DESCRIPTION
         MVC   SESS_DISP_PANEL,STORSTOR       USE 'RAW' STOR PANEL
         MVC   STORCOMM_PANEL_NAME,STORSTOR
         B     PNS0070
PNS0060  DS    0H
         MVC   STORCOMM_CB_NAME,0(R1)         COPY CB NAME
         MVC   STORCOMM_CB_DESCRIPTION,8(R1)  COPY CB DESCRIPTION
         MVC   SESS_DISP_PANEL,48(R1)         COPY PANEL NAME
         MVC   STORCOMM_PANEL_NAME,48(R1)     COPY PANEL NAME
         LA    R1,56(,R1)                     FIRST FIELD
PNS0070  DS    0H
         ST    R1,STORCOMM_CB_FIRST           SET FIRST FIELD OR ZERO
         XC    STORCOMM_CB_LAST,STORCOMM_CB_LAST
         MVC   STORCOMM_NEW_FUNCTION,FIELD_PNS
         ITRACE ID=PNS_X,                                              +
               DATA1=(STORCOMM_DATA_ADDR,4),                           +
               DATA2=(STORCOMM_NEW_FUNCTION,4)
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         SAC   0
         LAM   R5,R5,F0
         MVC   SPF_MSG_1(MSG02_L),MSG02
         B     EXIT0000
         MVI   COMM_MSG_ID,1
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE
         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE
         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE
         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE
         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         EPAR  (R1)
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)
         SAC   0
         LAM   R5,R5,F0                       RESET AR 5
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        AUTHORIZE OURSELVES
         MODESET KEY=NZERO                    RETURN TO NORMAL KEY
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        DE-AUTHORIZE
         ITRACE ID=EXIT
         LH    R15,DXD_RC                     RETURN CODE
         L     R13,4(,R13)                    RESTORE R13
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START       DC       Q(DXDCB)
F0              DC       F'0'
F1              DC       F'1'
F60             DC       F'60'
F100            DC       F'100'
F3600           DC       F'3600'
H6              DC       H'6'
H8              DC       H'8'

EDITWORD_1      DC       X'402020206B2020206B2020206B2020206B202120'
EDITWORD_2      DC       X'F0212020'
C_ZERO          DC       C'ZERO'

C_F             DC       C'F '
C_FIND          DC       C'FIND '
C_RFIND         DC       C'RFIND '
STORSTOR        DC       CL8'STORSTOR'

MSG01           DS       0C
                DC       AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG01_DISP      DC       CL04' '
                DC       AL01($SCREEN_ATTR_HIGH)
MSG01_NAME      DC       CL08' '
MSG01_ATTR_1    DC       AL01($SCREEN_ATTR_NORMAL)
MSG01_DATA      DC       CL20' '
                DC       CL04' '
MSG01_ATTR_2    DC       AL01($SCREEN_ATTR_HIGH_GREEN)
MSG01_DESC      DC       CL40' '
MSG01_L         EQU      *-MSG01

MSG02           DS       0C
                DC       C'STORCB02I '
                DC       C'No formatting for this control block'
MSG02_L         EQU      *-MSG02

MSG03           DS       0C
                DC       C'STORCB03I '
                DC       C'End of table reached'
MSG03_L         EQU      *-MSG03

MSG04           DS       0C
                DC       C'STORCB04I '
                DC       C'String too long (8 max)'
MSG04_L         EQU      *-MSG04

MSG05           DS       0C
                DC       C'STORCB05I '
                DC       C'No search string has been given'
MSG05_L         EQU      *-MSG05

                LTORG

CB_TABLE        DS       0A
                DC       CL8'ACEE    ',V(ACEETBL)
                DC       CL8'ASCB    ',V(ASCBTBL)
                DC       CL8'ASSB    ',V(ASSBTBL)
                DC       CL8'ASXB    ',V(ASXBTBL)
                DC       CL8'BASEA   ',V(BASEATBL)
                DC       CL8'CVT     ',V(CVTTBL)
                DC       CL8'CSCB    ',V(CSCBTBL)
                DC       CL8'IPA     ',V(IPATBL)
                DC       CL8'JESCT   ',V(JESCTTBL)
                DC       CL8'JSCB    ',V(JSCBTBL)
                DC       CL8'MT      ',V(MTTBL)
                DC       CL8'OUCB    ',V(OUCBTBL)
                DC       CL8'OUXB    ',V(OUXBTBL)
                DC       CL8'PSA     ',V(PSATBL)
                DC       CL8'RB      ',V(RBTBL)
                DC       CL8'RCVT    ',V(RCVTTBL)
                DC       CL8'TCB     ',V(TCBTBL)
                DC       CL8'TCT     ',V(TCTTBL)
                DC       CL8'TIOT    ',V(TIOTTBL)
                DC       CL8'UCB     ',V(UCBTBL)
                DC       X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDCB             DSECT
                  COPY   DXDPREF

DXD_RC            DS     H

DXD_CURRENT_PNS   DS     A
DXD_FIRST_CB      DS     A

DXD_SEARCH_FIELD  DS     A

DXD_CB_NAME       DS     CL8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CB_DSECT          DSECT
CB_NAME           DS     CL8                  CONTROL BLOCK NAME
CB_TABLE_ADDR     DS     A                    CONTROL INFO ADDR
CB_DSECT_L        EQU    *-CB_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY   FIELDD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  STORCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     PNS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     REGEQU
                  END      STORCB
