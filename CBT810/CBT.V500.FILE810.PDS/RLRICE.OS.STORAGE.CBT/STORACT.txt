* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: STORACT                                               *
*                                                                     *
*                                                                     *
*  Displays a list of currently active address spaces.                *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
STORACT  CSECT
STORACT  AMODE 31
STORACT  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING STORCOMM,R9
         USING STORACT,R15
         USING SPACE_DSECT,R6
         B     INIT0000
MODID    DC    CL8'STORACT'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         DROP  R15
         USING STORACT,R10                      DEFINE BASE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         L     R15,SESS_DXD_ADDR
         A     R15,DXD_START
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         USING DXDACT,R13
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         L     R8,COMM_OSSPFD                 SPF DATA AREA
         USING OSSPFD,R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=MAIN0000
         CLI   STORCOMM_FUNCTION,$STORCOMM_FORMAT
         BE    MAIN0010                       YES
         CLI   STORCOMM_FUNCTION,$STORCOMM_COMMAND
         BE    MAIN0200                       YES
         CLI   STORCOMM_FUNCTION,$STORCOMM_CLEANUP
         BE    MAIN0500                       YES
         DC    H'0'
* ------------------------------------------------------------------- *
*        Build list of address spaces                                 *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=FORMAT
         ICM   R6,15,DXD_SPACE_CHAIN          ANY CHAIN NOW?
         BNZ   MAIN0100                       YES
         LA    R1,DXD_SPACE_CHAIN             RESET LAST
         ST    R1,DXD_LAST_SPACE              SPACE ON CHAIN
         L     R1,CVTPTR                      CVT ADDRESS
         USING CVT,R1                         DEFINE BASE
         L     R1,CVTASVT                     ASVT ADDRESS
         USING ASVT,R1
         LA    R2,ASVTFRST                    FIRST ASVT ENTRY
         L     R3,ASVTMAXU                    NBR OF SPACES
         SLL   R3,2                           MULTIPLY BY 4
         AR    R3,R2                          ADDR OF LAST ENTRY
         ITRACE ID=1ST_LAST,                                           +
               RDATA1=R2,                                              +
               RDATA2=R3
MAIN0020 DS    0H
         ITRACE ID=A/S,                                                +
               RDATA1=R2,                                              +
               DATA2=(0(R2),4)
         ICM   R4,15,0(R2)                    ASCB ADDRESS
         BM    MAIN0040                       NEGATIVE.. NOT IN USE
         USING ASCB,R4
         ICM   R5,15,ASCBJBNI                 JOB NAME?
         BNZ   MAIN0030                       YES
         ICM   R5,15,ASCBJBNS                 JOB NAME?
         BZ    MAIN0040
MAIN0030 DS    0H
         GETMAIN RU,                                                   +
               LV=SPACE_L,                                             +
               LOC=ANY
         LR    R6,R1                          COPY ADDR
         ITRACE ID=SPACE,                                              +
               RDATA1=R6
         XC    SPACE_DSECT(SPACE_L),SPACE_DSECT
         L     R1,DXD_LAST_SPACE              LAST ON CHAIN
LAST     USING SPACE_DSECT,R1
         ST    R6,LAST.SPACE_NEXT             CHAIN TO LAST BLOCK
         DROP  LAST
         ST    R1,SPACE_PREV
         ST    R4,SPACE_ASCB                  SAVE ASCB ADDRESS
         MVC   SPACE_NAME,0(R5)               COPY SPACE NAME
         MVC   SPACE_ASID,ASCBASID            COPY ASID
         ST    R6,DXD_LAST_SPACE
MAIN0040 DS    0H
         CR    R2,R3                          AT LAST IN ASVT?
         BE    MAIN0050                       YES
         LA    R2,4(,R2)                      NEXT IN ASVT
         B     MAIN0020
MAIN0050 DS    0H
         MVC   DXD_DISPLAY_FIRST,DXD_SPACE_CHAIN
* ------------------------------------------------------------------- *
*        Display address spaces                                       *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         L     R0,STORCOMM_VDATA_ADDR
         L     R1,STORCOMM_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA
         MVC   SESS_DISP_PANEL,PANEL_NAME
         L     R7,STORCOMM_VDATA_ADDR         VDATA ADDRESS
         L     R5,STORCOMM_VDEPTH             NBR OF LINES
         ICM   R6,15,DXD_DISPLAY_FIRST        FIRST SPACE TO DISPLAY
MAIN0110 DS    0H
         MVC   0(MSG01_L,R7),MSG01
V        USING MSG01,R7
         MVC   V.MSG01_NAME,SPACE_NAME        COPY SPACE NAME
         MVC   DXD_UNPACK1(2),SPACE_ASID      COPY SPACE ID
         UNPK  DXD_UNPACK2(5),DXD_UNPACK1(3)  UNPACK A/S ID
         MVC   V.MSG01_ASID,DXD_UNPACK2       COPY ADDRESS SPACE ID
         TR    V.MSG01_ASID,COMM_HEXCHAR      TRANSLATE
         UNPK  DXD_UNPACK1(9),SPACE_ASCB(5)   UNPACK ASCB ADDR
         MVC   V.MSG01_ASCB,DXD_UNPACK1       COPY TO VDATA BUFFER
         TR    V.MSG01_ASCB,COMM_HEXCHAR      TRANSLATE TO PRINTABLE
         A     R7,STORCOMM_VWIDTH             NEXT LINE
         BCT   R5,MAIN0120                    NEXT ADDRESS SPACE
         MVI   STORCOMM_STATUS,$STORCOMM_OK   SET STATUS
         B     EXIT0000                       SCREEN FULL
MAIN0120 DS    0H
         ICM   R6,15,SPACE_NEXT               ANOTHER ADDRESS SPACE?
         BNZ   MAIN0110                       YES..
         MVI   STORCOMM_STATUS,$STORCOMM_OK   SET STATUS
         B     EXIT0000                       NO FURTHER DATA
* ------------------------------------------------------------------- *
*        Check for line command(s)                                    *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         ITRACE ID=CMDS
         L     R7,STORCOMM_VDATA_ADDR         VDATA BUFFER
         L     R5,STORCOMM_VDEPTH             NBR OF LINES
         ICM   R6,15,DXD_DISPLAY_FIRST        FIRST A/S ON DISPLAY
MAIN0210 DS    0H
         ITRACE ID=LINE_CMD,                                           +
               DATA1=V.MSG01_NAME,                                     +
               DATA2=(V.MSG01_SELECTION,1)
         OI    V.MSG01_SELECTION,C' '
         CLI   V.MSG01_SELECTION,C'A'         GO TO ASCB?
         BE    MAIN0220                       YES
         CLI   V.MSG01_SELECTION,C'E'         GO TO ACEE?
         BE    MAIN0240                       YES
         CLI   V.MSG01_SELECTION,C'T'         GO TO TASK LIST?
         BE    MAIN0250                       YES
         CLI   V.MSG01_SELECTION,C'X'         GO TO ASXB?
         BE    MAIN0230                       YES
         CLI   V.MSG01_SELECTION,C' '         BLANK?
         BE    MAIN0320                       YES
         ITRACE ID=SELECTED,                                           +
               DATA1=SPACE_NAME,                                       +
               DATA2=(SPACE_ASID,2)
         OI    DXD_FLAGS,$LINE_CMD            LINE COMMAND FOUND
         MVC   STORCOMM_SPACE_NAME,SPACE_NAME COPY SPACE NAME
         MVC   STORCOMM_ASCB,SPACE_ASCB       COPY ADDRESS ASCB ADDR
         MVC   STORCOMM_ASID,SPACE_ASID       COPY ADDRESS SPACE ID
         MVC   STORCOMM_DATA_ADDR,SPACE_ASCB  COPY ADDRESS OF ASCB
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         MVC   STORCOMM_FUNCTION_ADDR,V_STORSTOR
         MVI   STORCOMM_STATUS,$STORCOMM_NEW  SET STATUS
         B     EXIT0000
MAIN0220 DS    0H
         ITRACE ID=ASCB
         MVC   STORCOMM_DATA_ADDR,SPACE_ASCB  COPY ADDRESS OF ASCB
         L     R1,V_ASCBTBL                   FORMATTING INFO TABLE
         B     MAIN0300
MAIN0230 DS    0H
         ITRACE ID=ASXB
         L     R4,SPACE_ASCB                  ASCB'S ADDRESS
         MVC   STORCOMM_DATA_ADDR,ASCBASXB    SET DATA ADDRESS
         L     R1,V_ASXBTBL                   FORMATTING INFO TABLE
         B     MAIN0300
MAIN0240 DS    0H
         ITRACE ID=ACEE
         OI    COMM_FLAGS,$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN ON APF AUTH
         MODESET KEY=ZERO
         L     R4,SPACE_ASCB                  ADDRESS SPACE'S ASCB
         LH    R1,ASCBASID                    SPACE'S ASID
         ITRACE ID=SSAR,                                               +
               RDATA1=R1
         SSAR  (R1)
         LAM   R4,R4,F1
         SAC   512
         L     R4,ASCBASXB                    ASXB ADDRESS
         USING ASXB,R4
         MVC   STORCOMM_DATA_ADDR,ASXBSENV    SET DATA ADDRESS
         SAC   0                              RETURN TO NON-AR MODE
         LAM   R4,R4,F0                       RESET AR
         EPAR  (R1)                           OUR AX ID
         ITRACE ID=RESET,                                              +
               RDATA1=R1
         SSAR  (R1)                           RESET SECONDARY
         MODESET KEY=NZERO
         NI    COMM_FLAGS,255-$COMM_AUTH_ON
         L     R15,COMM_V_OSAUTH
         BALR  R14,R15                        TURN OFF APF AUTH
         L     R1,V_ACEETBL                   FORMATTING INFO TABLE
         B     MAIN0300
MAIN0250 DS    0H
         ITRACE ID=TASK
         MVC   STORCOMM_SPACE_NAME,SPACE_NAME COPY SPACE NAME
         MVC   STORCOMM_ASCB,SPACE_ASCB       COPY ADDRESS ASCB ADDR
         MVC   STORCOMM_ASID,SPACE_ASID       COPY ADDRESS SPACE ID
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         MVC   STORCOMM_CB_NAME,COMM_BLANKS
         MVC   STORCOMM_CB_DESCRIPTION,COMM_BLANKS
         MVC   STORCOMM_FUNCTION_ADDR,V_STORTASK
         MVI   STORCOMM_STATUS,$STORCOMM_NEW  SET STATUS
         B     EXIT0000
MAIN0300 DS    0H
         MVC   STORCOMM_SPACE_NAME,SPACE_NAME COPY SPACE NAME
         MVC   STORCOMM_ASCB,SPACE_ASCB       COPY ADDRESS ASCB ADDR
         MVC   STORCOMM_ASID,SPACE_ASID       COPY ADDRESS SPACE ID
         XC    STORCOMM_DATA_DISP,STORCOMM_DATA_DISP
         MVC   STORCOMM_FUNCTION_ADDR,V_STORCB
         ST    R1,STORCOMM_CB_TABLE           SET TABLE ADDRESS
         MVC   STORCOMM_CB_NAME,0(R1)         COPY CB NAME
         MVC   STORCOMM_CB_DESCRIPTION,8(R1)  COPY CB DESC
         MVC   SESS_DISP_PANEL,48(R1)         COPY PANEL NAME
         MVC   STORCOMM_PANEL_NAME,48(R1)     COPY PANEL NAME
         LA    R1,56(,R1)                     FIRST FIELD
         ST    R1,STORCOMM_CB_FIRST           SET ADDRESS
         MVI   STORCOMM_STATUS,$STORCOMM_NEW  SET STATUS
         B     EXIT0000
MAIN0320 DS    0H
         A     R7,STORCOMM_VWIDTH             NEXT LINE
         BCT   R5,MAIN0330
         B     MAIN0340
MAIN0330 DS    0H
         ICM   R6,15,SPACE_NEXT               ANOTHER ADDRESS SPACE?
         BNZ   MAIN0210                       YES
* ------------------------------------------------------------------- *
*        Check for scroll command                                     *
* ------------------------------------------------------------------- *
MAIN0340 DS    0H
         ITRACE ID=SCROLL,                                             +
               DATA1=(SPF_ZVERB,1),                                    +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'B'                 BOTTOM?
         BE    MAIN0370                       YES
         CLI   SPF_ZVERB,C'D'                 DOWN?
         BE    MAIN0350                       YES
         CLI   SPF_ZVERB,C'T'                 TOP?
         BE    MAIN0390                       YES
         CLI   SPF_ZVERB,C'U'                 UP?
         BE    MAIN0400                       YES
         CLC   =C'?? ',SPF_ZCMD               LIST COMMANDS?
         BNE   MAIN0420                       NO.. GIVE UP
         LA    R0,COMMAND_TABLE
         ST    R0,COMM_MAIN_COMMAND_TABLE
         XC    COMM_SUB_COMMAND_TABLE,COMM_SUB_COMMAND_TABLE
         MVI   SESS_COMMAND_FLAGS,$SESS_COMMAND_DISPLAY
         L     R15,COMM_V_OSCMD
         BALR  R14,R15                        DISPLAY COMMANDS
         B     MAIN0420
MAIN0350 DS    0H
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    MAIN0370                       YES.. BOTTOM
         L     R1,SPF_ZSCROLLN                NBR OF LINES
         L     R6,DXD_DISPLAY_FIRST           FIRST ON DISPLAY
MAIN0360 DS    0H
         ST    R6,DXD_DISPLAY_FIRST           SAVE FOR FIRST
         ICM   R6,15,SPACE_NEXT               NEXT ADDRESS SPACE
         BZ    MAIN0420
         BCT   R1,MAIN0360                    LOOP
         B     MAIN0420
MAIN0370 DS    0H
         ITRACE ID=BOTTOM
         L     R6,DXD_DISPLAY_FIRST           FIRST ON DISPLAY
MAIN0380 DS    0H
         ST    R6,DXD_DISPLAY_FIRST
         ICM   R6,15,SPACE_NEXT               NEXT ADDRESS SPACE
         BNZ   MAIN0380
         B     MAIN0420
MAIN0390 DS    0H
         ITRACE ID=TOP
         MVC   DXD_DISPLAY_FIRST,DXD_SPACE_CHAIN
         B     MAIN0420
MAIN0400 DS    0H
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    MAIN0390                       YES.. TOP
         ITRACE ID=UP
         L     R1,SPF_ZSCROLLN                NBR OF LINES
         L     R6,DXD_DISPLAY_FIRST
MAIN0410 DS    0H
         ST    R6,DXD_DISPLAY_FIRST
         C     R6,DXD_SPACE_CHAIN             AT FIRST ON CHAIN?
         BE    MAIN0420                       YES
         ICM   R6,15,SPACE_PREV               PREVIOUS ADDRESS SPACE?
         BZ    MAIN0420                       NO
         BCT   R1,MAIN0410                    LOOP
MAIN0420 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS
         MVI   STORCOMM_STATUS,$STORCOMM_OK   SET STATUS
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0500 DS    0H
         ITRACE ID=CLEAN_UP
         MVI   STORCOMM_STATUS,$STORCOMM_OK   SET STATUS
         ICM   R6,15,DXD_SPACE_CHAIN          FIRST ADDRESS SPACE
         BZ    EXIT0000                       NOTHING ON CHAIN
MAIN0510 DS    0H
         LR    R1,R6                          COPY ADDRESS
         ITRACE ID=FREE,                                               +
               RDATA1=R1
         L     R6,SPACE_NEXT                  NEXT SPACE ON CHAIN
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=SPACE_L
         LTR   R6,R6                          ANOTHER SPACE?
         BNZ   MAIN0510                       YES
         XC    DXD_SPACE_CHAIN,DXD_SPACE_CHAIN
         XC    DXD_DISPLAY_FIRST,DXD_DISPLAY_FIRST
         XC    DXD_LAST_SPACE,DXD_LAST_SPACE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID,0
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE
         MVC   SPF_MSG_2,COMM_MSG_2           COPY MESSAGE
         MVC   SPF_MSG_3,COMM_MSG_3           COPY MESSAGE
         MVC   SPF_MSG_4,COMM_MSG_4           COPY MESSAGE
         MVC   SPF_MSG_5,COMM_MSG_5           COPY MESSAGE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                     RETURN CODE
         L     R13,4(,R13)                    RESTORE R13
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START       DC       Q(DXDACT)
V_STORCB        DC       V(STORCB)
V_STORSTOR      DC       V(STORSTOR)
V_STORTASK      DC       V(STORTASK)
V_ASCBTBL       DC       V(ASCBTBL)
V_ASXBTBL       DC       V(ASXBTBL)
V_ACEETBL       DC       V(ACEETBL)

F0              DC       F'0'
F1              DC       F'1'

PANEL_NAME      DC       CL8'STORACT'

MSG01           DS       0C
                DC       CL20' '
MSG01_ATTR1     DC       AL1($SCREEN_ATTR_INPUT)
MSG01_SELECTION DC       C' '
MSG01_ATTR2     DC       AL2($SCREEN_ATTR_NORMAL)
MSG01_NAME      DC       CL8' '
                DC       CL8' '
MSG01_ASID      DC       CL4' '
                DC       CL8' '
MSG01_ASCB      DC       CL8' '
MSG01_L         EQU      *-MSG01
* ------------------------------------------------------------------- *
*                                                                     *
*               LOCAL COMMANDS                                        *
*                                                                     *
* ------------------------------------------------------------------- *
COMMAND_TABLE   DS       0C
                CMD      A,0,'Display ASCB for the address space'
                CMD      E,0,'Display ACEE for the address space'
                CMD      S,0,'Display storage in the address space'
                CMD      T,0,'Display tasks in the address space'
                CMD      X,0,'Display ASXB for the address space'
                DC       X'FF'

                LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDACT            DSECT
                  COPY   DXDPREF

DXD_SPACE_CHAIN   DS     A                    FIRST ON CHAIN
                  DS     A                    ALWAYS ZERO

DXD_LAST_SPACE    DS     A

DXD_DISPLAY_FIRST DS     A

DXD_RC            DS     H

DXD_UNPACK1       DS     XL10
DXD_UNPACK2       DS     XL10

DXD_FLAGS         DS     X
$LINE_CMD         EQU    X'80'                LINE COMMAND(S) PRESENT

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SPACE_DSECT       DSECT
SPACE_NEXT        DS       A
SPACE_PREV        DS       A
SPACE_ASCB        DS       A
SPACE_NAME        DS       CL8
SPACE_ASID        DS       XL2
SPACE_L           EQU      *-SPACE_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  IBMMAC   CVT=YES
                  IBMMAC   ASCB=LIST
                  IBMMAC   ASXB=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  BPXYSTAT DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  IHAASVT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  STORCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY     REGEQU
                  END      STORACT
