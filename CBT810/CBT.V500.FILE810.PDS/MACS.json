{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20100210214116000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 529074, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 4000, "INMRECFM": "FB", "INMDIR": 17, "INMDSNAM": "RLRICE.OS.MACLIB.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.OS.MACLIB.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 4000, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xa0\\x00\\x04j@`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xa0\\x00\\x04j@`'", "b'X\\xe2p\\x88\\x00\\x00\\x002\\x00\\x04\\x003\\x00\\x03\\x00\\x0f'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"APPNDREQ": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00$\\x01\\x05'?\\x01\\x10\\x01\\x8f\\x15\\x02\\x00\\x18\\x00\\x1b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "2005-09-30T00:00:00", "modifydate": "2010-01-18T15:02:24", "lines": 24, "newlines": 27, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        APPEND   parameters                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         APPNDREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nAPPNDREQ        DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nAPPNDREQ        DSECT\n.LBL0020 ANOP\nAPPNDREQ_FUNC   DS     X           FUNCTION\n$APPNDREQ_OPEN  EQU    X'01'       .. OPEN OUTPUT\n$APPNDREQ_WRITE EQU    X'02'       .. WRITE GIVEN DATA SET/MEMBER\n$APPNDREQ_CLOSE EQU    X'03'       .. CLOSE OUTPUT\nAPPNDREQ_MEMBER DS     CL8         MEMBER NAME\nAPPNDREQ_DDNAME DS     CL8         DD NAME\nAPPNDREQ_DCB    DS     A           DCB ADDRESS\nAPPNDREQ_IO     DS     A           I/O AREA\nAPPNDREQ_COUNT  DS     F           NUMBER OF MEMBERS APPENDED\nAPPNDREQ_BYTES  DS     F           BYTES APPENDED\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ATTRS": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x009\\x01\\x05&O\\x01\\t%\\x9f\\x08@\\x00\\x12\\x00\\n\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2005-09-21T00:00:00", "modifydate": "2009-09-16T08:40:39", "lines": 18, "newlines": 10, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Attributes used for ISPF panels                                 *\n*                                                                     *\n*                                                                     *\n*     These need to agree with the definition on the panels           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$SCREEN_ATTR_NORMAL         EQU   X'01'\n$SCREEN_ATTR_INPUT          EQU   X'02'\n$SCREEN_ATTR_HIGH           EQU   X'03'\n$SCREEN_ATTR_HIGH_YELLOW    EQU   X'04'\n$SCREEN_ATTR_HIGH_RED       EQU   X'05'\n$SCREEN_ATTR_HIGH_TURQUOISE EQU   X'06'\n$SCREEN_ATTR_HIGH_GREEN     EQU   X'07'\n$SCREEN_ATTR_HIGH_PINK      EQU   X'08'\n$SCREEN_ATTR_HIGH_BLUE      EQU   X'09'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BOOKMARK": {"ttr": 1296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00(\\x01\\t)/\\x01\\t1\\x7f\\t\\x00\\x00\\x0e\\x00\\x08\\x00\\x0e\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-10-19T00:00:00", "modifydate": "2009-11-13T09:00:28", "lines": 14, "newlines": 8, "modlines": 14, "user": "RLRICE"}, "text": "BOOKMARK_DSECT          DSECT\nBOOKMARK_NEXT           DS   A            NEXT ON CHAIN\nBOOKMARK_NAME           DS   CL8          NAME OF BOOKMARK\nBOOKMARK_DATA_ADDR      DS   A            DATA ADDRESS\nBOOKMARK_DATA_DISP      DS   F            DATA DISPLACMENT\nBOOKMARK_CB_NAME        DS   CL8          CB NAME\nBOOKMARK_CB_DESC        DS   CL40         CB DESCRIPTION\nBOOKMARK_CB_TABLE       DS   A            CB FORMAT TABLE ADDR\nBOOKMARK_CB_FIRST       DS   A            1ST FIELD ON DISPLAY\nBOOKMARK_FUNCTION_ADDR  DS   A            FUNCTION ADDRESS\nBOOKMARK_ASID           DS   XL2          ASID\nBOOKMARK_SPACE_NAME     DS   CL8          SPACE NAME\nBOOKMARK_PANEL          DS   CL8          PANEL NAME\nBOOKMARK_DSECT_L        EQU  *-BOOKMARK_DSECT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CCW": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00Q\\x01\\x053/\\x01\\x07\\x12\\x9f\\x10\\x17\\x00\\n\\x00\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-11-28T00:00:00", "modifydate": "2007-05-09T10:17:51", "lines": 10, "newlines": 6, "modlines": 0, "user": "RLRICE"}, "text": "$CCW_SEARCH            EQU  X'31'    SEARCH\n$CCW_READ              EQU  X'02'    READ\n$CCW_READ_DATA         EQU  X'06'    READ DATA\n$CCW_READ_KEY_AND_DATA EQU  X'0E'    READ KEY AND DATA\n$CCW_READ_CKD          EQU  X'1E'    READ COUNT, KEY, AND DATA\n$CCW_READ_MULTIPLE_CKD EQU  X'5E'    READ MULTIPLE COUNT, KEY, AND DATA\n$CCW_TIC               EQU  X'08'    TRANSFER IN CHANNEL (TIC)\n$CCW_CC                EQU  X'40'    CHAIN COMMAND\n$CCW_IDAW              EQU  X'04'    INDIRECT DATA ADDRESS\n$CCW_SILI              EQU  X'20'    SUPPRESS INCORRECT LENGTH INDICATE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CMD": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05\\x00\\x14\\x01\\t\\x07/\\x01\\t'/\\x13\\x19\\x00\\x1a\\x00\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-03-13T00:00:00", "modifydate": "2009-09-29T13:19:14", "lines": 26, "newlines": 18, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         CMD   &CMD,&LABEL,&DESC\n         LCLA  &LEN\n         AIF   (T'&CMD   EQ 'O').NOCMD\n         AIF   (T'&LABEL EQ 'O').NOLABEL\n         AIF   (T'&DESC  EQ 'O').NODESC\n&LEN     SETA  K'&CMD\n         DC    CL8'&CMD'\n         DC    AL2(&LEN)\n         AIF   (T'&LABEL EQ 'U').CMD0010\n         DC    AL4(&LABEL)\n         AGO   .CMD0020\n.CMD0010 ANOP\n         DC    VL4(&LABEL)\n.CMD0020 ANOP\n         DC    CL60&DESC\n         MEXIT\n.NOCMD   ANOP\n         MNOTE 8,'COMMAND IS REQUIRED'\n         MEXIT\n.NOLABEL ANOP\n         MNOTE 8,'LABEL IS REQUIRED'\n         MEXIT\n.NODESC  ANOP\n         MNOTE 8,'DESCRIPTION IS REQUIRED'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMMAND": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x01\\x01\\t\\x07/\\x01\\t\\x07/\\x14%\\x00\\t\\x00\\t\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-03-13T00:00:00", "modifydate": "2009-03-13T14:25:01", "lines": 9, "newlines": 9, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMMAND_DSECT     DSECT\nCOMMAND_CMD       DS     CL8            COMMAND\nCOMMAND_LENGTH    DS     AL2            COMMAND LENGTH\nCOMMAND_ADDR      DS     AL4            COMMAND ENTRY POINT\nCOMMAND_DESC      DS     CL60           COMMAND DESCRIPTION\nCOMMAND_DSECT_L   EQU    *-COMMAND_DSECT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMMON": {"ttr": 1806, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x11\\x01\\t(o\\x01\\x10\\x02o\\x14\\x01\\x01D\\x01#\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-26T14:01:11", "lines": 324, "newlines": 291, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         COMMON  &TYPE=X\n         AIF  ('&TYPE' EQ 'CSECT').CSECT\nOSCOMM                 DSECT\n         AGO  .COMM\n.CSECT   ANOP\nOSCOMM                 CSECT\n.COMM    ANOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*         Internal trace                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTRACE000 DS    0H\nDXD      USING DXD_PREFIX,R13\n         STM   R0,R15,COMM_TRACE_SAVE\n         L     R2,COMM_TRACE_CURR\n         C     R2,COMM_TRACE_LAST\n         BNE   TRACE010\n         L     R2,COMM_TRACE_1ST\n         B     TRACE020\nTRACE010 DS    0H\n         LA    R2,TR_ENTRY_L(R2)\nTRACE020 DS    0H\n         ST    R2,COMM_TRACE_CURR\n         USING TR_ENTRY,R2\n         MVC   TR_CSECT,DXD.DXD_CSECT\n         MVC   TR_ID,0(R14)\n         MVC   TR_DATA1,COMM_TRACE_ITEM_1\n         MVC   TR_DATA2,COMM_TRACE_ITEM_2\n         XC    COMM_TRACE_ITEM_1,COMM_TRACE_ITEM_1\n         XC    COMM_TRACE_ITEM_2,COMM_TRACE_ITEM_2\nTRACE030 DS    0H\n         TM    COMM_TRACE_FLAG,$TRACE_TPUT\n         BNO   TRACE040\n         MVC   COMM_TPUT_CSECT,TR_CSECT\n         MVC   COMM_TPUT_MODID,TR_ID\n         UNPK  COMM_TPUT_DATA1+0(9),TR_DATA1+0(5)\n         UNPK  COMM_TPUT_DATA1+8(9),TR_DATA1+5(5)\n         TR    COMM_TPUT_DATA1,COMM_HEXCHAR\n         MVI   COMM_TPUT_DATA1+16,C' '\n         UNPK  COMM_TPUT_DATA2+0(9),TR_DATA2+0(5)\n         UNPK  COMM_TPUT_DATA2+8(9),TR_DATA2+5(5)\n         TR    COMM_TPUT_DATA2,COMM_HEXCHAR\n         MVI   COMM_TPUT_DATA2+16,C' '\n         TPUT  COMM_TPUT_TRACE,COMM_TPUT_TRACE_L\nTRACE040 DS    0H\n         ICM   R15,15,COMM_TRAP\n         BZ    TRACE050\n         BALR  R14,R15\nTRACE050 DS    0H\n         TM    COMM_TRACE_FLAG,$XTR_ON\n         BNO   TRACE060\n         PUT   XTR_DCB,TR_ENTRY\nTRACE060 DS    0H\n         LM    R0,R15,COMM_TRACE_SAVE\n         B     8(R14)\n         DROP  DXD\n\nXTR_DCB  DCB   DSORG=PS,                                               +\n               DDNAME=OSXTR,                                           +\n               RECFM=FB,                                               +\n               LRECL=TR_ENTRY_L,                                       +\n               BLKSIZE=100*TR_ENTRY_L,                                 +\n               MACRF=PM\n\nCOMM_TRACE_SAVE        DS    16F\nCOMM_TRAP              DC    A(0)\n\nCOMM_TRACE_FLAG        DC    X'00'\n$TRACE_TPUT            EQU   X'80'\n$XTR_ON                EQU   X'40'\n\n$A                     EQU   *-OSCOMM\n$B                     EQU   ((($A+31)/32)*32)\n                       ORG   OSCOMM+$B                32-BYTE ALIGNMENT\n\nCOMM_TRACE             DC    A(0)\n                       DC    C'1STX'\nCOMM_TRACE_1ST         DC    A(0)\n                       DC    C'LAST'\nCOMM_TRACE_LAST        DC    A(0)\n                       DC    C'CURR'\nCOMM_TRACE_CURR        DC    A(0)\n\nCOMM_TRACE_ITEM_1      DC    XL8'00'\nCOMM_TRACE_ITEM_2      DC    XL8'00'\n\nCOMM_TPUT_TRACE        DS    0C\nCOMM_TPUT_CSECT        DC    CL08' '\n                       DC    CL02' '\nCOMM_TPUT_MODID        DC    CL08' '\n                       DC    CL02' '\nCOMM_TPUT_DATA1        DC    CL16' '\n                       DC    CL02' '\nCOMM_TPUT_DATA2        DC    CL16' '\nCOMM_TPUT_TRACE_L      EQU   *-COMM_TPUT_TRACE\n                       DC    X'00'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_VERIFY_NUMBER_000 DS    0H\n                       ST    R14,12(,R13)               SAVE R14\n                       XC    COMM_INFO_01,COMM_INFO_01\n                       BCTR  R15,0\n                       LA    R14,COMM_INFO_01+14\n                       SR    R14,R15                    MINUS LENGTH\n                       EX    R15,COMM_VERIFY_MVC\n                       UNPK  COMM_INFO_02+00(9),COMM_INFO_01+00(5)\n                       UNPK  COMM_INFO_02+08(9),COMM_INFO_01+04(5)\n                       UNPK  COMM_INFO_02+16(9),COMM_INFO_01+08(5)\n                       UNPK  COMM_INFO_02+24(9),COMM_INFO_01+12(4)\n                       TRT   COMM_INFO_02(30),COMM_VALID_DIGITS\n                       BNZ   COMM_VERIFY_NUMBER_010\n                       CLI   COMM_INFO_02+31,X'FC'\n                       BL    COMM_VERIFY_NUMBER_010\n                       L     R14,12(,R13)\n                       BR    R14\nCOMM_VERIFY_NUMBER_010 DS    0H\n                       SLL   R15,4                      SHIFT TO 'TO'\n                       EX    R15,COMM_VERIFY_ZAP\n                       L     R14,12(,R13)\n                       BR    R14\nCOMM_VERIFY_MVC        MVC   COMM_INFO_01(0),0(R1)\nCOMM_VERIFY_ZAP        ZAP   0(0,R1),COMM_P0\nCOMM_P0                DC    P'0'\n\nCOMM_VALID_DIGITS      EQU   *-C'0'\n                       DC    10X'00'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_DWORD             DC    D'0'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_COMMAND           DC    A(0)       COMMAND ADDRESS\nCOMM_COMMAND_LENGTH    DC    H'0'       LENGTH OF COMMAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_VCONS             DS    0A\n                       VCONS TYPE=COMM\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_DXD               DC    A(0)       DYNAMIC WORK AREA ADDRESS\nCOMM_DXD_LENGTH        DC    F'0'       DYNAMIC WORK AREA LENGTH\nCOMM_OSDSPACE          DC    A(0)       SPACE MANAGER ENTRY POINT\nCOMM_OSDSPACE_DXD      DC    A(0)       SPACE MANAGER'S WORK AREA\nCOMM_OSDSPACE_DXD_LENGTH DC  A(0)       SPACE MANAGER'S WORK LENGTH\nCOMM_ISPLINK           DC    A(0)       ISPLINK ENTRY POINT\nCOMM_OSSPFD            DC    A(0)       SPF VARIABLES DATA\nCOMM_OSSPFV            DC    A(0)       SPF VARIABLES DEFINITIONS\nCOMM_FORMAT_DCB        DC    A(0)       FORMAT(S) DCB ADDRESS\nCOMM_FORMAT_IO         DC    A(0)       FORMAT(S) I/O AREA\nCOMM_MESSAGE_TABLE     DC    A(0)       MESSAGE TABLE\n\nCOMM_MAIN_COMMAND_TABLE DC   A(0)       MAIN FUNCTION COMMAND TABLE\nCOMM_SUB_COMMAND_TABLE  DC   A(0)       SUB FUNCTION COMMAND TABLE\n\nCOMM_RECALL_FIRST      DC    A(0)       FIRST ENTRY IN RECALL TABLE\nCOMM_RECALL_CURR       DC    A(0)       CURRENT ENTRY IN RECALL TABLE\nCOMM_RECALL_LAST       DC    A(0)       LAST ENTRY IN RECALL TABLE\nCOMM_RECALL_NBR        EQU   20         NBR OF RECALLABLE COMMANDS\n\nCOMM_IO_SIZE           DC    F'65536'   I/O AREA SIZE\nCOMM_LOAD_CHAIN        DC    A(0)       LOAD BLOCK CHAIN\nCOMM_ACTIVE_SESSION    DC    A(0)       ACTIVE SESSION BLOCK ADDRESS\nCOMM_NEW_SESSION       DC    A(0)       NEW SESSION BLOCK (SWITCHES)\nCOMM_DD_NUMBER         DC    PL4'0'     NUMBER OF DD'S ALLOCATED\nCOMM_DATASPACE_NUMBER  DC    PL4'0'     NUMBER OF DATASPACES CREATED\n\nCOMM_USER_LENGTH       DC    H'0'       USER ID LENGTH\nCOMM_USER              DC    CL8' '     USER'S LOGIN ID\n\nCOMM_NATIONAL_LANGUAGE DC    CL8' '     NATIONAL LANGUAGE\nCOMM_LANGUAGE_MODULE   DC    CL8' '     LANGUAGE MODULE NAME\nCOMM_NEW_FORMAT        DC    CL8' '     NEW FORMAT NAME\n\nCOMM_INFO_01           DC    CL256' '\nCOMM_INFO_02           DC    CL256' '\nCOMM_INFO_03           DC    CL256' '\n\nCOMM_VDATA_FUNC        DC    X'00'      FUNCTION FOR OSVDATA\n$VDATA_GETMAIN         EQU   X'01'      .. GETMAIN VDATA\n$VDATA_FREEMAIN        EQU   X'02'      .. FREEMAIN VDATA\n$VDATA_VDEFINE         EQU   X'03'      .. VDEFINE VDATA\n\nCOMM_SESS_FUNC         DC    X'00'      FUNCTION FOR OSSESS\n$SESS_REMOVE           EQU   X'01'      .. REMOVE A SESSION\n$SESS_SWITCH           EQU   X'02'      .. SWITCH SESSION\n$SESS_NEW_SESSION      EQU   X'03'      .. NEW SESSION\n$SESS_REINIT           EQU   X'04'      .. RE-INITIALIZE\n\nCOMM_SYSOUT_CLASS      DC    C'Z'       SYSOUT CLASS\nCOMM_INTRDR            DC    C'B'       INTERNAL READER SYSOUT CLASS\nCOMM_FLAGS             DC    X'00'      GLOBAL FLAGS/INDICATORS\n$COMM_NO_SESSION       EQU   X'80'      .. 'SESSION' CMD NOT ALLOWED\n$COMM_NO_FORMAT        EQU   X'40'      .. 'FORMAT' CMD NOT ALLOWED\n$COMM_NO_UPPER         EQU   X'20'      .. DO NOT TRANSLATE TO UPPER\n$COMM_AUTH_ON          EQU   X'10'\n$COMM_AXSET            EQU   X'08'      .. AXSET HAS BEEN ISSUED\n$COMM_ABEND            EQU   X'04'      .. ABEND WHEN EXITING\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_BLANKS            DC    CL256' '\n\nCOMM_HEXCHAR           EQU   *-C'0'\n                       DC    C'0123456789ABCDEF'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*        MSG LOOK-UP/BUILD PARAMETER LIST                             *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_MSG_CSECT         DS    CL8        NAME OF CSECT\nCOMM_MSG_ID            DS    H          MESSAGE NUMBER (ID)\nCOMM_MSG_LINES         DS    H          NUMBER OF RETURNED LINES\nCOMM_MSG_1             DS    CL80       MESSAGE LINE 1\nCOMM_MSG_2             DS    CL80       MESSAGE LINE 2\nCOMM_MSG_3             DS    CL80       MESSAGE LINE 3\nCOMM_MSG_4             DS    CL80       MESSAGE LINE 4\nCOMM_MSG_5             DS    CL80       MESSAGE LINE 5\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMM_OPERANDS_NBR      DS    H\n\nCOMM_OPERANDS          DS    0X\n\nOPERAND_01_ADDRESS     DS    XL4\nOPERAND_01_LENGTH      DS    XL2\nOPERAND_01_TYPE        DS    X\n\nOPERAND_02_ADDRESS     DS    XL4\nOPERAND_02_LENGTH      DS    XL2\nOPERAND_02_TYPE        DS    X\n\nOPERAND_03_ADDRESS     DS    XL4\nOPERAND_03_LENGTH      DS    XL2\nOPERAND_03_TYPE        DS    X\n\nOPERAND_04_ADDRESS     DS    XL4\nOPERAND_04_LENGTH      DS    XL2\nOPERAND_04_TYPE        DS    X\n\nOPERAND_05_ADDRESS     DS    XL4\nOPERAND_05_LENGTH      DS    XL2\nOPERAND_05_TYPE        DS    X\n\nOPERAND_06_ADDRESS     DS    XL4\nOPERAND_06_LENGTH      DS    XL2\nOPERAND_06_TYPE        DS    X\n\nOPERAND_07_ADDRESS     DS    XL4\nOPERAND_07_LENGTH      DS    XL2\nOPERAND_07_TYPE        DS    X\n\nOPERAND_08_ADDRESS     DS    XL4\nOPERAND_08_LENGTH      DS    XL2\nOPERAND_08_TYPE        DS    X\n\nOPERAND_09_ADDRESS     DS    XL4\nOPERAND_09_LENGTH      DS    XL2\nOPERAND_09_TYPE        DS    X\n\nOPERAND_10_ADDRESS     DS    XL4\nOPERAND_10_LENGTH      DS    XL2\nOPERAND_10_TYPE        DS    X\n\nOPERAND_11_ADDRESS     DS    XL4\nOPERAND_11_LENGTH      DS    XL2\nOPERAND_11_TYPE        DS    X\n\nOPERAND_12_ADDRESS     DS    XL4\nOPERAND_12_LENGTH      DS    XL2\nOPERAND_12_TYPE        DS    X\n\nOPERAND_13_ADDRESS     DS    XL4\nOPERAND_13_LENGTH      DS    XL2\nOPERAND_13_TYPE        DS    X\n\nOPERAND_14_ADDRESS     DS    XL4\nOPERAND_14_LENGTH      DS    XL2\nOPERAND_14_TYPE        DS    X\n\nOPERAND_15_ADDRESS     DS    XL4\nOPERAND_15_LENGTH      DS    XL2\nOPERAND_15_TYPE        DS    X\n\nOPERAND_16_ADDRESS     DS    XL4\nOPERAND_16_LENGTH      DS    XL2\nOPERAND_16_TYPE        DS    X\n\nOPERAND_17_ADDRESS     DS    XL4\nOPERAND_17_LENGTH      DS    XL2\nOPERAND_17_TYPE        DS    X\n\nOPERAND_18_ADDRESS     DS    XL4\nOPERAND_18_LENGTH      DS    XL2\nOPERAND_18_TYPE        DS    X\n\nOPERAND_19_ADDRESS     DS    XL4\nOPERAND_19_LENGTH      DS    XL2\nOPERAND_19_TYPE        DS    X\n\nOPERAND_20_ADDRESS     DS    XL4\nOPERAND_20_LENGTH      DS    XL2\nOPERAND_20_TYPE        DS    X\n\nCOMMON_L               EQU   *-OSCOMM\n                       MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DAIRREQ": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00S\\x01\\x05%_\\x01\\t4/\\x16\\x07\\x00+\\x00\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2005-09-12T00:00:00", "modifydate": "2009-12-08T16:07:53", "lines": 43, "newlines": 24, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Dynamic allocation / de-allocation                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         DAIRREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nDAIRREQ         DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nDAIRREQ         DSECT\n.LBL0020 ANOP\nDAIR_FUNC       DS     X           FUNCTION\n$DAIR_ALLOC     EQU    X'01'       .. ALLOCATE\n$DAIR_FREE      EQU    X'02'       .. FREE\n$DAIR_CONCAT    EQU    X'03'       .. CONCATENATE\nDAIR_OPTS       DS     X\n$DAIR_USE_DD    EQU    X'01'       .. USE SPECIFIED DD NAME\n$DAIR_SYSOUT    EQU    X'02'       .. ALLOCATE SYSOUT\n$DAIR_INTRDR    EQU    X'04'       .. ALLOCATE INTERNAL READER\n$DAIR_VOLUME    EQU    X'08'       .. ALLOCATE VOLUME (NOT DATA SET)\n$DAIR_DUMMY     EQU    X'80'       .. ALLOCATE DUMMY DD\n$DAIR_TEMP      EQU    X'40'       .. TEMP\n$DAIR_NO_MSGS   EQU    X'20'       .. DON'T CREATE MSGS ON ERRORS\nDAIR_DD         DS     CL8         DD NAME\nDAIR_DSN        DS     CL44        DATA SET NAME\nDAIR_MEMBER     DS     CL8         MEMBER NAME\nDAIR_SYSOUT     DS     X           SYSOUT CLASS\nDAIR_VOLSER     DS     CL6         VOLSER\nDAIR_UNIT       DS     CL8         UNIT NAME\nDAIR_PRI        DS     XL3         PRIMARY SPACE QTY\nDAIR_SEC        DS     XL3         SECONDARY SPACE QTY\nDAIR_DISP       DS     X           DISP FOR ALLOCATIONS\n$DAIR_DISP_OLD  EQU    X'01'       .. OLD\n$DAIR_DISP_MOD  EQU    X'02'       .. MOD\n$DAIR_DISP_NEW  EQU    X'04'       .. NEW\n$DAIR_DISP_SHR  EQU    X'08'       .. SHR\nDAIR_R15        DS     XL2         SVC 99 R15\nDAIR_ERROR      DS     XL2         SVC 99 RETURN CODE\nDAIR_INFO       DS     XL2         SVC 99 REASON\nDAIRREQ_L       EQU    *-DAIRREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DIR": {"ttr": 21, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x06\\x01\\x05)\\x9f\\x01\\x06\\x19\\x1f\\x15$\\x00:\\x00\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2005-10-26T00:00:00", "modifydate": "2006-07-10T15:24:06", "lines": 58, "newlines": 24, "modlines": 0, "user": "RLRICE"}, "text": "DIR_RECORD        DS   0C\nDIR_NAME          DS   CL8\nDIR_FLAGS         DS   X\n$DIR_SPF          EQU  X'80'         .. SPF STATISTICS PRESENT\n$DIR_TAGGED       EQU  X'40'         .. MEMBER IS 'TAGGED'\n$DIR_NAME_TRUNC   EQU  X'20'         .. NAME WAS TRUNCATED\n$DIR_PMAR         EQU  X'10'         .. MEMBER HAS PMAR DATA\n$DIR_DELETED      EQU  X'08'         .. MEMBER HAS BEEN DELETED\n$DIR_RENAMED      EQU  X'04'         .. MEMBER HAS BEEN RENAMED\nDIR_TTR           DS   XL3\nDIR_LIB_TYPE      DS   X             LIBRARY TYPE (FROM SMDE)\nDIR_SMDE_FLAG     DS   X             FLAGS (FROM SMDE)\nDIR_MLT           DS   XL3           MLT (TTR FROM SMDE)\nDIR_CONCAT        DS   X             CONCATENATION NUMBER\nDIR_LIB_FLAG      DS   X\nDIR_DATA_LENGTH   DS   XL2           USER DATA LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR_DATA          DS   0C\nDIR_SPF_VERSION   DS   X             VERSION\nDIR_SPF_LEVEL     DS   X             LEVEL\nDIR_SPF_C_DATE    DS   PL4           CREATION DATE\nDIR_SPF_M_DATE    DS   PL4           MODIFICATION DATE\nDIR_SPF_M_TIME    DS   XL3           MODIFICATION TIME\nDIR_SPF_INIT      DS   XL2           INITIAL SIZE\nDIR_SPF_SIZE      DS   XL2           SIZE\nDIR_SPF_MODS      DS   XL2           NUMBER OF MODIFICATIONS\nDIR_SPF_USER      DS   CL8           LAST MODIFIED BY USER\nDIR_SPF_L         EQU  *-DIR_DATA    LENGTH OF SPF DATA\n                  ORG  DIR_DATA\nDIR_PMAR_ATR1     DS   X             ATTRIBUTE BYTE 1\nDIR_PMAR_ATR2     DS   X             ATTRIBUTE BYTE 2\nDIR_PMAR_ATR3     DS   X             ATTRIBUTE BYTE 3\nDIR_PMAR_ATR4     DS   X             ATTRIBUTE BYTE 4\nDIR_PMAR_AC       DS   X             AUTH CODE\nDIR_PMAR_STOR     DS   XL4           VIRTUAL STORAGE REQUIRED\nDIR_PMAR_EPM      DS   XL4           MAIN ENTRY POINT OFFSET\nDIR_PMAR_EPA      DS   XL4           THIS ENTRY POINT OFFSET\nDIR_PMAR_SSI      DS   XL4           SSI INFORMATION\nDIR_PMAR_LENGTH   DS   XL4           LENGTH ON DASD\nDIR_PMAR_DATE     DS   XL4           DATE SAVED\nDIR_PMAR_TIME     DS   XL4           TIME SAVED\nDIR_PMAR_USER     DS   XL4           USER OR JOB NAME\nDIR_PMAR_TTR      DS   XL3           TTR OF FIRST BLOCK OF TEXT\nDIR_PMAR_TTRN     DS   XL3           TTR OF FIRST NOTE LIST\nDIR_PMAR_NL       DS   X             NUMBER OF ENTRIES IN NOTE LIST\nDIR_PMAR_FTBL     DS   XL2           LENGTH OF FIRST BLOCK OF TEXT\n\nDIR_PMAR_ORG      DS   0XL3          LOAD MODULE ORIGIN IF NOT ZERO\n                  DS   XL2\nDIR_PMAR_RLDS     DS   X             NUMBER OF RLD/CTL RECORDS\n\nDIR_PMAR_SLSZ     DS   XL2           SCATTER LIST LENGTH\nDIR_PMAR_TTSZ     DS   XL2           TRANSLATION TABLE LENGTH\nDIR_PMAR_ESDT     DS   CL2           ESDID OF FIRST TEXT BLOCK\nDIR_PMAR_ESDC     DS   CL2           ESDID OF EP CONTROL SECTION\nDIR_RECORD_L      EQU  *-DIR_RECORD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DISASMDA": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18\\x00\\x08\\x01\\t3_\\x01\\x10\\x02\\x7f\\x08%\\x01-\\x01\\x1f\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.24", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2010-01-27T08:25:08", "lines": 301, "newlines": 287, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     DISASM's data areas                                             *\n*                                                                     *\n*     There were so many different blocks that making up macros or    *\n*     copy members took more time than it was worth.  Most of the     *\n*     data areas are small, so it doesn't cost much to assemble them  *\n*     all in all the modules.                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                    AREA DESCRIPTORS                                 *\n*                                                                     *\n*  All text areas will be described by a DATA or INSTRUCTION AREA.    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAREA_DSECT             DSECT\nAREA_PREV              DS    A          PREV AREA\nAREA_NEXT              DS    A          NEXT AREA\nAREA_EYE               DS    CL8        EYE CATCHER\nAREA_BEGIN             DS    XL4        STARTING DISPLACEMENT\nAREA_END               DS    XL4        ENDING DISPLACEMENT\nAREA_LENGTH            DS    XL4        LENGTH\nAREA_LABEL             DS    XL4        LABEL ADDRESS\nAREA_OPCODE            DS    A          ADDRESS OF OPCODE TABLE ENTRY\nAREA_REF_LABEL1        DS    A          OPERAND 1 LABEL\nAREA_REF_DISP1         DS    XL4        DISP FROM OPERAND 1 LABEL\nAREA_REF_USING1        DS    XL4        USING IN EFFECT\nAREA_REF_LABEL2        DS    A          OPERAND 2 LABEL\nAREA_REF_DISP2         DS    XL4        DISP FROM OPERAND 2 LABEL\nAREA_REF_USING2        DS    XL4        USING IN EFFECT\nAREA_TYPE              DS    C          AREA TYPE\n$AREA_DATA             EQU   C'D'       .. DATA AREA\n$AREA_INSTRUCTION      EQU   C'I'       .. INSTRUCTION\nAREA_DATA_TYPE         DS    X          DATA TYPES (DATA AREAS)\n$DATA_USER             EQU   X'01'      .. USER DEFINED\n$DATA_ACON             EQU   X'02'      .. A-CON\n$DATA_31               EQU   X'82'      .. AD-CON WITH 31-BIT MODE BIT\n$DATA_VCON             EQU   X'03'      .. V-CON\n$DATA_INTERNAL         EQU   X'04'      .. INTERNALLY DETECTED\n$DATA_CXD              EQU   X'05'      .. PSEUDO AREA SIZE\n$DATA_Q                EQU   X'06'      .. PSEUDO AREA DISPLACEMENT\nAREA_FLAGS             DS    X\n$AREA_LABEL_GENNED     EQU   X'80'      .. LABEL HAS BEEN GENNED\n$AREA_RLD_PLUS         EQU   X'40'      .. DIRECTION + (FOR RLD ITEM)\n$AREA_RLD_MINUS        EQU   X'20'      .. DIRECTION - (FOR RLD ITEM)\n$AREA_OVERLAP          EQU   X'10'      .. OVERLAPS ANOTHER AREA\nAREA_RLD_NAME          DS    CL63       VCON, Q, ETC NAME\nAREA_DSECT_L           EQU   *-AREA_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Assembler source                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nASM_DSECT              DSECT\nASM_PREV               DS    A          PREV ASM BLOCK\nASM_NEXT               DS    A          NEXT ASM BLOCK\nASM_EYE                DS    CL8        EYE CATCHER\nASM_SOURCE             DS    CL80       ASSEMBLE SOURCE STATEMENT\nASM_DSECT_L            EQU   *-ASM_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        BASE REGISTER DEFINITIONS                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBASE_DSECT             DSECT\nBASE_PREV              DS    A          PREV BASE BLOCK\nBASE_NEXT              DS    A          NEXT BASE BLOCK\nBASE_EYE               DS    CL8        EYE CATCHER\nBASE_BEGIN             DS    XL4        STARTING DISPLACEMENT\nBASE_END               DS    XL4        ENDING DISPLACEMENT\nBASE_DISP              DS    XL4        DISPLACEMENT BASE REFERS TO\nBASE_REGISTER          DS    X          BASE REGISTER\nBASE_CHAR_REGISTER     DS    CL3        BASE REGISTER IN CHARACTER FORM\nBASE_FLAGS             DS    X          FLAGS\n$BASE_GENNED           EQU   X'80'\n$BASE_DROPPED          EQU   X'40'\nBASE_DSECT_L           EQU   *-BASE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        DSECT DEFINITIONS                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSECT_DSECT            DSECT\nDSECT_PREV             DS    A          PREV DSECT BLOCK\nDSECT_NEXT             DS    A          NEXT DSECT BLOCK\nDSECT_EYE              DS    CL8        EYE CATCHER\nDSECT_LABEL_PREV       DS    A          LABEL BLOCK'S ADDRESS\nDSECT_LABEL_NEXT       DS    A          LABEL BLOCK'S ADDRESS\nDSECT_NAME             DS    CL63       DSECT'S NAME\nDSECT_FLAGS            DS    X          FLAGS\n$DSECT_LABELS_READ     EQU   X'80'      .. LABELS HAVE BEEN READ\nDSECT_DSECT_L          EQU   *-DSECT_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        ESD ITEMS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESD_DSECT              DSECT\nESD_PREV               DS    A          PREV ESD BLOCK'S ADDRESS\nESD_NEXT               DS    A          NEXT ESD BLOCK'S ADDRESS\nESD_EYE                DS    CL8        EYE CATCHER\nESD_NAME               DS    CL8        SYMBOL NAME\nESD_RESIDENT           DS    CL8        SECTION CONTAINING SYMBOL\nESD_TARGET             DS    CL8        SECTION NAME REFERS TO\nESD_TYPE               DS    CL2        TYPE\nESD_TYPE_QUAL          DS    CL2        TYPE QUALIFIER\nESD_LENGTH             DS    AL4        ENTRY LENGTH\nESD_ELEM_OFFSET        DS    AL4        ELEMENT OFFSET\nESD_CLASS_OFFSET       DS    AL4        CLASS OFFSET\nESD_DSECT_L            EQU   *-ESD_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        LABEL BLOCK                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLABEL_DSECT            DSECT\nLABEL_PREV             DS    A          PREV LABEL BLOCK\nLABEL_NEXT             DS    A          NEXT LABEL BLOCK\nLABEL_EYE              DS    CL8        EYE CATCHER\nLABEL_NAME             DS    CL63       LABEL NAME\nLABEL_DISP             DS    XL4        DISPLACEMENT TO THIS LABEL\nLABEL_EQU_PREV         DS    A          EQU BLOCK ADDRESS\nLABEL_EQU_NEXT         DS    A          EQU BLOCK ADDRESS\nLABEL_TYPE             DS    C          LABEL TYPE\n$LABEL_DATA            EQU   C'D'       .. LABEL AT DATA\n$LABEL_ESD             EQU   C'E'       .. LABEL FROM AN ESD ENTRY\n$LABEL_INSTR           EQU   C'I'       .. LABEL AT AN INSTRUCTION\n$LABEL_RLD             EQU   C'R'       .. LABEL FROM AN RLD ENTRY\nLABEL_DSECT_L          EQU   *-LABEL_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Section \"name\" blocks                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNAME_DSECT             DSECT\nNAME_PREV              DS    A          PREV NAME BLOCK\nNAME_NEXT              DS    A          NEXT NAME BLOCK\nNAME_EYE               DS    CL8        EYE CATCHER\nNAME_NAME              DS    CL8        SECTION NAME\nNAME_OFFSET            DS    F          DISPLACEMENT\nNAME_DSECT_L           EQU   *-NAME_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        OPCODE DEFINITIONS                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPCODE_DSECT           DSECT\nOPCODE_MACHINE         DS    CL2        OPCODE\nOPCODE_MNEMONIC        DS    CL5        MNEMONIC\nOPCODE_LENGTH          DS    AL2        INSTRUCTION LENGTH\nOPCODE_EXIT            DS    AL4        MODIFICATION EXIT\nOPCODE_FORMAT          DS    X          FORMAT\n$OPCODE_E              EQU   X'01'      .. E FORMAT (SAM)\n$OPCODE_RRE            EQU   X'02'      .. RRE FORMAT\n$OPCODE_RR1            EQU   X'03'      .. RR FORMAT 1 (R1,R2)\n$OPCODE_RR2            EQU   X'04'      .. RR FORMAT 2 (SVC'S)\n$OPCODE_RR3            EQU   X'05'      .. RR FORMAT 3 (BRANCHES)\n$OPCODE_RX             EQU   X'06'      .. RX FORMAT\n$OPCODE_S              EQU   X'07'      .. S FORMAT\n$OPCODE_SI             EQU   X'08'      .. SI (IMMEDIATE) FORMAT\n$OPCODE_RS1            EQU   X'09'      .. RS FORMAT 1 (SHIFTS)\n$OPCODE_RS2            EQU   X'0A'      .. RS FORMAT 2 (BXLE, BXH, )\n$OPCODE_RS3            EQU   X'0B'      .. RS FORMAT 3 (MASK TYPE)\n$OPCODE_SS1            EQU   X'0C'      .. SS FORMAT 1 (CHARACTER)\n$OPCODE_SS2            EQU   X'0D'      .. SS FORMAT 2 (PACKED DECIMAL)\n$OPCODE_SS3            EQU   X'0E'      .. SS FORMAT 3 (MVCK,MVCS,MVCP)\n$OPCODE_SS4            EQU   X'0F'      .. SS FORMAT 4 (SRP)\n$OPCODE_B2S            EQU   X'10'      .. B2 S-FORMAT\n$OPCODE_REL1           EQU   X'11'      .. BRANCH RELATIVE\n$OPCODE_RIL            EQU   X'12'      .. C0 (LARL, BRCL, BRASL)\nOPCODE_FLAGS           DS    X          FLAGS\n$OPCODE_BRANCH         EQU   X'80'      .. BRANCH\n$OPCODE_CCA            EQU   X'40'      .. SETS CC, ARITHMETIC\n$OPCODE_CCC            EQU   X'20'      .. SETS CC, COMPARE\n$OPCODE_CCL            EQU   X'10'      .. SETS CC, LOGICAL\n$OPCODE_NO_COMMENT     EQU   X'08'      .. NO COMMENT\n$OPCODE_RELATIVE       EQU   X'04'      .. RELATIVE ADDRESSING\n$OPCODE_EXT            EQU   X'02'      .. USE EXTENDED MNEMONICS\nOPCODE_REGS            DS    X          REGISTER RESTRICTIONS\n$OPCODE_1EVEN          EQU   X'80'      .. OPERAND 1 MUST BE EVEN\n$OPCODE_10246          EQU   X'40'      .. OPERAND 1 MUST BE 0,2,4,6\n$OPCODE_104            EQU   X'20'      .. OPERAND 1 MUST BE 0 OR 4\n$OPCODE_2EVEN          EQU   X'08'      .. OPERAND 2 MUST BE EVEN\n$OPCODE_20246          EQU   X'04'      .. OPERAND 2 MUST BE 0,2,4,6\n$OPCODE_204            EQU   X'02'      .. OPERAND 2 MUST BE 0 OR 4\nOPCODE_REF             DS    X          BASE + DISP TYPE REFERENCES\n$OPCODE_REF1           EQU   X'80'      .. 3RD AND 4TH NIBBLE\n$OPCODE_REF2           EQU   X'40'      .. 5TH AND 6TH NIBBLE\nOPCODE_COMMENT         DS    CL25       COMMENT IF PRESENT\nOPCODE_DSECT_L         EQU   *-OPCODE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        EQU DEFINITIONS                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEQU_DSECT              DSECT\nEQU_PREV               DS    A          PREV EQU BLOCK'S ADDRESS\nEQU_NEXT               DS    A          NEXT EQU BLOCK'S ADDRESS\nEQU_EYE                DS    CL8        EYECATCHER\nEQU_LABEL              DS    CL63       LABEL ON EQU STATEMENT\nEQU_VALUE              DS    X          ASSOCIATED EQU VALUE\nEQU_DSECT_L            EQU   *-EQU_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        USING DEFINITIONS                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSING_DSECT            DSECT\nUSING_PREV             DS    A          PREV USING BLOCK\nUSING_NEXT             DS    A          NEXT USING BLOCK\nUSING_EYE              DS    CL8        EYE CATCHER\nUSING_NAME             DS    CL63       FOR NAMED USINGS\nUSING_DSECT_NAME       DS    CL63       DSECT'S NAME\nUSING_DSECT_LABEL      DS    CL63       LABEL WITHIN THE DSECT\nUSING_DSECT_ADDR       DS    A          RELATED DSECT BLOCK'S ADDRESS\nUSING_LABEL_ADDR       DS    A          LABEL BLOCK'S ADDRESS\nUSING_DISP             DS    XL4        DISP FROM DSECT OR LABEL\nUSING_REGISTER         DS    X          BASE REGISTER\nUSING_CHAR_REGISTER    DS    CL3        BASE REGISTER (CHAR FORM)\nUSING_FLAG             DS    X          FLAGS\n$USING_NO_DISP         EQU   X'80'      .. NO DISPLACEMENTS\n$USING_GENNED          EQU   X'40'      .. USING GENNED\n$DROP_GENNED           EQU   X'20'      .. DROP GENNED\nUSING_BEGIN            DS    XL4        STARTING DISPLACEMENT\nUSING_END              DS    XL4        ENDING DISPLACEMENT\nUSING_DSECT_L          EQU   *-USING_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Config file records                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCONFIG_RECORD          DSECT\nCONFIG_TYPE            DS    X          TYPE OF DATA\n$CONFIG_DATAAREA       EQU   X'01'      .. USER DEFINED DATA AREA\n$CONFIG_BASE           EQU   X'02'      .. BASE\n$CONFIG_USING          EQU   X'03'      .. USING\n$CONFIG_DSECT_KSDS     EQU   X'04'      .. PREPROCESSED DSECT KSDS\n$CONFIG_SYSLIB         EQU   X'05'      .. SYSLIB(S) FOR ASSEMBLER\n$CONFIG_PREFIX_LENGTH  EQU   X'06'      .. LABEL PREFIX LENGTH\n$CONFIG_PREFIX         EQU   X'07'      .. LABEL PREFIX\n$CONFIG_ASM_SOURCE     EQU   X'08'      .. ASSEMBLER SOURCE\n$CONFIG_OUTPUT_DSN     EQU   X'09'      .. OUTPUT DSN\n$CONFIG_OUTPUT_MEMBER  EQU   X'0A'      .. OUTPUT MEMBER\n$CONFIG_OUTPUT_VOLSER  EQU   X'0B'      .. OUTPUT VOLSER\nCONFIG_DATA            DS    CL255      SAVED DATA\nCONFIG_RECORD_L        EQU   *-CONFIG_RECORD\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Preprocessed DSECT KSDS                                      *\n*                                                                     *\n*                                                                     *\n*   The disassembler allows DSECTs to be pre-processed by DISASMU1.   *\n*                                                                     *\n*   The high-level assembler allows label names to be up to 63        *\n*   characters in length... ruling out using a PDS or PDS/E with      *\n*   the DSECT name as the member name.  So, I used VSAM KSDS's.       *\n*                                                                     *\n*   A snag is that the system does not allow VSAM data sets to be     *\n*   concatenated.  So, I allow for multiple KSDS'S.  When a DSECT     *\n*   is referenced on a USING statement, the disassembler first        *\n*   \"looks\" for the DSECT in the output from the assembled source     *\n*   given by the ASM,START and ASM,END statements.  If the DSECT      *\n*   is not found, the DSECTxx DDs will be searched in the same        *\n*   order they appear in the JCL.                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nKSDS_DSECT          DSECT\nKSDS_PREV           DS     A           PREV KSDS BLOCK\nKSDS_NEXT           DS     A           NEXT KSDS BLOCK\nKSDS_EYE            DS     CL8         EYE CATCHER\nKSDS_DDNAME         DS     CL8         DD NAME\nKSDS_DSNAME         DS     CL44        DSN\nKSDS_ACB            ACB    AM=VSAM     ACB\nKSDS_DSECT_PREV     DS     A\nKSDS_DSECT_NEXT     DS     A\nKSDS_FLAGS          DS     X           FLAGS\n$KSDS_OPEN          EQU    X'80'       .. ACB IS OPEN\n$KSDS_DSECTS_READ   EQU    X'40'       .. DSECTS HAVE BEEN READ\nKSDS_DSECT_L        EQU    *-KSDS_DSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Assembler SYSLIBs                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\nSYSLIB_DSECT        DSECT\nSYSLIB_PREV         DS     A           PREV SYSLIB BLOCK\nSYSLIB_NEXT         DS     A           NEXT SYSLIB BLOCK\nSYSLIB_EYE          DS     CL8         EYE CATCHER\nSYSLIB_DDNAME       DS     CL8         DD NAME\nSYSLIB_DSNAME       DS     CL44        DSN\nSYSLIB_DSECT_L      EQU    *-SYSLIB_DSECT\n\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISCOMM": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x006\\x01\\t3_\\x01\\x10\\x01?\\x08\\x05\\x00\\xf4\\x00\\xe5\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2010-01-13T08:05:36", "lines": 244, "newlines": 229, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*          DISASSEMBLER COMMON AREA                                   *\n*                                                                     *\n*     This macro will generate either the 'common' module CSECT or    *\n*     a DSECT to map the 'common' module.  'Common' is used for       *\n*     constants and work areas that are required by several modules   *\n*     allowing some elimination of duplicated data and to allow       *\n*     inter-module communication.                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MACRO\n         DISCOMM  &TYPE=\n         AIF   ('&TYPE' EQ 'CSECT').CSECT\n         AIF   ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE 12,'INVALID TYPE'\n         MEXIT\n.CSECT   ANOP\nDISCOMM  CSECT\n         AGO   .NODSECT\n.DSECT   ANOP\nDISCOMM  DSECT\n.NODSECT ANOP\n             DC   CL8'DISCOMM'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCONF_DCB  DCB  DSORG=PO,                   SAVED CONFIG INFO        +\n               DDNAME=DISCONF,                                         +\n               DCBE=DISCONF_DCBE,                                      +\n               RECFM=FB,                                               +\n               LRECL=CONFIG_RECORD_L,                                  +\n               BLKSIZE=CONFIG_RECORD_L*16,                             +\n               MACRF=(R,W)\nDISCONF_DCBE   DCBE   EODAD=*\n\nSYSIN_DCB    DCB  DSORG=PS,                   Assembler SYSIN          +\n               DDNAME=SYSIN,                                           +\n               DCBE=SYSIN_DCBE,                                        +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               BLKSIZE=4000,                                           +\n               MACRF=(GM,PM)\nSYSIN_DCBE     DCBE   EODAD=*\n\nSYSPRINT_DCB DCB  DSORG=PS,                   Assembler SYSPRINT       +\n               DDNAME=SYSPRINT,                                        +\n               DCBE=SYSPRINT_DCBE,                                     +\n               MACRF=GM\nSYSPRINT_DCBE  DCBE   EODAD=*\n\n\nDISPUNCH_DCB DCB  DSORG=PS,                   Generated source         +\n               DDNAME=DISPUNCH,                                        +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               BLKSIZE=4000,                                           +\n               MACRF=PM\n\nDISTEMP_DCB  DCB  DSORG=PS,                                            +\n               DDNAME=DISTEMP,                                         +\n               RECFM=FB,                                               +\n               LRECL=132,                                              +\n               BLKSIZE=5280,                                           +\n               MACRF=PM\n\nACB_I    ACB   AM=VSAM,                                                +\n               DDNAME=ANYDD,                                           +\n               MACRF=(KEY,DIR,SEQ)\nACB_L    EQU   *-ACB_I\n\nDISCOMM_OPEN  OPEN  (*,INPUT),MODE=31,MF=L\nDISCOMM_CLOSE CLOSE *,MODE=31,MF=L\n\n           READ DISCOMM_DECB,                                          +\n               SF,                                                     +\n               MF=L\nDISCOMM_DECB_L EQU  *-DISCOMM_DECB\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_OPCODE_TABLE_NAME   DC   CL8'DISOP1'  OPCODE TABLE NAME\nDISCOMM_OPCODE_TABLE_ADDR   DC   A(0)         OPCODE TABLE ADDRESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_PANEL_NAME          DC   CL8' '       PANEL NAME\nDISCOMM_VDATA_ADDR          DC   A(0)         VDATA ADDR\nDISCOMM_VDATA_LENGTH        DC   F'0'         VDATA LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_GEN_DISP            DC   A(0)         DISP DURING GEN PROCESS\nDISCOMM_GEN_LENGTH          DC   F'0'         LENGTH OF TEXT GENNED\n\nDISCOMM_NAME_PREV           DC   A(0)         SECTION NAME CHAIN\nDISCOMM_NAME_NEXT           DC   A(0)         SECTION NAME CHAIN\nDISCOMM_NAME_NBR            DC   A(0)         NBR OF SECTION NAMES\n\nDISCOMM_ESD_PREV            DC   A(0)         EXTERNAL SYMBOL CHAIN\nDISCOMM_ESD_NEXT            DC   A(0)         EXTERNAL SYMBOL CHAIN\nDISCOMM_ESD_NBR             DC   F'0'         NBR OF ESD ITEMS\n\nDISCOMM_RLD_AREA_PREV       DC   A(0)         RLD AREA CHAIN\nDISCOMM_RLD_AREA_NEXT       DC   A(0)         RLD AREA CHAIN\n\nDISCOMM_USER_AREA_PREV_1    DC   A(0)         USER AREA CHAIN\nDISCOMM_USER_AREA_NEXT_1    DC   A(0)         USER AREA CHAIN\n\nDISCOMM_USER_AREA_PREV_2    DC   A(0)         USER AREA CHAIN\nDISCOMM_USER_AREA_NEXT_2    DC   A(0)         USER AREA CHAIN\n\nDISCOMM_ALL_AREA_PREV       DC   A(0)         ALL AREA CHAIN\nDISCOMM_ALL_AREA_NEXT       DC   A(0)         ALL AREA CHAIN\n\nDISCOMM_BASE_PREV           DC   A(0)         BASE CHAIN\nDISCOMM_BASE_NEXT           DC   A(0)         BASE CHAIN\n\nDISCOMM_DSECT_PREV          DC   A(0)         ASM START/ASM END DSECTS\nDISCOMM_DSECT_NEXT          DC   A(0)         DSECT CHAIN\n\nDISCOMM_USING_PREV          DC   A(0)         USING CHAIN\nDISCOMM_USING_NEXT          DC   A(0)         USING CHAIN\n\nDISCOMM_KSDS_PREV           DC   A(0)         DSECT KSDS CHAIN\nDISCOMM_KSDS_NEXT           DC   A(0)         DSECT KSDS CHAIN\n\nDISCOMM_SYSLIB_PREV         DC   A(0)         DSECT SYSLIB CHAIN\nDISCOMM_SYSLIB_NEXT         DC   A(0)         DSECT SYSLIB CHAIN\n\nDISCOMM_CSECT_EP            DC   A(0)         ENTRY POINT\nDISCOMM_CSECT_LENGTH        DC   F'0'         CSECT LENGTH\nDISCOMM_CSECT_TEXT          DC   A(0)         TEXT'S STORAGE ADDRESS\nDISCOMM_CSECT_TEXT_END      DC   A(0)         TEXT'S ENDING ADDRESS\n\nDISCOMM_ASM_PREV            DC   A(0)         ASSEMBLER SOURCE\nDISCOMM_ASM_NEXT            DC   A(0)         ASSEMBLER SOURCE\n\nDISCOMM_USING_USING         DC   A(0)\nDISCOMM_USING_KSDS          DC   A(0)\nDISCOMM_USING_DSECT         DC   A(0)\nDISCOMM_USING_LABEL         DC   A(0)\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_DIALOG_TOKEN        DC   XL8'00'      DIALOG TOKEN\nDISCOMM_DIALOG_WORKMOD      DC   XL8'00'      DIALOG WORKMOD\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_LMOD_DSN            DC   CL44' '\nDISCOMM_LMOD_VOLSER         DC   CL6' '\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_OUTPUT_DSN          DC   CL44' '\nDISCOMM_OUTPUT_MEMBER       DC   CL8' '\nDISCOMM_OUTPUT_VOLSER       DC   CL6' '\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_DDNAME_LENGTH       DC   H'8'\nDISCOMM_DDNAME              DC   CL8' '       DDNAME\n\nDISCOMM_LMOD_NAME_LENGTH    DC   H'8'\nDISCOMM_LMOD                DC   CL8' '       LMOD NAME\n\nDISCOMM_CSECT_NAME_LENGTH   DC   H'8'\nDISCOMM_CSECT               DC   CL8' '       CSECT NAME\n\nDISCOMM_ASSEMBLER_RC        DC   H'0'         ASSEMBLER'S RC\nDISCOMM_PREFIX_LENGTH       DC   H'0'         LABEL PREFIX LENGTH\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*              Flag bytes/function code bytes                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_FLAGS               DC   X'00'        GLOBAL CONTROL FLAGS\n$DISCOMM_NO_RLD_WARN        EQU  X'80'        .. NO RLD OVERLAP WARNING\n$DISCOMM_ASSEMBLE_SOURCE    EQU  X'40'        .. ASM SOURCE CHANGED\n$DISCOMM_DEBUG              EQU  X'20'        .. DEBUGGING ON\n\nDISCOMM_OPCODE_FLAGS        DC   X'00'\n$DISCOMM_FLOAT              EQU  X'80'        .. FLOATING POINT\n$DISCOMM_B2                 EQU  X'40'        .. B2 INSTRUCTIONS\n$DISCOMM_Z                  EQU  X'20'        .. Z INSTRUCTIONS\n\nDISCOMM_BIND_FUNC           DS   X            BINDER FUNCTION\n$BIND_STARTD                EQU  X'01'        .. START DIALOG\n$BIND_NAMES                 EQU  X'02'        .. OBTAIN SECTION NAMES\n$BIND_ESD_RLD               EQU  X'03'        .. OBTAIN ESD AND RLD\n$BIND_TEXT                  EQU  X'04'        .. READ TEXT\n$BIND_ENDD                  EQU  X'05'        .. END DIALOG\n\nDISCOMM_DSECT_FUNC          DC   X'00'        DSECT FUNCTION\n$DSECT_DISPLAY_ALL          EQU  X'01'        .. DISPLAY ALL INFO\n$DSECT_SELECT               EQU  X'02'        .. ALLOW SELECTION\n\n* ------------------------------------------------------------------- *\n*              Condition code type for extended branch mnemonics      *\n* ------------------------------------------------------------------- *\nDISCOMM_CC                  DC   X'00'        CONDITION CODE TYPE\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_PREFIX              DC   CL4' '       LABEL PREFIX\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_DD_NUMBER           DC   PL4'0'       DD NUMBER FOR DYNALLOC\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_TPUT_MSG            DC   CL80' '\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCOMM_SOURCE              DS    0C\nDISCOMM_SOURCE_DISP         DS    CL8\n                            DS    CL2\nDISCOMM_SOURCE_HEX_1        DS    CL4\n                            DS    C\nDISCOMM_SOURCE_HEX_2        DS    CL4\n                            DS    C\nDISCOMM_SOURCE_HEX_3        DS    CL4\n                            DS    C\nDISCOMM_SOURCE_HEX_4        DS    CL4\n                            DS    CL5\nDISCOMM_SOURCE_LABEL        DS    CL8\n                            DS    C\nDISCOMM_SOURCE_OPCODE       DS    CL5\n                            DS    C\nDISCOMM_SOURCE_OPERAND1     DS    CL200\nDISCOMM_SOURCE_L            EQU   *-DISCOMM_SOURCE\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISPCTRL": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00Y\\x01\\x062\\x1f\\x01\\t$O\\x17\\x01\\x00'\\x00\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "2006-11-17T00:00:00", "modifydate": "2009-09-01T17:01:59", "lines": 39, "newlines": 6, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     DISPCTRL is a table (not a chain).                              *\n*                                                                     *\n*     The address is in EDCOMM_DISPLAY_CONTROL                        *\n*                                                                     *\n*     The reason DISPCTRL is not a \"part\" of EDCOMM is that the       *\n*     size of DISPCTRL varies depending on the type of display        *\n*     device in use.                                                  *\n*                                                                     *\n*     This table is to make EDLINE's life easier.                     *\n*     There is an entry per line on EDIT displays.                    *\n*     The screen builder (like EDNORMO or EDHEXO) \"know\" what         *\n*     it is displaying on each line.  The line command interpreter    *\n*     does not.  Some lines allow commands to be entered on that      *\n*     line, others do not.  For example, when in HEX mode, line       *\n*     commands are allowed only on the CHARACTER line.  Also,         *\n*     SEQ blocks do not exist for all lines (like the blank lines     *\n*     between rows of hex displays).  So, rather than have EDLINE     *\n*     and other stuff \"figure out\" what was sent out per line,        *\n*     the program that builds the display builds the DISPCTRL table   *\n*     at the same time.                                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISPCTRL          DSECT\nDISPCTRL_VDATA    DS     A                 ADDRESS IN VDATA\nDISPCTRL_COPY     DS     A                 ADDRESS IN COPY\nDISPCTRL_SEQ      DS     A                 SEQ BLOCK ADDRESS\nDISPCTRL_LINE_NBR DS     H                 LINE NUMBER\nDISPCTRL_FLAGS    DS     X                 FLAGS\n$DISPCTRL_CMD     EQU    X'80'             .. COMMAND MAY BE PRESENT\n$DISPCTRL_DUMMY   EQU    X'40'             .. FILLER LINE\n$DISPCTRL_CHAR    EQU    X'20'             .. CHARACTER DATA\n$DISPCTRL_ZONE    EQU    X'10'             .. ZONE DATA\n$DISPCTRL_NUMERIC EQU    X'08'             .. ZONE DATA\n                  DS     0F\nDISPCTRL_L        EQU    *-DISPCTRL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSINFREQ": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x04\\x01\\x05%\\x8f\\x01\\t3\\x8f\\x13\\x04\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2005-09-15T00:00:00", "modifydate": "2009-12-04T13:04:04", "lines": 28, "newlines": 28, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Data set info interface                                      *\n*                                                                     *\n*  As of 9/15/2005, the catalog search interface (CSI) is documented  *\n*  in DFSMS: Managing catalogs in appendix A                          *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         DSINFREQ &DSECT=YES\n                      AIF   ('&DSECT' EQ 'YES').LBL0010\nDSINFREQ              DS    0A\n                      AGO   .LBL0020\n.LBL0010              ANOP\nDSINFREQ              DSECT\n.LBL0020              ANOP\nDSINFO_OPTIONS        DS  X        OPTIONS\n$DSINFO_VOLSER        EQU X'80'    USE SPECIFIED VOLSER\n$DSINFO_NO_OBTAIN     EQU X'40'    DO NOT ISSUE OBTAIN\nDSINFO_DSN            DS  CL44     DATA SET NAME\nDSINFO_VOLSER         DS  CL6      VOLSER\nDSINFO_DATASET_TYPE   DS  X        DATA SET TYPE\nDSINFO_DSCB           DS  140X     DSCB\nDSINFO_ERROR_INFO     DS  0XL4     CSI ERROR REASON INFO\nDSINFO_ERROR_MODULE   DS  XL2      .. MODULE ID\nDSINFO_ERROR_REASON   DS  X        .. REASON\nDSINFO_ERROR_RC       DS  X        .. RETURN CODE\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSPCREQ": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\t(o\\x01\\t(o\\x14S\\x00A\\x00A\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2009-10-13T14:53:58", "lines": 65, "newlines": 65, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Data space request parm list                                 *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         DSPCREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nDSPCREQ                       DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nDSPCREQ                DSECT\n.LBL0020 ANOP\nDSPCREQ_FUNC           DS     X              FUNCTION\n$DSPCREQ_CREATE        EQU    X'01'          .. CREATE\n$DSPCREQ_CLEAR         EQU    X'02'          .. CLEAR\n$DSPCREQ_DELETE        EQU    X'03'          .. DELETE\n$DSPCREQ_DUMP          EQU    X'04'          .. DUMP A DATASPACE\n$DSPCREQ_FIND_MEMBER_G EQU    X'05'          .. FIND A MEMBER\n$DSPCREQ_FIND_MEMBER_S EQU    X'06'          .. FIND A MEMBER\n$DSPCREQ_FIND_DSN_G    EQU    X'07'          .. FIND BY DSB\n$DSPCREQ_FIND_DSN_S    EQU    X'08'          .. FIND BY DSN\n$DSPCREQ_FIND_CCHHR    EQU    X'09'          .. FIND BY DISK ADDRESS\n$DSPCREQ_FIND_FILE_G   EQU    X'0A'          .. FIND UNIX FILE\n$DSPCREQ_FIND_FILE_S   EQU    X'0B'          .. FIND UNIX FILE\n$DSPCREQ_RETRIEVE      EQU    X'0C'          .. RETRIEVE A RECORD\n$DSPCREQ_SORT_NAME     EQU    X'0D'          .. SORT BY NAME\n$DSPCREQ_SORT_TTR      EQU    X'0E'          .. SORT BY TTR\n$DSPCREQ_SORT_CDATE    EQU    X'0F'          .. SORT BY CDATE\n$DSPCREQ_SORT_MDATE    EQU    X'10'          .. SORT BY MDATE & TIME\n$DSPCREQ_SORT_SIZE     EQU    X'11'          .. SORT BY SIZE\n$DSPCREQ_SORT_USER     EQU    X'12'          .. SORT BY USER\n$DSPCREQ_SORT_DSN      EQU    X'13'          .. SORT VTOC BY DSN\n$DSPCREQ_SORT_CCHHR    EQU    X'14'          .. SORT VTOC BY cchhr\n$DSPCREQ_STORE         EQU    X'15'          .. STORE A RECORD\n$DSPCREQ_UPDATE        EQU    X'16'          .. UPDATE A RECORD\n\nDSPCREQ_RC             DS     X              RETURN CODE\n$DSPCREQ_OK            EQU    X'00'          .. GOOD\n$DSPCREQ_NOT_STORED    EQU    X'01'          .. RECORD NOT STORED\n$DSPCREQ_FULL          EQU    X'02'          .. DATASPACE IS FULL\n$DSPCREQ_EMPTY         EQU    X'03'          .. DATASPACE IS EMPTY\n$DSPCREQ_ERROR         EQU    X'FF'          .. FAILURE (SEE MESSAGES)\n\nDSPCREQ_DATASPACE      DS     A              DATASPACE CONTROL INFO\nDSPCREQ_RECORD_NBR     DS     F              RECORD NUMBER\nDSPCREQ_RECORD_ADDR    DS     A              ADDRESS OF RECORD\nDSPCREQ_RECORD_LENGTH  DS     F              LENGTH OF RECORD\n\nDSPCREQ_DCB            DS     A              DCB ADDRESS (DUMP)\n\nDSPCREQ_SEQ            DS     F              LOGICAL RECORD NBR\n\nDSPCREQ_RBA            DS     F              RBA OF RECORD (VSAM)\n\nDSPCREQ_CCHHR          DS     CL5            CCHHR (VTOCS)\n\nDSPCREQ_MEMBER         DS     CL8            (FIND MEMBER)\n\nDSPCREQ_DSN            DS     CL44           (FIND DSN)\n\nDSPCREQ_FILE           DS     CL256          (FIND FILE)\n\nDSPCREQ_L              EQU    *-DSPCREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DXDPREF": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00Q\\x01\\x05 ?\\x01\\t\"O\\x15\\x05\\x00\\x04\\x00\\x04\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-07-22T00:00:00", "modifydate": "2009-08-12T15:05:51", "lines": 4, "newlines": 4, "modlines": 0, "user": "RLRICE"}, "text": "DXD_PREFIX    DS    0F\nDXD_SAVE      DS    18F\nDXD_CSECT     DS    CL8\nDXD_PREFIX_L  EQU   *-DXD_PREFIX\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDCOMM": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x008\\x01\\t(o\\x01\\t1_\\x16\\t\\x00|\\x00|\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2009-11-11T16:09:38", "lines": 124, "newlines": 124, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         EDCOMM  &TYPE=\n         AIF     ('&TYPE' EQ 'CSECT').CSECT\n         AIF     ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE   12,'INVALID -TYPE-'\n         MEXIT\n.CSECT   ANOP\nEDCOMM   CSECT\n         AGO   .COMM\n.DSECT   ANOP\nEDCOMM   DSECT\n.COMM    ANOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                   OSEDIT COMMON                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_EYE             DC    CL8'EDCOMM'  EYECATCHER\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_FIRST_SEQ       DC    A(0)\n                       DC    A(0)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_DISPLAY_CONTROL DC    A(0)         DISPLAY CONTROL\nEDCOMM_VDATA_ADDR      DS    A(0)         VDATA ADDRESS\nEDCOMM_VDATA_LENGTH    DS    F'0'         VDATA LENGTH\nEDCOMM_VDATA_CURSOR    DS    F'0'         CURSOR POSITION\nEDCOMM_VDEPTH          DC    A(0)         LINES AVAILABLE\nEDCOMM_VWIDTH          DC    A(0)         COLUMNS AVAILABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_PROCESS_SEQ     DC    A(0)         NEXT SEQ BLOCK TO PROCESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_VDATA_COPY      DC    A(0)         COPY OF VDATA DISPLAYED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_ACTIVE_RECORDS  DC    F'0'         NBR OF RECORDS IN DATA SPACE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_1ST_ON_DISPLAY  DC    F'0'         SEQ NBR TO DISPLAY ON LINE 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_ACB             DS    0X\nEDCOMM_DCB             DC    100X'00'     DCB OR ACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_EXLST           DS    0X\nEDCOMM_DCBE            DC    100X'00'     DCBE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_RPL             DC    100X'00'     RPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_OPEN_CLOSE      DC    2F'0'        OPEN/CLOSE (LIST FORM)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_SCROLL_LINES    DC    F'0'\nEDCOMM_META_LINES      DC    F'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_VDATA_LINES     DC    H'0'         LINES OF DATA IN COPY\nEDCOMM_DATA_COLUMNS    DC    H'0'         COLUMNS OF DATA ON DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_SCROLL_VERB     DC    C' '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_FLAGS           DC    AL1($EDCOMM_CAPS_ON)\n$EDCOMM_UPDATED        EQU   X'80'        UPDATE SINCE LAST SAVE\n$EDCOMM_PENDING        EQU   X'40'        COMMAND IS PENDING\n$EDCOMM_BLOCK          EQU   X'20'        PENDING COMMAND IS BLOCK CMD\n$EDCOMM_CAPS_ON        EQU   X'10'        CAPS ON\n$EDCOMM_HEX_ON         EQU   X'08'        HEX DISPLAY\n$EDCOMM_NO_TRUNCATE    EQU   X'04'        DO NOT TRUNCATE RECORDS\n$EDCOMM_RESEQUENCE     EQU   X'02'        RESEQUENCE SEQ BLOCKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_PENDING_COMMAND DC    C' '         COMMAND PENDING\nEDCOMM_DATASET_TYPE    DC    X'00'        DATASET TYPE\nEDCOMM_DD              DC    CL8' '       DD NAME\nEDCOMM_DSN             DC    CL44' '      DSN\nEDCOMM_MEMBER          DC    CL8' '       MEMBER\nEDCOMM_VOLSER          DC    CL6' '       VOLSER\nEDCOMM_DSCB            DC    XL140'00'    OUTPUT FILE FORMAT 1 DSCB\nEDCOMM_PATH_LENGTH     DC    F'0'         PATH LENGTH\nEDCOMM_PATH            DC    CL256' '     PATH\nEDCOMM_STAT            DC    (STAT#LENGTH)X'00'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEDCOMM_META_DEFS       DS    0C\n                       METADEF $META_TOP_OF_DATA,AI\n                       METADEF $META_RULE,ABCDIMR\n                       METADEF $META_BOTTOM_OF_DATA,B\n                       DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                       DS    0H\nEDCOMM_IO              DS    65550X       I/O AREA\nEDCOMM_L               EQU   *-EDCOMM\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ESDDATA": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00C\\x01\\x08\\x12?\\x01\\x08\\x12?\\x16\\x08\\x00&\\x00'\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "2008-05-02T00:00:00", "modifydate": "2008-05-02T16:08:43", "lines": 38, "newlines": 39, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*             Data stored in data space                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESDDATA_DATA            DS    0C\nESDDATA_NAME            DS    CL8\nESDDATA_TYPE            DS    CL2\nESDDATA_QUAL            DS    CL2\nESDDATA_NAME_SPACE      DS    C\nESDDATA_SCOPE           DS    C\nESDDATA_SYMBOL_ATTR     DS    X\nESDDATA_FILL_CHAR       DS    C\nESDDATA_RESIDENT        DS    CL8\nESDDATA_LENGTH          DS    F\nESDDATA_ALIGN           DS    X\nESDDATA_USABILITY       DS    X\nESDDATA_AMODE           DS    X\nESDDATA_RMODE           DS    X\nESDDATA_RECFM           DS    XL2\nESDDATA_LOAD_FLAGS      DS    X\nESDDATA_BIND_FLAGS      DS    X\nESDDATA_BIND_CNTL       DS    X\nESDDATA_ATTRIBUTES      DS    X\nESDDATA_XATTR_CLASS     DS    CL8\nESDDATA_XATTR_OFFSET    DS    XL4\nESDDATA_SEGMENT         DS    XL2\nESDDATA_REGION          DS    XL2\nESDDATA_SIGNATURE       DS    CL8\nESDDATA_AUTOCALL        DS    X\nESDDATA_STATUS          DS    X\nESDDATA_TARGET          DS    CL8\nESDDATA_RESIDENT_CLASS  DS    CL50\nESDDATA_ELEMENT_OFFSET  DS    XL4\nESDDATA_CLASS_OFFSET    DS    XL4\nESDDATA_ADA             DS    CL50\nESDDATA_PRIORITY        DS    XL4\nESDDATA_DATA_L          EQU   *-ESDDATA_DATA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FIELD": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\"\\x01\\t(o\\x01\\t1o\\x15(\\x01X\\x01\\\\\\x00\\x0e\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2009-11-12T15:28:22", "lines": 344, "newlines": 348, "modlines": 14, "user": "RLRICE"}, "text": "         MACRO\n         FIELD &NAME,&TYPE,&LENGTH,&FLDDESC,                           +\n               &BASE=,                                                 +\n               &PNS=,                                                  +\n               &TABLE=,                                                +\n               &BIT1=,                                                 +\n               &BIT2=,                                                 +\n               &BIT3=,                                                 +\n               &BIT4=,                                                 +\n               &BIT5=,                                                 +\n               &BIT6=,                                                 +\n               &BIT7=,                                                 +\n               &BIT8=,                                                 +\n               &VALUE1=,                                               +\n               &VALUE2=,                                               +\n               &VALUE3=,                                               +\n               &VALUE4=,                                               +\n               &VALUE5=,                                               +\n               &VALUE6=,                                               +\n               &VALUE7=,                                               +\n               &VALUE8=,                                               +\n               &EXIT=\n         GBLC  &PREVFLD\n         GBLC  &B\n         LCLA  &BITS,&VALUES,&ERRORS\n         LCLA  &TESTS\n         LCLC  &TTYPE\n         LCLC  &PNSLINK\n         LCLC  &TEST(8),&DESC(8)\n         AIF   (T'&BASE NE 'O').GEN0200\n&BITS    SETA  0\n&VALUES  SETA  0\n&ERRORS  SETA  0\n&TTYPE   SETC  '0'\n.*\n.*\n.*\n         AIF   (T'&BIT1 EQ 'O').INIT010\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT1 EQ 2).INIT010\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT1'\n.*\n.*\n.*\n.INIT010 ANOP\n         AIF   (T'&BIT2 EQ 'O').INIT020\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT2 EQ 2).INIT020\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT2'\n.*\n.*\n.*\n.INIT020 ANOP\n         AIF   (T'&BIT3 EQ 'O').INIT030\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT3 EQ 2).INIT030\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT3'\n.*\n.*\n.*\n.INIT030 ANOP\n         AIF   (T'&BIT4 EQ 'O').INIT040\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT4 EQ 2).INIT040\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT4'\n.*\n.*\n.*\n.INIT040 ANOP\n         AIF   (T'&BIT5 EQ 'O').INIT050\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT5 EQ 2).INIT050\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT5'\n.*\n.*\n.*\n.INIT050 ANOP\n         AIF   (T'&BIT6 EQ 'O').INIT060\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT6 EQ 2).INIT060\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT6'\n.*\n.*\n.*\n.INIT060 ANOP\n         AIF   (T'&BIT7 EQ 'O').INIT070\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT7 EQ 2).INIT070\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT7'\n.*\n.*\n.*\n.INIT070 ANOP\n         AIF   (T'&BIT8 EQ 'O').INIT080\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT8 EQ 2).INIT080\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT8'\n.*\n.*\n.*\n.INIT080 ANOP\n         AIF   (T'&VALUE1 EQ 'O').INIT090\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE1 EQ 2).INIT090\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE1'\n.*\n.*\n.*\n.INIT090 ANOP\n         AIF   (T'&VALUE2 EQ 'O').INIT100\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE2 EQ 2).INIT100\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE2'\n.*\n.*\n.*\n.INIT100 ANOP\n         AIF   (T'&VALUE3 EQ 'O').INIT110\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE3 EQ 2).INIT110\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE3'\n.*\n.*\n.*\n.INIT110 ANOP\n         AIF   (T'&VALUE4 EQ 'O').INIT120\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE4 EQ 2).INIT120\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE4'\n.*\n.*\n.*\n.INIT120 ANOP\n         AIF   (T'&VALUE5 EQ 'O').INIT130\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE5 EQ 2).INIT130\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE5'\n.*\n.*\n.*\n.INIT130 ANOP\n         AIF   (T'&VALUE6 EQ 'O').INIT140\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE6 EQ 2).INIT140\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE6'\n.*\n.*\n.*\n.INIT140 ANOP\n         AIF   (T'&VALUE7 EQ 'O').INIT150\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE7 EQ 2).INIT150\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE7'\n.*\n.*\n.*\n.INIT150 ANOP\n         AIF    (&ERRORS GT 0).MEXIT\n         AIF    (&BITS   GT 0 AND &VALUES GT 0).ERR0010\n         AIF    (&BITS   GT 0 AND T'&EXIT NE 'O').ERR0020\n         AIF    (&VALUES GT 0 AND T'&EXIT NE 'O').ERR0030\n&TESTS   SETA   0\n         AIF    (&BITS   EQ 0).INIT230\n&TTYPE   SETC   '$FIELD_BIT'\n         AIF    (T'&BIT1 EQ 'O').INIT160\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT1(1)'\n&DESC(&TESTS) SETC '&BIT1(2)'\n.INIT160 ANOP\n         AIF    (T'&BIT2 EQ 'O').INIT170\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT2(1)'\n&DESC(&TESTS) SETC '&BIT2(2)'\n.INIT170 ANOP\n         AIF    (T'&BIT3 EQ 'O').INIT180\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT3(1)'\n&DESC(&TESTS) SETC '&BIT3(2)'\n.INIT180 ANOP\n         AIF    (T'&BIT4 EQ 'O').INIT190\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT4(1)'\n&DESC(&TESTS) SETC '&BIT4(2)'\n.INIT190 ANOP\n         AIF    (T'&BIT5 EQ 'O').INIT200\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT5(1)'\n&DESC(&TESTS) SETC '&BIT5(2)'\n.INIT200 ANOP\n         AIF    (T'&BIT6 EQ 'O').INIT210\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT6(1)'\n&DESC(&TESTS) SETC '&BIT6(2)'\n.INIT210 ANOP\n         AIF    (T'&BIT7 EQ 'O').INIT220\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT7(1)'\n&DESC(&TESTS) SETC '&BIT7(2)'\n.INIT220 ANOP\n         AIF    (T'&BIT8 EQ 'O').GEN0000\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT8(1)'\n&DESC(&TESTS) SETC '&BIT8(2)'\n         AGO    .GEN0000\n.INIT230 ANOP\n         AIF    (&VALUES EQ 0).GEN0000\n&TTYPE   SETC   '$FIELD_VALUE'\n         AIF    (T'&VALUE1 EQ 'O').INIT240\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE1(1)'\n&DESC(&TESTS) SETC '&VALUE1(2)'\n.INIT240 ANOP\n         AIF    (T'&VALUE2 EQ 'O').INIT250\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE2(1)'\n&DESC(&TESTS) SETC '&VALUE2(2)'\n.INIT250 ANOP\n         AIF    (T'&VALUE3 EQ 'O').INIT260\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE3(1)'\n&DESC(&TESTS) SETC '&VALUE3(2)'\n.INIT260 ANOP\n         AIF    (T'&VALUE4 EQ 'O').INIT270\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE4(1)'\n&DESC(&TESTS) SETC '&VALUE4(2)'\n.INIT270 ANOP\n         AIF    (T'&VALUE5 EQ 'O').INIT280\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE5(1)'\n&DESC(&TESTS) SETC '&VALUE5(2)'\n.INIT280 ANOP\n         AIF    (T'&VALUE6 EQ 'O').INIT290\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE6(1)'\n&DESC(&TESTS) SETC '&VALUE6(2)'\n.INIT290 ANOP\n         AIF    (T'&VALUE7 EQ 'O').INIT300\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE7(1)'\n&DESC(&TESTS) SETC '&VALUE7(2)'\n.INIT300 ANOP\n         AIF    (T'&VALUE8 EQ 'O').GEN0000\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE8(1)'\n&DESC(&TESTS) SETC '&VALUE8(2)'\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.GEN0000 ANOP\nA&SYSNDX DS     0C\nFLD&SYSNDX  DS  0C\n         DC     CL8'&NAME'                    FIELD NAME\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS ENTRY\n         DC     CL50&FLDDESC                  DESCRIPTION\n         AIF    (T'&PREVFLD EQ 'O').GEN0010\n         DC     AL4(&PREVFLD)                 PREVIOUS FIELD\n         AGO    .GEN0020\n.GEN0010 ANOP\n         DC     AL4(0)                        PREVIOUS FIELD\n.GEN0020 ANOP\n&PREVFLD SETC   'FLD&SYSNDX'                  SET FOR NEXT FIELD\n         DC     AL2(&NAME-&B)                 DISPLACMENT TO FIELD\n         DC     CL1'&TYPE'                    FIELD TYPE\n         DC     AL1(&LENGTH)                  FIELD LENGTH\n         AIF    (T'&PNS EQ 'O').GEN0030\n         DC     VL4(&PNS)                     POINT-AND-SHOOT\n         AGO    .GEN0040\n.GEN0030 ANOP\n         DC     AL4(0)                        NOT A POINT-AND-SHOOT\n.GEN0040 ANOP\n         AIF    (T'&TABLE EQ 'O').GEN0050\n         DC     VL4(&TABLE)                   FORMATTING TABLE\n         AGO    .GEN0060\n.GEN0050 ANOP\n         DC     AL4(0)                        NO FORMATTING TABLE\n.GEN0060 ANOP\n         AIF    (T'&EXIT EQ 'O').GEN0070\n         DC     VL4(&EXIT)                    EXIT ADDRESS\n         AGO    .GEN0080\n.GEN0070 ANOP\n         DC     AL4(0)                        NO EXIT\n.GEN0080 ANOP\n         DC     AL1(&TTYPE)                   TEST TYPE\n         DC     AL1(&TESTS)                   NUMBER OF TESTS\n         AIF    ('&TESTS' EQ '0').GEN0100\n&INDX    SETA   1\n.GEN0090 ANOP\n         DC     CL8'&TEST(&INDX)'             BIT NAME\n         DC     AL01(&TEST(&INDX).)           TEST VALUE\n         DC     CL40&DESC(&INDX)              DESCRIPTION\n         AIF    (&INDX EQ &TESTS).GEN0100\n&INDX    SETA   &INDX+1\n         AGO    .GEN0090\n.GEN0100 ANOP\nB&SYSNDX DS     0C\n         AGO    .MEXIT\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.GEN0200 ANOP\n&B       SETC   '&BASE'\n         AGO    .MEXIT\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.ERR0010 ANOP\n         MNOTE 8,'BIT FLAGS AND VALUES ARE MUTUALLY EXCLUSIVE'\n         AGO    .MEXIT\n.ERR0020 ANOP\n         MNOTE 8,'BIT FLAGS AND EXIT ARE MUTUALLY EXCLUSIVE'\n         AGO    .MEXIT\n.ERR0030 ANOP\n         MNOTE 8,'VALUES AND EXIT ARE MUTUALLY EXCLUSIVE'\n         AGO    .MEXIT\n         AGO    .MEXIT\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.MEXIT   ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIELDD": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\"\\x01\\t&\\x8f\\x01\\t1o\\x16\\x07\\x00\\x17\\x00\\x18\\x00\\x07\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2009-09-25T00:00:00", "modifydate": "2009-11-12T16:07:22", "lines": 23, "newlines": 24, "modlines": 7, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFIELD_DSECT        DSECT\nFIELD_NAME         DS     CL8                 FIELD NAME\nFIELD_ENTRY_LENGTH DS     AL2                 LENGTH OF THIS ENTRY\nFIELD_DESC         DS     CL50                FIELD DESCRIPTION\nFIELD_PREVIOUS     DS     AL4                 PREVIOUS FIELD\nFIELD_DISP         DS     AL2                 DISP TO DATA\nFIELD_TYPE         DS     CL1                 DATA TYPE\nFIELD_DATA_LENGTH  DS     AL1                 DATA LENGTH\nFIELD_PNS          DS     AL4                 FORMATTER FOR PNS\nFIELD_TABLE        DS     AL4                 FORMATTING TABLE (PNS)\nFIELD_EXIT         DS     AL4                 EXIT ADDRESS\nFIELD_TEST_TYPE    DS     AL1                 1=BIT, 2=VALUES, 3=EXIT\n$FIELD_BIT         EQU    1                   .. BIT MEANINGS\n$FIELD_VALUE       EQU    2                   .. VALUE MEANINGS\n$FIELD_EXIT        EQU    3                   .. EXIT\nFIELD_NBR_TESTS    DS     AL1                 NBR OF TESTS\nFIELD_VALUE_NAME   DS     CL8                 NAME OF VALUE\nFIELD_VALUE        DS     X                   VALUE TO TEST FOR\nFIELD_VALUE_DESC   DS     CL40                DESCRIPTION FOR VALUE\nFIELD_VALUE_L      EQU    *-FIELD_VALUE_NAME\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FMAT": {"ttr": 26, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x003\\x01\\x06\"\\x8f\\x01\\x06$\\x8f\\t4\\x00&\\x00\\x15\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2006-08-16T00:00:00", "modifydate": "2006-09-05T09:34:33", "lines": 38, "newlines": 21, "modlines": 0, "user": "RLRICE"}, "text": "FMAT                    DSECT\nFMAT_NEXT               DS    A          NEXT FMAT BLOCK ADDRESS\nFMAT_FIELDS             DS    A          FIELDS DEPENDANT ON IF\nFMAT_TYPE               DS    X          TYPE OF BLOCK\n\n$FMAT_FIELD             EQU   X'01'      .. FIELD DEFINITION\n$FMAT_IF                EQU   X'02'      .. IF\n$FMAT_END_IF            EQU   X'03'      .. END IF\n\nFMAT_DATA_TYPE          DS    X          FIELD TYPE\n$FMAT_BINARY            EQU   X'01'      .. BINARY\n$FMAT_CHARACTER         EQU   X'02'      .. CHARACTER\n$FMAT_HEADING           EQU   X'03'      .. HEADING\n$FMAT_HEX               EQU   X'04'      .. HEX\n$FMAT_PACKED            EQU   X'05'      .. PACKED DECIMAL\n\nFMAT_START              DS    XL2        STARTING POSITION\nFMAT_LENGTH             DS    XL2        LENGTH\nFMAT_ROW                DS    XL2        ROW ON DISPLAY\nFMAT_COLUMN             DS    XL2        COLUMN ON DISPLAY\n\n                        DS    0H\nFMAT_COMPARE            DS    XL6        COMPARE INSTRUCTION\nFMAT_BRANCH             DS    XL2        SUCCESSFUL COMPARE\nFMAT_RETURN             DS    XL4        RETURN INSTRUCTION\n\nFMAT_OPTIONS            DS    X          OPTIONS\n$FMAT_LEFT              EQU   X'80'      .. LEFT JUSTIFY\n$FMAT_RIGHT             EQU   X'40'      .. RIGHT JUSTIFY\n$FMAT_EDITWORD          EQU   X'20'      .. CUSTOM EDIT WORD\n$FMAT_FLOAT             EQU   X'10'      .. FLOATING PAD CHARACTER\n*\n* For HEADING fields, the data to be displayed\n* For IF statements, the data used for testing against data in records\n* For PACKED fields with custom EDITWORDs, the converted edit word\n*\nFMAT_DATA               DS    CL30\nFMAT_L                  EQU   *-FMAT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FMATREQ": {"ttr": 28, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x000\\x01\\x05(_\\x01\\t\\x06O\\t(\\x00\\x1f\\x00\\x13\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2005-10-12T00:00:00", "modifydate": "2009-03-05T09:28:30", "lines": 31, "newlines": 19, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Load format request                                          *\n*                                                                     *\n*      It can get confusing..                                         *\n*                                                                     *\n*                                                                     *\n*      This is a parameter block passed to OSFORMAT.                  *\n*                                                                     *\n*      It is not the parms passed to a \"formatter\".                   *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         FMATREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nFMATREQ             DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nFMATREQ             DSECT\n.LBL0020 ANOP\nFMATREQ_FUNC        DS     X         FUNCTION\n$FMATREQ_FORMAT     EQU    X'01'     .. LOAD A FORMAT\n$FMATREQ_FREE       EQU    X'02'     .. FREE A FORMAT\n$FMATREQ_CLOSE      EQU    X'03'     .. CLOSE UP SHOP\n$FMATREQ_VERIFY     EQU    X'04'     .. VERIFY A FORMAT IS VALID\nFMATREQ_RC          DS     X         RETURN CODE\n$FMATREQ_OK         EQU    X'00'\n$FMATREQ_ERROR      EQU    X'FF'\nFMATREQ_FORMAT      DS     CL8       FORMAT NAME\nFMATREQ_L           EQU    *-FMATREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FMTCOMM": {"ttr": 30, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00&\\x01\\x06#\\x7f\\x01\\x08\\x12\\x9f\\x14 \\x00\\x0c\\x00\\x04\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2006-08-25T00:00:00", "modifydate": "2008-05-08T14:20:26", "lines": 12, "newlines": 4, "modlines": 0, "user": "RLRICE"}, "text": "DXD_FIRST_FMAT        DS  A             FIRST FMAT BLOCK ON CHAIN\nDXD_FMAT_CHAIN_POINT  DS  A             LAST FMAT BLOCK ON CHAIN\nDXD_FMAT_FMAT         DS  A             FMAT BLOCK BEING FORMATTED\nDXD_IF_TABLE          DS  16A           SAVED FMAT BLOCK ADDRESS TABLE\n\nDXD_RECORD_ADDR       DS  A\nDXD_RECORD_LENGTH     DS  F\n\nDXD_VDATA_ADDR        DS  A             VDATA ADDRESS\nDXD_VDATA_LENGTH      DS  F             VDATA LENGTH\n\nDXD_IF_LEVEL          DS  H             CURRENT IF LEVEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORMAT": {"ttr": 32, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x000\\x01\\x05)/\\x01\\x06#o\\x10H\\x00\\x13\\x00\\r\\x00\\x0c\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-10-19T00:00:00", "modifydate": "2006-08-24T10:48:30", "lines": 19, "newlines": 13, "modlines": 12, "user": "RLRICE"}, "text": "FORMAT              DSECT\nFORMAT_TYPE         DS   CL8\nFORMAT_DATA         DS   CL72\n                    ORG  FORMAT_DATA\nFORMAT_PROGRAM      DS   CL8\n                    ORG  FORMAT_DATA\nFORMAT_PANEL        DS   CL8\n                    ORG  FORMAT_DATA\n                    DS   C\nFORMAT_START        DS   CL10             STARTING POSITION\nFORMAT_LENGTH       DS   CL10             LENGTH\nFORMAT_DATA_TYPE    DS   CL10             DATA TYPE\nFORMAT_ROW_COLUMN   DS   CL10             ROW, COLUMN FOR DISPLAYING\nFORMAT_HEADING      DS   CL30             DATA FOR HEADING TYPE FIELDS\n                    ORG  FORMAT_HEADING\nFORMAT_EDITWORD     DS   CL30\n                    ORG  FORMAT_DATA\nFORMAT_EXIT         DS   CL8\n                    ORG\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GDDMCODE": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* ------------------------------------------------------------------- *\n*     COPIED FROM GDDM.SADMSAM(ADMURCPB)\n*     GROUP - ADMMCQA\n* ------------------------------------------------------------------- *\nQQFSTRCE EQU   X'00020000'       TRACE\nQQFSEXIT EQU   X'00030000'       SET ERROR EXIT\nQQFSQERR EQU   X'00040000'       QUERY LAST ERROR\nQQSPINIT EQU   X'00050000'       SPI SPECIAL INIT\nQQFSQSYS EQU   X'00060000'       QUERY SYSTEMS ENVIRONS\nQQESSUDS EQU   X'00070000'       SPECIFY SOURCE UDS\nQQESEUDS EQU   X'00080000'       SPECIFY ENCODED UDS\nQQESACRT EQU   X'000A0000'       CREATE APP GROUP\nQQESADEL EQU   X'000B0000'       DELETE APP GROUP\nQQESAQRY EQU   X'000C0000'       QUERY CURRENT APP GRP\nQQESASEL EQU   X'000D0000'       SELECT APP GROUP\nQQFSTRAN EQU   X'000F0000'       TRANSLATE CHAR STRING\nQQESQCPG EQU   X'00100000'       QUERY CODE PAGE\nQQESSCPG EQU   X'00110000'       SET CODE PAGE\nQQESQEUD EQU   X'00120000'       QUERY ENCODED UDS\nQQESQUNL EQU   X'00130000'       QRY NICKNAME INFO LEN\nQQESQUNS EQU   X'00140000'       QUERY NICKNAME INFO\n* GROUP - ADMMCQEE\nQQESLIB  EQU   X'08142000'       DEFINE LIBRARY\nQQESQOBJ EQU   X'08142400'       QUERY OBJECT EXISTENCE\nQQESPCB  EQU   X'081C1000'       DEFINE PCB\n* GROUP - ADMMCQDS\nQQFSTERM EQU   X'0C000000'       TERMINATION\nQQFSINIT EQU   X'0C000001'       INITIALISATION\nQQFSRNIT EQU   X'0C000002'       RE-INITIALISATION\nQQDSOPEN EQU   X'0C000200'       OPEN DEVICE\nQQDSCLS  EQU   X'0C000201'       CLOSE DEVICE\nQQDSUSE  EQU   X'0C000202'       DEVICE USAGE\nQQDSDROP EQU   X'0C000203'       DROP DEVICE\nQQDSQUID EQU   X'0C000204'       QUERY UNIQUE DEVICE ID\nQQDSQUSE EQU   X'0C000205'       QUERY USAGE\nQQDSQDEV EQU   X'0C000206'       QUERY DEVICE CHRISTCS\nQQDSRNIT EQU   X'0C000207'       RE-INIT DEVICE\n* GROUP - ADMMCQDC\nQQFSPCRT EQU   X'0C040000'       PAGE CREATION\nQQFSPSEL EQU   X'0C040001'       PAGE SELECTION\nQQFSPDEL EQU   X'0C040002'       PAGE DELETION\nQQFSPCLR EQU   X'0C040003'       PAGE CLEAR\nQQFSPQRY EQU   X'0C040004'       QUERY PAGE\nQQFSQCPG EQU   X'0C040005'       QUERY CURRENT PAGE\nQQMSPQRY EQU   X'0C040006'       QUERY MAPPED PAGE\nQQSSQF   EQU   X'0C040100'       QUERY S SETS ON FILE\nQQPSQSS  EQU   X'0C040101'       QUERY DEVICE PS STORES\nQQGSQNSS EQU   X'0C040102'       QUERY NO LOADED GRA SS\nQQGSQSS  EQU   X'0C040103'       QUERY LOADED GRPHCS SS\nQQPSLSS  EQU   X'0C040200'       LOAD DEV PS FROM STOR\nQQPSLSSC EQU   X'0C040201'       COND LOAD DEV PS STORE\nQQPSDSS  EQU   X'0C040202'       LOAD DEV PS FROM PROG\nQQPSRSV  EQU   X'0C040203'       RESERVE DEVICE PS STOR\nQQGSLSS  EQU   X'0C040300'       LOAD GRPH SYMBOL SET\nQQGSDSS  EQU   X'0C040301'       DEFINE GRPH SYMBOL SET\nQQPSRSS  EQU   X'0C040400'       RELEASE SS FROM DEV PS\nQQGSRSS  EQU   X'0C040401'       RELEASE GRPH SYM SET\nQQFSQDEV EQU   X'0C040500'       QUERY DEVICE\nQQFSQURY EQU   X'0C040501'       EXTENDED QUERY DEVICE\nQQFSQUPG EQU   X'0C040900'       QUERY UNIQUE PAGE ID\nQQSSREAD EQU   X'0C040B00'       READ SYMBOL SET\nQQSSWRT  EQU   X'0C040B01'       WRITE SYMBOL SET\nQQFSPWIN EQU   X'0C040C00'       PAGE WINDOW\nQQFSQWIN EQU   X'0C040C01'       PAGE WINDOW QUERY\nQQGSCPG  EQU   X'0C040D00'       SET CURRENT CODE PAGE\nQQGSQCPG EQU   X'0C040D01'       QUERY CODE PAGE\nQQFSENAB EQU   X'0C040E00'       ENABLE DEVICE INPUT\n* GROUP - ADMMCQDA\nQQFSALRM EQU   X'0C080000'       SOUND ALARM\nQQASFCUR EQU   X'0C080100'       MOVE CURSOR\nQQASDFLT EQU   X'0C080200'       SET DEFAULT FLD ATTRS\nQQASDTRN EQU   X'0C080300'       DEFINE XLATE TABLE\nQQASFCLR EQU   X'0C080400'       CLEAR ALPHA FIELDS\nQQASFTYP EQU   X'0C080500'       SET FIELD TYPE\nQQASFINT EQU   X'0C080501'       SET FIELD INTENSITY\nQQASFCOL EQU   X'0C080502'       SET FIELD COLOR\nQQASFPSS EQU   X'0C080503'       SET FIELD PRIMARY SS\nQQASFHLT EQU   X'0C080504'       SET FIELD HILITE\nQQASFEND EQU   X'0C080505'       SET END FLD ATTRIBUTE\nQQASFOUT EQU   X'0C080506'       SET FIELD O/P NULLS\nQQASFIN  EQU   X'0C080507'       SET FIELD I/P BLANKS\nQQASFTRN EQU   X'0C080508'       SET FLD XLATE TABLE\nQQASFTRA EQU   X'0C080509'       SET FIELD TRANSPARENCY\nQQASFSEN EQU   X'0C08050A'       SET SO/SI ENABLEMENT\nQQASFBDY EQU   X'0C08050B'       SET FIELD OUTLINING\nQQASCHLT EQU   X'0C080600'       SET CHARACTER HILITES\nQQASCCOL EQU   X'0C080601'       SET CHARACTER COLORS\nQQASCSS  EQU   X'0C080602'       SET CHAR SYMBOL SETS\nQQASCPUT EQU   X'0C080603'       SET CHARACTER CODES\nQQASDFLD EQU   X'0C080700'       DEFINE ALPHA FIELD\nQQASRFMT EQU   X'0C080800'       REDEFINE ALPHA FIELDS\nQQASDFMT EQU   X'0C080801'       DEFINE ALPHA FIELDS\nQQASRATT EQU   X'0C080802'       REDEFINE FIELD ATTR.S\nQQASQHLT EQU   X'0C080900'       QUERY CHAR HILITES\nQQASQCOL EQU   X'0C080901'       QUERY CHARACTER COLORS\nQQASQSS  EQU   X'0C080902'       QUERY CHAR SYMBOL SETS\nQQASCGET EQU   X'0C080903'       QUERY CHARACTER CODES\nQQASQFLD EQU   X'0C080A00'       QUERY FIELD ATTRIBUTES\nQQASQMOD EQU   X'0C080B00'       QUERY MODIFIED FIELDS\nQQFSREST EQU   X'0C080C00'       RESTORE SCREEN\nQQDSCMF  EQU   X'0C080C01'       USER CONTROL FUNCTION\nQQDSQCMF EQU   X'0C080C02'       QUERY USER CONTROL FTN\nQQASMODE EQU   X'0C080D00'       SET REPLY MODE\nQQASQMAX EQU   X'0C080E00'       QUERY NO. OF FIELDS\nQQASQNMF EQU   X'0C080E01'       QUERY NO. MOD. FIELDS\nQQASQCUR EQU   X'0C080F00'       QUERY CURSOR\nQQASFMOD EQU   X'0C081100'       MODIFY FIELD\nQQASTYPE EQU   X'0C081300'       SET TERMINAL TYPE\nQQASGPUT EQU   X'0C081503'       SET DUAL-CHARACTERS\nQQASGGET EQU   X'0C081603'       QUERY DUAL-CHARACTERS\nQQASQLEN EQU   X'0C081800'       QUERY FIELD LENGTH\n* GROUP - ADMMCQDG\nQQGSFLD  EQU   X'0C0C0000'       GRAPHICS FIELD\nQQGSPS   EQU   X'0C0C0001'       PICTURE SPACE\nQQGSWIN  EQU   X'0C0C0002'       SPECIFY WINDOW\nQQGSVIEW EQU   X'0C0C0003'       SPECIFY VIEWPORT\nQQGSQPS  EQU   X'0C0C0004'       QUERY PICTURE SPACE\nQQGSQVIE EQU   X'0C0C0005'       QUERY VIEWPORT\nQQGSQWIN EQU   X'0C0C0006'       QUERY WINDOW\nQQGSUWIN EQU   X'0C0C0007'       DEFINE UNIFORM WINDOW\nQQGSQFLD EQU   X'0C0C000A'       QUERY GRAPHICS FIELD\nQQGSARCC EQU   X'0C0C000B'       ASPECT RATIO CONTROL\nQQGSBND  EQU   X'0C0C000D'       SPECIFY DATA BOUNDARY\nQQGSQBND EQU   X'0C0C000E'       QUERY DATA BOUNDARY\nQQGSQMAX EQU   X'0C0C0100'       QUERY SEGMENT RANGE\nQQGSQCUR EQU   X'0C0C0101'       QUERY CURSOR\nQQGSQSSD EQU   X'0C0C0102'       QUERY SYMBOL SET DATA\nQQGSQCEL EQU   X'0C0C0202'       QUERY CELL SIZE\nQQGSCLP  EQU   X'0C0C0203'       SPECIFY CLIPPING\nQQGSQCLP EQU   X'0C0C0204'       QUERY CLIPPING\nQQGSSEG  EQU   X'0C0C0300'       CREATE SEGMENT\nQQGSSCLS EQU   X'0C0C0301'       CLOSE SEGMENT\nQQGSSDEL EQU   X'0C0C0302'       DELETE SEGMENT\nQQGSCLR  EQU   X'0C0C0303'       CLEAR GRAPHICS FIELD\nQQGSSATI EQU   X'0C0C0309'       SET INITIAL ATTRIBUTES\nQQGSQATI EQU   X'0C0C030A'       QUERY INITIAL ATTS\nQQGSSATS EQU   X'0C0C030B'       SET SEGMENT ATTRIBUTES\nQQGSQATS EQU   X'0C0C030C'       QUERY SEGMENT ATTS\nQQGSSPOS EQU   X'0C0C030D'       SET SEGMENT POSITION\nQQGSQPOS EQU   X'0C0C030E'       QUERY SEGMENT POSITION\nQQGSSORG EQU   X'0C0C0311'       SET SEGMENT ORIGIN\nQQGSSPRI EQU   X'0C0C0312'       SET SEGMENT PRIORITY\nQQGSQPRI EQU   X'0C0C0313'       QUERY SEGMENT PRIORITY\nQQGSQORG EQU   X'0C0C0316'       QUERY SEGMENT ORIGIN\nQQGSMOVE EQU   X'0C0C0400'       MOVE TO\nQQGSLINE EQU   X'0C0C0401'       LINE TO\nQQGSPLNE EQU   X'0C0C0402'       POLYLINE TO\nQQGSMARK EQU   X'0C0C0406'       MARKER AT\nQQGSMRKS EQU   X'0C0C0407'       POLY MARKER AT\nQQGSAREA EQU   X'0C0C0408'       BEGIN AREA\nQQGSENDA EQU   X'0C0C0409'       END AREA\nQQGSVECM EQU   X'0C0C040A'       VECTOR\nQQGSCHAR EQU   X'0C0C0500'       CHARACTER STRING AT\nQQGSCHAP EQU   X'0C0C0501'       CHARACTER STRING\nQQGSQTB  EQU   X'0C0C0502'       QUERY THE TEXT BOX\nQQGSARC  EQU   X'0C0C0600'       ARC\nQQGSELPS EQU   X'0C0C0601'       ELLIPSE\nQQGSPFLT EQU   X'0C0C0602'       FILLET\nQQGSQCP  EQU   X'0C0C0700'       QUERY CURRENT POSN\nQQGSCOL  EQU   X'0C0C0701'       SET COLOR\nQQGSMIX  EQU   X'0C0C0702'       SET MIX MODE\nQQGSLT   EQU   X'0C0C0703'       SET LINE TYPE\nQQGSLW   EQU   X'0C0C0704'       SET LINE WIDTH\nQQGSCM   EQU   X'0C0C0705'       SET CHARACTER MODE\nQQGSCS   EQU   X'0C0C0706'       SET CHARACTER SET\nQQGSCB   EQU   X'0C0C0707'       SET CHARACTER BOX\nQQGSCA   EQU   X'0C0C0708'       SET CHARACTER ANGLE\nQQGSCD   EQU   X'0C0C0709'       SET CHARACTER DIRCTN\nQQGSPAT  EQU   X'0C0C070A'       SET PATTERN\nQQGSMS   EQU   X'0C0C070B'       SET MARKER SYMBOL\nQQGSCH   EQU   X'0C0C070C'       SET CHARACTER SHEAR\nQQGSFLW  EQU   X'0C0C070E'       SET FRACTIONAL WIDTH\nQQGSQFLW EQU   X'0C0C070F'       QUERY FRACTIONAL WIDTH\nQQGSQCOL EQU   X'0C0C0711'       QUERY COLOR\nQQGSQMIX EQU   X'0C0C0712'       QUERY MIX MODE\nQQGSQLT  EQU   X'0C0C0713'       QUERY LINE TYPE\nQQGSQLW  EQU   X'0C0C0714'       QUERY LINE WIDTH\nQQGSQCM  EQU   X'0C0C0715'       QUERY CHARACTER MODE\nQQGSQCS  EQU   X'0C0C0716'       QUERY CHARACTER SET\nQQGSQCB  EQU   X'0C0C0717'       QUERY CHARACTER BOX\nQQGSQCA  EQU   X'0C0C0718'       QUERY CHARACTER ANG\nQQGSQCD  EQU   X'0C0C0719'       QUERY CHARACTER DIRN\nQQGSQPAT EQU   X'0C0C071A'       QUERY PATTERN\nQQGSQMS  EQU   X'0C0C071B'       QUERY MARKER SYMBOL\nQQGSQCH  EQU   X'0C0C071C'       QUERY CHARACTER SHEAR\nQQGSMSC  EQU   X'0C0C071D'       SET MARKER SCALE\nQQGSQMSC EQU   X'0C0C071E'       QUERY MARKER SCALE\nQQGSPUT  EQU   X'0C0C0900'       INCLUDE GDF\nQQGSIMG  EQU   X'0C0C0A00'       LIMITED IMAGE\nQQGSIMGS EQU   X'0C0C0A04'       LIMITED IMAGE (SCALED)\nQQGSGETS EQU   X'0C0C0B00'       RETRIEVE GDF\nQQGSGETE EQU   X'0C0C0B01'       END GDF RETRIEVAL\nQQGSGET  EQU   X'0C0C0B02'       GET GDF BUFFER\nQQGSILOC EQU   X'0C0C0C00'       INITIALIZE LOCATOR\nQQGSIPIK EQU   X'0C0C0C01'       INITIALIZE PICK DEVICE\nQQGSIDVI EQU   X'0C0C0C04'       INITIALIZE DATA VALUE\nQQGSIDVF EQU   X'0C0C0C05'       INITIALIZE DATA VALUE\nQQGSISTR EQU   X'0C0C0C06'       INIT. STRING DEVICE\nQQGSISTK EQU   X'0C0C0C07'       INIT. STROKE DEVICE\nQQGSQLID EQU   X'0C0C0C09'       QUERY INPUT DEVICE\nQQGSENAB EQU   X'0C0C0D00'       ENABLE INPUT DEVICE\nQQGSFLSH EQU   X'0C0C0E00'       FLUSH INPUT QUEUE\nQQGSQSIM EQU   X'0C0C0E01'       QUERY INPUT QUEUE\nQQGSQCHO EQU   X'0C0C0F00'       QUERY CHOICE DATA\nQQGSQLOC EQU   X'0C0C0F01'       QUERY LOCATOR DATA\nQQGSQPIK EQU   X'0C0C0F02'       QUERY PICK DATA\nQQGSQSTR EQU   X'0C0C0F03'       QUERY STRING DATA\nQQGSQSTK EQU   X'0C0C0F04'       QUERY STROKE DATA\nQQGSQPKS EQU   X'0C0C0F05'       QUERY PICK STRUCTURE\nQQGSTAG  EQU   X'0C0C1000'       SET THE CURRENT TAG\nQQGSQTAG EQU   X'0C0C1001'       QUERY THE CURRENT TAG\nQQGSSAGA EQU   X'0C0C1102'       SET GEOM ATTRIBUTES\nQQGSSTFM EQU   X'0C0C1103'       SET SEGMENT TRANSFORM\nQQGSQAGA EQU   X'0C0C1104'       QUERY GEOM ATTRIBUTES\nQQGSQTFM EQU   X'0C0C1105'       QUERY SEGMENT TRANSFM\nQQGSSCT  EQU   X'0C0C1107'       SET CURRENT TRANSFORM\nQQGSSAVE EQU   X'0C0C1200'       SAVE SEGMENT\nQQGSLOAD EQU   X'0C0C1201'       LOAD SEGMENT\nQQGSMB   EQU   X'0C0C1307'       SET MARKER BOX\nQQGSQMB  EQU   X'0C0C1308'       QUERY MARKER BOX\nQQGSTA   EQU   X'0C0C130D'       SET TEXT ALIGNMENT\nQQGSQTA  EQU   X'0C0C130E'       QUERY TEXT ALIGNMENT\nQQGSCBS  EQU   X'0C0C130F'       SET CHARACTER SPACING\nQQGSQCBS EQU   X'0C0C1310'       QUERY CHARACTER SPACIN\nQQGSAM   EQU   X'0C0C1311'       SET ATTRIBUTE MODE\nQQGSQAM  EQU   X'0C0C1312'       QUERY ATTRIBUTE MODE\nQQGSPOP  EQU   X'0C0C1313'       RESTORE ATTRIBUTES\nQQGSSVL  EQU   X'0C0C1314'       SET SEGMENT VIEW LIMIT\nQQGSQSVL EQU   X'0C0C1315'       QUERY SEG VIEW LIMITS\nQQGSQBMX EQU   X'0C0C1316'       QUERY BACKGROUND MIX\nQQGSBMIX EQU   X'0C0C1317'       SET BACKGROUND MIX\nQQGSCP   EQU   X'0C0C1319'       SET CURRENT POSITION\nQQGSSCPY EQU   X'0C0C1400'       COPY SEGMENT\nQQGSSINC EQU   X'0C0C1401'       INCLUDE SEGMENT\nQQGSCALL EQU   X'0C0C1402'       CALL A SEGMENT\nQQGSCORR EQU   X'0C0C1500'       EXPLICIT CORRELATE\nQQGSCORS EQU   X'0C0C1501'       STRUCTURE CORRELATION\nQQGSDEFS EQU   X'0C0C1900'       START DRAWING DEFAULTS\nQQGSDEFE EQU   X'0C0C1901'       END DRAWING DEFAULTS\nQQFSUPDM EQU   X'0C0C1A00'       SET UPDATE MODE\nQQFSQUPD EQU   X'0C0C1A01'       QUERY UPDATE MODE\nQQGSSEN  EQU   X'0C0C1B00'       SET MIXED STRING MODE\nQQGSQSEN EQU   X'0C0C1B01'       QUERY MIX STRING MODE\nQQCGLOAD EQU   X'0C0C1F00'       LOAD CGM\nQQCGSAVE EQU   X'0C0C2000'       SAVE CGM\n* GROUP - ADMMCQDD\nQQASREAD EQU   X'0C100000'       READ\nQQFSFRCE EQU   X'0C100001'       FORCE OUTPUT\nQQFSCHEK EQU   X'0C100002'       PREPARE PS FOR OUTPUT\nQQGSREAD EQU   X'0C100003'       AWAIT GRAPHICS INPUT\nQQFSSAVE EQU   X'0C100004'       SAVE SCREEN\nQQFSSHOW EQU   X'0C100005'       SHOW SCREEN\nQQFSSHOR EQU   X'0C100007'       SHOW WITH REPLY\nQQWSIO   EQU   X'0C100008'       WINDOWED DEVICE I/O\nQQFSGETS EQU   X'0C100009'       FAM-4 BUFFER START\nQQFSGET  EQU   X'0C10000A'       FAM-4 OUTPUT TO BUFFER\nQQFSGETE EQU   X'0C10000B'       FSGET TERMINATE\nQQDSFRCE EQU   X'0C10000C'       FAM-4 MEMBER TO PDS\n* GROUP - ADMMCQDO\nQQFSOPEN EQU   X'0C180000'       OPEN PRINTER DESTINTN\nQQFSCOPY EQU   X'0C180001'       PAGE COPY\nQQGSCOPY EQU   X'0C180002'       GRAPHICS COPY\nQQFSLOG  EQU   X'0C180003'       LINE-BY-LINE OUTPUT\nQQFSCLS  EQU   X'0C180004'       CLOSE PRINTER DESTINTN\nQQFSLOGC EQU   X'0C180005'       LINE-BY-LINE O/P + CC\nQQDSCOPY EQU   X'0C180008'       DEVICE COPY\n* GROUP - ADMMCQDB\nQQPTSCRT EQU   X'0C200000'       CREATE PTN SET.\nQQPTSQRY EQU   X'0C200001'       QUERY PTN SET.\nQQPTSSEL EQU   X'0C200100'       SELECT PTN SET.\nQQPTSDEL EQU   X'0C200101'       DELETE PTN SET.\nQQPTSQUN EQU   X'0C200102'       Q. UNIQUE PTN SET ID.\nQQPTSSPP EQU   X'0C200300'       SET PARTN. PRIORITIES\nQQPTSQPP EQU   X'0C200301'       QUERY PTN PRIORITIES\nQQPTSQPI EQU   X'0C200400'       QUERY PARTITION IDS\nQQPTSQPN EQU   X'0C200401'       QUERY PARTITION NOS\n* GROUP - ADMMCQDE\nQQPTNCRT EQU   X'0C240000'       CREATE PARTITION.\nQQPTNQRY EQU   X'0C240001'       QUERY PARTITION.\nQQPTNMOD EQU   X'0C240002'       MODIFY PARTITION.\nQQPTNSEL EQU   X'0C240100'       SELECT PARTITION.\nQQPTNDEL EQU   X'0C240101'       DELETE PARTITION.\nQQPTNQUN EQU   X'0C240102'       Q. UNIQUE PTN ID.\n* GROUP - ADMMCQDM\nQQMSREAD EQU   X'0C280000'       READ WITH MAP\nQQMSPCRT EQU   X'0C280100'       CREATE MAPPED PAGE\nQQMSQGRP EQU   X'0C280300'       QUERY ABOUT A GROUP\nQQMSQMAP EQU   X'0C280301'       QUERY ABOUT A MAP\nQQMSQADS EQU   X'0C280302'       QUERY ABOUT AN ADS\nQQMSQFIT EQU   X'0C280303'       QUERY WHETHER MAP FITS\nQQMSQMOD EQU   X'0C280400'       QUERY MODIFIED M-FLDS\nQQMSDFLD EQU   X'0C280500'       DEFINE MAPPED-FIELD\nQQMSPUT  EQU   X'0C280501'       PUT MAPPED-FIELD DATA\nQQMSGET  EQU   X'0C280502'       GET MAPPED-FIELD DATA\nQQMSQFLD EQU   X'0C280503'       QUERY MAPPED-FIELD\nQQMSCPOS EQU   X'0C280600'       SET CURSOR POSITION\nQQMSQPOS EQU   X'0C280601'       QUERY CURSOR POSITION\n* GROUP - ADMMCQDN\nQQWSCRT  EQU   X'0C2C0000'       CREATE OPERATOR WINDOW\nQQWSDEL  EQU   X'0C2C0100'       DELETE OPERATOR WINDOW\nQQWSMOD  EQU   X'0C2C0200'       MODIFY OPERATOR WINDOW\nQQWSQRY  EQU   X'0C2C0300'       QUERY OPERATOR WINDOW\nQQWSQUN  EQU   X'0C2C0400'       QUERY OP WINDOW ID\nQQWSQWI  EQU   X'0C2C0500'       QUERY OP WINDOW IDS\nQQWSQWN  EQU   X'0C2C0600'       QUERY OP WINDOW NOS\nQQWSQWP  EQU   X'0C2C0700'       QUERY WIN PRIORITIES\nQQWSSEL  EQU   X'0C2C0800'       SELECT OPERATOR WINDOW\nQQWSSWP  EQU   X'0C2C0900'       SET WINDOW PRIORITIES\n* GROUP - ADMMCQD3\nQQISFLD  EQU   X'0C300000'       DEFINE IMAGE FIELD\nQQISQFLD EQU   X'0C300001'       QUERY IMAGE FIELD\nQQISCTL  EQU   X'0C300002'       SET IMAGE QUALITY CTRL\nQQISXCTL EQU   X'0C300003'       EXT IMAGE QUALITY CTRL\nQQISESCA EQU   X'0C300B00'       ECHO SCANNER\nQQISLDE  EQU   X'0C300C00'       LOAD EXT. R/O IMAGE\nQQISQSCA EQU   X'0C300D00'       QRY IMAGE SCANNER DEV.\nQQISQRES EQU   X'0C300E00'       QRY SUPPORTED RES\nQQISENAB EQU   X'0C301200'       IMAGE CSR ENAB/DISAB\nQQISQLOC EQU   X'0C301300'       QRY IMAGE LOCATOR CSR\nQQISILOC EQU   X'0C301400'       IMAGE LOC. CSR. INIT\nQQISQBOX EQU   X'0C301500'       IMAGE BOX CSR. QUERY\nQQISIBOX EQU   X'0C301600'       IMAGE BOX CSR. INIT\nQQISQFOR EQU   X'0C301700'       QUERY IMAGE FORMATS\nQQISQCOM EQU   X'0C301800'       QUERY IMAGE COMPRESSNS\n* GROUP - ADMMCQDQ\nQQAPDEF  EQU   X'0C380000'       DEFINE FIELD LIST\nQQAPDEL  EQU   X'0C380100'       DELETE FIELD LIST\nQQAPMOD  EQU   X'0C380200'       MODIFY FIELD LIST\nQQAPQIDS EQU   X'0C380300'       QUERY FIELD LIST IDS\nQQAPQNUM EQU   X'0C380400'       QUERY FIELD LIST NOS\nQQAPQRY  EQU   X'0C380500'       QUERY FIELD LIST\nQQAPQSIZ EQU   X'0C380600'       QUERY FIELD LIST SIZE\nQQAPQUID EQU   X'0C380700'       QUERY UNIQUE FL ID\n* GROUP - ADMMCQB\nQQCHLC   EQU   X'10020307'       LINE COLORS\n* GROUP - ADMMCQIS\nQQISSE   EQU   X'18000000'       INVOKE SYMBOL EDITOR\n* GROUP - ADMMCQ3I\nQQIMACRT EQU   X'3C010001'       CREATE AN IMAGE\nQQIMAGID EQU   X'3C010002'       GET UNIQUE IMAGE ID\nQQIMAQRY EQU   X'3C010004'       QUERY IMAGE ATTRIBUTES\nQQIMARES EQU   X'3C010006'       CONVERT RESOLUTION\nQQIMADEL EQU   X'3C010007'       DELETE SPECIFIED IMAGE\nQQIMACLR EQU   X'3C010008'       CLEAR IMAGE RECTANGLE\nQQIMATRM EQU   X'3C010009'       TRIM IMAGE TO RECTANGL\nQQIMASAV EQU   X'3C01000A'       SAVE IMAGE IN LIBRARY\nQQIMARST EQU   X'3C01000B'       RESTORE IMAGE\nQQIMARF  EQU   X'3C01000C'       CHANGE RESOLUTION FLAG\nQQIMAPTS EQU   X'3C010011'       START DATA ENTRY\nQQIMAPT  EQU   X'3C010012'       ENTER DATA IN IMAGE\nQQIMAPTE EQU   X'3C010013'       END DATA ENTRY\nQQIMAGTS EQU   X'3C010014'       START DATA RETRIEVAL\nQQIMAGT  EQU   X'3C010015'       GET IMAGE DATA\nQQIMAGTE EQU   X'3C010016'       END DATA RETRIEVAL\nQQIMXFER EQU   X'3C010017'       IMAGE DATA TRANSFER\n* GROUP - ADMMCQ3P\nQQIMPGID EQU   X'3C030001'       GET UNIQUE PROJ ID\nQQIMPCRT EQU   X'3C030003'       CREATE A PROJECTION\nQQIMPDEL EQU   X'3C030004'       DELETE SPECIFIED PROJ\nQQIMPSAV EQU   X'3C030005'       SAVE IMAGE PROJECTION\nQQIMPRST EQU   X'3C030006'       RESTORE PROJECTION\nQQIMREX  EQU   X'3C030101'       DEFINE IMAGE RECTANGLE\nQQIMREXR EQU   X'3C030102'       DEFINE IMAGE RECTANGLE\nQQIMRPL  EQU   X'3C030103'       DEFINE PLACE POSITION\nQQIMRSCL EQU   X'3C030105'       SCALE IMAGE RECTANGLE\nQQIMRRAL EQU   X'3C030106'       SET SCALING ALGORITHM\nQQIMRORN EQU   X'3C030107'       ORIENTATE SUB-IMAGE\nQQIMRREF EQU   X'3C030108'       REFLRCT SUB-IMAGE\nQQIMRNEG EQU   X'3C030109'       NEGATE IMAGE PIXELS\nQQIMRCVB EQU   X'3C030201'       BI-LEVEL CONVERSION\nQQIMRBRI EQU   X'3C030202'       BRIGHTNESS CONVERSION\nQQIMRCON EQU   X'3C030203'       CONTRAST CONVERSION\nQQIMRPLR EQU   X'3C030204'       DEFINE PLACE POSITION\n* GROUP - ADMMCQ4\nQQCDPU   EQU   X'40000000'       COMP DOC PRINT UTIL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IBMMAC": {"ttr": 787, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01$\\x00D\\x01\\x05$O\\x01\\t&\\x8f\\x16\\x19\\x01\\x0e\\x00'\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.36", "flags": 0, "createdate": "2005-09-01T00:00:00", "modifydate": "2009-09-25T16:19:44", "lines": 270, "newlines": 39, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         IBMMAC &ACB=,                                                 +\n               &ACEE=,                                                 +\n               &ASCB=,                                                 +\n               &ASXB=,                                                 +\n               &CDE=,                                                  +\n               &CSI=,                                                  +\n               &CVT=,                                                  +\n               &DCBD=,                                                 +\n               &DCBE=,                                                 +\n               &DEB=,                                                  +\n               &DECB=,                                                 +\n               &DES=,                                                  +\n               &EXLST=,                                                +\n               &IOB=,                                                  +\n               &JFCB=,                                                 +\n               &PMAR=,                                                 +\n               &PSA=,                                                  +\n               &RB=,                                                   +\n               &RPL=,                                                  +\n               &S99=,                                                  +\n               &SDWA=,                                                 +\n               &SMDE=,                                                 +\n               &TCB=,                                                  +\n               &TIOT=,                                                 +\n               &UCB=,                                                  +\n               &VTOC=,                                                 +\n               &DUMMY=\n         LCLC  &LIST\n&LIST    SETC  'NO'\n         AIF   (T'&ACB EQ 'O').ACEE000\n         AIF   ('&ACB' EQ 'NO').ACEE000\n         AIF   ('&ACB' EQ 'VSAM').ACB0010\n         AIF   ('&ACB' EQ 'VTAM').ACB0010\n         MNOTE 12,'INVALID -ACB- OPTION'\n         AGO   .MEXIT\n.ACB0010 ANOP\n         IFGACB AM=&ACB\n.ACEE000 ANOP\n         AIF   (T'&ACEE EQ 'O').ASCB000\n         AIF   ('&ACEE' EQ 'NO').ASCB000\n         AIF   ('&ACEE' EQ 'YES').ACEE010\n         MNOTE 12,'INVALID -ACEE- OPTION'\n         AGO   .MEXIT\n.ACEE010 ANOP\n         IHAACEE\n.ASCB000 ANOP\n         AIF   (T'&ASCB EQ 'O').ASXB000\n         AIF   ('&ASCB' EQ 'NO').ASXB000\n         AIF   ('&ASCB' EQ 'LIST').ASCB010\n         AIF   ('&ASCB' EQ 'YES').ASCB020\n         MNOTE 12,'INVALID -ASCB- OPTION'\n         AGO   .MEXIT\n.ASCB010 ANOP\n&LIST    SETC  'YES'\n.ASCB020 ANOP\n         IHAASCB DSECT=YES,LIST=&LIST\n.ASXB000 ANOP\n         AIF   (T'&ASXB EQ 'O').CDE0000\n         AIF   ('&ASXB' EQ 'NO').CDE0000\n         AIF   ('&ASXB' EQ 'LIST').ASXB010\n         AIF   ('&ASXB' EQ 'YES').ASXB020\n         MNOTE 12,'INVALID -ASXB- OPTION'\n         AGO   .MEXIT\n.ASXB010 ANOP\n&LIST    SETC  'YES'\n.ASXB020 ANOP\n         IHAASXB DSECT=YES,LIST=&LIST\n.CDE0000 ANOP\n         AIF   (T'&CDE EQ 'O').CSI0000\n         AIF   ('&CDE' EQ 'NO').CSI0000\n         AIF   ('&CDE' EQ 'YES').CDE0010\n         MNOTE 12,'INVALID -CDE- OPTION'\n         AGO   .MEXIT\n.CDE0010 ANOP\n         IHACDE\n.CSI0000 ANOP\n         AIF   (T'&CSI EQ 'O').CVT0000\n         AIF   ('&CSI' EQ 'NO').CVT0000\n         AIF   ('&CSI' EQ 'YES').CSI0010\n         MNOTE 12,'INVALID -CSI- OPTION'\n         AGO   .MEXIT\n.CSI0010 ANOP\n         COPY  IGGCSINA\n.CVT0000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&CVT EQ 'O').DCB0000\n         AIF   ('&CVT' EQ 'NO').DCBB000\n         AIF   ('&CVT' EQ 'LIST').CVT0010\n         AIF   ('&CVT' EQ 'YES').CVT0020\n         MNOTE 12,'INVALID -CVT- OPTION'\n         AGO   .MEXIT\n.CVT0010 ANOP\n&LIST    SETC  'YES'\n.CVT0020 ANOP\n         CVT   DSECT=YES,LIST=&LIST\n.DCB0000 ANOP\n         AIF   (T'&DCBD EQ 'O').DCBE000\n         AIF   ('&DCBD' EQ 'NO').DCBE000\n         AIF   ('&DCBD' EQ 'PO').DCB0010\n         AIF   ('&DCBD' EQ 'PS').DCB0020\n         MNOTE 12,'INVALID -DCB- OPTION'\n         AGO   .MEXIT\n.DCB0010 ANOP\n         DCBD  DSORG=PO,DEVD=DA\n         AGO   .DCBE000\n.DCB0020 ANOP\n         DCBD  DSORG=PS,DEVD=DA\n.DCBE000 ANOP\n         AIF   (T'&DCBE EQ 'O').DEB0000\n         AIF   ('&DCBE' EQ 'NO').DEB000\n         AIF   ('&DCBE' EQ 'YES').DCBE010\n         MNOTE 12,'INVALID -DCBE- OPTION'\n         AGO   .MEXIT\n.DCBE010 ANOP\n         IHADCBE\n.DEB0000 ANOP\n         AIF   (T'&DEB EQ 'O').DECB000\n         AIF   ('&DEB' EQ 'NO').DECB000\n         AIF   ('&DEB' EQ 'YES').DEB0010\n         MNOTE 12,'INVALID -DEB- OPTION'\n         AGO   .MEXIT\n.DEB0010 ANOP\n         IEZDEB LIST=NO\n.DECB000 ANOP\n         AIF   (T'&DECB EQ 'O').DES0000\n         AIF   ('&DECB' EQ 'NO').DES0000\n         AIF   ('&DECB' EQ 'YES').DECB010\n         MNOTE 12,'INVALID -DECB- OPTION'\n         AGO   .MEXIT\n.DECB010 ANOP\n         IHADECB DSECT=YES\n.DES0000 ANOP\n         AIF   (T'&DES EQ 'O').EXLST00\n         AIF   ('&DES' EQ 'NO').EXLST00\n         AIF   ('&DES' EQ 'YES').DES0010\n         MNOTE 12,'INVALID -DES- OPTION'\n         AGO   .MEXIT\n.DES0010 ANOP\n         IGWDES\n.EXLST00 ANOP\n         AIF   (T'&EXLST EQ 'O').IOB0000\n         AIF   ('&EXLST' EQ 'NO').IOB0000\n         AIF   ('&EXLST' EQ 'VSAM').EXLST10\n         AIF   ('&EXLST' EQ 'VTAM').EXLST10\n         MNOTE 12,'INVALID -EXLST- OPTION'\n         AGO   .MEXIT\n.EXLST10 ANOP\n         IFGEXLST AM=&EXLST\n.IOB0000 ANOP\n         AIF   (T'&IOB EQ 'O').JFCB000\n         AIF   ('&IOB' EQ 'NO').JFCB000\n         AIF   ('&IOB' EQ 'YES').IOB0010\n         MNOTE 12,'INVALID -IOB- OPTION'\n         AGO   .MEXIT\n.IOB0010 ANOP\n         IEZIOB DSECT=YES\n.JFCB000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&JFCB EQ 'O').PMAR000\n         AIF   ('&JFCB' EQ 'NO').PMAR000\n         AIF   ('&JFCB' EQ 'YES').JFCB020\n         AIF   ('&JFCB' EQ 'LIST').JFCB010\n         MNOTE 12,'INVALID -JFCB- OPTION'\n         AGO   .MEXIT\n.JFCB010 ANOP\n&LIST    SETC  'YES'\n.JFCB020 ANOP\nJFCB     DS    0C\n         IEFJFCBN LIST=&LIST\n.PMAR000 ANOP\n         AIF   (T'&PMAR EQ 'O').PSA0000\n         AIF   ('&PMAR' EQ 'NO').PSA0000\n         AIF   ('&PMAR' EQ 'YES').PMAR010\n         MNOTE 12,'INVALID -PMAR- OPTION'\n         AGO   .MEXIT\n.PMAR010 ANOP\n         IEWPMAR DSECT=YES\n.PSA0000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&PSA EQ 'O').RB0000\n         AIF   ('&PSA' EQ 'NO').RB0000\n         AIF   ('&PSA' EQ 'LIST').PSA0010\n         AIF   ('&PSA' EQ 'YES').PSA0020\n         MNOTE 12,'INVALID -PSA- OPTION'\n         AGO   .MEXIT\n.PSA0010 ANOP\n&LIST    SETC  'YES'\n.PSA0020 ANOP\n         IHAPSA DSECT=YES,LIST=&LIST\n.RB0000  ANOP\n         AIF   (T'&RB EQ 'O').RPL0000\n         AIF   ('&RB' EQ 'NO').RPL0000\n         AIF   ('&RB' EQ 'YES').RB0010\n         MNOTE 12,'INVALID -RB- OPTION'\n         AGO   .MEXIT\n.RB0010  ANOP\n         IHARB\n.RPL0000 ANOP\n         AIF   (T'&RPL EQ 'O').S990000\n         AIF   ('&RPL' EQ 'NO').S990000\n         AIF   ('&RPL' EQ 'VSAM').RPL0010\n         AIF   ('&RPL' EQ 'VTAM').RPL0010\n         MNOTE 12,'INVLAID -RPL- OPTION'\n         AGO   .MEXIT\n.RPL0010 ANOP\n         IFGRPL AM=&RPL\n.S990000 ANOP\n         AIF   (T'&S99 EQ 'O').SDWA000\n         AIF   ('&S99' EQ 'NO').SDWA000\n         IEFZB4D0\n         IEFZB4D2\n.SDWA000 ANOP\n         AIF   (T'&SDWA EQ 'O').SMDE000\n         AIF   ('&SDWA' EQ 'NO').SMDE000\n         AIF   ('&SDWA' EQ 'YES').SDWA010\n         AIF   ('&SDWA' EQ 'VRA').SDWA020\n         MNOTE 12,'INVALID -SDWA- OPTION'\n         AGO   .MEXIT\n.SDWA010 ANOP\n         IHASDWA VRAMAP=NO\n         AGO   .TCB0000\n.SDWA020 ANOP\n         IHASDWA VRAMAP=YES\n.SMDE000 ANOP\n         AIF   (T'&SMDE EQ 'O').TCB0000\n         AIF   ('&SMDE' EQ 'NO').TCB0000\n         AIF   ('&SMDE' EQ 'YES').SMDE010\n         MNOTE 12,'INVALID -SMDE- OPTION'\n         AGO   .MEXIT\n.SMDE010 ANOP\n         IGWSMDE\n.TCB0000 ANOP\n&LIST    SETC  'NO'\n         AIF   (T'&TCB EQ 'O').TIOT000\n         AIF   ('&TCB' EQ 'NO').TIOT000\n         AIF   ('&TCB' EQ 'LIST').TCB0010\n         AIF   ('&TCB' EQ 'YES').TCB0020\n         MNOTE 12,'INVALID -TCB- OPTION'\n         AGO   .MEXIT\n.TCB0010 ANOP\n&LIST    SETC  'YES'\n.TCB0020 ANOP\n         IKJTCB DSECT=YES,LIST=&LIST\n.TIOT000 ANOP\n         AIF   (T'&TIOT EQ 'O').UCB0000\n         AIF   ('&TIOT' EQ 'NO').UCB0000\n         AIF   ('&TIOT' EQ 'YES').TIOT010\n         MNOTE 12,'INVALID -TIOT- OPTION'\n         AGO   .MEXIT\n.TIOT010 ANOP\nTIOT     DSECT\n         IEFTIOT1\n.UCB0000 ANOP\n         AIF   (T'&UCB EQ 'O').VTOC000\n         AIF   ('&UCB' EQ 'NO').VTOC000\n         AIF   ('&UCB' EQ 'PREFIX').UCB0010\n         AIF   ('&UCB' EQ 'YES').UCB0020\n         MNOTE 12,'INVALID -UCB- OPTION'\n         AGO   .MEXIT\n.UCB0010 ANOP\n         IEFUCBOB PREFIX=YES,LIST=NO\n         AGO   .VTOC000\n.UCB0020 ANOP\n         IEFUCBOB LIST=NO\n.VTOC000 ANOP\n         AIF   (T'&VTOC EQ 'O').MEXIT\n         IECSDSL1 &VTOC\n.MEXIT   ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IDRBDATA": {"ttr": 34, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x05\\x01\\x08\\x12o\\x01\\x08\\x12o\\x10#\\x00\\t\\x00\\t\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2008-05-05T00:00:00", "modifydate": "2008-05-05T10:23:05", "lines": 9, "newlines": 9, "modlines": 0, "user": "RLRICE"}, "text": "IDRB_DATA               DS    0C\nIDRB_BINDER_ID          DS    CL10\nIDRB_VERSION            DS    CL2\nIDRB_RELEASE            DS    CL2\nIDRB_DATE_BOUND         DS    CL7\nIDRB_TIME_BOUND         DS    CL6\nIDRB_MODULE_SIZE        DS    F\nIDRB_CALLERID           DS    CL60\nIDRB_DATA_L             EQU   *-IDRB_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IDRLDATA": {"ttr": 36, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x08\\x12\\x7f\\x01\\x08\\x12\\x7f\\x08\\x01\\x00\\x08\\x00\\x08\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2008-05-06T00:00:00", "modifydate": "2008-05-06T08:01:48", "lines": 8, "newlines": 8, "modlines": 0, "user": "RLRICE"}, "text": "LMOD_IDRL_DATA          DS    0C\nLMOD_IDRL_PID_ID        DS    CL10\nLMOD_IDRL_VERSION       DS    CL2\nLMOD_IDRL_LEVEL         DS    CL2\nLMOD_IDRL_DATE_PROCESSED DS   CL7\nLMOD_IDRL_TIME_BOUND    DS    CL6\nLMOD_IDRL_RESIDENT      DS    CL60\nLMOD_IDRL_DATA_L        EQU   *-LMOD_IDRL_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IDRZDATA": {"ttr": 38, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x08\\x12\\x7f\\x01\\x08\\x12\\x7f\\x13\\x18\\x00\\x05\\x00\\x05\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2008-05-06T00:00:00", "modifydate": "2008-05-06T13:18:56", "lines": 5, "newlines": 5, "modlines": 0, "user": "RLRICE"}, "text": "LMOD_IDRZ_DATA          DS    0C\nLMOD_IDRZ_DATE          DS    CL7\nLMOD_IDRZ_ZAP_DATA      DS    CL8\nLMOD_IDRZ_RESIDENT      DS    CL60\nLMOD_IDRZ_DATA_L        EQU   *-LMOD_IDRZ_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ITRACE": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00B\\x01\\x05$O\\x01\\t#/\\x14V\\x00^\\x00G\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2005-09-01T00:00:00", "modifydate": "2009-08-20T14:56:42", "lines": 94, "newlines": 71, "modlines": 0, "user": "RLRICE"}, "text": ".* ------------------------------------------------------------------*\n.*                                                                   *\n.*                        TRACE MACRO                                *\n.*                                                                   *\n.*       The trace function always captures the last three bytes of  *\n.*       the active task's TCB address and bytes 3-7 of the active   *\n.*       CSECT's name, and a trace ID.                               *\n.*                                                                   *\n.*       One or two data elements (8 bytes each) may be captured at  *\n.*       any trace point.  The data to be captured may be specified  *\n.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *\n.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *\n.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *\n.*       captured, RDATA1 and RDATA2 specify a register whose        *\n.*       contents are to be captured.                                *\n.*                                                                   *\n.*       For example:                                                *\n.*                                                                   *\n.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *\n.*                                                                   *\n.*          In this case the trace entry would include the TCB       *\n.*          address, CSECT name, ID \"POINTA\", 8 bytes of data        *\n.*          beginning at value1's address and the contents of        *\n.*          register 4.                                              *\n.*                                                                   *\n.* ------------------------------------------------------------------*\n         MACRO\n&NAME    ITRACE &X,&ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=\n         LCLA  &L\n         AIF   (T'&X NE 'O').ERR0030\n         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010\n         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020\n         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT\n         AIF   (T'&DATA1 EQ 'O').DATA030\n         AIF   ('&DATA1'(1,1) EQ '(').DATA010\n         LA    R14,&DATA1                   DATA ADDRESS\n         MVC   COMM_TRACE_ITEM_1,0(R14)     MOVE DATA\n         AGO   .DATA040\n.DATA010 ANOP\n         AIF   (N'&DATA1 EQ 1).DATA020\n&L       SETA  &DATA1(2)\n         AIF   (&L GT 8).ERR0040\n         MVC   COMM_TRACE_ITEM_1(&L),&DATA1(1)\n         AGO   .DATA040\n.DATA020 ANOP\n         MVC   COMM_TRACE_ITEM_1,0&DATA1    MOVE DATA\n         AGO   .DATA040\n.DATA030 ANOP\n         AIF   (T'&RDATA1 EQ 'O').DATA040\n         STCM  &RDATA1,15,COMM_TRACE_ITEM_1 SAVE REGISTER CONTENTS\n.DATA040 ANOP\n         AIF   (T'&DATA2 EQ 'O').DATA070\n         AIF   ('&DATA2'(1,1) EQ '(').DATA050\n         LA    R14,&DATA2                   DATA ADDRESS\n         MVC   COMM_TRACE_ITEM_2,0(R14)     MOVE DATA\n         AGO   .DATA080\n.DATA050 ANOP\n         AIF   (N'&DATA2 EQ 1).DATA060\n&L       SETA  &DATA2(2)\n         AIF   (&L GT 8).ERR0050\n         MVC   COMM_TRACE_ITEM_2(&L),&DATA2(1)\n         AGO   .DATA080\n.DATA060 ANOP\n         MVC   COMM_TRACE_ITEM_2,0&DATA2    MOVE DATA\n         AGO   .DATA080\n.DATA070 ANOP\n         AIF   (T'&RDATA2 EQ 'O').DATA080\n         STCM  &RDATA2,15,COMM_TRACE_ITEM_2 SAVE REGISTER CONTENTS\n.DATA080 ANOP\n         BAL   R14,TRACE000                 ENTER TRACE ROUTINE\n         AIF      (T'&ID EQ 'O').NOID\n&NAME    DC    CL8'&ID'                     TRACE ID\n         AGO   .ID\n.NOID    ANOP\n&NAME    DC    CL8'**NOID**'\n.ID      ANOP\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.ERR0030 ANOP\n         MNOTE 4,'POSITIONAL PARM FOUND'\n         MEXIT\n.ERR0040 ANOP\n         MNOTE 12,'LENGTH FOR ITEM 1 MUST BE 8 OR LESS'\n         MEXIT\n.ERR0050 ANOP\n         MNOTE 12,'LENGTH FOR ITEM 2 MUST BE 8 OR LESS'\n.MEXIT   ANOP\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KEYDEF": {"ttr": 40, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x19\\x01\\x05$\\x9f\\x01\\x05%/\\x13)\\x00\\x11\\x00\\x07\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2005-09-06T00:00:00", "modifydate": "2005-09-09T13:29:19", "lines": 17, "newlines": 7, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         KEYDEF    &KW,&LINK\n         LCLA      &LEN\n         AIF  (T'&KW EQ 'O').NOKW\n         AIF  (T'&LINK EQ 'O').NOLINK\n&LEN          SETA K'&KW-2\n              DC   CL8&KW\n              DC   AL2(&LEN)\n              DC   AL4(&LINK)\n         MEXIT\n.NOKW    ANOP\n         MNOTE 12,'KEYWORD OPERAND OMITTED'\n         MEXIT\n.NOLINK  ANOP\n         MNOTE 12,'LINK OPERAND OMITTED'\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LANGREQ": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00G\\x01\\x05%o\\x01\\x06 \\x9f\\x13U\\x00\\x1a\\x00\\x15\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2005-09-13T00:00:00", "modifydate": "2006-07-28T13:55:47", "lines": 26, "newlines": 21, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        National language                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         LANGREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nLANGREQ         DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nLANGREQ         DSECT\n.LBL0020 ANOP\nLANG_FUNC       DS     X           FUNCTION\n$LANG_NBR       EQU    X'01'       .. RETURN NUMBER OF LANGUAGES\n$LANG_LIST      EQU    X'02'       .. RETURN LIST OF LANGUAGES\n$LANG_LOOKUP    EQU    X'03'       .. LOOKUP A LANGUAGE\nLANG_RC         DS     X           FUNCTION\n$LANG_OK        EQU    X'00'       .. SUCCESSFUL\n$LANG_NO_OPTS   EQU    X'01'       .. OPTIONS FILE NOT AVAILABLE\n$LANG_UNKNOWN   EQU    X'02'       .. LANGUAGE NOT FOUND (ON LOOKUP)\nLANG_NAME       DS     CL8         NAME OF NATIONAL LANGUAGE\nLANG_MODULE     DS     CL8         MODULE NAME\nLANG_NBR        DS     F           NUMBER OF LANGUAGES\nLANG_LIST       DS     A           LIST OF NAMES\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOADREQ": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01\\x06\\x18\\x0f\\x01\\x06#O\\x14Y\\x00\\x17\\x00\\x19\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2006-06-29T00:00:00", "modifydate": "2006-08-22T14:59:44", "lines": 23, "newlines": 25, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         LOADREQ &DSECT=YES\n         AIF     ('&DSECT' EQ 'YES').LBL0010\nLOADREQ          DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nLOADREQ          DSECT\n.LBL0020 ANOP\nLOADREQ_FUNC     DS     X           FUNCTION\n$LOADREQ_LOAD    EQU    X'01'       .. LOAD SPECIFIED MODULE\n$LOADREQ_DELETE  EQU    X'02'       .. DELETE SPECIFIED MODULE\n$LOADREQ_CLEANUP EQU    X'03'       .. DELETE ALL MODULES\nLOADREQ_RC       DS     X           STATUS\n$LOADREQ_OK      EQU    X'00'       .. SUCCESSFUL\n$LOADREQ_ERROR   EQU    X'FF'       .. FAILED\nLOADREQ_MODULE   DS     CL8         MODULE TO LOAD OR DELETE\nLOADREQ_EP       DS     XL4         MODULE ENTRY POINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MAPDATA": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x01\\x08\\x12o\\x01\\x08\\x12o\\x15W\\x00\\n\\x00\\n\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2008-05-05T00:00:00", "modifydate": "2008-05-05T15:57:03", "lines": 10, "newlines": 10, "modlines": 0, "user": "RLRICE"}, "text": "LMOD_MAP_DATA           DS    0C\nLMOD_MAP_NEXT           DS    XL4\nLMOD_MAP_TYPE           DS    C\nLMOD_MAP_FLAGS          DS    X\nLMOD_MAP_NAME           DS    CL60\nLMOD_MAP_OFFSET         DS    XL4\nLMOD_MAP_QUANTITY       DS    XL4\nLMOD_MAP_NAME_SPACE     DS    X\nLMOD_MAP_RECFM          DS    XL2\nLMOD_MAP_DATA_L         EQU   *-LMOD_MAP_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "META": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x004\\x01\\x061\\x1f\\x01\\t$o\\x107\\x00\\x11\\x00\\x10\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2006-11-07T00:00:00", "modifydate": "2009-09-03T10:37:34", "lines": 17, "newlines": 16, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Meta lines are lines like \"Top of data\" and \"rule\".             *\n*     Some commands are not allowed on meta data lines.               *\n*     For example the \"Top of data\" line may not be deleted.          *\n*     The \"Before\" line command is not allowed on \"Top of line\".      *\n*                                                                     *\n*     The meta data line control info is in EDCOMM at label           *\n*     EDCOMM_META_LINES.                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMETA           DSECT\nMETA_ID        DS    X                    IDENTIFIER\nMETA_NBR_CMDS  DS    XL2                  NUMBER OF ALLOWABLE CMDS\nMETA_CMDS      DS    CL7                  LIST OF ALLOWABLE CMDS\nMETA_L         EQU   *-META\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "METADEF": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00Y\\x01\\x061\\x1f\\x01\\t$o\\x10Q\\x00\\x1d\\x00\\x1c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2006-11-07T00:00:00", "modifydate": "2009-09-03T10:51:59", "lines": 29, "newlines": 28, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         METADEF &ID,&CMDS\n         GBLB  &METADEF\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*    Define META data lines (top of data, rule,etc)                  *\n.*                                                                    *\n.*    First parameter is the internal ID of the meta data.            *\n.*    All IDs are defined by equates generated the first time         *\n.*    METADEF is invoked.                                             *\n.*                                                                    *\n.*    The second parameter is a list of commands valid on this        *\n.*    meta data line.  For an example, the only valid commands on     *\n.*    the 'top of data' line is \"after\" and \"insert\".                 *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n                      AIF   (&METADEF).NODEF\n&METADEF              SETB  1\n$META_TOP_OF_DATA     EQU   1\n$META_RULE            EQU   2\n$META_BOTTOM_OF_DATA  EQU   3\n.NODEF                ANOP\n                      LCLA  &NBR\n&NBR                  SETA  K'&CMDS\n                      DC    AL1(&ID)\n                      DC    AL2(&NBR)\n                      DC    CL7'&CMDS'\n                      MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSG": {"ttr": 263, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00@\\x01\\x05%\\x1f\\x01\\x083\\x1f\\x11\"\\x00 \\x00\\x15\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2005-09-08T00:00:00", "modifydate": "2008-11-26T11:22:40", "lines": 32, "newlines": 21, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*             MAP THE MESSAGE CSECT                                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG                         DSECT\nMSG_CSECT                   DS   CL8\nMSG_CSECT_LENGTH            DS   AL4\n\nMSG_CSECT_MSG               DS   0C\nMSG_ID                      DS   XL2        MESSAGE ID\nMSG_LENGTH                  DS   AL4        LENGTH OF ALL COMPONENTS\nMSG_LINES                   DS   AL2        NUMBER OF LINES\n\nMSG_COMPONENTS              DS   0C\n\nMSG_COMPONENT               DS   0C\nMSG_COMPONENT_LENGTH        DS   XL2        LENGTH OF THIS DESCRIPTOR\nMSG_COMPONENT_TYPE          DS   X          TYPE\n$MSG_COMPONENT_ADDRESS      EQU  C'A'       .. ADDRESS\n$MSG_COMPONENT_CHAR         EQU  C'C'       .. CHARACTER\n$MSG_COMPONENT_CONSTANT     EQU  C'T'       .. CONSTANT TEXT\n$MSG_COMPONENT_HALFWORD     EQU  C'H'       .. HALFWORD\n$MSG_COMPONENT_FULLWORD     EQU  C'F'       .. FULLWORD\n$MSG_COMPONENT_HEX          EQU  C'X'       .. HEX\nMSG_COMPONENT_OUTPUT_LENGTH DS   XL2        LENGTH IN OUTPUT MESSAGE\nMSG_COMPONENT_DISP          DS   XL2        DISPLACMENT IN COMM AREA\nMSG_COMPONENT_AREA          DS   C          'C' FOR COMM, 'S' FOR SESS\nMSG_COMPONENT_LINE          DS   X          MESSAGE LINE NUMBER\nMSG_COMPONENT_CONSTANT      DS   0C         PRESENT FOR CONSTANT TEXT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGCOMP": {"ttr": 265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00U\\x01\\x05%\\x1f\\x01\\t\\x06?\\tP\\x00o\\x009\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2005-09-08T00:00:00", "modifydate": "2009-03-04T09:50:55", "lines": 111, "newlines": 57, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         MSGCOMP &LINE,&TYPE,&LENGTH,&LBL\n         LCLC   &PREFIX\n         GBLA   &GMAXL\n&PREFIX  SETC   '&LBL'(1,4)\n         AIF    ('&TYPE' EQ 'ADDR').ADDR000\n         AIF    ('&TYPE' EQ 'CHAR').CHAR000\n         AIF    ('&TYPE' EQ 'CONSTANT').CONST00\n         AIF    ('&TYPE' EQ 'HALFWORD').HALF000\n         AIF    ('&TYPE' EQ 'HEX').HEX0000\n         AIF    ('&TYPE' EQ 'FULLWORD').FULL000\n         MNOTE  12,'INVALID -TYPE-'\n         MEXIT\n.ADDR000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_ADDRESS)   COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').ADDR010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .ADDR020\n.ADDR010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.ADDR020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.*\n.CHAR000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_CHAR)      COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').CHAR010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .CHAR020\n.CHAR010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.CHAR020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.CONST00 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(C&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_CONSTANT)  COMPONENT TYPE\n         DC     AL2(C&SYSNDX-B&SYSNDX)        LENGTH IN OUTPUT MESSAGE\n         DC     AL2(0)                        NOT IN COMM AREA\n         DC     C' '\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         DC     C&LBL\nC&SYSNDX EQU    *\n         AGO    .MAXL00\n\n.HALF000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_HALFWORD)  COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').HALF010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .HALF020\n.HALF010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.HALF020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.HEX0000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_HEX)       COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').HEX0010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO COMM AREA\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .HEX0020\n.HEX0010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.HEX0020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n         AGO    .MAXL00\n.FULL000 ANOP\nA&SYSNDX EQU    *\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS DESCRIPTOR\n         DC     AL1($MSG_COMPONENT_FULLWORD)  COMPONENT TYPE\n         DC     AL2(&LENGTH)                  LENGTH IN OUTPUT MESSAGE\n         AIF    ('&PREFIX' EQ 'SESS').FULL010\n         DC     AL2(&LBL-OSCOMM)              DISP INTO OSCOMM\n         DC     C'C'                          FIELD IS IN COMM AREA\n         AGO    .FULL020\n.FULL010 ANOP\n         DC     AL2(&LBL-SESSION)             DISP INTO SESSION AREA\n         DC     C'S'                          FIELD IS IN SESSION AREA\n.FULL020 ANOP\n         DC     AL1(&LINE)                    MESSAGE LINE\nB&SYSNDX EQU    *\n.MAXL00  ANOP\n         AIF    (&GMAXL GE &LINE).MEXIT\n&GMAXL   SETA   &LINE\n.MEXIT   ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGDEF": {"ttr": 269, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x007\\x01\\x05%\\x1f\\x01\\x05%_\\t5\\x00\\x10\\x00\\r\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-09-08T00:00:00", "modifydate": "2005-09-12T09:35:37", "lines": 16, "newlines": 13, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         MSGDEF &MSG,&LINES\n         GBLA   &GMSG,&GMAXL\n         AIF    ('&MSG' EQ 'END').END\n&GMSG    SETA   &SYSNDX\n&GMAXL   SETA   0\nA&GMSG   EQU    *\n         DC     AL2(&MSG)                 MESSAGE ID\n         DC     AL4(B&GMSG-A&GMSG)        LENGTH OF ALL COMPONENTS\n         DC     AL2(M&GMSG)               NUMBER OF OUTPUT LINES\n         MEXIT\n.END     ANOP\n         DC     X'FF'\nM&GMSG   EQU    &GMAXL\nB&GMSG   EQU    *\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OFFLDREQ": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x002\\x01\\x05'/\\x01\\x10\\x01\\x8f\\x14 \\x00\\x17\\x00\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.06", "flags": 0, "createdate": "2005-09-29T00:00:00", "modifydate": "2010-01-18T14:20:32", "lines": 23, "newlines": 24, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        OFFLOAD  parameters                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         OFFLDREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nOFFLDREQ        DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nOFFLDREQ        DSECT\n.LBL0020 ANOP\nOFFLDREQ_FUNC   DS     X           FUNCTION\n$OFFLDREQ_OPEN  EQU    X'01'       .. OPEN OUTPUT\n$OFFLDREQ_WRITE EQU    X'02'       .. WRITE GIVEN DATA SET/MEMBER\n$OFFLDREQ_CLOSE EQU    X'03'       .. CLOSE OUTPUT\nOFFLDREQ_MEMBER DS     CL8         MEMBER NAME\nOFFLDREQ_DDNAME DS     CL8         DD NAME\nOFFLDREQ_DCB    DS     A           DCB ADDRESS\nOFFLDREQ_IO     DS     A           I/O AREA\nOFFLDREQ_COUNT  DS     F           NUMBER OF MEMBERS OFFLOADED\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OFIELD": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x01\\t'\\x9f\\x01\\t1o\\x15\\x12\\x01Y\\x01S\\x01Y\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-10-06T00:00:00", "modifydate": "2009-11-12T15:12:00", "lines": 345, "newlines": 339, "modlines": 345, "user": "RLRICE"}, "text": "         MACRO\n         FIELD &NAME,&TYPE,&LENGTH,&FLDDESC,                           +\n               &BASE=,                                                 +\n               &PNS=,                                                  +\n               &TABLE=,                                                +\n               &BIT1=,                                                 +\n               &BIT2=,                                                 +\n               &BIT3=,                                                 +\n               &BIT4=,                                                 +\n               &BIT5=,                                                 +\n               &BIT6=,                                                 +\n               &BIT7=,                                                 +\n               &BIT8=,                                                 +\n               &VALUE1=,                                               +\n               &VALUE2=,                                               +\n               &VALUE3=,                                               +\n               &VALUE4=,                                               +\n               &VALUE5=,                                               +\n               &VALUE6=,                                               +\n               &VALUE7=,                                               +\n               &VALUE8=,                                               +\n               &EXIT=\n         GBLC  &PREVFLD\n         GBLC  &B\n         LCLA  &BITS,&VALUES,&ERRORS\n         LCLA  &TESTS\n         LCLC  &TTYPE\n         LCLC  &PNSLINK\n         LCLC  &TEST(8),&DESC(8)\n         AIF   (T'&BASE NE 'O').GEN0100\n&BITS    SETA  0\n&VALUES  SETA  0\n&ERRORS  SETA  0\n&TTYPE   SETC  '0'\n.*\n.*\n.*\n         AIF   (T'&BIT1 EQ 'O').INIT010\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT1 EQ 2).INIT010\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT1'\n.*\n.*\n.*\n.INIT010 ANOP\n         AIF   (T'&BIT2 EQ 'O').INIT020\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT2 EQ 2).INIT020\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT2'\n.*\n.*\n.*\n.INIT020 ANOP\n         AIF   (T'&BIT3 EQ 'O').INIT030\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT3 EQ 2).INIT030\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT3'\n.*\n.*\n.*\n.INIT030 ANOP\n         AIF   (T'&BIT4 EQ 'O').INIT040\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT4 EQ 2).INIT040\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT4'\n.*\n.*\n.*\n.INIT040 ANOP\n         AIF   (T'&BIT5 EQ 'O').INIT050\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT5 EQ 2).INIT050\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT5'\n.*\n.*\n.*\n.INIT050 ANOP\n         AIF   (T'&BIT6 EQ 'O').INIT060\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT6 EQ 2).INIT060\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT6'\n.*\n.*\n.*\n.INIT060 ANOP\n         AIF   (T'&BIT7 EQ 'O').INIT070\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT7 EQ 2).INIT070\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT7'\n.*\n.*\n.*\n.INIT070 ANOP\n         AIF   (T'&BIT8 EQ 'O').INIT080\n&BITS    SETA  &BITS+1\n         AIF   (N'&BIT8 EQ 2).INIT080\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR BIT8'\n.*\n.*\n.*\n.INIT080 ANOP\n         AIF   (T'&VALUE1 EQ 'O').INIT090\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE1 EQ 2).INIT090\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE1'\n.*\n.*\n.*\n.INIT090 ANOP\n         AIF   (T'&VALUE2 EQ 'O').INIT100\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE2 EQ 2).INIT100\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE2'\n.*\n.*\n.*\n.INIT100 ANOP\n         AIF   (T'&VALUE3 EQ 'O').INIT110\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE3 EQ 2).INIT110\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE3'\n.*\n.*\n.*\n.INIT110 ANOP\n         AIF   (T'&VALUE4 EQ 'O').INIT120\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE4 EQ 2).INIT120\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE4'\n.*\n.*\n.*\n.INIT120 ANOP\n         AIF   (T'&VALUE5 EQ 'O').INIT130\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE5 EQ 2).INIT130\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE5'\n.*\n.*\n.*\n.INIT130 ANOP\n         AIF   (T'&VALUE6 EQ 'O').INIT140\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE6 EQ 2).INIT140\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE6'\n.*\n.*\n.*\n.INIT140 ANOP\n         AIF   (T'&VALUE7 EQ 'O').INIT150\n&VALUES  SETA  &VALUES+1\n         AIF   (N'&VALUE7 EQ 2).INIT150\n&ERRORS  SETA  &ERRORS+1\n         MNOTE 8,'INVALID VALUE FOR VALUE7'\n.*\n.*\n.*\n.INIT150 ANOP\n         AIF    (&ERRORS GT 0).MEXIT\n         AIF    (&BITS   GT 0 AND &VALUES GT 0).ERR0010\n         AIF    (&BITS   GT 0 AND T'&EXIT NE 'O').ERR0020\n         AIF    (&VALUES GT 0 AND T'&EXIT NE 'O').ERR0030\n&TESTS   SETA   0\n         AIF    (&BITS   EQ 0).INIT230\n&TTYPE   SETC   '$FIELD_BIT'\n         AIF    (T'&BIT1 EQ 'O').INIT160\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT1(1)'\n&DESC(&TESTS) SETC '&BIT1(2)'\n.INIT160 ANOP\n         AIF    (T'&BIT2 EQ 'O').INIT170\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT2(1)'\n&DESC(&TESTS) SETC '&BIT2(2)'\n.INIT170 ANOP\n         AIF    (T'&BIT3 EQ 'O').INIT180\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT3(1)'\n&DESC(&TESTS) SETC '&BIT3(2)'\n.INIT180 ANOP\n         AIF    (T'&BIT4 EQ 'O').INIT190\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT4(1)'\n&DESC(&TESTS) SETC '&BIT4(2)'\n.INIT190 ANOP\n         AIF    (T'&BIT5 EQ 'O').INIT200\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT5(1)'\n&DESC(&TESTS) SETC '&BIT5(2)'\n.INIT200 ANOP\n         AIF    (T'&BIT6 EQ 'O').INIT210\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT6(1)'\n&DESC(&TESTS) SETC '&BIT6(2)'\n.INIT210 ANOP\n         AIF    (T'&BIT7 EQ 'O').INIT220\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT7(1)'\n&DESC(&TESTS) SETC '&BIT7(2)'\n.INIT220 ANOP\n         AIF    (T'&BIT8 EQ 'O').GEN0000\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&BIT8(1)'\n&DESC(&TESTS) SETC '&BIT8(2)'\n         AGO    .GEN0000\n.INIT230 ANOP\n         AIF    (&VALUES EQ 0).INIT310\n&TTYPE   SETC   '$FIELD_VALUE'\n         AIF    (T'&VALUE1 EQ 'O').INIT240\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE1(1)'\n&DESC(&TESTS) SETC '&VALUE1(2)'\n.INIT240 ANOP\n         AIF    (T'&VALUE2 EQ 'O').INIT250\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE2(1)'\n&DESC(&TESTS) SETC '&VALUE2(2)'\n.INIT250 ANOP\n         AIF    (T'&VALUE3 EQ 'O').INIT260\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE3(1)'\n&DESC(&TESTS) SETC '&VALUE3(2)'\n.INIT260 ANOP\n         AIF    (T'&VALUE4 EQ 'O').INIT270\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE4(1)'\n&DESC(&TESTS) SETC '&VALUE4(2)'\n.INIT270 ANOP\n         AIF    (T'&VALUE5 EQ 'O').INIT280\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE5(1)'\n&DESC(&TESTS) SETC '&VALUE5(2)'\n.INIT280 ANOP\n         AIF    (T'&VALUE6 EQ 'O').INIT290\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE6(1)'\n&DESC(&TESTS) SETC '&VALUE6(2)'\n.INIT290 ANOP\n         AIF    (T'&VALUE7 EQ 'O').INIT300\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE7(1)'\n&DESC(&TESTS) SETC '&VALUE7(2)'\n.INIT300 ANOP\n         AIF    (T'&VALUE8 EQ 'O').GEN0000\n&TESTS   SETA   &TESTS+1\n&TEST(&TESTS) SETC '&VALUE8(1)'\n&DESC(&TESTS) SETC '&VALUE8(2)'\n         AGO    .GEN0000\n.INIT310 ANOP\n         AIF    (T'&EXIT EQ 'O').GEN0000\n&TTYPE   SETC   '$FIELD_EXIT'\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.GEN0000 ANOP\nA&SYSNDX DS     0C\nFLD&SYSNDX  DS  0C\n         DC     CL8'&NAME'                    FIELD NAME\n         DC     AL2(B&SYSNDX-A&SYSNDX)        LENGTH OF THIS ENTRY\n         DC     CL50&FLDDESC                  DESCRIPTION\n         AIF    (T'&PREVFLD EQ 'O').GEN0010\n         DC     AL4(&PREVFLD)                 PREVIOUS FIELD\n         AGO    .GEN0020\n.GEN0010 ANOP\n         DC     AL4(0)                        PREVIOUS FIELD\n.GEN0020 ANOP\n&PREVFLD SETC   'FLD&SYSNDX'                  SET FOR NEXT FIELD\n         DC     AL2(&NAME-&B)                 DISPLACMENT TO FIELD\n         DC     CL1'&TYPE'                    FIELD TYPE\n         DC     AL1(&LENGTH)                  FIELD LENGTH\n         AIF    (T'&PNS EQ 'O').GEN0030\n         DC     VL4(&PNS)                     POINT-AND-SHOOT\n         AGO    .GEN0040\n.GEN0030 ANOP\n         DC     AL4(0)                        NOT A POINT-AND-SHOOT\n.GEN0040 ANOP\n         AIF    (T'&TABLE EQ 'O').GEN0050\n         DC     VL4(&TABLE)                   FORMATTING TABLE\n         AGO    .GEN0060\n.GEN0050 ANOP\n         DC     AL4(0)                        NO FORMATTING TABLE\n.GEN0060 ANOP\n         DC     AL1(&TTYPE)                   TEST TYPE\n         AIF    ('&TTYPE' EQ '$FIELD_EXIT').GEN0080\n         DC     AL1(&TESTS)                   NUMBER OF TESTS\n         AIF    ('&TTYPE' EQ '0').GEN0090\n&INDX    SETA   1\n.GEN0070 ANOP\n         DC     CL8'&TEST(&INDX)'             BIT NAME\n         DC     AL01(&TEST(&INDX).)           TEST VALUE\n         DC     CL40&DESC(&INDX)              DESCRIPTION\n         AIF    (&INDX EQ &TESTS).GEN0090\n&INDX    SETA   &INDX+1\n         AGO    .GEN0070\n.GEN0080 ANOP\n         DC     VL4(&EXIT)                    EXIT ADDR\n.GEN0090 ANOP\nB&SYSNDX DS     0C\n         AGO    .MEXIT\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.GEN0100 ANOP\n&B       SETC   '&BASE'\n         AGO    .MEXIT\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.ERR0010 ANOP\n         MNOTE 8,'BIT FLAGS AND VALUES ARE MUTUALLY EXCLUSIVE'\n         AGO    .MEXIT\n.ERR0020 ANOP\n         MNOTE 8,'BIT FLAGS AND EXIT ARE MUTUALLY EXCLUSIVE'\n         AGO    .MEXIT\n.ERR0030 ANOP\n         MNOTE 8,'VALUES AND EXIT ARE MUTUALLY EXCLUSIVE'\n         AGO    .MEXIT\n         AGO    .MEXIT\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.MEXIT   ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPCODE": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00P\\x01\\t4/\\x01\\x10\\x00_\\x087\\x00\\xa8\\x00\\x9e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-12-08T00:00:00", "modifydate": "2010-01-05T08:37:50", "lines": 168, "newlines": 158, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*    DEFINE OPCODES                                                  *\n.*      MACH    OPCODE IN MACHINE HEX                                 *\n.*      MNEM    MNEMONIC FOR THE INSTRUCTION                          *\n.*      LENGTH  LENGTH OF INSTRUCTION                                 *\n.*      COMMENT ANY COMMENT (PRINTED IN COMMENT AREA OF GENNED SOURCE)*\n.*      FLAGS                                                         *\n.*                - OPCODE_EXT    USE EXTENDED NMEMONIC IF AVAILABLE  *\n.*                - OPCODE_SVC    THIS INSTRUCTION IS AN SVC          *\n.*                - OPCODE_REF    THIS INSTRUCTION CAUSES REFERENCE(S)*\n.*                - OPCODE_CCA    SETS \"ARITHMETIC\" CONDITION CODE    *\n.*                - OPCODE_CC     SETS \"COMPARE\" CONDITION CODE       *\n.*                - OPCODE_CCL    SETS \"LOGICAL\" CONDITION CODE       *\n.*                - OPCODE_BRANCH THIS IS A \"BRANCHING\" INSTRUCTION   *\n.*      REGS    REGISTER CONSTRAINTS                                  *\n.*                - OPCODE_1EVEN  R1 MUST BE EVEN NUMBER              *\n.*                - OPCODE_104    R1 MUST BE 0 OR 4                   *\n.*                - OPCODE_10246  R1 MUST BE 0, 2, 4, OR 6            *\n.*                - OPCODE_2EVEN  R2 MUST BE EVEN NUMBER              *\n.*                - OPCODE_204    R2 MUST BE 0 OR 4                   *\n.*                - OPCODE_20246  R2 MUST BE 0, 2, 4, OR 6            *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n         OPCODE &MACH,                                                 +\n               &MNEM,                                                  +\n               &FORMAT,                                                +\n               &LENGTH,                                                +\n               &COMMENT,                                               +\n               &FLAGS=,                                                +\n               &REGS=,                                                 +\n               &REF=,                                                  +\n               &EXIT=,                                                 +\n               &TYPE=DEFINE\n         GBLB &OPSW\n         GBLC &OPTBL(256),&HEXTBL(16)\n         LCLA &SUB1,&SUB2,&SUB3\n         LCLC &OP1,&OP2,&OPTS\n         AIF  (&OPSW).LBL020\n&OPSW    SETB 1\n&SUB1    SETA 1\n.LBL010  ANOP\n&OPTBL(&SUB1) SETC '0'\n&SUB1    SETA &SUB1+1\n         AIF  (&SUB1 LE 256).LBL010\n&HEXTBL(01) SETC '0'\n&HEXTBL(02) SETC '1'\n&HEXTBL(03) SETC '2'\n&HEXTBL(04) SETC '3'\n&HEXTBL(05) SETC '4'\n&HEXTBL(06) SETC '5'\n&HEXTBL(07) SETC '6'\n&HEXTBL(08) SETC '7'\n&HEXTBL(09) SETC '8'\n&HEXTBL(10) SETC '9'\n&HEXTBL(11) SETC 'A'\n&HEXTBL(12) SETC 'B'\n&HEXTBL(13) SETC 'C'\n&HEXTBL(14) SETC 'D'\n&HEXTBL(15) SETC 'E'\n&HEXTBL(16) SETC 'F'\n.LBL020  ANOP\n         AIF  ('&TYPE' EQ 'INDEX').LBL150\n         AIF  ('&TYPE' NE 'DEFINE').ERR70\n         AIF  (T'&MACH EQ 'O').ERR010\n         AIF  (K'&MACH NE 2).ERR020\n         AIF  (T'&LENGTH EQ 'O').ERR080\n         AIF  (&LENGTH EQ 2).LBL030\n         AIF  (&LENGTH EQ 4).LBL030\n         AIF  (&LENGTH NE 6).ERR090\n.LBL030  ANOP\n         AIF  (K'&MNEM GT 5).ERR100\n&OP1     SETC '&MACH'(1,1)\n&OP2     SETC '&MACH'(2,1)\n&SUB1    SETA 1\n.LBL040  ANOP\n         AIF  ('&OP1' EQ '&HEXTBL(&SUB1)').LBL050\n         AIF  (&SUB1 EQ 16).ERR030\n&SUB1    SETA &SUB1+1\n         AGO  .LBL040\n.LBL050  ANOP\n&SUB2    SETA &SUB1\n&SUB1    SETA 1\n.LBL060  ANOP\n         AIF  ('&OP2' EQ '&HEXTBL(&SUB1)').LBL070\n         AIF  (&SUB1 EQ 16).ERR030\n&SUB1    SETA &SUB1+1\n         AGO  .LBL060\n.LBL070  ANOP\n&SUB3    SETA &SUB1\n&SUB1    SETA (16*(&SUB2-1))+&SUB3\n&OPTBL(&SUB1) SETC 'MACH&MACH'\n         AIF  (T'&MNEM EQ 'O').ERR050\n         AIF  (T'&FORMAT EQ 'O').ERR060\nMACH&MACH DC   CL2'&MACH'           MACHINE CODE FOR THIS INSTRUCTION\n          DC   CL05'&MNEM'          MNEMONIC\n          DC   AL2(&LENGTH)         INSTRUCTION LENGTH\n          AIF  (T'&EXIT EQ 'O').LBL080\n          DC   VL4(&EXIT)           MODIFICATION EXIT ENTRY POINT\n          AGO  .LBL090\n.LBL080   ANOP\n          DC   AL4(0)               NO MODIFICATION EXIT\n.LBL090   ANOP\n          DC   AL1(&FORMAT)         FORMAT CODE\n&OPTS    SETC '0'\n         AIF  (T'&FLAGS EQ 'O').LBL100\n&OPTS    SETC '&FLAGS'\n.LBL100  ANOP\n         AIF  (T'&COMMENT EQ 'O').LBL110\n          DC   AL1(&OPTS)           FLAGS\n         AGO   .LBL120\n.LBL110  ANOP\n          DC   AL1(&OPTS+$OPCODE_NO_COMMENT)\n.LBL120  ANOP\n         AIF   (T'&REGS EQ 'O').LBL130\n          DC    AL1(&REGS)\n         AGO   .LBL140\n.LBL130  ANOP\n          DC    AL1(0)              NO REGISTER REQUIREMENTS\n.LBL140  ANOP\n         AIF   (T'&REF EQ 'O').LBL14A\n          DC    AL1(&REF)           BASE + DISPLACEMENT OPERANDS\n         AGO   .LBL14B\n.LBL14A  ANOP\n          DC    AL1(0)              NO BASE + DISPLACMENT OPERANDS\n.LBL14B  ANOP\n         AIF   (T'&COMMENT EQ 'O').EXIT\n          DC   CL25&COMMENT         COMMENT\n         MEXIT\n.LBL150  ANOP\n&SUB1    SETA 1\n.LBL160  ANOP\n         DC    A(&OPTBL(&SUB1))\n         AIF   (&SUB1 EQ 256).EXIT\n&SUB1    SETA  &SUB1+1\n         AGO   .LBL160\n.ERR010  ANOP\n         MNOTE 12,'MACHINE CODE IS REQUIRED'\n         MEXIT\n.ERR020  ANOP\n         MNOTE 12,'MACHINE CODE MUST BE 2 CHARACTERS'\n         MEXIT\n.ERR030  ANOP\n         MNOTE 12,'MACHINE CODE CONTAINS INVALID HEX CHARACTER'\n         MEXIT\n.ERR050  ANOP\n         MNOTE 12,'MNEMONIC IS REQUIRED'\n         MEXIT\n.ERR060  ANOP\n         MNOTE 12,'INSTRUCTION FORMAT IS REQUIRED'\n         MEXIT\n.ERR070  ANOP\n         MNOTE 12,'INVALID TYPE PARAMETER'\n         MEXIT\n.ERR080  ANOP\n         MNOTE 12,'LENGTH IS REQUIRED'\n         MEXIT\n.ERR090  ANOP\n         MNOTE 12,'LENGTH MUST BE 2, 4, OR 6'\n         MEXIT\n.ERR100  ANOP\n         MNOTE 12,'MNEMONIC IS MORE THAN 5 CHARACTERS LONG'\n.EXIT    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OPERAND": {"ttr": 271, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00P\\x01\\x06&\\x8f\\x01\\x06&\\x8f\\tB\\x00\\n\\x00\\x05\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2006-09-25T00:00:00", "modifydate": "2006-09-25T09:42:50", "lines": 10, "newlines": 5, "modlines": 0, "user": "RLRICE"}, "text": "OPERAND               DSECT\nOPERAND_ADDRESS       DS   XL4\nOPERAND_LENGTH        DS   XL2\nOPERAND_TYPE          DS   X\n$OPERAND_PRESENT      EQU  X'80'\n$OPERAND_NUMERIC      EQU  X'40'\n$OPERAND_KEYWORD      EQU  X'20'\n$OPERAND_HEX          EQU  X'10'\n$OPERAND_QUOTED       EQU  X'08'\nOPERAND_L             EQU  *-OPERAND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OSSPFD": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00S\\x01\\t(o\\x01\\x10\\x01?\\x147\\x00|\\x00\\x82\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-13T14:37:53", "lines": 124, "newlines": 130, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         OSSPFD   &TYPE=\n         AIF   ('&TYPE' EQ 'CSECT').CSECT\n         AIF   ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE 12,'INVALID TYPE'\n         MEXIT\n.CSECT   ANOP\nOSSPFD                 CSECT\nOSSPFD                 AMODE 31\nOSSPFD                 RMODE ANY\n         AGO   .COMM\n.DSECT   ANOP\nOSSPFD                 DSECT\n.COMM    ANOP\n                       DC    CL8'OSSPFD'\n                       DC    CL8'&SYSDATE'\n                       DC    CL8'&SYSTIME'\nSPF_LVLINE             DC    F'0'       LAST VISIBLE LINE\nSPF_VWIDTH             DC    F'0'       DYNAMIC AREA WIDTH\nSPF_VDEPTH             DC    F'0'       DYNAMIC AREA DEPTH\nSPF_ROW                DC    F'0'       CURSOR ROW AFTER DISPLAY\nSPF_COLUMN             DC    F'0'       CURSOR COLUMN AFTER DISPLAY\nSPF_ZSCROLLN           DC    F'0'       NUMBER OF LINES TO SCROLL\nSPF_CURSOR_POSITION    DC    F'0'       CURSOR POSITION FOR DISPLAY\nSPF_VTYPE              DC    CL8' '     DYNAMIC AREA TYPE\nSPF_ZSCROLLA           DC    CL8' '     SCROLL AMOUNT\nSPF_ZVERB              DC    CL8' '     SPF VERB\nSPF_RFIND              DC    CL8' '     RFIND COMMAND ACTION\nSPF_ZCMD               DC    CL80' '    SPF COMMAND AREA\nSPF_ZSCREENC           DC    CL5' '     CURSOR POSITION (AFTER DISPLAY)\nSPF_VSCR               DC    CL4'CSR'   ONLY USED IF SPF NOT AVAILABLE\nSPF_ASCII              DC    CL5' '     ASCII ON/OFF\nSPF_CAPS               DC    CL3'OFF'   CAPS (EDIT) ON OR OFF\nSPF_TAGGED             DC    CL10' '    SHOW TAGGED/NOT TAGGED\n\nSPF_FUNCTION           DC    C' '       MENU FUNCTION(S)\n\nSPF_DSN                DC    CL44' '    DATA SET NAME\nSPF_DD                 DC    CL8' '     DD NAME\nSPF_MEMBER             DC    CL8' '     MEMBER NAME\nSPF_CSECT              DC    CL8' '     CSECT (LMOD) FUNCTIONS\nSPF_UNIT               DC    CL8' '     UNIT NAME\nSPF_RECORD_FROM        DC    CL9' '     FIRST RECORD (RECORD FROM)\nSPF_RECORD_TO          DC    CL9' '     LAST RECORD (RECORD TO)\nSPF_RECORD_OF          DC    CL9' '     MAX RECORD NUMBER\nSPF_COLUMN_FROM        DC    CL5' '     FIRST COLUNM (COLUMN FROM)\nSPF_COLUMN_TO          DC    CL5' '     LAST COLUNM (COLUMN TO)\nSPF_COLUMN_OF          DC    CL5' '     MAX COLUMN NUMBER\nSPF_VOLSER             DC    CL6' '     VOLUME SERIAL\nSPF_DSORG              DC    CL4' '     DATA SET ORGANIZAION\nSPF_RECFM              DC    CL3' '     RECORD FORMAT\nSPF_OUTPUT_RECFM       DC    CL3' '     RECORD FORMAT\nSPF_LRECL              DC    CL5' '     LOGICAL RECORD LENGTH (LRECL)\nSPF_OUTPUT_LRECL       DC    CL5' '     LOGICAL RECORD LENGTH (LRECL)\nSPF_BLOCK_SIZE         DC    CL5' '     BLOCK SIZE\nSPF_KEY_LENGTH         DC    CL5' '     KEY LENGTH\nSPF_RKP                DC    CL5' '     KEY POSITION\nSPF_FORMAT             DC    CL8' '     FORMAT NAME\nSPF_YES_OR_NO          DC    CL3' '     CONFIRMATION YES OR NO\nSPF_AREA               DC    CL8' '     AREA NAME (DISPLAY STORAGE)\nSPF_ADDRESS            DC    CL8' '     AREA ADDRESS (DISPLAY STORAGE)\nSPF_LENGTH             DC    CL8' '     AREA LENGTH (DISPLAY STORAGE)\nSPF_SPACE_ASID         DC    CL4' '     SPACE ASID  (DISPLAY STORAGE)\nSPF_SPACE_ALET         DC    CL8' '     SPACE ALET  (DISPLAY STORAGE)\nSPF_SPACE_NAME         DC    CL8' '     SPACE NAME  (DISPLAY STORAGE)\nSPF_DDID               DC    CL8' '     DATA ID (RETURNED BY LMINIT)\n\n\nSPF_FLAGS              DC    X'00'      FLAGS/SWITCHES\n$SPF_VPUT              EQU   X'80'      .. VPUT HAS BEEN ISSUED\n\nSPF_NEW_DSN            DC    CL44' '    NEW DATA SET NAME (RENAMES)\nSPF_NEW_MEMBER         DC    CL8' '     NEW MEMBER NAME (RENAMES)\nSPF_OUTPUT_DSN         DC    CL44' '    OUTPUT DATA SET NAME\nSPF_OUTPUT_MEMBER      DC    CL8' '     OUTPUT MEMBER NAME\nSPF_OUTPUT_DISP        DC    CL3' '     OUTPUT DISP\nSPF_OUTPUT_VOLSER      DC    CL6' '     OUTPUT VOLSER (NEW ONLY)\nSPF_OUTPUT_UNIT        DC    CL8' '     OUTPUT UNIT (SYSDA, ETC)\nSPF_VSAM_TYPE          DC    CL4' '     VSAM TYPE (KSDS, RRDS, ETC)\nSPF_OUTPUT_SPACE_PRI   DC    CL5' '     NEW ALLOCATION PRIMARY QTY\nSPF_OUTPUT_SPACE_SEC   DC    CL5' '     NEW ALLOCATION SECONDARY QTY\nSPF_SMF_DESC           DC    CL50' '    SMF RECORD DESCRIPTION\nSPF_CONFIG_DSN         DC    CL44' '    OUTPUT DATA SET NAME\nSPF_CONFIG_DESC        DC    CL62' '    CONFIG DESCRIPTION\nSPF_CONFIG_MEMBER      DC    CL8' '     OUTPUT MEMBER NAME\nSPF_CONFIG_VOLSER      DC    CL6' '     OUTPUT DATA SET VOLSER\nSPF_PREFIX             DC    CL4' '     LABEL PREFIX\n\nSPF_PATH               DC    CL256' '   PATH\nSPF_PATH_LENGTH        DC    CL5' '     PATH LENGTH\nSPF_REAL_PATH          DC    CL256' '   REAL PATH\nSPF_REAL_PATH_LENGTH   DC    CL5' '     REAL PATH LENGTH\nSPF_OUTPUT_PATH        DC    CL256' '   OUTPUT PATH\n\nSPF_FROM_KEY           DC    CL40' '    FROM KEY (VSAM KSDS)\nSPF_TO_KEY             DC    CL40' '    TO KEY (VSAM KSDS)\nSPF_RBA                DC    CL10' '    RBA VSAM\nSPF_FIRST_RECORD       DC    CL10' '    FIRST RECORD FOR VIEWING\nSPF_RECORDS            DC    CL10' '    RECORDS TO READ\n\nSPF_SEPARATOR_1        DC    CL72' '    LEADING SEPARATOR FOR APPEND\nSPF_SEPARATOR_2        DC    CL72' '\nSPF_SEPARATOR_3        DC    CL72' '\n\nSPF_SEPARATOR_4        DC    CL72' '    TRAILING SEPARATOR FOR APPEND\nSPF_SEPARATOR_5        DC    CL72' '\nSPF_SEPARATOR_6        DC    CL72' '\n\nSPF_CB_NAME            DC    CL8' '     CONTROL BLOCK NAME\nSPF_CB_DESCRIPTION     DC    CL40' '    CONTROL BLOCK DESCRIPTION\n\nSPF_REGISTER           DC    CL03' '    BASE REGISTER\nSPF_LABEL1             DC    CL63' '    LABEL 1\nSPF_LABEL2             DC    CL63' '    LABEL 2\nSPF_BEGIN              DC    CL08' '    BEGIN DISP\nSPF_END                DC    CL08' '    END DISP\n\n\nSPF_MSG_1              DC    CL80' '\nSPF_MSG_2              DC    CL80' '\nSPF_MSG_3              DC    CL80' '\nSPF_MSG_4              DC    CL80' '\nSPF_MSG_5              DC    CL80' '\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PARMSREQ": {"ttr": 273, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Y\\x01\\x06 \\x1f\\x01\\x06 \\x9f\\x13\\x10\\x00\\x0e\\x00\\x13\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2006-07-20T00:00:00", "modifydate": "2006-07-28T13:10:59", "lines": 14, "newlines": 19, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PARMSREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nPARMSREQ        DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nPARMSREQ        DSECT\n.LBL0020 ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PARSEREQ": {"ttr": 275, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x007\\x01\\x05%_\\x01\\x063\\x1f\\x160\\x00\\x12\\x00\\x13\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2005-09-12T00:00:00", "modifydate": "2006-11-27T16:30:37", "lines": 18, "newlines": 19, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PARSEREQ &DSECT=YES\n                     AIF   ('&DSECT' EQ 'YES').LBL0010\nPARSEREQ             DS   0A\n                     AGO   .LBL0020\n.LBL0010             ANOP\nPARSEREQ             DSECT\n.LBL0020             ANOP\nPARSE_COMMAND        DS   A           COMMAND TO BE PARSED\nPARSE_OPERANDS       DS   A           OUTPUT AREA ADDRESS\nPARSE_LENGTH         DS   H           COMMAND TO BE PARSED\nPARSE_OPERANDS_NBR   DS   H           NUMBER OF OPERANDS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PCXHDR": {"ttr": 277, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x061\\x8f\\x01\\x061\\x8f\\x16\\x05\\x00.\\x00.\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-11-14T00:00:00", "modifydate": "2006-11-14T16:05:15", "lines": 46, "newlines": 46, "modlines": 0, "user": "RLRICE"}, "text": "PCXHDR   DSECT                     PCX PICTURE FILE HEADER\nPCXMFR   DS    X                   \"MANUFACTURER\"\n*        EQU   10                  ZSOFT (IE. PCX FORMAT FILE)\nPCXVER   DS    X                   VERSION\n*                              0 = VERSION 2.5 OF PC PAINTBRUSH\n*                              2 = VERSION 2.8 WITH PALETTE INFORMATION\n*                              3 = VERSION 2.8 W/O PALETTE INFORMATION\n*                              4 = PC PAINTBRUSH FOR WINDOWS(PLUS FOR\n*                                  WINDOWS USES VER 5)\n*                              5 = VERSION 3.0 AND > OF PC PAINTBRUSH\n*                                  AND PC PAINTBRUSH +, INCLUDES\n*                                  PUBLISHER'S PAINTBRUSH . INCLUDES\n*                                  24-BIT .PCX FILES\nPCXMETHD DS    X                   ENCODING METHOD\n*        EQU   0                   NO COMPRESSION (NEVER SEEN IT)\n*        EQU   1                   LIMITED RLE (RUN LENGTH ENCODING)\nPCXBITPP DS    X                   NUMBER OF BITS PER PIXEL PER PLANE\nPCXWINDW DS    0XL8                IMAGE WINDOW DIMENSIONS\nPCXXMIN  DS    XL2\nPCXYMIN  DS    XL2\nPCXXMAX  DS    XL2\nPCXYMAX  DS    XL2\nPCXHDPI  DS    XL2                 HORIZONTAL RESOLUTION DOTS PER INCH\nPCXVDPI  DS    XL2                 VERTICAL RESOLUTION DOTS PER INCH\nPCXCOLMP DS    16XL3               16-COLOR RGB PALETTE\nPCXRESV  DS    X                   SHOULD BE ZERO\nPCXNPLNS DS    X                   NUMBER OF COLOR PLANES\nPCXBYTLN DS    XL2                 NUMBER OF BYTES PER SCANLINE\n*                                  MUST BE EVEN - DON'T USE XMAX-XMIN+1\nPCXPALIN DS    XL2                 PALETTE INTERPRETATION INFORMATION\n*        EQU   1                   COLOR OR BLACK-AND-WHITE\n*        EQU   2                   GREYSCALE\nPCXHSSIZ DS    XL2                 HORIZONTAL SIZE IN PIXELS      (NEW)\nPCXVSSIZ DS    XL2                 VERTICAL SIZE IN PIXELS        (NEW)\nPCXFILL  DS    XL54                REST OF HEADER - SHOULD BE ZERO\nPCXHDRL  EQU   *-PCXHDR\nPCXDATA  DS    0X                  PICTURE DATA BEGINS HERE\n\n*   IF PCXVER IS 5 OR MORE THEN A 256-COLOR PALETTE MAY BE PRESENT.\n*   IF THE 256-COLOR PALETTE IS PRESENT THEN THE LAST 769 BYTES OF\n*   THE FILE IS AL1(12) FOLLOWED BY 256 3-BYTE RGB VALUES.\n*\n*   WHEN A PCX FILE IS TRANSFERRED TO A FIXED-LENGTH RECORD OS DATA\n*   SET, THE LAST RECORD MAY HAVE EXTRANEOUS FILL DATA AFTER PICTURE\n*   AND/OR PALETTE DATA.  \"REVIEW\" WILL TOLERATE AND IGNORE THIS.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PCXWORK": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\t\\x07\\x8f\\x01\\t\\x07\\x8f\\x156\\x00\\x12\\x00\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-19T00:00:00", "modifydate": "2009-03-19T15:36:39", "lines": 18, "newlines": 18, "modlines": 0, "user": "RLRICE"}, "text": "PCXWORK  DSECT\n         DS    18F                 REGISTER SAVE AREA\nPCXSECSV DS    4F                  SECONDARY SAVE AREA\nPCXWKLEN DS    F                   SIZE OF THIS AREA\nPELLDCSR DS    F                   PIXEL LOAD CURSOR\nPCXEOSCN DS    F                   END OF DECODED LINE ADDRESS\nLINES2GO DS    F                   SCAN LINES LEFT TO READ FROM FILE\nPCXSAVER DS    F                   RETURN ADDRESS SAVE AREA\nPCXRUNLN DS    H                   DATA BYTE RUN-LENGTH\n         DS    0D\nPCXHDRWS DS    CL128               PCX HEADER HOLD AREA\nPCXPAL16 DS    0XL48               16-COLOUR RGB PALETTE HOLD AREA\nPCXPALET DS    XL768               256-COLOUR RGB PALETTE HOLD AREA\nPCXSCNLN DS    0D                  SCAN LINE EXPANSION AREA\n\n*\n*  NEED TO DETERMINE HOW MUCH TO ALLOW FOR EXPANSION AREA\n*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDCHECK": {"ttr": 279, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x06\\x17?\\x01\\x06\\x17?\\t\\x14\\x00\\x06\\x00\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-06-22T00:00:00", "modifydate": "2006-06-22T09:14:55", "lines": 6, "newlines": 6, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         PDCHECK  &NBR\n         LA    R1,&NBR\n         LA    R15,L'&NBR\n         BAL   R14,COMM_VERIFY_NUMBER_000\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PNS": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00&\\x01\\t(o\\x01\\t1o\\x156\\x00\\x04\\x00\\x05\\x00\\x04\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2009-11-12T15:36:26", "lines": 4, "newlines": 5, "modlines": 4, "user": "RLRICE"}, "text": "PNS             DSECT\nPNS_DATA_ADDR   DS     A            DATA ADDRESS\nPNS_FIELD_ADDR  DS     A            FIELD IN FIELD TABLE\nPNS_L           EQU    *-PNS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PPDDATA": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\t4\\x1f\\x01\\t4\\x1f\\x08 \\x00\\t\\x00\\t\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-07T08:20:21", "lines": 9, "newlines": 9, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPPD                DS    0C\nPPD_KEY            DC    0CL67\nPPD_SEQ            DC    XL4'00'\nPPD_NAME           DC    CL63' '\nPPD_DATA           DC    100X'00'\nPPD_L              EQU   *-PPD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PROFRECD": {"ttr": 281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x05%o\\x01\\x05%o\\x11\\x14\\x00\\x06\\x00\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-09-13T00:00:00", "modifydate": "2005-09-13T11:14:10", "lines": 6, "newlines": 6, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROFILE_RECORD  DSECT\nPROFILE_TYPE    DS     CL8\nPROFILE_DATA    DS     CL72\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PROFREQ": {"ttr": 283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x11\\x01\\x05%_\\x01\\x06 \\x9f\\x13\\x11\\x00\\x14\\x00\\x16\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-09-12T00:00:00", "modifydate": "2006-07-28T13:11:11", "lines": 20, "newlines": 22, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Profile read/write                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PROFREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nPROFREQ  DS      0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nPROFREQ          DSECT\n.LBL0020 ANOP\nPROF_FUNC        DS     X           FUNCTION\n$PROF_READ       EQU    X'01'       .. READ\n$PROF_WRITE      EQU    X'02'       .. WRITE\nPROF_RC          DS     X\n$PROF_OK         EQU    X'00'       .. SUCCESFUL\n$PROF_NO_PROFILE EQU    X'01'       .. PROFILE DD NOT FOUND\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RCALLREQ": {"ttr": 285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x05\\x01\\x05)\\x0f\\x01\\x06 \\x9f\\x13D\\x00\\x16\\x00\\x19\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-10-17T00:00:00", "modifydate": "2006-07-28T13:44:05", "lines": 22, "newlines": 25, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        RECALL request block                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         RCALLREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nRCALLREQ            DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nRCALLREQ            DSECT\n.LBL0020 ANOP\nRCALLREQ_FUNC       DS     X         FUNCTION\n$RCALLREQ_INIT      EQU    X'01'     .. INITIALIZE RECALL CHAIN\n$RCALLREQ_RECALL    EQU    X'02'     .. RECALL COMMAND\n$RCALLREQ_STORE     EQU    X'03'     .. STORE A COMMAND\n$RCALLREQ_TERM      EQU    X'04'     .. TERMINATION/CLEAN-UP\nRCALLREQ_LENGTH     DS     H         COMMAND LENGTH\nRCALLREQ_CMD        DS     CL80      COMMAND TEXT\nRCALLREQ_L          EQU    *-RCALLREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REGEQU": {"ttr": 287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x008\\x01\\x05$?\\x01\\x05%_\\x11\\x10\\x00/\\x00/\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-08-31T00:00:00", "modifydate": "2005-09-12T11:10:38", "lines": 47, "newlines": 47, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*              GENERAL PURPOSE REGISTERS\n* ------------------------------------------------------------------- *\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n\n* ------------------------------------------------------------------- *\n*              ACCESS REGISTERS\n* ------------------------------------------------------------------- *\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nAR10     EQU   10\nAR11     EQU   11\nAR12     EQU   12\nAR13     EQU   13\nAR14     EQU   14\nAR15     EQU   15\n\n* ------------------------------------------------------------------- *\n*              FLOATING POINT REGISTERS\n* ------------------------------------------------------------------- *\nFP0      EQU   0\nFP2      EQU   2\nFP4      EQU   4\nFP6      EQU   6\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RLDDATA": {"ttr": 289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x08\\x12\\x7f\\x01\\x08\\x12\\x7f\\x14\\x05\\x00\\x0e\\x00\\x0e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2008-05-06T00:00:00", "modifydate": "2008-05-06T14:05:05", "lines": 14, "newlines": 14, "modlines": 0, "user": "RLRICE"}, "text": "LMOD_RLD_DATA            DS    0C\nLMOD_RLD_TYPE            DS    X\nLMOD_RLD_STATUS          DS    X\nLMOD_RLD_RESIDENT        DS    CL60\nLMOD_RLD_ADCON_LENGTH    DS    XL2\nLMOD_RLD_RESIDENT_CLASS  DS    CL60\nLMOD_RLD_RESIDENT_OFFSET DS    XL4\nLMOD_RLD_CLASS_OFFSET    DS    XL4\nLMOD_RLD_BIND_ATTR       DS    X\nLMOD_RLD_XATTR_CLASS     DS    CL60\nLMOD_RLD_XATTR_OFFSET    DS    XL4\nLMOD_RLD_TARGET          DS    CL60\nLMOD_RLD_RESIDENT_PART   DS    CL60\nLMOD_RLD_DATA_L          EQU   *-LMOD_RLD_DATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SCONTROL": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x10\\x00S\\x01\\x06%\\x1f\\x01\\x08\\x15O\\x10'\\x00\\x18\\x00\\x0e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.16", "flags": 0, "createdate": "2006-09-08T00:00:00", "modifydate": "2008-06-02T10:27:53", "lines": 24, "newlines": 14, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         SCONTROL  &PREFIX,&SUFFIX\n         LCLC      &P,&S\n         AIF       (T'&PREFIX EQ 'O').NOP\n&P       SETC      '&PREFIX._'\n.NOP     ANOP\n         AIF       (T'&SUFFIX EQ 'O').NOS\n&S       SETC      '_&SUFFIX'\n.NOS     ANOP\n&P.DATASPACE&S                       DS 0A\n&P.DATASPACE&S._ALET                 DC F'-1'   ALET OF DATA SPACE\n&P.DATASPACE&S._FIRST_RECORD         DC F'1'    LOWEST RECORD SAVED\n&P.DATASPACE&S._LAST_RECORD          DC F'0'    HIGHEST RECORD NBR USED\n&P.DATASPACE&S._LONGEST_RECORD       DC F'0'    LONGEST RECORD\n&P.DATASPACE&S._DISPLAY_FIRST_RECORD DC F'1'    FIRST RECORD TO DISPLAY\n&P.DATASPACE&S._DISPLAY_LAST_RECORD  DC F'0'    LAST RECORD ON DISPLAY\n&P.DATASPACE&S._DISPLAY_FIRST_COLUMN DC F'1'    FIRST COLUMN TO DISPLAY\n&P.DATASPACE&S._DISPLAY_LAST_COLUMN  DC F'0'    LAST COLUMN ON DISPLAY\n&P.DATASPACE&S._BYTES                DC F'0'    BYTES USED\n&P.DATASPACE&S._LAST_ADDRESS         DC A(0)    LAST ADDRESS USED\n&P.DATASPACE&S._BLOCKS               DC A(0)    SIZE (4K BLOCKS)\n&P.DATASPACE&S._TOKEN                DC XL8'00' DATA SPACE TOKEN\n&P.DATASPACE&S._NAME                 DC CL8' '  DATASPACE NAME\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SEPREQ": {"ttr": 515, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00A\\x01\\x08\\x14O\\x01\\x08\\x14O\\tV\\x00\\x15\\x00\\x11\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2008-05-23T00:00:00", "modifydate": "2008-05-23T09:56:41", "lines": 21, "newlines": 17, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        SEPARATOR LINE parameters                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         SEPREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSEPREQ                 DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nSEPREQ                 DSECT\n.LBL0020 ANOP\nSEPREQ_FIRST_SEPARATOR DS  A       FIRST SEPARATOR\nSEPREQ_NBR             DS  F       NUMBER OF SEPARATORS\nSEPREQ_DCB             DS  A       ADDRESS OF OUTPUT DCB\nSEPREQ_SEQ             DS  F       SEQUENCE NUMBER\nSEPREQ_RECORDS         DS  F       NBR OF RECORDS\nSEPREQ_BYTES           DS  F       NBR OF BYTES\nSEPREQ_MEMBER          DS  CL8     MEMBER NAME\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SEQ": {"ttr": 517, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0e\\x00\\x12\\x01\\x06'\\x0f\\x01\\x08\\x07\\x9f\\x13\\x00\\x00\\x1a\\x00\\x08\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.14", "flags": 0, "createdate": "2006-09-27T00:00:00", "modifydate": "2008-03-19T13:00:12", "lines": 26, "newlines": 8, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     I don't like to keep the same data twice, but in this case      *\n*     I made an exception.  SEQ_DATA_LENGTH is the same as            *\n*     DSPCREQ_RECORD_LENGTH for the corresponding record.             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEQ             DSECT\nSEQ_NEXT        DS       A              NEXT SEQ BLOCK\nSEQ_PREV        DS       A              PREVIOUS SEQ BLOCK\nSEQ_NBR         DS       F              THIS BLOCK'S RELATIVE NUMBER\nSEQ_BLOCK_START DS       A              FIRST SEQ OF BLOCK COMMAND\nSEQ_BLOCK_END   DS       A              LAST SEQ OF BLOCK COMMAND\nSEQ_RELATED_SEQ DS       A              SEQ BLOCK RELATED BY COMMAND\nSEQ_DATA_NBR    DS       F              RECORD NBR IN DATA SPACE\nSEQ_DATA_LENGTH DS       F              LENGTH OF DATA\nSEQ_REPEAT      DS       H              COMMAND REPEAT\nSEQ_COMMAND     DS       C              LINE COMMAND\nSEQ_FLAGS       DS       X              FLAGS\n$SEQ_BLOCK      EQU      X'80'          .. BLOCK COMMAND\n$SEQ_PRIMARY    EQU      X'40'          .. ASSOCIATED WITH PRIMARY CMD\n$SEQ_IC_CMD     EQU      X'20'          .. INSERT CURSOR AT CMD\n$SEQ_IC_DATA    EQU      X'10'          .. INSERT CURSOR AT DATA\nSEQ_META        DS       X              INTERNAL ( EDCOMM_META_LINES)\nSEQ_L           EQU      *-SEQ\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SESSION": {"ttr": 2051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00H\\x01\\t(o\\x01\\x10\\x02o\\x14\\x02\\x00\\xd9\\x00\\xde\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-26T14:02:48", "lines": 217, "newlines": 222, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         SESSION &TYPE=X\n         AIF  ('&TYPE' EQ 'CSECT').CSECT\nSESSION                DSECT\n         AGO  .COMM\n.CSECT   ANOP\nSESSION                CSECT\n.COMM    ANOP\n* ------------------------------------------------------------------- *\n*                   FIELDS FOR EACH 'SESSION'                         *\n* ------------------------------------------------------------------- *\n\nSESS_EYE                DC    CL8'SESSION'\nSESS_NEXT               DC    A(0)      NEXT SESSION\nSESS_PREV               DC    A(0)      PREVIOUS SESSION\nSESS_COMM               DC    A(0)      COMMON FOR CURRENT FUNCTION\nSESS_MESSAGES           DC    A(0)      CURRENT FUNCTION MESSAGES\nSESS_UCB                DC    A(0)      ADDRESS OF UCB\nSESS_NUMBER             DC    F'0'      NUMBER OF RECORDS TO READ (MAX)\nSESS_FORMAT1S           DC    F'0'      NUMBER OF FORMAT-1S\nSESS_VSAM_LRECL         DC    F'0'      LRECL (VSAM)\nSESS_VSAM_KEY_LENGTH    DC    F'0'      KEY LENGTH (VSAM KSDS)\nSESS_VSAM_RKP           DC    F'0'      RELATIVE KEY POSITION (KSDS)\nSESS_RBA                DC    F'0'      RBA (VSAM FILES)\nSESS_FROMKEY_LENGTH     DC    F'0'      VSAM FROMKEY KEY LENGTH\nSESS_TOKEY_LENGTH       DC    F'0'      VSAM TOKEY KEY LENGTH\nSESS_FUNCTION_EP        DC    A(0)      MAIN FUNCTION ENTRY POINT\nSESS_FUNCTION_EXIT      DC    A(0)      MAIN FUNCTION EXIT\nSESS_FUNCTION_DATA      DC    A(0)      FUNCTION DATA\nSESS_DXD_ADDR           DC    A(0)      FUNCTION'S WORK AREA ADDRESS\nSESS_DXD_LENGTH         DC    A(0)      FUNCTION'S WORK AREA LENGTH\nSESS_VERTICAL_SCROLL    DC    F'0'      RECORDS FOR VERTICAL SCROLL\nSESS_HORIZONTAL_SCROLL  DC    F'0'      COLUMNS FOR HORIZONTAL SCROLL\nSESS_DCB_ADDR           DC    A(0)      ADDRESS OF DCB OR ACB\nSESS_DCB_LENGTH         DC    F'0'      LENGTH OF DCB OR ACB\nSESS_IO_AREA            DC    A(0)      I/O AREA ADDRESS\nSESS_LAST_FOUND         DC    F'0'      RECORD # OF LAST RECORD 'FOUND'\nSESS_PATH_LENGTH        DC    F'0'      LENGTH OF PATH NAME\nSESS_REAL_PATH_LENGTH   DC    F'0'      LENGTH OF REAL PATH NAME\nSESS_RETRY              DC    A(0)      ABEND RETRY POINT\nSESS_COMMAND_ADDRESS    DC    A(0)      PRIMARY OR LINE COMMAND ADDR\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS_DISP_PANEL         DC    CL8' '    PANEL NAME\nSESS_DISP_VDATA_ADDR    DC    A(0)      VDATA ADDR\nSESS_DISP_VDATA_LENGTH  DC    F'0'      VDATA LENGTH\nSESS_DISP_CURSOR        DC    F'0'      CURSOR POSITION\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nSESS_RC                 DC    H'0'      RETURN CODE\nSESS_CYLINDERS          DC    H'0'      CYLINDERS ON VOLUME\nSESS_TRACKS             DC    H'0'      TRACKS PER CYLINDER\nSESS_COMMAND_LENGTH     DC    H'0'      PRIMARY OR LINE COMMAND LENGTH\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS_DEFAULT_FORMAT     DC    CL8' '    DEFAULT FORMAT NAME\nSESS_FORMAT             DC    CL8' '    FORMAT NAME\nSESS_DATA_LOADER        DC    CL8' '    MODULE THAT LOADED DATA\nSESS_FUNCTION_MODULE    DC    CL8' '    MAIN FUNCTION MODULE\nSESS_EXIT_MODULE        DC    CL8' '    MAIN FUNCTION EXIT MODULE\nSESS_DD                 DC    CL8' '    DD NAME\nSESS_DSN                DC    CL44' '   DATA SET NAME\nSESS_PATH               DC    CL256' '  PATH NAME\nSESS_REAL_PATH          DC    CL256' '  REAL PATH NAME\nSESS_STATUS             DC    X'00'\n$STATUS_KEYWORD         EQU   X'80'     .. KEYWORD PROCESSED\n$STATUS_HEX             EQU   X'40'     .. DISPLAY IS IN HEX\n$STATUS_NO_DATA         EQU   X'20'     .. NO DATA TO DISPLAY\n$STATUS_NEW_SESSION     EQU   X'10'     .. NEW SESSION WANTED\n$STATUS_NO_MEMBER       EQU   X'08'     .. MEMBER NOT FOUND\n$STATUS_BYPASS          EQU   X'04'     .. BYPASS (EDIT)\nSESS_DATA_TYPE          DC    X'00'     DATA SET TYPE\n$DATA_TYPE_NONVSAM      EQU   X'10'     .. NONVSAM\n$DATA_TYPE_DATA         EQU   X'11'     .. DATA COMPONENT\n$DATA_TYPE_GDG          EQU   X'12'     .. MEMBER OF A GDG\n$DATA_TYPE_INDEX        EQU   X'13'     .. INDEX COMPONENT\n$DATA_TYPE_PDS_MEMBER   EQU   X'14'     .. PDS MEMBER\n$DATA_TYPE_PDS_DIR      EQU   X'15'     .. PDS DIRECTORY\n$DATA_TYPE_SEQUENTIAL   EQU   X'16'     .. SEQUENTIAL\n$DATA_TYPE_HFS          EQU   X'20'     .. HFS\n$DATA_TYPE_HFS_DIR      EQU   X'21'     .... HFS DIRECTORY\n$DATA_TYPE_HFS_FILE     EQU   X'22'     .... HFS FILE\n$DATA_TYPE_VSAM         EQU   X'40'     .. VSAM\n$DATA_TYPE_VSAM_KSDS    EQU   X'41'     .... VSAM KSDS\n$DATA_TYPE_VSAM_ESDS    EQU   X'42'     .... VSAM ESDS\n$DATA_TYPE_VSAM_RRDS    EQU   X'43'     .... VSAM RRDS\n$DATA_TYPE_VSAM_LDS     EQU   X'44'     .... VSAM LINEAR\n$DATA_TYPE_STOR         EQU   X'80'     .. STORAGE\n$DATA_TYPE_VTOC         EQU   X'81'     .. VTOC\n$DATA_TYPE_OTHER        EQU   X'FF'     .. OTHER\nSESS_MEMBER             DC    CL8' '    MEMBER NAME\nSESS_DSCB               DC    CL140' '  DSCB FROM VTOC\nSESS_VOLSER             DC    CL6' '    VOLSER(S)\nSESS_UCBTYP             DC    XL4'00'   UCBTYP (VTOC DISPLAYS)\n\nSESS_FROM_KEY           DC    CL40' '   FROM-KEY (VSAM KSDS'S)\nSESS_TO_KEY             DC    CL40' '   TO-KEY (VSAM KSDS'S)\n\nSESS_SORT               DC    X'01'     SORT ORDER (DIRECTORIES, VTOCS)\n$SORT_NAME              EQU   X'01'     .. SORTED BY NAME\n$SORT_TTR               EQU   X'02'     .. SORTED BY TTR\n$SORT_CDATE             EQU   X'03'     .. SORTED BY CREATE DATE\n$SORT_MDATE             EQU   X'04'     .. SORTED BY MOD DATA AND TIME\n$SORT_SIZE              EQU   X'05'     .. SORTED BY SIZE\n$SORT_USER              EQU   X'06'     .. SORTED BY USER\n$SORT_CCHHR             EQU   X'07'     .. SORTED BY DISK ADDRESS\n$SORT_REVERSE           EQU   X'80'     .. SORTED IN REVERSE ORDER\n\nSESS_DATASET_FLAGS      DS    X'00'\n$SESS_DATASET_ALLOCATED EQU   X'80'     .. DATA SET ALLOCATED\n$SESS_DATASET_DSORG     EQU   X'40'     .. DSORG DETERMINED\n$SESS_DATASET_NO_DCB    EQU   X'20'     .. NO DCB/ACB, UCB, OR DSORG\n\nSESS_DCB_FLAGS          DC    X'00'     DCB/ACB STATUS\n$SESS_ACB_OPEN          EQU   X'80'     .. ACB IS OPEN\n$SESS_DCB_OPEN          EQU   X'80'     .. DCB IS OPEN\n\nSESS_EDIT_FLAGS         DC    X'00'     EDIT MODE FLAGS\n$SESS_EDIT              EQU   X'80'     .. THIS IS AN EDIT SESSION\n$SESS_EDIT_EMPTY        EQU   X'40'     .. STARTED EDIT WITH EMPTY FILE\n\nSESS_USER_OPTIONS       DC    X'00'     USER OPTIONS\n$OPTIONS_VOLSER         EQU   X'80'     .. SPECIFIED VOLSER\n$OPTIONS_ASCII          EQU   X'40'     .. DATA SET IS IN ASCII\n$OPTIONS_DUMPDATA       EQU   X'20'     .. DUMP DATASPACE\n$OPTIONS_FROMKEY        EQU   X'10'     .. VSAM FROMKEY\n$OPTIONS_TOKEY          EQU   X'08'     .. VSAM TOKEY\n$OPTIONS_RBA            EQU   X'04'     .. VSAM RBA\n$OPTIONS_SHOW_TAGGED    EQU   X'02'     .. SHOW TAGGED MEMBERS ONLY\n$OPTIONS_SHOW_NOT_TAGGED EQU X'01'      .. SHOW TAGGED MEMBERS ONLY\n\nSESS_COMMAND_FLAGS      DC    X'00'     OSCMD FLAGS\n$SESS_COMMAND_DISPLAY   EQU   X'80'     .. DISPLAY COMMANDS\n$SESS_COMMAND_SEARCH    EQU   X'40'     .. SEARCH COMMANDS\n$SESS_COMMAND_FOUND     EQU   X'20'     .. COMMAND WAS FOUND\n\nSESS_KEYWORD_FLAGS      DC    X'00'     KEYWORD FLAGS\n$KEYWORD_DSN            EQU   X'80'     .. DSN GIVEN\n$KEYWORD_DD             EQU   X'40'     .. DD GIVEN\n$KEYWORD_VOL            EQU   X'20'     .. VOLSER GIVEN\n$KEYWORD_START          EQU   X'10'     .. STARTING RECORD NBR GIVEN\n$KEYWORD_RECORDS        EQU   X'08'     .. NUMBER OF RECORDS GIVEN\n$KEYWORD_MEMBER         EQU   X'04'     .. MEMBER NAME GIVEN\n$KEYWORD_FORMAT         EQU   X'02'     .. FORMAT NAME GIVEN\n$KEYWORD_PATH           EQU   X'01'     .. PATH NAME GIVEN\n\nSESS_KEYWORD_FLAGS_2    DC    X'00'     EVEN MORE KEYWORD FLAGS\n$KEYWORD_VTOC           EQU   X'40'     .. VTOC\n$KEYWORD_RAWVTOC        EQU   X'20'     .. RAW VTOC\n$KEYWORD_CCHHR          EQU   X'10'     .. DISPLAY CCHHR\n$KEYWORD_RBA            EQU   X'08'     .. DISPLAY RBA\n$KEYWORD_ACT            EQU   X'04'     .. DISPLAY ACTIVE REGIONS\n$KEYWORD_STOR           EQU   X'02'     .. STORAGE DISPLAY\n\nSESS_FORMAT_FLAGS       DC    X'00'     FORMAT FLAGS\n$FORMAT_INITIALIZE      EQU   X'01'     .. PERFORM INITIALIZATION\n$FORMAT_CONTROL         EQU   X'02'     .. PROCESS CONTROL STATEMENT\n$FORMAT_FORMAT          EQU   X'03'     .. FORMAT DATA\n$FORMAT_CLEANUP         EQU   X'04'     .. PERFORM CLEAN UP\n\nSESS_ABEND_FLAG         DC    X'00'     ABEND INDICATOR(S)\n$ABENDED                EQU   X'80'     .. ABEND HAS OCCURRED\n$ABEND_NO_STAE          EQU   X'40'     .. DO NOT ATTEMPT RECOVERY\n\n                        DS    0H\nSESS_ABEND_CSECT        DC    CL8' '    CSECT AT TIME OF ABEND\nSESS_ABEND_DISP         DC    XL2'00'   DISPLACEMENT\nSESS_SYSTEM_CODE        DC    XL2'00'   SYSTEM ABEND CODE\nSESS_USER_CODE          DC    XL2'00'   USER ABEND CODE\nSESS_ABEND_R15          DC    XL2'00'   R15 AT TIME OF ABEND\n\n* ------------------------------------------------------------------- *\n*        Search ARG, LENGTH, ...                                      *\n* ------------------------------------------------------------------- *\nSESS_SEARCH_ARG_LENGTH  DC    H'0'      SEARCH ARG LENGTH\nSESS_SEARCH_ARG         DC    CL80' '   SEARCH ARGUEMENT\nSESS_SEARCH_RECORD      DC    XL4'00'   LAST MATCHING RECORD\nSESS_SEARCH_FLAGS       DC    X'00'\n$SESS_SEARCH_ACTIVE     EQU   X'80'\n$SESS_SEARCH_NOW        EQU   X'40'\n$SESS_SEARCH_HEX        EQU   X'20'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Dataspace control                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                       SCONTROL  ,1\n                       SCONTROL  ,2\n                       SCONTROL  ,3\n\n* ------------------------------------------------------------------- *\n*        Binder dialog stuff                                          *\n* ------------------------------------------------------------------- *\n                             DS    0F\nSESS_DIALOG_TOKEN            DC    XL8'00' LMOD DIALOG TOKEN\nSESS_DIALOG_WORKMOD          DC    XL8'00' LMOD DIALOG WORKMOD\n\nSESS_DIALOG_SECTION_LENGTH   DC    X'0008' LMOD SECTION NAME LENGTH\nSESS_DIALOG_SECTION          DC    CL8' '  LMOD SECTION NAME\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSESS_STAT              DS    0D,(STAT#LENGTH)X\nSESS_REAL_STAT         DS    0D,(STAT#LENGTH)X\n\n* ------------------------------------------------------------------- *\nSESSION_L              EQU   *-SESSION\n                       MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SINDEX": {"ttr": 519, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x06\\x01\\x06%\\x1f\\x01\\x07\\x15\\x1f\\x16P\\x00\\x12\\x00\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2006-09-08T00:00:00", "modifydate": "2007-05-31T16:50:06", "lines": 18, "newlines": 6, "modlines": 0, "user": "RLRICE"}, "text": "DATASPACE_INDEX              DSECT\nDATASPACE_INDEX_ADDR         DS   A   Address of data\nDATASPACE_INDEX_LENGTH       DS   F   Length of data\n\n* ------------------------------------------------------------------- *\n*     For sequential                                                  *\n* ------------------------------------------------------------------- *\nDATASPACE_INDEX_CCHHR        DS   XL5   Disk address (CCHHR)\nDATASPACE_INDEX_SEQ          DS   F     Logical record within block\n\n* ------------------------------------------------------------------- *\n*     For VSAM data sets                                              *\n* ------------------------------------------------------------------- *\nDATASPACE_INDEX_VSAM         ORG  DATASPACE_INDEX_CCHHR\nDATASPACE_INDEX_RBA          DS   F     RBA of record (VSAM data sets)\n\n                             ORG\nDATASPACE_INDEX_L            EQU  *-DATASPACE_INDEX\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SPFSTATS": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00T\\x01\\x05)\\x9f\\x01\\x05)\\x9f\\x15A\\x00\\r\\x00\\x0b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-10-26T00:00:00", "modifydate": "2005-10-26T15:41:54", "lines": 13, "newlines": 11, "modlines": 0, "user": "RLRICE"}, "text": "SPFSTATS         DS   0X\nSPF_VERSION      DS   X              MODIFICATION VERSION\nSPF_LEVEL        DS   X              MODIFICATION LEVEL\n                 DS   X\nSPF_M_SECONDS    DS   X              MODIFICATION TIME (SECONDS)\nSPF_C_DATE       DS   XL4   0CYYDDDS CREATION DATE\nSPF_M_DATE       DS   XL4   0CYYDDDS MODIFICATION DATE\nSPF_M_TIME       DS   XL2   HHMM     MODIFICATION TIME (HOURS/MIN)\nSPF_SIZE         DS   XL2            SIZE\nSPF_INIT         DS   XL2            INITIAL SIZE\nSPF_MODS         DS   XL2            MODIFICATIONS\nSPF_USER         DS   CL8            USER ID\nSPFSTATS_L       EQU  *-SPFSTATS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORCOMM": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00%\\x01\\t(o\\x01\\t2O\\x169\\x00I\\x00J\\x006\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2009-11-20T16:39:25", "lines": 73, "newlines": 74, "modlines": 54, "user": "RLRICE"}, "text": "         MACRO\n         STORCOMM\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                   OSSTOR COMMON                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSTORCOMM                  DSECT\nSTORCOMM_EYE              DS  CL8      EYECATCHER\nSTORCOMM_PREV             DS  A        PREVIOUS STORCOMM BLOCK\nSTORCOMM_FORMATTER_EP     DS  A        FORMATTER ADDRESS\nSTORCOMM_DATA_ADDR        DS  A        DATA ADDRESS\nSTORCOMM_FUNCTION_ADDR    DS  A        FUNCTION ENTRY POINT\nSTORCOMM_NEW_FUNCTION     DS  A        NEW FUNCTION ENTRY POINT\nSTORCOMM_VDATA_ADDR       DS  A        VDATA ADDRESS\nSTORCOMM_VDATA_LENGTH     DS  F        VDATA LENGTH\nSTORCOMM_CURSOR           DS  F        CURSOR POSITION IN VDATA\nSTORCOMM_VDEPTH           DS  F        SCREEN DEPTH\nSTORCOMM_VWIDTH           DS  F        SCREEN WIDTH\nSTORCOMM_DATA_DISP        DS  F        CURRENT DISP INTO AREA\nSTORCOMM_ASCB             DS  A        ADDRESS SPACE'S ASCB ADDR\n* ------------------------------------------------------------------- *\n*                   Control block formatter control                   *\n* ------------------------------------------------------------------- *\nSTORCOMM_CB_TABLE         DS  A        CONTROL BLOCK FIELD TABLE\nSTORCOMM_CB_FIRST         DS  A        FIRST FIELD ON SCREEN\nSTORCOMM_CB_LAST          DS  A        LAST FIELD ON SCREEN\nSTORCOMM_CB_NAME          DS  CL8      CONTROL BLOCK NAME\nSTORCOMM_CB_DESCRIPTION   DS  CL40     CONTROL BLOCK DESCRIPTION\n* ------------------------------------------------------------------- *\n*                   Point-and-shoot                                   *\n* ------------------------------------------------------------------- *\nSTORCOMM_PNS_TABLE_ADDR   DS  A        POINT AND SHOOT TABLE\nSTORCOMM_PNS_TABLE_LENGTH DS  F        POINT AND SHOOT TABLE LENGTH\nSTORCOMM_PNS_DATA_ADDR    DS  F        POINT AND SHOOT DATA ADDR\nSTORCOMM_PNS_FIELD_ADDR   DS  F        POINT AND SHOOT FIELD ADDR\n* ------------------------------------------------------------------- *\n*                   Name (or bookmark) chain                          *\n* ------------------------------------------------------------------- *\nSTORCOMM_BOOKMARK_CHAIN   DS  A\n* ------------------------------------------------------------------- *\n*                   Control block FIELD exit stuff                    *\n* ------------------------------------------------------------------- *\nFIELD_EXIT_FIELD          DS  A        FIELD IN \"TABLE\"\nFIELD_EXIT_VDATA          DS  A        VDATA BUFFER ADDRESS TO USE\nFIELD_EXIT_PNS            DS  A        CURRENT ADDR IN PNS TABLE\nFIELD_EXIT_LINES          DS  H        LINES AVAILABLE ON DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSTORCOMM_ASID             DS  H        ASID\nSTORCOMM_PANEL_NAME       DS  CL8      PANEL NAME\nSTORCOMM_SPACE_NAME       DS  CL8      ADDRESS SPACE NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                   Function and status use the same codes            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSTORCOMM_FUNCTION         DS  X        FUNCTION\nSTORCOMM_STATUS           DS  X        STATUS\n$STORCOMM_OK              EQU 0        .. OK/NORMAL\n$STORCOMM_FORMAT          EQU 1        .. FORMAT\n$STORCOMM_COMMAND         EQU 2        .. CHECK FOR COMMAND(S)\n$STORCOMM_CLEANUP         EQU 3        .. CLEAN UP\n$STORCOMM_NEW             EQU 4        .. NEW FUNCTION\n$STORCOMM_PNS             EQU 5        .. POINT-AND-SHOOT\n$STORCOMM_ERROR           EQU X'FF'    .. ERROR\nSTORCOMM_L                EQU *-STORCOMM\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STORPARM": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x08\\x12\\x1f\\x01\\t\\x06O\\t0\\x00\\x12\\x00\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2008-04-30T00:00:00", "modifydate": "2009-03-05T09:30:41", "lines": 18, "newlines": 18, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Display storage parms (OSSTOR)                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         STORPARM &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSTORPARM          DS    0A\n         AGO      .LBL0020\n.LBL0010 ANOP\nSTORPARM          DSECT\n.LBL0020 ANOP\nSTORE_AREA_NAME   DS   CL8         AREA NAME\nSTORE_AREA_ADDR   DS   A           AREA ADDRESS\nSTORE_AREA_LENGTH DS   F           AREA LENGTH\nSTORE_AREA_ALET   DS   XL4         AREA ALET\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SUBREQ": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x05)?\\x01\\x06 \\x9f\\x13C\\x00\\x14\\x00\\x19\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2005-10-20T00:00:00", "modifydate": "2006-07-28T13:43:35", "lines": 20, "newlines": 25, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        SUBMIT request                                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         SUBREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSUBREQ          DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nSUBREQ          DSECT\n.LBL0020 ANOP\nSUBREQ_RC       DS     X           RETURN CODE\n$SUBREQ_OK      EQU    X'00'       .. SUCCESSFUL\n$SUBREQ_ERROR   EQU    X'FF'       .. ERROR\nSUBREQ_DSN      DS     CL44        DATA SET NAME\nSUBREQ_MEMBER   DS     CL8         MEMBER NAME\nSUBREQ_SYSOUT   DS     X           SYSOUT CLASS\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TRENTRY": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x001\\x01\\x05 ?\\x01\\x10\\x01?\\x13\\x18\\x00\\x0b\\x00\\x0c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-07-22T00:00:00", "modifydate": "2010-01-13T13:18:31", "lines": 11, "newlines": 12, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*          TRACE TABLE ENTRY                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nTR_ENTRY   DSECT\nTR_CSECT   DS    CL8                 CSECT NAME\nTR_ID      DS    CL8                 TRACE ID\nTR_DATA1   DS    CL8                 TRACE DATA 1\nTR_DATA2   DS    CL8                 TRACE DATA 2\nTR_ENTRY_L EQU   *-TR_ENTRY          ENTRY LENGTH\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USEREXIT": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x19\\x01\\x06#O\\x01\\x06#O\\x16\\x10\\x00&\\x00 \\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2006-08-22T00:00:00", "modifydate": "2006-08-22T16:10:19", "lines": 38, "newlines": 32, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         USEREXIT &DSECT=NO\n         AIF   (T'&DSECT EQ 'O').ERR0010\n         AIF   ('&DSECT' EQ 'YES').LBL0010\n         AIF   ('&DSECT' EQ 'NO').LBL0020\n         MNOTE 12,'DSECT MUST BE -YES- OR -NO-'\n         MEXIT\n.LBL0010                  ANOP\nUSEREXIT                  DSECT\n                          AGO   .LBL0030\n.LBL0020                  ANOP\nUSEREXIT                  DS    0A\n.LBL0030                  ANOP\nUSEREXIT_RECORD_ADDR      DS    A            DATA RECORD ADDRESS\nUSEREXIT_RECORD_LENGTH    DS    F            DATA RECORD LENGTH\nUSEREXIT_RECORD_NBR       DS    F            DATA RECORD RECORD NBR\nUSEREXIT_VDATA_ADDR       DS    A            DYNAMIC AREA ADDRESS\nUSEREXIT_VDATA_LENGTH     DS    F            DYNAMIC AREA LENGTH\nUSEREXIT_ROWS             DS    F            ROWS ON DISPLAY\nUSEREXIT_COLUMNS          DS    F            COLUMNS ON DISPLAY\nUSEREXIT_MAX_RECORD_NBR   DS    F            HIGHEST RECORD STORED\nUSEREXIT_USERWORD         DS    A            A WORD FOR EXIT TO USE\nUSEREXIT_ZCMD             DS    CL80         ZCMD\nUSEREXIT_ZVERB            DS    CL8          SCROLL VERB\nUSEREXIT_ZSCROLLA         DS    CL8          SCROLL AMOUNT\nUSEREXIT_ZSCROLLN         DS    F            SCROLL NUMBER\nUSEREXIT_FUNC             DS    X            FUNCTION\n$USEREXIT_FORMAT          EQU   X'01'        .. FORMAT\n$USEREXIT_CMD             EQU   X'02'        .. PROCESS COMMAND(S)\n$USEREXIT_INITIALIZE      EQU   X'03'        .. INITIALIZE\n$USEREXIT_CLEANUP         EQU   X'04'        .. PERFORM CLEANUP\nUSEREXIT_MSG_1            DS    CL80         ERROR OR INFORMATIONAL MSG\nUSEREXIT_MSG_2            DS    CL80\nUSEREXIT_MSG_3            DS    CL80\nUSEREXIT_MSG_4            DS    CL80\nUSEREXIT_MSG_5            DS    CL80\nUSEREXIT_L                EQU   *-USEREXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VARDSECT": {"ttr": 1554, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00T\\x01\\x05$_\\x01\\x10\\x01?\\x13\\x10\\x00\\x0e\\x00\\x0b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-09-02T00:00:00", "modifydate": "2010-01-13T13:10:54", "lines": 14, "newlines": 11, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*              VARIABLE TABLE ENTRIES                                 *\n* ------------------------------------------------------------------- *\nVAR_DSECT   DSECT\nVAR_NAME    DS    CL8                   NAME KNOWN TO SPF\nVAR_FLAG    DS    X                     FLAGS\n$VDEFINE    EQU   X'80'                 .. VARIABLE IS VDEFINED\n$VNEVER     EQU   X'40'                 .. NEVER VDEFINE\n$VGET       EQU   X'20'                 .. VGET WHEN VDEFINED\n$VPUT       EQU   X'10'                 .. VPUT BEFORE VDELETE\nVAR_LENGTH  DS    AL4                   VARIABLE LENGTH\nVAR_FORMAT  DS    CL8                   VARIABLE FORMAT\nVAR_DISP    DS    AL2                   DISPLACEMENT TO DATA\nVAR_DSECT_L EQU   *-VAR_DSECT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VARREQ": {"ttr": 1556, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01\\x05$_\\x01\\x10\\x01?\\x13\\x15\\x00\\x16\\x00\\x14\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-09-02T00:00:00", "modifydate": "2010-01-13T13:15:44", "lines": 22, "newlines": 20, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        VARIABLE DEFINE/DELETE REQUEST                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         VARREQ  &DSECT=YES\n             AIF   ('&DSECT' EQ 'YES').LBL0010\nVARREQ       DS    0A\n             AGO   .LBL0020\n.LBL0010     ANOP\nVARREQ       DSECT\n.LBL0020     ANOP\nVAR_TABLE    DS    A                   ADDRESS OF VARIABLE TABLE\nVAR_AREA     DS    A                   ADDRESS OF VARIABLE DATA AREA\nVAR_COMMAND  DS    C                   COMMAND\n$VAR_DEFINE  EQU   X'01'               .. DEFINE\n$VAR_DELETE  EQU   X'02'               .. DELETE\n$VAR_GET     EQU   X'03'               .. VGET\nVAR_VARIABLE DS    CL8                 VARIABLE NAME FOR VGET\nVARREQL      EQU   *-VARREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VCONS": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\t\\x01\\t(o\\x01\\x10\\x02\\x0f\\t\\x03\\x009\\x008\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-10-13T00:00:00", "modifydate": "2010-01-20T09:03:09", "lines": 57, "newlines": 56, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         VCONS  &TYPE=\n         LCLC   &NAME(30)\n         LCLA   &NBR,&I\n&NAME(001) SETC 'OSCNFRM'\n&NAME(002) SETC 'OSABEND'\n&NAME(003) SETC 'OSAUTH'\n&NAME(004) SETC 'OSCMD'\n&NAME(005) SETC 'OSDAIR'\n&NAME(006) SETC 'OSDEBUG'\n&NAME(007) SETC 'OSDISP'\n&NAME(008) SETC 'OSDSCB'\n&NAME(009) SETC 'OSDSINFO'\n&NAME(010) SETC 'OSDXD'\n&NAME(011) SETC 'OSESTAE'\n&NAME(012) SETC 'OSFIND'\n&NAME(013) SETC 'OSFLIST'\n&NAME(014) SETC 'OSLOAD'\n&NAME(015) SETC 'OSMSG'\n&NAME(016) SETC 'OSOFILE'\n&NAME(017) SETC 'OSPARSE'\n&NAME(018) SETC 'OSPARMS'\n&NAME(019) SETC 'OSPROMPT'\n&NAME(020) SETC 'OSRECALL'\n&NAME(021) SETC 'OSSEP'\n&NAME(022) SETC 'OSSTOR'\n&NAME(023) SETC 'OSTRAP'\n&NAME(024) SETC 'OSVARMGR'\n&NAME(025) SETC 'OSVDATA'\n&NBR     SETA   30\n&I       SETA   1\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n         AIF  ('&TYPE' EQ 'COMM').COMM00\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.INIT00  ANOP\n         AIF  (&I EQ &NBR).MEXIT\n         AIF  ('&NAME(&I)' EQ '').INIT10\n         DC   V(&NAME(&I))\n.INIT10  ANOP\n&I       SETA &I+1\n         AGO  .INIT00\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n.COMM00  ANOP\n         AIF  (&I EQ &NBR).MEXIT\n         AIF  ('&NAME(&I)' EQ '').COMM10\nCOMM_V_&NAME(&I)   DS  A\n.COMM10  ANOP\n&I       SETA &I+1\n         AGO  .COMM00\n.MEXIT   ANOP\n        MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VDEF": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x19\\x01\\x05$_\\x01\\x052\\x1f\\x134\\x00&\\x00%\\x00\\x03\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-09-02T00:00:00", "modifydate": "2005-11-17T13:34:19", "lines": 38, "newlines": 37, "modlines": 3, "user": "RLRICE"}, "text": "         MACRO\n         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +\n               &NAME=,               NAME DEFINED TO SPF               +\n               &DATA=,               DATA ADDRESS                      +\n               &LENGTH=,             DATA LENGTH                       +\n               &FORM=,               DATA FORMAT                       +\n               &FLAGS=00\n         GBLC  &VBASE\n         AIF   (T'&BASE EQ 'O').LBL0010\n&VBASE   SETC  '&BASE'\n         MEXIT\n.LBL0010 ANOP\n         AIF   (T'&NAME EQ 'O').ERR0010\n         AIF   (T'&LENGTH  EQ 'O').ERR0020\n         AIF   (T'&FORM    EQ 'O').ERR0030\n         AIF   ('&VBASE' EQ '').ERR0060\n         DC    CL8'&NAME'             NAME KNOWN TO SPF\n         DC    AL1(&FLAGS)            FLAGS/INDICATORS\n         DC    AL4(&LENGTH)           LENGTH\n         DC    CL8'&FORM'             VARIABLE FORMAT\n         DC    AL2(&DATA-&VBASE)      DISPLACEMENT TO DATA\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'NAME IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0030 ANOP\n         MNOTE 12,'FORM IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0040 ANOP\n         MNOTE 12,'VARIABLE NAME IS DUPLICATED'\n         MEXIT\n.ERR0060 ANOP\n         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+\n               '\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT810/CBT.V500.FILE810.PDS/MACS.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT810/CBT.V500.FILE810.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}