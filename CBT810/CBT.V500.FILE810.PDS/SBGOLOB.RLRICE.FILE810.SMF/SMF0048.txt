*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 48                                   *
*         JES3 SIGNOFF/Stop Line/LOGOFF                               *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD ADDRESS                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF RECORD ADDRESS +4 (DOES NOT INCLUDE LENGTH)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0048  CSECT
SMF0048  AMODE 31
SMF0048  RMODE ANY
         USING SESSION,R11
         USING SMF0048,R15
         B     INIT0000
MODID    DC    CL8'SMF0048'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         USING SMF0048,R10                    DEFINE BASE
         DROP  R15
         L     R1,SESS_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK0048,R13                     DEFINE BASE
         MVC   DXD_CSECT,MODID
         USING OSSPFD,R9                      DEFINE BASE
         USING SMF48FLG,R7                    DEFINE BASE
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         TM    SMF48EVT+1,X'04'               SNA LOGOFF?
         BO    MAIN0010                       YES
         TM    SMF48EVT+1,X'02'               BSC LINE STOPPED?
         BO    MAIN0020                       YES
         TM    SMF48EVT+1,X'01'               SNA SIGNOFF?
         BO    MAIN0030                       YES
         MVC   0(MSG_01_L,R8),MSG_01
         B     MAIN0040
MAIN0010 DS    0H
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         MVC   MSG_02_NAME,SMF48RMT
         DROP  R8
         B     MAIN0040
MAIN0020 DS    0H
         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_NAME,SMF48RMT
         DROP  R8
         B     MAIN0040
MAIN0030 DS    0H
         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_NAME,SMF48RMT
         DROP  R8
MAIN0040 DS    0H
         A     R8,SPF_VWIDTH                  NEXT LINLE

         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         L     R0,SMF48TRN                    NBR OF TRANSMISSIONS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_05_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_06_L,R8),MSG_06
         USING MSG_06,R8
         L     R0,SMF48ERS                    LINE ERRORS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_06_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_07_L,R8),MSG_07
         USING MSG_07,R8
         LH    R0,SMF48TOT                    TIME OUTS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_07_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_08_L,R8),MSG_08
         USING MSG_08,R8
         LH    R0,SMF48NKS                    NEGATIVE ACKNOWLEDGEMENTS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_08_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8
         SR    R0,R0
         IC    R0,SMF48S0                     COMMAND REJECTS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_09_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_10_L,R8),MSG_10
         USING MSG_10,R8
         SR    R0,R0
         IC    R0,SMF48S1                     INTERVENTIONS REQUIRED
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_10_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_11_L,R8),MSG_11
         USING MSG_11,R8
         SR    R0,R0
         IC    R0,SMF48S2                     BUS OUT CHECKS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_11_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_12_L,R8),MSG_12
         USING MSG_12,R8
         SR    R0,R0
         IC    R0,SMF48S3                     EQUIPMENT CHECKS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_12_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         TM    SMF48EVT+1,X'02'               BSC LINE STOPPED?
         BNO   EXIT0000                       NO

         MVC   0(MSG_13_L,R8),MSG_13
         USING MSG_13,R8
         SR    R0,R0
         IC    R0,SMF48S4                     DATA CHECKS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_13_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_14_L,R8),MSG_14
         USING MSG_14,R8
         SR    R0,R0
         IC    R0,SMF48S5                     DATA OVERRUNS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_14_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_15_L,R8),MSG_15
         USING MSG_15,R8
         SR    R0,R0
         IC    R0,SMF48S6                     NUMBER OF LOST DATA's
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_15_NBR,COMM_DWORD+4        EDIT
         A     R8,SPF_VWIDTH                  NEXT LINLE
         DROP  R8

         MVC   0(MSG_16_L,R8),MSG_16
         USING MSG_16,R8
         MVC   MSG_16_ADAPTER,SMF48ADP        COPY ADAPTER NBR
         DROP  R8

*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)                   RESTORE R14
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(WK0048)

MSG_01         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Unknown event'
MSG_01_L       EQU   *-MSG_01

MSG_02         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'SNA LOGOFF       '
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
MSG_02_NAME    DC    CL8' '
MSG_02_L       EQU   *-MSG_02

MSG_03         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'BSC LINE STOPPED '
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
MSG_03_NAME    DC    CL8' '
MSG_03_L       EQU   *-MSG_03

MSG_04         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'SNA Signoff      '
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
MSG_04_NAME    DC    CL8' '
MSG_04_L       EQU   *-MSG_04

MSG_05         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Transmissions    '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_NBR     DC    X'40206B2020206B202120'
MSG_05_L       EQU   *-MSG_05

MSG_06         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Line errors      '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_NBR     DC    X'40206B2020206B202120'
MSG_06_L       EQU   *-MSG_06

MSG_07         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Time outs        '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_NBR     DC    X'40206B2020206B202120'
MSG_07_L       EQU   *-MSG_07

MSG_08         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Errors on writes '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_08_NBR     DC    X'40206B2020206B202120'
MSG_08_L       EQU   *-MSG_08

MSG_09         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Command rejects  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_NBR     DC    X'40206B2020206B202120'
MSG_09_L       EQU   *-MSG_09

MSG_10         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Interventions    '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_10_NBR     DC    X'40206B2020206B202120'
MSG_10_L       EQU   *-MSG_10

MSG_11         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Bus out checks   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_11_NBR     DC    X'40206B2020206B202120'
MSG_11_L       EQU   *-MSG_11

MSG_12         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Equipment checks '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_12_NBR     DC    X'40206B2020206B202120'
MSG_12_L       EQU   *-MSG_12

MSG_13         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Data checks      '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_13_NBR     DC    X'40206B2020206B202120'
MSG_13_L       EQU   *-MSG_13

MSG_14         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Data over-runs   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_14_NBR     DC    X'40206B2020206B202120'
MSG_14_L       EQU   *-MSG_14

MSG_15         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Lost data''s'     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_15_NBR     DC    X'40206B2020206B202120'
MSG_15_L       EQU   *-MSG_15

MSG_16         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
               DC    C'Line adapter nbr  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_16_ADAPTER DC    CL3' '
MSG_16_L       EQU   *-MSG_15

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0048         DSECT
               COPY     DXDPREF
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               IAZSMFR  48
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      SMF0048
