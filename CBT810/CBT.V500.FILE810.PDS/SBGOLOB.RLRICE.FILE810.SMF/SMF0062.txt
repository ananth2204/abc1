*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 61                                   *
*         VSAM component or cluster opened                            *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF RECORD ADDRESS +4 (DOES NOT INCLUDE LENGTH)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0062  CSECT
SMF0062  AMODE 31
SMF0062  RMODE ANY
         USING SESSION,R11
         USING SMF0062,R15
         B     INIT0000
MODID    DC    CL8'SMF0062'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         USING SMF0062,R10                    DEFINE BASE
         DROP  R15
         L     R1,SESS_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK0062,R13                     DEFINE BASE
         MVC   DXD_CSECT,MODID
         USING OSSPFD,R9                      DEFINE BASE
         USING SMF62FLG,R7                    DEFINE BASE
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8
         MVC   MSG_01_JOB,SMF62JBN            COPY JOB NAME
         MVC   MSG_01_USER,SMF62UIF           COPY USER ID
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         TM    SMF62IND,X'80'                 SUCCESSFUL?
         BO    MAIN0010                       YES
         TM    SMF62IND,X'40'                 SECURITY VIOLATION?
         BO    MAIN0020                       YES
         B     MAIN0030
MAIN0010 DS    0H
         MVC   MSG_02_STATUS(SUCCESSFUL_L),SUCCESSFUL
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         B     MAIN0030
MAIN0020 DS    0H
         MVC   MSG_02_STATUS(VIOLATION_L),VIOLATION
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
MAIN0030 DS    0H
         TM    SMF62IND,X'20'                 CATALOG OR CRA RECORD?
         BO    MAIN0040                       YES
         TM    SMF62IND,X'10'                 VVDS OR CATALOG?
         BO    MAIN0050                       YES
         B     MAIN0060
MAIN0040 DS    0H
         MVC   MSG_02_STATUS(CRA_L),CRA
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         B     MAIN0060
MAIN0050 DS    0H
         MVC   MSG_02_STATUS(VVDS_L),VVDS
         DROP  R8
MAIN0060 DS    0H
         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_CATALOG,SMF62CNM
         MVC   MSG_03_VOLSER,SMF62CVS
         DROP  R8

         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         LA    R1,SMF62VSR                    FIRST VOLSER/UNIT
         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_NAME,SMF62DNM           COPY DATA SET NAME
         CH    R6,SMF62VCT                    ALL VOLSERS FIT?
         BL    MAIN0070                       NO
         LH    R6,SMF62VCT                    USE ALL VOLSER(S)
MAIN0070 DS    0H
         MVC   MSG_04_VOLSER,0(R1)            COPY VOLSER
         A     R8,SPF_VWIDTH                  NEXT LINE
         LA    R1,10(,R1)                     NEXT VOLSER/UNIT
         BCT   R6,MAIN0070
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)
         L     R14,12(,R13)                   RESTORE R14
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(WK0062)
SUCCESSFUL     DC    C'Successful'
SUCCESSFUL_L   EQU   *-SUCCESSFUL
VIOLATION      DC    C'Security violation'
VIOLATION_L    EQU   *-VIOLATION
CRA            DC    C'Catalog or CRA'
CRA_L          EQU   *-CRA
VVDS           DC    C'VVDS OR CATALOG OPENED AS A DATASET'
VVDS_L         EQU   *-VVDS

MSG_01         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'JOB      '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_JOB     DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C' User'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_USER    DC    CL8' '
MSG_01_L       EQU   *-MSG_01

MSG_02         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Status   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_STATUS  DC    CL60' '
MSG_02_L       EQU   *-MSG_02

MSG_03         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Catalog  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_CATALOG DC    CL44' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'VOLSER'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_VOLSER  DC    CL6' '
MSG_03_L       EQU   *-MSG_03

MSG_04         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Component'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_NAME    DC    CL44' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'VOLSER'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_VOLSER  DC    CL6' '
MSG_04_L       EQU   *-MSG_04

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0062         DSECT
               COPY     DXDPREF
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               IDASMF62
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      SMF0062
