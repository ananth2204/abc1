*---------------------------------------------------------------------*
*                                                                     *
*         Common address space work (type 30)                         *
*                                                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0030  CSECT
SMF0030  AMODE 31
SMF0030  RMODE ANY
         USING SESSION,R11
         USING SMF0030,R15
         B     INIT0000
MODID    DC    CL8'SMF0030'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING SMF0030,R10                    DEFINE BASE
         L     R2,SESS_DXD_ADDR
         A     R2,DXDSTART
         ST    R13,4(R2)                      SAVE R13
         ST    R2,8(R13)                      CHAIN SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING WK0030,R13                     DEFINE BASE
         USING OSSPFD,R9                      DEFINE BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               RDATA1=R1
         CH    R1,H6
         BH    ERR0010
         SLL   R1,2                           TIMES 4
         B     *(R1)
         B     MAIN1010
         B     MAIN2000
         B     MAIN3000
         B     MAIN4000
         B     MAIN5000
         B     MAIN6000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN1010 DS    0H
         USING SMF30FLG,R7
         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process subsystem sections                                   *
*---------------------------------------------------------------------*
         SR    R5,R5
         ICM   R5,3,SMF30SON                  NUMBER OF SECTIONS
         BZ    MAIN1100                       NONE
         L     R1,A_MSG_101
         MVC   0(MSG_101_L,R8),0(R1)
         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
         ICM   R4,15,SMF30SOF                 OFFSET TO DATA
         AR    R4,R7
         SH    R4,H4
         USING SMF30PSS,R4                    DEFINE BASE
MAIN1020 DS    0H
         L     R1,A_MSG_102
         MVC   0(MSG_102_L,R8),0(R1)
         USING MSG_102,R8                     DEFINE BASE
         MVC   MSG_102_NAME,SMF30PNM          COPY PRODUCT NAME
         CLI   SMF30TYP+1,1                   JOB START?
         BE    MAIN1030
         CLI   SMF30TYP+1,2                   INTERVAL?
         BE    MAIN1040
         CLI   SMF30TYP+1,3                   STEP TERMINATION?
         BE    MAIN1050
         CLI   SMF30TYP+1,4                   STEP TOTAL?
         BE    MAIN1060
         CLI   SMF30TYP+1,5                   JOB TERMINATION?
         BE    MAIN1070
         CLI   SMF30TYP+1,6                   SYSTEM ADDRESS SPACE?
         BE    MAIN1080
         MVC   MSG_102_TYPE,TYPE_UNKNOWN
         B     MAIN1090
MAIN1030 DS    0H
         MVC   MSG_102_TYPE,TYPE_JOB_START
         B     MAIN1090
MAIN1040 DS    0H
         MVC   MSG_102_TYPE,TYPE_INTERVAL
         B     MAIN1090
MAIN1050 DS    0H
         MVC   MSG_102_TYPE,TYPE_STEP_TERM
         B     MAIN1090
MAIN1060 DS    0H
         MVC   MSG_102_TYPE,TYPE_STEP_TOTAL
         B     MAIN1090
MAIN1070 DS    0H
         MVC   MSG_102_TYPE,TYPE_JOB_TERM
         B     MAIN1090
MAIN1080 DS    0H
         MVC   MSG_102_TYPE,TYPE_SYSTEM
MAIN1090 DS    0H
         A     R8,SPF_VWIDTH                  NEXT LINE ON DISPLAY
         BCTR  R6,0
         AH    R4,SMF30SLN                    NEXT SECTION
         BCT   R5,MAIN1020                    LOOP
         DROP  R4,R8
         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process identification sections                              *
*---------------------------------------------------------------------*
MAIN1100 DS    0H
         SR    R5,R5
         ICM   R5,3,SMF30ION                  NBR OF ID SECTIONS
         BZ    MAIN1140
         L     R1,A_MSG_103
         MVC   0(MSG_103_L,R8),0(R1)
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         ICM   R4,15,SMF30IOF                 OFFSET TO ID SECTION
         AR    R4,R7
         SH    R4,H4
         USING SMF30ID,R4
MAIN1110 DS    0H
         ITRACE ID=ID_SECT,                                            +
               RDATA1=R4,                                              +
               RDATA2=R5
         L     R1,A_MSG_104
         MVC   0(MSG_104_L,R8),0(R1)
         USING MSG_104,R8
         MVC   MSG_104_JOB,SMF30JBN           JOB NAME
         MVC   MSG_104_USER,SMF30RUD          RACF USER ID
         MVC   MSG_104_GROUP,SMF30GRP         RACF GROUP
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE ON DISPLAY
         BCTR  R6,R0

         SR    R2,R2
         ICM   R2,3,SMF30STN                  STEP NUMBER
         BZ    MAIN1120                       ZERO
         ITRACE ID=STEP_NBR,                                           +
               RDATA1=R2
         L     R1,A_MSG_105
         MVC   0(MSG_105_L,R8),0(R1)
         USING MSG_105,R8
         CVD   R2,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_105_NUMBER,COMM_DWORD+5
MAIN111A DS    0H
         CLI   MSG_105_NUMBER,C' '            BLANK?
         BNE   MAIN111B                       NO
         MVC   MSG_105_NUMBER(L'MSG_105_NUMBER-1),MSG_105_NUMBER+1
         MVI   MSG_105_NUMBER+(L'MSG_105_NUMBER-1),C' '
         B     MAIN111A
MAIN111B DS    0H
         MVC   MSG_105_NAME,SMF30STM          STEP NAME
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_106
         MVC   0(MSG_106_L,R8),0(R1)
         USING MSG_106,R8
         MVC   MSG_106_PROGRAM,SMF30PGM       PROGRAM NAME
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

MAIN1120 DS    0H
         ITRACE ID=STRTSTOP
         OC    SMF30STD(3),SMF30STD           1ST 3 BYTES ZERO?
         BZ    MAIN1130                       YES

         L     R1,A_MSG_107
         MVC   0(MSG_107_L,R8),0(R1)
         USING MSG_107,R8
         MVC   WORK_DATE,SMF30STD
         AP    WORK_DATE,P1900000             ADD CENTURY
         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2
         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE
         MVC   MSG_107_DATE,WORK_B+1
         ICM   R1,15,SMF30PPS                 START TIME
         BAL   R15,TIME0000
         MVC   MSG_107_TIME,WORK_C            COPY EDITED TIME
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_108
         MVC   0(MSG_108_L,R8),0(R1)
         USING MSG_108,R8
         MVC   WORK_DATE,SMF30RED
         AP    WORK_DATE,P1900000             ADD CENTURY
         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2
         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE
         MVC   MSG_108_DATE,WORK_B+1
         ICM   R1,15,SMF30RET                 ENDING TIME
         BAL   R15,TIME0000
         MVC   MSG_108_TIME,WORK_C            COPY EDITED TIME
         DROP  R4,R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0
MAIN1130 DS    0H
         ITRACE ID=NEXT_ID,                                            +
               RDATA1=R4,                                              +
               RDATA2=R5
         AH    R4,SMF30ILN                    PLUS LENGTH
         BCT   R5,MAIN1110                    LOOP
         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process I/O activity sections                                *
*---------------------------------------------------------------------*
MAIN1140 DS    0H
         SR    R5,R5
         ICM   R5,3,SMF30UON                  NUMBER OF I/O SECTIONS
         BZ    MAIN1160
         ITRACE ID=IO_SECT,                                            +
               RDATA1=R5
         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
         L     R1,A_MSG_109
         MVC   0(MSG_109_L,R8),0(R1)
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         ICM   R4,15,SMF30UOF                 OFFSET TO I/O SECTION
         AR    R4,R7
         SH    R4,H4
         USING SMF30URA,R4
MAIN1150 DS    0H
         ITRACE ID=PROC_IO,                                            +
               RDATA1=R4,                                              +
               RDATA2=R5
         L     R1,A_MSG_110
         MVC   0(MSG_110_L,R8),0(R1)
         USING MSG_110,R8
         L     R1,SMF30INP                    NUMBER OF CARD IMAGES
         BAL   R14,NBR0000
         MVC   MSG_110_CARDS,WORK_EDITWORD
         L     R1,SMF30TEP                    TOTAL I/O'S
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_110_EXCPS,WORK_EDITWORD
         L     R1,SMF30TPT                    NUMBER OF TPUTS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_110_TPUTS,WORK_EDITWORD
         L     R1,SMF30TGT                    NUMBER OF TGETS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_110_TGETS,WORK_EDITWORD
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R6,0
         BCT   R5,MAIN1150
         DROP  R4,R8
*---------------------------------------------------------------------*
*        Process completion section(s)                                *
*---------------------------------------------------------------------*
MAIN1160 DS    0H
         SR    R5,R5
         ICM   R5,3,SMF30TON                  NBR OF SECTIONS
         BZ    EXIT0000
         ITRACE ID=COMPSECT,                                           +
               RDATA1=R5
         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
         L     R1,A_MSG_111
         MVC   0(MSG_111_L,R8),0(R1)
         A     R8,SPF_VWIDTH
         BCTR  R6,0
         ICM   R4,15,SMF30TOF                 OFFSET TO SECTION
         AR    R4,R7
         SH    R4,H4
         USING SMF30SCC,R4
MAIN1170 DS    0H
         ITRACE ID=PROCCOMP,                                           +
               RDATA1=R4,                                              +
               RDATA2=R5
         L     R1,A_MSG_112
         MVC   0(MSG_112_L,R8),0(R1)
         USING MSG_112,R8
         UNPK  WORK_UNPACK(5),SMF30SCC(3)
         TR    WORK_UNPACK(4),COMM_HEXCHAR
         MVC   MSG_112_CC,WORK_UNPACK+1
         TM    SMF30SCC,X'80'                 USER ABEND?
         BO    MAIN1180                       YES
         TM    SMF30STI,X'80'                 SYSTEM ABEND?
         BO    MAIN1190                       YES
         TM    SMF30STI,X'40'                 CANCELLED BY IEFUJV?
         BO    MAIN1200                       YES
         TM    SMF30STI,X'20'                 CANCELLED BY IEFUJI?
         BO    MAIN1210                       YES
         TM    SMF30STI,X'20'                 CANCELLED BY IEFUSI?
         BO    MAIN1220                       YES
         TM    SMF30STI,X'10'                 CANCELLED BY IEFACTRT?
         BO    MAIN1230                       YES
         B     MAIN1250
MAIN1180 DS    0H
         MVC   MSG_112_STAT(STAT_01L),STAT_01
         B     MAIN1240
MAIN1190 DS    0H
         MVC   MSG_112_STAT(STAT_02L),STAT_02
         B     MAIN1240
MAIN1200 DS    0H
         MVC   MSG_112_STAT(STAT_03L),STAT_03
         B     MAIN1240
MAIN1210 DS    0H
         MVC   MSG_112_STAT(STAT_04L),STAT_04
         B     MAIN1240
MAIN1220 DS    0H
         MVC   MSG_112_STAT(STAT_05L),STAT_05
         B     MAIN1240
MAIN1230 DS    0H
         MVC   MSG_112_STAT(STAT_06L),STAT_06
MAIN1240 DS    0H
         MVI   MSG_112_ATTR,$SCREEN_ATTR_HIGH_RED
MAIN1250 DS    0H
         TM    SMF30STI,X'08'                 TO BE RESTARTED?
         BNO   MAIN1260                       YES
         MVC   MSG_112_RESTART,RESTART
         DROP  R8
MAIN1260 DS    0H
         TM    SMF30SCC,X'80'                 USER ABEND?
         BO    MAIN1270                       YES
         TM    SMF30STI,X'80'                 SYSTEM ABEND?
         BNO   MAIN1280                       NO
MAIN1270 DS    0H
         A     R8,SPF_VWIDTH
         BCTR  R6,0
         L     R1,A_MSG_113
         MVC   0(MSG_113_L,R8),0(R1)
         USING MSG_113,R8
         ICM   R1,15,SMF30ARC                 ABEND REASON
         BAL   R14,NBR0000                    EDIT AND SHIFT IT
         MVC   MSG_113_REASON,WORK_EDITWORD
MAIN1280 DS    0H
         A     R8,SPF_VWIDTH
         BCTR  R6,0
         BCT   R5,MAIN1170
         B     EXIT0000
         DROP  R4,R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN2000 DS    0H
         ITRACE ID=PROCESSOR
         A     R8,SPF_VWIDTH
         BCTR  R6,0
         L     R1,A_MSG_201
         MVC   0(MSG_201_L,R8),0(R1)
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         OC    SMF30CON,SMF30CON             ACCOUNTING SECTION?
         BZ    EXIT0000                      NO
         ICM   R4,15,SMF30COF                OFFSET TO ACCOUNTING
         AR    R4,R7
         SH    R4,H4
         USING SMF30CAS,R4                   DEFINE BASE

         L     R1,A_MSG_202
         MVC   0(MSG_202_L,R8),0(R1)
         USING MSG_202,R8
         SR    R1,R1
         ICM   R1,3,SMF30PTY                  PRIORITY
         CVD   R1,COMM_DWORD
         ED    MSG_202_PRTY,COMM_DWORD+5
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_203
         MVC   0(MSG_203_L,R8),0(R1)
         USING MSG_203,R8
         ICM   R1,15,SMF30CPT                 TCB TIME
         BAL   R15,TIME0000
         MVC   MSG_203_TCB,WORK_C             COPY EDITED TIME
         ICM   R1,15,SMF30CPS                 SRB TIME
         BAL   R15,TIME0000
         MVC   MSG_203_SRB,WORK_C             COPY EDITED TIME
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_204
         MVC   0(MSG_204_L,R8),0(R1)
         USING MSG_204,R8
         ICM   R1,15,SMF30ICU                 TCB TIME
         BAL   R15,TIME0000
         MVC   MSG_204_TCB,WORK_C             COPY EDITED TIME
         ICM   R1,15,SMF30ISB                 SRB TIME
         BAL   R15,TIME0000
         MVC   MSG_204_SRB,WORK_C             COPY EDITED TIME
         SR    R1,R1
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_205
         MVC   0(MSG_205_L,R8),0(R1)
         USING MSG_205,R8
         ICM   R1,15,SMF30JVU                 STEP VECTOR TIME
         BAL   R15,TIME0000
         MVC   MSG_205_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_206
         MVC   0(MSG_206_L,R8),0(R1)
         USING MSG_206,R8
         ICM   R1,15,SMF30IVU                 INITIATOR VECTOR TIME
         BAL   R15,TIME0000
         MVC   MSG_206_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_207
         MVC   0(MSG_207_L,R8),0(R1)
         USING MSG_207,R8
         ICM   R1,15,SMF30JVA                 STEP VECTOR AFFINITY TIME
         BAL   R15,TIME0000
         MVC   MSG_207_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_208
         MVC   0(MSG_208_L,R8),0(R1)
         USING MSG_208,R8
         ICM   R1,15,SMF30IVA                 INITIATOR VECTOR AFF TIME
         BAL   R15,TIME0000
         MVC   MSG_208_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_209
         MVC   0(MSG_209_L,R8),0(R1)
         USING MSG_209,R8
         ICM   R1,15,SMF30IIP                 TIME FOR I/O INTERRUPTS
         BAL   R15,TIME0000
         MVC   MSG_209_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_210
         MVC   0(MSG_210_L,R8),0(R1)
         USING MSG_210,R8
         ICM   R1,15,SMF30RCT                 TIME BY REGION CNTL TASK
         BAL   R15,TIME0000
         MVC   MSG_210_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0
         A     R8,SPF_VWIDTH
         BCTR  R6,R0

         L     R1,A_MSG_211
         MVC   0(MSG_211_L,R8),0(R1)
         USING MSG_211,R8
         MVC   WORK_DATE,SMF30IDT
         AP    WORK_DATE,P1900000
         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2
         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE
         MVC   MSG_211_DATE,WORK_B+1
         ICM   R1,15,SMF30IST
         BAL   R15,TIME0000
         MVC   MSG_211_TIME,WORK_C
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,R0
         DROP  R4
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN3000 DS    0H
         ITRACE ID=EXCP,                                               +
               DATA1=(SMF30EON,4)
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_301
         MVC   0(MSG_301_L,R8),0(R1)
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         SR    R5,R5
         ICM   R5,3,SMF30EON                  NUMBER OF EXCP SECTIONS
         BZ    EXIT0000                       NONE
         ICM   R4,15,SMF30EOF                 OFFSET TO EXCP DATA
         AR    R4,R7                          PLUS BASE
         SH    R4,H4                          MINUS LENGTH OF RDW
         USING SMF30EXP,R4
MAIN3010 DS    0H
         L     R1,A_MSG_302
         MVC   0(MSG_302_L,R8),0(R1)
         USING MSG_302,R8
         UNPK  WORK_A(5),SMF30CUA(3)          UNPACK DEVICE NUMBER
         TR    WORK_A(4),COMM_HEXCHAR         TRANSLATE
         MVC   MSG_302_CUA,WORK_A             COPY DEVICE TO BUFFER
         MVC   MSG_302_DD,SMF30DDN            COPY DD NAME
         ICM   R1,15,SMF30BLK                 NUMBER OF EXCP'S
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_302_EXCP,COMM_DWORD+2
         ICM   R1,15,SMF30DCT                 CONNECT TIME
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_302_CONNECT,COMM_DWORD+2
         DROP  R8
         A     R8,SPF_VWIDTH
         BCT   R6,MAIN3020
         B     EXIT0000
MAIN3020 DS    0H
         AH    R4,SMF30ELN                    NEXT EXCP SECTION
         BCT   R5,MAIN3010
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN4000 DS    0H
         ITRACE ID=STORPAGE,                                           +
               DATA1=(SMF30RON,4)
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_401
         MVC   0(MSG_401_L,R8),0(R1)
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         SR    R5,R5
         ICM   R5,3,SMF30RON                  STORAGE/PAGING SECTIONS
         BZ    EXIT0000                       NONE
         ICM   R4,15,SMF30ROF                 OFFSET
         AR    R4,R7                          PLUS BASE
         SH    R4,H4                          MINUS LENGTH OF RDW
         USING SMF30SAP,R4
MAIN4010 DS    0H
         L     R1,A_MSG_402
         MVC   0(MSG_402_L,R8),0(R1)
         USING MSG_402,R8
         TM    SMF30SFL,X'80'                 V=R?
         BNO   MAIN4020                       NO
         MVI   MSG_402_VR,C'Y'
MAIN4020 DS    0H
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_403
         MVC   0(MSG_403_L,R8),0(R1)
         USING MSG_403,R8
         TM    SMF30SFL,X'40'                 LIMIT CHANGED BY IEFUSI?
         BNO   MAIN4030                       NO
         MVI   MSG_403_USI,C'Y'
         DROP  R8
MAIN4030 DS    0H
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_404
         MVC   0(MSG_404_L,R8),0(R1)
         USING MSG_404,R8
         UNPK  MSG_404_KEY(1),SMF30SPK(1)     UNPACK PROTECT KEY
         OI    MSG_404_KEY,X'F0'              FORCE HIGH BYTE TO X'F'
         TR    WORK_A,COMM_HEXCHAR            TRANSLATE
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_405
         MVC   0(MSG_405_L,R8),0(R1)
         USING MSG_405,R8
         SR    R1,R1
         ICM   R1,3,SMF30PRV                  LARGEST SIZE FROM BOTTOM
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_405_SIZE,COMM_DWORD+3
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_406
         MVC   0(MSG_406_L,R8),0(R1)
         USING MSG_406,R8
         SR    R1,R1
         ICM   R1,3,SMF30SYS                  LARGEST SIZE FROM BOTTOM
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_406_SIZE,COMM_DWORD+3
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_407
         MVC   0(MSG_407_L,R8),0(R1)
         USING MSG_407,R8
         ICM   R1,15,SMF30PGI                 PAGE-INS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_407_PAGING(15),WORK_EDITWORD
         ICM   R1,15,SMF30PGO                 PAGE-OUTS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         LA    R1,MSG_407_PAGING
MAIN4040 DS    0H
         CLI   0(R1),C' '                     BLANK?
         BE    MAIN4050                       YES
         LA    R1,1(,R1)                      NEXT
         B     MAIN4040
MAIN4050 DS    0H
         MVI   0(R1),C'/'
         MVC   1(10,R1),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_408
         MVC   0(MSG_408_L,R8),0(R1)
         USING MSG_408,R8
         ICM   R1,15,SMF30PSI                 PAGES IN
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_408_PAGES(15),WORK_EDITWORD
         ICM   R1,15,SMF30PSO                 PAGES OUT
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         LA    R1,MSG_408_PAGES
MAIN4060 DS    0H
         CLI   0(R1),C' '                     BLANK?
         BE    MAIN4070                       YES
         LA    R1,1(,R1)                      NEXT
         B     MAIN4060
MAIN4070 DS    0H
         MVI   0(R1),C'/'
         MVC   1(15,R1),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_409
         MVC   0(MSG_409_L,R8),0(R1)
         USING MSG_409,R8
         ICM   R1,15,SMF30VPI                 PAGES IN
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_409_PAGES(15),WORK_EDITWORD
         ICM   R1,15,SMF30VPO                 PAGES OUT
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         LA    R1,MSG_409_PAGES
MAIN4080 DS    0H
         CLI   0(R1),C' '                     BLANK?
         BE    MAIN4090                       YES
         LA    R1,1(,R1)                      NEXT
         B     MAIN4080
MAIN4090 DS    0H
         MVI   0(R1),C'/'
         MVC   1(10,R1),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_410
         MVC   0(MSG_410_L,R8),0(R1)
         USING MSG_410,R8
         ICM   R1,15,SMF30CPI                 PAGE INs
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_410_PAGES(15),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_411
         MVC   0(MSG_411_L,R8),0(R1)
         USING MSG_411,R8
         ICM   R1,15,SMF30LPI                 PAGE INs
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_411_PAGES(15),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_412
         MVC   0(MSG_412_L,R8),0(R1)
         USING MSG_412,R8
         ICM   R1,15,SMF30PST                 PAGE INs
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_412_PAGES(15),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_413
         MVC   0(MSG_413_L,R8),0(R1)
         USING MSG_413,R8
         ICM   R1,15,SMF30RGB                 SIZE BELOW
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_413_SIZE(15),WORK_EDITWORD
         ICM   R1,15,SMF30ERG                 SIZE ABOVE
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         LA    R1,MSG_413_SIZE
MAIN4100 DS    0H
         CLI   0(R1),C' '                     BLANK?
         BE    MAIN4110                       YES
         LA    R1,1(,R1)                      NEXT
         B     MAIN4100
MAIN4110 DS    0H
         MVI   0(R1),C'/'
         MVC   1(10,R1),WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         B     EXIT0000

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN5000 DS    0H
         ITRACE ID=PERFPAGE,                                           +
               DATA1=(SMF30PON,4)

         A     R8,SPF_VWIDTH
         BCTR  R6,0
         L     R1,A_MSG_501
         MVC   0(MSG_501_L,R8),0(R1)
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         OC    SMF30PON,SMF30PON
         BZ    EXIT0000
         ICM   R4,15,SMF30POF                 OFFSET TO PERFORMANCE
         AR    R4,R7                          PLUS BASE
         SH    R4,H4                          MINUS LENGTH OF RDW
         USING SMF30PRF,R4

         L     R1,A_MSG_502
         MVC   0(MSG_502_L,R8),0(R1)
         USING MSG_502,R8
         ICM   R1,15,SMF30SRV                 TOTAL SERVICE UNITS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_502_UNITS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_503
         MVC   0(MSG_503_L,R8),0(R1)
         USING MSG_503,R8
         ICM   R1,15,SMF30CSU                 CPU SERVICE UNITS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_503_UNITS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_504
         MVC   0(MSG_504_L,R8),0(R1)
         USING MSG_504,R8
         ICM   R1,15,SMF30SRB                 SRB SERVICE UNITS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_504_UNITS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_505
         MVC   0(MSG_505_L,R8),0(R1)
         USING MSG_505,R8
         ICM   R1,15,SMF30IO                  IO SERVICE UNITS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_505_UNITS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_506
         MVC   0(MSG_506_L,R8),0(R1)
         USING MSG_506,R8
         ICM   R1,15,SMF30MSO                 MSO SERVICE UNITS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_506_UNITS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_507
         MVC   0(MSG_507_L,R8),0(R1)
         USING MSG_507,R8
         ICM   R1,15,SMF30TAT                 TRANSACTION ACTIVE TIME
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_507_TIME,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_508
         MVC   0(MSG_508_L,R8),0(R1)
         USING MSG_508,R8
         ICM   R1,15,SMF30RES                 RESIDENCY TIME
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_508_TIME,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_509
         MVC   0(MSG_509_L,R8),0(R1)
         USING MSG_509,R8
         ICM   R1,15,SMF30TRS                 TRANSACTIONS
         BAL   R14,NBR0000                    CONVERT TO DECIMAL
         MVC   MSG_509_TRANS,WORK_EDITWORD
         DROP  R8

         B     EXIT0000

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN6000 DS    0H
         ITRACE ID=OPERPAGE,                                           +
               DATA1=(SMF30OON,4)
         A     R8,SPF_VWIDTH
         BCTR  R6,0
         L     R1,A_MSG_601
         MVC   0(MSG_601_L,R8),0(R1)
         OC    SMF30OON,SMF30OON
         BZ    EXIT0000
         ICM   R4,15,SMF30OOF                 OFFSET TO SECTION
         AR    R4,R7                          PLUS BASE
         SH    R4,H4                          MINUS LENGTH OF RDW
         USING SMF30OPS,R4
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_602
         MVC   0(MSG_602_L,R8),0(R1)
         USING MSG_602,R8
         ICM   R1,15,SMF30PDM                 NON SPECIFIC DASD MOUNTS
         BAL   R14,NBR0000                    CONVERT NUMBER
         MVC   MSG_602_MOUNTS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_603
         MVC   0(MSG_603_L,R8),0(R1)
         USING MSG_603,R8
         ICM   R1,15,SMF30PRD                 SPECIFIC DASD MOUNTS
         BAL   R14,NBR0000                    CONVERT NUMBER
         MVC   MSG_603_MOUNTS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_604
         MVC   0(MSG_604_L,R8),0(R1)
         USING MSG_604,R8
         ICM   R1,15,SMF30PTM                 NON SPECIFIC TAPE MOUNTS
         BAL   R14,NBR0000                    CONVERT NUMBER
         MVC   MSG_604_MOUNTS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_605
         MVC   0(MSG_605_L,R8),0(R1)
         USING MSG_605,R8
         ICM   R1,15,SMF30TPR                 SPECIFIC TAPE MOUNTS
         BAL   R14,NBR0000                    CONVERT NUMBER
         MVC   MSG_605_MOUNTS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_606
         MVC   0(MSG_606_L,R8),0(R1)
         USING MSG_606,R8
         ICM   R1,15,SMF30MTM                 NON SPECIFIC MSS MOUNTS
         BAL   R14,NBR0000                    CONVERT NUMBER
         MVC   MSG_606_MOUNTS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         L     R1,A_MSG_607
         MVC   0(MSG_607_L,R8),0(R1)
         USING MSG_607,R8
         ICM   R1,15,SMF30MSR                 SPECIFIC MSS MOUNTS
         BAL   R14,NBR0000                    CONVERT NUMBER
         MVC   MSG_607_MOUNTS,WORK_EDITWORD
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NBR0000  DS    0H
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_EDITWORD,EDITWORD
         ED    WORK_EDITWORD,COMM_DWORD
         LA    R1,L'WORK_EDITWORD-1
NBR0010  DS    0H
         CLI   WORK_EDITWORD,C'0'
         BNER  R14
         MVC   WORK_EDITWORD(L'WORK_EDITWORD-1),WORK_EDITWORD+1
         MVI   WORK_EDITWORD+L'WORK_EDITWORD-1,C' '
         BCT   R1,NBR0010
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TIME0000 DS    0H
         SR    R0,R0
         D     R0,F100                        CONVERT TO WHOLE SECONDS
         SR    R0,R0                          CLEAR REMAINDER
         D     R0,F3600                       COMPUTE HOURS
         CVD   R1,COMM_DWORD                  CONVERT HOURS TO DECIMAL
         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   WORK_C+0(2),WORK_B+2           COPY HOURS
         MVI   WORK_C+2,C':'                  INSERT COLON
         LR    R1,R0                          COPY REMAINDER
         SR    R0,R0                          CLEAR R0
         D     R0,F60                         COMPUTE MINUTES
         CVD   R1,COMM_DWORD                  CONVERT MINUTES
         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   WORK_C+3(2),WORK_B+2           COPY MINUTES
         MVI   WORK_C+5,C':'                  INSERT COLON
         CVD   R0,COMM_DWORD                  CONVERT SECONDS
         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1
         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   WORK_C+6(2),WORK_B+2           COPY SECONDS
         BR    R15
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
ERR0010  DS    0H
         ITRACE ID=BAD_SCRN,                                           +
               RDATA1=R1
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)                   RESTORE R14
         SR    R15,R15                        SET RC
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(WK0030)

A_MSG_101      DC    A(MSG_101)
A_MSG_102      DC    A(MSG_102)
A_MSG_103      DC    A(MSG_103)
A_MSG_104      DC    A(MSG_104)
A_MSG_105      DC    A(MSG_105)
A_MSG_106      DC    A(MSG_106)
A_MSG_107      DC    A(MSG_107)
A_MSG_108      DC    A(MSG_108)
A_MSG_109      DC    A(MSG_109)
A_MSG_110      DC    A(MSG_110)
A_MSG_111      DC    A(MSG_111)
A_MSG_112      DC    A(MSG_112)
A_MSG_113      DC    A(MSG_113)

A_MSG_201      DC    A(MSG_201)
A_MSG_202      DC    A(MSG_202)
A_MSG_203      DC    A(MSG_203)
A_MSG_204      DC    A(MSG_204)
A_MSG_205      DC    A(MSG_205)
A_MSG_206      DC    A(MSG_206)
A_MSG_207      DC    A(MSG_207)
A_MSG_208      DC    A(MSG_208)
A_MSG_209      DC    A(MSG_209)
A_MSG_210      DC    A(MSG_210)
A_MSG_211      DC    A(MSG_211)

A_MSG_301      DC    A(MSG_301)
A_MSG_302      DC    A(MSG_302)

A_MSG_401      DC    A(MSG_401)
A_MSG_402      DC    A(MSG_402)
A_MSG_403      DC    A(MSG_403)
A_MSG_404      DC    A(MSG_404)
A_MSG_405      DC    A(MSG_405)
A_MSG_406      DC    A(MSG_406)
A_MSG_407      DC    A(MSG_407)
A_MSG_408      DC    A(MSG_408)
A_MSG_409      DC    A(MSG_409)
A_MSG_410      DC    A(MSG_410)
A_MSG_411      DC    A(MSG_411)
A_MSG_412      DC    A(MSG_412)
A_MSG_413      DC    A(MSG_413)

A_MSG_501      DC    A(MSG_501)
A_MSG_502      DC    A(MSG_502)
A_MSG_503      DC    A(MSG_503)
A_MSG_504      DC    A(MSG_504)
A_MSG_505      DC    A(MSG_505)
A_MSG_506      DC    A(MSG_506)
A_MSG_507      DC    A(MSG_507)
A_MSG_508      DC    A(MSG_508)
A_MSG_509      DC    A(MSG_509)

A_MSG_601      DC    A(MSG_601)
A_MSG_602      DC    A(MSG_602)
A_MSG_603      DC    A(MSG_603)
A_MSG_604      DC    A(MSG_604)
A_MSG_605      DC    A(MSG_605)
A_MSG_606      DC    A(MSG_606)
A_MSG_607      DC    A(MSG_607)

F60            DC    F'60'
F100           DC    F'100'
F3600          DC    F'3600'

H4             DC    H'4'
H6             DC    H'6'

P1900000       DC  P'1900000'

EDITWORD       DC    X'F0202020202020202020202020202020'

EDIT_WORD_1    DC  X'F0212020'
EDIT_WORD_2    DC  X'F0212020204B202020'

TYPE_UNKNOWN   DC    CL20'Unknown'
TYPE_JOB_START DC    CL20'JOB start'
TYPE_INTERVAL  DC    CL20'Interval'
TYPE_STEP_TERM DC    CL20'Step termination'
TYPE_STEP_TOTAL DC   CL20'Step total'
TYPE_JOB_TERM  DC    CL20'Job termination'
TYPE_SYSTEM    DC    CL20'System address space'

STAT_01        DC    CL30'User abend'
STAT_01L       EQU   *-STAT_01
STAT_02        DC    CL30'System abend'
STAT_02L       EQU   *-STAT_02
STAT_03        DC    CL30'Cancelled by IEFUJV'
STAT_03L       EQU   *-STAT_03
STAT_04        DC    CL30'Cancelled by IEFUJI'
STAT_04L       EQU   *-STAT_04
STAT_05        DC    CL30'Cancelled by IEFUSI'
STAT_05L       EQU   *-STAT_05
STAT_06        DC    CL30'Cancelled by IEFACTRT'
STAT_06L       EQU   *-STAT_06

RESTART        DC    C'Restart'

MSG_101        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    28C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Subsystem section(s)'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    27C'-'
               DC    C'>'
MSG_101_L      EQU   *-MSG_101

MSG_102        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Subsystem:'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_102_NAME   DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Type'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_102_TYPE   DC    CL20' '
MSG_102_L      EQU   *-MSG_102

MSG_103        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    25C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Identification section(s)'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    25C'-'
               DC    C'>'
MSG_103_L      EQU   *-MSG_103

MSG_104        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Job name'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_104_JOB    DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  User ID'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_104_USER   DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Group'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_104_GROUP  DC    CL8' '
MSG_104_L      EQU   *-MSG_104

MSG_105        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Step    '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_105_NUMBER DC    X'402020202120'
               DC    C'  '
MSG_105_NAME   DC    CL8' '
MSG_105_L      EQU   *-MSG_105

MSG_106        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Program '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_106_PROGRAM DC   CL8' '
MSG_106_L      EQU   *-MSG_106

MSG_107        DS    0H
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Start   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_107_DATE   DC    CL8' '
               DC    C' '
MSG_107_TIME   DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
MSG_107_L      EQU   *-MSG_107

MSG_108        DS    0H
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Stop    '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_108_DATE   DC    CL8' '
               DC    C' '
MSG_108_TIME   DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
MSG_108_L      EQU   *-MSG_108

MSG_109        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    26C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'I/O activity section(s)'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    26C'-'
               DC    C'>'
MSG_109_L      EQU   *-MSG_109

MSG_110        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Cards'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_110_CARDS  DC    X'402020202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Total EXCPs'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_110_EXCPS  DC    X'40202020202020202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'   TPUTs/TGETs'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_110_TPUTS  DC    X'40202020202020202120'
               DC    C' '
MSG_110_TGETS  DC    X'40202020202020202120'
MSG_110_L      EQU   *-MSG_110

MSG_111        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    29C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Completion section'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    28C'-'
               DC    C'>'
MSG_111_L      EQU   *-MSG_111

MSG_112        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Completion code'
MSG_112_ATTR   DC    AL1($SCREEN_ATTR_HIGH_GREEN)
MSG_112_CC     DC    CL3' '
               DC    C'   '
MSG_112_STAT   DC    CL30' '
               DC    C'  '
MSG_112_RESTART DC   CL7' '
MSG_112_L      EQU   *-MSG_112

MSG_113        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Abend reason   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_113_REASON DC    X'F020202020202120'
MSG_113_L      EQU   *-MSG_113

MSG_201        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    C'<'
               DC    27C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Processor accounting'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    27C'-'
               DC    C'>'
MSG_201_L      EQU   *-MSG_201

MSG_202        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Priority                        '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_202_PRTY   DC    X'402020202120'
MSG_202_L      EQU   *-MSG_202

MSG_203        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'STEP TCB time                 '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_203_TCB    DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'   SRB time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_203_SRB    DC    CL8' '
MSG_203_L      EQU   *-MSG_203

MSG_204        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'INIT TCB time                 '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_204_TCB    DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'   SRB time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_204_SRB    DC    CL8' '
MSG_204_L      EQU   *-MSG_204

MSG_205        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Step vector time              '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_205_TIME   DC    CL8' '
MSG_205_L      EQU   *-MSG_205

MSG_206        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Initiator vector time         '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_206_TIME   DC    CL8' '
MSG_206_L      EQU   *-MSG_206

MSG_207        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Step vector affinity time     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_207_TIME   DC    CL8' '
MSG_207_L      EQU   *-MSG_207

MSG_208        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Initiator vector affinity time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_208_TIME   DC    CL8' '
MSG_208_L      EQU   *-MSG_208

MSG_209        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Time used for I/O interrupts  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_209_TIME   DC    CL8' '
MSG_209_L      EQU   *-MSG_209

MSG_210        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Time used by RCT              '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_210_TIME   DC    CL8' '
MSG_210_L      EQU   *-MSG_210

MSG_211        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Interval start for subtype 2 and 3'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_211_DATE   DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_211_TIME   DC    CL8' '
MSG_211_L      EQU   *-MSG_211

MSG_301        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    C'<'
               DC    31C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'EXCP section'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    31C'-'
               DC    C'>'
MSG_301_L      EQU   *-MSG_301

MSG_302        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Device'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_302_CUA    DC    CL4' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C' DD name'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_302_DD     DC    CL8' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C' IO''s'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_302_EXCP   DC    X'40206B2020206B2020206B202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C' Connect time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_302_CONNECT DC   X'40206B2020206B2020206B202120'
MSG_302_L      EQU   *-MSG_302

MSG_401        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    C'<'
               DC    24C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Storage and paging section'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    24C'-'
               DC    C'>'
MSG_401_L      EQU   *-MSG_401

MSG_402        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'V=R                           '
               DC    CL11' '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_402_VR     DC    C'N'
MSG_402_L      EQU   *-MSG_402


MSG_403        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'User area limited by IEFUSI?  '
               DC    CL11' '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_403_USI    DC    C'N'
MSG_403_L      EQU   *-MSG_403

MSG_404        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Storage protect key           '
               DC    CL11' '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_404_KEY    DC    C' '
MSG_404_L      EQU   *-MSG_404

MSG_405        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Largest from bottom of private'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_405_SIZE   DC    X'402020206B2020206B202120'
               DC    C'K'
MSG_405_L      EQU   *-MSG_405

MSG_406        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Largest from top of private   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_406_SIZE   DC    X'402020206B2020206B202120'
               DC    C'K'
MSG_406_L      EQU   *-MSG_406

MSG_407        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Page INs/Page OUTs to/from AUX'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_407_PAGING DC    CL30' '
MSG_407_L      EQU   *-MSG_407

MSG_408        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Pages SWAPed in/out           '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_408_PAGES  DC    CL30' '
MSG_408_L      EQU   *-MSG_408

MSG_409        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'PAGE INs/PAGE OUTs to VIO     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_409_PAGES  DC    CL30' '
MSG_409_L      EQU   *-MSG_409

MSG_410        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Common area PAGE INs          '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_410_PAGES  DC    CL30' '
MSG_410_L      EQU   *-MSG_410

MSG_411        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'LPA PAGE INs                  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_411_PAGES  DC    CL30' '
MSG_411_L      EQU   *-MSG_411

MSG_412        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Pages stolen from addr space  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_412_PAGES  DC    CL30' '
MSG_412_L      EQU   *-MSG_412

MSG_413        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Private area size below/above '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_413_SIZE   DC    CL30' '
MSG_413_L      EQU   *-MSG_413

MSG_501        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    C'<'
               DC    28C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Performance section'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    27C'-'
               DC    C'>'
MSG_501_L      EQU   *-MSG_501

MSG_502        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Total service units           '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_502_UNITS  DC    CL15' '
MSG_502_L      EQU   *-MSG_502

MSG_503        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'CPU service units             '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_503_UNITS  DC    CL15' '
MSG_503_L      EQU   *-MSG_503

MSG_504        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'SRB service units             '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_504_UNITS  DC    CL15' '
MSG_504_L      EQU   *-MSG_504

MSG_505        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'I/O service units             '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_505_UNITS  DC    CL15' '
MSG_505_L      EQU   *-MSG_505

MSG_506        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'MSO service units             '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_506_UNITS  DC    CL15' '
MSG_506_L      EQU   *-MSG_506

MSG_507        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Transaction time (1024 usec)  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_507_TIME   DC    CL15' '
MSG_507_L      EQU   *-MSG_507

MSG_508        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Residence time (1024 usec)    '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_508_TIME   DC    CL15' '
MSG_508_L      EQU   *-MSG_508

MSG_509        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Transactions                  '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_509_TRANS  DC    CL15' '
MSG_509_L      EQU   *-MSG_509

MSG_601        DS    0C
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    C'<'
               DC    29C'-'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Operator section'
               DC    AL1($SCREEN_ATTR_NORMAL)
               DC    30C'-'
MSG_601_L      EQU   *-MSG_601

MSG_602        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Non specific DASD mounts      '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_602_MOUNTS DC    CL15' '
MSG_602_L      EQU   *-MSG_602

MSG_603        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Specific DASD mounts          '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_603_MOUNTS DC    CL15' '
MSG_603_L      EQU   *-MSG_603

MSG_604        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Non specific TAPE mounts      '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_604_MOUNTS DC    CL15' '
MSG_604_L      EQU   *-MSG_604

MSG_605        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Specific TAPE mounts          '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_605_MOUNTS DC    CL15' '
MSG_605_L      EQU   *-MSG_605

MSG_606        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Non specific MSS mounts       '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_606_MOUNTS DC    CL15' '
MSG_606_L      EQU   *-MSG_606

MSG_607        DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Specific MSS mounts           '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_607_MOUNTS DC    CL15' '
MSG_607_L      EQU   *-MSG_607

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0030         DSECT
               COPY     DXDPREF
WORK_UNPACK    DS       XL8
WORK_A         DS       CL80
WORK_B         DS       CL80
WORK_C         DS       CL80
WORK_DATE      DS       PL4
WORK_EDITWORD  DS       XL16
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               IFASMFR 30
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY REGEQU
               END  SMF0030
