*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 5  (Job termination)                 *
*                                                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0005  CSECT
SMF0005  AMODE 31
SMF0005  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING SMF0005,R15
         USING OSSPFD,R9
         B     INIT0000
MODID    DC    CL8'SMF0005'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)       SAVE REGS
         LR    R10,R15               COPY ENTRY POINT
         USING SMF0005,R10           DEFINE BASE
         DROP  R15
         L     R1,SESS_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)             SAVE R13
         ST    R1,8(R13)             CHAIN SAVE AREA
         LR    R13,R1                COPY WORK AREA ADDRESS
         USING WK0005,R13            DEFINE BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0010 DS    0H
         USING SMF5FLG,R7
         A     R8,SPF_VWIDTH              LEAVE A BLANK LINE
         BCTR  R6,0

         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8
         MVC   MSG_01_JBN,SMF5JBN         COPY JOB NAME
         SR    R1,R1                      CLEAR R1
         IC    R1,SMF5NST                 NUMBER OF STEPS
         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_01_NST,COMM_DWORD+6    EDIT NUMBER OF STEPS
         MVC   MSG_01_UIF,SMF5UIF         COPY USER
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
         DROP  R8
* ------------------------------------------------------------------- *
*        Process reader start date/time                               *
* ------------------------------------------------------------------- *
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8                  DEFINE BASE
         MVC   DXD_DATE,SMF5RSD           COPY DATE
         AP    DXD_DATE,P1900000          ADD CENTURY
         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2
         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE
         MVC   MSG_02_RSD,DXD_A+1         COPY READER START DATE
         ICM   R1,15,SMF5RST              READER START TIME
         BAL   R15,TIME0000               CONVERT TIME
         MVC   MSG_02_RST,DXD_B           COPY READER START TIME
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
         DROP  R8
* ------------------------------------------------------------------- *
*        Process initiator start date/time                            *
* ------------------------------------------------------------------- *
         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8                  DEFINE BASE
         MVC   DXD_DATE,SMF5JID           COPY DATE
         AP    DXD_DATE,P1900000           ADD CENTURY
         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2
         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE
         MVC   MSG_03_JID,DXD_A+1         COPY INITIATOR START DATE
         ICM   R1,15,SMF5JIT              INITIATOR START TIME
         BAL   R15,TIME0000               CONVERT TIME
         MVC   MSG_03_JIT,DXD_B           COPY INITIATOR END TIME
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
         DROP  R8
* ------------------------------------------------------------------- *
*        Process reader end date/time                                 *
* ------------------------------------------------------------------- *
         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8                  DEFINE BASE
         MVC   DXD_DATE,SMF5RSTD          COPY DATE
         AP    DXD_DATE,P1900000          ADD CENTURY
         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2
         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE
         MVC   MSG_04_RSTD,DXD_A+1        COPY DATE
         ICM   R1,15,SMF5RSTT             READER END TIME
         BAL   R15,TIME0000               CONVERT TIME
         MVC   MSG_04_RSTT,DXD_B          COPY READER END TIME
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
         DROP  R8
* ------------------------------------------------------------------- *
*        Process Job completion code                                  *
* ------------------------------------------------------------------- *
         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8                  DEFINE BASE
         UNPK  DXD_A(5),SMF5JCC(3)        UNPACK COMPLETION CODE
         TR    DXD_A(4),COMM_HEXCHAR      TRANSLATE
         TM    SMF5JBTI,X'02'             ABEND?
         BO    MAIN0020                   YES
         MVC   MSG_05_CC(3),DXD_A+1       USER COMPLETION CODE
         B     MAIN0040
MAIN0020 DS    0H
         MVI   MSG_05_ATTR,$SCREEN_ATTR_HIGH_RED
         TM    SMF5JCC,X'80'              SYSTEM ABEND?
         BO    MAIN0030                   YES
         MVC   MSG_05_CC(4),=C'USER'      INDICATE USER ABEND
         MVC   MSG_05_CC+5(3),DXD_A+1     ABEND CODE
         B     MAIN0040
MAIN0030 DS    0H
         MVC   MSG_05_CC(6),=C'SYSTEM'    INDICATE SYSTEM ABEND
         MVC   MSG_05_CC+7(3),DXD_A+1     ABEND CODE
MAIN0040 DS    0H
         TM    SMF5JBTI,X'40'             CANCELLED BY IEFUJV?
         BO    MAIN0050
         TM    SMF5JBTI,X'20'             CANCELLED BY IEFUJI?
         BO    MAIN0060
         TM    SMF5JBTI,X'10'             CANCELLED BY IEFUSI?
         BO    MAIN0070
         TM    SMF5JBTI,X'08'             CANCELLED BY IEFACTRT?
         BO    MAIN0080
         B     MAIN0090
MAIN0050 DS    0H
         MVI   MSG_05_ATTR,$SCREEN_ATTR_HIGH_RED
         MVC   MSG_05_CANCEL,IEFUJV_CANCEL
         B     MAIN0090
MAIN0060 DS    0H
         MVI   MSG_05_ATTR,$SCREEN_ATTR_HIGH_RED
         MVC   MSG_05_CANCEL,IEFUJI_CANCEL
         B     MAIN0090
MAIN0070 DS    0H
         MVI   MSG_05_ATTR,$SCREEN_ATTR_HIGH_RED
         MVC   MSG_05_CANCEL,IEFUSI_CANCEL
         B     MAIN0090
MAIN0080 DS    0H
         MVI   MSG_05_ATTR,$SCREEN_ATTR_HIGH_RED
         MVC   MSG_05_CANCEL,IEFACTRT_CANCEL
MAIN0090 DS    0H
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
* ------------------------------------------------------------------- *
*        Process priority, programmer, and class                      *
* ------------------------------------------------------------------- *
         MVC   0(MSG_06_L,R8),MSG_06
         USING MSG_06,R8                   DEFINE BASE
         SR    R1,R1
         IC    R1,SMF5JPTY                 PRIORITY
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   MSG_06_PRTY,DXD_A+1         COPY PRIORITY
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0

         MVC   0(MSG_07_L,R8),MSG_07
         USING MSG_07,R8                   DEFINE BASE
         MVC   MSG_07_PRGN,SMF5PRGN        COPY PROGRAMMER NAME
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0

         MVC   0(MSG_08_L,R8),MSG_08
         USING MSG_08,R8                   DEFINE BASE
         MVC   MSG_08_JCLASS,SMF5JICL      COPY JOB CLASS
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
* ------------------------------------------------------------------- *
*        Process TCB and SRB CPU time                                 *
* ------------------------------------------------------------------- *
         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8                   DEFINE BASE
         SR    R1,R1
         ICM   R1,7,SMF5JCPU               TCB CPU TIME
         BAL   R15,TIME0000
         MVC   MSG_09_JCPU(8),DXD_B        COPY TCB TIME
         LR    R1,R0                       COPY REMAINDER
         SR    R0,R0                       CLEAR R0
         D     R0,F100                     COMPUTE 100THS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVI   MSG_09_JCPU+8,C'.'          INSERT DECIMAL
         MVC   MSG_09_JCPU+9(2),DXD_A+2    COPY 100THS
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         MVC   0(MSG_10_L,R8),MSG_10
         USING MSG_10,R8                   DEFINE BASE
         SR    R1,R1
         ICM   R1,7,SMF5SRBT               SRB CPU TIME
         BAL   R15,TIME0000
         MVC   MSG_10_SRBT(8),DXD_B        COPY SRB TIME
         LR    R1,R0                       COPY REMAINDER
         SR    R0,R0                       CLEAR R0
         D     R0,F100                     COMPUTE 100THS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVI   MSG_10_SRBT+8,C'.'          INSERT DECIMAL
         MVC   MSG_10_SRBT+9(2),DXD_A+2    COPY 100THS
         DROP  R8
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
TIME0000 DS    0H
         SR    R0,R0
         D     R0,F100               CONVERT TO WHOLE SECONDS
         SR    R0,R0                 CLEAR REMAINDER
         D     R0,F3600              COMPUTE HOURS
         CVD   R1,COMM_DWORD         CONVERT HOURS TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   DXD_B+0(2),DXD_A+2    COPY HOURS
         MVI   DXD_B+2,C':'          INSERT COLON
         LR    R1,R0                 COPY REMAINDER
         SR    R0,R0                 CLEAR R0
         D     R0,F60                COMPUTE MINUTES
         CVD   R1,COMM_DWORD         CONVERT MINUTES TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   DXD_B+3(2),DXD_A+2    COPY MINUTES
         MVI   DXD_B+5,C':'          INSERT COLON
         CVD   R0,COMM_DWORD         CONVERT SECONDS TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   DXD_B+6(2),DXD_A+2    COPY SECONDS
         BR    R15
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         B     EXITEXIT
EXIT0004 DS    0H
         LA    R2,4
EXITEXIT DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)          RESTORE R14
         LR    R15,R2                SET RC
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(WK0005)
F60            DC    F'60'
F100           DC    F'100'
F3600          DC    F'3600'

P1900000       DC    P'1900000'

EDIT_WORD_1    DC    X'F0202020'
EDIT_WORD_2    DC    X'F0202020204B202020'

IEFUJV_CANCEL   DC   CL21'CANCELLED BY IEFUJV'
IEFUJI_CANCEL   DC   CL21'CANCELLED BY IEFUJI'
IEFUSI_CANCEL   DC   CL21'CANCELLED BY IEFUSI'
IEFACTRT_CANCEL DC   CL21'CANCELLED BY IEFACTRT'
VIRTUAL         DC   CL7'VIRTUAL'

MSG_01         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Job name:'
MSG_01_JBN     DC    CL8' '
               DC    C'  NUMBER OF STEPS:'
MSG_01_NST     DC    X'40202120'
               DC    C'  User:'
MSG_01_UIF     DC    CL8' '
MSG_01_L       EQU   *-MSG_01

MSG_02         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Reader start date/time   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_RSD     DC    CL8' '
               DC    C' '
MSG_02_RST     DC    CL8' '
MSG_02_L       EQU   *-MSG_02

MSG_03         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Initiator start date/time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_JID     DC    CL8' '
               DC    C' '
MSG_03_JIT     DC    CL8' '
MSG_03_L       EQU   *-MSG_03

MSG_04         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Reader end date/time     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_RSTD    DC    CL8' '
               DC    C' '
MSG_04_RSTT    DC    CL8' '
MSG_04_L       EQU   *-MSG_04

MSG_05         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Completion               '
MSG_05_ATTR    DC    AL1($SCREEN_ATTR_HIGH_GREEN)
MSG_05_CC      DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
MSG_05_CANCEL  DC    CL21' '
MSG_05_L       EQU   *-MSG_05

MSG_06         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Priority                 '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_PRTY    DC    CL3' '
MSG_06_L       EQU   *-MSG_06

MSG_07         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Programmer:              '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_PRGN    DC    CL20' '
MSG_07_L       EQU   *-MSG_07

MSG_08         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Job Class                '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_08_JCLASS  DC    C' '
MSG_08_L       EQU   *-MSG_08


MSG_09         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'TCB time                 '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_JCPU    DC    CL11' '
MSG_09_L       EQU   *-MSG_09

MSG_10         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'SRB time                 '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_10_SRBT    DC    CL11' '
MSG_10_L       EQU   *-MSG_10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0005         DSECT
               COPY    DXDPREF
DXD_A          DS      CL80
DXD_B          DS      CL80
DXD_DATE       DS      PL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD    DSECT
              IFASMFR  5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY    TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              COPY    REGEQU
              END     SMF0005
