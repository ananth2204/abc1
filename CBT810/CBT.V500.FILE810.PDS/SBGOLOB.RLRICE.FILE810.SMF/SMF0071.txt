*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 70                                   *
*                                                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*       R6     Number of lines available in VDATA buffer              *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0071  CSECT
SMF0071  AMODE 31
SMF0071  RMODE ANY
         USING SESSION,R11
         USING SMF0071,R15
         B     INIT0000
MODID    DC    CL8'SMF0071'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LA    R9,2048(R10)
         LA    R9,2048(R9)
         DROP  R15
         USING SMF0071,R10,R9                 DEFINE BASE
         LR    R2,R1                          COPY SCREEN NUMBER
         L     R1,SESS_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK0071,R13                     DEFINE BASE
         USING SMF71FLG,R7
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               DATA1=(SMF71STY,1),                                     +
               RDATA2=R2
         L     R1,COMM_OSSPFD
         USING OSSPFD,R1
*        L     R6,SPF_VDEPTH                    NUMBER OF LINES
         MVC   DXD_VWIDTH,SPF_VWIDTH
         DROP  R1
         A     R8,DXD_VWIDTH                    LEAVE A BLANK LINE
         BCTR  R6,0
         CLC   SMF71STY,X_0001                  SUBTYPE 1?
         BNE   EXIT0000                         NO..
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         CH    R2,H1
         BH    MAIN0200
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0100 DS    0H
         ITRACE ID=1_1
         LA    R0,C_TABLE
         ST    R0,DXD_C_ADDR                    RESET ADDRESS
         SR    R5,R5
         ICM   R5,15,SMF71PRS                   OFFSET TO RMF SECTION
         AR    R5,R7                            PLUS BASE
         SH    R5,H4
         USING SMF71PRO,R5                      DEFINE BASE
         MVC   0(RMF_HEADING_L,R8),RMF_HEADING
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8
         MVC   MSG_01_PROD,SMF71PRD             COPY PRODUCT NAME
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         AP    SMF71DAT,P1900000                ADD CENTURY
         MVC   COMM_INFO_01(L'DATE_EDITWORD),DATE_EDITWORD
         ED    COMM_INFO_01(L'DATE_EDITWORD),SMF71DAT
         MVC   MSG_02_DATE,COMM_INFO_01+1
         UNPK  COMM_INFO_01(9),SMF71IST(5)      UNPACK TIME
         MVC   MSG_02_TIME+0(2),COMM_INFO_01+1  COPY HH
         MVI   MSG_02_TIME+2,C':'               INSERT COLON
         MVC   MSG_02_TIME+3(2),COMM_INFO_01+3  COPY MM
         MVI   MSG_02_TIME+5,C':'               INSERT COLON
         MVC   MSG_02_TIME+6(2),COMM_INFO_01+5  COPY SS
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         ICM   R0,15,SMF71SAM                   NUMBER OF SAMPLES
         CVD   R0,COMM_DWORD                    CONVERT TO DECIMAL
         ED    MSG_03_SAMPLES,COMM_DWORD+4
MAIN010A DS    0H
         CLI   MSG_03_SAMPLES,C' '
         BNE   MAIN010B
         MVC   MSG_03_SAMPLES(L'MSG_03_SAMPLES-1),MSG_03_SAMPLES+1
         MVI   MSG_03_SAMPLES+(L'MSG_03_SAMPLES-1),C' '
         B     MAIN010A
MAIN010B DS    0H
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         TM    SMF71FLA,X'40'                   SAMPLES SKIPPED?
         BO    MAIN0110                         YES
         MVC   MSG_04_SKIPPED,=CL3'NO'          CHANGE TO 'NO'
MAIN0110 DS    0H
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         UNPK  COMM_INFO_01(9),SMF71CYC(5)      CYCLE TIME
         MVC   MSG_05_CYCLE+0(1),COMM_INFO_01+3
         MVI   MSG_05_CYCLE+1,C'.'
         MVC   MSG_05_CYCLE+2(3),COMM_INFO_01+4
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_06_L,R8),MSG_06
         USING MSG_06,R8
         MVC   MSG_06_MVS,SMF71MVS
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_07_L,R8),MSG_07
         USING MSG_07,R8
         CLI   SMF71IML,X'01'                   308X OR 908X?
         BE    MAIN0120
         CLI   SMF71IML,X'02'                   4381?
         BE    MAIN0130
         CLI   SMF71IML,X'03'                   3090/9021/9121/9221?
         BE    MAIN0140
         B     MAIN0150
MAIN0120 DS    0H
         MVC   MSG_07_MACHINE,MACHINE_308X
         B     MAIN0150
MAIN0130 DS    0H
         MVC   MSG_07_MACHINE,MACHINE_4381
         B     MAIN0150
MAIN0140 DS    0H
         MVC   MSG_07_MACHINE,MACHINE_3090
MAIN0150 DS    0H
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_08_L,R8),MSG_08
         USING MSG_08,R8
         TM    SMF71PRF,X'80'                   EXPANDED STORAGE?
         BO    MAIN0160                         YES
         MVC   MSG_08_FLAGS,=C'NO '
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
MAIN0160 DS    0H
         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8
         TM    SMF71PRF,X'40'                   ECSA ENABLED?
         BO    MAIN0170                         YES
         MVC   MSG_09_FLAGS,=C'NO '
         DROP  R8
         A     R8,DXD_VWIDTH
         BCTR  R6,0
MAIN0170 DS    0H
         MVC   0(MSG_10_L,R8),MSG_10
         USING MSG_10,R8
         TM    SMF71PRF,X'20'                   ECSA DIRECTOR PRESENT?
         BO    MAIN0180                         YES
         MVC   MSG_10_FLAGS,=C'NO '
MAIN0180 DS    0H
         DROP  R8
         A     R8,DXD_VWIDTH
         MVC   0(MSG_11_L,R8),MSG_11
         USING MSG_11,R8
         SR    R0,R0
         IC    R0,SMF71PTN                      PARTITION NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_11_PARTITION,COMM_DWORD+5
MAIN0190 DS    0H
         CLI   MSG_11_PARTITION,C' '
         BNE   EXIT0000
         MVC   MSG_11_PARTITION(L'MSG_11_PARTITION-1),MSG_11_PARTITION++
               1
         MVI   MSG_11_PARTITION+(L'MSG_11_PARTITION-1),C' '
         B     MAIN0190
         DROP  R8
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0200 DS    0H
         SR    R5,R5
         ICM   R5,15,SMF71PDS                  OFFSET TO RMF SECTION
         AR    R5,R7                           PLUS BASE
         SH    R5,H4
         L     R4,DXD_C_ADDR
         USING C_SECT,R4
         ITRACE ID=C_ADDR,                                             +
               RDATA1=R4
MAIN0210 DS    0H
         ITRACE ID=A,RDATA1=R8,RDATA2=R6
         ITRACE ID=B,RDATA1=R4,DATA2=0(R4)
         MVC   0(MSG_12_L,R8),MSG_12           INITIALIZE
         USING MSG_12,R8
         MVC   MSG_12_MAIN_HEAD,C_MAIN_HEAD
         ICM   R3,15,C_OFFSET_1                DATA OFFSET
         BM    MAIN0220                        .. BYPASS THIS FIELD
         MVC   MSG_12_SUB_HEAD_1,C_SUB_HEAD_1
         AR    R3,R5                           PLUS BASE
         ICM   R0,15,0(R3)                     DATA VALUE
         CVD   R0,COMM_DWORD                   CONVERT TO DECIMAL
         MVC   MSG_12_VALUE_1,EDITWORD_1
         ED    MSG_12_VALUE_1,COMM_DWORD+3
MAIN0220 DS    0H
         ICM   R3,15,C_OFFSET_2                DATA OFFSET
         BM    MAIN0230                        .. BYPASS THIS FIELD
         MVC   MSG_12_SUB_HEAD_2,C_SUB_HEAD_2
         AR    R3,R5                           PLUS BASE
         ICM   R0,15,0(R3)                     DATA VALUE
         CVD   R0,COMM_DWORD                   CONVERT TO DECIMAL
         MVC   MSG_12_VALUE_2,EDITWORD_1
         ED    MSG_12_VALUE_2,COMM_DWORD+3
MAIN0230 DS    0H
         ICM   R3,15,C_OFFSET_3                DATA OFFSET
         BM    MAIN0240                        .. BYPASS THIS FIELD
         MVC   MSG_12_SUB_HEAD_3,C_SUB_HEAD_3
         AR    R3,R5                           PLUS BASE
         ICM   R0,15,0(R3)                     DATA VALUE
         CVD   R0,COMM_DWORD                   CONVERT TO DECIMAL
         MVC   MSG_12_VALUE_3,EDITWORD_1
         ED    MSG_12_VALUE_3,COMM_DWORD+3
MAIN0240 DS    0H
         ST    R4,DXD_C_ADDR                   SAVE ADDRESS
         LA    R4,C_SECT_L(,R4)                NEXT CONTROL INFO
         CLI   0(R4),X'FF'                     END OF TABLE?
         BE    EXIT0000                        YES.. EXIT
         A     R8,DXD_VWIDTH                   NEXT LINE
         BCT   R6,MAIN0210                     BUILD NEXT LINE
         DROP  R8
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R13,4(R13)                 RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)               RESTORE R14
         LR    R15,R2                     SET RC
         LM    R0,R12,20(R13)             RESTORE REMAINING REGISTERS
         BR    R14                        RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART             DC    Q(WK0071)
H1                   DC    H'1'
H4                   DC    H'4'
P1900000             DC    P'1900000'

DATE_EDITWORD        DC    X'40212020204B202020'
EDITWORD_1           DC    X'40202020202020202120'

X_0001               DC    X'0001'

MACHINE_308X         DC    CL25'308X OR 908X'
MACHINE_4381         DC    CL25'4381'
MACHINE_3090         DC    CL25'3090, 9021, 9121, OR 9221'

                     LTORG

RMF_HEADING          DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    28C'-'
                     DC    C' RMF PRODUCT SECTION  '
                     DC    28C'-'
                     DC    C'>'
RMF_HEADING_L        EQU   *-RMF_HEADING

MSG_01               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Product name          '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_PROD          DC    CL8' '
MSG_01_L             EQU   *-MSG_01

MSG_02               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Interval start        '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_DATE          DC    CL8' '
                     DC    CL2' '
MSG_02_TIME          DC    CL8' '
MSG_02_L             EQU   *-MSG_02

MSG_03               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Number of samples     '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_SAMPLES       DC    X'4020202020202120'
MSG_03_L             EQU   *-MSG_03

MSG_04               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Samples skipped?      '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_SKIPPED       DC    CL3'Yes'
MSG_04_L             EQU   *-MSG_04

MSG_05               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Cycle time            '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_CYCLE         DC    CL5' '
MSG_05_L             EQU   *-MSG_05

MSG_06               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'MVS level             '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_MVS           DC    CL8' '
MSG_06_L             EQU   *-MSG_06

MSG_07               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Machine type          '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_MACHINE       DC    CL25' '
MSG_07_L             EQU   *-MSG_07

MSG_08               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Expanded storage?     '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_08_FLAGS         DC    CL3'Yes'
MSG_08_L             EQU   *-MSG_08

MSG_09               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'ECSA enabled?         '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_FLAGS         DC    CL3'Yes'
MSG_09_L             EQU   *-MSG_09

MSG_10               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'ECSA director present?'
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_10_FLAGS         DC    CL3'Yes'
MSG_10_L             EQU   *-MSG_10

MSG_11               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Partition number      '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_11_PARTITION     DC    X'40202120'
MSG_11_L             EQU   *-MSG_11

MSG_12               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
MSG_12_MAIN_HEAD     DC    CL20' '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_12_SUB_HEAD_1    DC    CL08' '
MSG_12_VALUE_1       DC    CL10' '
                     DC    CL2' '
MSG_12_SUB_HEAD_2    DC    CL08' '
MSG_12_VALUE_2       DC    CL10' '
                     DC    CL2' '
MSG_12_SUB_HEAD_3    DC    CL08' '
MSG_12_VALUE_3       DC    CL10' '
MSG_12_L             EQU   *-MSG_12

C_TABLE        DS        0C
               DC        CL20'Non-vio, non-swap   '
               DC        CL08'Page in ',AL4(SMF71PIN-SMF71PAG)
               DC        CL08'Page out',AL4(SMF71POT-SMF71PAG)
               DC        CL08'Reclaims',AL4(SMF71PRC-SMF71PAG)

               DC        CL20'VIO                 '
               DC        CL08'Page in ',AL4(SMF71VIN-SMF71PAG)
               DC        CL08'Page out',AL4(SMF71VOT-SMF71PAG)
               DC        CL08'        ',AL4(-1)

               DC        CL20'LPA/CSA non-VIO     '
               DC        CL08'Page in ',AL4(SMF71SNI-SMF71PAG)
               DC        CL08'Page out',AL4(SMF71SNO-SMF71PAG)
               DC        CL08'Reclaims',AL4(-1)

               DC        CL20'Page frames         '
               DC        CL08'Avail   ',AL4(SMF71AFC-SMF71PAG)
               DC        CL08'Defined ',AL4(SMF71TFC-SMF71PAG)
               DC        CL08'Nucleus ',AL4(SMF71FIN-SMF71PAG)

               DC        CL20'Page data set slots '
               DC        CL08'Total   ',AL4(SMF71TSC-SMF71PAG)
               DC        CL08'VIO     ',AL4(SMF71DSC-SMF71PAG)
               DC        CL08'non-VIO ',AL4(SMF71VSC-SMF71PAG)

               DC        CL20'Unused frames       '
               DC        CL08'Min     ',AL4(SMF71MNF-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXF-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVF-SMF71PAG)

               DC        CL20'CSA frames          '
               DC        CL08'Min     ',AL4(SMF71MNP-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXP-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVP-SMF71PAG)

               DC        CL20'Pageble priv frames '
               DC        CL08'Min     ',AL4(SMF71MNS-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXS-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVS-SMF71PAG)

               DC        CL20'Total frames        '
               DC        CL08'Min     ',AL4(SMF71MNT-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXT-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVT-SMF71PAG)

               DC        CL20'SQA fixed frames    '
               DC        CL08'Min     ',AL4(SMF71MNQ-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXQ-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVQ-SMF71PAG)

               DC        CL20'CSA+LPA fixed frames'
               DC        CL08'Min     ',AL4(SMF71MNC-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXC-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVC-SMF71PAG)

               DC        CL20'Non LSQA fixed      '
               DC        CL08'Min     ',AL4(SMF71MNR-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXR-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVR-SMF71PAG)

               DC        CL20'Fixed               '
               DC        CL08'Min     ',AL4(SMF71MNX-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXX-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVX-SMF71PAG)

               DC        CL20'Unused slots        '
               DC        CL08'Min     ',AL4(SMF71MNU-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXU-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVU-SMF71PAG)

               DC        CL20'VIO slots           '
               DC        CL08'Min     ',AL4(SMF71MNV-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXV-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVV-SMF71PAG)

               DC        CL20'non-VIO priv slots  '
               DC        CL08'Min     ',AL4(SMF71MNM-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXM-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVM-SMF71PAG)

               DC        CL20'Unusable slots      '
               DC        CL08'Min     ',AL4(SMF71MNB-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXB-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVB-SMF71PAG)

               DC        CL20'Local slots         '
               DC        CL08'Min     ',AL4(SMF71MNA-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXA-SMF71PAG)
               DC        CL08'        ',AL4(-1)

               DC        CL20'VIO pages/expanded  '
               DC        CL08'Written ',AL4(SMF71VME-SMF71PAG)
               DC        CL08'Migrated',AL4(SMF71VMG-SMF71PAG)
               DC        CL08'Read    ',AL4(SMF71VRE-SMF71PAG)

               DC        CL20'VIO in expanded     '
               DC        CL08'Min     ',AL4(SMF71MVE-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XVE-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVE-SMF71PAG)

               DC        CL20'LPA frames          '
               DC        CL08'Min     ',AL4(SMF71NLP-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XLP-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ALP-SMF71PAG)

               DC        CL20'Fixed LPA frames    '
               DC        CL08'Min     ',AL4(SMF71NLF-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XLF-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ALF-SMF71PAG)

               DC        CL20'Fixed LSQA frames   '
               DC        CL08'Min     ',AL4(SMF71NLS-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XLS-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ALS-SMF71PAG)

               DC        CL20'Fixed below 16M line'
               DC        CL08'Min     ',AL4(SMF71MNL-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71MXL-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AVL-SMF71PAG)

               DC        CL20'Avail expanded      '
               DC        CL08'Min     ',AL4(SMF71AMN-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71AMX-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ASA-SMF71PAG)

               DC        CL20'Migration age       '
               DC        CL08'Min     ',AL4(SMF71LMA-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71HMA-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71AMA-SMF71PAG)

               DC        CL20'SQA in real         '
               DC        CL08'Min     ',AL4(SMF71MSR-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XSR-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ASR-SMF71PAG)

               DC        CL20'SQA in expanded     '
               DC        CL08'Min     ',AL4(SMF71MSE-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XSE-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ASE-SMF71PAG)

               DC        CL20'LPA in expanded     '
               DC        CL08'Min     ',AL4(SMF71LME-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71LXE-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71LAE-SMF71PAG)

               DC        CL20'CSA in expanded     '
               DC        CL08'Min     ',AL4(SMF71CME-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71CXE-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71CAE-SMF71PAG)

               DC        CL20'LSQA in real        '
               DC        CL08'Min     ',AL4(SMF71MLR-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XLR-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ALR-SMF71PAG)

               DC        CL20'LSQA in expanded    '
               DC        CL08'Min     ',AL4(SMF71MLE-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71XLE-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71ALE-SMF71PAG)

               DC        CL20'REG+SWA in expanded '
               DC        CL08'Min     ',AL4(SMF71RME-SMF71PAG)
               DC        CL08'Max     ',AL4(SMF71RXE-SMF71PAG)
               DC        CL08'Avg     ',AL4(SMF71RAE-SMF71PAG)

               DC        X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0071         DSECT
               COPY      DXDPREF
DXD_VWIDTH     DS        F
DXD_C_ADDR     DS        A
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
C_SECT         DSECT
C_MAIN_HEAD    DS        CL20
C_SUB_HEAD_1   DS        CL8
C_OFFSET_1     DS        AL4
C_SUB_HEAD_2   DS        CL8
C_OFFSET_2     DS        AL4
C_SUB_HEAD_3   DS        CL8
C_OFFSET_3     DS        AL4
C_SECT_L       EQU       *-C_SECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT  DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               ERBSMF71
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY      ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY      TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY      REGEQU
               END       SMF0071
