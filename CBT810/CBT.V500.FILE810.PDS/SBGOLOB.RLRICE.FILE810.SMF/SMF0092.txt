*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 92                                   *
*         Open Edition filesystem                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*       R6     Number of lines available                              *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0092  CSECT
SMF0092  AMODE 31
SMF0092  RMODE ANY
         USING SESSION,R11
         USING SMF0092,R15
         B     INIT0000
MODID    DC    CL8'SMF0092'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         USING SMF0092,R10                    DEFINE BASE
         DROP  R15
         L     R1,SESS_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK0092,R13                     DEFINE BASE
         MVC   DXD_CSECT,MODID
         USING OSSPFD,R9                      DEFINE BASE
         USING SMF92FLG,R7                    DEFINE BASE
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         OC    SMF92SON,SMF92SON              ANY SUBSYSTEM SECTIONS?
         BZ    MAIN0030                       NO
         ICM   R6,15,SMF92SOF                 OFFSET TO SUBSYSTEM
         AR    R6,R7                          PLUS BASE
         SH    R6,H4                          MINUS LENGTH OF LENGTH
         USING SMF92SSS,R6                    DEFINE BASE
         A     R8,SPF_VWIDTH                  NEXT LINE
         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8

         ICM   R5,15,SMF92DOF                 OFFSET TO DATA SECTION
         AR    R5,R7                          PLUS BASE
         SH    R5,H4                          MINUS LENGTH OF LENGTH
         LA    R4,EVENT_TABLE
         USING EVENT_DSECT,R4                 DEFINE BASE
MAIN0010 DS    0H
         CLI   0(R4),X'FF'                    END OF TABLE?
         BE    MAIN0030
         CLC   EVENT,SMF92STP                 EVENT LOCATED?
         BE    MAIN0020                       YES
         LA    R4,EVENT_DSECT_L(,R4)          NEXT EVENT
         B     MAIN0010
MAIN0020 DS    0H
         MVC   MSG_01_EVENT,EVENT_DESCRIPTION COPY EVENT DESCRIPTION
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,EVENT_TIME_OFFSET         DISP TO TIME
         AR    R1,R5                          PLUS BASE
         MVC   COMM_DWORD,0(R1)               COPY TIME OF EVENT
         BAL   R6,TIME0000                    CONVERT TIME
         MVC   MSG_01_TIME,COMM_INFO_01       COPY DATE/TIME
         DROP  R8
MAIN0030 DS    0H
         A     R8,SPF_VWIDTH                  NEXT LINE
         ICM   R15,15,EVENT_ADDRESS
         BZ    EXIT0000                       NOTHING ELSE FOR EVENT
         BR    R15                            PROCESS THE DATA

*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0100 DS    0H
         ITRACE ID=MOUNT
         USING SMF92FSM,R5
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         ICM   R4,15,SMF92MPF                 OFFSET TO PATH INFO
         AR    R4,R7                          PLUS BASE
         SH    R4,H4                          MINUS LENGTH OF LENGTH
         USING SMF92FSP,R4                    DEFINE BASE
         LH    R1,SMF92PPL                    LENGTH OF PATH
         CH    R1,=Y(L'MSG_02_PATH)           TOO LONG?
         BNH   MAIN0110                       NO
         LH    R1,=Y(L'MSG_02_PATH)           LIMIT LENGTH
MAIN0110 DS    0H
         BCTR  R1,0
         EX    R1,PATH_MVC                    COPY PATH
         B     MAIN0120
PATH_MVC MVC   MSG_02_PATH(0),SMF92PPN        COPY PATH
MAIN0120 DS    0H
         DROP  R4,R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_TYPE,SMF92MTN           TYPE
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_DDN,SMF92MDD            DD NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         MVC   MSG_05_DSN,SMF92MFN            DSN NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         TM    DXD_FLAG,SMF92MAU              MOUNTED BY AUTOMOUNTER?
         BNO   MAIN0130                       NO
         MVC   0(MSG_07_L,R8),MSG_07
         A     R8,SPF_VWIDTH                  NEXT LINE

MAIN0130 DS    0H
         TM    DXD_FLAG,SMF92MAS              ASYNCHRONOUS?
         BNO   MAIN0140                       NO
         MVC   0(MSG_08_L,R8),MSG_08
         A     R8,SPF_VWIDTH                  NEXT LINE

MAIN0140 DS    0H
         MVC   DXD_FLAG,SMF92MF2
         BAL   R6,FLAG0000                    PROCESS FLAG(S)

         B     EXIT0000
*---------------------------------------------------------------------*
*        Event 02 (Suspend)                                           *
*---------------------------------------------------------------------*
MAIN0200 DS    0H
         ITRACE ID=SUSPEND
         USING SMF92FSS,R5

         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_TYPE,SMF92STN           TYPE
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_DDN,SMF92SDD            DD NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         MVC   MSG_05_DSN,SMF92SFN            DSN NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   DXD_FLAG,SMF92SFG              COPY FLAG(S)
         BAL   R6,FLAG0000                    PROCESS FLAG(S)

         B     EXIT0000

*---------------------------------------------------------------------*
*        Event 04 (Resume)                                            *
*---------------------------------------------------------------------*
MAIN0400 DS    0H
         ITRACE ID=RESUME
         USING SMF92FSR,R5

         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8
         MVC   COMM_DWORD,SMF92RTR            COPY TIME OF RESUME
         BAL   R6,TIME0000
         MVC   MSG_09_TIME,COMM_INFO_01
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_TYPE,SMF92RTN           TYPE
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_DDN,SMF92RDD            DD NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         MVC   MSG_05_DSN,SMF92RFN            DSN NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   DXD_FLAG,SMF92RFG              COPY FLAG(S)
         BAL   R6,FLAG0000                    PROCESS FLAG(S)

         B     EXIT0000

*---------------------------------------------------------------------*
*        Events 05 and 06 (unmount and remount)                       *
*---------------------------------------------------------------------*
MAIN0500 DS    0H
         ITRACE ID=UNMOUNT
         USING SMF92FSU,R5

         MVC   0(MSG_10_L,R8),MSG_10
         USING MSG_10,R8
         MVC   COMM_DWORD,SMF92UTU            COPY TIME OF UNMOUNT
         BAL   R6,TIME0000
         MVC   MSG_10_TIME,COMM_INFO_01
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_TYPE,SMF92UTN           TYPE
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_DDN,SMF92UDD            DD NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         MVC   MSG_05_DSN,SMF92UFN            DSN NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         TM    SMF92UFG,SMF92UAU              UNMOUNTED BY AUTOMOUNTER?
         BNO   MAIN0510                       NO
         MVC   0(MSG_11_L,R8),MSG_11
         A     R8,SPF_VWIDTH

MAIN0510 DS    0H
         MVC   DXD_FLAG,SMF92UF2              COPY FLAGS
         BAL   R6,FLAG0000

         B     EXIT0000

*---------------------------------------------------------------------*
*        Event 07 (Move)                                              *
*---------------------------------------------------------------------*
MAIN0700 DS    0H
         ITRACE ID=MOVE
         USING SMF92FSV,R5

         MVC   0(MSG_12_L,R8),MSG_12
         USING MSG_12,R8
         MVC   COMM_DWORD,SMF92VTM            COPY TIME OF MOUNT
         BAL   R6,TIME0000
         MVC   MSG_12_TIME,COMM_INFO_01
         A     R8,SPF_VWIDTH                  NEXT LINE
         DROP  R8

         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8
         MVC   MSG_03_TYPE,SMF92VTN           TYPE
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         MVC   MSG_04_DDN,SMF92VDD            DD NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8
         MVC   MSG_05_DSN,SMF92VNM            DSN NAME
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_13_L,R8),MSG_13
         A     R8,SPF_VWIDTH
         MVC   DXD_FLAG,SMF92VOF              'OLD' FLAGS
         BAL   R6,FLAG0000

         MVC   0(MSG_14_L,R8),MSG_14
         A     R8,SPF_VWIDTH
         MVC   DXD_FLAG,SMF92VNF              'NEW' FLAGS
         BAL   R6,FLAG0000

         B     EXIT0000

*---------------------------------------------------------------------*
*        Event 10 (Open)                                              *
*---------------------------------------------------------------------*
MAIN1000 DS    0H
         ITRACE ID=OPEN
         USING SMF92FOP,R5

         MVC   0(MSG_15_L,R8),MSG_15
         USING MSG_15,R8
         UNPK  COMM_INFO_01(9),SMF92OTK(5)    UNPACK TOKEN
         MVC   MSG_15_TOKEN,COMM_INFO_01      COPY TO VDATA BUFFER
         TR    MSG_15_TOKEN,COMM_HEXCHAR      TRANSLATE IT
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_16_L,R8),MSG_16
         USING MSG_16,R8
         L     R0,SMF92OIN                    INODE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_16_INODE,COMM_DWORD+4      EDIT INODE NBR
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_17_L,R8),MSG_17
         USING MSG_17,R8
         L     R0,SMF92ODN                    DEVICE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_17_DEVICE,COMM_DWORD+4     EDIT DEVICE NBR
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         B     EXIT0000
*---------------------------------------------------------------------*
*        Event 11 (Close)                                             *
*---------------------------------------------------------------------*
MAIN1100 DS  0H
         USING SMF92FCL,R5
         ITRACE ID=CLOSE,                                              +
               DATA1=(SMF92DLN,2),                                     +
               DATA2=(SMF92CPN,8)
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         CLC   SMF92DLN,=Y(SMF92CPN-SMF92FCL)
         BNH   MAIN1105
         MVC   MSG_02_PATH(L'SMF92CPN),SMF92CPN    COPY PATH NAME
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

MAIN1105 DS    0H
         MVC   0(MSG_15_L,R8),MSG_15
         USING MSG_15,R8
         UNPK  COMM_INFO_01(9),SMF92CTK(5)    UNPACK TOKEN
         MVC   MSG_15_TOKEN,COMM_INFO_01      COPY TO VDATA BUFFER
         TR    MSG_15_TOKEN,COMM_HEXCHAR      TRANSLATE IT
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_16_L,R8),MSG_16
         USING MSG_16,R8
         L     R0,SMF92CIN                    INODE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_16_INODE,COMM_DWORD+4      EDIT INODE NBR
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_17_L,R8),MSG_17
         USING MSG_17,R8
         L     R0,SMF92CDN                    DEVICE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_17_DEVICE,COMM_DWORD+4     EDIT DEVICE NBR
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_18_L,R8),MSG_18
         USING MSG_18,R8
         L     R0,SMF92CSR                    NUMBER OF READS
         CVD   R0,COMM_DWORD
         ED    MSG_18_READS,COMM_DWORD+4      EDIT READS
         L     R0,SMF92CIR                    BLOCKS READ
         CVD   R0,COMM_DWORD
         ED    MSG_18_BLOCKS,COMM_DWORD+4     EDIT BLOCKS
         L     R0,SMF92CBR                    BYTES READ
         CVD   R0,COMM_DWORD
         ED    MSG_18_BYTES,COMM_DWORD+4      EDIT BYTES READ
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_19_L,R8),MSG_19
         USING MSG_19,R8
         L     R0,SMF92CSW                    NUMBER OF WRITES
         CVD   R0,COMM_DWORD
         ED    MSG_19_WRITES,COMM_DWORD+4     EDIT WRITES
         L     R0,SMF92CIW                    BLOCKS WRITTEN
         CVD   R0,COMM_DWORD
         ED    MSG_19_BLOCKS,COMM_DWORD+4     EDIT BLOCKS WRITTEN
         L     R0,SMF92CBW                    BYTES WRITTEN
         CVD   R0,COMM_DWORD
         ED    MSG_19_BYTES,COMM_DWORD+4      EDIT BYTES WRITTEN
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         A     R8,SPF_VWIDTH                  NEXT LINE
         MVC   0(MSG_20_L,R8),MSG_20          COPY FLAGS HEADING
         A     R8,SPF_VWIDTH                  NEXT LINE

         TM    SMF92CFG,SMF92CNF              GENERATED BY VNODE?
         BNO   MAIN1110
         MVC   0(MSG_21_L,R8),MSG_21          COPY MESSAGE
         LA    R8,MSG_21_L(,R8)
MAIN1110 DS    0H
         TM    SMF92CFG,SMF92CNS              SOCKET?
         BNO   MAIN1120                       NO
         MVC   0(MSG_22_L,R8),MSG_22          SOCKET
         LA    R8,MSG_22_L+2(,R8)
         B     MAIN1130
MAIN1120 DS    0H
         MVC   0(MSG_23_L,R8),MSG_23          LOCAL
         LA    R8,MSG_23_L+2(,R8)
MAIN1130 DS    0H
         TM    SMF92CFG,SMF92CCS              SERVER?
         BNO   MAIN1140                       NO
         MVC   0(MSG_24_L,R8),MSG_24          SERVER
         LA    R8,MSG_24_L+2(,R8)
         B     MAIN1150
MAIN1140 DS    0H
         MVC   0(MSG_25_L,R8),MSG_25          CLIENT
         LA    R8,MSG_25_L+2(,R8)
MAIN1150 DS    0H
         TM    SMF92CFG,SMF92CFC              CACHED?
         BNO   MAIN1160
         MVC   0(MSG_26_L,R8),MSG_26          FILESYSTEM WAS CACHED
         LA    R8,MSG_26_L+2(,R8)
MAIN1160 DS    0H
         TM    SMF92CFG,SMF92CDR              DENY READ?
         BNO   MAIN1170                       NO
         MVC   0(MSG_27_L,R8),MSG_27          DENY READ
         LA    R8,MSG_27_L+2(,R8)
MAIN1170 DS    0H
         TM    SMF92CFG,SMF92CDW              DENY WRITE
         BNO   EXIT0000                       NO
         MVC   0(MSG_28_L,R8),MSG_28          DENY WRITE
         LA    R8,MSG_28_L+2(,R8)

         DROP  R5
         B     EXIT0000

*---------------------------------------------------------------------*
*        Event 12 (mmap)                                              *
*---------------------------------------------------------------------*
MAIN1200 DS  0H
         USING SMF92MMP,R5
         ITRACE ID=MMAP
         MVC   0(MSG_29_L,R8),MSG_29
         USING MSG_29,R8
         ICM   R0,15,SMF92MSZ                 BYTES MAPPED
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_29_BYTES,COMM_DWORD+2      EDIT NBR OF BYTES
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_30_L,R8),MSG_30
         USING MSG_30,R8
         UNPK  COMM_INFO_01(9),SMF92MTK       UNPACK TOKEN
         MVC   MSG_30_TOKEN,COMM_INFO_01
         TR    MSG_30_TOKEN,COMM_HEXCHAR      TRANSLATE TOKEN
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_31_L,R8),MSG_31
         USING MSG_31,R8
         ICM   R0,15,SMF92MIN                 FILE SERIAL NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_31_SERIAL,COMM_DWORD+2     EDIT FILE SERIAL
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_17_L,R8),MSG_17
         USING MSG_17,R8
         L     R0,SMF92MMDN                   DEVICE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_17_DEVICE,COMM_DWORD+4     EDIT DEVICE NBR
         DROP  R8

         B     EXIT0000

*---------------------------------------------------------------------*
*        Event 13 (memunmap)                                          *
*---------------------------------------------------------------------*
MAIN1300 DS  0H
         USING SMF92MUN,R5
         ITRACE ID=MMAP

         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8
         MVC   COMM_DWORD,SMF92MUTC           COPY TIME OF UNMAP
         BAL   R6,TIME0000
         MVC   MSG_09_TIME,COMM_INFO_01
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE

         MVC   0(MSG_29_L,R8),MSG_29
         USING MSG_29,R8
         ICM   R0,15,SMF92MUSZ                BYTES MAPPED
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_29_BYTES,COMM_DWORD+2      EDIT NBR OF BYTES
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_30_L,R8),MSG_30
         USING MSG_30,R8
         UNPK  COMM_INFO_01(9),SMF92MUTK      UNPACK TOKEN
         MVC   MSG_30_TOKEN,COMM_INFO_01
         TR    MSG_30_TOKEN,COMM_HEXCHAR      TRANSLATE TOKEN
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_31_L,R8),MSG_31
         USING MSG_31,R8
         ICM   R0,15,SMF92MUIN                FILE SERIAL NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_31_SERIAL,COMM_DWORD+2     EDIT FILE SERIAL
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_17_L,R8),MSG_17
         USING MSG_17,R8
         L     R0,SMF92MUDN                   DEVICE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_17_DEVICE,COMM_DWORD+4     EDIT DEVICE NBR
         DROP  R8

         B     EXIT0000

*---------------------------------------------------------------------*
*        Event 14 (Delete or rename)                                  *
*---------------------------------------------------------------------*
MAIN1400 DS  0H
         USING SMF92DFL,R5
         ITRACE ID=DELETE

         MVC   0(MSG_31_L,R8),MSG_31
         USING MSG_31,R8
         ICM   R0,15,SMF92DIN                 FILE SERIAL NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_31_SERIAL,COMM_DWORD+2     EDIT FILE SERIAL
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_33_L,R8),MSG_33
         USING MSG_31,R8
         ICM   R0,15,SMF92DINP                PARENT SERIAL NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_33_SERIAL,COMM_DWORD+2     EDIT PARENT SERIAL
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_17_L,R8),MSG_17
         USING MSG_17,R8
         L     R0,SMF92DDN                    DEVICE NUMBER
         CVD   R0,COMM_DWORD
         ED    MSG_17_DEVICE,COMM_DWORD+4     EDIT DEVICE NBR
         DROP  R8
         A     R8,SPF_VWIDTH

         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         MVC   MSG_02_PATH,SMF92DFN           NAME DELETED
         DROP  R8
         A     R8,SPF_VWIDTH

         TM    SMF92DFLG,SMF92DREN            RENAME?
         BNO   EXIT0000                       NO

         A     R8,SPF_VWIDTH
         MVC   0(MSG_34_L,R8),MSG_34
         A     R8,SPF_VWIDTH

         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8
         MVC   MSG_02_PATH,SMF92DFNR
         DROP  R8

         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
FLAG0000 DS    0H
         ITRACE ID=FLAG,                                               +
               DATA1=(DXD_FLAG,1)

         TM    DXD_FLAG,SMF92MLU              MOUNTED LOCALY?
         BNO   FLAG0010                       NO
         MVC   0(FLAG_MSG_1_L,R8),FLAG_MSG_1
         A     R8,SPF_VWIDTH                  NEXT LINE

FLAG0010 DS    0H
         TM    DXD_FLAG,SMF92MNU              MOUNTED REMOTELY?
         BNO   FLAG0020                       NO
         MVC   0(FLAG_MSG_2_L,R8),FLAG_MSG_2
         A     R8,SPF_VWIDTH                  NEXT LINE

FLAG0020 DS    0H
         TM    DXD_FLAG,SMF92MDO              HFS SYSPLEX CLIENT?
         BNO   FLAG0030                       NO
         MVC   0(FLAG_MSG_3_L,R8),FLAG_MSG_3
         A     R8,SPF_VWIDTH                  NEXT LINE

FLAG0030 DS    0H
         TM    DXD_FLAG,SMF92MSN              FILESYSTEM OWNER?
         BNO   EXIT0000                       NO
         MVC   0(FLAG_MSG_4_L,R8),FLAG_MSG_4
         A     R8,SPF_VWIDTH                  NEXT LINE
         BR    R6
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
TIME0000 DS    0H
         STCKCONV TIMETYPE=DEC,                 CONVERT TIME           +
               DATETYPE=YYYYMMDD,                                      +
               STCKVAL=COMM_DWORD,                                     +
               CONVVAL=DXD_DATE_TIME,                                  +
               MF=(E,DXD_STCKCONV)
         UNPK  COMM_INFO_01+00(3),DXD_DATE_TIME+10(2)  MONTH
         MVI   COMM_INFO_01+02,C'/'
         UNPK  COMM_INFO_01+03(3),DXD_DATE_TIME+11(2)  DAY
         MVI   COMM_INFO_01+05,C'/'
         UNPK  COMM_INFO_01+06(3),DXD_DATE_TIME+09(2)  YEAR
         MVI   COMM_INFO_01+08,C' '
         UNPK  COMM_INFO_01+11(3),DXD_DATE_TIME+00(2)  HOUR
         MVI   COMM_INFO_01+13,C':'
         UNPK  COMM_INFO_01+14(3),DXD_DATE_TIME+01(2)  MINUTE
         MVI   COMM_INFO_01+16,C' '
         BR    R6
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)
         L     R14,12(,R13)                   RESTORE R14
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(WK0092)
H4             DC    H'4'

EVENT_TABLE    DS    0C
               DC    AL2(01),AL4(MAIN0100),AL2(0),CL10'Mount'
               DC    AL2(02),AL4(MAIN0200),AL2(0),CL10'Suspend'
               DC    AL2(04),AL4(MAIN0400),AL2(8),CL10'Resume'
               DC    AL2(05),AL4(MAIN0500),AL2(0),CL10'Unmount'
               DC    AL2(06),AL4(MAIN0500),AL2(8),CL10'Remount'
               DC    AL2(07),AL4(MAIN0700),AL2(0),CL10'Move'
               DC    AL2(10),AL4(MAIN1000),AL2(0),CL10'Open'
               DC    AL2(11),AL4(MAIN1100),AL2(0),CL10'Close'
               DC    AL2(12),AL4(MAIN1200),AL2(0),CL10'Memmap'
               DC    AL2(13),AL4(MAIN1300),AL2(8),CL10'Memunmap'
               DC    AL2(14),AL4(MAIN1400),AL2(0),CL10'Delete'
               DC    X'FF'

               LTORG

MSG_01         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Event:    '
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG_01_EVENT   DC    CL10'Unknown'
               DC    C' at '
MSG_01_TIME    DC    CL17' '
MSG_01_L       EQU   *-MSG_01

MSG_02         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Path:     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_PATH    DC    CL70' '
MSG_02_L       EQU   *-MSG_02

MSG_03         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'TYPE '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_TYPE    DC    CL8' '
MSG_03_L       EQU   *-MSG_03

MSG_04         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'DD NAME   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_DDN     DC    CL8' '
MSG_04_L       EQU   *-MSG_04

MSG_05         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'DSN '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_DSN     DC    CL44' '
MSG_05_L       EQU   *-MSG_05

MSG_07         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Mounted by automounter'
MSG_07_L       EQU   *-MSG_07

MSG_08         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Asynchronous mount'
MSG_08_L       EQU   *-MSG_08

MSG_09         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Resume time '
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG_09_TIME    DC    CL17' '
MSG_09_L       EQU   *-MSG_09

MSG_10         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Unmount time '
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG_10_TIME    DC    CL17' '
MSG_10_L       EQU   *-MSG_10

MSG_11         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Unmounted by automounter'
MSG_11_L       EQU   *-MSG_11

MSG_12         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Mount time '
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG_12_TIME    DC    CL17' '
MSG_12_L       EQU   *-MSG_12

MSG_13         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Old status'
MSG_13_L       EQU   *-MSG_13

MSG_14         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'New status'
MSG_14_L       EQU   *-MSG_14

MSG_15         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Open TOKEN'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_15_TOKEN   DC    CL8' '
MSG_15_L       EQU   *-MSG_15

MSG_16         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'INODE     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_16_INODE   DC    X'4020202020202120'
MSG_16_L       EQU   *-MSG_16

MSG_17         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Device nbr'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_17_DEVICE  DC    X'4020202020202120'
MSG_17_L       EQU   *-MSG_17

MSG_18         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Reads     '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_18_READS   DC    X'4020202020202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Blocks read   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_18_BLOCKS  DC    X'4020202020202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Bytes  read   '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_18_BYTES   DC    X'4020202020202120'
MSG_18_L       EQU   *-MSG_18

MSG_19         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Writes    '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_19_WRITES  DC    X'4020202020202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Blocks written'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_19_BLOCKS  DC    X'4020202020202120'
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Bytes written '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_19_BYTES   DC    X'4020202020202120'
MSG_19_L       EQU   *-MSG_19

MSG_20         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_GREEN)
               DC    35C'-'
               DC    C' FLAGS '
               DC    35C'-'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_20_L       EQU   *-MSG_20

MSG_21         DS    0C
               DC    C'Generated by VNode'
MSG_21_L       EQU   *-MSG_21

MSG_22         DS    0C
               DC    C'Network socket'
MSG_22_L       EQU   *-MSG_22

MSG_23         DS    0C
               DC    C'Filesystem'
MSG_23_L       EQU   *-MSG_23

MSG_24         DS    0C
               DC    C'Client'
MSG_24_L       EQU   *-MSG_24

MSG_25         DS    0C
               DC    C'Server'
MSG_25_L       EQU   *-MSG_25

MSG_26         DS    0C
               DC    C'Cached'
MSG_26_L       EQU   *-MSG_26

MSG_27         DS    0C
               DC    C'Deny READ'
MSG_27_L       EQU   *-MSG_27

MSG_28         DS    0C
               DC    C'Deny WRITE'
MSG_28_L       EQU   *-MSG_28

MSG_29         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Bytes mapped '
MSG_29_BYTES   DC    X'4020206B2020206B2020206B202120'
MSG_29_L       EQU   *-MSG_29

MSG_30         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'MMAP TOKEN   '
MSG_30_TOKEN   DC    CL8' '
MSG_30_L       EQU   *-MSG_30

MSG_31         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'File serial  '
MSG_31_SERIAL  DC    X'4020206B2020206B2020206B202120'
MSG_31_L       EQU   *-MSG_31

MSG_32         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Unmap time   '
               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)
MSG_32_TIME    DC    CL17' '
MSG_32_L       EQU   *-MSG_32

MSG_33         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'parent serial'
MSG_33_SERIAL  DC    X'4020206B2020206B2020206B202120'
MSG_33_L       EQU   *-MSG_33

MSG_34         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_GREEN)
               DC    35C'-'
               DC    C' RENAME '
               DC    35C'-'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_34_L       EQU   *-MSG_34

FLAG_MSG_1     DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Local'
FLAG_MSG_1_L   EQU   *-FLAG_MSG_1

FLAG_MSG_2     DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Remote'
FLAG_MSG_2_L   EQU   *-FLAG_MSG_2

FLAG_MSG_3     DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'HFS sysplex client'
FLAG_MSG_3_L   EQU   *-FLAG_MSG_3

FLAG_MSG_4     DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Filesystem owner'
FLAG_MSG_4_L   EQU   *-FLAG_MSG_4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0092         DSECT
               COPY        DXDPREF

DXD_DATE_TIME  DS          4F
DXD_STCKCONV   STCKCONV    MF=L

DXD_FLAG       DS          XL2
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EVENT_DSECT       DSECT
EVENT             DS       XL2
EVENT_ADDRESS     DS       AL4
EVENT_TIME_OFFSET DS       AL2
EVENT_DESCRIPTION DS       CL10
EVENT_DSECT_L     EQU      *-EVENT_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               BPXYSMFR
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      SMF0092
