*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 66                                   *
*                                                                     *
*         ICF alter activity                                          *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0066  CSECT
SMF0066  AMODE 31
SMF0066  RMODE ANY
         USING SESSION,R11
         USING SMF0066,R15
         B     INIT0000
MODID    DC    CL8'SMF0066'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12            DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)       SAVE REGS
         LR    R10,R15               COPY ENTRY POINT
         USING SMF0066,R10           DEFINE BASE
         DROP  R15
         L     R1,SESS_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)             SAVE R13
         ST    R1,8(R13)             CHAIN SAVE AREA
         LR    R13,R1                COPY WORK AREA ADDRESS
         USING WK0066,R13            DEFINE BASE
         MVC   DXD_CSECT,MODID
         USING OSSPFD,R9             DEFINE BASE
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         USING SMF66SYS,R7
         A     R8,SPF_VWIDTH
         BCTR  R6,0
         MVC   0(MSG_01_L,R8),MSG_01 COPY
         USING MSG_01,R8
         ITRACE ID=SMF66SUB,                                           +
               DATA1=(SMF66SUB,2)
         CLC   =C'DE',SMF66SUB       DELETE?
         BE    MAIN0010              YES
         CLC   =C'IN',SMF66SUB       INSERT?
         BE    MAIN0020              YES
         MVC   MSG_01_ACTIVITY,UPDATE
         B     MAIN0030
MAIN0010 DS    0H
         MVC   MSG_01_ACTIVITY,DELETE
         B     MAIN0030
MAIN0020 DS    0H
         MVC   MSG_01_ACTIVITY,INSERT
MAIN0030 DS    0H
         DROP  R8
         A     R8,SPF_VWIDTH         NEXT LINE
         BCTR  R6,0

         ICM   R5,15,SMF66POF        OFFSET TO PRODUCT SECTION(S)
         BZ    EXIT0000              NO PRODUCT SECTION(S)
         AR    R5,R7                 PLUS BASE
         SH    R5,H4                 MINUS 4
         USING SMF66VER,R5           DEFINE BASE
         SR    R4,R4
         ICM   R4,3,SMF66PNO         NUMBER OF PRODUCT SECTIONS
         A     R8,SPF_VWIDTH         NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process product and data sections                            *
*---------------------------------------------------------------------*
MAIN0100 DS    0H
         MVC   0(MSG_02_L,R8),MSG_02 INITIALIZE MESSAGE
         USING MSG_02,R8
         MVC   MSG_02_VERSION,SMF66VER
         MVC   MSG_02_PRODUCT,SMF66PNM
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         MVC   0(MSG_03_L,R8),MSG_03 INITIALIZE MESSAGE
         USING MSG_03,R8
         MVC   MSG_03_JOB,SMF66JNM
         MVC   MSG_03_USER,SMF66UID
         DROP  R8
         A     R8,SPF_VWIDTH         NEXT LINE
         BCT   R6,MAIN0110
         B     EXIT0000

MAIN0110 DS    0H
         MVC   0(MSG_04_L,R8),MSG_04 INITIALIZE MESSAGE
         USING MSG_04,R8
         MVC   MSG_04_CATALOG,SMF66CNM
         DROP  R8
         A     R8,SPF_VWIDTH         NEXT LINE
         BCT   R6,MAIN0120
         B     EXIT0000
MAIN0120 DS    0H
         MVC   0(MSG_05_L,R8),MSG_05 INITIALIZE MESSAGE
         USING MSG_05,R8
         MVC   MSG_05_NAME,SMF66ENM
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         LA    R1,TYPE_TABLE         TYPE TABLE
         USING TYPE_DSECT,R1
MAIN0130 DS    0H
         ITRACE ID=X,DATA1=(TYPE,1),DATA2=(SMF66TYP,1)
         CLC   TYPE,SMF66TYP         TYPE LOCATED
         BE    MAIN0140              YES
         LA    R1,TYPE_L(,R1)        NEXT TYPE
         CLI   0(R1),X'FF'           END OF TABLE?
         BNE   MAIN0130              YES
MAIN0140 DS    0H
         MVC   0(MSG_06_L,R8),MSG_06
         USING MSG_06,R8
         MVC   MSG_06_TYPE,SMF66TYP
         MVC   MSG_06_DESC,TYPE_DESC
         DROP  R1,R8

         A     R8,SPF_VWIDTH         NEXT LINE
         BCT   R6,MAIN0150
         B     MAIN0160
MAIN0150 DS    0H
         CLI   SMF66FNC,C'R'         RENAME?
         BNE   MAIN0160              NO
         MVC   0(MSG_07_L,R8),MSG_07 INITIALIZE MESSAGE
         USING MSG_07,R8
         MVC   MSG_07_NAME,SMF66NNM
         A     R8,SPF_VWIDTH         NEXT LINE
         BCT   R6,MAIN0160
         B     EXIT0000
MAIN0160 DS    0H
         AH    R5,SMF66PLN           NEXT SECTION
         BCT   R4,MAIN0100           LOOP
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         B     EXITEXIT
EXIT0004 DS    0H
         LA    R2,4
EXITEXIT DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)          RESTORE R14
         LR    R15,R2                SET RC
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART        DC    Q(WK0066)

H4              DC    H'4'

DELETE          DC    CL6'DELETE'
INSERT          DC    CL6'INSERT'
UPDATE          DC    CL6'UPDATE'

MSG_01          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Activity          '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_ACTIVITY DC    CL6' '
MSG_01_L        EQU   *-MSG_01

MSG_02          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Product name      '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_PRODUCT  DC    CL8' '
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  Version'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_VERSION  DC    CL2' '
MSG_02_L        EQU   *-MSG_02

MSG_03          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Job name          '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_JOB      DC    CL8' '
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'  User ID'
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_USER     DC    CL8' '
MSG_03_L        EQU   *-MSG_03

MSG_04          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Catalog name      '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_CATALOG  DC    CL44' '
MSG_04_L        EQU   *-MSG_04

MSG_05          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Entry name        '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_NAME     DC    CL44' '
MSG_05_L        EQU   *-MSG_05

MSG_06          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'Type              '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_TYPE     DC    C' '
                DC    C'   '
MSG_06_DESC     DC    CL15' '
MSG_06_L        EQU   *-MSG_06

MSG_07          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'New name          '
                DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_NAME     DC    CL44' '
MSG_07_L        EQU   *-MSG_07

TYPE_TABLE      DS    0C
                DC    C'A',CL15'non VSAM'
                DC    C'B',CL15'GDG base'
                DC    C'C',CL15'VSAM Cluster'
                DC    C'D',CL15'Data set'
                DC    C'G',CL15'Alternate index'
                DC    C'I',CL15'Index'
                DC    C'M',CL15'Master catalog'
                DC    C'P',CL15'Page space'
                DC    C'R',CL15'Path'
                DC    C'U',CL15'User catalog'
                DC    C'V',CL15'Volume'
                DC    C'X',CL15'Alias name'
                DC    C'Y',CL15'Upgrade'
                DC    X'FF',CL15'Unknown'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0066         DSECT
               COPY    DXDPREF
DXD_A          DC      CL80' '
DXD_B          DC      CL80' '
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TYPE_DSECT     DSECT
TYPE           DS      C
TYPE_DESC      DS      CL15
TYPE_L         EQU     *-TYPE_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               IFASMFI6 66
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY    ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY    TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY    REGEQU
               END     SMF0066
